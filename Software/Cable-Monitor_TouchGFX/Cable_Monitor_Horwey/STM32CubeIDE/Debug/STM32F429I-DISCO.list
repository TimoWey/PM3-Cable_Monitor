
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002ba28  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171a4  0802bbd8  0802bbd8  0003bbd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08042d7c  08042d7c  00052d7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08046a74  08046a74  00056a74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000063c  08046cc0  08046cc0  00056cc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  080472fc  080472fc  000572fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cc3ec  080cc3ec  000e0184  2**0
                  CONTENTS
  8 .ARM          00000008  080cc3ec  080cc3ec  000dc3ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cc3f4  080cc3f4  000e0184  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cc3f4  080cc3f4  000dc3f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cc408  080cc408  000dc408  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000184  20000000  080cc40c  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013d6c  20000188  080cc590  000e0188  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20013ef4  080cc590  000e3ef4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0184  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e01b4  2**0
                  CONTENTS, READONLY
 18 .debug_line   00090402  00000000  00000000  000e02e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001706e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00221721  00000000  00000000  0017077b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c3c9  00000000  00000000  00391e9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004308  00000000  00000000  003be268  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f162  00000000  00000000  003c2570  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007a78  00000000  00000000  004e16d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003015d  00000000  00000000  004e914a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003a80c  00000000  00000000  005192a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c710  00000000  00000000  00553ab4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  005601c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0056353c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000188 	.word	0x20000188
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802bbc0 	.word	0x0802bbc0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000018c 	.word	0x2000018c
 80001ec:	0802bbc0 	.word	0x0802bbc0

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 fb8d 	bl	8008d94 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02a fd25 	bl	802b0c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa5f 	bl	8000b40 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080cc40c 	.word	0x080cc40c
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000184 	.word	0x20000184
  ldr  r2, =_sbss
 8000694:	20000188 	.word	0x20000188
  ldr  r3, = _ebss
 8000698:	20013ef4 	.word	0x20013ef4

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f008 fc93 	bl	8009110 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f008 fcfd 	bl	800920c <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f008 fbcc 	bl	8008fcc <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f008 fc88 	bl	800914c <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f008 fc7a 	bl	8009138 <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	200001a4 	.word	0x200001a4

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fe6d 	bl	8001558 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fe59 	bl	8001554 <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f028 fa10 	bl	8028d18 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f028 fa8c 	bl	8028e20 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f028 fef5 	bl	80296fc <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fe23 	bl	800155c <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f028 f985 	bl	8028c48 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fe09 	bl	800155c <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00c f994 	bl	800cca0 <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c10      	ldr	r4, [pc, #64]	; (80009c0 <StartTimeoutTask+0x44>)
 8000980:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80009cc <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000984:	4f0f      	ldr	r7, [pc, #60]	; (80009c4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000986:	4e10      	ldr	r6, [pc, #64]	; (80009c8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8000988:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098a:	2300      	movs	r3, #0
 800098c:	461a      	mov	r2, r3
 800098e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8000990:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000992:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8000996:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000998:	f00c fa7e 	bl	800ce98 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800099c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800099e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a0:	4638      	mov	r0, r7
 80009a2:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009a4:	b912      	cbnz	r2, 80009ac <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80009a6:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a8:	f008 fe04 	bl	80095b4 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009ac:	4630      	mov	r0, r6
 80009ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b2:	f008 fe03 	bl	80095bc <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80009b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80009ba:	f00c f971 	bl	800cca0 <osDelay>
	  sleep_timeout_value--;
 80009be:	e7e3      	b.n	8000988 <StartTimeoutTask+0xc>
 80009c0:	20000028 	.word	0x20000028
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40021800 	.word	0x40021800
 80009cc:	200001d8 	.word	0x200001d8

080009d0 <updateGUI_test>:
	return sleep_timeout_value;
 80009d0:	4b01      	ldr	r3, [pc, #4]	; (80009d8 <updateGUI_test+0x8>)
}
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	20000028 	.word	0x20000028

080009dc <gyro_disable>:
{
 80009dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e0:	4e1f      	ldr	r6, [pc, #124]	; (8000a60 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009e2:	4d20      	ldr	r5, [pc, #128]	; (8000a64 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80009e4:	4c20      	ldr	r4, [pc, #128]	; (8000a68 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e6:	2700      	movs	r7, #0
 80009e8:	9700      	str	r7, [sp, #0]
 80009ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009ec:	f043 0304 	orr.w	r3, r3, #4
 80009f0:	6333      	str	r3, [r6, #48]	; 0x30
 80009f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	f023 030c 	bic.w	r3, r3, #12
 8000a02:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	f043 0304 	orr.w	r3, r3, #4
 8000a0a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a12:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a14:	200a      	movs	r0, #10
 8000a16:	f008 f9f7 	bl	8008e08 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a1a:	682b      	ldr	r3, [r5, #0]
 8000a1c:	f043 030c 	orr.w	r3, r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a22:	9701      	str	r7, [sp, #4]
 8000a24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a26:	f043 0320 	orr.w	r3, r3, #32
 8000a2a:	6333      	str	r3, [r6, #48]	; 0x30
 8000a2c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a2e:	f003 0320 	and.w	r3, r3, #32
 8000a32:	9301      	str	r3, [sp, #4]
 8000a34:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a36:	68a3      	ldr	r3, [r4, #8]
 8000a38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a3c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a40:	f023 030f 	bic.w	r3, r3, #15
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a46:	68e3      	ldr	r3, [r4, #12]
 8000a48:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a4c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a4e:	200a      	movs	r0, #10
 8000a50:	f008 f9da 	bl	8008e08 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a54:	6823      	ldr	r3, [r4, #0]
 8000a56:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a5a:	6023      	str	r3, [r4, #0]
}
 8000a5c:	b003      	add	sp, #12
 8000a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40020800 	.word	0x40020800
 8000a68:	40021400 	.word	0x40021400

08000a6c <setCalibrationFlashValues>:
{
 8000a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a70:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8000a72:	009b      	lsls	r3, r3, #2
 8000a74:	3307      	adds	r3, #7
 8000a76:	466d      	mov	r5, sp
 8000a78:	08db      	lsrs	r3, r3, #3
 8000a7a:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8000a7e:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8000a80:	469d      	mov	sp, r3
 8000a82:	466d      	mov	r5, sp
{
 8000a84:	4616      	mov	r6, r2
 8000a86:	4681      	mov	r9, r0
 8000a88:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 8000a8a:	4622      	mov	r2, r4
 8000a8c:	4629      	mov	r1, r5
 8000a8e:	f7ff fedf 	bl	8000850 <Flash_Read_Data>
	Rx_Data[index] = value;
 8000a92:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 8000a96:	4622      	mov	r2, r4
 8000a98:	4629      	mov	r1, r5
 8000a9a:	4648      	mov	r0, r9
 8000a9c:	f7ff fe9e 	bl	80007dc <Flash_Write_Data>
}
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aa6:	bf00      	nop

08000aa8 <SystemClock_Config>:
{
 8000aa8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aaa:	2400      	movs	r4, #0
{
 8000aac:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aae:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000ab2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ab6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000aba:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000abe:	4a1e      	ldr	r2, [pc, #120]	; (8000b38 <SystemClock_Config+0x90>)
 8000ac0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ac2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ac6:	4b1d      	ldr	r3, [pc, #116]	; (8000b3c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000acc:	6411      	str	r1, [r2, #64]	; 0x40
 8000ace:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000ad0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000ad4:	9201      	str	r2, [sp, #4]
 8000ad6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad8:	9402      	str	r4, [sp, #8]
 8000ada:	681a      	ldr	r2, [r3, #0]
 8000adc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000ae0:	601a      	str	r2, [r3, #0]
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000ae8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000aea:	2201      	movs	r2, #1
 8000aec:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000af0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000af6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000afa:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000afe:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b02:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000b06:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b08:	2202      	movs	r2, #2
 8000b0a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b0c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b0e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b12:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b14:	f00a fb8c 	bl	800b230 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b18:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b1a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b1e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b26:	a803      	add	r0, sp, #12
 8000b28:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b2a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b2e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b30:	f00a fd96 	bl	800b660 <HAL_RCC_ClockConfig>
}
 8000b34:	b015      	add	sp, #84	; 0x54
 8000b36:	bd30      	pop	{r4, r5, pc}
 8000b38:	40023800 	.word	0x40023800
 8000b3c:	40007000 	.word	0x40007000

08000b40 <main>:
{
 8000b40:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b44:	2400      	movs	r4, #0
{
 8000b46:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8000b48:	f008 f932 	bl	8008db0 <HAL_Init>
  SystemClock_Config();
 8000b4c:	f7ff ffac 	bl	8000aa8 <SystemClock_Config>
  gyro_disable();
 8000b50:	f7ff ff44 	bl	80009dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b54:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000b58:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b5c:	4bbe      	ldr	r3, [pc, #760]	; (8000e58 <main+0x318>)
 8000b5e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b60:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b62:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b64:	48bd      	ldr	r0, [pc, #756]	; (8000e5c <main+0x31c>)
  hi2c3.Instance = I2C3;
 8000b66:	4dbe      	ldr	r5, [pc, #760]	; (8000e60 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b68:	f041 0110 	orr.w	r1, r1, #16
 8000b6c:	6319      	str	r1, [r3, #48]	; 0x30
 8000b6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b70:	f001 0110 	and.w	r1, r1, #16
 8000b74:	9100      	str	r1, [sp, #0]
 8000b76:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b78:	9401      	str	r4, [sp, #4]
 8000b7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b7c:	f041 0120 	orr.w	r1, r1, #32
 8000b80:	6319      	str	r1, [r3, #48]	; 0x30
 8000b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b84:	f001 0120 	and.w	r1, r1, #32
 8000b88:	9101      	str	r1, [sp, #4]
 8000b8a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b8c:	9402      	str	r4, [sp, #8]
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b90:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000b94:	6319      	str	r1, [r3, #48]	; 0x30
 8000b96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b98:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000b9c:	9102      	str	r1, [sp, #8]
 8000b9e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ba0:	9403      	str	r4, [sp, #12]
 8000ba2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ba4:	f041 0104 	orr.w	r1, r1, #4
 8000ba8:	6319      	str	r1, [r3, #48]	; 0x30
 8000baa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bac:	f001 0104 	and.w	r1, r1, #4
 8000bb0:	9103      	str	r1, [sp, #12]
 8000bb2:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bb4:	9404      	str	r4, [sp, #16]
 8000bb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb8:	f041 0101 	orr.w	r1, r1, #1
 8000bbc:	6319      	str	r1, [r3, #48]	; 0x30
 8000bbe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bc0:	f001 0101 	and.w	r1, r1, #1
 8000bc4:	9104      	str	r1, [sp, #16]
 8000bc6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bc8:	9405      	str	r4, [sp, #20]
 8000bca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bcc:	f041 0102 	orr.w	r1, r1, #2
 8000bd0:	6319      	str	r1, [r3, #48]	; 0x30
 8000bd2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bd4:	f001 0102 	and.w	r1, r1, #2
 8000bd8:	9105      	str	r1, [sp, #20]
 8000bda:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000bdc:	9406      	str	r4, [sp, #24]
 8000bde:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000be4:	6319      	str	r1, [r3, #48]	; 0x30
 8000be6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000bec:	9106      	str	r1, [sp, #24]
 8000bee:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bf0:	9407      	str	r4, [sp, #28]
 8000bf2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bf4:	f041 0108 	orr.w	r1, r1, #8
 8000bf8:	6319      	str	r1, [r3, #48]	; 0x30
 8000bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bfc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c00:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c02:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c04:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c06:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c08:	f008 fcd4 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000c0c:	4893      	ldr	r0, [pc, #588]	; (8000e5c <main+0x31c>)
 8000c0e:	2120      	movs	r1, #32
 8000c10:	2201      	movs	r2, #1
 8000c12:	f008 fccf 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000c16:	4893      	ldr	r0, [pc, #588]	; (8000e64 <main+0x324>)
 8000c18:	4622      	mov	r2, r4
 8000c1a:	2114      	movs	r1, #20
 8000c1c:	f008 fcca 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8000c20:	4891      	ldr	r0, [pc, #580]	; (8000e68 <main+0x328>)
 8000c22:	4622      	mov	r2, r4
 8000c24:	2180      	movs	r1, #128	; 0x80
 8000c26:	f008 fcc5 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000c2a:	4890      	ldr	r0, [pc, #576]	; (8000e6c <main+0x32c>)
 8000c2c:	4622      	mov	r2, r4
 8000c2e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c32:	f008 fcbf 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000c36:	488e      	ldr	r0, [pc, #568]	; (8000e70 <main+0x330>)
 8000c38:	4622      	mov	r2, r4
 8000c3a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c3e:	f008 fcb9 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c42:	488c      	ldr	r0, [pc, #560]	; (8000e74 <main+0x334>)
 8000c44:	4622      	mov	r2, r4
 8000c46:	2104      	movs	r1, #4
 8000c48:	f008 fcb4 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c4c:	2201      	movs	r2, #1
 8000c4e:	4889      	ldr	r0, [pc, #548]	; (8000e74 <main+0x334>)
 8000c50:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c54:	f008 fcae 	bl	80095b4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c58:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c5a:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c5e:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c60:	487e      	ldr	r0, [pc, #504]	; (8000e5c <main+0x31c>)
 8000c62:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c64:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c68:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c6c:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c70:	f008 fb5c 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c74:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c78:	4878      	ldr	r0, [pc, #480]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c7a:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c7e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c80:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c82:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c84:	f008 fb52 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c88:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c8a:	4874      	ldr	r0, [pc, #464]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c8c:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c8e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c90:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c92:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c96:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c9a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c9c:	f008 fb46 	bl	800932c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca0:	4870      	ldr	r0, [pc, #448]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000ca2:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cac:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cae:	f008 fb3d 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000cb2:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb4:	486c      	ldr	r0, [pc, #432]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000cb6:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb8:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cba:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cbe:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cc2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cc4:	f008 fb32 	bl	800932c <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cc8:	4866      	ldr	r0, [pc, #408]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cca:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ccc:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cce:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cd2:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cd6:	f008 fb29 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cda:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cde:	4863      	ldr	r0, [pc, #396]	; (8000e6c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ce0:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ce8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cea:	f008 fb1f 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cee:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cf2:	485f      	ldr	r0, [pc, #380]	; (8000e70 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cf4:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cf6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cfc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cfe:	f008 fb15 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d02:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d06:	485b      	ldr	r0, [pc, #364]	; (8000e74 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d08:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d0a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d0c:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d10:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d12:	f008 fb0b 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d16:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d1a:	4853      	ldr	r0, [pc, #332]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d1c:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d1e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000d20:	220f      	movs	r2, #15
 8000d22:	9213      	str	r2, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d24:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d28:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d2a:	f008 faff 	bl	800932c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000d2e:	2105      	movs	r1, #5
 8000d30:	4622      	mov	r2, r4
 8000d32:	2009      	movs	r0, #9
 8000d34:	f008 f88c 	bl	8008e50 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000d38:	2009      	movs	r0, #9
 8000d3a:	f008 f8c7 	bl	8008ecc <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d3e:	484e      	ldr	r0, [pc, #312]	; (8000e78 <main+0x338>)
 8000d40:	4a4e      	ldr	r2, [pc, #312]	; (8000e7c <main+0x33c>)
 8000d42:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d44:	f008 f8d0 	bl	8008ee8 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d48:	494d      	ldr	r1, [pc, #308]	; (8000e80 <main+0x340>)
 8000d4a:	4a4e      	ldr	r2, [pc, #312]	; (8000e84 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d4c:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8000d4e:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d52:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d56:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d58:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d5c:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d60:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d64:	f008 fe8c 	bl	8009a80 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d68:	4641      	mov	r1, r8
 8000d6a:	4628      	mov	r0, r5
 8000d6c:	f00a f854 	bl	800ae18 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d70:	4621      	mov	r1, r4
 8000d72:	4628      	mov	r0, r5
 8000d74:	f00a f870 	bl	800ae58 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d78:	f8df c11c 	ldr.w	ip, [pc, #284]	; 8000e98 <main+0x358>
  hspi5.Instance = SPI5;
 8000d7c:	4842      	ldr	r0, [pc, #264]	; (8000e88 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d7e:	4d43      	ldr	r5, [pc, #268]	; (8000e8c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d80:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d82:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d86:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d8a:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d8e:	2218      	movs	r2, #24
 8000d90:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d94:	220a      	movs	r2, #10
 8000d96:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d98:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d9c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000da0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000da4:	f00a ff4a 	bl	800bc3c <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000da8:	2207      	movs	r2, #7
 8000daa:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8000dac:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000dae:	4a38      	ldr	r2, [pc, #224]	; (8000e90 <main+0x350>)
 8000db0:	602a      	str	r2, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000db2:	2040      	movs	r0, #64	; 0x40
 8000db4:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000db8:	e9c5 0205 	strd	r0, r2, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000dbc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000dc0:	622a      	str	r2, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc2:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dc4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc8:	4628      	mov	r0, r5
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000dca:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000dce:	e9c5 a803 	strd	sl, r8, [r5, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dd2:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.RPDelay = 2;
 8000dd4:	e9cd b713 	strd	fp, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000dd8:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000dda:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000ddc:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8000de0:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 8000de2:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000de4:	f00a fe38 	bl	800ba58 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000de8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dec:	a90b      	add	r1, sp, #44	; 0x2c
 8000dee:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000df0:	e9cd 690b 	strd	r6, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000df4:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8000df8:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dfa:	f00a fe4f 	bl	800ba9c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000dfe:	4630      	mov	r0, r6
 8000e00:	f008 f802 	bl	8008e08 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e04:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e08:	a90b      	add	r1, sp, #44	; 0x2c
 8000e0a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e0c:	e9cd 790b 	strd	r7, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e10:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e14:	f00a fe42 	bl	800ba9c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e18:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e1c:	a90b      	add	r1, sp, #44	; 0x2c
 8000e1e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e20:	e9cd b90b 	strd	fp, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e24:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e28:	f00a fe38 	bl	800ba9c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000e2c:	f44f 720c 	mov.w	r2, #560	; 0x230
 8000e30:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000e32:	9908      	ldr	r1, [sp, #32]
 8000e34:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e36:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e3a:	a90b      	add	r1, sp, #44	; 0x2c
 8000e3c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e3e:	e9cd a90b 	strd	sl, r9, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8000e42:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e44:	f00a fe2a 	bl	800ba9c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e48:	4628      	mov	r0, r5
 8000e4a:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8000e4e:	4d11      	ldr	r5, [pc, #68]	; (8000e94 <main+0x354>)
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e50:	f00a fe42 	bl	800bad8 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e54:	4621      	mov	r1, r4
 8000e56:	e021      	b.n	8000e9c <main+0x35c>
 8000e58:	40023800 	.word	0x40023800
 8000e5c:	40021000 	.word	0x40021000
 8000e60:	200001ec 	.word	0x200001ec
 8000e64:	40020800 	.word	0x40020800
 8000e68:	40020000 	.word	0x40020000
 8000e6c:	40020400 	.word	0x40020400
 8000e70:	40020c00 	.word	0x40020c00
 8000e74:	40021800 	.word	0x40021800
 8000e78:	200001e4 	.word	0x200001e4
 8000e7c:	40023000 	.word	0x40023000
 8000e80:	40005c00 	.word	0x40005c00
 8000e84:	000186a0 	.word	0x000186a0
 8000e88:	2000031c 	.word	0x2000031c
 8000e8c:	200002e8 	.word	0x200002e8
 8000e90:	a0000140 	.word	0xa0000140
 8000e94:	20000240 	.word	0x20000240
 8000e98:	40015000 	.word	0x40015000
 8000e9c:	2234      	movs	r2, #52	; 0x34
 8000e9e:	a80f      	add	r0, sp, #60	; 0x3c
 8000ea0:	f02a f813 	bl	802aeca <memset>
  hltdc.Instance = LTDC;
 8000ea4:	4a75      	ldr	r2, [pc, #468]	; (800107c <main+0x53c>)
 8000ea6:	602a      	str	r2, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 8000ea8:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedVBP = 3;
 8000eaa:	f8c5 b020 	str.w	fp, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8000eae:	61ea      	str	r2, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000eb0:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000eb4:	f240 1243 	movw	r2, #323	; 0x143
  hltdc.Init.TotalHeigh = 327;
 8000eb8:	f240 1317 	movw	r3, #279	; 0x117
  hltdc.Init.AccumulatedActiveH = 323;
 8000ebc:	e9c5 b209 	strd	fp, r2, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8000ec0:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8000ec2:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.HorizontalSync = 9;
 8000ec6:	f04f 0909 	mov.w	r9, #9
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000eca:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8000ecc:	e9c5 320b 	strd	r3, r2, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000ed0:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000ed2:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000ed6:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8000eda:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 8000ede:	f8c5 9014 	str.w	r9, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ee2:	f009 ffdd 	bl	800aea0 <HAL_LTDC_Init>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ee6:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 240;
 8000ee8:	25f0      	movs	r5, #240	; 0xf0
 8000eea:	9510      	str	r5, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8000eec:	9519      	str	r5, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8000eee:	f44f 75a0 	mov.w	r5, #320	; 0x140
 8000ef2:	9512      	str	r5, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8000ef4:	951a      	str	r5, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8000ef6:	25ff      	movs	r5, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ef8:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000efc:	a90f      	add	r1, sp, #60	; 0x3c
 8000efe:	4622      	mov	r2, r4
  pLayerCfg.Alpha = 255;
 8000f00:	9514      	str	r5, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000f02:	2505      	movs	r5, #5
 8000f04:	e9cd c516 	strd	ip, r5, [sp, #88]	; 0x58
  pLayerCfg.WindowX0 = 0;
 8000f08:	940f      	str	r4, [sp, #60]	; 0x3c
  LcdDrv = &ili9341_drv;
 8000f0a:	4d5d      	ldr	r5, [pc, #372]	; (8001080 <main+0x540>)
  pLayerCfg.WindowY0 = 0;
 8000f0c:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000f0e:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 8000f10:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8000f12:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000f14:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8000f18:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000f1c:	f00a f896 	bl	800b04c <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000f20:	4a58      	ldr	r2, [pc, #352]	; (8001084 <main+0x544>)
 8000f22:	602a      	str	r2, [r5, #0]
  LcdDrv->Init();
 8000f24:	6812      	ldr	r2, [r2, #0]
  htim1.Instance = TIM1;
 8000f26:	4e58      	ldr	r6, [pc, #352]	; (8001088 <main+0x548>)
  LcdDrv->Init();
 8000f28:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8000f2a:	682a      	ldr	r2, [r5, #0]
  htim3.Instance = TIM3;
 8000f2c:	4d57      	ldr	r5, [pc, #348]	; (800108c <main+0x54c>)
  LcdDrv->DisplayOff();
 8000f2e:	68d2      	ldr	r2, [r2, #12]
 8000f30:	4790      	blx	r2
  htim1.Init.Period = 65535;
 8000f32:	f64f 7aff 	movw	sl, #65535	; 0xffff
  htim1.Instance = TIM1;
 8000f36:	4a56      	ldr	r2, [pc, #344]	; (8001090 <main+0x550>)
 8000f38:	6032      	str	r2, [r6, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f3a:	4630      	mov	r0, r6
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f3c:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim1.Init.RepetitionCounter = 0;
 8000f40:	e9c6 4404 	strd	r4, r4, [r6, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f44:	61b4      	str	r4, [r6, #24]
  htim1.Init.Period = 65535;
 8000f46:	f8c6 a00c 	str.w	sl, [r6, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f4a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f4e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f52:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f56:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f58:	f00b fa60 	bl	800c41c <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f5c:	a90f      	add	r1, sp, #60	; 0x3c
 8000f5e:	4630      	mov	r0, r6
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f60:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f64:	f00b fbd4 	bl	800c710 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f68:	a90b      	add	r1, sp, #44	; 0x2c
 8000f6a:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f6c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f70:	f00b fd0c 	bl	800c98c <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8000f74:	4a47      	ldr	r2, [pc, #284]	; (8001094 <main+0x554>)
 8000f76:	602a      	str	r2, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f78:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f7a:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8000f7e:	f8c5 a00c 	str.w	sl, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f82:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f84:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f86:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000f8a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f8e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f92:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8000f96:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f98:	9409      	str	r4, [sp, #36]	; 0x24
 8000f9a:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f9c:	f00b fa3e 	bl	800c41c <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fa0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fa4:	a90b      	add	r1, sp, #44	; 0x2c
 8000fa6:	4628      	mov	r0, r5
  htim2.Instance = TIM2;
 8000fa8:	4e3b      	ldr	r6, [pc, #236]	; (8001098 <main+0x558>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000faa:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fac:	f00b fb00 	bl	800c5b0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb0:	a90f      	add	r1, sp, #60	; 0x3c
 8000fb2:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000fb4:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb8:	f00b fbaa 	bl	800c710 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fbc:	a909      	add	r1, sp, #36	; 0x24
 8000fbe:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fc0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fc4:	f00b fce2 	bl	800c98c <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Prescaler = 13124;
 8000fc8:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 8000fcc:	f243 3244 	movw	r2, #13124	; 0x3344
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd0:	2380      	movs	r3, #128	; 0x80
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fd2:	4630      	mov	r0, r6
  htim2.Init.Prescaler = 13124;
 8000fd4:	e9c6 e200 	strd	lr, r2, [r6]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd8:	61b3      	str	r3, [r6, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fda:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000fde:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fe2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.Period = 9;
 8000fe6:	f8c6 900c 	str.w	r9, [r6, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000fea:	60b4      	str	r4, [r6, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000fec:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fee:	f00b fa15 	bl	800c41c <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ff2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ff6:	a90f      	add	r1, sp, #60	; 0x3c
 8000ff8:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ffa:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ffc:	f00b fad8 	bl	800c5b0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001000:	a90b      	add	r1, sp, #44	; 0x2c
 8001002:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001004:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001008:	f00b fcc0 	bl	800c98c <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 800100c:	f000 fe04 	bl	8001c18 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001010:	f000 fe00 	bl	8001c14 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001014:	f7ff fce2 	bl	80009dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001018:	f000 f95e 	bl	80012d8 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 800101c:	f000 f990 	bl	8001340 <MEAS_timer_init>
  Flash_Write_Data(SECTOR_23_ADDR, data_addr, 6);
 8001020:	4b1e      	ldr	r3, [pc, #120]	; (800109c <main+0x55c>)
 8001022:	481f      	ldr	r0, [pc, #124]	; (80010a0 <main+0x560>)
 8001024:	6819      	ldr	r1, [r3, #0]
 8001026:	2206      	movs	r2, #6
 8001028:	f7ff fbd8 	bl	80007dc <Flash_Write_Data>
  Flash_Read_Data(SECTOR_23_ADDR, Rx_Data, 6);
 800102c:	491d      	ldr	r1, [pc, #116]	; (80010a4 <main+0x564>)
 800102e:	481c      	ldr	r0, [pc, #112]	; (80010a0 <main+0x560>)
 8001030:	2206      	movs	r2, #6
 8001032:	f7ff fc0d 	bl	8000850 <Flash_Read_Data>
  osKernelInitialize();
 8001036:	f00b fdbb 	bl	800cbb0 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800103a:	4a1b      	ldr	r2, [pc, #108]	; (80010a8 <main+0x568>)
 800103c:	4639      	mov	r1, r7
 800103e:	4640      	mov	r0, r8
 8001040:	f00b fef0 	bl	800ce24 <osMessageQueueNew>
 8001044:	4b19      	ldr	r3, [pc, #100]	; (80010ac <main+0x56c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001046:	4a1a      	ldr	r2, [pc, #104]	; (80010b0 <main+0x570>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001048:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800104a:	4621      	mov	r1, r4
 800104c:	4819      	ldr	r0, [pc, #100]	; (80010b4 <main+0x574>)
 800104e:	f00b fddb 	bl	800cc08 <osThreadNew>
 8001052:	4b19      	ldr	r3, [pc, #100]	; (80010b8 <main+0x578>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001054:	4a19      	ldr	r2, [pc, #100]	; (80010bc <main+0x57c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001056:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001058:	4621      	mov	r1, r4
 800105a:	4819      	ldr	r0, [pc, #100]	; (80010c0 <main+0x580>)
 800105c:	f00b fdd4 	bl	800cc08 <osThreadNew>
 8001060:	4b18      	ldr	r3, [pc, #96]	; (80010c4 <main+0x584>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001062:	4a19      	ldr	r2, [pc, #100]	; (80010c8 <main+0x588>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001064:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001066:	4621      	mov	r1, r4
 8001068:	4818      	ldr	r0, [pc, #96]	; (80010cc <main+0x58c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800106a:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800106c:	f00b fdcc 	bl	800cc08 <osThreadNew>
 8001070:	4b17      	ldr	r3, [pc, #92]	; (80010d0 <main+0x590>)
 8001072:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001074:	f00b fdae 	bl	800cbd4 <osKernelStart>
  while (1)
 8001078:	e7fe      	b.n	8001078 <main+0x538>
 800107a:	bf00      	nop
 800107c:	40016800 	.word	0x40016800
 8001080:	200001bc 	.word	0x200001bc
 8001084:	20000034 	.word	0x20000034
 8001088:	20000374 	.word	0x20000374
 800108c:	20000404 	.word	0x20000404
 8001090:	40010000 	.word	0x40010000
 8001094:	40000400 	.word	0x40000400
 8001098:	200003bc 	.word	0x200003bc
 800109c:	20000024 	.word	0x20000024
 80010a0:	081e0000 	.word	0x081e0000
 80010a4:	200001c0 	.word	0x200001c0
 80010a8:	0802bc70 	.word	0x0802bc70
 80010ac:	200001d8 	.word	0x200001d8
 80010b0:	0802bcac 	.word	0x0802bcac
 80010b4:	08000971 	.word	0x08000971
 80010b8:	200001e0 	.word	0x200001e0
 80010bc:	0802bc4c 	.word	0x0802bc4c
 80010c0:	08001c29 	.word	0x08001c29
 80010c4:	200001b8 	.word	0x200001b8
 80010c8:	0802bc88 	.word	0x0802bc88
 80010cc:	0800097d 	.word	0x0800097d
 80010d0:	200001dc 	.word	0x200001dc

080010d4 <IOE_Init>:
 80010d4:	4770      	bx	lr
 80010d6:	bf00      	nop

080010d8 <IOE_ITConfig>:
 80010d8:	4770      	bx	lr
 80010da:	bf00      	nop

080010dc <IOE_Write>:
{
 80010dc:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010de:	4c09      	ldr	r4, [pc, #36]	; (8001104 <IOE_Write+0x28>)
{
 80010e0:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010e2:	6824      	ldr	r4, [r4, #0]
 80010e4:	9402      	str	r4, [sp, #8]
{
 80010e6:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010e8:	2301      	movs	r3, #1
 80010ea:	f88d 4017 	strb.w	r4, [sp, #23]
 80010ee:	f10d 0417 	add.w	r4, sp, #23
 80010f2:	460a      	mov	r2, r1
 80010f4:	9301      	str	r3, [sp, #4]
 80010f6:	4601      	mov	r1, r0
 80010f8:	9400      	str	r4, [sp, #0]
 80010fa:	4803      	ldr	r0, [pc, #12]	; (8001108 <IOE_Write+0x2c>)
 80010fc:	f008 fd88 	bl	8009c10 <HAL_I2C_Mem_Write>
}
 8001100:	b006      	add	sp, #24
 8001102:	bd10      	pop	{r4, pc}
 8001104:	2000001c 	.word	0x2000001c
 8001108:	200001ec 	.word	0x200001ec

0800110c <IOE_Read>:
{
 800110c:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800110e:	4b0b      	ldr	r3, [pc, #44]	; (800113c <IOE_Read+0x30>)
{
 8001110:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001112:	681b      	ldr	r3, [r3, #0]
 8001114:	9302      	str	r3, [sp, #8]
{
 8001116:	4684      	mov	ip, r0
 8001118:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800111a:	2301      	movs	r3, #1
 800111c:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001120:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001122:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001126:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800112a:	4661      	mov	r1, ip
 800112c:	4804      	ldr	r0, [pc, #16]	; (8001140 <IOE_Read+0x34>)
 800112e:	f008 fe61 	bl	8009df4 <HAL_I2C_Mem_Read>
}
 8001132:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001136:	b007      	add	sp, #28
 8001138:	f85d fb04 	ldr.w	pc, [sp], #4
 800113c:	2000001c 	.word	0x2000001c
 8001140:	200001ec 	.word	0x200001ec

08001144 <IOE_ReadMultiple>:
{
 8001144:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001146:	4c09      	ldr	r4, [pc, #36]	; (800116c <IOE_ReadMultiple+0x28>)
{
 8001148:	b084      	sub	sp, #16
 800114a:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800114c:	6820      	ldr	r0, [r4, #0]
 800114e:	9002      	str	r0, [sp, #8]
 8001150:	e9cd 2300 	strd	r2, r3, [sp]
 8001154:	4806      	ldr	r0, [pc, #24]	; (8001170 <IOE_ReadMultiple+0x2c>)
 8001156:	460a      	mov	r2, r1
 8001158:	2301      	movs	r3, #1
 800115a:	4661      	mov	r1, ip
 800115c:	f008 fe4a 	bl	8009df4 <HAL_I2C_Mem_Read>
}
 8001160:	3800      	subs	r0, #0
 8001162:	bf18      	it	ne
 8001164:	2001      	movne	r0, #1
 8001166:	b004      	add	sp, #16
 8001168:	bd10      	pop	{r4, pc}
 800116a:	bf00      	nop
 800116c:	2000001c 	.word	0x2000001c
 8001170:	200001ec 	.word	0x200001ec

08001174 <IOE_Delay>:
 8001174:	f007 be48 	b.w	8008e08 <HAL_Delay>

08001178 <LCD_IO_Init>:
{
 8001178:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800117a:	4806      	ldr	r0, [pc, #24]	; (8001194 <LCD_IO_Init+0x1c>)
 800117c:	2200      	movs	r2, #0
 800117e:	2104      	movs	r1, #4
 8001180:	f008 fa18 	bl	80095b4 <HAL_GPIO_WritePin>
}
 8001184:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001188:	4802      	ldr	r0, [pc, #8]	; (8001194 <LCD_IO_Init+0x1c>)
 800118a:	2201      	movs	r2, #1
 800118c:	2104      	movs	r1, #4
 800118e:	f008 ba11 	b.w	80095b4 <HAL_GPIO_WritePin>
 8001192:	bf00      	nop
 8001194:	40020800 	.word	0x40020800

08001198 <LCD_IO_WriteData>:
{
 8001198:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800119a:	4d10      	ldr	r5, [pc, #64]	; (80011dc <LCD_IO_WriteData+0x44>)
{
 800119c:	b083      	sub	sp, #12
 800119e:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80011a0:	2201      	movs	r2, #1
 80011a2:	480f      	ldr	r0, [pc, #60]	; (80011e0 <LCD_IO_WriteData+0x48>)
 80011a4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011a8:	f008 fa04 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011ac:	4628      	mov	r0, r5
 80011ae:	2200      	movs	r2, #0
 80011b0:	2104      	movs	r1, #4
 80011b2:	f008 f9ff 	bl	80095b4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011b6:	4b0b      	ldr	r3, [pc, #44]	; (80011e4 <LCD_IO_WriteData+0x4c>)
 80011b8:	480b      	ldr	r0, [pc, #44]	; (80011e8 <LCD_IO_WriteData+0x50>)
 80011ba:	681b      	ldr	r3, [r3, #0]
 80011bc:	f8ad 4006 	strh.w	r4, [sp, #6]
 80011c0:	f10d 0106 	add.w	r1, sp, #6
 80011c4:	2201      	movs	r2, #1
 80011c6:	f00a fd9b 	bl	800bd00 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011ca:	2201      	movs	r2, #1
 80011cc:	2104      	movs	r1, #4
 80011ce:	4628      	mov	r0, r5
}
 80011d0:	b003      	add	sp, #12
 80011d2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011d6:	f008 b9ed 	b.w	80095b4 <HAL_GPIO_WritePin>
 80011da:	bf00      	nop
 80011dc:	40020800 	.word	0x40020800
 80011e0:	40020c00 	.word	0x40020c00
 80011e4:	20000020 	.word	0x20000020
 80011e8:	2000031c 	.word	0x2000031c

080011ec <LCD_IO_WriteReg>:
{
 80011ec:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011ee:	4d10      	ldr	r5, [pc, #64]	; (8001230 <LCD_IO_WriteReg+0x44>)
{
 80011f0:	b083      	sub	sp, #12
 80011f2:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80011f4:	2200      	movs	r2, #0
 80011f6:	480f      	ldr	r0, [pc, #60]	; (8001234 <LCD_IO_WriteReg+0x48>)
 80011f8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011fc:	f008 f9da 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001200:	4628      	mov	r0, r5
 8001202:	2200      	movs	r2, #0
 8001204:	2104      	movs	r1, #4
 8001206:	f008 f9d5 	bl	80095b4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800120a:	4b0b      	ldr	r3, [pc, #44]	; (8001238 <LCD_IO_WriteReg+0x4c>)
 800120c:	480b      	ldr	r0, [pc, #44]	; (800123c <LCD_IO_WriteReg+0x50>)
 800120e:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001210:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001214:	f10d 0106 	add.w	r1, sp, #6
 8001218:	2201      	movs	r2, #1
 800121a:	f00a fd71 	bl	800bd00 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800121e:	2201      	movs	r2, #1
 8001220:	2104      	movs	r1, #4
 8001222:	4628      	mov	r0, r5
}
 8001224:	b003      	add	sp, #12
 8001226:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800122a:	f008 b9c3 	b.w	80095b4 <HAL_GPIO_WritePin>
 800122e:	bf00      	nop
 8001230:	40020800 	.word	0x40020800
 8001234:	40020c00 	.word	0x40020c00
 8001238:	20000020 	.word	0x20000020
 800123c:	2000031c 	.word	0x2000031c

08001240 <LCD_IO_ReadData>:
{
 8001240:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001244:	4e19      	ldr	r6, [pc, #100]	; (80012ac <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001246:	4f1a      	ldr	r7, [pc, #104]	; (80012b0 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001248:	f8df 9068 	ldr.w	r9, [pc, #104]	; 80012b4 <LCD_IO_ReadData+0x74>
 800124c:	f8df 8068 	ldr.w	r8, [pc, #104]	; 80012b8 <LCD_IO_ReadData+0x78>
{
 8001250:	b083      	sub	sp, #12
 8001252:	460c      	mov	r4, r1
 8001254:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001256:	2200      	movs	r2, #0
 8001258:	4630      	mov	r0, r6
 800125a:	2104      	movs	r1, #4
 800125c:	f008 f9aa 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001260:	4638      	mov	r0, r7
 8001262:	2200      	movs	r2, #0
 8001264:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001268:	f008 f9a4 	bl	80095b4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800126c:	f8d9 3000 	ldr.w	r3, [r9]
 8001270:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001274:	a901      	add	r1, sp, #4
 8001276:	2201      	movs	r2, #1
 8001278:	4640      	mov	r0, r8
 800127a:	f00a fd41 	bl	800bd00 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800127e:	f8d9 3000 	ldr.w	r3, [r9]
 8001282:	4622      	mov	r2, r4
 8001284:	a901      	add	r1, sp, #4
 8001286:	4640      	mov	r0, r8
 8001288:	f00a ffe2 	bl	800c250 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800128c:	4638      	mov	r0, r7
 800128e:	2201      	movs	r2, #1
 8001290:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001294:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001296:	f008 f98d 	bl	80095b4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800129a:	4630      	mov	r0, r6
 800129c:	2201      	movs	r2, #1
 800129e:	2104      	movs	r1, #4
 80012a0:	f008 f988 	bl	80095b4 <HAL_GPIO_WritePin>
}
 80012a4:	4620      	mov	r0, r4
 80012a6:	b003      	add	sp, #12
 80012a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80012ac:	40020800 	.word	0x40020800
 80012b0:	40020c00 	.word	0x40020c00
 80012b4:	20000020 	.word	0x20000020
 80012b8:	2000031c 	.word	0x2000031c

080012bc <LCD_Delay>:
  HAL_Delay(Delay);
 80012bc:	f007 bda4 	b.w	8008e08 <HAL_Delay>

080012c0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80012c0:	4b03      	ldr	r3, [pc, #12]	; (80012d0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80012c2:	6802      	ldr	r2, [r0, #0]
 80012c4:	429a      	cmp	r2, r3
 80012c6:	d000      	beq.n	80012ca <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80012c8:	4770      	bx	lr
    HAL_IncTick();
 80012ca:	f007 bd8b 	b.w	8008de4 <HAL_IncTick>
 80012ce:	bf00      	nop
 80012d0:	40001000 	.word	0x40001000

080012d4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80012d4:	4770      	bx	lr
 80012d6:	bf00      	nop

080012d8 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 80012d8:	b410      	push	{r4}
 80012da:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012dc:	4b15      	ldr	r3, [pc, #84]	; (8001334 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012de:	4916      	ldr	r1, [pc, #88]	; (8001338 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012e0:	2400      	movs	r4, #0
 80012e2:	9400      	str	r4, [sp, #0]
 80012e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012e6:	f042 0220 	orr.w	r2, r2, #32
 80012ea:	631a      	str	r2, [r3, #48]	; 0x30
 80012ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012ee:	f002 0220 	and.w	r2, r2, #32
 80012f2:	9200      	str	r2, [sp, #0]
 80012f4:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012f6:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80012f8:	4a10      	ldr	r2, [pc, #64]	; (800133c <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012fa:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80012fe:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001300:	6808      	ldr	r0, [r1, #0]
 8001302:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001306:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001308:	9401      	str	r4, [sp, #4]
 800130a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800130c:	f041 0104 	orr.w	r1, r1, #4
 8001310:	6319      	str	r1, [r3, #48]	; 0x30
 8001312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001314:	f003 0304 	and.w	r3, r3, #4
 8001318:	9301      	str	r3, [sp, #4]
 800131a:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 800131c:	6813      	ldr	r3, [r2, #0]
 800131e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001322:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001324:	6813      	ldr	r3, [r2, #0]
 8001326:	f043 030c 	orr.w	r3, r3, #12
 800132a:	6013      	str	r3, [r2, #0]
}
 800132c:	b003      	add	sp, #12
 800132e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001332:	4770      	bx	lr
 8001334:	40023800 	.word	0x40023800
 8001338:	40021400 	.word	0x40021400
 800133c:	40020800 	.word	0x40020800

08001340 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001340:	b410      	push	{r4}
 8001342:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001344:	4a0e      	ldr	r2, [pc, #56]	; (8001380 <MEAS_timer_init+0x40>)
 8001346:	2000      	movs	r0, #0
 8001348:	9001      	str	r0, [sp, #4]
 800134a:	6c11      	ldr	r1, [r2, #64]	; 0x40
 800134c:	f041 0101 	orr.w	r1, r1, #1
 8001350:	6411      	str	r1, [r2, #64]	; 0x40
 8001352:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001354:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001358:	f002 0201 	and.w	r2, r2, #1
 800135c:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800135e:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001362:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001364:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001366:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001368:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 800136a:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800136c:	4905      	ldr	r1, [pc, #20]	; (8001384 <MEAS_timer_init+0x44>)
 800136e:	f042 0220 	orr.w	r2, r2, #32
 8001372:	605a      	str	r2, [r3, #4]
 8001374:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001378:	b003      	add	sp, #12
 800137a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800137e:	4770      	bx	lr
 8001380:	40023800 	.word	0x40023800
 8001384:	e000e100 	.word	0xe000e100

08001388 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001388:	b410      	push	{r4}
 800138a:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800138c:	4a36      	ldr	r2, [pc, #216]	; (8001468 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 800138e:	4b37      	ldr	r3, [pc, #220]	; (800146c <MEAS_ADC3_scan_init+0xe4>)
 8001390:	4c37      	ldr	r4, [pc, #220]	; (8001470 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001392:	2100      	movs	r1, #0
 8001394:	9100      	str	r1, [sp, #0]
 8001396:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001398:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 800139c:	6450      	str	r0, [r2, #68]	; 0x44
 800139e:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80013a0:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 80013a4:	9000      	str	r0, [sp, #0]
 80013a6:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 80013a8:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80013aa:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 80013ae:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 80013b0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013b2:	f040 0004 	orr.w	r0, r0, #4
 80013b6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 80013b8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013ba:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 80013be:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 80013c0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013c2:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 80013c6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 80013c8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013ca:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 80013ce:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 80013d0:	6858      	ldr	r0, [r3, #4]
 80013d2:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013d6:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 80013d8:	6898      	ldr	r0, [r3, #8]
 80013da:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80013de:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 80013e0:	6898      	ldr	r0, [r3, #8]
 80013e2:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80013e6:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80013e8:	6898      	ldr	r0, [r3, #8]
 80013ea:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013ee:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80013f0:	9101      	str	r1, [sp, #4]
 80013f2:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80013f4:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80013f8:	6310      	str	r0, [r2, #48]	; 0x30
 80013fa:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80013fc:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001400:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001402:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001406:	9a01      	ldr	r2, [sp, #4]
 8001408:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 800140c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800140e:	f022 0201 	bic.w	r2, r2, #1
 8001412:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001414:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001416:	07d2      	lsls	r2, r2, #31
 8001418:	d4fc      	bmi.n	8001414 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 800141a:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 800141c:	4815      	ldr	r0, [pc, #84]	; (8001474 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800141e:	4916      	ldr	r1, [pc, #88]	; (8001478 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001420:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001424:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001426:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001428:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800142c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 800142e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001430:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001434:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001436:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001438:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800143c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 800143e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001440:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001444:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001446:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001448:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800144c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800144e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001450:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001454:	f042 0210 	orr.w	r2, r2, #16
 8001458:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800145a:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 800145c:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800145e:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001460:	b003      	add	sp, #12
 8001462:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001466:	4770      	bx	lr
 8001468:	40023800 	.word	0x40023800
 800146c:	40012200 	.word	0x40012200
 8001470:	e000e100 	.word	0xe000e100
 8001474:	4001224c 	.word	0x4001224c
 8001478:	2000044c 	.word	0x2000044c

0800147c <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 800147c:	4b1b      	ldr	r3, [pc, #108]	; (80014ec <DMA2_Stream1_IRQHandler+0x70>)
 800147e:	681a      	ldr	r2, [r3, #0]
 8001480:	0511      	lsls	r1, r2, #20
 8001482:	d400      	bmi.n	8001486 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001484:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001486:	4a1a      	ldr	r2, [pc, #104]	; (80014f0 <DMA2_Stream1_IRQHandler+0x74>)
 8001488:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 800148c:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001490:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001494:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001498:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 800149c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800149e:	f022 0201 	bic.w	r2, r2, #1
 80014a2:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80014a4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80014a6:	07d2      	lsls	r2, r2, #31
 80014a8:	d4fc      	bmi.n	80014a4 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 80014aa:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014ac:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 80014b0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 80014b4:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014b6:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014b8:	490e      	ldr	r1, [pc, #56]	; (80014f4 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014ba:	f023 0301 	bic.w	r3, r3, #1
 80014be:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014c0:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014c2:	4b0d      	ldr	r3, [pc, #52]	; (80014f8 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014c4:	f020 0001 	bic.w	r0, r0, #1
 80014c8:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 80014ca:	6888      	ldr	r0, [r1, #8]
 80014cc:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80014d0:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014d2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014d4:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80014d8:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80014da:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014dc:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80014e0:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80014e2:	6813      	ldr	r3, [r2, #0]
 80014e4:	f023 0301 	bic.w	r3, r3, #1
 80014e8:	6013      	str	r3, [r2, #0]
}
 80014ea:	4770      	bx	lr
 80014ec:	40026400 	.word	0x40026400
 80014f0:	e000e100 	.word	0xe000e100
 80014f4:	40012200 	.word	0x40012200
 80014f8:	40023800 	.word	0x40023800

080014fc <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80014fc:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80014fe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001502:	2100      	movs	r1, #0
 8001504:	480f      	ldr	r0, [pc, #60]	; (8001544 <MEAS_start_measure+0x48>)
 8001506:	f029 fce0 	bl	802aeca <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 800150a:	f7ff ff3d 	bl	8001388 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800150e:	4a0e      	ldr	r2, [pc, #56]	; (8001548 <MEAS_start_measure+0x4c>)
 8001510:	490e      	ldr	r1, [pc, #56]	; (800154c <MEAS_start_measure+0x50>)
 8001512:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001514:	480e      	ldr	r0, [pc, #56]	; (8001550 <MEAS_start_measure+0x54>)
 8001516:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800151a:	f043 0301 	orr.w	r3, r3, #1
 800151e:	6293      	str	r3, [r2, #40]	; 0x28
 8001520:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001524:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001526:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001528:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800152c:	f043 0301 	orr.w	r3, r3, #1
 8001530:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001532:	680b      	ldr	r3, [r1, #0]
 8001534:	f043 0301 	orr.w	r3, r3, #1
 8001538:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800153a:	6a93      	ldr	r3, [r2, #40]	; 0x28
 800153c:	07db      	lsls	r3, r3, #31
 800153e:	d4fc      	bmi.n	800153a <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001540:	4800      	ldr	r0, [pc, #0]	; (8001544 <MEAS_start_measure+0x48>)
 8001542:	bd10      	pop	{r4, pc}
 8001544:	2000044c 	.word	0x2000044c
 8001548:	40026400 	.word	0x40026400
 800154c:	e000e100 	.word	0xe000e100
 8001550:	40012200 	.word	0x40012200

08001554 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001554:	2004      	movs	r0, #4
 8001556:	4770      	bx	lr

08001558 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001558:	2040      	movs	r0, #64	; 0x40
 800155a:	4770      	bx	lr

0800155c <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 800155c:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001560:	4770      	bx	lr
 8001562:	bf00      	nop

08001564 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001564:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001566:	4b0e      	ldr	r3, [pc, #56]	; (80015a0 <HAL_MspInit+0x3c>)
 8001568:	2200      	movs	r2, #0
 800156a:	9200      	str	r2, [sp, #0]
 800156c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800156e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001572:	6459      	str	r1, [r3, #68]	; 0x44
 8001574:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001576:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 800157a:	9000      	str	r0, [sp, #0]
 800157c:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800157e:	9201      	str	r2, [sp, #4]
 8001580:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001582:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001586:	6418      	str	r0, [r3, #64]	; 0x40
 8001588:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800158a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800158e:	9301      	str	r3, [sp, #4]
 8001590:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001592:	210f      	movs	r1, #15
 8001594:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001598:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800159a:	f007 bc59 	b.w	8008e50 <HAL_NVIC_SetPriority>
 800159e:	bf00      	nop
 80015a0:	40023800 	.word	0x40023800

080015a4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80015a4:	4b0b      	ldr	r3, [pc, #44]	; (80015d4 <HAL_CRC_MspInit+0x30>)
 80015a6:	6802      	ldr	r2, [r0, #0]
 80015a8:	429a      	cmp	r2, r3
 80015aa:	d000      	beq.n	80015ae <HAL_CRC_MspInit+0xa>
 80015ac:	4770      	bx	lr
{
 80015ae:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80015b0:	2200      	movs	r2, #0
 80015b2:	9201      	str	r2, [sp, #4]
 80015b4:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 80015b8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80015bc:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 80015c0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80015c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015c6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80015ca:	9301      	str	r3, [sp, #4]
 80015cc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80015ce:	b002      	add	sp, #8
 80015d0:	4770      	bx	lr
 80015d2:	bf00      	nop
 80015d4:	40023000 	.word	0x40023000

080015d8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80015d8:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80015dc:	4b2e      	ldr	r3, [pc, #184]	; (8001698 <HAL_I2C_MspInit+0xc0>)
 80015de:	6802      	ldr	r2, [r0, #0]
{
 80015e0:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015e2:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80015e4:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015e6:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80015ea:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80015ee:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80015f0:	d002      	beq.n	80015f8 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80015f2:	b00a      	add	sp, #40	; 0x28
 80015f4:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80015f8:	4d28      	ldr	r5, [pc, #160]	; (800169c <HAL_I2C_MspInit+0xc4>)
 80015fa:	9401      	str	r4, [sp, #4]
 80015fc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015fe:	4828      	ldr	r0, [pc, #160]	; (80016a0 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001600:	f043 0304 	orr.w	r3, r3, #4
 8001604:	632b      	str	r3, [r5, #48]	; 0x30
 8001606:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001608:	f003 0304 	and.w	r3, r3, #4
 800160c:	9301      	str	r3, [sp, #4]
 800160e:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001610:	9402      	str	r4, [sp, #8]
 8001612:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001614:	f043 0301 	orr.w	r3, r3, #1
 8001618:	632b      	str	r3, [r5, #48]	; 0x30
 800161a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800161c:	f003 0301 	and.w	r3, r3, #1
 8001620:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001622:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001626:	f04f 0801 	mov.w	r8, #1
 800162a:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800162e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001630:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001632:	2312      	movs	r3, #18
 8001634:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001638:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800163c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800163e:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001640:	f007 fe74 	bl	800932c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001644:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001646:	f44f 7280 	mov.w	r2, #256	; 0x100
 800164a:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800164c:	4815      	ldr	r0, [pc, #84]	; (80016a4 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800164e:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001650:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001654:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001658:	f007 fe68 	bl	800932c <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 800165c:	9403      	str	r4, [sp, #12]
 800165e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001660:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001664:	642b      	str	r3, [r5, #64]	; 0x40
 8001666:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001668:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800166c:	4622      	mov	r2, r4
 800166e:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001670:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001672:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001674:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001676:	f007 fbeb 	bl	8008e50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 800167a:	2048      	movs	r0, #72	; 0x48
 800167c:	f007 fc26 	bl	8008ecc <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001680:	6a2b      	ldr	r3, [r5, #32]
 8001682:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001686:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001688:	6a2b      	ldr	r3, [r5, #32]
 800168a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800168e:	622b      	str	r3, [r5, #32]
}
 8001690:	b00a      	add	sp, #40	; 0x28
 8001692:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001696:	bf00      	nop
 8001698:	40005c00 	.word	0x40005c00
 800169c:	40023800 	.word	0x40023800
 80016a0:	40020800 	.word	0x40020800
 80016a4:	40020000 	.word	0x40020000

080016a8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80016a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80016ac:	4604      	mov	r4, r0
 80016ae:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016b0:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016b2:	2230      	movs	r2, #48	; 0x30
 80016b4:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016b6:	e9cd 1108 	strd	r1, r1, [sp, #32]
 80016ba:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 80016be:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016c0:	f029 fc03 	bl	802aeca <memset>
  if(hltdc->Instance==LTDC)
 80016c4:	4b67      	ldr	r3, [pc, #412]	; (8001864 <HAL_LTDC_MspInit+0x1bc>)
 80016c6:	6822      	ldr	r2, [r4, #0]
 80016c8:	429a      	cmp	r2, r3
 80016ca:	d002      	beq.n	80016d2 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80016cc:	b01a      	add	sp, #104	; 0x68
 80016ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016d2:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016d4:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016d6:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016d8:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016da:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016dc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016e0:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016e2:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016e4:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016e6:	f00a f88b 	bl	800b800 <HAL_RCCEx_PeriphCLKConfig>
 80016ea:	2800      	cmp	r0, #0
 80016ec:	f040 80b7 	bne.w	800185e <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016f0:	4b5d      	ldr	r3, [pc, #372]	; (8001868 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80016f2:	485e      	ldr	r0, [pc, #376]	; (800186c <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016f4:	2400      	movs	r4, #0
 80016f6:	9401      	str	r4, [sp, #4]
 80016f8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80016fa:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80016fe:	645a      	str	r2, [r3, #68]	; 0x44
 8001700:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001702:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001706:	9201      	str	r2, [sp, #4]
 8001708:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800170a:	9402      	str	r4, [sp, #8]
 800170c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800170e:	f042 0220 	orr.w	r2, r2, #32
 8001712:	631a      	str	r2, [r3, #48]	; 0x30
 8001714:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001716:	f002 0220 	and.w	r2, r2, #32
 800171a:	9202      	str	r2, [sp, #8]
 800171c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800171e:	9403      	str	r4, [sp, #12]
 8001720:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001722:	f042 0201 	orr.w	r2, r2, #1
 8001726:	631a      	str	r2, [r3, #48]	; 0x30
 8001728:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800172a:	f002 0201 	and.w	r2, r2, #1
 800172e:	9203      	str	r2, [sp, #12]
 8001730:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001732:	9404      	str	r4, [sp, #16]
 8001734:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001736:	f042 0202 	orr.w	r2, r2, #2
 800173a:	631a      	str	r2, [r3, #48]	; 0x30
 800173c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800173e:	f002 0202 	and.w	r2, r2, #2
 8001742:	9204      	str	r2, [sp, #16]
 8001744:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001746:	9405      	str	r4, [sp, #20]
 8001748:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800174a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800174e:	631a      	str	r2, [r3, #48]	; 0x30
 8001750:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001752:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001756:	9205      	str	r2, [sp, #20]
 8001758:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800175a:	9406      	str	r4, [sp, #24]
 800175c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800175e:	f042 0204 	orr.w	r2, r2, #4
 8001762:	631a      	str	r2, [r3, #48]	; 0x30
 8001764:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001766:	f002 0204 	and.w	r2, r2, #4
 800176a:	9206      	str	r2, [sp, #24]
 800176c:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800176e:	9407      	str	r4, [sp, #28]
 8001770:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001772:	f042 0208 	orr.w	r2, r2, #8
 8001776:	631a      	str	r2, [r3, #48]	; 0x30
 8001778:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800177a:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800177e:	2600      	movs	r6, #0
 8001780:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001782:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001784:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001786:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001788:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800178c:	2302      	movs	r3, #2
 800178e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001792:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001796:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001798:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800179a:	f007 fdc7 	bl	800932c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800179e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017a0:	f641 0258 	movw	r2, #6232	; 0x1858
 80017a4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017a6:	4832      	ldr	r0, [pc, #200]	; (8001870 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017a8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017aa:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017ae:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017b2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017b6:	f007 fdb9 	bl	800932c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017ba:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017bc:	2203      	movs	r2, #3
 80017be:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017c0:	482c      	ldr	r0, [pc, #176]	; (8001874 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017c2:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017c6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017ca:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017ce:	f007 fdad 	bl	800932c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017d2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017d4:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80017d8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017da:	4826      	ldr	r0, [pc, #152]	; (8001874 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017dc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017de:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017e2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017e6:	f007 fda1 	bl	800932c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017ea:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017ec:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80017f0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017f2:	4821      	ldr	r0, [pc, #132]	; (8001878 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017f4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017f6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017fa:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017fe:	f007 fd95 	bl	800932c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001802:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001804:	22c0      	movs	r2, #192	; 0xc0
 8001806:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001808:	481c      	ldr	r0, [pc, #112]	; (800187c <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800180a:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800180c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001810:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001814:	f007 fd8a 	bl	800932c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001818:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800181a:	2208      	movs	r2, #8
 800181c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800181e:	4818      	ldr	r0, [pc, #96]	; (8001880 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001820:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001822:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001826:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800182a:	f007 fd7f 	bl	800932c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800182e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001830:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001832:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001836:	4810      	ldr	r0, [pc, #64]	; (8001878 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001838:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800183c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001840:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001844:	f007 fd72 	bl	800932c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001848:	4622      	mov	r2, r4
 800184a:	2105      	movs	r1, #5
 800184c:	2058      	movs	r0, #88	; 0x58
 800184e:	f007 faff 	bl	8008e50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001852:	2058      	movs	r0, #88	; 0x58
 8001854:	f007 fb3a 	bl	8008ecc <HAL_NVIC_EnableIRQ>
}
 8001858:	b01a      	add	sp, #104	; 0x68
 800185a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 800185e:	f7ff fd39 	bl	80012d4 <Error_Handler>
 8001862:	e745      	b.n	80016f0 <HAL_LTDC_MspInit+0x48>
 8001864:	40016800 	.word	0x40016800
 8001868:	40023800 	.word	0x40023800
 800186c:	40021400 	.word	0x40021400
 8001870:	40020000 	.word	0x40020000
 8001874:	40020400 	.word	0x40020400
 8001878:	40021800 	.word	0x40021800
 800187c:	40020800 	.word	0x40020800
 8001880:	40020c00 	.word	0x40020c00
 8001884:	00000000 	.word	0x00000000

08001888 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001888:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800188a:	4a1b      	ldr	r2, [pc, #108]	; (80018f8 <HAL_SPI_MspInit+0x70>)
 800188c:	6801      	ldr	r1, [r0, #0]
{
 800188e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001890:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001892:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001894:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001898:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800189c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800189e:	d001      	beq.n	80018a4 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80018a0:	b008      	add	sp, #32
 80018a2:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 80018a4:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 80018a8:	9300      	str	r3, [sp, #0]
 80018aa:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80018ac:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 80018b0:	6450      	str	r0, [r2, #68]	; 0x44
 80018b2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80018b4:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 80018b8:	9000      	str	r0, [sp, #0]
 80018ba:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018bc:	9301      	str	r3, [sp, #4]
 80018be:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018c0:	480e      	ldr	r0, [pc, #56]	; (80018fc <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018c2:	f043 0320 	orr.w	r3, r3, #32
 80018c6:	6313      	str	r3, [r2, #48]	; 0x30
 80018c8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018ca:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80018f0 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018ce:	f003 0320 	and.w	r3, r3, #32
 80018d2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018d4:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018d6:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018d8:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018da:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018de:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018e2:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018e4:	f007 fd22 	bl	800932c <HAL_GPIO_Init>
}
 80018e8:	b008      	add	sp, #32
 80018ea:	bd10      	pop	{r4, pc}
 80018ec:	f3af 8000 	nop.w
 80018f0:	00000380 	.word	0x00000380
 80018f4:	00000002 	.word	0x00000002
 80018f8:	40015000 	.word	0x40015000
 80018fc:	40021400 	.word	0x40021400

08001900 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001900:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 8001902:	4a21      	ldr	r2, [pc, #132]	; (8001988 <HAL_TIM_Base_MspInit+0x88>)
 8001904:	6803      	ldr	r3, [r0, #0]
 8001906:	4293      	cmp	r3, r2
{
 8001908:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 800190a:	d008      	beq.n	800191e <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 800190c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001910:	d023      	beq.n	800195a <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001912:	4a1e      	ldr	r2, [pc, #120]	; (800198c <HAL_TIM_Base_MspInit+0x8c>)
 8001914:	4293      	cmp	r3, r2
 8001916:	d011      	beq.n	800193c <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001918:	b005      	add	sp, #20
 800191a:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 800191e:	4b1c      	ldr	r3, [pc, #112]	; (8001990 <HAL_TIM_Base_MspInit+0x90>)
 8001920:	2200      	movs	r2, #0
 8001922:	9201      	str	r2, [sp, #4]
 8001924:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001926:	f042 0201 	orr.w	r2, r2, #1
 800192a:	645a      	str	r2, [r3, #68]	; 0x44
 800192c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800192e:	f003 0301 	and.w	r3, r3, #1
 8001932:	9301      	str	r3, [sp, #4]
 8001934:	9b01      	ldr	r3, [sp, #4]
}
 8001936:	b005      	add	sp, #20
 8001938:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 800193c:	4b14      	ldr	r3, [pc, #80]	; (8001990 <HAL_TIM_Base_MspInit+0x90>)
 800193e:	2200      	movs	r2, #0
 8001940:	9203      	str	r2, [sp, #12]
 8001942:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001944:	f042 0202 	orr.w	r2, r2, #2
 8001948:	641a      	str	r2, [r3, #64]	; 0x40
 800194a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800194c:	f003 0302 	and.w	r3, r3, #2
 8001950:	9303      	str	r3, [sp, #12]
 8001952:	9b03      	ldr	r3, [sp, #12]
}
 8001954:	b005      	add	sp, #20
 8001956:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 800195a:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 800195e:	2200      	movs	r2, #0
 8001960:	9202      	str	r2, [sp, #8]
 8001962:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001964:	f041 0101 	orr.w	r1, r1, #1
 8001968:	6419      	str	r1, [r3, #64]	; 0x40
 800196a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800196c:	f003 0301 	and.w	r3, r3, #1
 8001970:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001972:	201c      	movs	r0, #28
 8001974:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001976:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001978:	f007 fa6a 	bl	8008e50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800197c:	201c      	movs	r0, #28
}
 800197e:	b005      	add	sp, #20
 8001980:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001984:	f007 baa2 	b.w	8008ecc <HAL_NVIC_EnableIRQ>
 8001988:	40010000 	.word	0x40010000
 800198c:	40000400 	.word	0x40000400
 8001990:	40023800 	.word	0x40023800

08001994 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001994:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001996:	4b2b      	ldr	r3, [pc, #172]	; (8001a44 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001998:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 800199a:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800199c:	2200      	movs	r2, #0
 800199e:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 80019a0:	2c00      	cmp	r4, #0
 80019a2:	d14c      	bne.n	8001a3e <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 80019a4:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 80019a6:	4a28      	ldr	r2, [pc, #160]	; (8001a48 <HAL_SDRAM_MspInit+0xb4>)
 80019a8:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 80019aa:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 80019ac:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019ae:	4827      	ldr	r0, [pc, #156]	; (8001a4c <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80019b0:	433b      	orrs	r3, r7
 80019b2:	6393      	str	r3, [r2, #56]	; 0x38
 80019b4:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80019b6:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019b8:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019ba:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80019bc:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 80019c0:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019c2:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80019c4:	2302      	movs	r3, #2
 80019c6:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019ca:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80019ce:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019d0:	f007 fcac 	bl	800932c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019d4:	481e      	ldr	r0, [pc, #120]	; (8001a50 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80019d6:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019d8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019da:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019dc:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019e0:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019e4:	f007 fca2 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019e8:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019ec:	4819      	ldr	r0, [pc, #100]	; (8001a54 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019ee:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019f0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019f2:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019f6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019fa:	f007 fc97 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80019fe:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a02:	4815      	ldr	r0, [pc, #84]	; (8001a58 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001a04:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a06:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a08:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a0c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a10:	f007 fc8c 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001a14:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a18:	4810      	ldr	r0, [pc, #64]	; (8001a5c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001a1a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a1c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a1e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a22:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a26:	f007 fc81 	bl	800932c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001a2a:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a2c:	480c      	ldr	r0, [pc, #48]	; (8001a60 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a2e:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a30:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a32:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a36:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001a38:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a3a:	f007 fc77 	bl	800932c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001a3e:	b009      	add	sp, #36	; 0x24
 8001a40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a42:	bf00      	nop
 8001a44:	2000084c 	.word	0x2000084c
 8001a48:	40023800 	.word	0x40023800
 8001a4c:	40021400 	.word	0x40021400
 8001a50:	40020800 	.word	0x40020800
 8001a54:	40021800 	.word	0x40021800
 8001a58:	40021000 	.word	0x40021000
 8001a5c:	40020c00 	.word	0x40020c00
 8001a60:	40020400 	.word	0x40020400

08001a64 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001a64:	b570      	push	{r4, r5, r6, lr}
 8001a66:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a68:	4b23      	ldr	r3, [pc, #140]	; (8001af8 <HAL_InitTick+0x94>)
 8001a6a:	2200      	movs	r2, #0
 8001a6c:	9202      	str	r2, [sp, #8]
 8001a6e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a70:	f042 0210 	orr.w	r2, r2, #16
 8001a74:	641a      	str	r2, [r3, #64]	; 0x40
 8001a76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a78:	f003 0310 	and.w	r3, r3, #16
 8001a7c:	9302      	str	r3, [sp, #8]
{
 8001a7e:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a80:	a901      	add	r1, sp, #4
 8001a82:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a84:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a86:	f009 fe99 	bl	800b7bc <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001a8a:	9b06      	ldr	r3, [sp, #24]
 8001a8c:	b9d3      	cbnz	r3, 8001ac4 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001a8e:	f009 fe85 	bl	800b79c <HAL_RCC_GetPCLK1Freq>
 8001a92:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a94:	4a19      	ldr	r2, [pc, #100]	; (8001afc <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001a96:	4c1a      	ldr	r4, [pc, #104]	; (8001b00 <HAL_InitTick+0x9c>)
 8001a98:	491a      	ldr	r1, [pc, #104]	; (8001b04 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a9a:	fba2 2303 	umull	r2, r3, r2, r3
 8001a9e:	0c9b      	lsrs	r3, r3, #18
 8001aa0:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001aa2:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001aa4:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001aa8:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001aaa:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001aae:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ab0:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001ab2:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001ab4:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001ab6:	f00a fcb1 	bl	800c41c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001aba:	4606      	mov	r6, r0
 8001abc:	b130      	cbz	r0, 8001acc <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8001abe:	4630      	mov	r0, r6
 8001ac0:	b008      	add	sp, #32
 8001ac2:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001ac4:	f009 fe6a 	bl	800b79c <HAL_RCC_GetPCLK1Freq>
 8001ac8:	0043      	lsls	r3, r0, #1
 8001aca:	e7e3      	b.n	8001a94 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001acc:	4620      	mov	r0, r4
 8001ace:	f00a fd33 	bl	800c538 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001ad2:	4606      	mov	r6, r0
 8001ad4:	2800      	cmp	r0, #0
 8001ad6:	d1f2      	bne.n	8001abe <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ad8:	2036      	movs	r0, #54	; 0x36
 8001ada:	f007 f9f7 	bl	8008ecc <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001ade:	2d0f      	cmp	r5, #15
 8001ae0:	d901      	bls.n	8001ae6 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8001ae2:	2601      	movs	r6, #1
 8001ae4:	e7eb      	b.n	8001abe <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001ae6:	4632      	mov	r2, r6
 8001ae8:	4629      	mov	r1, r5
 8001aea:	2036      	movs	r0, #54	; 0x36
 8001aec:	f007 f9b0 	bl	8008e50 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001af0:	4b05      	ldr	r3, [pc, #20]	; (8001b08 <HAL_InitTick+0xa4>)
 8001af2:	601d      	str	r5, [r3, #0]
 8001af4:	e7e3      	b.n	8001abe <HAL_InitTick+0x5a>
 8001af6:	bf00      	nop
 8001af8:	40023800 	.word	0x40023800
 8001afc:	431bde83 	.word	0x431bde83
 8001b00:	20000850 	.word	0x20000850
 8001b04:	40001000 	.word	0x40001000
 8001b08:	2000009c 	.word	0x2000009c

08001b0c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001b0c:	4770      	bx	lr
 8001b0e:	bf00      	nop

08001b10 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001b10:	e7fe      	b.n	8001b10 <HardFault_Handler>
 8001b12:	bf00      	nop

08001b14 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001b14:	e7fe      	b.n	8001b14 <MemManage_Handler>
 8001b16:	bf00      	nop

08001b18 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001b18:	e7fe      	b.n	8001b18 <BusFault_Handler>
 8001b1a:	bf00      	nop

08001b1c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001b1c:	e7fe      	b.n	8001b1c <UsageFault_Handler>
 8001b1e:	bf00      	nop

08001b20 <DebugMon_Handler>:
 8001b20:	4770      	bx	lr
 8001b22:	bf00      	nop

08001b24 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001b24:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8001b26:	20c8      	movs	r0, #200	; 0xc8
 8001b28:	f007 f96e 	bl	8008e08 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001b2c:	4804      	ldr	r0, [pc, #16]	; (8001b40 <EXTI3_IRQHandler+0x1c>)
 8001b2e:	2200      	movs	r2, #0
 8001b30:	2120      	movs	r1, #32
 8001b32:	f007 fd3f 	bl	80095b4 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001b36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001b3a:	2008      	movs	r0, #8
 8001b3c:	f007 bd4a 	b.w	80095d4 <HAL_GPIO_EXTI_IRQHandler>
 8001b40:	40021000 	.word	0x40021000

08001b44 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001b44:	4801      	ldr	r0, [pc, #4]	; (8001b4c <TIM6_DAC_IRQHandler+0x8>)
 8001b46:	f00a be77 	b.w	800c838 <HAL_TIM_IRQHandler>
 8001b4a:	bf00      	nop
 8001b4c:	20000850 	.word	0x20000850

08001b50 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001b50:	4801      	ldr	r0, [pc, #4]	; (8001b58 <I2C3_EV_IRQHandler+0x8>)
 8001b52:	f008 bc9f 	b.w	800a494 <HAL_I2C_EV_IRQHandler>
 8001b56:	bf00      	nop
 8001b58:	200001ec 	.word	0x200001ec

08001b5c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001b5c:	4801      	ldr	r0, [pc, #4]	; (8001b64 <LTDC_IRQHandler+0x8>)
 8001b5e:	f009 ba13 	b.w	800af88 <HAL_LTDC_IRQHandler>
 8001b62:	bf00      	nop
 8001b64:	20000240 	.word	0x20000240

08001b68 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001b68:	2001      	movs	r0, #1
 8001b6a:	4770      	bx	lr

08001b6c <_kill>:

int _kill(int pid, int sig)
{
 8001b6c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b6e:	f029 faa5 	bl	802b0bc <__errno>
 8001b72:	2316      	movs	r3, #22
 8001b74:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001b76:	f04f 30ff 	mov.w	r0, #4294967295
 8001b7a:	bd08      	pop	{r3, pc}

08001b7c <_exit>:

void _exit (int status)
{
 8001b7c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b7e:	f029 fa9d 	bl	802b0bc <__errno>
 8001b82:	2316      	movs	r3, #22
 8001b84:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001b86:	e7fe      	b.n	8001b86 <_exit+0xa>

08001b88 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001b88:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b8a:	1e16      	subs	r6, r2, #0
 8001b8c:	dd07      	ble.n	8001b9e <_read+0x16>
 8001b8e:	460c      	mov	r4, r1
 8001b90:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001b92:	f3af 8000 	nop.w
 8001b96:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b9a:	42a5      	cmp	r5, r4
 8001b9c:	d1f9      	bne.n	8001b92 <_read+0xa>
	}

return len;
}
 8001b9e:	4630      	mov	r0, r6
 8001ba0:	bd70      	pop	{r4, r5, r6, pc}
 8001ba2:	bf00      	nop

08001ba4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001ba4:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ba6:	1e16      	subs	r6, r2, #0
 8001ba8:	dd07      	ble.n	8001bba <_write+0x16>
 8001baa:	460c      	mov	r4, r1
 8001bac:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001bae:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001bb2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001bb6:	42ac      	cmp	r4, r5
 8001bb8:	d1f9      	bne.n	8001bae <_write+0xa>
	}
	return len;
}
 8001bba:	4630      	mov	r0, r6
 8001bbc:	bd70      	pop	{r4, r5, r6, pc}
 8001bbe:	bf00      	nop

08001bc0 <_close>:

int _close(int file)
{
	return -1;
}
 8001bc0:	f04f 30ff 	mov.w	r0, #4294967295
 8001bc4:	4770      	bx	lr
 8001bc6:	bf00      	nop

08001bc8 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001bc8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001bcc:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001bce:	2000      	movs	r0, #0
 8001bd0:	4770      	bx	lr
 8001bd2:	bf00      	nop

08001bd4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001bd4:	2001      	movs	r0, #1
 8001bd6:	4770      	bx	lr

08001bd8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001bd8:	2000      	movs	r0, #0
 8001bda:	4770      	bx	lr

08001bdc <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001bdc:	4a0b      	ldr	r2, [pc, #44]	; (8001c0c <_sbrk+0x30>)
{
 8001bde:	b508      	push	{r3, lr}
 8001be0:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001be2:	6810      	ldr	r0, [r2, #0]
 8001be4:	b128      	cbz	r0, 8001bf2 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001be6:	4403      	add	r3, r0
 8001be8:	4669      	mov	r1, sp
 8001bea:	428b      	cmp	r3, r1
 8001bec:	d807      	bhi.n	8001bfe <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001bee:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001bf0:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001bf2:	4807      	ldr	r0, [pc, #28]	; (8001c10 <_sbrk+0x34>)
 8001bf4:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001bf6:	4403      	add	r3, r0
 8001bf8:	4669      	mov	r1, sp
 8001bfa:	428b      	cmp	r3, r1
 8001bfc:	d9f7      	bls.n	8001bee <_sbrk+0x12>
		errno = ENOMEM;
 8001bfe:	f029 fa5d 	bl	802b0bc <__errno>
 8001c02:	230c      	movs	r3, #12
 8001c04:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001c06:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001c0a:	bd08      	pop	{r3, pc}
 8001c0c:	20000898 	.word	0x20000898
 8001c10:	20013ef8 	.word	0x20013ef8

08001c14 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001c14:	4770      	bx	lr
 8001c16:	bf00      	nop

08001c18 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001c18:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001c1a:	f000 fba7 	bl	800236c <touchgfx_components_init>
  touchgfx_init();
}
 8001c1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001c22:	f000 bb31 	b.w	8002288 <touchgfx_init>
 8001c26:	bf00      	nop

08001c28 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001c28:	f000 bba2 	b.w	8002370 <touchgfx_taskEntry>

08001c2c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001c2c:	4770      	bx	lr

08001c2e <_ZN20STM32TouchControllerD0Ev>:
 8001c2e:	b510      	push	{r4, lr}
 8001c30:	2104      	movs	r1, #4
 8001c32:	4604      	mov	r4, r0
 8001c34:	f028 f931 	bl	8029e9a <_ZdlPvj>
 8001c38:	4620      	mov	r0, r4
 8001c3a:	bd10      	pop	{r4, pc}

08001c3c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001c3c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001c3e:	4b0c      	ldr	r3, [pc, #48]	; (8001c70 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c40:	4c0c      	ldr	r4, [pc, #48]	; (8001c74 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001c42:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001c44:	4b0c      	ldr	r3, [pc, #48]	; (8001c78 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c46:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001c48:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c4a:	6863      	ldr	r3, [r4, #4]
 8001c4c:	4798      	blx	r3
 8001c4e:	f640 0311 	movw	r3, #2065	; 0x811
 8001c52:	4298      	cmp	r0, r3
 8001c54:	d10a      	bne.n	8001c6c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001c56:	4d09      	ldr	r5, [pc, #36]	; (8001c7c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c58:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001c5a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c5c:	2082      	movs	r0, #130	; 0x82
 8001c5e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001c60:	682b      	ldr	r3, [r5, #0]
 8001c62:	2082      	movs	r0, #130	; 0x82
 8001c64:	68db      	ldr	r3, [r3, #12]
 8001c66:	4798      	blx	r3
 8001c68:	2000      	movs	r0, #0
    }

    return ret;
}
 8001c6a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001c6c:	2001      	movs	r0, #1
 8001c6e:	e7fc      	b.n	8001c6a <_Z11BSP_TS_Inittt+0x2e>
 8001c70:	2000089c 	.word	0x2000089c
 8001c74:	2000006c 	.word	0x2000006c
 8001c78:	2000089e 	.word	0x2000089e
 8001c7c:	200008a0 	.word	0x200008a0

08001c80 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001c80:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001c84:	20f0      	movs	r0, #240	; 0xf0
 8001c86:	f7ff bfd9 	b.w	8001c3c <_Z11BSP_TS_Inittt>
	...

08001c8c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001c8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c8e:	4d33      	ldr	r5, [pc, #204]	; (8001d5c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001c90:	682b      	ldr	r3, [r5, #0]
{
 8001c92:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c94:	691b      	ldr	r3, [r3, #16]
 8001c96:	2082      	movs	r0, #130	; 0x82
 8001c98:	4798      	blx	r3
 8001c9a:	b280      	uxth	r0, r0
 8001c9c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001c9e:	2800      	cmp	r0, #0
 8001ca0:	d04a      	beq.n	8001d38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001ca2:	682b      	ldr	r3, [r5, #0]
 8001ca4:	f10d 0206 	add.w	r2, sp, #6
 8001ca8:	695b      	ldr	r3, [r3, #20]
 8001caa:	a901      	add	r1, sp, #4
 8001cac:	2082      	movs	r0, #130	; 0x82
 8001cae:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001cb0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001cb4:	f640 6274 	movw	r2, #3700	; 0xe74
 8001cb8:	4293      	cmp	r3, r2
 8001cba:	d93f      	bls.n	8001d3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001cbc:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001cc0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001cc4:	1ad2      	subs	r2, r2, r3
 8001cc6:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001cc8:	2a0a      	cmp	r2, #10
 8001cca:	d93d      	bls.n	8001d48 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001ccc:	230b      	movs	r3, #11
 8001cce:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001cd2:	4b23      	ldr	r3, [pc, #140]	; (8001d60 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001cd4:	881b      	ldrh	r3, [r3, #0]
 8001cd6:	429a      	cmp	r2, r3
 8001cd8:	d901      	bls.n	8001cde <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001cda:	3b01      	subs	r3, #1
 8001cdc:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001cde:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001ce2:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001ce6:	428b      	cmp	r3, r1
 8001ce8:	d830      	bhi.n	8001d4c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001cea:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001cee:	330e      	adds	r3, #14
 8001cf0:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001cf2:	210f      	movs	r1, #15
 8001cf4:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001cf8:	491a      	ldr	r1, [pc, #104]	; (8001d64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001cfa:	8809      	ldrh	r1, [r1, #0]
 8001cfc:	428b      	cmp	r3, r1
 8001cfe:	d901      	bls.n	8001d04 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001d00:	3901      	subs	r1, #1
 8001d02:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001d04:	4e18      	ldr	r6, [pc, #96]	; (8001d68 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001d06:	4d19      	ldr	r5, [pc, #100]	; (8001d6c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001d08:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001d0a:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001d0c:	4283      	cmp	r3, r0
 8001d0e:	b281      	uxth	r1, r0
 8001d10:	bf8c      	ite	hi
 8001d12:	1a59      	subhi	r1, r3, r1
 8001d14:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001d16:	b2b8      	uxth	r0, r7
 8001d18:	42ba      	cmp	r2, r7
 8001d1a:	bf8c      	ite	hi
 8001d1c:	1a10      	subhi	r0, r2, r0
 8001d1e:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001d20:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001d22:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001d24:	4401      	add	r1, r0
 8001d26:	2905      	cmp	r1, #5
        {
            _x = x;
 8001d28:	bfc8      	it	gt
 8001d2a:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001d2c:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001d2e:	bfc8      	it	gt
 8001d30:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001d32:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001d34:	682b      	ldr	r3, [r5, #0]
 8001d36:	80a3      	strh	r3, [r4, #4]
    }
}
 8001d38:	b003      	add	sp, #12
 8001d3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001d3c:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001d3e:	bf9c      	itt	ls
 8001d40:	23b4      	movls	r3, #180	; 0xb4
 8001d42:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001d46:	e7bb      	b.n	8001cc0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001d48:	2200      	movs	r2, #0
 8001d4a:	e7c8      	b.n	8001cde <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001d4c:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001d50:	3308      	adds	r3, #8
 8001d52:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001d54:	2b0e      	cmp	r3, #14
 8001d56:	d8cc      	bhi.n	8001cf2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001d58:	2300      	movs	r3, #0
 8001d5a:	e7d3      	b.n	8001d04 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001d5c:	200008a0 	.word	0x200008a0
 8001d60:	2000089e 	.word	0x2000089e
 8001d64:	2000089c 	.word	0x2000089c
 8001d68:	200008a4 	.word	0x200008a4
 8001d6c:	200008a8 	.word	0x200008a8

08001d70 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001d70:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001d72:	4668      	mov	r0, sp
{
 8001d74:	460d      	mov	r5, r1
 8001d76:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001d78:	f7ff ff88 	bl	8001c8c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001d7c:	f8bd 0000 	ldrh.w	r0, [sp]
 8001d80:	b148      	cbz	r0, 8001d96 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001d82:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001d86:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001d88:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001d8c:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001d8e:	4b03      	ldr	r3, [pc, #12]	; (8001d9c <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001d90:	223c      	movs	r2, #60	; 0x3c
 8001d92:	601a      	str	r2, [r3, #0]
        return true;
 8001d94:	2001      	movs	r0, #1
}
 8001d96:	b003      	add	sp, #12
 8001d98:	bd30      	pop	{r4, r5, pc}
 8001d9a:	bf00      	nop
 8001d9c:	20000028 	.word	0x20000028

08001da0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001da0:	b110      	cbz	r0, 8001da8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001da2:	2802      	cmp	r0, #2
 8001da4:	d009      	beq.n	8001dba <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001da6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001da8:	4b07      	ldr	r3, [pc, #28]	; (8001dc8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001daa:	681a      	ldr	r2, [r3, #0]
 8001dac:	fab2 f282 	clz	r2, r2
 8001db0:	0952      	lsrs	r2, r2, #5
 8001db2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001db4:	4805      	ldr	r0, [pc, #20]	; (8001dcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001db6:	f007 bbfd 	b.w	80095b4 <HAL_GPIO_WritePin>
 8001dba:	4b03      	ldr	r3, [pc, #12]	; (8001dc8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001dbc:	689a      	ldr	r2, [r3, #8]
 8001dbe:	fab2 f282 	clz	r2, r2
 8001dc2:	0952      	lsrs	r2, r2, #5
 8001dc4:	2110      	movs	r1, #16
 8001dc6:	e7f5      	b.n	8001db4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001dc8:	200008ac 	.word	0x200008ac
 8001dcc:	40021000 	.word	0x40021000

08001dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001dd0:	b110      	cbz	r0, 8001dd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001dd2:	2802      	cmp	r0, #2
 8001dd4:	d009      	beq.n	8001dea <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001dd6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001dd8:	4b07      	ldr	r3, [pc, #28]	; (8001df8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001dda:	681a      	ldr	r2, [r3, #0]
 8001ddc:	3a00      	subs	r2, #0
 8001dde:	bf18      	it	ne
 8001de0:	2201      	movne	r2, #1
 8001de2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001de4:	4805      	ldr	r0, [pc, #20]	; (8001dfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001de6:	f007 bbe5 	b.w	80095b4 <HAL_GPIO_WritePin>
 8001dea:	4b03      	ldr	r3, [pc, #12]	; (8001df8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001dec:	689a      	ldr	r2, [r3, #8]
 8001dee:	3a00      	subs	r2, #0
 8001df0:	bf18      	it	ne
 8001df2:	2201      	movne	r2, #1
 8001df4:	2110      	movs	r1, #16
 8001df6:	e7f5      	b.n	8001de4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001df8:	200008ac 	.word	0x200008ac
 8001dfc:	40021000 	.word	0x40021000

08001e00 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001e00:	b110      	cbz	r0, 8001e08 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001e02:	2802      	cmp	r0, #2
 8001e04:	d004      	beq.n	8001e10 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001e06:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001e08:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e0a:	4802      	ldr	r0, [pc, #8]	; (8001e14 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001e0c:	f007 bbd6 	b.w	80095bc <HAL_GPIO_TogglePin>
 8001e10:	2110      	movs	r1, #16
 8001e12:	e7fa      	b.n	8001e0a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001e14:	40021000 	.word	0x40021000

08001e18 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001e18:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001e1a:	b130      	cbz	r0, 8001e2a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001e1c:	2802      	cmp	r0, #2
 8001e1e:	d009      	beq.n	8001e34 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001e20:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001e22:	1e43      	subs	r3, r0, #1
 8001e24:	4258      	negs	r0, r3
 8001e26:	4158      	adcs	r0, r3
 8001e28:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001e2a:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e2c:	4802      	ldr	r0, [pc, #8]	; (8001e38 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001e2e:	f007 fbbb 	bl	80095a8 <HAL_GPIO_ReadPin>
        break;
 8001e32:	e7f6      	b.n	8001e22 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e34:	2110      	movs	r1, #16
 8001e36:	e7f9      	b.n	8001e2c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001e38:	40021000 	.word	0x40021000

08001e3c <_ZN8touchgfx4GPIO4initEv>:
{
 8001e3c:	b570      	push	{r4, r5, r6, lr}
 8001e3e:	4d08      	ldr	r5, [pc, #32]	; (8001e60 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001e40:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001e42:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001e44:	b2e0      	uxtb	r0, r4
 8001e46:	f7ff ffe7 	bl	8001e18 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001e4a:	b118      	cbz	r0, 8001e54 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001e4c:	682b      	ldr	r3, [r5, #0]
 8001e4e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001e50:	bf18      	it	ne
 8001e52:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001e54:	3401      	adds	r4, #1
 8001e56:	2c05      	cmp	r4, #5
 8001e58:	f105 0504 	add.w	r5, r5, #4
 8001e5c:	d1f2      	bne.n	8001e44 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001e5e:	bd70      	pop	{r4, r5, r6, pc}
 8001e60:	200008ac 	.word	0x200008ac

08001e64 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001e64:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001e66:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001e6a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001e6e:	4770      	bx	lr

08001e70 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001e70:	2000      	movs	r0, #0
 8001e72:	4770      	bx	lr

08001e74 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e74:	4b03      	ldr	r3, [pc, #12]	; (8001e84 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001e76:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e78:	3900      	subs	r1, #0
 8001e7a:	bf18      	it	ne
 8001e7c:	2101      	movne	r1, #1
 8001e7e:	7019      	strb	r1, [r3, #0]
    }
 8001e80:	4770      	bx	lr
 8001e82:	bf00      	nop
 8001e84:	200132bb 	.word	0x200132bb

08001e88 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001e88:	2000      	movs	r0, #0
 8001e8a:	4770      	bx	lr

08001e8c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001e8c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001e8e:	b10b      	cbz	r3, 8001e94 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001e90:	4608      	mov	r0, r1
 8001e92:	4718      	bx	r3
        }
    }
 8001e94:	4770      	bx	lr

08001e96 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001e96:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001e9a:	4770      	bx	lr

08001e9c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001e9c:	6840      	ldr	r0, [r0, #4]
 8001e9e:	6803      	ldr	r3, [r0, #0]
 8001ea0:	699b      	ldr	r3, [r3, #24]
 8001ea2:	4718      	bx	r3

08001ea4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001ea4:	4770      	bx	lr

08001ea6 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001ea6:	4770      	bx	lr

08001ea8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001ea8:	4770      	bx	lr
	...

08001eac <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001eac:	b510      	push	{r4, lr}
 8001eae:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001eb0:	f000 fb4a 	bl	8002548 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001eb4:	6823      	ldr	r3, [r4, #0]
 8001eb6:	4903      	ldr	r1, [pc, #12]	; (8001ec4 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001eb8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001ebc:	4620      	mov	r0, r4
}
 8001ebe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001ec2:	4718      	bx	r3
 8001ec4:	d0000000 	.word	0xd0000000

08001ec8 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001ec8:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001eca:	6803      	ldr	r3, [r0, #0]
{
 8001ecc:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001ece:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001ed2:	4798      	blx	r3
    enableInterrupts();
 8001ed4:	6823      	ldr	r3, [r4, #0]
 8001ed6:	4620      	mov	r0, r4
 8001ed8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001eda:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001edc:	f000 f8ec 	bl	80020b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001ee0:	6823      	ldr	r3, [r4, #0]
 8001ee2:	4620      	mov	r0, r4
 8001ee4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ee6:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001ee8:	2029      	movs	r0, #41	; 0x29
 8001eea:	f7ff f97f 	bl	80011ec <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001eee:	f000 f8e3 	bl	80020b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001ef2:	6823      	ldr	r3, [r4, #0]
 8001ef4:	4620      	mov	r0, r4
 8001ef6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ef8:	4798      	blx	r3
    for (;;)
 8001efa:	e7f8      	b.n	8001eee <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001efc <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001efc:	b510      	push	{r4, lr}
 8001efe:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001f00:	f00f fadc 	bl	80114bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001f04:	6823      	ldr	r3, [r4, #0]
 8001f06:	4620      	mov	r0, r4
 8001f08:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001f0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001f10:	4718      	bx	r3

08001f12 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001f12:	f000 bb0b 	b.w	800252c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001f16 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001f16:	f000 bb0f 	b.w	8002538 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001f1a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001f1a:	f000 bb33 	b.w	8002584 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001f1e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001f1e:	f000 badb 	b.w	80024d8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001f22 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001f22:	f000 bae1 	b.w	80024e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001f26 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001f26:	f000 bb39 	b.w	800259c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001f2a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001f2a:	f000 bae5 	b.w	80024f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001f2e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001f2e:	f00e bd30 	b.w	8010992 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001f32 <_ZN11TouchGFXHALD0Ev>:
 8001f32:	b510      	push	{r4, lr}
 8001f34:	217c      	movs	r1, #124	; 0x7c
 8001f36:	4604      	mov	r4, r0
 8001f38:	f027 ffaf 	bl	8029e9a <_ZdlPvj>
 8001f3c:	4620      	mov	r0, r4
 8001f3e:	bd10      	pop	{r4, pc}

08001f40 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001f40:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001f44:	b11b      	cbz	r3, 8001f4e <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001f46:	6840      	ldr	r0, [r0, #4]
 8001f48:	6803      	ldr	r3, [r0, #0]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	4718      	bx	r3
    }
 8001f4e:	4618      	mov	r0, r3
 8001f50:	4770      	bx	lr
	...

08001f54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001f54:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001f56:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001f5a:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001f5e:	4b0c      	ldr	r3, [pc, #48]	; (8001f90 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001f60:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001f62:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001f64:	d009      	beq.n	8001f7a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001f66:	b93a      	cbnz	r2, 8001f78 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f68:	4a0a      	ldr	r2, [pc, #40]	; (8001f94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f6a:	490b      	ldr	r1, [pc, #44]	; (8001f98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f6c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f6e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001f70:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f72:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001f74:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001f76:	701a      	strb	r2, [r3, #0]
    }
 8001f78:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001f7a:	2a00      	cmp	r2, #0
 8001f7c:	d0fc      	beq.n	8001f78 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f7e:	4a05      	ldr	r2, [pc, #20]	; (8001f94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f80:	4905      	ldr	r1, [pc, #20]	; (8001f98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f82:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f84:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001f86:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f88:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001f8a:	2200      	movs	r2, #0
 8001f8c:	e7f3      	b.n	8001f76 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001f8e:	bf00      	nop
 8001f90:	200132b4 	.word	0x200132b4
 8001f94:	200132b0 	.word	0x200132b0
 8001f98:	200132b2 	.word	0x200132b2

08001f9c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001f9c:	b570      	push	{r4, r5, r6, lr}
 8001f9e:	460d      	mov	r5, r1
 8001fa0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001fa2:	b935      	cbnz	r5, 8001fb2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001fa4:	4b09      	ldr	r3, [pc, #36]	; (8001fcc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001fa6:	4a0a      	ldr	r2, [pc, #40]	; (8001fd0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001fa8:	480a      	ldr	r0, [pc, #40]	; (8001fd4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001faa:	f240 21d2 	movw	r1, #722	; 0x2d2
 8001fae:	f028 fd87 	bl	802aac0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001fb2:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001fb6:	4b08      	ldr	r3, [pc, #32]	; (8001fd8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001fb8:	3a00      	subs	r2, #0
 8001fba:	bf18      	it	ne
 8001fbc:	2201      	movne	r2, #1
 8001fbe:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001fc0:	6803      	ldr	r3, [r0, #0]
    }
 8001fc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001fc6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001fca:	4718      	bx	r3
 8001fcc:	0802bce8 	.word	0x0802bce8
 8001fd0:	0802bd20 	.word	0x0802bd20
 8001fd4:	0802bd6e 	.word	0x0802bd6e
 8001fd8:	200132ba 	.word	0x200132ba

08001fdc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001fdc:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001fde:	4b09      	ldr	r3, [pc, #36]	; (8002004 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001fe0:	881b      	ldrh	r3, [r3, #0]
 8001fe2:	428b      	cmp	r3, r1
 8001fe4:	d803      	bhi.n	8001fee <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001fe6:	4b08      	ldr	r3, [pc, #32]	; (8002008 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001fe8:	881b      	ldrh	r3, [r3, #0]
 8001fea:	4293      	cmp	r3, r2
 8001fec:	d905      	bls.n	8001ffa <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001fee:	4b07      	ldr	r3, [pc, #28]	; (800200c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001ff0:	4a07      	ldr	r2, [pc, #28]	; (8002010 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001ff2:	4808      	ldr	r0, [pc, #32]	; (8002014 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001ff4:	219e      	movs	r1, #158	; 0x9e
 8001ff6:	f028 fd63 	bl	802aac0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001ffa:	4b07      	ldr	r3, [pc, #28]	; (8002018 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001ffc:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001ffe:	4b07      	ldr	r3, [pc, #28]	; (800201c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002000:	801a      	strh	r2, [r3, #0]
    }
 8002002:	bd08      	pop	{r3, pc}
 8002004:	200132b0 	.word	0x200132b0
 8002008:	200132b2 	.word	0x200132b2
 800200c:	0802bdb3 	.word	0x0802bdb3
 8002010:	0802be16 	.word	0x0802be16
 8002014:	0802bd6e 	.word	0x0802bd6e
 8002018:	200132b6 	.word	0x200132b6
 800201c:	200132b8 	.word	0x200132b8

08002020 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002020:	2101      	movs	r1, #1
{
 8002022:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002024:	2200      	movs	r2, #0
 8002026:	4608      	mov	r0, r1
 8002028:	f00a fe48 	bl	800ccbc <osSemaphoreNew>
 800202c:	4b0a      	ldr	r3, [pc, #40]	; (8002058 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800202e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002030:	b928      	cbnz	r0, 800203e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002032:	4b0a      	ldr	r3, [pc, #40]	; (800205c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002034:	4a0a      	ldr	r2, [pc, #40]	; (8002060 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002036:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002038:	480a      	ldr	r0, [pc, #40]	; (8002064 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800203a:	f028 fd41 	bl	802aac0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800203e:	2200      	movs	r2, #0
 8002040:	2104      	movs	r1, #4
 8002042:	2001      	movs	r0, #1
 8002044:	f00a feee 	bl	800ce24 <osMessageQueueNew>
 8002048:	4b07      	ldr	r3, [pc, #28]	; (8002068 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800204a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800204c:	b918      	cbnz	r0, 8002056 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800204e:	4b07      	ldr	r3, [pc, #28]	; (800206c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002050:	4a03      	ldr	r2, [pc, #12]	; (8002060 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002052:	212c      	movs	r1, #44	; 0x2c
 8002054:	e7f0      	b.n	8002038 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002056:	bd08      	pop	{r3, pc}
 8002058:	200008c0 	.word	0x200008c0
 800205c:	0802bf34 	.word	0x0802bf34
 8002060:	0802bf7d 	.word	0x0802bf7d
 8002064:	0802bfac 	.word	0x0802bfac
 8002068:	200008bc 	.word	0x200008bc
 800206c:	0802c026 	.word	0x0802c026

08002070 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002070:	4b02      	ldr	r3, [pc, #8]	; (800207c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002072:	f04f 31ff 	mov.w	r1, #4294967295
 8002076:	6818      	ldr	r0, [r3, #0]
 8002078:	f00a be74 	b.w	800cd64 <osSemaphoreAcquire>
 800207c:	200008c0 	.word	0x200008c0

08002080 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002080:	4b01      	ldr	r3, [pc, #4]	; (8002088 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002082:	6818      	ldr	r0, [r3, #0]
 8002084:	f00a bea2 	b.w	800cdcc <osSemaphoreRelease>
 8002088:	200008c0 	.word	0x200008c0

0800208c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 800208c:	4b02      	ldr	r3, [pc, #8]	; (8002098 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800208e:	2100      	movs	r1, #0
 8002090:	6818      	ldr	r0, [r3, #0]
 8002092:	f00a be67 	b.w	800cd64 <osSemaphoreAcquire>
 8002096:	bf00      	nop
 8002098:	200008c0 	.word	0x200008c0

0800209c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800209c:	f7ff bff0 	b.w	8002080 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080020a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80020a0:	4803      	ldr	r0, [pc, #12]	; (80020b0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80020a2:	4904      	ldr	r1, [pc, #16]	; (80020b4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80020a4:	6800      	ldr	r0, [r0, #0]
 80020a6:	2300      	movs	r3, #0
 80020a8:	461a      	mov	r2, r3
 80020aa:	f00a bef5 	b.w	800ce98 <osMessageQueuePut>
 80020ae:	bf00      	nop
 80020b0:	200008bc 	.word	0x200008bc
 80020b4:	2000002c 	.word	0x2000002c

080020b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80020b8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80020ba:	4c08      	ldr	r4, [pc, #32]	; (80020dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80020bc:	2300      	movs	r3, #0
 80020be:	461a      	mov	r2, r3
 80020c0:	a901      	add	r1, sp, #4
 80020c2:	6820      	ldr	r0, [r4, #0]
 80020c4:	f00a ff1e 	bl	800cf04 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80020c8:	6820      	ldr	r0, [r4, #0]
 80020ca:	f04f 33ff 	mov.w	r3, #4294967295
 80020ce:	2200      	movs	r2, #0
 80020d0:	a901      	add	r1, sp, #4
 80020d2:	f00a ff17 	bl	800cf04 <osMessageQueueGet>
}
 80020d6:	b002      	add	sp, #8
 80020d8:	bd10      	pop	{r4, pc}
 80020da:	bf00      	nop
 80020dc:	200008bc 	.word	0x200008bc

080020e0 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80020e0:	4770      	bx	lr

080020e2 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80020e2:	2000      	movs	r0, #0
 80020e4:	4770      	bx	lr

080020e6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80020e6:	4770      	bx	lr

080020e8 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80020e8:	4770      	bx	lr

080020ea <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80020ea:	2000      	movs	r0, #0
 80020ec:	4770      	bx	lr

080020ee <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80020ee:	4770      	bx	lr

080020f0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80020f0:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80020f2:	4a03      	ldr	r2, [pc, #12]	; (8002100 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80020f4:	4b03      	ldr	r3, [pc, #12]	; (8002104 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80020f6:	4804      	ldr	r0, [pc, #16]	; (8002108 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80020f8:	2122      	movs	r1, #34	; 0x22
 80020fa:	f028 fce1 	bl	802aac0 <__assert_func>
 80020fe:	bf00      	nop
 8002100:	0802c08b 	.word	0x0802c08b
 8002104:	0802c068 	.word	0x0802c068
 8002108:	0802c0c9 	.word	0x0802c0c9

0800210c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800210c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 800210e:	4a03      	ldr	r2, [pc, #12]	; (800211c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002110:	4b03      	ldr	r3, [pc, #12]	; (8002120 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002112:	4804      	ldr	r0, [pc, #16]	; (8002124 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002114:	2127      	movs	r1, #39	; 0x27
 8002116:	f028 fcd3 	bl	802aac0 <__assert_func>
 800211a:	bf00      	nop
 800211c:	0802c141 	.word	0x0802c141
 8002120:	0802c068 	.word	0x0802c068
 8002124:	0802c0c9 	.word	0x0802c0c9

08002128 <_ZN8STM32DMAD0Ev>:
 8002128:	b510      	push	{r4, lr}
 800212a:	2144      	movs	r1, #68	; 0x44
 800212c:	4604      	mov	r4, r0
 800212e:	f027 feb4 	bl	8029e9a <_ZdlPvj>
 8002132:	4620      	mov	r0, r4
 8002134:	bd10      	pop	{r4, pc}
	...

08002138 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002138:	b538      	push	{r3, r4, r5, lr}
 800213a:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 800213c:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800213e:	2500      	movs	r5, #0
 8002140:	4b06      	ldr	r3, [pc, #24]	; (800215c <_ZN8STM32DMAC1Ev+0x24>)
 8002142:	7225      	strb	r5, [r4, #8]
 8002144:	300c      	adds	r0, #12
 8002146:	6060      	str	r0, [r4, #4]
 8002148:	7265      	strb	r5, [r4, #9]
 800214a:	2201      	movs	r2, #1
 800214c:	f841 3b20 	str.w	r3, [r1], #32
 8002150:	f00f fb0c 	bl	801176c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002154:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002156:	4620      	mov	r0, r4
 8002158:	bd38      	pop	{r3, r4, r5, pc}
 800215a:	bf00      	nop
 800215c:	0802c188 	.word	0x0802c188

08002160 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002160:	2001      	movs	r0, #1
 8002162:	4770      	bx	lr

08002164 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002164:	2038      	movs	r0, #56	; 0x38
 8002166:	4770      	bx	lr

08002168 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002168:	2338      	movs	r3, #56	; 0x38
 800216a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800216e:	3008      	adds	r0, #8
 8002170:	4770      	bx	lr

08002172 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002172:	2338      	movs	r3, #56	; 0x38
 8002174:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002178:	3008      	adds	r0, #8
 800217a:	4770      	bx	lr

0800217c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800217c:	2001      	movs	r0, #1
 800217e:	4770      	bx	lr

08002180 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002180:	f241 70cc 	movw	r0, #6092	; 0x17cc
 8002184:	4770      	bx	lr

08002186 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002186:	f241 73cc 	movw	r3, #6092	; 0x17cc
 800218a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800218e:	3008      	adds	r0, #8
 8002190:	4770      	bx	lr

08002192 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002192:	f241 73cc 	movw	r3, #6092	; 0x17cc
 8002196:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800219a:	3008      	adds	r0, #8
 800219c:	4770      	bx	lr

0800219e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800219e:	2001      	movs	r0, #1
 80021a0:	4770      	bx	lr

080021a2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80021a2:	2010      	movs	r0, #16
 80021a4:	4770      	bx	lr

080021a6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80021a6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80021aa:	3008      	adds	r0, #8
 80021ac:	4770      	bx	lr

080021ae <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80021ae:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80021b2:	3008      	adds	r0, #8
 80021b4:	4770      	bx	lr

080021b6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 80021b6:	4608      	mov	r0, r1
 80021b8:	f001 be52 	b.w	8003e60 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

080021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80021bc:	b510      	push	{r4, lr}
 80021be:	4b03      	ldr	r3, [pc, #12]	; (80021cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 80021c0:	6003      	str	r3, [r0, #0]
 80021c2:	4604      	mov	r4, r0
 80021c4:	f00d fafb 	bl	800f7be <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021c8:	4620      	mov	r0, r4
 80021ca:	bd10      	pop	{r4, pc}
 80021cc:	0802c240 	.word	0x0802c240

080021d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80021d0:	b510      	push	{r4, lr}
 80021d2:	4604      	mov	r4, r0
 80021d4:	f7ff fff2 	bl	80021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80021d8:	4620      	mov	r0, r4
 80021da:	2140      	movs	r1, #64	; 0x40
 80021dc:	f027 fe5d 	bl	8029e9a <_ZdlPvj>
 80021e0:	4620      	mov	r0, r4
 80021e2:	bd10      	pop	{r4, pc}

080021e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021e4:	b510      	push	{r4, lr}
 80021e6:	4b03      	ldr	r3, [pc, #12]	; (80021f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021e8:	6003      	str	r3, [r0, #0]
 80021ea:	4604      	mov	r4, r0
 80021ec:	f00d fae7 	bl	800f7be <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021f0:	4620      	mov	r0, r4
 80021f2:	bd10      	pop	{r4, pc}
 80021f4:	0802c20c 	.word	0x0802c20c

080021f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021f8:	b510      	push	{r4, lr}
 80021fa:	4604      	mov	r4, r0
 80021fc:	f7ff fff2 	bl	80021e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002200:	4620      	mov	r0, r4
 8002202:	f241 71d4 	movw	r1, #6100	; 0x17d4
 8002206:	f027 fe48 	bl	8029e9a <_ZdlPvj>
 800220a:	4620      	mov	r0, r4
 800220c:	bd10      	pop	{r4, pc}
	...

08002210 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002210:	b510      	push	{r4, lr}
 8002212:	4b03      	ldr	r3, [pc, #12]	; (8002220 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002214:	6003      	str	r3, [r0, #0]
 8002216:	4604      	mov	r4, r0
 8002218:	f00d fad1 	bl	800f7be <_ZN8touchgfx17AbstractPartitionD1Ev>
 800221c:	4620      	mov	r0, r4
 800221e:	bd10      	pop	{r4, pc}
 8002220:	0802c1d8 	.word	0x0802c1d8

08002224 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002224:	b510      	push	{r4, lr}
 8002226:	4604      	mov	r4, r0
 8002228:	f7ff fff2 	bl	8002210 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800222c:	4620      	mov	r0, r4
 800222e:	2118      	movs	r1, #24
 8002230:	f027 fe33 	bl	8029e9a <_ZdlPvj>
 8002234:	4620      	mov	r0, r4
 8002236:	bd10      	pop	{r4, pc}

08002238 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002238:	b510      	push	{r4, lr}
 800223a:	4b08      	ldr	r3, [pc, #32]	; (800225c <_ZN12FrontendHeapD1Ev+0x24>)
 800223c:	6003      	str	r3, [r0, #0]
 800223e:	4604      	mov	r4, r0
 8002240:	f500 50c0 	add.w	r0, r0, #6144	; 0x1800
 8002244:	f7ff ffba 	bl	80021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002248:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800224c:	f7ff ffca 	bl	80021e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002250:	f104 0014 	add.w	r0, r4, #20
 8002254:	f7ff ffdc 	bl	8002210 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002258:	4620      	mov	r0, r4
 800225a:	bd10      	pop	{r4, pc}
 800225c:	0802c274 	.word	0x0802c274

08002260 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002260:	b508      	push	{r3, lr}
 8002262:	4802      	ldr	r0, [pc, #8]	; (800226c <__tcf_0+0xc>)
 8002264:	f7ff ffe8 	bl	8002238 <_ZN12FrontendHeapD1Ev>
 8002268:	bd08      	pop	{r3, pc}
 800226a:	bf00      	nop
 800226c:	200008c8 	.word	0x200008c8

08002270 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002270:	b510      	push	{r4, lr}
 8002272:	4604      	mov	r4, r0
 8002274:	f7ff ffe0 	bl	8002238 <_ZN12FrontendHeapD1Ev>
 8002278:	4620      	mov	r0, r4
 800227a:	f641 11a4 	movw	r1, #6564	; 0x19a4
 800227e:	f027 fe0c 	bl	8029e9a <_ZdlPvj>
 8002282:	4620      	mov	r0, r4
 8002284:	bd10      	pop	{r4, pc}
	...

08002288 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002288:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800228c:	f000 fa5a 	bl	8002744 <_ZN14BitmapDatabase11getInstanceEv>
 8002290:	4605      	mov	r5, r0
 8002292:	f000 fa5b 	bl	800274c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002296:	2400      	movs	r4, #0
 8002298:	4601      	mov	r1, r0
 800229a:	4623      	mov	r3, r4
 800229c:	4628      	mov	r0, r5
 800229e:	4622      	mov	r2, r4
 80022a0:	9400      	str	r4, [sp, #0]
 80022a2:	f017 f981 	bl	80195a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80022a6:	4b26      	ldr	r3, [pc, #152]	; (8002340 <touchgfx_init+0xb8>)
 80022a8:	4a26      	ldr	r2, [pc, #152]	; (8002344 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80022aa:	4d27      	ldr	r5, [pc, #156]	; (8002348 <touchgfx_init+0xc0>)
 80022ac:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80022ae:	4620      	mov	r0, r4
 80022b0:	f005 fde6 	bl	8007e80 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80022b4:	4825      	ldr	r0, [pc, #148]	; (800234c <touchgfx_init+0xc4>)
 80022b6:	f017 f8df 	bl	8019478 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80022ba:	682b      	ldr	r3, [r5, #0]
 80022bc:	f3bf 8f5b 	dmb	ish
 80022c0:	07db      	lsls	r3, r3, #31
 80022c2:	d437      	bmi.n	8002334 <touchgfx_init+0xac>
 80022c4:	4628      	mov	r0, r5
 80022c6:	f027 fdea 	bl	8029e9e <__cxa_guard_acquire>
 80022ca:	b398      	cbz	r0, 8002334 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80022cc:	4c20      	ldr	r4, [pc, #128]	; (8002350 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80022ce:	4b21      	ldr	r3, [pc, #132]	; (8002354 <touchgfx_init+0xcc>)
 80022d0:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
 80022d2:	f504 57c0 	add.w	r7, r4, #6144	; 0x1800
          frontendApplication(app)
 80022d6:	f107 0648 	add.w	r6, r7, #72	; 0x48
        : presenterStorage(pres),
 80022da:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80022de:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 80022e2:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80022e4:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80022e8:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80022ea:	6126      	str	r6, [r4, #16]
 80022ec:	f00d fa68 	bl	800f7c0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022f0:	4b19      	ldr	r3, [pc, #100]	; (8002358 <touchgfx_init+0xd0>)
 80022f2:	6163      	str	r3, [r4, #20]
 80022f4:	4640      	mov	r0, r8
 80022f6:	f00d fa63 	bl	800f7c0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022fa:	4b18      	ldr	r3, [pc, #96]	; (800235c <touchgfx_init+0xd4>)
 80022fc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80022fe:	4638      	mov	r0, r7
 8002300:	f00d fa5e 	bl	800f7c0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002304:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002308:	4a15      	ldr	r2, [pc, #84]	; (8002360 <touchgfx_init+0xd8>)
 800230a:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800230e:	f504 50c2 	add.w	r0, r4, #6208	; 0x1840
 8002312:	f006 f9ff 	bl	8008714 <_ZN5ModelC1Ev>
 8002316:	4622      	mov	r2, r4
 8002318:	f504 51c2 	add.w	r1, r4, #6208	; 0x1840
 800231c:	4630      	mov	r0, r6
 800231e:	f005 ff09 	bl	8008134 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002322:	4630      	mov	r0, r6
 8002324:	f001 fd9c 	bl	8003e60 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002328:	480e      	ldr	r0, [pc, #56]	; (8002364 <touchgfx_init+0xdc>)
 800232a:	f028 fbe7 	bl	802aafc <atexit>
 800232e:	4628      	mov	r0, r5
 8002330:	f027 fdc1 	bl	8029eb6 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002334:	480c      	ldr	r0, [pc, #48]	; (8002368 <touchgfx_init+0xe0>)
}
 8002336:	b002      	add	sp, #8
 8002338:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800233c:	f7ff bdb6 	b.w	8001eac <_ZN11TouchGFXHAL10initializeEv>
 8002340:	20013320 	.word	0x20013320
 8002344:	20002330 	.word	0x20002330
 8002348:	200008c4 	.word	0x200008c4
 800234c:	20000030 	.word	0x20000030
 8002350:	200008c8 	.word	0x200008c8
 8002354:	0802c274 	.word	0x0802c274
 8002358:	0802c1d8 	.word	0x0802c1d8
 800235c:	0802c20c 	.word	0x0802c20c
 8002360:	0802c240 	.word	0x0802c240
 8002364:	08002261 	.word	0x08002261
 8002368:	200022b4 	.word	0x200022b4

0800236c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 800236c:	4770      	bx	lr
	...

08002370 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002370:	4801      	ldr	r0, [pc, #4]	; (8002378 <touchgfx_taskEntry+0x8>)
 8002372:	f7ff bda9 	b.w	8001ec8 <_ZN11TouchGFXHAL9taskEntryEv>
 8002376:	bf00      	nop
 8002378:	200022b4 	.word	0x200022b4

0800237c <_GLOBAL__sub_I_touchgfx_init>:
}
 800237c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800237e:	4e22      	ldr	r6, [pc, #136]	; (8002408 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002380:	4c22      	ldr	r4, [pc, #136]	; (800240c <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002382:	4d23      	ldr	r5, [pc, #140]	; (8002410 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002384:	4b23      	ldr	r3, [pc, #140]	; (8002414 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002386:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002388:	4630      	mov	r0, r6
 800238a:	f7ff fed5 	bl	8002138 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800238e:	4628      	mov	r0, r5
 8002390:	f01b fbd6 	bl	801db40 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002394:	4b20      	ldr	r3, [pc, #128]	; (8002418 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002396:	4821      	ldr	r0, [pc, #132]	; (800241c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002398:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800239a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800239c:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 80023a0:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 80023a4:	491e      	ldr	r1, [pc, #120]	; (8002420 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80023a6:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 80023a8:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80023ac:	491d      	ldr	r1, [pc, #116]	; (8002424 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80023ae:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 80023b0:	491d      	ldr	r1, [pc, #116]	; (8002428 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80023b2:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 80023b6:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80023b8:	21f0      	movs	r1, #240	; 0xf0
 80023ba:	8001      	strh	r1, [r0, #0]
 80023bc:	481b      	ldr	r0, [pc, #108]	; (800242c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80023be:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80023c0:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023c2:	481b      	ldr	r0, [pc, #108]	; (8002430 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80023c4:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023c8:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80023cc:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80023d0:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80023d4:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80023d8:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80023dc:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80023e0:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80023e4:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80023e8:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80023ec:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80023ee:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023f2:	8001      	strh	r1, [r0, #0]
 80023f4:	480f      	ldr	r0, [pc, #60]	; (8002434 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80023f6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80023f8:	490f      	ldr	r1, [pc, #60]	; (8002438 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80023fa:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80023fc:	2201      	movs	r2, #1
 80023fe:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002402:	4a0e      	ldr	r2, [pc, #56]	; (800243c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8002404:	601a      	str	r2, [r3, #0]
}
 8002406:	bd70      	pop	{r4, r5, r6, pc}
 8002408:	20002270 	.word	0x20002270
 800240c:	2000226c 	.word	0x2000226c
 8002410:	20002334 	.word	0x20002334
 8002414:	0802bcd8 	.word	0x0802bcd8
 8002418:	200022b4 	.word	0x200022b4
 800241c:	200132b0 	.word	0x200132b0
 8002420:	01000001 	.word	0x01000001
 8002424:	01010000 	.word	0x01010000
 8002428:	200132bc 	.word	0x200132bc
 800242c:	200132b6 	.word	0x200132b6
 8002430:	200132b2 	.word	0x200132b2
 8002434:	200132b8 	.word	0x200132b8
 8002438:	200132b4 	.word	0x200132b4
 800243c:	0802be64 	.word	0x0802be64

08002440 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002440:	2000      	movs	r0, #0
 8002442:	4770      	bx	lr

08002444 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002444:	8081      	strh	r1, [r0, #4]
    }
 8002446:	4770      	bx	lr

08002448 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002448:	80c1      	strh	r1, [r0, #6]
    }
 800244a:	4770      	bx	lr

0800244c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800244c:	8101      	strh	r1, [r0, #8]
    }
 800244e:	4770      	bx	lr

08002450 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002450:	8141      	strh	r1, [r0, #10]
    }
 8002452:	4770      	bx	lr

08002454 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002454:	4770      	bx	lr

08002456 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002456:	4770      	bx	lr

08002458 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002458:	4770      	bx	lr

0800245a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800245a:	4770      	bx	lr

0800245c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800245c:	4770      	bx	lr

0800245e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800245e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002460:	88c4      	ldrh	r4, [r0, #6]
 8002462:	6803      	ldr	r3, [r0, #0]
 8002464:	1b12      	subs	r2, r2, r4
 8002466:	8884      	ldrh	r4, [r0, #4]
 8002468:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800246a:	1b09      	subs	r1, r1, r4
 800246c:	b212      	sxth	r2, r2
    }
 800246e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002472:	b209      	sxth	r1, r1
 8002474:	4718      	bx	r3

08002476 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002476:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800247a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800247c:	f04f 33ff 	mov.w	r3, #4294967295
 8002480:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002482:	6813      	ldr	r3, [r2, #0]
 8002484:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002486:	6010      	str	r0, [r2, #0]
    }
 8002488:	4770      	bx	lr

0800248a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800248a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800248e:	b11a      	cbz	r2, 8002498 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002490:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002494:	b102      	cbz	r2, 8002498 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002496:	6018      	str	r0, [r3, #0]
        }
    }
 8002498:	4770      	bx	lr

0800249a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800249a:	2000      	movs	r0, #0
 800249c:	4770      	bx	lr

0800249e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800249e:	888b      	ldrh	r3, [r1, #4]
 80024a0:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80024a2:	2001      	movs	r0, #1
 80024a4:	4770      	bx	lr

080024a6 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80024a6:	4770      	bx	lr

080024a8 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80024a8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80024ac:	4770      	bx	lr

080024ae <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80024ae:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80024b2:	4770      	bx	lr

080024b4 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80024b4:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80024b6:	2200      	movs	r2, #0
        return rect.width;
 80024b8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80024bc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80024c0:	8002      	strh	r2, [r0, #0]
 80024c2:	8042      	strh	r2, [r0, #2]
 80024c4:	8084      	strh	r4, [r0, #4]
 80024c6:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80024c8:	bd10      	pop	{r4, pc}

080024ca <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80024ca:	2200      	movs	r2, #0
 80024cc:	8002      	strh	r2, [r0, #0]
 80024ce:	8042      	strh	r2, [r0, #2]
 80024d0:	8082      	strh	r2, [r0, #4]
 80024d2:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80024d4:	4770      	bx	lr
	...

080024d8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80024d8:	4b02      	ldr	r3, [pc, #8]	; (80024e4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80024da:	2290      	movs	r2, #144	; 0x90
 80024dc:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80024e0:	4770      	bx	lr
 80024e2:	bf00      	nop
 80024e4:	e000e100 	.word	0xe000e100

080024e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80024e8:	4b02      	ldr	r3, [pc, #8]	; (80024f4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80024ea:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80024ee:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80024f0:	4770      	bx	lr
 80024f2:	bf00      	nop
 80024f4:	e000e100 	.word	0xe000e100

080024f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80024f8:	4a09      	ldr	r2, [pc, #36]	; (8002520 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80024fa:	490a      	ldr	r1, [pc, #40]	; (8002524 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80024fc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80024fe:	480a      	ldr	r0, [pc, #40]	; (8002528 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002500:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002504:	3b01      	subs	r3, #1
 8002506:	b29b      	uxth	r3, r3
 8002508:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800250a:	6911      	ldr	r1, [r2, #16]
 800250c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002510:	3901      	subs	r1, #1
 8002512:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002514:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002516:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002518:	f043 0301 	orr.w	r3, r3, #1
 800251c:	6353      	str	r3, [r2, #52]	; 0x34
}
 800251e:	4770      	bx	lr
 8002520:	40016800 	.word	0x40016800
 8002524:	200023ba 	.word	0x200023ba
 8002528:	200023b8 	.word	0x200023b8

0800252c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800252c:	4b01      	ldr	r3, [pc, #4]	; (8002534 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800252e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002532:	4770      	bx	lr
 8002534:	40016800 	.word	0x40016800

08002538 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002538:	4b02      	ldr	r3, [pc, #8]	; (8002544 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800253a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800253c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002540:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002542:	4770      	bx	lr
 8002544:	40016800 	.word	0x40016800

08002548 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002548:	b570      	push	{r4, r5, r6, lr}
 800254a:	4604      	mov	r4, r0
    HAL::initialize();
 800254c:	f00e fa77 	bl	8010a3e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002550:	6823      	ldr	r3, [r4, #0]
 8002552:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002554:	f013 fbec 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 8002558:	4601      	mov	r1, r0
 800255a:	4620      	mov	r0, r4
 800255c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800255e:	6823      	ldr	r3, [r4, #0]
 8002560:	4a05      	ldr	r2, [pc, #20]	; (8002578 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002562:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002566:	4620      	mov	r0, r4
 8002568:	46ac      	mov	ip, r5
 800256a:	2300      	movs	r3, #0
}
 800256c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002570:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002574:	4760      	bx	ip
 8002576:	bf00      	nop
 8002578:	d004b000 	.word	0xd004b000

0800257c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800257c:	f00e ba46 	b.w	8010a0c <_ZN8touchgfx3HAL10beginFrameEv>

08002580 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002580:	f00e ba50 	b.w	8010a24 <_ZN8touchgfx3HAL8endFrameEv>

08002584 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002584:	f00e ba0b 	b.w	801099e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002588 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002588:	f00e bb6d 	b.w	8010c66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800258c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800258c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002590:	b112      	cbz	r2, 8002598 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002592:	6803      	ldr	r3, [r0, #0]
 8002594:	695b      	ldr	r3, [r3, #20]
 8002596:	4718      	bx	r3
    }
 8002598:	4770      	bx	lr
	...

0800259c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800259c:	4b04      	ldr	r3, [pc, #16]	; (80025b0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800259e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80025a2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80025a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80025aa:	f3bf 8f6f 	isb	sy
}
 80025ae:	4770      	bx	lr
 80025b0:	e000e100 	.word	0xe000e100

080025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80025b4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80025b6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80025b8:	4e12      	ldr	r6, [pc, #72]	; (8002604 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80025ba:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80025bc:	4b12      	ldr	r3, [pc, #72]	; (8002608 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80025be:	6003      	str	r3, [r0, #0]
 80025c0:	6833      	ldr	r3, [r6, #0]
 80025c2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80025c6:	4605      	mov	r5, r0
 80025c8:	b10a      	cbz	r2, 80025ce <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80025ca:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025cc:	b900      	cbnz	r0, 80025d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80025ce:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80025d0:	6803      	ldr	r3, [r0, #0]
 80025d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025d4:	4798      	blx	r3
        return auxiliaryLCD;
 80025d6:	6833      	ldr	r3, [r6, #0]
 80025d8:	fab0 f480 	clz	r4, r0
 80025dc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025de:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80025e0:	b130      	cbz	r0, 80025f0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80025e2:	6803      	ldr	r3, [r0, #0]
 80025e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025e6:	4798      	blx	r3
 80025e8:	2800      	cmp	r0, #0
 80025ea:	bf08      	it	eq
 80025ec:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80025f0:	b92c      	cbnz	r4, 80025fe <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80025f2:	4b06      	ldr	r3, [pc, #24]	; (800260c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80025f4:	4a06      	ldr	r2, [pc, #24]	; (8002610 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80025f6:	4807      	ldr	r0, [pc, #28]	; (8002614 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80025f8:	212c      	movs	r1, #44	; 0x2c
 80025fa:	f028 fa61 	bl	802aac0 <__assert_func>
    }
 80025fe:	4628      	mov	r0, r5
 8002600:	bd70      	pop	{r4, r5, r6, pc}
 8002602:	bf00      	nop
 8002604:	200132bc 	.word	0x200132bc
 8002608:	0802c384 	.word	0x0802c384
 800260c:	0802c280 	.word	0x0802c280
 8002610:	0802c2de 	.word	0x0802c2de
 8002614:	0802c317 	.word	0x0802c317

08002618 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8002618:	4770      	bx	lr
	...

0800261c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 800261c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8002620:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 8002622:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8002626:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 800262a:	d105      	bne.n	8002638 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 800262c:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8002630:	4281      	cmp	r1, r0
 8002632:	d8fb      	bhi.n	800262c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002634:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002638:	4f17      	ldr	r7, [pc, #92]	; (8002698 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800263a:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800263e:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002642:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002646:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800264a:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800264c:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800264e:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002650:	b2db      	uxtb	r3, r3
 8002652:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002654:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002658:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800265c:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002660:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002664:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002668:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800266c:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002670:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002674:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002676:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800267a:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800267e:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002682:	fbbe fef5 	udiv	lr, lr, r5
 8002686:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800268a:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800268e:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002692:	4281      	cmp	r1, r0
 8002694:	d8de      	bhi.n	8002654 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002696:	e7cd      	b.n	8002634 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002698:	fffff800 	.word	0xfffff800

0800269c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800269c:	b510      	push	{r4, lr}
        return instance;
 800269e:	4c14      	ldr	r4, [pc, #80]	; (80026f0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80026a0:	6823      	ldr	r3, [r4, #0]
 80026a2:	b323      	cbz	r3, 80026ee <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80026a4:	4b13      	ldr	r3, [pc, #76]	; (80026f4 <HAL_LTDC_LineEventCallback+0x58>)
 80026a6:	4a14      	ldr	r2, [pc, #80]	; (80026f8 <HAL_LTDC_LineEventCallback+0x5c>)
 80026a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026aa:	8811      	ldrh	r1, [r2, #0]
 80026ac:	428b      	cmp	r3, r1
 80026ae:	d113      	bne.n	80026d8 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80026b0:	4b12      	ldr	r3, [pc, #72]	; (80026fc <HAL_LTDC_LineEventCallback+0x60>)
 80026b2:	8819      	ldrh	r1, [r3, #0]
 80026b4:	f008 fd9a 	bl	800b1ec <HAL_LTDC_ProgramLineEvent>
 80026b8:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80026ba:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80026be:	3301      	adds	r3, #1
 80026c0:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80026c4:	f7ff fcec 	bl	80020a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80026c8:	6820      	ldr	r0, [r4, #0]
 80026ca:	f00e fef7 	bl	80114bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80026ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80026d2:	2000      	movs	r0, #0
 80026d4:	f7ff bb64 	b.w	8001da0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80026d8:	f008 fd88 	bl	800b1ec <HAL_LTDC_ProgramLineEvent>
        return instance;
 80026dc:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80026de:	6803      	ldr	r3, [r0, #0]
 80026e0:	6a1b      	ldr	r3, [r3, #32]
 80026e2:	4798      	blx	r3
    }
 80026e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80026e8:	2000      	movs	r0, #0
 80026ea:	f7ff bb71 	b.w	8001dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80026ee:	bd10      	pop	{r4, pc}
 80026f0:	200132bc 	.word	0x200132bc
 80026f4:	40016800 	.word	0x40016800
 80026f8:	200023ba 	.word	0x200023ba
 80026fc:	200023b8 	.word	0x200023b8

08002700 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002700:	4770      	bx	lr

08002702 <_ZN23ApplicationFontProviderD0Ev>:
 8002702:	b510      	push	{r4, lr}
 8002704:	2104      	movs	r1, #4
 8002706:	4604      	mov	r4, r0
 8002708:	f027 fbc7 	bl	8029e9a <_ZdlPvj>
 800270c:	4620      	mov	r0, r4
 800270e:	bd10      	pop	{r4, pc}

08002710 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002710:	b508      	push	{r3, lr}
    switch (typography)
 8002712:	2903      	cmp	r1, #3
 8002714:	d813      	bhi.n	800273e <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002716:	e8df f001 	tbb	[pc, r1]
 800271a:	0602      	.short	0x0602
 800271c:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800271e:	f005 fbfb 	bl	8007f18 <_ZN17TypedTextDatabase8getFontsEv>
 8002722:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002724:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002726:	f005 fbf7 	bl	8007f18 <_ZN17TypedTextDatabase8getFontsEv>
 800272a:	6840      	ldr	r0, [r0, #4]
 800272c:	e7fa      	b.n	8002724 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800272e:	f005 fbf3 	bl	8007f18 <_ZN17TypedTextDatabase8getFontsEv>
 8002732:	6880      	ldr	r0, [r0, #8]
 8002734:	e7f6      	b.n	8002724 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002736:	f005 fbef 	bl	8007f18 <_ZN17TypedTextDatabase8getFontsEv>
 800273a:	68c0      	ldr	r0, [r0, #12]
 800273c:	e7f2      	b.n	8002724 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800273e:	2000      	movs	r0, #0
 8002740:	e7f0      	b.n	8002724 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002744 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002744:	4800      	ldr	r0, [pc, #0]	; (8002748 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002746:	4770      	bx	lr
 8002748:	0802c3b0 	.word	0x0802c3b0

0800274c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800274c:	200c      	movs	r0, #12
 800274e:	4770      	bx	lr

08002750 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002750:	b513      	push	{r0, r1, r4, lr}
 8002752:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002754:	b151      	cbz	r1, 800276c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002756:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002758:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800275a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800275e:	aa01      	add	r2, sp, #4
 8002760:	689c      	ldr	r4, [r3, #8]
 8002762:	f10d 0303 	add.w	r3, sp, #3
 8002766:	47a0      	blx	r4
        return glyph;
    }
 8002768:	b002      	add	sp, #8
 800276a:	bd10      	pop	{r4, pc}
            return 0;
 800276c:	4608      	mov	r0, r1
 800276e:	e7fb      	b.n	8002768 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002770 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002770:	89c0      	ldrh	r0, [r0, #14]
 8002772:	4770      	bx	lr

08002774 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002774:	8a00      	ldrh	r0, [r0, #16]
 8002776:	4770      	bx	lr

08002778 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002778:	88c0      	ldrh	r0, [r0, #6]
 800277a:	4770      	bx	lr

0800277c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 800277c:	8880      	ldrh	r0, [r0, #4]
 800277e:	4770      	bx	lr

08002780 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002780:	7a80      	ldrb	r0, [r0, #10]
    }
 8002782:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002786:	4770      	bx	lr

08002788 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002788:	7a80      	ldrb	r0, [r0, #10]
    }
 800278a:	09c0      	lsrs	r0, r0, #7
 800278c:	4770      	bx	lr

0800278e <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800278e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002790:	4770      	bx	lr

08002792 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002792:	4770      	bx	lr

08002794 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002794:	4770      	bx	lr

08002796 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002796:	4770      	bx	lr

08002798 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002798:	4770      	bx	lr

0800279a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800279a:	4770      	bx	lr

0800279c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800279c:	4770      	bx	lr

0800279e <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800279e:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80027a0:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80027a2:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80027a4:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027a6:	466d      	mov	r5, sp
 80027a8:	4601      	mov	r1, r0
 80027aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80027ae:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027b0:	4628      	mov	r0, r5
 80027b2:	4798      	blx	r3
 80027b4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027b8:	343c      	adds	r4, #60	; 0x3c
 80027ba:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80027be:	b005      	add	sp, #20
 80027c0:	bd30      	pop	{r4, r5, pc}

080027c2 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80027c2:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80027c4:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80027c6:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80027c8:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027ca:	466d      	mov	r5, sp
 80027cc:	4601      	mov	r1, r0
 80027ce:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80027d2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027d4:	4628      	mov	r0, r5
 80027d6:	4798      	blx	r3
 80027d8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027dc:	343c      	adds	r4, #60	; 0x3c
 80027de:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80027e2:	b005      	add	sp, #20
 80027e4:	bd30      	pop	{r4, r5, pc}

080027e6 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80027e6:	2200      	movs	r2, #0
 80027e8:	8002      	strh	r2, [r0, #0]
 80027ea:	8042      	strh	r2, [r0, #2]
 80027ec:	8082      	strh	r2, [r0, #4]
 80027ee:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80027f0:	4770      	bx	lr

080027f2 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80027f2:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80027f6:	4770      	bx	lr

080027f8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027f8:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80027fa:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027fc:	4604      	mov	r4, r0
        setX(x);
 80027fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002800:	4615      	mov	r5, r2
        setX(x);
 8002802:	4798      	blx	r3
        setBaselineY(baselineY);
 8002804:	6823      	ldr	r3, [r4, #0]
 8002806:	4629      	mov	r1, r5
 8002808:	4620      	mov	r0, r4
 800280a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 800280c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002810:	4718      	bx	r3

08002812 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002812:	2000      	movs	r0, #0
 8002814:	4770      	bx	lr

08002816 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002816:	2200      	movs	r2, #0
 8002818:	f04f 31ff 	mov.w	r1, #4294967295
 800281c:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002820:	6082      	str	r2, [r0, #8]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
 8002822:	4770      	bx	lr

08002824 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002824:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002826:	4770      	bx	lr

08002828 <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 8002828:	4770      	bx	lr

0800282a <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 800282a:	6803      	ldr	r3, [r0, #0]
 800282c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800282e:	4718      	bx	r3

08002830 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 8002830:	6803      	ldr	r3, [r0, #0]
 8002832:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002834:	4718      	bx	r3

08002836 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002836:	4770      	bx	lr

08002838 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002838:	4770      	bx	lr

0800283a <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 800283a:	4770      	bx	lr

0800283c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800283c:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800283e:	68c2      	ldr	r2, [r0, #12]
 8002840:	6844      	ldr	r4, [r0, #4]
 8002842:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002844:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002846:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800284a:	07d2      	lsls	r2, r2, #31
 800284c:	bf48      	it	mi
 800284e:	5962      	ldrmi	r2, [r4, r5]
 8002850:	689b      	ldr	r3, [r3, #8]
    }
 8002852:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002854:	bf48      	it	mi
 8002856:	58d3      	ldrmi	r3, [r2, r3]
 8002858:	4718      	bx	r3

0800285a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800285a:	6843      	ldr	r3, [r0, #4]
 800285c:	b12b      	cbz	r3, 800286a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800285e:	6883      	ldr	r3, [r0, #8]
 8002860:	b92b      	cbnz	r3, 800286e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002862:	68c0      	ldr	r0, [r0, #12]
 8002864:	f000 0001 	and.w	r0, r0, #1
 8002868:	4770      	bx	lr
 800286a:	4618      	mov	r0, r3
 800286c:	4770      	bx	lr
 800286e:	2001      	movs	r0, #1
    }
 8002870:	4770      	bx	lr

08002872 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002872:	b510      	push	{r4, lr}
    }
 8002874:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002876:	4604      	mov	r4, r0
    }
 8002878:	f027 fb0f 	bl	8029e9a <_ZdlPvj>
 800287c:	4620      	mov	r0, r4
 800287e:	bd10      	pop	{r4, pc}

08002880 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002880:	b510      	push	{r4, lr}
 8002882:	214c      	movs	r1, #76	; 0x4c
 8002884:	4604      	mov	r4, r0
 8002886:	f027 fb08 	bl	8029e9a <_ZdlPvj>
 800288a:	4620      	mov	r0, r4
 800288c:	bd10      	pop	{r4, pc}

0800288e <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800288e:	b510      	push	{r4, lr}
 8002890:	2110      	movs	r1, #16
 8002892:	4604      	mov	r4, r0
 8002894:	f027 fb01 	bl	8029e9a <_ZdlPvj>
 8002898:	4620      	mov	r0, r4
 800289a:	bd10      	pop	{r4, pc}

0800289c <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 800289c:	b510      	push	{r4, lr}
 800289e:	218c      	movs	r1, #140	; 0x8c
 80028a0:	4604      	mov	r4, r0
 80028a2:	f027 fafa 	bl	8029e9a <_ZdlPvj>
 80028a6:	4620      	mov	r0, r4
 80028a8:	bd10      	pop	{r4, pc}
	...

080028ac <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80028ac:	b538      	push	{r3, r4, r5, lr}
 80028ae:	4605      	mov	r5, r0
 80028b0:	4b05      	ldr	r3, [pc, #20]	; (80028c8 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 80028b2:	f845 3be0 	str.w	r3, [r5], #224
 80028b6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80028b8:	f011 fd38 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 80028bc:	4628      	mov	r0, r5
 80028be:	f00d fbed 	bl	801009c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 80028c2:	4620      	mov	r0, r4
 80028c4:	bd38      	pop	{r3, r4, r5, pc}
 80028c6:	bf00      	nop
 80028c8:	0802c798 	.word	0x0802c798

080028cc <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80028cc:	b510      	push	{r4, lr}
 80028ce:	4604      	mov	r4, r0
}
 80028d0:	f7ff ffec 	bl	80028ac <_ZN23Calibration_PadViewBaseD1Ev>
 80028d4:	4620      	mov	r0, r4
 80028d6:	f241 71cc 	movw	r1, #6092	; 0x17cc
 80028da:	f027 fade 	bl	8029e9a <_ZdlPvj>
 80028de:	4620      	mov	r0, r4
 80028e0:	bd10      	pop	{r4, pc}

080028e2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80028e2:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80028e4:	f7ff fe52 	bl	800258c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80028e8:	bd08      	pop	{r3, pc}
	...

080028ec <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028ec:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028ee:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028f0:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80028f2:	4b12      	ldr	r3, [pc, #72]	; (800293c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80028f4:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028f6:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028f8:	b28d      	uxth	r5, r1
 80028fa:	b92b      	cbnz	r3, 8002908 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80028fc:	4b10      	ldr	r3, [pc, #64]	; (8002940 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80028fe:	4a11      	ldr	r2, [pc, #68]	; (8002944 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002900:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002902:	4811      	ldr	r0, [pc, #68]	; (8002948 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002904:	f028 f8dc 	bl	802aac0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002908:	4910      	ldr	r1, [pc, #64]	; (800294c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800290a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800290c:	8809      	ldrh	r1, [r1, #0]
 800290e:	4291      	cmp	r1, r2
 8002910:	d803      	bhi.n	800291a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002912:	4b0f      	ldr	r3, [pc, #60]	; (8002950 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002914:	4a0b      	ldr	r2, [pc, #44]	; (8002944 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002916:	216d      	movs	r1, #109	; 0x6d
 8002918:	e7f3      	b.n	8002902 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800291a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800291e:	4b0d      	ldr	r3, [pc, #52]	; (8002954 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002926:	6803      	ldr	r3, [r0, #0]
 8002928:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800292a:	4798      	blx	r3
 800292c:	1a28      	subs	r0, r5, r0
 800292e:	b201      	sxth	r1, r0
 8002930:	4633      	mov	r3, r6
 8002932:	4620      	mov	r0, r4
    }
 8002934:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002938:	4718      	bx	r3
 800293a:	bf00      	nop
 800293c:	20013314 	.word	0x20013314
 8002940:	0802c4a0 	.word	0x0802c4a0
 8002944:	0802c4e2 	.word	0x0802c4e2
 8002948:	0802c51d 	.word	0x0802c51d
 800294c:	20013318 	.word	0x20013318
 8002950:	0802c564 	.word	0x0802c564
 8002954:	2001331c 	.word	0x2001331c

08002958 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002958:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800295a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800295c:	4604      	mov	r4, r0
        setX(x);
 800295e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002960:	4615      	mov	r5, r2
        setX(x);
 8002962:	4798      	blx	r3
        setY(y);
 8002964:	6823      	ldr	r3, [r4, #0]
 8002966:	4629      	mov	r1, r5
 8002968:	4620      	mov	r0, r4
 800296a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800296c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002970:	4718      	bx	r3

08002972 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002972:	b570      	push	{r4, r5, r6, lr}
 8002974:	4604      	mov	r4, r0
 8002976:	461d      	mov	r5, r3
 8002978:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800297c:	f7ff ffec 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002980:	6823      	ldr	r3, [r4, #0]
 8002982:	4629      	mov	r1, r5
 8002984:	4620      	mov	r0, r4
 8002986:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002988:	4798      	blx	r3
        setHeight(height);
 800298a:	6823      	ldr	r3, [r4, #0]
 800298c:	4631      	mov	r1, r6
 800298e:	4620      	mov	r0, r4
 8002990:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002992:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002996:	4718      	bx	r3

08002998 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 8002998:	f44f 7180 	mov.w	r1, #256	; 0x100
 800299c:	2200      	movs	r2, #0
 800299e:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 80029a0:	4905      	ldr	r1, [pc, #20]	; (80029b8 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 80029a2:	6001      	str	r1, [r0, #0]
 80029a4:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80029a8:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80029ac:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80029b0:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80029b4:	6282      	str	r2, [r0, #40]	; 0x28
    }
 80029b6:	4770      	bx	lr
 80029b8:	0802e6bc 	.word	0x0802e6bc

080029bc <_ZN8touchgfx6WidgetC1Ev>:
 80029bc:	2200      	movs	r2, #0
 80029be:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80029c2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80029c6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80029ca:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80029ce:	f44f 7280 	mov.w	r2, #256	; 0x100
 80029d2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80029d4:	4a01      	ldr	r2, [pc, #4]	; (80029dc <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80029d6:	6002      	str	r2, [r0, #0]
 80029d8:	4770      	bx	lr
 80029da:	bf00      	nop
 80029dc:	0802c5e8 	.word	0x0802c5e8

080029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80029e0:	4b1a      	ldr	r3, [pc, #104]	; (8002a4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80029e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80029e4:	881b      	ldrh	r3, [r3, #0]
 80029e6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80029e8:	428b      	cmp	r3, r1
    void updateTextPosition()
 80029ea:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80029ec:	d92b      	bls.n	8002a46 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029ee:	4b18      	ldr	r3, [pc, #96]	; (8002a50 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80029f0:	681b      	ldr	r3, [r3, #0]
 80029f2:	b92b      	cbnz	r3, 8002a00 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80029f4:	4b17      	ldr	r3, [pc, #92]	; (8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80029f6:	4a18      	ldr	r2, [pc, #96]	; (8002a58 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80029f8:	4818      	ldr	r0, [pc, #96]	; (8002a5c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80029fa:	216c      	movs	r1, #108	; 0x6c
 80029fc:	f028 f860 	bl	802aac0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002a00:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002a04:	4b16      	ldr	r3, [pc, #88]	; (8002a60 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002a0c:	4b15      	ldr	r3, [pc, #84]	; (8002a64 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002a0e:	6818      	ldr	r0, [r3, #0]
 8002a10:	f005 fa72 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002a14:	682b      	ldr	r3, [r5, #0]
 8002a16:	9001      	str	r0, [sp, #4]
 8002a18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a1a:	4628      	mov	r0, r5
 8002a1c:	4798      	blx	r3
 8002a1e:	682b      	ldr	r3, [r5, #0]
 8002a20:	9901      	ldr	r1, [sp, #4]
 8002a22:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002a24:	4604      	mov	r4, r0
 8002a26:	4628      	mov	r0, r5
 8002a28:	4798      	blx	r3
 8002a2a:	682b      	ldr	r3, [r5, #0]
 8002a2c:	9901      	ldr	r1, [sp, #4]
 8002a2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a30:	fb14 f400 	smulbb	r4, r4, r0
 8002a34:	4628      	mov	r0, r5
 8002a36:	4798      	blx	r3
 8002a38:	b2a4      	uxth	r4, r4
 8002a3a:	1823      	adds	r3, r4, r0
 8002a3c:	b21b      	sxth	r3, r3
 8002a3e:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002a42:	b002      	add	sp, #8
 8002a44:	bd70      	pop	{r4, r5, r6, pc}
 8002a46:	2300      	movs	r3, #0
 8002a48:	e7f9      	b.n	8002a3e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002a4a:	bf00      	nop
 8002a4c:	20013318 	.word	0x20013318
 8002a50:	20013314 	.word	0x20013314
 8002a54:	0802c4a0 	.word	0x0802c4a0
 8002a58:	0802c4e2 	.word	0x0802c4e2
 8002a5c:	0802c51d 	.word	0x0802c51d
 8002a60:	2001331c 	.word	0x2001331c
 8002a64:	20013320 	.word	0x20013320

08002a68 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002a68:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a6a:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002a6c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a6e:	2100      	movs	r1, #0
 8002a70:	f028 fa2b 	bl	802aeca <memset>
 8002a74:	4620      	mov	r0, r4
 8002a76:	f7ff ffa1 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8002a7a:	4b0a      	ldr	r3, [pc, #40]	; (8002aa4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002a7c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002a7e:	4b0a      	ldr	r3, [pc, #40]	; (8002aa8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002a80:	62a3      	str	r3, [r4, #40]	; 0x28
 8002a82:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002a86:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002a88:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002a8c:	2300      	movs	r3, #0
 8002a8e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002a92:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002a96:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a9a:	8723      	strh	r3, [r4, #56]	; 0x38
 8002a9c:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002a9e:	4620      	mov	r0, r4
 8002aa0:	bd10      	pop	{r4, pc}
 8002aa2:	bf00      	nop
 8002aa4:	0802eb14 	.word	0x0802eb14
 8002aa8:	0802c650 	.word	0x0802c650

08002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002aac:	b510      	push	{r4, lr}
 8002aae:	4604      	mov	r4, r0
        : TextArea()
 8002ab0:	f7ff ffda 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002ab4:	4b02      	ldr	r3, [pc, #8]	; (8002ac0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002ab6:	6023      	str	r3, [r4, #0]
 8002ab8:	2300      	movs	r3, #0
 8002aba:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8002abc:	4620      	mov	r0, r4
 8002abe:	bd10      	pop	{r4, pc}
 8002ac0:	0802c6f0 	.word	0x0802c6f0

08002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8002ac4:	b510      	push	{r4, lr}
 8002ac6:	4604      	mov	r4, r0
 8002ac8:	460b      	mov	r3, r1
 8002aca:	490d      	ldr	r1, [pc, #52]	; (8002b00 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8002acc:	f844 1b04 	str.w	r1, [r4], #4
 8002ad0:	4602      	mov	r2, r0
 8002ad2:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8002ad6:	e884 0003 	stmia.w	r4, {r0, r1}
 8002ada:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8002ade:	f102 040c 	add.w	r4, r2, #12
 8002ae2:	e884 0003 	stmia.w	r4, {r0, r1}
 8002ae6:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8002aea:	695c      	ldr	r4, [r3, #20]
 8002aec:	61d1      	str	r1, [r2, #28]
 8002aee:	6a19      	ldr	r1, [r3, #32]
 8002af0:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002af2:	6211      	str	r1, [r2, #32]
 8002af4:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8002af8:	8493      	strh	r3, [r2, #36]	; 0x24
 8002afa:	4610      	mov	r0, r2
 8002afc:	bd10      	pop	{r4, pc}
 8002afe:	bf00      	nop
 8002b00:	0802ef34 	.word	0x0802ef34

08002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8002b04:	b538      	push	{r3, r4, r5, lr}
 8002b06:	460d      	mov	r5, r1
 8002b08:	4604      	mov	r4, r0
class Container : public Drawable
 8002b0a:	f7ff ffdb 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b0e:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8002b10:	62a3      	str	r3, [r4, #40]	; 0x28
 8002b12:	4b2b      	ldr	r3, [pc, #172]	; (8002bc0 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8002b14:	6023      	str	r3, [r4, #0]
 8002b16:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8002b18:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002b1a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002b1c:	6323      	str	r3, [r4, #48]	; 0x30
 8002b1e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002b20:	6363      	str	r3, [r4, #52]	; 0x34
 8002b22:	f105 0138 	add.w	r1, r5, #56	; 0x38
 8002b26:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8002b2a:	f7ff ffcb 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b2e:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002b30:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8002b32:	4b24      	ldr	r3, [pc, #144]	; (8002bc4 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8002b34:	63a3      	str	r3, [r4, #56]	; 0x38
 8002b36:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 8002b3a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8002b3e:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 8002b42:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 8002b46:	f105 0168 	add.w	r1, r5, #104	; 0x68
 8002b4a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002b4e:	f7ff ffb9 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b52:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8002b56:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8002b5a:	4b1b      	ldr	r3, [pc, #108]	; (8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8002b5c:	66a3      	str	r3, [r4, #104]	; 0x68
 8002b5e:	f105 0194 	add.w	r1, r5, #148	; 0x94
 8002b62:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8002b66:	f7ff ffad 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8002b6a:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 8002b6e:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8002b72:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8002b76:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8002b7a:	4b14      	ldr	r3, [pc, #80]	; (8002bcc <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8002b7c:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002b80:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8002b84:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8002b88:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8002b8c:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8002b90:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8002b94:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8002b98:	f7ff ff94 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b9c:	4b0c      	ldr	r3, [pc, #48]	; (8002bd0 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 8002b9e:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8002ba2:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8002ba6:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8002baa:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 8002bae:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 8002bb2:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8002bb6:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8002bba:	4620      	mov	r0, r4
 8002bbc:	bd38      	pop	{r3, r4, r5, pc}
 8002bbe:	bf00      	nop
 8002bc0:	0802e74c 	.word	0x0802e74c
 8002bc4:	0802e810 	.word	0x0802e810
 8002bc8:	0802c660 	.word	0x0802c660
 8002bcc:	0802ec0c 	.word	0x0802ec0c
 8002bd0:	0802edf0 	.word	0x0802edf0

08002bd4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8002bd4:	b570      	push	{r4, r5, r6, lr}
    if (&src == &buttonWithLabel3)
 8002bd6:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8002bda:	4299      	cmp	r1, r3
{
 8002bdc:	b0be      	sub	sp, #248	; 0xf8
 8002bde:	4604      	mov	r4, r0
 8002be0:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002be2:	d103      	bne.n	8002bec <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002be4:	f013 f8a4 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002be8:	f001 f94a 	bl	8003e80 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8002bec:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8002bf0:	429d      	cmp	r5, r3
 8002bf2:	d11a      	bne.n	8002c2a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
        SwipeContainer swipeContainer = swipeContainer1;
 8002bf4:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8002bf8:	4631      	mov	r1, r6
 8002bfa:	a801      	add	r0, sp, #4
 8002bfc:	f7ff ff82 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        setCalibrationFlashValues(SECTOR_23_ADDR, 999, 0, 12);
 8002c00:	482a      	ldr	r0, [pc, #168]	; (8002cac <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xd8>)
 8002c02:	230c      	movs	r3, #12
 8002c04:	2200      	movs	r2, #0
 8002c06:	f240 31e7 	movw	r1, #999	; 0x3e7
 8002c0a:	f7fd ff2f 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", 999);
 8002c0e:	4a28      	ldr	r2, [pc, #160]	; (8002cb0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xdc>)
 8002c10:	f240 33e7 	movw	r3, #999	; 0x3e7
 8002c14:	210a      	movs	r1, #10
 8002c16:	f604 105c 	addw	r0, r4, #2396	; 0x95c
 8002c1a:	f016 fa37 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002c1e:	4630      	mov	r0, r6
 8002c20:	f014 f96e 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002c24:	a801      	add	r0, sp, #4
 8002c26:	f00d fa39 	bl	801009c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8002c2a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002c2e:	429d      	cmp	r5, r3
 8002c30:	d11a      	bne.n	8002c68 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x94>
        SwipeContainer swipeContainer = swipeContainer1;
 8002c32:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8002c36:	4631      	mov	r1, r6
 8002c38:	a801      	add	r0, sp, #4
 8002c3a:	f7ff ff63 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        setCalibrationFlashValues(SECTOR_23_ADDR, 500, 1, 12);
 8002c3e:	481b      	ldr	r0, [pc, #108]	; (8002cac <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xd8>)
 8002c40:	230c      	movs	r3, #12
 8002c42:	2201      	movs	r2, #1
 8002c44:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8002c48:	f7fd ff10 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", 500);
 8002c4c:	4a18      	ldr	r2, [pc, #96]	; (8002cb0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xdc>)
 8002c4e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8002c52:	210a      	movs	r1, #10
 8002c54:	f604 1048 	addw	r0, r4, #2376	; 0x948
 8002c58:	f016 fa18 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002c5c:	4630      	mov	r0, r6
 8002c5e:	f014 f94f 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002c62:	a801      	add	r0, sp, #4
 8002c64:	f00d fa1a 	bl	801009c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8002c68:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8002c6c:	429d      	cmp	r5, r3
 8002c6e:	d11a      	bne.n	8002ca6 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xd2>
        SwipeContainer swipeContainer = swipeContainer1;
 8002c70:	f104 05e0 	add.w	r5, r4, #224	; 0xe0
 8002c74:	4629      	mov	r1, r5
 8002c76:	a801      	add	r0, sp, #4
 8002c78:	f7ff ff44 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        setCalibrationFlashValues(SECTOR_23_ADDR, 444, 2, 12);
 8002c7c:	480b      	ldr	r0, [pc, #44]	; (8002cac <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xd8>)
 8002c7e:	230c      	movs	r3, #12
 8002c80:	2202      	movs	r2, #2
 8002c82:	f44f 71de 	mov.w	r1, #444	; 0x1bc
 8002c86:	f7fd fef1 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", 444);
 8002c8a:	4a09      	ldr	r2, [pc, #36]	; (8002cb0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xdc>)
 8002c8c:	f44f 73de 	mov.w	r3, #444	; 0x1bc
 8002c90:	210a      	movs	r1, #10
 8002c92:	f604 1034 	addw	r0, r4, #2356	; 0x934
 8002c96:	f016 f9f9 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002c9a:	4628      	mov	r0, r5
 8002c9c:	f014 f930 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002ca0:	a801      	add	r0, sp, #4
 8002ca2:	f00d f9fb 	bl	801009c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8002ca6:	b03e      	add	sp, #248	; 0xf8
 8002ca8:	bd70      	pop	{r4, r5, r6, pc}
 8002caa:	bf00      	nop
 8002cac:	081e0000 	.word	0x081e0000
 8002cb0:	0802c5a2 	.word	0x0802c5a2

08002cb4 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8002cb4:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002cb6:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8002cb8:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8002cbc:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8002cc0:	d004      	beq.n	8002ccc <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8002cc2:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002cc6:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8002cc8:	f00f b846 	b.w	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8002ccc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002cd0:	4770      	bx	lr
	...

08002cd4 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cd8:	ed2d 8b10 	vpush	{d8-d15}
 8002cdc:	4604      	mov	r4, r0
 8002cde:	b099      	sub	sp, #100	; 0x64
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002ce0:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002ce2:	2500      	movs	r5, #0
 8002ce4:	f014 fca4 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
 8002ce8:	4be9      	ldr	r3, [pc, #932]	; (8003090 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 8002cea:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002cec:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002cf0:	2226      	movs	r2, #38	; 0x26
 8002cf2:	4629      	mov	r1, r5
 8002cf4:	4648      	mov	r0, r9
 8002cf6:	f028 f8e8 	bl	802aeca <memset>
 8002cfa:	4648      	mov	r0, r9
 8002cfc:	f7ff fe5e 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8002d00:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002d04:	26ff      	movs	r6, #255	; 0xff
 8002d06:	4be3      	ldr	r3, [pc, #908]	; (8003094 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8002d08:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002d0a:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002d0c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d10:	4629      	mov	r1, r5
 8002d12:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002d16:	4640      	mov	r0, r8
        : color(col)
 8002d18:	66a5      	str	r5, [r4, #104]	; 0x68
 8002d1a:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8002d1e:	f028 f8d4 	bl	802aeca <memset>
 8002d22:	4640      	mov	r0, r8
 8002d24:	f7ff fe4a 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8002d28:	4bdb      	ldr	r3, [pc, #876]	; (8003098 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>)
 8002d2a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002d2c:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 8002d30:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002d34:	a916      	add	r1, sp, #88	; 0x58
 8002d36:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 8002d3a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002d3c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002d40:	f010 faf7 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002d44:	4650      	mov	r0, sl
 8002d46:	f010 fc2b 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002d4a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002d4e:	f504 76ea 	add.w	r6, r4, #468	; 0x1d4
 8002d52:	4618      	mov	r0, r3
 8002d54:	ee08 3a10 	vmov	s16, r3
 8002d58:	f504 7700 	add.w	r7, r4, #512	; 0x200
 8002d5c:	f00d facc 	bl	80102f8 <_ZN8touchgfx14SwipeContainerC1Ev>
 8002d60:	4630      	mov	r0, r6
 8002d62:	f7ff fe19 	bl	8002998 <_ZN8touchgfx9ContainerC1Ev>
 8002d66:	4638      	mov	r0, r7
 8002d68:	f7ff fea0 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002d6c:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8002d70:	4618      	mov	r0, r3
 8002d72:	9304      	str	r3, [sp, #16]
 8002d74:	f010 fab6 	bl	80132e4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002d78:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002d7c:	4618      	mov	r0, r3
 8002d7e:	9305      	str	r3, [sp, #20]
 8002d80:	f010 fab0 	bl	80132e4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002d84:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8002d88:	4618      	mov	r0, r3
 8002d8a:	9306      	str	r3, [sp, #24]
 8002d8c:	f010 faaa 	bl	80132e4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002d90:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8002d94:	4618      	mov	r0, r3
 8002d96:	ee0b 3a10 	vmov	s22, r3
 8002d9a:	f7ff fe87 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002d9e:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8002da2:	4618      	mov	r0, r3
 8002da4:	ee0b 3a90 	vmov	s23, r3
 8002da8:	f7ff fe80 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002dac:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8002db0:	4618      	mov	r0, r3
 8002db2:	ee0c 3a10 	vmov	s24, r3
 8002db6:	f7ff fe79 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002dba:	f504 7379 	add.w	r3, r4, #996	; 0x3e4
 8002dbe:	4618      	mov	r0, r3
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002dc0:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 80030ac <_ZN23Calibration_PadViewBaseC1Ev+0x3d8>
 8002dc4:	ee09 3a10 	vmov	s18, r3
 8002dc8:	f00e ffa6 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8002dcc:	f204 4354 	addw	r3, r4, #1108	; 0x454
 8002dd0:	4618      	mov	r0, r3
 8002dd2:	930a      	str	r3, [sp, #40]	; 0x28
 8002dd4:	f7ff fbee 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002dd8:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 8002ddc:	f504 628d 	add.w	r2, r4, #1128	; 0x468
 8002de0:	f8c4 345c 	str.w	r3, [r4, #1116]	; 0x45c
 8002de4:	f8c4 b454 	str.w	fp, [r4, #1108]	; 0x454
 8002de8:	4610      	mov	r0, r2
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002dea:	f8c4 5460 	str.w	r5, [r4, #1120]	; 0x460
 8002dee:	ee0e 2a90 	vmov	s29, r2
 8002df2:	f7ff fe39 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8002df6:	f504 6296 	add.w	r2, r4, #1200	; 0x4b0
 8002dfa:	4610      	mov	r0, r2
 8002dfc:	ee08 2a90 	vmov	s17, r2
 8002e00:	f7ff fdca 	bl	8002998 <_ZN8touchgfx9ContainerC1Ev>
 8002e04:	f204 42dc 	addw	r2, r4, #1244	; 0x4dc
 8002e08:	4610      	mov	r0, r2
 8002e0a:	9207      	str	r2, [sp, #28]
 8002e0c:	f010 fa6a 	bl	80132e4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002e10:	f504 62a3 	add.w	r2, r4, #1304	; 0x518
 8002e14:	4610      	mov	r0, r2
 8002e16:	9208      	str	r2, [sp, #32]
 8002e18:	f010 fa64 	bl	80132e4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002e1c:	f204 5254 	addw	r2, r4, #1364	; 0x554
 8002e20:	4610      	mov	r0, r2
 8002e22:	9209      	str	r2, [sp, #36]	; 0x24
 8002e24:	f010 fa5e 	bl	80132e4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002e28:	f504 62b2 	add.w	r2, r4, #1424	; 0x590
 8002e2c:	4610      	mov	r0, r2
 8002e2e:	ee0f 2a10 	vmov	s30, r2
 8002e32:	f7ff fe3b 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002e36:	f204 52dc 	addw	r2, r4, #1500	; 0x5dc
 8002e3a:	4610      	mov	r0, r2
 8002e3c:	ee0f 2a90 	vmov	s31, r2
 8002e40:	f7ff fe34 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002e44:	f504 62c5 	add.w	r2, r4, #1576	; 0x628
 8002e48:	4610      	mov	r0, r2
 8002e4a:	9203      	str	r2, [sp, #12]
 8002e4c:	f7ff fe2e 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002e50:	f204 6274 	addw	r2, r4, #1652	; 0x674
 8002e54:	4610      	mov	r0, r2
 8002e56:	ee09 2a90 	vmov	s19, r2
 8002e5a:	f00e ff5d 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8002e5e:	f204 62e4 	addw	r2, r4, #1764	; 0x6e4
 8002e62:	4610      	mov	r0, r2
 8002e64:	920b      	str	r2, [sp, #44]	; 0x2c
 8002e66:	f7ff fba5 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002e6a:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 8002e6e:	f504 62df 	add.w	r2, r4, #1784	; 0x6f8
 8002e72:	f8c4 36ec 	str.w	r3, [r4, #1772]	; 0x6ec
 8002e76:	f8c4 b6e4 	str.w	fp, [r4, #1764]	; 0x6e4
 8002e7a:	4610      	mov	r0, r2
 8002e7c:	f8c4 56f0 	str.w	r5, [r4, #1776]	; 0x6f0
 8002e80:	ee0c 2a90 	vmov	s25, r2
 8002e84:	f7ff fdf0 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8002e88:	f504 62e8 	add.w	r2, r4, #1856	; 0x740
 8002e8c:	4610      	mov	r0, r2
 8002e8e:	ee0a 2a10 	vmov	s20, r2
 8002e92:	f00e ff41 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8002e96:	f504 62f6 	add.w	r2, r4, #1968	; 0x7b0
 8002e9a:	4610      	mov	r0, r2
 8002e9c:	920c      	str	r2, [sp, #48]	; 0x30
 8002e9e:	f7ff fb89 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002ea2:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 8002ea6:	f204 72c4 	addw	r2, r4, #1988	; 0x7c4
 8002eaa:	f8c4 37b8 	str.w	r3, [r4, #1976]	; 0x7b8
 8002eae:	f8c4 b7b0 	str.w	fp, [r4, #1968]	; 0x7b0
 8002eb2:	4610      	mov	r0, r2
 8002eb4:	f8c4 57bc 	str.w	r5, [r4, #1980]	; 0x7bc
 8002eb8:	ee0d 2a10 	vmov	s26, r2
 8002ebc:	f7ff fdd4 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8002ec0:	f604 020c 	addw	r2, r4, #2060	; 0x80c
 8002ec4:	4610      	mov	r0, r2
 8002ec6:	ee0a 2a90 	vmov	s21, r2
 8002eca:	f00e ff25 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8002ece:	f604 027c 	addw	r2, r4, #2172	; 0x87c
 8002ed2:	4610      	mov	r0, r2
 8002ed4:	920d      	str	r2, [sp, #52]	; 0x34
 8002ed6:	f7ff fb6d 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002eda:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 8002ede:	f8c4 3884 	str.w	r3, [r4, #2180]	; 0x884
 8002ee2:	f504 6309 	add.w	r3, r4, #2192	; 0x890
 8002ee6:	f8c4 b87c 	str.w	fp, [r4, #2172]	; 0x87c
 8002eea:	4618      	mov	r0, r3
 8002eec:	f8c4 5888 	str.w	r5, [r4, #2184]	; 0x888
 8002ef0:	ee0d 3a90 	vmov	s27, r3
 8002ef4:	f7ff fdb8 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8002ef8:	f604 03d8 	addw	r3, r4, #2264	; 0x8d8
 8002efc:	4618      	mov	r0, r3
 8002efe:	ee0e 3a10 	vmov	s28, r3
 8002f02:	f7ff fdb1 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002f06:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002f0a:	4a64      	ldr	r2, [pc, #400]	; (800309c <_ZN23Calibration_PadViewBaseC1Ev+0x3c8>)
 8002f0c:	f8c3 27bc 	str.w	r2, [r3, #1980]	; 0x7bc
 8002f10:	4a63      	ldr	r2, [pc, #396]	; (80030a0 <_ZN23Calibration_PadViewBaseC1Ev+0x3cc>)
 8002f12:	f8c3 27c4 	str.w	r2, [r3, #1988]	; 0x7c4
 8002f16:	f8c3 47c0 	str.w	r4, [r3, #1984]	; 0x7c0
 8002f1a:	f8c3 57c8 	str.w	r5, [r3, #1992]	; 0x7c8
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002f1e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002f22:	f604 10ac 	addw	r0, r4, #2476	; 0x9ac
 8002f26:	f011 f9f7 	bl	8014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002f2a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002f2e:	462a      	mov	r2, r5
 8002f30:	4648      	mov	r0, r9
 8002f32:	9300      	str	r3, [sp, #0]
 8002f34:	4629      	mov	r1, r5
 8002f36:	23f0      	movs	r3, #240	; 0xf0
 8002f38:	f7ff fd1b 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002f3c:	f104 0b04 	add.w	fp, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002f40:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f44:	66a3      	str	r3, [r4, #104]	; 0x68
 8002f46:	4649      	mov	r1, r9
 8002f48:	4658      	mov	r0, fp
 8002f4a:	f00c fe19 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002f4e:	462a      	mov	r2, r5
 8002f50:	4640      	mov	r0, r8
 8002f52:	4629      	mov	r1, r5
 8002f54:	f7ff fd00 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8002f58:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002f5a:	4640      	mov	r0, r8
 8002f5c:	a916      	add	r1, sp, #88	; 0x58
 8002f5e:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8002f62:	f010 f9e6 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f66:	4641      	mov	r1, r8
 8002f68:	4658      	mov	r0, fp
 8002f6a:	f00c fe09 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002f6e:	4650      	mov	r0, sl
 8002f70:	f240 1201 	movw	r2, #257	; 0x101
 8002f74:	2121      	movs	r1, #33	; 0x21
 8002f76:	f7ff fcef 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8002f7a:	f04f 0303 	mov.w	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002f7e:	aa16      	add	r2, sp, #88	; 0x58
 8002f80:	a915      	add	r1, sp, #84	; 0x54
 8002f82:	4650      	mov	r0, sl
 8002f84:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8002f88:	f04f 0302 	mov.w	r3, #2
 8002f8c:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8002f90:	f00f ffd9 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002f94:	2317      	movs	r3, #23
        updateTextPosition();
 8002f96:	4650      	mov	r0, sl
 8002f98:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8002f9c:	f7ff fd20 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8002fa0:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8002fa4:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 8002fa8:	f504 53bd 	add.w	r3, r4, #6048	; 0x17a0
 8002fac:	331c      	adds	r3, #28
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002fae:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002fb2:	4651      	mov	r1, sl
 8002fb4:	4658      	mov	r0, fp
 8002fb6:	9302      	str	r3, [sp, #8]
 8002fb8:	f00c fde2 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8002fbc:	ee18 0a10 	vmov	r0, s16
 8002fc0:	2255      	movs	r2, #85	; 0x55
 8002fc2:	4629      	mov	r1, r5
 8002fc4:	f7ff fcc8 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8002fc8:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 8002fca:	ee18 0a10 	vmov	r0, s16
 8002fce:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8002fd2:	aa16      	add	r2, sp, #88	; 0x58
 8002fd4:	2307      	movs	r3, #7
 8002fd6:	a915      	add	r1, sp, #84	; 0x54
 8002fd8:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8002fdc:	f00d fa2a 	bl	8010434 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(100, 140);
 8002fe0:	228c      	movs	r2, #140	; 0x8c
 8002fe2:	ee18 0a10 	vmov	r0, s16
 8002fe6:	2164      	movs	r1, #100	; 0x64
 8002fe8:	f00d f8d2 	bl	8010190 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8002fec:	ee18 0a10 	vmov	r0, s16
 8002ff0:	2132      	movs	r1, #50	; 0x32
 8002ff2:	f00d f850 	bl	8010096 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 8002ff6:	ee18 0a10 	vmov	r0, s16
 8002ffa:	2132      	movs	r1, #50	; 0x32
 8002ffc:	f00d f8c6 	bl	801018c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 8003000:	4b28      	ldr	r3, [pc, #160]	; (80030a4 <_ZN23Calibration_PadViewBaseC1Ev+0x3d0>)
 8003002:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    textAreaCal_LP1_1.setXY(22, 32);
 8003006:	2220      	movs	r2, #32
 8003008:	4638      	mov	r0, r7
 800300a:	2116      	movs	r1, #22
 800300c:	f7ff fca4 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003010:	f04f 33ff 	mov.w	r3, #4294967295
 8003014:	f8c4 3230 	str.w	r3, [r4, #560]	; 0x230
        boundingArea = calculateBoundingArea();
 8003018:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
        linespace = space;
 800301c:	f8a4 5234 	strh.w	r5, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8003020:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8003024:	4639      	mov	r1, r7
 8003026:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800302a:	4640      	mov	r0, r8
 800302c:	4798      	blx	r3
 800302e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003032:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003036:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textAreaCal_LP1_1.setWildcard(textAreaCal_LP1_1Buffer);
 800303a:	f504 6312 	add.w	r3, r4, #2336	; 0x920
    textAreaCal_LP1_1.resizeToCurrentText();
 800303e:	4638      	mov	r0, r7
        wc1 = value;
 8003040:	f8c4 3248 	str.w	r3, [r4, #584]	; 0x248
    textAreaCal_LP1_1Buffer[0] = 0;
 8003044:	f8a4 5920 	strh.w	r5, [r4, #2336]	; 0x920
    textAreaCal_LP1_1.resizeToCurrentText();
 8003048:	f00f fba2 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800304c:	4b16      	ldr	r3, [pc, #88]	; (80030a8 <_ZN23Calibration_PadViewBaseC1Ev+0x3d4>)
 800304e:	9316      	str	r3, [sp, #88]	; 0x58
    textAreaCal_LP1_1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 8003050:	4638      	mov	r0, r7
 8003052:	f04f 030c 	mov.w	r3, #12
 8003056:	a916      	add	r1, sp, #88	; 0x58
 8003058:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 800305c:	f00f fbb8 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1_1);
 8003060:	4639      	mov	r1, r7
 8003062:	4630      	mov	r0, r6
 8003064:	f00c fd8c 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP3.setXY(194, 97);
 8003068:	9804      	ldr	r0, [sp, #16]
 800306a:	2261      	movs	r2, #97	; 0x61
 800306c:	21c2      	movs	r1, #194	; 0xc2
 800306e:	f7ff fc73 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003072:	ab16      	add	r3, sp, #88	; 0x58
 8003074:	f04f 0909 	mov.w	r9, #9
 8003078:	f04f 0a01 	mov.w	sl, #1
 800307c:	aa14      	add	r2, sp, #80	; 0x50
 800307e:	9804      	ldr	r0, [sp, #16]
 8003080:	9300      	str	r3, [sp, #0]
 8003082:	a913      	add	r1, sp, #76	; 0x4c
 8003084:	ab15      	add	r3, sp, #84	; 0x54
 8003086:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 800308a:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 800308e:	e00f      	b.n	80030b0 <_ZN23Calibration_PadViewBaseC1Ev+0x3dc>
 8003090:	0802c798 	.word	0x0802c798
 8003094:	0802eba4 	.word	0x0802eba4
 8003098:	0802edf0 	.word	0x0802edf0
 800309c:	0802c780 	.word	0x0802c780
 80030a0:	08002bd5 	.word	0x08002bd5
 80030a4:	00ac00f0 	.word	0x00ac00f0
 80030a8:	0802c650 	.word	0x0802c650
 80030ac:	0802e8d8 	.word	0x0802e8d8
 80030b0:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 80030b4:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 80030b8:	f010 f87f 	bl	80131ba <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80030bc:	9b02      	ldr	r3, [sp, #8]
 80030be:	f8c4 3274 	str.w	r3, [r4, #628]	; 0x274
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80030c2:	9904      	ldr	r1, [sp, #16]
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80030c4:	f8c4 5284 	str.w	r5, [r4, #644]	; 0x284
 80030c8:	4630      	mov	r0, r6
 80030ca:	f00c fd59 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80030ce:	9805      	ldr	r0, [sp, #20]
 80030d0:	223d      	movs	r2, #61	; 0x3d
 80030d2:	21c2      	movs	r1, #194	; 0xc2
 80030d4:	f7ff fc40 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80030d8:	ab16      	add	r3, sp, #88	; 0x58
 80030da:	aa14      	add	r2, sp, #80	; 0x50
 80030dc:	9805      	ldr	r0, [sp, #20]
 80030de:	9300      	str	r3, [sp, #0]
 80030e0:	a913      	add	r1, sp, #76	; 0x4c
 80030e2:	ab15      	add	r3, sp, #84	; 0x54
 80030e4:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 80030e8:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 80030ec:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 80030f0:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 80030f4:	f010 f861 	bl	80131ba <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80030f8:	9b02      	ldr	r3, [sp, #8]
 80030fa:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 80030fe:	9905      	ldr	r1, [sp, #20]
 8003100:	f8c4 52c0 	str.w	r5, [r4, #704]	; 0x2c0
 8003104:	4630      	mov	r0, r6
 8003106:	f00c fd3b 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 800310a:	9806      	ldr	r0, [sp, #24]
 800310c:	2219      	movs	r2, #25
 800310e:	21c2      	movs	r1, #194	; 0xc2
 8003110:	f7ff fc22 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003114:	ab16      	add	r3, sp, #88	; 0x58
 8003116:	aa14      	add	r2, sp, #80	; 0x50
 8003118:	9806      	ldr	r0, [sp, #24]
 800311a:	9300      	str	r3, [sp, #0]
 800311c:	a913      	add	r1, sp, #76	; 0x4c
 800311e:	ab15      	add	r3, sp, #84	; 0x54
 8003120:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 8003124:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 8003128:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 800312c:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 8003130:	f010 f843 	bl	80131ba <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003134:	9b02      	ldr	r3, [sp, #8]
 8003136:	f8c4 32ec 	str.w	r3, [r4, #748]	; 0x2ec
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 800313a:	9906      	ldr	r1, [sp, #24]
 800313c:	f8c4 52fc 	str.w	r5, [r4, #764]	; 0x2fc
 8003140:	4630      	mov	r0, r6
 8003142:	f00c fd1d 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 8003146:	2268      	movs	r2, #104	; 0x68
 8003148:	ee1b 0a10 	vmov	r0, s22
 800314c:	210a      	movs	r1, #10
 800314e:	f7ff fc03 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003152:	f04f 33ff 	mov.w	r3, #4294967295
 8003156:	f8c4 3330 	str.w	r3, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 800315a:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 800315e:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        boundingArea = calculateBoundingArea();
 8003162:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003166:	ee1b 1a10 	vmov	r1, s22
 800316a:	4640      	mov	r0, r8
 800316c:	4798      	blx	r3
 800316e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003172:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8003176:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800317a:	4b09      	ldr	r3, [pc, #36]	; (80031a0 <_ZN23Calibration_PadViewBaseC1Ev+0x4cc>)
 800317c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 800317e:	f604 1734 	addw	r7, r4, #2356	; 0x934
 8003182:	b92b      	cbnz	r3, 8003190 <_ZN23Calibration_PadViewBaseC1Ev+0x4bc>
 8003184:	4b07      	ldr	r3, [pc, #28]	; (80031a4 <_ZN23Calibration_PadViewBaseC1Ev+0x4d0>)
 8003186:	4a08      	ldr	r2, [pc, #32]	; (80031a8 <_ZN23Calibration_PadViewBaseC1Ev+0x4d4>)
 8003188:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800318a:	4808      	ldr	r0, [pc, #32]	; (80031ac <_ZN23Calibration_PadViewBaseC1Ev+0x4d8>)
 800318c:	f027 fc98 	bl	802aac0 <__assert_func>
 8003190:	4b07      	ldr	r3, [pc, #28]	; (80031b0 <_ZN23Calibration_PadViewBaseC1Ev+0x4dc>)
 8003192:	881b      	ldrh	r3, [r3, #0]
 8003194:	2b01      	cmp	r3, #1
 8003196:	d80f      	bhi.n	80031b8 <_ZN23Calibration_PadViewBaseC1Ev+0x4e4>
 8003198:	4b06      	ldr	r3, [pc, #24]	; (80031b4 <_ZN23Calibration_PadViewBaseC1Ev+0x4e0>)
 800319a:	4a03      	ldr	r2, [pc, #12]	; (80031a8 <_ZN23Calibration_PadViewBaseC1Ev+0x4d4>)
 800319c:	2161      	movs	r1, #97	; 0x61
 800319e:	e7f4      	b.n	800318a <_ZN23Calibration_PadViewBaseC1Ev+0x4b6>
 80031a0:	20013314 	.word	0x20013314
 80031a4:	0802c4a0 	.word	0x0802c4a0
 80031a8:	0802c5a5 	.word	0x0802c5a5
 80031ac:	0802c51d 	.word	0x0802c51d
 80031b0:	20013318 	.word	0x20013318
 80031b4:	0802c564 	.word	0x0802c564
        return texts->getText(typedTextId);
 80031b8:	4bd7      	ldr	r3, [pc, #860]	; (8003518 <_ZN23Calibration_PadViewBaseC1Ev+0x844>)
 80031ba:	4651      	mov	r1, sl
 80031bc:	6818      	ldr	r0, [r3, #0]
 80031be:	f004 fe9b 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 80031c2:	4ad6      	ldr	r2, [pc, #856]	; (800351c <_ZN23Calibration_PadViewBaseC1Ev+0x848>)
 80031c4:	4603      	mov	r3, r0
 80031c6:	210a      	movs	r1, #10
 80031c8:	4638      	mov	r0, r7
 80031ca:	f015 ff5f 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 80031ce:	ee1b 0a10 	vmov	r0, s22
 80031d2:	f8c4 7348 	str.w	r7, [r4, #840]	; 0x348
 80031d6:	f00f fadb 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80031da:	f04f 0102 	mov.w	r1, #2
 80031de:	4bd0      	ldr	r3, [pc, #832]	; (8003520 <_ZN23Calibration_PadViewBaseC1Ev+0x84c>)
 80031e0:	f8ad 105c 	strh.w	r1, [sp, #92]	; 0x5c
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL1_LP3));
 80031e4:	ee1b 0a10 	vmov	r0, s22
 80031e8:	a916      	add	r1, sp, #88	; 0x58
 80031ea:	9316      	str	r3, [sp, #88]	; 0x58
 80031ec:	f00f faf0 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 80031f0:	ee1b 1a10 	vmov	r1, s22
 80031f4:	4630      	mov	r0, r6
 80031f6:	f00c fcc3 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 80031fa:	2244      	movs	r2, #68	; 0x44
 80031fc:	ee1b 0a90 	vmov	r0, s23
 8003200:	2116      	movs	r1, #22
 8003202:	f7ff fba9 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8003206:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 800320a:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 800320e:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8003212:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003216:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 800321a:	4640      	mov	r0, r8
 800321c:	ee1b 1a90 	vmov	r1, s23
 8003220:	4798      	blx	r3
 8003222:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003226:	f504 7362 	add.w	r3, r4, #904	; 0x388
 800322a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800322e:	49bd      	ldr	r1, [pc, #756]	; (8003524 <_ZN23Calibration_PadViewBaseC1Ev+0x850>)
 8003230:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 8003232:	f604 1748 	addw	r7, r4, #2376	; 0x948
 8003236:	2b00      	cmp	r3, #0
 8003238:	d0a4      	beq.n	8003184 <_ZN23Calibration_PadViewBaseC1Ev+0x4b0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800323a:	48bb      	ldr	r0, [pc, #748]	; (8003528 <_ZN23Calibration_PadViewBaseC1Ev+0x854>)
 800323c:	8803      	ldrh	r3, [r0, #0]
 800323e:	2b03      	cmp	r3, #3
 8003240:	d9aa      	bls.n	8003198 <_ZN23Calibration_PadViewBaseC1Ev+0x4c4>
        return texts->getText(typedTextId);
 8003242:	4ab5      	ldr	r2, [pc, #724]	; (8003518 <_ZN23Calibration_PadViewBaseC1Ev+0x844>)
 8003244:	2103      	movs	r1, #3
 8003246:	6810      	ldr	r0, [r2, #0]
 8003248:	f004 fe56 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 800324c:	4ab3      	ldr	r2, [pc, #716]	; (800351c <_ZN23Calibration_PadViewBaseC1Ev+0x848>)
 800324e:	4603      	mov	r3, r0
 8003250:	210a      	movs	r1, #10
 8003252:	4638      	mov	r0, r7
 8003254:	f015 ff1a 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 8003258:	ee1b 0a90 	vmov	r0, s23
 800325c:	f8c4 7394 	str.w	r7, [r4, #916]	; 0x394
 8003260:	f00f fa96 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL1_LP2));
 8003264:	af16      	add	r7, sp, #88	; 0x58
        : typedTextId(id)
 8003266:	4bae      	ldr	r3, [pc, #696]	; (8003520 <_ZN23Calibration_PadViewBaseC1Ev+0x84c>)
 8003268:	9316      	str	r3, [sp, #88]	; 0x58
 800326a:	4639      	mov	r1, r7
 800326c:	2304      	movs	r3, #4
 800326e:	ee1b 0a90 	vmov	r0, s23
 8003272:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003276:	f00f faab 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 800327a:	ee1b 1a90 	vmov	r1, s23
 800327e:	4630      	mov	r0, r6
 8003280:	f00c fc7e 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 8003284:	2220      	movs	r2, #32
 8003286:	ee1c 0a10 	vmov	r0, s24
 800328a:	2116      	movs	r1, #22
 800328c:	f7ff fb64 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8003290:	f8d4 3398 	ldr.w	r3, [r4, #920]	; 0x398
        linespace = space;
 8003294:	f8a4 53cc 	strh.w	r5, [r4, #972]	; 0x3cc
        color = newColor;
 8003298:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 800329c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80032a0:	f8c4 73c8 	str.w	r7, [r4, #968]	; 0x3c8
        boundingArea = calculateBoundingArea();
 80032a4:	ee1c 1a10 	vmov	r1, s24
 80032a8:	4640      	mov	r0, r8
 80032aa:	4798      	blx	r3
 80032ac:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80032b0:	f504 7375 	add.w	r3, r4, #980	; 0x3d4
 80032b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80032b8:	499a      	ldr	r1, [pc, #616]	; (8003524 <_ZN23Calibration_PadViewBaseC1Ev+0x850>)
 80032ba:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 80032bc:	f604 175c 	addw	r7, r4, #2396	; 0x95c
 80032c0:	2b00      	cmp	r3, #0
 80032c2:	f43f af5f 	beq.w	8003184 <_ZN23Calibration_PadViewBaseC1Ev+0x4b0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80032c6:	4898      	ldr	r0, [pc, #608]	; (8003528 <_ZN23Calibration_PadViewBaseC1Ev+0x854>)
 80032c8:	8803      	ldrh	r3, [r0, #0]
 80032ca:	2b05      	cmp	r3, #5
 80032cc:	f67f af64 	bls.w	8003198 <_ZN23Calibration_PadViewBaseC1Ev+0x4c4>
        return texts->getText(typedTextId);
 80032d0:	4a91      	ldr	r2, [pc, #580]	; (8003518 <_ZN23Calibration_PadViewBaseC1Ev+0x844>)
 80032d2:	2105      	movs	r1, #5
 80032d4:	6810      	ldr	r0, [r2, #0]
 80032d6:	f004 fe0f 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 80032da:	4a90      	ldr	r2, [pc, #576]	; (800351c <_ZN23Calibration_PadViewBaseC1Ev+0x848>)
 80032dc:	4603      	mov	r3, r0
 80032de:	210a      	movs	r1, #10
 80032e0:	4638      	mov	r0, r7
 80032e2:	f015 fed3 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 80032e6:	ee1c 0a10 	vmov	r0, s24
 80032ea:	f8c4 73e0 	str.w	r7, [r4, #992]	; 0x3e0
        : typedTextId(id)
 80032ee:	f04f 070c 	mov.w	r7, #12
 80032f2:	f00f fa4d 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80032f6:	f8ad 705c 	strh.w	r7, [sp, #92]	; 0x5c
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 80032fa:	af16      	add	r7, sp, #88	; 0x58
 80032fc:	4b88      	ldr	r3, [pc, #544]	; (8003520 <_ZN23Calibration_PadViewBaseC1Ev+0x84c>)
 80032fe:	9316      	str	r3, [sp, #88]	; 0x58
 8003300:	4639      	mov	r1, r7
 8003302:	ee1c 0a10 	vmov	r0, s24
 8003306:	f00f fa63 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    line1_1_2_1.setPosition(0, 15, 240, 10);
 800330a:	270a      	movs	r7, #10
    swipeContainerPadLeft.add(textAreaCal_LP1);
 800330c:	4630      	mov	r0, r6
 800330e:	ee1c 1a10 	vmov	r1, s24
 8003312:	f00c fc35 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_1.setPosition(0, 15, 240, 10);
 8003316:	23f0      	movs	r3, #240	; 0xf0
 8003318:	ee19 0a10 	vmov	r0, s18
 800331c:	220f      	movs	r2, #15
 800331e:	4629      	mov	r1, r5
 8003320:	9700      	str	r7, [sp, #0]
 8003322:	f7ff fb26 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8003326:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003328:	f8c4 240c 	str.w	r2, [r4, #1036]	; 0x40c
 800332c:	f04f 3cff 	mov.w	ip, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003330:	22a0      	movs	r2, #160	; 0xa0
 8003332:	f8c4 c460 	str.w	ip, [r4, #1120]	; 0x460
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003336:	f8a4 c464 	strh.w	ip, [r4, #1124]	; 0x464
 800333a:	4611      	mov	r1, r2
 800333c:	ee19 0a10 	vmov	r0, s18
 8003340:	f00e fe00 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003344:	22a0      	movs	r2, #160	; 0xa0
 8003346:	ee19 0a10 	vmov	r0, s18
 800334a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800334e:	f00e fe04 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1_2_1.setLineWidth(1);
 8003352:	ee19 0a10 	vmov	r0, s18
 8003356:	4651      	mov	r1, sl
 8003358:	f7ff fcac 	bl	8002cb4 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800335c:	ee19 0a10 	vmov	r0, s18
 8003360:	4651      	mov	r1, sl
 8003362:	f00e fe05 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_1_2_1);
 8003366:	4630      	mov	r0, r6
 8003368:	ee19 1a10 	vmov	r1, s18
 800336c:	f00c fc08 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2_1.setXY(92, 0);
 8003370:	462a      	mov	r2, r5
 8003372:	ee1e 0a90 	vmov	r0, s29
 8003376:	215c      	movs	r1, #92	; 0x5c
 8003378:	f7ff faee 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800337c:	f04f 3cff 	mov.w	ip, #4294967295
        boundingArea = calculateBoundingArea();
 8003380:	ee1e 1a90 	vmov	r1, s29
        color = newColor;
 8003384:	f8c4 c498 	str.w	ip, [r4, #1176]	; 0x498
        boundingArea = calculateBoundingArea();
 8003388:	4640      	mov	r0, r8
        linespace = space;
 800338a:	f8a4 549c 	strh.w	r5, [r4, #1180]	; 0x49c
        boundingArea = calculateBoundingArea();
 800338e:	f00e ff85 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003392:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
    textArea3_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 8003396:	f10d 0c58 	add.w	ip, sp, #88	; 0x58
 800339a:	f204 43a4 	addw	r3, r4, #1188	; 0x4a4
 800339e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80033a2:	4661      	mov	r1, ip
 80033a4:	4b5e      	ldr	r3, [pc, #376]	; (8003520 <_ZN23Calibration_PadViewBaseC1Ev+0x84c>)
 80033a6:	9316      	str	r3, [sp, #88]	; 0x58
 80033a8:	ee1e 0a90 	vmov	r0, s29
 80033ac:	f8ad 505c 	strh.w	r5, [sp, #92]	; 0x5c
 80033b0:	f00f fa0e 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea3_2_1);
 80033b4:	4630      	mov	r0, r6
 80033b6:	ee1e 1a90 	vmov	r1, s29
 80033ba:	f00c fbe1 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 80033be:	4631      	mov	r1, r6
 80033c0:	ee18 0a10 	vmov	r0, s16
 80033c4:	4e59      	ldr	r6, [pc, #356]	; (800352c <_ZN23Calibration_PadViewBaseC1Ev+0x858>)
 80033c6:	f00d f8be 	bl	8010546 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    buttonWithIcon_RP3.setXY(194, 97);
 80033ca:	9807      	ldr	r0, [sp, #28]
 80033cc:	f8c4 64b8 	str.w	r6, [r4, #1208]	; 0x4b8
 80033d0:	2261      	movs	r2, #97	; 0x61
 80033d2:	21c2      	movs	r1, #194	; 0xc2
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80033d4:	ae16      	add	r6, sp, #88	; 0x58
    buttonWithIcon_RP3.setXY(194, 97);
 80033d6:	f7ff fabf 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80033da:	9600      	str	r6, [sp, #0]
 80033dc:	ae15      	add	r6, sp, #84	; 0x54
 80033de:	4633      	mov	r3, r6
 80033e0:	ae14      	add	r6, sp, #80	; 0x50
 80033e2:	4632      	mov	r2, r6
 80033e4:	ae13      	add	r6, sp, #76	; 0x4c
 80033e6:	4631      	mov	r1, r6
 80033e8:	9807      	ldr	r0, [sp, #28]
 80033ea:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 80033ee:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 80033f2:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 80033f6:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 80033fa:	f00f fede 	bl	80131ba <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 80033fe:	9907      	ldr	r1, [sp, #28]
 8003400:	f8c4 5514 	str.w	r5, [r4, #1300]	; 0x514
 8003404:	ee18 0a90 	vmov	r0, s17
 8003408:	f00c fbba 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800340c:	ae16      	add	r6, sp, #88	; 0x58
    buttonWithIcon_RP2.setXY(194, 61);
 800340e:	9808      	ldr	r0, [sp, #32]
 8003410:	223d      	movs	r2, #61	; 0x3d
 8003412:	21c2      	movs	r1, #194	; 0xc2
 8003414:	f7ff faa0 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003418:	9600      	str	r6, [sp, #0]
 800341a:	ae15      	add	r6, sp, #84	; 0x54
 800341c:	4633      	mov	r3, r6
 800341e:	ae14      	add	r6, sp, #80	; 0x50
 8003420:	4632      	mov	r2, r6
 8003422:	ae13      	add	r6, sp, #76	; 0x4c
 8003424:	4631      	mov	r1, r6
 8003426:	9808      	ldr	r0, [sp, #32]
 8003428:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 800342c:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 8003430:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 8003434:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 8003438:	f00f febf 	bl	80131ba <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 800343c:	9908      	ldr	r1, [sp, #32]
 800343e:	f8c4 5550 	str.w	r5, [r4, #1360]	; 0x550
 8003442:	ee18 0a90 	vmov	r0, s17
 8003446:	f00c fb9b 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800344a:	ae16      	add	r6, sp, #88	; 0x58
    buttonWithIcon_RP1.setXY(194, 25);
 800344c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800344e:	2219      	movs	r2, #25
 8003450:	21c2      	movs	r1, #194	; 0xc2
 8003452:	f7ff fa81 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003456:	9600      	str	r6, [sp, #0]
 8003458:	ae15      	add	r6, sp, #84	; 0x54
 800345a:	4633      	mov	r3, r6
 800345c:	ae14      	add	r6, sp, #80	; 0x50
 800345e:	4632      	mov	r2, r6
 8003460:	ae13      	add	r6, sp, #76	; 0x4c
 8003462:	4631      	mov	r1, r6
 8003464:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003466:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 800346a:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 800346e:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 8003472:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 8003476:	f00f fea0 	bl	80131ba <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 800347a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800347c:	f8c4 558c 	str.w	r5, [r4, #1420]	; 0x58c
 8003480:	ee18 0a90 	vmov	r0, s17
 8003484:	f00c fb7c 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 8003488:	4639      	mov	r1, r7
 800348a:	ee1f 0a10 	vmov	r0, s30
 800348e:	2268      	movs	r2, #104	; 0x68
 8003490:	f7ff fa62 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003494:	4923      	ldr	r1, [pc, #140]	; (8003524 <_ZN23Calibration_PadViewBaseC1Ev+0x850>)
        linespace = space;
 8003496:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
 800349a:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 800349c:	f8c4 55cc 	str.w	r5, [r4, #1484]	; 0x5cc
        color = newColor;
 80034a0:	f04f 36ff 	mov.w	r6, #4294967295
 80034a4:	f8c4 65c0 	str.w	r6, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 80034a8:	f8c4 65d0 	str.w	r6, [r4, #1488]	; 0x5d0
 80034ac:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 80034b0:	f504 6617 	add.w	r6, r4, #2416	; 0x970
 80034b4:	2b00      	cmp	r3, #0
 80034b6:	f43f ae65 	beq.w	8003184 <_ZN23Calibration_PadViewBaseC1Ev+0x4b0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80034ba:	481b      	ldr	r0, [pc, #108]	; (8003528 <_ZN23Calibration_PadViewBaseC1Ev+0x854>)
 80034bc:	8803      	ldrh	r3, [r0, #0]
 80034be:	42bb      	cmp	r3, r7
 80034c0:	f67f ae6a 	bls.w	8003198 <_ZN23Calibration_PadViewBaseC1Ev+0x4c4>
        return texts->getText(typedTextId);
 80034c4:	4a14      	ldr	r2, [pc, #80]	; (8003518 <_ZN23Calibration_PadViewBaseC1Ev+0x844>)
 80034c6:	4639      	mov	r1, r7
 80034c8:	6810      	ldr	r0, [r2, #0]
 80034ca:	f004 fd15 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 80034ce:	4a13      	ldr	r2, [pc, #76]	; (800351c <_ZN23Calibration_PadViewBaseC1Ev+0x848>)
 80034d0:	4603      	mov	r3, r0
 80034d2:	4639      	mov	r1, r7
 80034d4:	4630      	mov	r0, r6
 80034d6:	f015 fdd9 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 80034da:	ee1f 0a10 	vmov	r0, s30
 80034de:	f8c4 65d8 	str.w	r6, [r4, #1496]	; 0x5d8
 80034e2:	f00f f955 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80034e6:	4b0e      	ldr	r3, [pc, #56]	; (8003520 <_ZN23Calibration_PadViewBaseC1Ev+0x84c>)
 80034e8:	9316      	str	r3, [sp, #88]	; 0x58
 80034ea:	230b      	movs	r3, #11
 80034ec:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP3));
 80034f0:	ab16      	add	r3, sp, #88	; 0x58
 80034f2:	4619      	mov	r1, r3
 80034f4:	ee1f 0a10 	vmov	r0, s30
 80034f8:	f00f f96a 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 80034fc:	ee1f 1a10 	vmov	r1, s30
 8003500:	ee18 0a90 	vmov	r0, s17
 8003504:	f00c fb3c 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8003508:	2116      	movs	r1, #22
 800350a:	ee1f 0a90 	vmov	r0, s31
 800350e:	2244      	movs	r2, #68	; 0x44
 8003510:	f7ff fa22 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8003514:	e00c      	b.n	8003530 <_ZN23Calibration_PadViewBaseC1Ev+0x85c>
 8003516:	bf00      	nop
 8003518:	20013320 	.word	0x20013320
 800351c:	0802c5dd 	.word	0x0802c5dd
 8003520:	0802c650 	.word	0x0802c650
 8003524:	20013314 	.word	0x20013314
 8003528:	20013318 	.word	0x20013318
 800352c:	00ac00f0 	.word	0x00ac00f0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003530:	49d7      	ldr	r1, [pc, #860]	; (8003890 <_ZN23Calibration_PadViewBaseC1Ev+0xbbc>)
        linespace = space;
 8003532:	f8a4 5610 	strh.w	r5, [r4, #1552]	; 0x610
        color = newColor;
 8003536:	f04f 33ff 	mov.w	r3, #4294967295
 800353a:	f8c4 360c 	str.w	r3, [r4, #1548]	; 0x60c
        boundingArea = calculateBoundingArea();
 800353e:	f8c4 361c 	str.w	r3, [r4, #1564]	; 0x61c
 8003542:	680b      	ldr	r3, [r1, #0]
 8003544:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 8003548:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 800354c:	f604 1584 	addw	r5, r4, #2436	; 0x984
 8003550:	2b00      	cmp	r3, #0
 8003552:	f43f ae17 	beq.w	8003184 <_ZN23Calibration_PadViewBaseC1Ev+0x4b0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003556:	48cf      	ldr	r0, [pc, #828]	; (8003894 <_ZN23Calibration_PadViewBaseC1Ev+0xbc0>)
 8003558:	8803      	ldrh	r3, [r0, #0]
 800355a:	2b08      	cmp	r3, #8
 800355c:	f67f ae1c 	bls.w	8003198 <_ZN23Calibration_PadViewBaseC1Ev+0x4c4>
        return texts->getText(typedTextId);
 8003560:	f8df 9338 	ldr.w	r9, [pc, #824]	; 800389c <_ZN23Calibration_PadViewBaseC1Ev+0xbc8>
        : typedTextId(id)
 8003564:	f8df 8338 	ldr.w	r8, [pc, #824]	; 80038a0 <_ZN23Calibration_PadViewBaseC1Ev+0xbcc>
        return texts->getText(typedTextId);
 8003568:	f8d9 0000 	ldr.w	r0, [r9]
 800356c:	2108      	movs	r1, #8
 800356e:	f004 fcc3 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8003572:	4ac9      	ldr	r2, [pc, #804]	; (8003898 <_ZN23Calibration_PadViewBaseC1Ev+0xbc4>)
 8003574:	4603      	mov	r3, r0
 8003576:	4639      	mov	r1, r7
 8003578:	4628      	mov	r0, r5
 800357a:	f015 fd87 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 800357e:	ee1f 0a90 	vmov	r0, s31
 8003582:	f8c4 5624 	str.w	r5, [r4, #1572]	; 0x624
 8003586:	f00f f903 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800358a:	2309      	movs	r3, #9
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP2));
 800358c:	ee1f 0a90 	vmov	r0, s31
 8003590:	a916      	add	r1, sp, #88	; 0x58
 8003592:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003596:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 800359a:	f00f f919 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 800359e:	ee1f 1a90 	vmov	r1, s31
 80035a2:	ee18 0a90 	vmov	r0, s17
 80035a6:	f00c faeb 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP1.setXY(22, 32);
 80035aa:	9803      	ldr	r0, [sp, #12]
 80035ac:	2220      	movs	r2, #32
 80035ae:	2116      	movs	r1, #22
 80035b0:	f7ff f9d2 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80035b4:	4bb6      	ldr	r3, [pc, #728]	; (8003890 <_ZN23Calibration_PadViewBaseC1Ev+0xbbc>)
 80035b6:	681b      	ldr	r3, [r3, #0]
        linespace = space;
 80035b8:	2600      	movs	r6, #0
        color = newColor;
 80035ba:	f04f 37ff 	mov.w	r7, #4294967295
 80035be:	f8c4 7658 	str.w	r7, [r4, #1624]	; 0x658
        linespace = space;
 80035c2:	f8a4 665c 	strh.w	r6, [r4, #1628]	; 0x65c
        boundingArea = calculateBoundingArea();
 80035c6:	f8c4 6664 	str.w	r6, [r4, #1636]	; 0x664
 80035ca:	f8c4 7668 	str.w	r7, [r4, #1640]	; 0x668
 80035ce:	f8c4 666c 	str.w	r6, [r4, #1644]	; 0x66c
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 80035d2:	f604 1598 	addw	r5, r4, #2456	; 0x998
 80035d6:	2b00      	cmp	r3, #0
 80035d8:	f43f add4 	beq.w	8003184 <_ZN23Calibration_PadViewBaseC1Ev+0x4b0>
        return typedTextId < numberOfTypedTexts;
 80035dc:	4bad      	ldr	r3, [pc, #692]	; (8003894 <_ZN23Calibration_PadViewBaseC1Ev+0xbc0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80035de:	881b      	ldrh	r3, [r3, #0]
 80035e0:	2b07      	cmp	r3, #7
 80035e2:	f67f add9 	bls.w	8003198 <_ZN23Calibration_PadViewBaseC1Ev+0x4c4>
        return texts->getText(typedTextId);
 80035e6:	f8d9 0000 	ldr.w	r0, [r9]
 80035ea:	2107      	movs	r1, #7
 80035ec:	f004 fc84 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 80035f0:	4aa9      	ldr	r2, [pc, #676]	; (8003898 <_ZN23Calibration_PadViewBaseC1Ev+0xbc4>)
 80035f2:	4603      	mov	r3, r0
 80035f4:	210a      	movs	r1, #10
 80035f6:	4628      	mov	r0, r5
 80035f8:	f015 fd48 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 80035fc:	9803      	ldr	r0, [sp, #12]
 80035fe:	f8c4 5670 	str.w	r5, [r4, #1648]	; 0x670
 8003602:	f00f f8c5 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003606:	f04f 0a0c 	mov.w	sl, #12
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 800360a:	9803      	ldr	r0, [sp, #12]
 800360c:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003610:	a916      	add	r1, sp, #88	; 0x58
    line1_1_2.setPosition(0, 15, 240, 10);
 8003612:	f04f 090a 	mov.w	r9, #10
 8003616:	f8ad a05c 	strh.w	sl, [sp, #92]	; 0x5c
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 800361a:	f00f f8d9 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 800361e:	9903      	ldr	r1, [sp, #12]
 8003620:	ee18 0a90 	vmov	r0, s17
 8003624:	f00c faac 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2.setPosition(0, 15, 240, 10);
 8003628:	ee19 0a90 	vmov	r0, s19
 800362c:	4631      	mov	r1, r6
 800362e:	f8cd 9000 	str.w	r9, [sp]
 8003632:	23f0      	movs	r3, #240	; 0xf0
 8003634:	220f      	movs	r2, #15
 8003636:	f7ff f99c 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 800363a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800363c:	f8c4 369c 	str.w	r3, [r4, #1692]	; 0x69c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003640:	22a0      	movs	r2, #160	; 0xa0
 8003642:	ee19 0a90 	vmov	r0, s19
 8003646:	4611      	mov	r1, r2
 8003648:	f8c4 76f0 	str.w	r7, [r4, #1776]	; 0x6f0
 800364c:	f8a4 76f4 	strh.w	r7, [r4, #1780]	; 0x6f4
 8003650:	f00e fc78 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003654:	22a0      	movs	r2, #160	; 0xa0
 8003656:	ee19 0a90 	vmov	r0, s19
 800365a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800365e:	f00e fc7c 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1_2.setLineWidth(1);
 8003662:	ee19 0a90 	vmov	r0, s19
 8003666:	2101      	movs	r1, #1
 8003668:	f7ff fb24 	bl	8002cb4 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800366c:	ee19 0a90 	vmov	r0, s19
 8003670:	2101      	movs	r1, #1
 8003672:	f00e fc7d 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_1_2);
 8003676:	ee19 1a90 	vmov	r1, s19
 800367a:	ee18 0a90 	vmov	r0, s17
 800367e:	ad0e      	add	r5, sp, #56	; 0x38
 8003680:	f00c fa7e 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2.setXY(92, 0);
 8003684:	4632      	mov	r2, r6
 8003686:	ee1c 0a90 	vmov	r0, s25
 800368a:	215c      	movs	r1, #92	; 0x5c
 800368c:	f7ff f964 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8003690:	ee1c 1a90 	vmov	r1, s25
 8003694:	4628      	mov	r0, r5
        color = newColor;
 8003696:	f8c4 7728 	str.w	r7, [r4, #1832]	; 0x728
        linespace = space;
 800369a:	f8a4 672c 	strh.w	r6, [r4, #1836]	; 0x72c
        boundingArea = calculateBoundingArea();
 800369e:	f00e fdfd 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80036a2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80036a6:	ee1c 3a90 	vmov	r3, s25
 80036aa:	333c      	adds	r3, #60	; 0x3c
 80036ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80036b0:	2306      	movs	r3, #6
    textArea3_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 80036b2:	ee1c 0a90 	vmov	r0, s25
 80036b6:	a916      	add	r1, sp, #88	; 0x58
 80036b8:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 80036bc:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 80036c0:	f00f f886 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea3_2);
 80036c4:	ee1c 1a90 	vmov	r1, s25
 80036c8:	ee18 0a90 	vmov	r0, s17
 80036cc:	f00c fa58 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 80036d0:	ee18 1a90 	vmov	r1, s17
 80036d4:	ee18 0a10 	vmov	r0, s16
 80036d8:	f00c ff35 	bl	8010546 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 80036dc:	ee18 0a10 	vmov	r0, s16
 80036e0:	4631      	mov	r1, r6
 80036e2:	f00c ff21 	bl	8010528 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80036e6:	ee18 1a10 	vmov	r1, s16
 80036ea:	4658      	mov	r0, fp
 80036ec:	f00c fa48 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 80036f0:	ee1a 0a10 	vmov	r0, s20
 80036f4:	4631      	mov	r1, r6
 80036f6:	f8cd 9000 	str.w	r9, [sp]
 80036fa:	23f0      	movs	r3, #240	; 0xf0
 80036fc:	224b      	movs	r2, #75	; 0x4b
 80036fe:	f7ff f938 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003702:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003706:	f8a4 37c0 	strh.w	r3, [r4, #1984]	; 0x7c0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800370a:	22a0      	movs	r2, #160	; 0xa0
 800370c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800370e:	f8c4 3768 	str.w	r3, [r4, #1896]	; 0x768
 8003712:	ee1a 0a10 	vmov	r0, s20
 8003716:	4611      	mov	r1, r2
 8003718:	f8c4 77bc 	str.w	r7, [r4, #1980]	; 0x7bc
 800371c:	f00e fc12 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003720:	22a0      	movs	r2, #160	; 0xa0
 8003722:	ee1a 0a10 	vmov	r0, s20
 8003726:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800372a:	f00e fc16 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1.setLineWidth(1);
 800372e:	ee1a 0a10 	vmov	r0, s20
 8003732:	2101      	movs	r1, #1
 8003734:	f7ff fabe 	bl	8002cb4 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003738:	ee1a 0a10 	vmov	r0, s20
 800373c:	2101      	movs	r1, #1
 800373e:	f00e fc17 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003742:	ee1a 1a10 	vmov	r1, s20
 8003746:	4658      	mov	r0, fp
 8003748:	f00c fa1a 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 800374c:	ee1d 0a10 	vmov	r0, s26
 8003750:	223c      	movs	r2, #60	; 0x3c
 8003752:	2146      	movs	r1, #70	; 0x46
 8003754:	f7ff f900 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8003758:	ee1d 1a10 	vmov	r1, s26
 800375c:	4628      	mov	r0, r5
        color = newColor;
 800375e:	f8c4 77f4 	str.w	r7, [r4, #2036]	; 0x7f4
        linespace = space;
 8003762:	f8a4 67f8 	strh.w	r6, [r4, #2040]	; 0x7f8
        boundingArea = calculateBoundingArea();
 8003766:	f00e fd99 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800376a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800376e:	ee1d 3a10 	vmov	r3, s26
 8003772:	333c      	adds	r3, #60	; 0x3c
 8003774:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003778:	2316      	movs	r3, #22
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 800377a:	ee1d 0a10 	vmov	r0, s26
 800377e:	a916      	add	r1, sp, #88	; 0x58
 8003780:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003784:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003788:	f00f f822 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800378c:	ee1d 1a10 	vmov	r1, s26
 8003790:	4658      	mov	r0, fp
 8003792:	f00c f9f5 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003796:	ee1a 0a90 	vmov	r0, s21
 800379a:	4631      	mov	r1, r6
 800379c:	f8cd 9000 	str.w	r9, [sp]
 80037a0:	23f0      	movs	r3, #240	; 0xf0
 80037a2:	2232      	movs	r2, #50	; 0x32
 80037a4:	f7ff f8e5 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80037aa:	f8c4 3834 	str.w	r3, [r4, #2100]	; 0x834
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80037ae:	22a0      	movs	r2, #160	; 0xa0
 80037b0:	ee1a 0a90 	vmov	r0, s21
 80037b4:	4611      	mov	r1, r2
 80037b6:	f8c4 7888 	str.w	r7, [r4, #2184]	; 0x888
 80037ba:	f8a4 788c 	strh.w	r7, [r4, #2188]	; 0x88c
 80037be:	f00e fbc1 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80037c2:	22a0      	movs	r2, #160	; 0xa0
 80037c4:	ee1a 0a90 	vmov	r0, s21
 80037c8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80037cc:	f00e fbc5 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1.setLineWidth(1);
 80037d0:	ee1a 0a90 	vmov	r0, s21
 80037d4:	2101      	movs	r1, #1
 80037d6:	f7ff fa6d 	bl	8002cb4 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80037da:	ee1a 0a90 	vmov	r0, s21
 80037de:	2101      	movs	r1, #1
 80037e0:	f00e fbc6 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80037e4:	ee1a 1a90 	vmov	r1, s21
 80037e8:	4658      	mov	r0, fp
 80037ea:	f00c f9c9 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80037ee:	ee1d 0a90 	vmov	r0, s27
 80037f2:	2223      	movs	r2, #35	; 0x23
 80037f4:	2145      	movs	r1, #69	; 0x45
 80037f6:	f7ff f8af 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80037fa:	ee1d 1a90 	vmov	r1, s27
 80037fe:	4628      	mov	r0, r5
        color = newColor;
 8003800:	f8c4 78c0 	str.w	r7, [r4, #2240]	; 0x8c0
        linespace = space;
 8003804:	f8a4 68c4 	strh.w	r6, [r4, #2244]	; 0x8c4
        boundingArea = calculateBoundingArea();
 8003808:	f00e fd48 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800380c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003810:	ee1d 3a90 	vmov	r3, s27
 8003814:	333c      	adds	r3, #60	; 0x3c
 8003816:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800381a:	2318      	movs	r3, #24
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800381c:	ee1d 0a90 	vmov	r0, s27
 8003820:	a916      	add	r1, sp, #88	; 0x58
 8003822:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003826:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 800382a:	f00e ffd1 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800382e:	ee1d 1a90 	vmov	r1, s27
 8003832:	4658      	mov	r0, fp
 8003834:	f00c f9a4 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003838:	4652      	mov	r2, sl
 800383a:	ee1e 0a10 	vmov	r0, s28
 800383e:	2136      	movs	r1, #54	; 0x36
 8003840:	f7ff f88a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8003844:	ee1e 1a10 	vmov	r1, s28
 8003848:	4628      	mov	r0, r5
        color = newColor;
 800384a:	f8c4 7908 	str.w	r7, [r4, #2312]	; 0x908
        linespace = space;
 800384e:	f8a4 690c 	strh.w	r6, [r4, #2316]	; 0x90c
        boundingArea = calculateBoundingArea();
 8003852:	f00e fd23 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003856:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800385a:	ee1e 3a10 	vmov	r3, s28
 800385e:	333c      	adds	r3, #60	; 0x3c
 8003860:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003864:	2319      	movs	r3, #25
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8003866:	ee1e 0a10 	vmov	r0, s28
 800386a:	a916      	add	r1, sp, #88	; 0x58
 800386c:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003870:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003874:	f00e ffac 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003878:	4658      	mov	r0, fp
 800387a:	ee1e 1a10 	vmov	r1, s28
 800387e:	f00c f97f 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003882:	4620      	mov	r0, r4
 8003884:	b019      	add	sp, #100	; 0x64
 8003886:	ecbd 8b10 	vpop	{d8-d15}
 800388a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800388e:	bf00      	nop
 8003890:	20013314 	.word	0x20013314
 8003894:	20013318 	.word	0x20013318
 8003898:	0802c5dd 	.word	0x0802c5dd
 800389c:	20013320 	.word	0x20013320
 80038a0:	0802c650 	.word	0x0802c650

080038a4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80038a4:	4770      	bx	lr

080038a6 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80038a6:	4770      	bx	lr

080038a8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80038a8:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80038ac:	6808      	ldr	r0, [r1, #0]
 80038ae:	6849      	ldr	r1, [r1, #4]
 80038b0:	c303      	stmia	r3!, {r0, r1}
    }
 80038b2:	4770      	bx	lr

080038b4 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80038b4:	4770      	bx	lr

080038b6 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80038b6:	4770      	bx	lr

080038b8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80038b8:	6041      	str	r1, [r0, #4]
    }
 80038ba:	4770      	bx	lr

080038bc <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80038bc:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80038be:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80038c0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80038c4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80038c8:	8002      	strh	r2, [r0, #0]
 80038ca:	8042      	strh	r2, [r0, #2]
 80038cc:	8084      	strh	r4, [r0, #4]
 80038ce:	80c1      	strh	r1, [r0, #6]
        }
 80038d0:	bd10      	pop	{r4, pc}

080038d2 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80038d2:	4770      	bx	lr

080038d4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80038d4:	4770      	bx	lr
	...

080038d8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80038d8:	4b06      	ldr	r3, [pc, #24]	; (80038f4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80038da:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038de:	2300      	movs	r3, #0
 80038e0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80038e4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038e8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038ec:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 80038f0:	4770      	bx	lr
 80038f2:	bf00      	nop
 80038f4:	08003c95 	.word	0x08003c95

080038f8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80038f8:	2301      	movs	r3, #1
 80038fa:	7203      	strb	r3, [r0, #8]
    }
 80038fc:	4770      	bx	lr

080038fe <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80038fe:	4770      	bx	lr

08003900 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003900:	4770      	bx	lr

08003902 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8003902:	4770      	bx	lr

08003904 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003904:	4770      	bx	lr

08003906 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8003906:	4770      	bx	lr

08003908 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003908:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800390a:	6840      	ldr	r0, [r0, #4]
 800390c:	6803      	ldr	r3, [r0, #0]
 800390e:	3110      	adds	r1, #16
 8003910:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003912:	4718      	bx	r3

08003914 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003914:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8003916:	6840      	ldr	r0, [r0, #4]
 8003918:	6803      	ldr	r3, [r0, #0]
 800391a:	3110      	adds	r1, #16
 800391c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800391e:	4718      	bx	r3

08003920 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003920:	4770      	bx	lr

08003922 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8003922:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8003924:	6840      	ldr	r0, [r0, #4]
 8003926:	6803      	ldr	r3, [r0, #0]
 8003928:	3110      	adds	r1, #16
 800392a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800392c:	4718      	bx	r3

0800392e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800392e:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8003930:	6840      	ldr	r0, [r0, #4]
 8003932:	6803      	ldr	r3, [r0, #0]
 8003934:	3110      	adds	r1, #16
 8003936:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003938:	4718      	bx	r3

0800393a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800393a:	4770      	bx	lr

0800393c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800393c:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800393e:	68c2      	ldr	r2, [r0, #12]
 8003940:	6841      	ldr	r1, [r0, #4]
 8003942:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003944:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003946:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800394a:	07d2      	lsls	r2, r2, #31
 800394c:	bf48      	it	mi
 800394e:	590a      	ldrmi	r2, [r1, r4]
 8003950:	689b      	ldr	r3, [r3, #8]
    }
 8003952:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003956:	bf48      	it	mi
 8003958:	58d3      	ldrmi	r3, [r2, r3]
 800395a:	4718      	bx	r3

0800395c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800395c:	6843      	ldr	r3, [r0, #4]
 800395e:	b12b      	cbz	r3, 800396c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8003960:	6883      	ldr	r3, [r0, #8]
 8003962:	b92b      	cbnz	r3, 8003970 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003964:	68c0      	ldr	r0, [r0, #12]
 8003966:	f000 0001 	and.w	r0, r0, #1
 800396a:	4770      	bx	lr
 800396c:	4618      	mov	r0, r3
 800396e:	4770      	bx	lr
 8003970:	2001      	movs	r0, #1
    }
 8003972:	4770      	bx	lr

08003974 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003974:	b510      	push	{r4, lr}
 8003976:	210c      	movs	r1, #12
 8003978:	4604      	mov	r4, r0
 800397a:	f026 fa8e 	bl	8029e9a <_ZdlPvj>
 800397e:	4620      	mov	r0, r4
 8003980:	bd10      	pop	{r4, pc}

08003982 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003982:	b510      	push	{r4, lr}
 8003984:	2110      	movs	r1, #16
 8003986:	4604      	mov	r4, r0
 8003988:	f026 fa87 	bl	8029e9a <_ZdlPvj>
 800398c:	4620      	mov	r0, r4
 800398e:	bd10      	pop	{r4, pc}

08003990 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003990:	b510      	push	{r4, lr}
 8003992:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8003996:	4604      	mov	r4, r0
 8003998:	f026 fa7f 	bl	8029e9a <_ZdlPvj>
 800399c:	4620      	mov	r0, r4
 800399e:	bd10      	pop	{r4, pc}

080039a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80039a0:	b510      	push	{r4, lr}
 80039a2:	2138      	movs	r1, #56	; 0x38
 80039a4:	4604      	mov	r4, r0
 80039a6:	f026 fa78 	bl	8029e9a <_ZdlPvj>
 80039aa:	4620      	mov	r0, r4
 80039ac:	bd10      	pop	{r4, pc}

080039ae <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80039ae:	b510      	push	{r4, lr}
 80039b0:	2128      	movs	r1, #40	; 0x28
 80039b2:	4604      	mov	r4, r0
 80039b4:	f026 fa71 	bl	8029e9a <_ZdlPvj>
 80039b8:	4620      	mov	r0, r4
 80039ba:	bd10      	pop	{r4, pc}

080039bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80039bc:	b510      	push	{r4, lr}
 80039be:	2138      	movs	r1, #56	; 0x38
 80039c0:	4604      	mov	r4, r0
 80039c2:	f026 fa6a 	bl	8029e9a <_ZdlPvj>
 80039c6:	4620      	mov	r0, r4
 80039c8:	bd10      	pop	{r4, pc}

080039ca <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80039ca:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80039cc:	f012 f9b0 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 80039d0:	6803      	ldr	r3, [r0, #0]
    }
 80039d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80039d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80039d8:	4718      	bx	r3
	...

080039dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80039dc:	b513      	push	{r0, r1, r4, lr}
 80039de:	4604      	mov	r4, r0
        animationCounter++;
 80039e0:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80039e2:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80039e4:	3001      	adds	r0, #1
 80039e6:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80039e8:	4298      	cmp	r0, r3
        animationCounter++;
 80039ea:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80039ec:	d905      	bls.n	80039fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80039ee:	2301      	movs	r3, #1
 80039f0:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80039f2:	2300      	movs	r3, #0
 80039f4:	72a3      	strb	r3, [r4, #10]
    }
 80039f6:	b002      	add	sp, #8
 80039f8:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80039fa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80039fe:	2100      	movs	r1, #0
 8003a00:	f014 f806 	bl	8017a10 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003a04:	f010 0201 	ands.w	r2, r0, #1
 8003a08:	b283      	uxth	r3, r0
 8003a0a:	d12a      	bne.n	8003a62 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003a0c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003a0e:	4a19      	ldr	r2, [pc, #100]	; (8003a74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8003a10:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8003a14:	89e3      	ldrh	r3, [r4, #14]
 8003a16:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8003a18:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003a1c:	82a0      	strh	r0, [r4, #20]
 8003a1e:	2000      	movs	r0, #0
 8003a20:	1ad2      	subs	r2, r2, r3
 8003a22:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8003a26:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8003a28:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8003a2a:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003a2c:	4a12      	ldr	r2, [pc, #72]	; (8003a78 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8003a2e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003a32:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003a34:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003a38:	691b      	ldr	r3, [r3, #16]
 8003a3a:	f8ad 1000 	strh.w	r1, [sp]
 8003a3e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8003a42:	4669      	mov	r1, sp
 8003a44:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003a46:	7aa3      	ldrb	r3, [r4, #10]
 8003a48:	2b01      	cmp	r3, #1
 8003a4a:	d1d4      	bne.n	80039f6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003a4c:	4b0b      	ldr	r3, [pc, #44]	; (8003a7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8003a4e:	781b      	ldrb	r3, [r3, #0]
 8003a50:	2b00      	cmp	r3, #0
 8003a52:	d0d0      	beq.n	80039f6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003a54:	f012 f96c 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003a58:	b002      	add	sp, #8
 8003a5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003a5e:	f012 b96d 	b.w	8015d3c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003a62:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003a66:	2800      	cmp	r0, #0
 8003a68:	bfd8      	it	le
 8003a6a:	460a      	movle	r2, r1
 8003a6c:	4413      	add	r3, r2
 8003a6e:	81e3      	strh	r3, [r4, #14]
 8003a70:	e7cd      	b.n	8003a0e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8003a72:	bf00      	nop
 8003a74:	200132b0 	.word	0x200132b0
 8003a78:	200132b2 	.word	0x200132b2
 8003a7c:	200132ba 	.word	0x200132ba

08003a80 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003a80:	b510      	push	{r4, lr}
 8003a82:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003a84:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003a88:	b158      	cbz	r0, 8003aa2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003a8a:	6803      	ldr	r3, [r0, #0]
 8003a8c:	68db      	ldr	r3, [r3, #12]
 8003a8e:	4798      	blx	r3
 8003a90:	b138      	cbz	r0, 8003aa2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003a92:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8003a96:	6803      	ldr	r3, [r0, #0]
 8003a98:	689b      	ldr	r3, [r3, #8]
 8003a9a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003a9c:	2300      	movs	r3, #0
 8003a9e:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8003aa2:	bd10      	pop	{r4, pc}

08003aa4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8003aa4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003aa8:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003aac:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003aae:	68a8      	ldr	r0, [r5, #8]
 8003ab0:	6803      	ldr	r3, [r0, #0]
 8003ab2:	6a1b      	ldr	r3, [r3, #32]
 8003ab4:	4798      	blx	r3
 8003ab6:	2897      	cmp	r0, #151	; 0x97
 8003ab8:	d805      	bhi.n	8003ac6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8003aba:	4b46      	ldr	r3, [pc, #280]	; (8003bd4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8003abc:	4a46      	ldr	r2, [pc, #280]	; (8003bd8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003abe:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003ac0:	4846      	ldr	r0, [pc, #280]	; (8003bdc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8003ac2:	f026 fffd 	bl	802aac0 <__assert_func>
 8003ac6:	6868      	ldr	r0, [r5, #4]
 8003ac8:	6803      	ldr	r3, [r0, #0]
 8003aca:	6a1b      	ldr	r3, [r3, #32]
 8003acc:	4798      	blx	r3
 8003ace:	280f      	cmp	r0, #15
 8003ad0:	d803      	bhi.n	8003ada <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8003ad2:	4b43      	ldr	r3, [pc, #268]	; (8003be0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8003ad4:	4a40      	ldr	r2, [pc, #256]	; (8003bd8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003ad6:	21a4      	movs	r1, #164	; 0xa4
 8003ad8:	e7f2      	b.n	8003ac0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ada:	68e8      	ldr	r0, [r5, #12]
 8003adc:	6803      	ldr	r3, [r0, #0]
 8003ade:	6a1b      	ldr	r3, [r3, #32]
 8003ae0:	4798      	blx	r3
 8003ae2:	280b      	cmp	r0, #11
 8003ae4:	d803      	bhi.n	8003aee <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8003ae6:	4b3f      	ldr	r3, [pc, #252]	; (8003be4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8003ae8:	4a3b      	ldr	r2, [pc, #236]	; (8003bd8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003aea:	21a5      	movs	r1, #165	; 0xa5
 8003aec:	e7e8      	b.n	8003ac0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003aee:	f012 f91f 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003af2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003bec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003af6:	3004      	adds	r0, #4
 8003af8:	f012 f980 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003afc:	f8d9 0000 	ldr.w	r0, [r9]
 8003b00:	b110      	cbz	r0, 8003b08 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8003b02:	6803      	ldr	r3, [r0, #0]
 8003b04:	68db      	ldr	r3, [r3, #12]
 8003b06:	4798      	blx	r3
    if (*currentTrans)
 8003b08:	f8d9 0000 	ldr.w	r0, [r9]
 8003b0c:	b110      	cbz	r0, 8003b14 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003b0e:	6803      	ldr	r3, [r0, #0]
 8003b10:	681b      	ldr	r3, [r3, #0]
 8003b12:	4798      	blx	r3
    if (*currentScreen)
 8003b14:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003bf0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003b18:	f8d8 0000 	ldr.w	r0, [r8]
 8003b1c:	b110      	cbz	r0, 8003b24 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003b1e:	6803      	ldr	r3, [r0, #0]
 8003b20:	695b      	ldr	r3, [r3, #20]
 8003b22:	4798      	blx	r3
    if (*currentPresenter)
 8003b24:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b28:	b110      	cbz	r0, 8003b30 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003b2a:	6803      	ldr	r3, [r0, #0]
 8003b2c:	685b      	ldr	r3, [r3, #4]
 8003b2e:	4798      	blx	r3
    if (*currentScreen)
 8003b30:	f8d8 0000 	ldr.w	r0, [r8]
 8003b34:	b110      	cbz	r0, 8003b3c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8003b36:	6803      	ldr	r3, [r0, #0]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	4798      	blx	r3
    if (*currentPresenter)
 8003b3c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b40:	b110      	cbz	r0, 8003b48 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8003b42:	6803      	ldr	r3, [r0, #0]
 8003b44:	689b      	ldr	r3, [r3, #8]
 8003b46:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003b48:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003b4a:	6803      	ldr	r3, [r0, #0]
 8003b4c:	2100      	movs	r1, #0
 8003b4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b50:	4798      	blx	r3
        : screenContainer(0), done(false)
 8003b52:	f04f 0b00 	mov.w	fp, #0
 8003b56:	4b24      	ldr	r3, [pc, #144]	; (8003be8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003b58:	6003      	str	r3, [r0, #0]
 8003b5a:	4604      	mov	r4, r0
 8003b5c:	f8c0 b004 	str.w	fp, [r0, #4]
 8003b60:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003b64:	68a8      	ldr	r0, [r5, #8]
 8003b66:	6803      	ldr	r3, [r0, #0]
 8003b68:	4659      	mov	r1, fp
 8003b6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b6c:	4798      	blx	r3
 8003b6e:	4606      	mov	r6, r0
 8003b70:	f004 fe82 	bl	8008878 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003b74:	6868      	ldr	r0, [r5, #4]
 8003b76:	6803      	ldr	r3, [r0, #0]
 8003b78:	4659      	mov	r1, fp
 8003b7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b7c:	4798      	blx	r3
 8003b7e:	4631      	mov	r1, r6
 8003b80:	4605      	mov	r5, r0
 8003b82:	f004 fe55 	bl	8008830 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8003b86:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003b8a:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003b8e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003b92:	b1e5      	cbz	r5, 8003bce <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8003b94:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003b96:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003b9a:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003b9c:	f8c5 a008 	str.w	sl, [r5, #8]
 8003ba0:	4630      	mov	r0, r6
 8003ba2:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003ba4:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003ba6:	4798      	blx	r3
    newPresenter->activate();
 8003ba8:	682b      	ldr	r3, [r5, #0]
 8003baa:	4628      	mov	r0, r5
 8003bac:	681b      	ldr	r3, [r3, #0]
 8003bae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003bb0:	4621      	mov	r1, r4
 8003bb2:	4630      	mov	r0, r6
 8003bb4:	f013 fee8 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003bb8:	6823      	ldr	r3, [r4, #0]
 8003bba:	4620      	mov	r0, r4
 8003bbc:	691b      	ldr	r3, [r3, #16]
 8003bbe:	4798      	blx	r3
    newTransition->invalidate();
 8003bc0:	6823      	ldr	r3, [r4, #0]
 8003bc2:	695b      	ldr	r3, [r3, #20]
 8003bc4:	4620      	mov	r0, r4
}
 8003bc6:	b001      	add	sp, #4
 8003bc8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bcc:	4718      	bx	r3
    model->bind(newPresenter);
 8003bce:	462b      	mov	r3, r5
 8003bd0:	e7e1      	b.n	8003b96 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8003bd2:	bf00      	nop
 8003bd4:	0802c7cc 	.word	0x0802c7cc
 8003bd8:	0802c85a 	.word	0x0802c85a
 8003bdc:	0802c968 	.word	0x0802c968
 8003be0:	0802c9af 	.word	0x0802c9af
 8003be4:	0802ca52 	.word	0x0802ca52
 8003be8:	0802db0c 	.word	0x0802db0c
 8003bec:	20013304 	.word	0x20013304
 8003bf0:	20013300 	.word	0x20013300

08003bf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003bf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003bf6:	4604      	mov	r4, r0
        animationCounter++;
 8003bf8:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003bfa:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003bfc:	3001      	adds	r0, #1
 8003bfe:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003c00:	4298      	cmp	r0, r3
        animationCounter++;
 8003c02:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003c04:	d905      	bls.n	8003c12 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8003c06:	2301      	movs	r3, #1
 8003c08:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003c0a:	2300      	movs	r3, #0
 8003c0c:	72a3      	strb	r3, [r4, #10]
    }
 8003c0e:	b003      	add	sp, #12
 8003c10:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003c12:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003c16:	2100      	movs	r1, #0
 8003c18:	f013 fefa 	bl	8017a10 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003c1c:	f010 0201 	ands.w	r2, r0, #1
 8003c20:	b283      	uxth	r3, r0
 8003c22:	d128      	bne.n	8003c76 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003c24:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003c26:	4b18      	ldr	r3, [pc, #96]	; (8003c88 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003c28:	4818      	ldr	r0, [pc, #96]	; (8003c8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003c2a:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003c2c:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003c2e:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003c30:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003c34:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003c38:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003c3a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003c3c:	442b      	add	r3, r5
 8003c3e:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003c40:	b212      	sxth	r2, r2
 8003c42:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003c46:	6803      	ldr	r3, [r0, #0]
 8003c48:	8322      	strh	r2, [r4, #24]
 8003c4a:	f8ad 2000 	strh.w	r2, [sp]
 8003c4e:	2200      	movs	r2, #0
 8003c50:	691b      	ldr	r3, [r3, #16]
 8003c52:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003c56:	4669      	mov	r1, sp
 8003c58:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003c5a:	7aa3      	ldrb	r3, [r4, #10]
 8003c5c:	2b01      	cmp	r3, #1
 8003c5e:	d1d6      	bne.n	8003c0e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003c60:	4b0b      	ldr	r3, [pc, #44]	; (8003c90 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8003c62:	781b      	ldrb	r3, [r3, #0]
 8003c64:	2b00      	cmp	r3, #0
 8003c66:	d0d2      	beq.n	8003c0e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003c68:	f012 f862 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003c6c:	b003      	add	sp, #12
 8003c6e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003c72:	f012 b863 	b.w	8015d3c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003c76:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003c7a:	2800      	cmp	r0, #0
 8003c7c:	bfd8      	it	le
 8003c7e:	460a      	movle	r2, r1
 8003c80:	4413      	add	r3, r2
 8003c82:	81e3      	strh	r3, [r4, #14]
 8003c84:	e7cf      	b.n	8003c26 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8003c86:	bf00      	nop
 8003c88:	200132b0 	.word	0x200132b0
 8003c8c:	200132b2 	.word	0x200132b2
 8003c90:	200132ba 	.word	0x200132ba

08003c94 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8003c94:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003c98:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003c9c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c9e:	68a8      	ldr	r0, [r5, #8]
 8003ca0:	6803      	ldr	r3, [r0, #0]
 8003ca2:	6a1b      	ldr	r3, [r3, #32]
 8003ca4:	4798      	blx	r3
 8003ca6:	f241 137b 	movw	r3, #4475	; 0x117b
 8003caa:	4298      	cmp	r0, r3
 8003cac:	d805      	bhi.n	8003cba <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8003cae:	4b46      	ldr	r3, [pc, #280]	; (8003dc8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8003cb0:	4a46      	ldr	r2, [pc, #280]	; (8003dcc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003cb2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003cb4:	4846      	ldr	r0, [pc, #280]	; (8003dd0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8003cb6:	f026 ff03 	bl	802aac0 <__assert_func>
 8003cba:	6868      	ldr	r0, [r5, #4]
 8003cbc:	6803      	ldr	r3, [r0, #0]
 8003cbe:	6a1b      	ldr	r3, [r3, #32]
 8003cc0:	4798      	blx	r3
 8003cc2:	280f      	cmp	r0, #15
 8003cc4:	d803      	bhi.n	8003cce <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8003cc6:	4b43      	ldr	r3, [pc, #268]	; (8003dd4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8003cc8:	4a40      	ldr	r2, [pc, #256]	; (8003dcc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003cca:	21a4      	movs	r1, #164	; 0xa4
 8003ccc:	e7f2      	b.n	8003cb4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003cce:	68e8      	ldr	r0, [r5, #12]
 8003cd0:	6803      	ldr	r3, [r0, #0]
 8003cd2:	6a1b      	ldr	r3, [r3, #32]
 8003cd4:	4798      	blx	r3
 8003cd6:	280b      	cmp	r0, #11
 8003cd8:	d803      	bhi.n	8003ce2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8003cda:	4b3f      	ldr	r3, [pc, #252]	; (8003dd8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8003cdc:	4a3b      	ldr	r2, [pc, #236]	; (8003dcc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003cde:	21a5      	movs	r1, #165	; 0xa5
 8003ce0:	e7e8      	b.n	8003cb4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003ce2:	f012 f825 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003ce6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003de0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8003cea:	3004      	adds	r0, #4
 8003cec:	f012 f886 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003cf0:	f8d9 0000 	ldr.w	r0, [r9]
 8003cf4:	b110      	cbz	r0, 8003cfc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003cf6:	6803      	ldr	r3, [r0, #0]
 8003cf8:	68db      	ldr	r3, [r3, #12]
 8003cfa:	4798      	blx	r3
    if (*currentTrans)
 8003cfc:	f8d9 0000 	ldr.w	r0, [r9]
 8003d00:	b110      	cbz	r0, 8003d08 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003d02:	6803      	ldr	r3, [r0, #0]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	4798      	blx	r3
    if (*currentScreen)
 8003d08:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003de4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003d0c:	f8d8 0000 	ldr.w	r0, [r8]
 8003d10:	b110      	cbz	r0, 8003d18 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003d12:	6803      	ldr	r3, [r0, #0]
 8003d14:	695b      	ldr	r3, [r3, #20]
 8003d16:	4798      	blx	r3
    if (*currentPresenter)
 8003d18:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d1c:	b110      	cbz	r0, 8003d24 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003d1e:	6803      	ldr	r3, [r0, #0]
 8003d20:	685b      	ldr	r3, [r3, #4]
 8003d22:	4798      	blx	r3
    if (*currentScreen)
 8003d24:	f8d8 0000 	ldr.w	r0, [r8]
 8003d28:	b110      	cbz	r0, 8003d30 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003d2a:	6803      	ldr	r3, [r0, #0]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	4798      	blx	r3
    if (*currentPresenter)
 8003d30:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d34:	b110      	cbz	r0, 8003d3c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003d36:	6803      	ldr	r3, [r0, #0]
 8003d38:	689b      	ldr	r3, [r3, #8]
 8003d3a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d3c:	68e8      	ldr	r0, [r5, #12]
 8003d3e:	6803      	ldr	r3, [r0, #0]
 8003d40:	2100      	movs	r1, #0
 8003d42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d44:	4798      	blx	r3
 8003d46:	f04f 0b00 	mov.w	fp, #0
 8003d4a:	4b24      	ldr	r3, [pc, #144]	; (8003ddc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003d4c:	6003      	str	r3, [r0, #0]
 8003d4e:	4604      	mov	r4, r0
 8003d50:	f8c0 b004 	str.w	fp, [r0, #4]
 8003d54:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d58:	68a8      	ldr	r0, [r5, #8]
 8003d5a:	6803      	ldr	r3, [r0, #0]
 8003d5c:	4659      	mov	r1, fp
 8003d5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d60:	4798      	blx	r3
 8003d62:	4606      	mov	r6, r0
 8003d64:	f004 fa2c 	bl	80081c0 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003d68:	6868      	ldr	r0, [r5, #4]
 8003d6a:	6803      	ldr	r3, [r0, #0]
 8003d6c:	4659      	mov	r1, fp
 8003d6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d70:	4798      	blx	r3
 8003d72:	4631      	mov	r1, r6
 8003d74:	4605      	mov	r5, r0
 8003d76:	f004 f9fd 	bl	8008174 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003d7a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003d7e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003d82:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003d86:	b1e5      	cbz	r5, 8003dc2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8003d88:	1d2b      	adds	r3, r5, #4
 8003d8a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003d8e:	6833      	ldr	r3, [r6, #0]
 8003d90:	f8c5 a008 	str.w	sl, [r5, #8]
 8003d94:	4630      	mov	r0, r6
 8003d96:	68db      	ldr	r3, [r3, #12]
 8003d98:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003d9a:	4798      	blx	r3
    newPresenter->activate();
 8003d9c:	682b      	ldr	r3, [r5, #0]
 8003d9e:	4628      	mov	r0, r5
 8003da0:	681b      	ldr	r3, [r3, #0]
 8003da2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003da4:	4621      	mov	r1, r4
 8003da6:	4630      	mov	r0, r6
 8003da8:	f013 fdee 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003dac:	6823      	ldr	r3, [r4, #0]
 8003dae:	4620      	mov	r0, r4
 8003db0:	691b      	ldr	r3, [r3, #16]
 8003db2:	4798      	blx	r3
    newTransition->invalidate();
 8003db4:	6823      	ldr	r3, [r4, #0]
 8003db6:	695b      	ldr	r3, [r3, #20]
 8003db8:	4620      	mov	r0, r4
}
 8003dba:	b001      	add	sp, #4
 8003dbc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003dc0:	4718      	bx	r3
    model->bind(newPresenter);
 8003dc2:	462b      	mov	r3, r5
 8003dc4:	e7e1      	b.n	8003d8a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8003dc6:	bf00      	nop
 8003dc8:	0802c7cc 	.word	0x0802c7cc
 8003dcc:	0802caf5 	.word	0x0802caf5
 8003dd0:	0802c968 	.word	0x0802c968
 8003dd4:	0802c9af 	.word	0x0802c9af
 8003dd8:	0802ca52 	.word	0x0802ca52
 8003ddc:	0802db0c 	.word	0x0802db0c
 8003de0:	20013304 	.word	0x20013304
 8003de4:	20013300 	.word	0x20013300

08003de8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003de8:	4b04      	ldr	r3, [pc, #16]	; (8003dfc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8003df0:	b10a      	cbz	r2, 8003df6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8003df2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003df4:	b900      	cbnz	r0, 8003df8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8003df6:	6898      	ldr	r0, [r3, #8]
    }
 8003df8:	4770      	bx	lr
 8003dfa:	bf00      	nop
 8003dfc:	200132bc 	.word	0x200132bc

08003e00 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003e02:	4604      	mov	r4, r0
 8003e04:	4617      	mov	r7, r2
 8003e06:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003e08:	f012 f8c6 	bl	8015f98 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003e0c:	4b10      	ldr	r3, [pc, #64]	; (8003e50 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8003e0e:	601c      	str	r4, [r3, #0]
      model(m)
 8003e10:	4b10      	ldr	r3, [pc, #64]	; (8003e54 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8003e12:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003e14:	4b10      	ldr	r3, [pc, #64]	; (8003e58 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8003e16:	2500      	movs	r5, #0
 8003e18:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003e1c:	4b0f      	ldr	r3, [pc, #60]	; (8003e5c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003e1e:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8003e22:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003e24:	6803      	ldr	r3, [r0, #0]
 8003e26:	2101      	movs	r1, #1
 8003e28:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003e2a:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8003e2e:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003e32:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003e34:	4628      	mov	r0, r5
 8003e36:	f004 f823 	bl	8007e80 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003e3a:	f7ff ffd5 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 8003e3e:	f01b fcae 	bl	801f79e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003e42:	f7ff ffd1 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 8003e46:	f01b fd25 	bl	801f894 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003e4a:	4620      	mov	r0, r4
 8003e4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003e4e:	bf00      	nop
 8003e50:	20013310 	.word	0x20013310
 8003e54:	0802dab8 	.word	0x0802dab8
 8003e58:	0802daa0 	.word	0x0802daa0
 8003e5c:	200132bc 	.word	0x200132bc

08003e60 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003e60:	4b06      	ldr	r3, [pc, #24]	; (8003e7c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8003e62:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e66:	2300      	movs	r3, #0
 8003e68:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e6c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e70:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e74:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e78:	4770      	bx	lr
 8003e7a:	bf00      	nop
 8003e7c:	08003c95 	.word	0x08003c95

08003e80 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8003e80:	4b06      	ldr	r3, [pc, #24]	; (8003e9c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8003e82:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e86:	2300      	movs	r3, #0
 8003e88:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e8c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e90:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e94:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e98:	4770      	bx	lr
 8003e9a:	bf00      	nop
 8003e9c:	08004305 	.word	0x08004305

08003ea0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003ea0:	4b06      	ldr	r3, [pc, #24]	; (8003ebc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8003ea2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003ea6:	2300      	movs	r3, #0
 8003ea8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003eac:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003eb0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003eb4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003eb8:	4770      	bx	lr
 8003eba:	bf00      	nop
 8003ebc:	08004ea9 	.word	0x08004ea9

08003ec0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8003ec0:	4b06      	ldr	r3, [pc, #24]	; (8003edc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8003ec2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003ec6:	2300      	movs	r3, #0
 8003ec8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ecc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ed0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ed4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003ed8:	4770      	bx	lr
 8003eda:	bf00      	nop
 8003edc:	080041c5 	.word	0x080041c5

08003ee0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8003ee0:	4b06      	ldr	r3, [pc, #24]	; (8003efc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8003ee2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003ee6:	2300      	movs	r3, #0
 8003ee8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003eec:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ef0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ef4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003ef8:	4770      	bx	lr
 8003efa:	bf00      	nop
 8003efc:	08004d69 	.word	0x08004d69

08003f00 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8003f00:	4b06      	ldr	r3, [pc, #24]	; (8003f1c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8003f02:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f06:	2300      	movs	r3, #0
 8003f08:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f0c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f10:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f14:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f18:	4770      	bx	lr
 8003f1a:	bf00      	nop
 8003f1c:	08004c29 	.word	0x08004c29

08003f20 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003f20:	4b06      	ldr	r3, [pc, #24]	; (8003f3c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8003f22:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f26:	2300      	movs	r3, #0
 8003f28:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f2c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f30:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f34:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f38:	4770      	bx	lr
 8003f3a:	bf00      	nop
 8003f3c:	08004ae9 	.word	0x08004ae9

08003f40 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003f40:	4b06      	ldr	r3, [pc, #24]	; (8003f5c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8003f42:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f46:	2300      	movs	r3, #0
 8003f48:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f4c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f50:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f54:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f58:	4770      	bx	lr
 8003f5a:	bf00      	nop
 8003f5c:	080049a9 	.word	0x080049a9

08003f60 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003f60:	4b06      	ldr	r3, [pc, #24]	; (8003f7c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003f62:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f66:	2300      	movs	r3, #0
 8003f68:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f6c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f70:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f74:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f78:	4770      	bx	lr
 8003f7a:	bf00      	nop
 8003f7c:	08004085 	.word	0x08004085

08003f80 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003f80:	4b06      	ldr	r3, [pc, #24]	; (8003f9c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003f82:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f86:	2300      	movs	r3, #0
 8003f88:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f8c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f90:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f94:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f98:	4770      	bx	lr
 8003f9a:	bf00      	nop
 8003f9c:	08004869 	.word	0x08004869

08003fa0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003fa0:	4b06      	ldr	r3, [pc, #24]	; (8003fbc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003fa2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003fa6:	2300      	movs	r3, #0
 8003fa8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003fac:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003fb0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003fb4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003fb8:	4770      	bx	lr
 8003fba:	bf00      	nop
 8003fbc:	08004729 	.word	0x08004729

08003fc0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8003fc0:	4b06      	ldr	r3, [pc, #24]	; (8003fdc <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8003fc2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003fc6:	2300      	movs	r3, #0
 8003fc8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003fcc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003fd0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003fd4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003fd8:	4770      	bx	lr
 8003fda:	bf00      	nop
 8003fdc:	080045e9 	.word	0x080045e9

08003fe0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003fe0:	4b06      	ldr	r3, [pc, #24]	; (8003ffc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003fe2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003fe6:	2300      	movs	r3, #0
 8003fe8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003fec:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ff0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ff4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003ff8:	4770      	bx	lr
 8003ffa:	bf00      	nop
 8003ffc:	080044a9 	.word	0x080044a9

08004000 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004000:	4b06      	ldr	r3, [pc, #24]	; (800401c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004002:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004006:	2300      	movs	r3, #0
 8004008:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800400c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004010:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004014:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004018:	4770      	bx	lr
 800401a:	bf00      	nop
 800401c:	08003aa5 	.word	0x08003aa5

08004020 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004020:	6803      	ldr	r3, [r0, #0]
 8004022:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004024:	4718      	bx	r3
	...

08004028 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004028:	4b12      	ldr	r3, [pc, #72]	; (8004074 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800402a:	b513      	push	{r0, r1, r4, lr}
          solid()
 800402c:	6003      	str	r3, [r0, #0]
 800402e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004032:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004034:	4b10      	ldr	r3, [pc, #64]	; (8004078 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004036:	7241      	strb	r1, [r0, #9]
 8004038:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800403a:	4910      	ldr	r1, [pc, #64]	; (800407c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 800403c:	4b10      	ldr	r3, [pc, #64]	; (8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800403e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004042:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004046:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004048:	2200      	movs	r2, #0
 800404a:	6042      	str	r2, [r0, #4]
 800404c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800404e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004050:	81c2      	strh	r2, [r0, #14]
          solid()
 8004052:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004056:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800405a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800405e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004062:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004064:	9100      	str	r1, [sp, #0]
 8004066:	3010      	adds	r0, #16
 8004068:	4611      	mov	r1, r2
 800406a:	f7fe fc82 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800406e:	4620      	mov	r0, r4
 8004070:	b002      	add	sp, #8
 8004072:	bd10      	pop	{r4, pc}
 8004074:	0802db54 	.word	0x0802db54
 8004078:	0802da38 	.word	0x0802da38
 800407c:	200132b2 	.word	0x200132b2
 8004080:	200132b0 	.word	0x200132b0

08004084 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004084:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004088:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800408c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800408e:	68a0      	ldr	r0, [r4, #8]
 8004090:	6803      	ldr	r3, [r0, #0]
 8004092:	6a1b      	ldr	r3, [r3, #32]
 8004094:	4798      	blx	r3
 8004096:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800409a:	d205      	bcs.n	80040a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 800409c:	4b42      	ldr	r3, [pc, #264]	; (80041a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 800409e:	4a43      	ldr	r2, [pc, #268]	; (80041ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80040a0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80040a2:	4843      	ldr	r0, [pc, #268]	; (80041b0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 80040a4:	f026 fd0c 	bl	802aac0 <__assert_func>
 80040a8:	6860      	ldr	r0, [r4, #4]
 80040aa:	6803      	ldr	r3, [r0, #0]
 80040ac:	6a1b      	ldr	r3, [r3, #32]
 80040ae:	4798      	blx	r3
 80040b0:	280f      	cmp	r0, #15
 80040b2:	d803      	bhi.n	80040bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 80040b4:	4b3f      	ldr	r3, [pc, #252]	; (80041b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 80040b6:	4a3d      	ldr	r2, [pc, #244]	; (80041ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80040b8:	21a4      	movs	r1, #164	; 0xa4
 80040ba:	e7f2      	b.n	80040a2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80040bc:	68e0      	ldr	r0, [r4, #12]
 80040be:	6803      	ldr	r3, [r0, #0]
 80040c0:	6a1b      	ldr	r3, [r3, #32]
 80040c2:	4798      	blx	r3
 80040c4:	2837      	cmp	r0, #55	; 0x37
 80040c6:	d803      	bhi.n	80040d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 80040c8:	4b3b      	ldr	r3, [pc, #236]	; (80041b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 80040ca:	4a38      	ldr	r2, [pc, #224]	; (80041ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80040cc:	21a5      	movs	r1, #165	; 0xa5
 80040ce:	e7e8      	b.n	80040a2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80040d0:	f011 fe2e 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80040d4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80041bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 80040d8:	3004      	adds	r0, #4
 80040da:	f011 fe8f 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80040de:	f8d9 0000 	ldr.w	r0, [r9]
 80040e2:	b110      	cbz	r0, 80040ea <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80040e4:	6803      	ldr	r3, [r0, #0]
 80040e6:	68db      	ldr	r3, [r3, #12]
 80040e8:	4798      	blx	r3
    if (*currentTrans)
 80040ea:	f8d9 0000 	ldr.w	r0, [r9]
 80040ee:	b110      	cbz	r0, 80040f6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80040f0:	6803      	ldr	r3, [r0, #0]
 80040f2:	681b      	ldr	r3, [r3, #0]
 80040f4:	4798      	blx	r3
    if (*currentScreen)
 80040f6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80041c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 80040fa:	f8d8 0000 	ldr.w	r0, [r8]
 80040fe:	b110      	cbz	r0, 8004106 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004100:	6803      	ldr	r3, [r0, #0]
 8004102:	695b      	ldr	r3, [r3, #20]
 8004104:	4798      	blx	r3
    if (*currentPresenter)
 8004106:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800410a:	b110      	cbz	r0, 8004112 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800410c:	6803      	ldr	r3, [r0, #0]
 800410e:	685b      	ldr	r3, [r3, #4]
 8004110:	4798      	blx	r3
    if (*currentScreen)
 8004112:	f8d8 0000 	ldr.w	r0, [r8]
 8004116:	b110      	cbz	r0, 800411e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004118:	6803      	ldr	r3, [r0, #0]
 800411a:	681b      	ldr	r3, [r3, #0]
 800411c:	4798      	blx	r3
    if (*currentPresenter)
 800411e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004122:	b110      	cbz	r0, 800412a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004124:	6803      	ldr	r3, [r0, #0]
 8004126:	689b      	ldr	r3, [r3, #8]
 8004128:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800412a:	68e0      	ldr	r0, [r4, #12]
 800412c:	2100      	movs	r1, #0
 800412e:	f7ff ff77 	bl	8004020 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004132:	2114      	movs	r1, #20
 8004134:	4605      	mov	r5, r0
 8004136:	f7ff ff77 	bl	8004028 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800413a:	68a0      	ldr	r0, [r4, #8]
 800413c:	6803      	ldr	r3, [r0, #0]
 800413e:	2100      	movs	r1, #0
 8004140:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004142:	4798      	blx	r3
 8004144:	4606      	mov	r6, r0
 8004146:	f004 f8fb 	bl	8008340 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800414a:	6860      	ldr	r0, [r4, #4]
 800414c:	6803      	ldr	r3, [r0, #0]
 800414e:	2100      	movs	r1, #0
 8004150:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004152:	4798      	blx	r3
 8004154:	4631      	mov	r1, r6
 8004156:	4604      	mov	r4, r0
 8004158:	f004 f8cc 	bl	80082f4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800415c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004160:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004164:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004168:	b1dc      	cbz	r4, 80041a2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 800416a:	1d23      	adds	r3, r4, #4
 800416c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004170:	6833      	ldr	r3, [r6, #0]
 8004172:	f8c4 a008 	str.w	sl, [r4, #8]
 8004176:	4630      	mov	r0, r6
 8004178:	68db      	ldr	r3, [r3, #12]
 800417a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800417c:	4798      	blx	r3
    newPresenter->activate();
 800417e:	6823      	ldr	r3, [r4, #0]
 8004180:	4620      	mov	r0, r4
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004186:	4629      	mov	r1, r5
 8004188:	4630      	mov	r0, r6
 800418a:	f013 fbfd 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800418e:	682b      	ldr	r3, [r5, #0]
 8004190:	4628      	mov	r0, r5
 8004192:	691b      	ldr	r3, [r3, #16]
 8004194:	4798      	blx	r3
    newTransition->invalidate();
 8004196:	682b      	ldr	r3, [r5, #0]
 8004198:	4628      	mov	r0, r5
 800419a:	695b      	ldr	r3, [r3, #20]
}
 800419c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80041a0:	4718      	bx	r3
    model->bind(newPresenter);
 80041a2:	4623      	mov	r3, r4
 80041a4:	e7e2      	b.n	800416c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 80041a6:	bf00      	nop
 80041a8:	0802c7cc 	.word	0x0802c7cc
 80041ac:	0802cbfd 	.word	0x0802cbfd
 80041b0:	0802c968 	.word	0x0802c968
 80041b4:	0802c9af 	.word	0x0802c9af
 80041b8:	0802ca52 	.word	0x0802ca52
 80041bc:	20013304 	.word	0x20013304
 80041c0:	20013300 	.word	0x20013300

080041c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80041c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80041c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80041cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80041ce:	68a0      	ldr	r0, [r4, #8]
 80041d0:	6803      	ldr	r3, [r0, #0]
 80041d2:	6a1b      	ldr	r3, [r3, #32]
 80041d4:	4798      	blx	r3
 80041d6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80041da:	d205      	bcs.n	80041e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 80041dc:	4b42      	ldr	r3, [pc, #264]	; (80042e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80041de:	4a43      	ldr	r2, [pc, #268]	; (80042ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80041e0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80041e2:	4843      	ldr	r0, [pc, #268]	; (80042f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80041e4:	f026 fc6c 	bl	802aac0 <__assert_func>
 80041e8:	6860      	ldr	r0, [r4, #4]
 80041ea:	6803      	ldr	r3, [r0, #0]
 80041ec:	6a1b      	ldr	r3, [r3, #32]
 80041ee:	4798      	blx	r3
 80041f0:	280f      	cmp	r0, #15
 80041f2:	d803      	bhi.n	80041fc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 80041f4:	4b3f      	ldr	r3, [pc, #252]	; (80042f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80041f6:	4a3d      	ldr	r2, [pc, #244]	; (80042ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80041f8:	21a4      	movs	r1, #164	; 0xa4
 80041fa:	e7f2      	b.n	80041e2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80041fc:	68e0      	ldr	r0, [r4, #12]
 80041fe:	6803      	ldr	r3, [r0, #0]
 8004200:	6a1b      	ldr	r3, [r3, #32]
 8004202:	4798      	blx	r3
 8004204:	2837      	cmp	r0, #55	; 0x37
 8004206:	d803      	bhi.n	8004210 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004208:	4b3b      	ldr	r3, [pc, #236]	; (80042f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 800420a:	4a38      	ldr	r2, [pc, #224]	; (80042ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 800420c:	21a5      	movs	r1, #165	; 0xa5
 800420e:	e7e8      	b.n	80041e2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004210:	f011 fd8e 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004214:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80042fc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004218:	3004      	adds	r0, #4
 800421a:	f011 fdef 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800421e:	f8d9 0000 	ldr.w	r0, [r9]
 8004222:	b110      	cbz	r0, 800422a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004224:	6803      	ldr	r3, [r0, #0]
 8004226:	68db      	ldr	r3, [r3, #12]
 8004228:	4798      	blx	r3
    if (*currentTrans)
 800422a:	f8d9 0000 	ldr.w	r0, [r9]
 800422e:	b110      	cbz	r0, 8004236 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004230:	6803      	ldr	r3, [r0, #0]
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	4798      	blx	r3
    if (*currentScreen)
 8004236:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004300 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 800423a:	f8d8 0000 	ldr.w	r0, [r8]
 800423e:	b110      	cbz	r0, 8004246 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004240:	6803      	ldr	r3, [r0, #0]
 8004242:	695b      	ldr	r3, [r3, #20]
 8004244:	4798      	blx	r3
    if (*currentPresenter)
 8004246:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800424a:	b110      	cbz	r0, 8004252 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800424c:	6803      	ldr	r3, [r0, #0]
 800424e:	685b      	ldr	r3, [r3, #4]
 8004250:	4798      	blx	r3
    if (*currentScreen)
 8004252:	f8d8 0000 	ldr.w	r0, [r8]
 8004256:	b110      	cbz	r0, 800425e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004258:	6803      	ldr	r3, [r0, #0]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	4798      	blx	r3
    if (*currentPresenter)
 800425e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004262:	b110      	cbz	r0, 800426a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004264:	6803      	ldr	r3, [r0, #0]
 8004266:	689b      	ldr	r3, [r3, #8]
 8004268:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800426a:	68e0      	ldr	r0, [r4, #12]
 800426c:	2100      	movs	r1, #0
 800426e:	f7ff fed7 	bl	8004020 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004272:	2114      	movs	r1, #20
 8004274:	4605      	mov	r5, r0
 8004276:	f7ff fed7 	bl	8004028 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800427a:	68a0      	ldr	r0, [r4, #8]
 800427c:	6803      	ldr	r3, [r0, #0]
 800427e:	2100      	movs	r1, #0
 8004280:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004282:	4798      	blx	r3
 8004284:	4606      	mov	r6, r0
 8004286:	f003 fffb 	bl	8008280 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800428a:	6860      	ldr	r0, [r4, #4]
 800428c:	6803      	ldr	r3, [r0, #0]
 800428e:	2100      	movs	r1, #0
 8004290:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004292:	4798      	blx	r3
 8004294:	4631      	mov	r1, r6
 8004296:	4604      	mov	r4, r0
 8004298:	f003 ffcc 	bl	8008234 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 800429c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80042a0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80042a4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80042a8:	b1dc      	cbz	r4, 80042e2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 80042aa:	1d23      	adds	r3, r4, #4
 80042ac:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80042b0:	6833      	ldr	r3, [r6, #0]
 80042b2:	f8c4 a008 	str.w	sl, [r4, #8]
 80042b6:	4630      	mov	r0, r6
 80042b8:	68db      	ldr	r3, [r3, #12]
 80042ba:	63f4      	str	r4, [r6, #60]	; 0x3c
 80042bc:	4798      	blx	r3
    newPresenter->activate();
 80042be:	6823      	ldr	r3, [r4, #0]
 80042c0:	4620      	mov	r0, r4
 80042c2:	681b      	ldr	r3, [r3, #0]
 80042c4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80042c6:	4629      	mov	r1, r5
 80042c8:	4630      	mov	r0, r6
 80042ca:	f013 fb5d 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80042ce:	682b      	ldr	r3, [r5, #0]
 80042d0:	4628      	mov	r0, r5
 80042d2:	691b      	ldr	r3, [r3, #16]
 80042d4:	4798      	blx	r3
    newTransition->invalidate();
 80042d6:	682b      	ldr	r3, [r5, #0]
 80042d8:	4628      	mov	r0, r5
 80042da:	695b      	ldr	r3, [r3, #20]
}
 80042dc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80042e0:	4718      	bx	r3
    model->bind(newPresenter);
 80042e2:	4623      	mov	r3, r4
 80042e4:	e7e2      	b.n	80042ac <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 80042e6:	bf00      	nop
 80042e8:	0802c7cc 	.word	0x0802c7cc
 80042ec:	0802cd2d 	.word	0x0802cd2d
 80042f0:	0802c968 	.word	0x0802c968
 80042f4:	0802c9af 	.word	0x0802c9af
 80042f8:	0802ca52 	.word	0x0802ca52
 80042fc:	20013304 	.word	0x20013304
 8004300:	20013300 	.word	0x20013300

08004304 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004304:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004308:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800430c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800430e:	68a0      	ldr	r0, [r4, #8]
 8004310:	6803      	ldr	r3, [r0, #0]
 8004312:	6a1b      	ldr	r3, [r3, #32]
 8004314:	4798      	blx	r3
 8004316:	f241 137b 	movw	r3, #4475	; 0x117b
 800431a:	4298      	cmp	r0, r3
 800431c:	d805      	bhi.n	800432a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 800431e:	4b42      	ldr	r3, [pc, #264]	; (8004428 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004320:	4a42      	ldr	r2, [pc, #264]	; (800442c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004322:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004324:	4842      	ldr	r0, [pc, #264]	; (8004430 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004326:	f026 fbcb 	bl	802aac0 <__assert_func>
 800432a:	6860      	ldr	r0, [r4, #4]
 800432c:	6803      	ldr	r3, [r0, #0]
 800432e:	6a1b      	ldr	r3, [r3, #32]
 8004330:	4798      	blx	r3
 8004332:	280f      	cmp	r0, #15
 8004334:	d803      	bhi.n	800433e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004336:	4b3f      	ldr	r3, [pc, #252]	; (8004434 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004338:	4a3c      	ldr	r2, [pc, #240]	; (800442c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800433a:	21a4      	movs	r1, #164	; 0xa4
 800433c:	e7f2      	b.n	8004324 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800433e:	68e0      	ldr	r0, [r4, #12]
 8004340:	6803      	ldr	r3, [r0, #0]
 8004342:	6a1b      	ldr	r3, [r3, #32]
 8004344:	4798      	blx	r3
 8004346:	2837      	cmp	r0, #55	; 0x37
 8004348:	d803      	bhi.n	8004352 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 800434a:	4b3b      	ldr	r3, [pc, #236]	; (8004438 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 800434c:	4a37      	ldr	r2, [pc, #220]	; (800442c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800434e:	21a5      	movs	r1, #165	; 0xa5
 8004350:	e7e8      	b.n	8004324 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004352:	f011 fced 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004356:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800443c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 800435a:	3004      	adds	r0, #4
 800435c:	f011 fd4e 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004360:	f8d9 0000 	ldr.w	r0, [r9]
 8004364:	b110      	cbz	r0, 800436c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004366:	6803      	ldr	r3, [r0, #0]
 8004368:	68db      	ldr	r3, [r3, #12]
 800436a:	4798      	blx	r3
    if (*currentTrans)
 800436c:	f8d9 0000 	ldr.w	r0, [r9]
 8004370:	b110      	cbz	r0, 8004378 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004372:	6803      	ldr	r3, [r0, #0]
 8004374:	681b      	ldr	r3, [r3, #0]
 8004376:	4798      	blx	r3
    if (*currentScreen)
 8004378:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004440 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 800437c:	f8d8 0000 	ldr.w	r0, [r8]
 8004380:	b110      	cbz	r0, 8004388 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004382:	6803      	ldr	r3, [r0, #0]
 8004384:	695b      	ldr	r3, [r3, #20]
 8004386:	4798      	blx	r3
    if (*currentPresenter)
 8004388:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800438c:	b110      	cbz	r0, 8004394 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 800438e:	6803      	ldr	r3, [r0, #0]
 8004390:	685b      	ldr	r3, [r3, #4]
 8004392:	4798      	blx	r3
    if (*currentScreen)
 8004394:	f8d8 0000 	ldr.w	r0, [r8]
 8004398:	b110      	cbz	r0, 80043a0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800439a:	6803      	ldr	r3, [r0, #0]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	4798      	blx	r3
    if (*currentPresenter)
 80043a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80043a4:	b110      	cbz	r0, 80043ac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80043a6:	6803      	ldr	r3, [r0, #0]
 80043a8:	689b      	ldr	r3, [r3, #8]
 80043aa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80043ac:	68e0      	ldr	r0, [r4, #12]
 80043ae:	2100      	movs	r1, #0
 80043b0:	f7ff fe36 	bl	8004020 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80043b4:	2114      	movs	r1, #20
 80043b6:	4605      	mov	r5, r0
 80043b8:	f7ff fe36 	bl	8004028 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80043bc:	68a0      	ldr	r0, [r4, #8]
 80043be:	6803      	ldr	r3, [r0, #0]
 80043c0:	2100      	movs	r1, #0
 80043c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043c4:	4798      	blx	r3
 80043c6:	4606      	mov	r6, r0
 80043c8:	f003 fefa 	bl	80081c0 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80043cc:	6860      	ldr	r0, [r4, #4]
 80043ce:	6803      	ldr	r3, [r0, #0]
 80043d0:	2100      	movs	r1, #0
 80043d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043d4:	4798      	blx	r3
 80043d6:	4631      	mov	r1, r6
 80043d8:	4604      	mov	r4, r0
 80043da:	f003 fecb 	bl	8008174 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80043de:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80043e2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80043e6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80043ea:	b1dc      	cbz	r4, 8004424 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 80043ec:	1d23      	adds	r3, r4, #4
 80043ee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80043f2:	6833      	ldr	r3, [r6, #0]
 80043f4:	f8c4 a008 	str.w	sl, [r4, #8]
 80043f8:	4630      	mov	r0, r6
 80043fa:	68db      	ldr	r3, [r3, #12]
 80043fc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80043fe:	4798      	blx	r3
    newPresenter->activate();
 8004400:	6823      	ldr	r3, [r4, #0]
 8004402:	4620      	mov	r0, r4
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004408:	4629      	mov	r1, r5
 800440a:	4630      	mov	r0, r6
 800440c:	f013 fabc 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004410:	682b      	ldr	r3, [r5, #0]
 8004412:	4628      	mov	r0, r5
 8004414:	691b      	ldr	r3, [r3, #16]
 8004416:	4798      	blx	r3
    newTransition->invalidate();
 8004418:	682b      	ldr	r3, [r5, #0]
 800441a:	4628      	mov	r0, r5
 800441c:	695b      	ldr	r3, [r3, #20]
}
 800441e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004422:	4718      	bx	r3
    model->bind(newPresenter);
 8004424:	4623      	mov	r3, r4
 8004426:	e7e2      	b.n	80043ee <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004428:	0802c7cc 	.word	0x0802c7cc
 800442c:	0802ce4b 	.word	0x0802ce4b
 8004430:	0802c968 	.word	0x0802c968
 8004434:	0802c9af 	.word	0x0802c9af
 8004438:	0802ca52 	.word	0x0802ca52
 800443c:	20013304 	.word	0x20013304
 8004440:	20013300 	.word	0x20013300

08004444 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004444:	6803      	ldr	r3, [r0, #0]
 8004446:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004448:	4718      	bx	r3
	...

0800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 800444c:	4b12      	ldr	r3, [pc, #72]	; (8004498 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800444e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004450:	6003      	str	r3, [r0, #0]
 8004452:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004456:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004458:	4b10      	ldr	r3, [pc, #64]	; (800449c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800445a:	7241      	strb	r1, [r0, #9]
 800445c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800445e:	4910      	ldr	r1, [pc, #64]	; (80044a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004460:	4b10      	ldr	r3, [pc, #64]	; (80044a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004462:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004466:	f9b3 3000 	ldrsh.w	r3, [r3]
 800446a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 800446c:	2200      	movs	r2, #0
 800446e:	6042      	str	r2, [r0, #4]
 8004470:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004472:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004474:	81c2      	strh	r2, [r0, #14]
          solid()
 8004476:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800447a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800447e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004482:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004486:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004488:	9100      	str	r1, [sp, #0]
 800448a:	3010      	adds	r0, #16
 800448c:	4611      	mov	r1, r2
 800448e:	f7fe fa70 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004492:	4620      	mov	r0, r4
 8004494:	b002      	add	sp, #8
 8004496:	bd10      	pop	{r4, pc}
 8004498:	0802db30 	.word	0x0802db30
 800449c:	0802da38 	.word	0x0802da38
 80044a0:	200132b2 	.word	0x200132b2
 80044a4:	200132b0 	.word	0x200132b0

080044a8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 80044a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044ac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80044b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044b2:	68a0      	ldr	r0, [r4, #8]
 80044b4:	6803      	ldr	r3, [r0, #0]
 80044b6:	6a1b      	ldr	r3, [r3, #32]
 80044b8:	4798      	blx	r3
 80044ba:	f241 03af 	movw	r3, #4271	; 0x10af
 80044be:	4298      	cmp	r0, r3
 80044c0:	d805      	bhi.n	80044ce <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 80044c2:	4b42      	ldr	r3, [pc, #264]	; (80045cc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 80044c4:	4a42      	ldr	r2, [pc, #264]	; (80045d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80044c6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044c8:	4842      	ldr	r0, [pc, #264]	; (80045d4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 80044ca:	f026 faf9 	bl	802aac0 <__assert_func>
 80044ce:	6860      	ldr	r0, [r4, #4]
 80044d0:	6803      	ldr	r3, [r0, #0]
 80044d2:	6a1b      	ldr	r3, [r3, #32]
 80044d4:	4798      	blx	r3
 80044d6:	280f      	cmp	r0, #15
 80044d8:	d803      	bhi.n	80044e2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 80044da:	4b3f      	ldr	r3, [pc, #252]	; (80045d8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 80044dc:	4a3c      	ldr	r2, [pc, #240]	; (80045d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80044de:	21a4      	movs	r1, #164	; 0xa4
 80044e0:	e7f2      	b.n	80044c8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80044e2:	68e0      	ldr	r0, [r4, #12]
 80044e4:	6803      	ldr	r3, [r0, #0]
 80044e6:	6a1b      	ldr	r3, [r3, #32]
 80044e8:	4798      	blx	r3
 80044ea:	2837      	cmp	r0, #55	; 0x37
 80044ec:	d803      	bhi.n	80044f6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80044ee:	4b3b      	ldr	r3, [pc, #236]	; (80045dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80044f0:	4a37      	ldr	r2, [pc, #220]	; (80045d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80044f2:	21a5      	movs	r1, #165	; 0xa5
 80044f4:	e7e8      	b.n	80044c8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80044f6:	f011 fc1b 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80044fa:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80045e0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 80044fe:	3004      	adds	r0, #4
 8004500:	f011 fc7c 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004504:	f8d9 0000 	ldr.w	r0, [r9]
 8004508:	b110      	cbz	r0, 8004510 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800450a:	6803      	ldr	r3, [r0, #0]
 800450c:	68db      	ldr	r3, [r3, #12]
 800450e:	4798      	blx	r3
    if (*currentTrans)
 8004510:	f8d9 0000 	ldr.w	r0, [r9]
 8004514:	b110      	cbz	r0, 800451c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004516:	6803      	ldr	r3, [r0, #0]
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	4798      	blx	r3
    if (*currentScreen)
 800451c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80045e4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004520:	f8d8 0000 	ldr.w	r0, [r8]
 8004524:	b110      	cbz	r0, 800452c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004526:	6803      	ldr	r3, [r0, #0]
 8004528:	695b      	ldr	r3, [r3, #20]
 800452a:	4798      	blx	r3
    if (*currentPresenter)
 800452c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004530:	b110      	cbz	r0, 8004538 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004532:	6803      	ldr	r3, [r0, #0]
 8004534:	685b      	ldr	r3, [r3, #4]
 8004536:	4798      	blx	r3
    if (*currentScreen)
 8004538:	f8d8 0000 	ldr.w	r0, [r8]
 800453c:	b110      	cbz	r0, 8004544 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800453e:	6803      	ldr	r3, [r0, #0]
 8004540:	681b      	ldr	r3, [r3, #0]
 8004542:	4798      	blx	r3
    if (*currentPresenter)
 8004544:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004548:	b110      	cbz	r0, 8004550 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800454a:	6803      	ldr	r3, [r0, #0]
 800454c:	689b      	ldr	r3, [r3, #8]
 800454e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004550:	68e0      	ldr	r0, [r4, #12]
 8004552:	2100      	movs	r1, #0
 8004554:	f7ff ff76 	bl	8004444 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004558:	2114      	movs	r1, #20
 800455a:	4605      	mov	r5, r0
 800455c:	f7ff ff76 	bl	800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004560:	68a0      	ldr	r0, [r4, #8]
 8004562:	6803      	ldr	r3, [r0, #0]
 8004564:	2100      	movs	r1, #0
 8004566:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004568:	4798      	blx	r3
 800456a:	4606      	mov	r6, r0
 800456c:	f004 f92c 	bl	80087c8 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004570:	6860      	ldr	r0, [r4, #4]
 8004572:	6803      	ldr	r3, [r0, #0]
 8004574:	2100      	movs	r1, #0
 8004576:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004578:	4798      	blx	r3
 800457a:	4631      	mov	r1, r6
 800457c:	4604      	mov	r4, r0
 800457e:	f004 f8fd 	bl	800877c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004582:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004586:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800458a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800458e:	b1dc      	cbz	r4, 80045c8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004590:	1d23      	adds	r3, r4, #4
 8004592:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004596:	6833      	ldr	r3, [r6, #0]
 8004598:	f8c4 a008 	str.w	sl, [r4, #8]
 800459c:	4630      	mov	r0, r6
 800459e:	68db      	ldr	r3, [r3, #12]
 80045a0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80045a2:	4798      	blx	r3
    newPresenter->activate();
 80045a4:	6823      	ldr	r3, [r4, #0]
 80045a6:	4620      	mov	r0, r4
 80045a8:	681b      	ldr	r3, [r3, #0]
 80045aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045ac:	4629      	mov	r1, r5
 80045ae:	4630      	mov	r0, r6
 80045b0:	f013 f9ea 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045b4:	682b      	ldr	r3, [r5, #0]
 80045b6:	4628      	mov	r0, r5
 80045b8:	691b      	ldr	r3, [r3, #16]
 80045ba:	4798      	blx	r3
    newTransition->invalidate();
 80045bc:	682b      	ldr	r3, [r5, #0]
 80045be:	4628      	mov	r0, r5
 80045c0:	695b      	ldr	r3, [r3, #20]
}
 80045c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80045c6:	4718      	bx	r3
    model->bind(newPresenter);
 80045c8:	4623      	mov	r3, r4
 80045ca:	e7e2      	b.n	8004592 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80045cc:	0802c7cc 	.word	0x0802c7cc
 80045d0:	0802cf65 	.word	0x0802cf65
 80045d4:	0802c968 	.word	0x0802c968
 80045d8:	0802c9af 	.word	0x0802c9af
 80045dc:	0802ca52 	.word	0x0802ca52
 80045e0:	20013304 	.word	0x20013304
 80045e4:	20013300 	.word	0x20013300

080045e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80045e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80045ec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80045f0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80045f2:	68a0      	ldr	r0, [r4, #8]
 80045f4:	6803      	ldr	r3, [r0, #0]
 80045f6:	6a1b      	ldr	r3, [r3, #32]
 80045f8:	4798      	blx	r3
 80045fa:	f241 73cb 	movw	r3, #6091	; 0x17cb
 80045fe:	4298      	cmp	r0, r3
 8004600:	d805      	bhi.n	800460e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8004602:	4b42      	ldr	r3, [pc, #264]	; (800470c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004604:	4a42      	ldr	r2, [pc, #264]	; (8004710 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004606:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004608:	4842      	ldr	r0, [pc, #264]	; (8004714 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 800460a:	f026 fa59 	bl	802aac0 <__assert_func>
 800460e:	6860      	ldr	r0, [r4, #4]
 8004610:	6803      	ldr	r3, [r0, #0]
 8004612:	6a1b      	ldr	r3, [r3, #32]
 8004614:	4798      	blx	r3
 8004616:	280f      	cmp	r0, #15
 8004618:	d803      	bhi.n	8004622 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 800461a:	4b3f      	ldr	r3, [pc, #252]	; (8004718 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 800461c:	4a3c      	ldr	r2, [pc, #240]	; (8004710 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800461e:	21a4      	movs	r1, #164	; 0xa4
 8004620:	e7f2      	b.n	8004608 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004622:	68e0      	ldr	r0, [r4, #12]
 8004624:	6803      	ldr	r3, [r0, #0]
 8004626:	6a1b      	ldr	r3, [r3, #32]
 8004628:	4798      	blx	r3
 800462a:	2837      	cmp	r0, #55	; 0x37
 800462c:	d803      	bhi.n	8004636 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 800462e:	4b3b      	ldr	r3, [pc, #236]	; (800471c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004630:	4a37      	ldr	r2, [pc, #220]	; (8004710 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004632:	21a5      	movs	r1, #165	; 0xa5
 8004634:	e7e8      	b.n	8004608 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004636:	f011 fb7b 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800463a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004720 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 800463e:	3004      	adds	r0, #4
 8004640:	f011 fbdc 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004644:	f8d9 0000 	ldr.w	r0, [r9]
 8004648:	b110      	cbz	r0, 8004650 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800464a:	6803      	ldr	r3, [r0, #0]
 800464c:	68db      	ldr	r3, [r3, #12]
 800464e:	4798      	blx	r3
    if (*currentTrans)
 8004650:	f8d9 0000 	ldr.w	r0, [r9]
 8004654:	b110      	cbz	r0, 800465c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004656:	6803      	ldr	r3, [r0, #0]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	4798      	blx	r3
    if (*currentScreen)
 800465c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004724 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004660:	f8d8 0000 	ldr.w	r0, [r8]
 8004664:	b110      	cbz	r0, 800466c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004666:	6803      	ldr	r3, [r0, #0]
 8004668:	695b      	ldr	r3, [r3, #20]
 800466a:	4798      	blx	r3
    if (*currentPresenter)
 800466c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004670:	b110      	cbz	r0, 8004678 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004672:	6803      	ldr	r3, [r0, #0]
 8004674:	685b      	ldr	r3, [r3, #4]
 8004676:	4798      	blx	r3
    if (*currentScreen)
 8004678:	f8d8 0000 	ldr.w	r0, [r8]
 800467c:	b110      	cbz	r0, 8004684 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800467e:	6803      	ldr	r3, [r0, #0]
 8004680:	681b      	ldr	r3, [r3, #0]
 8004682:	4798      	blx	r3
    if (*currentPresenter)
 8004684:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004688:	b110      	cbz	r0, 8004690 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800468a:	6803      	ldr	r3, [r0, #0]
 800468c:	689b      	ldr	r3, [r3, #8]
 800468e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004690:	68e0      	ldr	r0, [r4, #12]
 8004692:	2100      	movs	r1, #0
 8004694:	f7ff fed6 	bl	8004444 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004698:	2114      	movs	r1, #20
 800469a:	4605      	mov	r5, r0
 800469c:	f7ff fed6 	bl	800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046a0:	68a0      	ldr	r0, [r4, #8]
 80046a2:	6803      	ldr	r3, [r0, #0]
 80046a4:	2100      	movs	r1, #0
 80046a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046a8:	4798      	blx	r3
 80046aa:	4606      	mov	r6, r0
 80046ac:	f003 fc80 	bl	8007fb0 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046b0:	6860      	ldr	r0, [r4, #4]
 80046b2:	6803      	ldr	r3, [r0, #0]
 80046b4:	2100      	movs	r1, #0
 80046b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046b8:	4798      	blx	r3
 80046ba:	4631      	mov	r1, r6
 80046bc:	4604      	mov	r4, r0
 80046be:	f003 fc51 	bl	8007f64 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80046c2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80046c6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046ca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046ce:	b1dc      	cbz	r4, 8004708 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80046d0:	1d23      	adds	r3, r4, #4
 80046d2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046d6:	6833      	ldr	r3, [r6, #0]
 80046d8:	f8c4 a008 	str.w	sl, [r4, #8]
 80046dc:	4630      	mov	r0, r6
 80046de:	68db      	ldr	r3, [r3, #12]
 80046e0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80046e2:	4798      	blx	r3
    newPresenter->activate();
 80046e4:	6823      	ldr	r3, [r4, #0]
 80046e6:	4620      	mov	r0, r4
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80046ec:	4629      	mov	r1, r5
 80046ee:	4630      	mov	r0, r6
 80046f0:	f013 f94a 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80046f4:	682b      	ldr	r3, [r5, #0]
 80046f6:	4628      	mov	r0, r5
 80046f8:	691b      	ldr	r3, [r3, #16]
 80046fa:	4798      	blx	r3
    newTransition->invalidate();
 80046fc:	682b      	ldr	r3, [r5, #0]
 80046fe:	4628      	mov	r0, r5
 8004700:	695b      	ldr	r3, [r3, #20]
}
 8004702:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004706:	4718      	bx	r3
    model->bind(newPresenter);
 8004708:	4623      	mov	r3, r4
 800470a:	e7e2      	b.n	80046d2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 800470c:	0802c7cc 	.word	0x0802c7cc
 8004710:	0802d085 	.word	0x0802d085
 8004714:	0802c968 	.word	0x0802c968
 8004718:	0802c9af 	.word	0x0802c9af
 800471c:	0802ca52 	.word	0x0802ca52
 8004720:	20013304 	.word	0x20013304
 8004724:	20013300 	.word	0x20013300

08004728 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800472c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004730:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004732:	68a0      	ldr	r0, [r4, #8]
 8004734:	6803      	ldr	r3, [r0, #0]
 8004736:	6a1b      	ldr	r3, [r3, #32]
 8004738:	4798      	blx	r3
 800473a:	f241 035b 	movw	r3, #4187	; 0x105b
 800473e:	4298      	cmp	r0, r3
 8004740:	d805      	bhi.n	800474e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8004742:	4b42      	ldr	r3, [pc, #264]	; (800484c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8004744:	4a42      	ldr	r2, [pc, #264]	; (8004850 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004746:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004748:	4842      	ldr	r0, [pc, #264]	; (8004854 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 800474a:	f026 f9b9 	bl	802aac0 <__assert_func>
 800474e:	6860      	ldr	r0, [r4, #4]
 8004750:	6803      	ldr	r3, [r0, #0]
 8004752:	6a1b      	ldr	r3, [r3, #32]
 8004754:	4798      	blx	r3
 8004756:	280f      	cmp	r0, #15
 8004758:	d803      	bhi.n	8004762 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 800475a:	4b3f      	ldr	r3, [pc, #252]	; (8004858 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 800475c:	4a3c      	ldr	r2, [pc, #240]	; (8004850 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800475e:	21a4      	movs	r1, #164	; 0xa4
 8004760:	e7f2      	b.n	8004748 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004762:	68e0      	ldr	r0, [r4, #12]
 8004764:	6803      	ldr	r3, [r0, #0]
 8004766:	6a1b      	ldr	r3, [r3, #32]
 8004768:	4798      	blx	r3
 800476a:	2837      	cmp	r0, #55	; 0x37
 800476c:	d803      	bhi.n	8004776 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 800476e:	4b3b      	ldr	r3, [pc, #236]	; (800485c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8004770:	4a37      	ldr	r2, [pc, #220]	; (8004850 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004772:	21a5      	movs	r1, #165	; 0xa5
 8004774:	e7e8      	b.n	8004748 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004776:	f011 fadb 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800477a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004860 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 800477e:	3004      	adds	r0, #4
 8004780:	f011 fb3c 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004784:	f8d9 0000 	ldr.w	r0, [r9]
 8004788:	b110      	cbz	r0, 8004790 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800478a:	6803      	ldr	r3, [r0, #0]
 800478c:	68db      	ldr	r3, [r3, #12]
 800478e:	4798      	blx	r3
    if (*currentTrans)
 8004790:	f8d9 0000 	ldr.w	r0, [r9]
 8004794:	b110      	cbz	r0, 800479c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004796:	6803      	ldr	r3, [r0, #0]
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	4798      	blx	r3
    if (*currentScreen)
 800479c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004864 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80047a0:	f8d8 0000 	ldr.w	r0, [r8]
 80047a4:	b110      	cbz	r0, 80047ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80047a6:	6803      	ldr	r3, [r0, #0]
 80047a8:	695b      	ldr	r3, [r3, #20]
 80047aa:	4798      	blx	r3
    if (*currentPresenter)
 80047ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047b0:	b110      	cbz	r0, 80047b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80047b2:	6803      	ldr	r3, [r0, #0]
 80047b4:	685b      	ldr	r3, [r3, #4]
 80047b6:	4798      	blx	r3
    if (*currentScreen)
 80047b8:	f8d8 0000 	ldr.w	r0, [r8]
 80047bc:	b110      	cbz	r0, 80047c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80047be:	6803      	ldr	r3, [r0, #0]
 80047c0:	681b      	ldr	r3, [r3, #0]
 80047c2:	4798      	blx	r3
    if (*currentPresenter)
 80047c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047c8:	b110      	cbz	r0, 80047d0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80047ca:	6803      	ldr	r3, [r0, #0]
 80047cc:	689b      	ldr	r3, [r3, #8]
 80047ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80047d0:	68e0      	ldr	r0, [r4, #12]
 80047d2:	2100      	movs	r1, #0
 80047d4:	f7ff fe36 	bl	8004444 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80047d8:	2114      	movs	r1, #20
 80047da:	4605      	mov	r5, r0
 80047dc:	f7ff fe36 	bl	800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047e0:	68a0      	ldr	r0, [r4, #8]
 80047e2:	6803      	ldr	r3, [r0, #0]
 80047e4:	2100      	movs	r1, #0
 80047e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047e8:	4798      	blx	r3
 80047ea:	4606      	mov	r6, r0
 80047ec:	f003 fe44 	bl	8008478 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80047f0:	6860      	ldr	r0, [r4, #4]
 80047f2:	6803      	ldr	r3, [r0, #0]
 80047f4:	2100      	movs	r1, #0
 80047f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047f8:	4798      	blx	r3
 80047fa:	4631      	mov	r1, r6
 80047fc:	4604      	mov	r4, r0
 80047fe:	f003 fe15 	bl	800842c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8004802:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004806:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800480a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800480e:	b1dc      	cbz	r4, 8004848 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8004810:	1d23      	adds	r3, r4, #4
 8004812:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004816:	6833      	ldr	r3, [r6, #0]
 8004818:	f8c4 a008 	str.w	sl, [r4, #8]
 800481c:	4630      	mov	r0, r6
 800481e:	68db      	ldr	r3, [r3, #12]
 8004820:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004822:	4798      	blx	r3
    newPresenter->activate();
 8004824:	6823      	ldr	r3, [r4, #0]
 8004826:	4620      	mov	r0, r4
 8004828:	681b      	ldr	r3, [r3, #0]
 800482a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800482c:	4629      	mov	r1, r5
 800482e:	4630      	mov	r0, r6
 8004830:	f013 f8aa 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004834:	682b      	ldr	r3, [r5, #0]
 8004836:	4628      	mov	r0, r5
 8004838:	691b      	ldr	r3, [r3, #16]
 800483a:	4798      	blx	r3
    newTransition->invalidate();
 800483c:	682b      	ldr	r3, [r5, #0]
 800483e:	4628      	mov	r0, r5
 8004840:	695b      	ldr	r3, [r3, #20]
}
 8004842:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004846:	4718      	bx	r3
    model->bind(newPresenter);
 8004848:	4623      	mov	r3, r4
 800484a:	e7e2      	b.n	8004812 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 800484c:	0802c7cc 	.word	0x0802c7cc
 8004850:	0802d1ab 	.word	0x0802d1ab
 8004854:	0802c968 	.word	0x0802c968
 8004858:	0802c9af 	.word	0x0802c9af
 800485c:	0802ca52 	.word	0x0802ca52
 8004860:	20013304 	.word	0x20013304
 8004864:	20013300 	.word	0x20013300

08004868 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8004868:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800486c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004870:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004872:	68a0      	ldr	r0, [r4, #8]
 8004874:	6803      	ldr	r3, [r0, #0]
 8004876:	6a1b      	ldr	r3, [r3, #32]
 8004878:	4798      	blx	r3
 800487a:	f241 035b 	movw	r3, #4187	; 0x105b
 800487e:	4298      	cmp	r0, r3
 8004880:	d805      	bhi.n	800488e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8004882:	4b42      	ldr	r3, [pc, #264]	; (800498c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8004884:	4a42      	ldr	r2, [pc, #264]	; (8004990 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004886:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004888:	4842      	ldr	r0, [pc, #264]	; (8004994 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 800488a:	f026 f919 	bl	802aac0 <__assert_func>
 800488e:	6860      	ldr	r0, [r4, #4]
 8004890:	6803      	ldr	r3, [r0, #0]
 8004892:	6a1b      	ldr	r3, [r3, #32]
 8004894:	4798      	blx	r3
 8004896:	280f      	cmp	r0, #15
 8004898:	d803      	bhi.n	80048a2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 800489a:	4b3f      	ldr	r3, [pc, #252]	; (8004998 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 800489c:	4a3c      	ldr	r2, [pc, #240]	; (8004990 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800489e:	21a4      	movs	r1, #164	; 0xa4
 80048a0:	e7f2      	b.n	8004888 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048a2:	68e0      	ldr	r0, [r4, #12]
 80048a4:	6803      	ldr	r3, [r0, #0]
 80048a6:	6a1b      	ldr	r3, [r3, #32]
 80048a8:	4798      	blx	r3
 80048aa:	2837      	cmp	r0, #55	; 0x37
 80048ac:	d803      	bhi.n	80048b6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80048ae:	4b3b      	ldr	r3, [pc, #236]	; (800499c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80048b0:	4a37      	ldr	r2, [pc, #220]	; (8004990 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80048b2:	21a5      	movs	r1, #165	; 0xa5
 80048b4:	e7e8      	b.n	8004888 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80048b6:	f011 fa3b 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048ba:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80049a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80048be:	3004      	adds	r0, #4
 80048c0:	f011 fa9c 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80048c4:	f8d9 0000 	ldr.w	r0, [r9]
 80048c8:	b110      	cbz	r0, 80048d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80048ca:	6803      	ldr	r3, [r0, #0]
 80048cc:	68db      	ldr	r3, [r3, #12]
 80048ce:	4798      	blx	r3
    if (*currentTrans)
 80048d0:	f8d9 0000 	ldr.w	r0, [r9]
 80048d4:	b110      	cbz	r0, 80048dc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80048d6:	6803      	ldr	r3, [r0, #0]
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	4798      	blx	r3
    if (*currentScreen)
 80048dc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80049a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80048e0:	f8d8 0000 	ldr.w	r0, [r8]
 80048e4:	b110      	cbz	r0, 80048ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80048e6:	6803      	ldr	r3, [r0, #0]
 80048e8:	695b      	ldr	r3, [r3, #20]
 80048ea:	4798      	blx	r3
    if (*currentPresenter)
 80048ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80048f0:	b110      	cbz	r0, 80048f8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80048f2:	6803      	ldr	r3, [r0, #0]
 80048f4:	685b      	ldr	r3, [r3, #4]
 80048f6:	4798      	blx	r3
    if (*currentScreen)
 80048f8:	f8d8 0000 	ldr.w	r0, [r8]
 80048fc:	b110      	cbz	r0, 8004904 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80048fe:	6803      	ldr	r3, [r0, #0]
 8004900:	681b      	ldr	r3, [r3, #0]
 8004902:	4798      	blx	r3
    if (*currentPresenter)
 8004904:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004908:	b110      	cbz	r0, 8004910 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800490a:	6803      	ldr	r3, [r0, #0]
 800490c:	689b      	ldr	r3, [r3, #8]
 800490e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004910:	68e0      	ldr	r0, [r4, #12]
 8004912:	2100      	movs	r1, #0
 8004914:	f7ff fd96 	bl	8004444 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004918:	2114      	movs	r1, #20
 800491a:	4605      	mov	r5, r0
 800491c:	f7ff fd96 	bl	800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004920:	68a0      	ldr	r0, [r4, #8]
 8004922:	6803      	ldr	r3, [r0, #0]
 8004924:	2100      	movs	r1, #0
 8004926:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004928:	4798      	blx	r3
 800492a:	4606      	mov	r6, r0
 800492c:	f003 fd62 	bl	80083f4 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004930:	6860      	ldr	r0, [r4, #4]
 8004932:	6803      	ldr	r3, [r0, #0]
 8004934:	2100      	movs	r1, #0
 8004936:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004938:	4798      	blx	r3
 800493a:	4631      	mov	r1, r6
 800493c:	4604      	mov	r4, r0
 800493e:	f003 fd33 	bl	80083a8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8004942:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004946:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800494a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800494e:	b1dc      	cbz	r4, 8004988 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8004950:	1d23      	adds	r3, r4, #4
 8004952:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004956:	6833      	ldr	r3, [r6, #0]
 8004958:	f8c4 a008 	str.w	sl, [r4, #8]
 800495c:	4630      	mov	r0, r6
 800495e:	68db      	ldr	r3, [r3, #12]
 8004960:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004962:	4798      	blx	r3
    newPresenter->activate();
 8004964:	6823      	ldr	r3, [r4, #0]
 8004966:	4620      	mov	r0, r4
 8004968:	681b      	ldr	r3, [r3, #0]
 800496a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800496c:	4629      	mov	r1, r5
 800496e:	4630      	mov	r0, r6
 8004970:	f013 f80a 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004974:	682b      	ldr	r3, [r5, #0]
 8004976:	4628      	mov	r0, r5
 8004978:	691b      	ldr	r3, [r3, #16]
 800497a:	4798      	blx	r3
    newTransition->invalidate();
 800497c:	682b      	ldr	r3, [r5, #0]
 800497e:	4628      	mov	r0, r5
 8004980:	695b      	ldr	r3, [r3, #20]
}
 8004982:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004986:	4718      	bx	r3
    model->bind(newPresenter);
 8004988:	4623      	mov	r3, r4
 800498a:	e7e2      	b.n	8004952 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 800498c:	0802c7cc 	.word	0x0802c7cc
 8004990:	0802d2ef 	.word	0x0802d2ef
 8004994:	0802c968 	.word	0x0802c968
 8004998:	0802c9af 	.word	0x0802c9af
 800499c:	0802ca52 	.word	0x0802ca52
 80049a0:	20013304 	.word	0x20013304
 80049a4:	20013300 	.word	0x20013300

080049a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80049a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049ac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80049b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049b2:	68a0      	ldr	r0, [r4, #8]
 80049b4:	6803      	ldr	r3, [r0, #0]
 80049b6:	6a1b      	ldr	r3, [r3, #32]
 80049b8:	4798      	blx	r3
 80049ba:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80049be:	d205      	bcs.n	80049cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80049c0:	4b42      	ldr	r3, [pc, #264]	; (8004acc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80049c2:	4a43      	ldr	r2, [pc, #268]	; (8004ad0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80049c4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80049c6:	4843      	ldr	r0, [pc, #268]	; (8004ad4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80049c8:	f026 f87a 	bl	802aac0 <__assert_func>
 80049cc:	6860      	ldr	r0, [r4, #4]
 80049ce:	6803      	ldr	r3, [r0, #0]
 80049d0:	6a1b      	ldr	r3, [r3, #32]
 80049d2:	4798      	blx	r3
 80049d4:	280f      	cmp	r0, #15
 80049d6:	d803      	bhi.n	80049e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80049d8:	4b3f      	ldr	r3, [pc, #252]	; (8004ad8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80049da:	4a3d      	ldr	r2, [pc, #244]	; (8004ad0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80049dc:	21a4      	movs	r1, #164	; 0xa4
 80049de:	e7f2      	b.n	80049c6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049e0:	68e0      	ldr	r0, [r4, #12]
 80049e2:	6803      	ldr	r3, [r0, #0]
 80049e4:	6a1b      	ldr	r3, [r3, #32]
 80049e6:	4798      	blx	r3
 80049e8:	2837      	cmp	r0, #55	; 0x37
 80049ea:	d803      	bhi.n	80049f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 80049ec:	4b3b      	ldr	r3, [pc, #236]	; (8004adc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80049ee:	4a38      	ldr	r2, [pc, #224]	; (8004ad0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80049f0:	21a5      	movs	r1, #165	; 0xa5
 80049f2:	e7e8      	b.n	80049c6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80049f4:	f011 f99c 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80049f8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ae0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80049fc:	3004      	adds	r0, #4
 80049fe:	f011 f9fd 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a02:	f8d9 0000 	ldr.w	r0, [r9]
 8004a06:	b110      	cbz	r0, 8004a0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004a08:	6803      	ldr	r3, [r0, #0]
 8004a0a:	68db      	ldr	r3, [r3, #12]
 8004a0c:	4798      	blx	r3
    if (*currentTrans)
 8004a0e:	f8d9 0000 	ldr.w	r0, [r9]
 8004a12:	b110      	cbz	r0, 8004a1a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004a14:	6803      	ldr	r3, [r0, #0]
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	4798      	blx	r3
    if (*currentScreen)
 8004a1a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004ae4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8004a1e:	f8d8 0000 	ldr.w	r0, [r8]
 8004a22:	b110      	cbz	r0, 8004a2a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004a24:	6803      	ldr	r3, [r0, #0]
 8004a26:	695b      	ldr	r3, [r3, #20]
 8004a28:	4798      	blx	r3
    if (*currentPresenter)
 8004a2a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a2e:	b110      	cbz	r0, 8004a36 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004a30:	6803      	ldr	r3, [r0, #0]
 8004a32:	685b      	ldr	r3, [r3, #4]
 8004a34:	4798      	blx	r3
    if (*currentScreen)
 8004a36:	f8d8 0000 	ldr.w	r0, [r8]
 8004a3a:	b110      	cbz	r0, 8004a42 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004a3c:	6803      	ldr	r3, [r0, #0]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	4798      	blx	r3
    if (*currentPresenter)
 8004a42:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a46:	b110      	cbz	r0, 8004a4e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004a48:	6803      	ldr	r3, [r0, #0]
 8004a4a:	689b      	ldr	r3, [r3, #8]
 8004a4c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a4e:	68e0      	ldr	r0, [r4, #12]
 8004a50:	2100      	movs	r1, #0
 8004a52:	f7ff fcf7 	bl	8004444 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004a56:	2114      	movs	r1, #20
 8004a58:	4605      	mov	r5, r0
 8004a5a:	f7ff fcf7 	bl	800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a5e:	68a0      	ldr	r0, [r4, #8]
 8004a60:	6803      	ldr	r3, [r0, #0]
 8004a62:	2100      	movs	r1, #0
 8004a64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a66:	4798      	blx	r3
 8004a68:	4606      	mov	r6, r0
 8004a6a:	f003 fc69 	bl	8008340 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a6e:	6860      	ldr	r0, [r4, #4]
 8004a70:	6803      	ldr	r3, [r0, #0]
 8004a72:	2100      	movs	r1, #0
 8004a74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a76:	4798      	blx	r3
 8004a78:	4631      	mov	r1, r6
 8004a7a:	4604      	mov	r4, r0
 8004a7c:	f003 fc3a 	bl	80082f4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004a80:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a84:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a88:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a8c:	b1dc      	cbz	r4, 8004ac6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8004a8e:	1d23      	adds	r3, r4, #4
 8004a90:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a94:	6833      	ldr	r3, [r6, #0]
 8004a96:	f8c4 a008 	str.w	sl, [r4, #8]
 8004a9a:	4630      	mov	r0, r6
 8004a9c:	68db      	ldr	r3, [r3, #12]
 8004a9e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004aa0:	4798      	blx	r3
    newPresenter->activate();
 8004aa2:	6823      	ldr	r3, [r4, #0]
 8004aa4:	4620      	mov	r0, r4
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004aaa:	4629      	mov	r1, r5
 8004aac:	4630      	mov	r0, r6
 8004aae:	f012 ff6b 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ab2:	682b      	ldr	r3, [r5, #0]
 8004ab4:	4628      	mov	r0, r5
 8004ab6:	691b      	ldr	r3, [r3, #16]
 8004ab8:	4798      	blx	r3
    newTransition->invalidate();
 8004aba:	682b      	ldr	r3, [r5, #0]
 8004abc:	4628      	mov	r0, r5
 8004abe:	695b      	ldr	r3, [r3, #20]
}
 8004ac0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ac4:	4718      	bx	r3
    model->bind(newPresenter);
 8004ac6:	4623      	mov	r3, r4
 8004ac8:	e7e2      	b.n	8004a90 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8004aca:	bf00      	nop
 8004acc:	0802c7cc 	.word	0x0802c7cc
 8004ad0:	0802d42f 	.word	0x0802d42f
 8004ad4:	0802c968 	.word	0x0802c968
 8004ad8:	0802c9af 	.word	0x0802c9af
 8004adc:	0802ca52 	.word	0x0802ca52
 8004ae0:	20013304 	.word	0x20013304
 8004ae4:	20013300 	.word	0x20013300

08004ae8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004ae8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004aec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004af0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004af2:	68a0      	ldr	r0, [r4, #8]
 8004af4:	6803      	ldr	r3, [r0, #0]
 8004af6:	6a1b      	ldr	r3, [r3, #32]
 8004af8:	4798      	blx	r3
 8004afa:	f241 035b 	movw	r3, #4187	; 0x105b
 8004afe:	4298      	cmp	r0, r3
 8004b00:	d805      	bhi.n	8004b0e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8004b02:	4b42      	ldr	r3, [pc, #264]	; (8004c0c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004b04:	4a42      	ldr	r2, [pc, #264]	; (8004c10 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004b06:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b08:	4842      	ldr	r0, [pc, #264]	; (8004c14 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004b0a:	f025 ffd9 	bl	802aac0 <__assert_func>
 8004b0e:	6860      	ldr	r0, [r4, #4]
 8004b10:	6803      	ldr	r3, [r0, #0]
 8004b12:	6a1b      	ldr	r3, [r3, #32]
 8004b14:	4798      	blx	r3
 8004b16:	280f      	cmp	r0, #15
 8004b18:	d803      	bhi.n	8004b22 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004b1a:	4b3f      	ldr	r3, [pc, #252]	; (8004c18 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004b1c:	4a3c      	ldr	r2, [pc, #240]	; (8004c10 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004b1e:	21a4      	movs	r1, #164	; 0xa4
 8004b20:	e7f2      	b.n	8004b08 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b22:	68e0      	ldr	r0, [r4, #12]
 8004b24:	6803      	ldr	r3, [r0, #0]
 8004b26:	6a1b      	ldr	r3, [r3, #32]
 8004b28:	4798      	blx	r3
 8004b2a:	2837      	cmp	r0, #55	; 0x37
 8004b2c:	d803      	bhi.n	8004b36 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8004b2e:	4b3b      	ldr	r3, [pc, #236]	; (8004c1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8004b30:	4a37      	ldr	r2, [pc, #220]	; (8004c10 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004b32:	21a5      	movs	r1, #165	; 0xa5
 8004b34:	e7e8      	b.n	8004b08 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004b36:	f011 f8fb 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b3a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c20 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8004b3e:	3004      	adds	r0, #4
 8004b40:	f011 f95c 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b44:	f8d9 0000 	ldr.w	r0, [r9]
 8004b48:	b110      	cbz	r0, 8004b50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004b4a:	6803      	ldr	r3, [r0, #0]
 8004b4c:	68db      	ldr	r3, [r3, #12]
 8004b4e:	4798      	blx	r3
    if (*currentTrans)
 8004b50:	f8d9 0000 	ldr.w	r0, [r9]
 8004b54:	b110      	cbz	r0, 8004b5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004b56:	6803      	ldr	r3, [r0, #0]
 8004b58:	681b      	ldr	r3, [r3, #0]
 8004b5a:	4798      	blx	r3
    if (*currentScreen)
 8004b5c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004c24 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8004b60:	f8d8 0000 	ldr.w	r0, [r8]
 8004b64:	b110      	cbz	r0, 8004b6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004b66:	6803      	ldr	r3, [r0, #0]
 8004b68:	695b      	ldr	r3, [r3, #20]
 8004b6a:	4798      	blx	r3
    if (*currentPresenter)
 8004b6c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b70:	b110      	cbz	r0, 8004b78 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004b72:	6803      	ldr	r3, [r0, #0]
 8004b74:	685b      	ldr	r3, [r3, #4]
 8004b76:	4798      	blx	r3
    if (*currentScreen)
 8004b78:	f8d8 0000 	ldr.w	r0, [r8]
 8004b7c:	b110      	cbz	r0, 8004b84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004b7e:	6803      	ldr	r3, [r0, #0]
 8004b80:	681b      	ldr	r3, [r3, #0]
 8004b82:	4798      	blx	r3
    if (*currentPresenter)
 8004b84:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b88:	b110      	cbz	r0, 8004b90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004b8a:	6803      	ldr	r3, [r0, #0]
 8004b8c:	689b      	ldr	r3, [r3, #8]
 8004b8e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b90:	68e0      	ldr	r0, [r4, #12]
 8004b92:	2100      	movs	r1, #0
 8004b94:	f7ff fc56 	bl	8004444 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004b98:	2114      	movs	r1, #20
 8004b9a:	4605      	mov	r5, r0
 8004b9c:	f7ff fc56 	bl	800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ba0:	68a0      	ldr	r0, [r4, #8]
 8004ba2:	6803      	ldr	r3, [r0, #0]
 8004ba4:	2100      	movs	r1, #0
 8004ba6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ba8:	4798      	blx	r3
 8004baa:	4606      	mov	r6, r0
 8004bac:	f003 fda6 	bl	80086fc <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004bb0:	6860      	ldr	r0, [r4, #4]
 8004bb2:	6803      	ldr	r3, [r0, #0]
 8004bb4:	2100      	movs	r1, #0
 8004bb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bb8:	4798      	blx	r3
 8004bba:	4631      	mov	r1, r6
 8004bbc:	4604      	mov	r4, r0
 8004bbe:	f003 fd77 	bl	80086b0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8004bc2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004bc6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004bca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004bce:	b1dc      	cbz	r4, 8004c08 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8004bd0:	1d23      	adds	r3, r4, #4
 8004bd2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004bd6:	6833      	ldr	r3, [r6, #0]
 8004bd8:	f8c4 a008 	str.w	sl, [r4, #8]
 8004bdc:	4630      	mov	r0, r6
 8004bde:	68db      	ldr	r3, [r3, #12]
 8004be0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004be2:	4798      	blx	r3
    newPresenter->activate();
 8004be4:	6823      	ldr	r3, [r4, #0]
 8004be6:	4620      	mov	r0, r4
 8004be8:	681b      	ldr	r3, [r3, #0]
 8004bea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004bec:	4629      	mov	r1, r5
 8004bee:	4630      	mov	r0, r6
 8004bf0:	f012 feca 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004bf4:	682b      	ldr	r3, [r5, #0]
 8004bf6:	4628      	mov	r0, r5
 8004bf8:	691b      	ldr	r3, [r3, #16]
 8004bfa:	4798      	blx	r3
    newTransition->invalidate();
 8004bfc:	682b      	ldr	r3, [r5, #0]
 8004bfe:	4628      	mov	r0, r5
 8004c00:	695b      	ldr	r3, [r3, #20]
}
 8004c02:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c06:	4718      	bx	r3
    model->bind(newPresenter);
 8004c08:	4623      	mov	r3, r4
 8004c0a:	e7e2      	b.n	8004bd2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004c0c:	0802c7cc 	.word	0x0802c7cc
 8004c10:	0802d55f 	.word	0x0802d55f
 8004c14:	0802c968 	.word	0x0802c968
 8004c18:	0802c9af 	.word	0x0802c9af
 8004c1c:	0802ca52 	.word	0x0802ca52
 8004c20:	20013304 	.word	0x20013304
 8004c24:	20013300 	.word	0x20013300

08004c28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004c28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c2c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c30:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c32:	68a0      	ldr	r0, [r4, #8]
 8004c34:	6803      	ldr	r3, [r0, #0]
 8004c36:	6a1b      	ldr	r3, [r3, #32]
 8004c38:	4798      	blx	r3
 8004c3a:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8004c3e:	4298      	cmp	r0, r3
 8004c40:	d805      	bhi.n	8004c4e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004c42:	4b42      	ldr	r3, [pc, #264]	; (8004d4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004c44:	4a42      	ldr	r2, [pc, #264]	; (8004d50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004c46:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c48:	4842      	ldr	r0, [pc, #264]	; (8004d54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004c4a:	f025 ff39 	bl	802aac0 <__assert_func>
 8004c4e:	6860      	ldr	r0, [r4, #4]
 8004c50:	6803      	ldr	r3, [r0, #0]
 8004c52:	6a1b      	ldr	r3, [r3, #32]
 8004c54:	4798      	blx	r3
 8004c56:	280f      	cmp	r0, #15
 8004c58:	d803      	bhi.n	8004c62 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004c5a:	4b3f      	ldr	r3, [pc, #252]	; (8004d58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004c5c:	4a3c      	ldr	r2, [pc, #240]	; (8004d50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004c5e:	21a4      	movs	r1, #164	; 0xa4
 8004c60:	e7f2      	b.n	8004c48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c62:	68e0      	ldr	r0, [r4, #12]
 8004c64:	6803      	ldr	r3, [r0, #0]
 8004c66:	6a1b      	ldr	r3, [r3, #32]
 8004c68:	4798      	blx	r3
 8004c6a:	2837      	cmp	r0, #55	; 0x37
 8004c6c:	d803      	bhi.n	8004c76 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004c6e:	4b3b      	ldr	r3, [pc, #236]	; (8004d5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004c70:	4a37      	ldr	r2, [pc, #220]	; (8004d50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004c72:	21a5      	movs	r1, #165	; 0xa5
 8004c74:	e7e8      	b.n	8004c48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004c76:	f011 f85b 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c7a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004c7e:	3004      	adds	r0, #4
 8004c80:	f011 f8bc 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c84:	f8d9 0000 	ldr.w	r0, [r9]
 8004c88:	b110      	cbz	r0, 8004c90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004c8a:	6803      	ldr	r3, [r0, #0]
 8004c8c:	68db      	ldr	r3, [r3, #12]
 8004c8e:	4798      	blx	r3
    if (*currentTrans)
 8004c90:	f8d9 0000 	ldr.w	r0, [r9]
 8004c94:	b110      	cbz	r0, 8004c9c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c96:	6803      	ldr	r3, [r0, #0]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	4798      	blx	r3
    if (*currentScreen)
 8004c9c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004d64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004ca0:	f8d8 0000 	ldr.w	r0, [r8]
 8004ca4:	b110      	cbz	r0, 8004cac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004ca6:	6803      	ldr	r3, [r0, #0]
 8004ca8:	695b      	ldr	r3, [r3, #20]
 8004caa:	4798      	blx	r3
    if (*currentPresenter)
 8004cac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cb0:	b110      	cbz	r0, 8004cb8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004cb2:	6803      	ldr	r3, [r0, #0]
 8004cb4:	685b      	ldr	r3, [r3, #4]
 8004cb6:	4798      	blx	r3
    if (*currentScreen)
 8004cb8:	f8d8 0000 	ldr.w	r0, [r8]
 8004cbc:	b110      	cbz	r0, 8004cc4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004cbe:	6803      	ldr	r3, [r0, #0]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	4798      	blx	r3
    if (*currentPresenter)
 8004cc4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cc8:	b110      	cbz	r0, 8004cd0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004cca:	6803      	ldr	r3, [r0, #0]
 8004ccc:	689b      	ldr	r3, [r3, #8]
 8004cce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004cd0:	68e0      	ldr	r0, [r4, #12]
 8004cd2:	2100      	movs	r1, #0
 8004cd4:	f7ff fbb6 	bl	8004444 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004cd8:	2114      	movs	r1, #20
 8004cda:	4605      	mov	r5, r0
 8004cdc:	f7ff fbb6 	bl	800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ce0:	68a0      	ldr	r0, [r4, #8]
 8004ce2:	6803      	ldr	r3, [r0, #0]
 8004ce4:	2100      	movs	r1, #0
 8004ce6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ce8:	4798      	blx	r3
 8004cea:	4606      	mov	r6, r0
 8004cec:	f003 fc66 	bl	80085bc <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004cf0:	6860      	ldr	r0, [r4, #4]
 8004cf2:	6803      	ldr	r3, [r0, #0]
 8004cf4:	2100      	movs	r1, #0
 8004cf6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cf8:	4798      	blx	r3
 8004cfa:	4631      	mov	r1, r6
 8004cfc:	4604      	mov	r4, r0
 8004cfe:	f003 fc37 	bl	8008570 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004d02:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d06:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d0a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d0e:	b1dc      	cbz	r4, 8004d48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004d10:	1d23      	adds	r3, r4, #4
 8004d12:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d16:	6833      	ldr	r3, [r6, #0]
 8004d18:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d1c:	4630      	mov	r0, r6
 8004d1e:	68db      	ldr	r3, [r3, #12]
 8004d20:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d22:	4798      	blx	r3
    newPresenter->activate();
 8004d24:	6823      	ldr	r3, [r4, #0]
 8004d26:	4620      	mov	r0, r4
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d2c:	4629      	mov	r1, r5
 8004d2e:	4630      	mov	r0, r6
 8004d30:	f012 fe2a 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d34:	682b      	ldr	r3, [r5, #0]
 8004d36:	4628      	mov	r0, r5
 8004d38:	691b      	ldr	r3, [r3, #16]
 8004d3a:	4798      	blx	r3
    newTransition->invalidate();
 8004d3c:	682b      	ldr	r3, [r5, #0]
 8004d3e:	4628      	mov	r0, r5
 8004d40:	695b      	ldr	r3, [r3, #20]
}
 8004d42:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d46:	4718      	bx	r3
    model->bind(newPresenter);
 8004d48:	4623      	mov	r3, r4
 8004d4a:	e7e2      	b.n	8004d12 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004d4c:	0802c7cc 	.word	0x0802c7cc
 8004d50:	0802d6a1 	.word	0x0802d6a1
 8004d54:	0802c968 	.word	0x0802c968
 8004d58:	0802c9af 	.word	0x0802c9af
 8004d5c:	0802ca52 	.word	0x0802ca52
 8004d60:	20013304 	.word	0x20013304
 8004d64:	20013300 	.word	0x20013300

08004d68 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004d68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d6c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d70:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d72:	68a0      	ldr	r0, [r4, #8]
 8004d74:	6803      	ldr	r3, [r0, #0]
 8004d76:	6a1b      	ldr	r3, [r3, #32]
 8004d78:	4798      	blx	r3
 8004d7a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004d7e:	d205      	bcs.n	8004d8c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004d80:	4b42      	ldr	r3, [pc, #264]	; (8004e8c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004d82:	4a43      	ldr	r2, [pc, #268]	; (8004e90 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004d84:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d86:	4843      	ldr	r0, [pc, #268]	; (8004e94 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004d88:	f025 fe9a 	bl	802aac0 <__assert_func>
 8004d8c:	6860      	ldr	r0, [r4, #4]
 8004d8e:	6803      	ldr	r3, [r0, #0]
 8004d90:	6a1b      	ldr	r3, [r3, #32]
 8004d92:	4798      	blx	r3
 8004d94:	280f      	cmp	r0, #15
 8004d96:	d803      	bhi.n	8004da0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004d98:	4b3f      	ldr	r3, [pc, #252]	; (8004e98 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004d9a:	4a3d      	ldr	r2, [pc, #244]	; (8004e90 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004d9c:	21a4      	movs	r1, #164	; 0xa4
 8004d9e:	e7f2      	b.n	8004d86 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004da0:	68e0      	ldr	r0, [r4, #12]
 8004da2:	6803      	ldr	r3, [r0, #0]
 8004da4:	6a1b      	ldr	r3, [r3, #32]
 8004da6:	4798      	blx	r3
 8004da8:	2837      	cmp	r0, #55	; 0x37
 8004daa:	d803      	bhi.n	8004db4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004dac:	4b3b      	ldr	r3, [pc, #236]	; (8004e9c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004dae:	4a38      	ldr	r2, [pc, #224]	; (8004e90 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004db0:	21a5      	movs	r1, #165	; 0xa5
 8004db2:	e7e8      	b.n	8004d86 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004db4:	f010 ffbc 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004db8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ea0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004dbc:	3004      	adds	r0, #4
 8004dbe:	f011 f81d 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004dc2:	f8d9 0000 	ldr.w	r0, [r9]
 8004dc6:	b110      	cbz	r0, 8004dce <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004dc8:	6803      	ldr	r3, [r0, #0]
 8004dca:	68db      	ldr	r3, [r3, #12]
 8004dcc:	4798      	blx	r3
    if (*currentTrans)
 8004dce:	f8d9 0000 	ldr.w	r0, [r9]
 8004dd2:	b110      	cbz	r0, 8004dda <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004dd4:	6803      	ldr	r3, [r0, #0]
 8004dd6:	681b      	ldr	r3, [r3, #0]
 8004dd8:	4798      	blx	r3
    if (*currentScreen)
 8004dda:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004ea4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004dde:	f8d8 0000 	ldr.w	r0, [r8]
 8004de2:	b110      	cbz	r0, 8004dea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004de4:	6803      	ldr	r3, [r0, #0]
 8004de6:	695b      	ldr	r3, [r3, #20]
 8004de8:	4798      	blx	r3
    if (*currentPresenter)
 8004dea:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004dee:	b110      	cbz	r0, 8004df6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004df0:	6803      	ldr	r3, [r0, #0]
 8004df2:	685b      	ldr	r3, [r3, #4]
 8004df4:	4798      	blx	r3
    if (*currentScreen)
 8004df6:	f8d8 0000 	ldr.w	r0, [r8]
 8004dfa:	b110      	cbz	r0, 8004e02 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004dfc:	6803      	ldr	r3, [r0, #0]
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	4798      	blx	r3
    if (*currentPresenter)
 8004e02:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e06:	b110      	cbz	r0, 8004e0e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004e08:	6803      	ldr	r3, [r0, #0]
 8004e0a:	689b      	ldr	r3, [r3, #8]
 8004e0c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e0e:	68e0      	ldr	r0, [r4, #12]
 8004e10:	2100      	movs	r1, #0
 8004e12:	f7ff fb17 	bl	8004444 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004e16:	2114      	movs	r1, #20
 8004e18:	4605      	mov	r5, r0
 8004e1a:	f7ff fb17 	bl	800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e1e:	68a0      	ldr	r0, [r4, #8]
 8004e20:	6803      	ldr	r3, [r0, #0]
 8004e22:	2100      	movs	r1, #0
 8004e24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e26:	4798      	blx	r3
 8004e28:	4606      	mov	r6, r0
 8004e2a:	f003 fb6d 	bl	8008508 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e2e:	6860      	ldr	r0, [r4, #4]
 8004e30:	6803      	ldr	r3, [r0, #0]
 8004e32:	2100      	movs	r1, #0
 8004e34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e36:	4798      	blx	r3
 8004e38:	4631      	mov	r1, r6
 8004e3a:	4604      	mov	r4, r0
 8004e3c:	f003 fb3e 	bl	80084bc <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004e40:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e44:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e48:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e4c:	b1dc      	cbz	r4, 8004e86 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004e4e:	1d23      	adds	r3, r4, #4
 8004e50:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e54:	6833      	ldr	r3, [r6, #0]
 8004e56:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e5a:	4630      	mov	r0, r6
 8004e5c:	68db      	ldr	r3, [r3, #12]
 8004e5e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e60:	4798      	blx	r3
    newPresenter->activate();
 8004e62:	6823      	ldr	r3, [r4, #0]
 8004e64:	4620      	mov	r0, r4
 8004e66:	681b      	ldr	r3, [r3, #0]
 8004e68:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e6a:	4629      	mov	r1, r5
 8004e6c:	4630      	mov	r0, r6
 8004e6e:	f012 fd8b 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e72:	682b      	ldr	r3, [r5, #0]
 8004e74:	4628      	mov	r0, r5
 8004e76:	691b      	ldr	r3, [r3, #16]
 8004e78:	4798      	blx	r3
    newTransition->invalidate();
 8004e7a:	682b      	ldr	r3, [r5, #0]
 8004e7c:	4628      	mov	r0, r5
 8004e7e:	695b      	ldr	r3, [r3, #20]
}
 8004e80:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e84:	4718      	bx	r3
    model->bind(newPresenter);
 8004e86:	4623      	mov	r3, r4
 8004e88:	e7e2      	b.n	8004e50 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004e8a:	bf00      	nop
 8004e8c:	0802c7cc 	.word	0x0802c7cc
 8004e90:	0802d7e3 	.word	0x0802d7e3
 8004e94:	0802c968 	.word	0x0802c968
 8004e98:	0802c9af 	.word	0x0802c9af
 8004e9c:	0802ca52 	.word	0x0802ca52
 8004ea0:	20013304 	.word	0x20013304
 8004ea4:	20013300 	.word	0x20013300

08004ea8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004ea8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004eac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004eb0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004eb2:	68a0      	ldr	r0, [r4, #8]
 8004eb4:	6803      	ldr	r3, [r0, #0]
 8004eb6:	6a1b      	ldr	r3, [r3, #32]
 8004eb8:	4798      	blx	r3
 8004eba:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004ebe:	d205      	bcs.n	8004ecc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004ec0:	4b42      	ldr	r3, [pc, #264]	; (8004fcc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004ec2:	4a43      	ldr	r2, [pc, #268]	; (8004fd0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004ec4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ec6:	4843      	ldr	r0, [pc, #268]	; (8004fd4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004ec8:	f025 fdfa 	bl	802aac0 <__assert_func>
 8004ecc:	6860      	ldr	r0, [r4, #4]
 8004ece:	6803      	ldr	r3, [r0, #0]
 8004ed0:	6a1b      	ldr	r3, [r3, #32]
 8004ed2:	4798      	blx	r3
 8004ed4:	280f      	cmp	r0, #15
 8004ed6:	d803      	bhi.n	8004ee0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004ed8:	4b3f      	ldr	r3, [pc, #252]	; (8004fd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004eda:	4a3d      	ldr	r2, [pc, #244]	; (8004fd0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004edc:	21a4      	movs	r1, #164	; 0xa4
 8004ede:	e7f2      	b.n	8004ec6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ee0:	68e0      	ldr	r0, [r4, #12]
 8004ee2:	6803      	ldr	r3, [r0, #0]
 8004ee4:	6a1b      	ldr	r3, [r3, #32]
 8004ee6:	4798      	blx	r3
 8004ee8:	2837      	cmp	r0, #55	; 0x37
 8004eea:	d803      	bhi.n	8004ef4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004eec:	4b3b      	ldr	r3, [pc, #236]	; (8004fdc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004eee:	4a38      	ldr	r2, [pc, #224]	; (8004fd0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004ef0:	21a5      	movs	r1, #165	; 0xa5
 8004ef2:	e7e8      	b.n	8004ec6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004ef4:	f010 ff1c 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ef8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004fe0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004efc:	3004      	adds	r0, #4
 8004efe:	f010 ff7d 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f02:	f8d9 0000 	ldr.w	r0, [r9]
 8004f06:	b110      	cbz	r0, 8004f0e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004f08:	6803      	ldr	r3, [r0, #0]
 8004f0a:	68db      	ldr	r3, [r3, #12]
 8004f0c:	4798      	blx	r3
    if (*currentTrans)
 8004f0e:	f8d9 0000 	ldr.w	r0, [r9]
 8004f12:	b110      	cbz	r0, 8004f1a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004f14:	6803      	ldr	r3, [r0, #0]
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	4798      	blx	r3
    if (*currentScreen)
 8004f1a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004fe4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004f1e:	f8d8 0000 	ldr.w	r0, [r8]
 8004f22:	b110      	cbz	r0, 8004f2a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004f24:	6803      	ldr	r3, [r0, #0]
 8004f26:	695b      	ldr	r3, [r3, #20]
 8004f28:	4798      	blx	r3
    if (*currentPresenter)
 8004f2a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f2e:	b110      	cbz	r0, 8004f36 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004f30:	6803      	ldr	r3, [r0, #0]
 8004f32:	685b      	ldr	r3, [r3, #4]
 8004f34:	4798      	blx	r3
    if (*currentScreen)
 8004f36:	f8d8 0000 	ldr.w	r0, [r8]
 8004f3a:	b110      	cbz	r0, 8004f42 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004f3c:	6803      	ldr	r3, [r0, #0]
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	4798      	blx	r3
    if (*currentPresenter)
 8004f42:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f46:	b110      	cbz	r0, 8004f4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004f48:	6803      	ldr	r3, [r0, #0]
 8004f4a:	689b      	ldr	r3, [r3, #8]
 8004f4c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f4e:	68e0      	ldr	r0, [r4, #12]
 8004f50:	2100      	movs	r1, #0
 8004f52:	f7ff fa77 	bl	8004444 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004f56:	2114      	movs	r1, #20
 8004f58:	4605      	mov	r5, r0
 8004f5a:	f7ff fa77 	bl	800444c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f5e:	68a0      	ldr	r0, [r4, #8]
 8004f60:	6803      	ldr	r3, [r0, #0]
 8004f62:	2100      	movs	r1, #0
 8004f64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f66:	4798      	blx	r3
 8004f68:	4606      	mov	r6, r0
 8004f6a:	f003 f989 	bl	8008280 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f6e:	6860      	ldr	r0, [r4, #4]
 8004f70:	6803      	ldr	r3, [r0, #0]
 8004f72:	2100      	movs	r1, #0
 8004f74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f76:	4798      	blx	r3
 8004f78:	4631      	mov	r1, r6
 8004f7a:	4604      	mov	r4, r0
 8004f7c:	f003 f95a 	bl	8008234 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004f80:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f84:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f88:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f8c:	b1dc      	cbz	r4, 8004fc6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004f8e:	1d23      	adds	r3, r4, #4
 8004f90:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f94:	6833      	ldr	r3, [r6, #0]
 8004f96:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f9a:	4630      	mov	r0, r6
 8004f9c:	68db      	ldr	r3, [r3, #12]
 8004f9e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004fa0:	4798      	blx	r3
    newPresenter->activate();
 8004fa2:	6823      	ldr	r3, [r4, #0]
 8004fa4:	4620      	mov	r0, r4
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004faa:	4629      	mov	r1, r5
 8004fac:	4630      	mov	r0, r6
 8004fae:	f012 fceb 	bl	8017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fb2:	682b      	ldr	r3, [r5, #0]
 8004fb4:	4628      	mov	r0, r5
 8004fb6:	691b      	ldr	r3, [r3, #16]
 8004fb8:	4798      	blx	r3
    newTransition->invalidate();
 8004fba:	682b      	ldr	r3, [r5, #0]
 8004fbc:	4628      	mov	r0, r5
 8004fbe:	695b      	ldr	r3, [r3, #20]
}
 8004fc0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fc4:	4718      	bx	r3
    model->bind(newPresenter);
 8004fc6:	4623      	mov	r3, r4
 8004fc8:	e7e2      	b.n	8004f90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004fca:	bf00      	nop
 8004fcc:	0802c7cc 	.word	0x0802c7cc
 8004fd0:	0802d90f 	.word	0x0802d90f
 8004fd4:	0802c968 	.word	0x0802c968
 8004fd8:	0802c9af 	.word	0x0802c9af
 8004fdc:	0802ca52 	.word	0x0802ca52
 8004fe0:	20013304 	.word	0x20013304
 8004fe4:	20013300 	.word	0x20013300

08004fe8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004fe8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8004fea:	4770      	bx	lr

08004fec <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004fec:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004fee:	4770      	bx	lr

08004ff0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004ff0:	4770      	bx	lr

08004ff2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004ff2:	888b      	ldrh	r3, [r1, #4]
 8004ff4:	69c0      	ldr	r0, [r0, #28]
 8004ff6:	680a      	ldr	r2, [r1, #0]
 8004ff8:	0adb      	lsrs	r3, r3, #11
 8004ffa:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004ffe:	4410      	add	r0, r2
 8005000:	4770      	bx	lr

08005002 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005002:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005004:	b1c2      	cbz	r2, 8005038 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005006:	7b13      	ldrb	r3, [r2, #12]
 8005008:	b1b3      	cbz	r3, 8005038 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800500a:	7b54      	ldrb	r4, [r2, #13]
 800500c:	7ad2      	ldrb	r2, [r2, #11]
 800500e:	0224      	lsls	r4, r4, #8
 8005010:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005014:	4314      	orrs	r4, r2
 8005016:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005018:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800501a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800501e:	8813      	ldrh	r3, [r2, #0]
 8005020:	428b      	cmp	r3, r1
 8005022:	d102      	bne.n	800502a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005024:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005028:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800502a:	d805      	bhi.n	8005038 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800502c:	3801      	subs	r0, #1
 800502e:	b280      	uxth	r0, r0
 8005030:	3204      	adds	r2, #4
 8005032:	2800      	cmp	r0, #0
 8005034:	d1f3      	bne.n	800501e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005036:	e7f7      	b.n	8005028 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005038:	2000      	movs	r0, #0
 800503a:	e7f5      	b.n	8005028 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800503c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800503c:	b510      	push	{r4, lr}
 800503e:	212c      	movs	r1, #44	; 0x2c
 8005040:	4604      	mov	r4, r0
 8005042:	f024 ff2a 	bl	8029e9a <_ZdlPvj>
 8005046:	4620      	mov	r0, r4
 8005048:	bd10      	pop	{r4, pc}
	...

0800504c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800504c:	b530      	push	{r4, r5, lr}
 800504e:	b08b      	sub	sp, #44	; 0x2c
 8005050:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005052:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005056:	9508      	str	r5, [sp, #32]
 8005058:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800505c:	9507      	str	r5, [sp, #28]
 800505e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005062:	9506      	str	r5, [sp, #24]
 8005064:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005068:	9505      	str	r5, [sp, #20]
 800506a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800506e:	9504      	str	r5, [sp, #16]
 8005070:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005074:	9503      	str	r5, [sp, #12]
 8005076:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800507a:	9502      	str	r5, [sp, #8]
 800507c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005080:	9501      	str	r5, [sp, #4]
 8005082:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005086:	9500      	str	r5, [sp, #0]
 8005088:	f011 ffe8 	bl	801705c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800508c:	4b06      	ldr	r3, [pc, #24]	; (80050a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800508e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005090:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005092:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8005094:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005096:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005098:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800509a:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800509c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800509e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80050a0:	4620      	mov	r0, r4
 80050a2:	b00b      	add	sp, #44	; 0x2c
 80050a4:	bd30      	pop	{r4, r5, pc}
 80050a6:	bf00      	nop
 80050a8:	0802db78 	.word	0x0802db78

080050ac <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80050ac:	4770      	bx	lr

080050ae <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80050ae:	4770      	bx	lr

080050b0 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80050b0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80050b2:	68c2      	ldr	r2, [r0, #12]
 80050b4:	6844      	ldr	r4, [r0, #4]
 80050b6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80050b8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80050ba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80050be:	07d2      	lsls	r2, r2, #31
 80050c0:	bf48      	it	mi
 80050c2:	5962      	ldrmi	r2, [r4, r5]
 80050c4:	689b      	ldr	r3, [r3, #8]
    }
 80050c6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80050c8:	bf48      	it	mi
 80050ca:	58d3      	ldrmi	r3, [r2, r3]
 80050cc:	4718      	bx	r3

080050ce <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80050ce:	6843      	ldr	r3, [r0, #4]
 80050d0:	b12b      	cbz	r3, 80050de <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80050d2:	6883      	ldr	r3, [r0, #8]
 80050d4:	b92b      	cbnz	r3, 80050e2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80050d6:	68c0      	ldr	r0, [r0, #12]
 80050d8:	f000 0001 	and.w	r0, r0, #1
 80050dc:	4770      	bx	lr
 80050de:	4618      	mov	r0, r3
 80050e0:	4770      	bx	lr
 80050e2:	2001      	movs	r0, #1
    }
 80050e4:	4770      	bx	lr

080050e6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80050e6:	b510      	push	{r4, lr}
 80050e8:	2110      	movs	r1, #16
 80050ea:	4604      	mov	r4, r0
 80050ec:	f024 fed5 	bl	8029e9a <_ZdlPvj>
 80050f0:	4620      	mov	r0, r4
 80050f2:	bd10      	pop	{r4, pc}

080050f4 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80050f4:	b510      	push	{r4, lr}
 80050f6:	4b03      	ldr	r3, [pc, #12]	; (8005104 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80050f8:	6003      	str	r3, [r0, #0]
 80050fa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80050fc:	f00f f916 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005100:	4620      	mov	r0, r4
 8005102:	bd10      	pop	{r4, pc}
 8005104:	0802dbf0 	.word	0x0802dbf0

08005108 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005108:	b507      	push	{r0, r1, r2, lr}
 800510a:	4b07      	ldr	r3, [pc, #28]	; (8005128 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800510c:	6003      	str	r3, [r0, #0]
 800510e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005110:	f00f f90c 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005114:	9801      	ldr	r0, [sp, #4]
 8005116:	f241 117c 	movw	r1, #4476	; 0x117c
 800511a:	f024 febe 	bl	8029e9a <_ZdlPvj>
 800511e:	9801      	ldr	r0, [sp, #4]
 8005120:	b003      	add	sp, #12
 8005122:	f85d fb04 	ldr.w	pc, [sp], #4
 8005126:	bf00      	nop
 8005128:	0802dbf0 	.word	0x0802dbf0

0800512c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800512c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800512e:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005132:	4299      	cmp	r1, r3
{
 8005134:	4604      	mov	r4, r0
 8005136:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005138:	d103      	bne.n	8005142 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800513a:	f010 fdf9 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800513e:	f7fe feaf 	bl	8003ea0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005142:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005146:	429d      	cmp	r5, r3
 8005148:	d103      	bne.n	8005152 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800514a:	f010 fdf1 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800514e:	f7fe ff37 	bl	8003fc0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8005152:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005156:	429d      	cmp	r5, r3
 8005158:	d103      	bne.n	8005162 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 800515a:	f010 fde9 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800515e:	f7fe ff3f 	bl	8003fe0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8005162:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005166:	42a5      	cmp	r5, r4
 8005168:	d10a      	bne.n	8005180 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800516a:	4806      	ldr	r0, [pc, #24]	; (8005184 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 800516c:	2200      	movs	r2, #0
 800516e:	2120      	movs	r1, #32
 8005170:	f004 fa20 	bl	80095b4 <HAL_GPIO_WritePin>
 8005174:	f010 fddc 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005178:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800517c:	f7fe bf40 	b.w	8004000 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005180:	bd38      	pop	{r3, r4, r5, pc}
 8005182:	bf00      	nop
 8005184:	40021000 	.word	0x40021000

08005188 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800518c:	ed2d 8b06 	vpush	{d8-d10}
 8005190:	4604      	mov	r4, r0
 8005192:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8005194:	46a3      	mov	fp, r4
        : presenter(0)
 8005196:	2500      	movs	r5, #0
 8005198:	f012 fa4a 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
 800519c:	4b6a      	ldr	r3, [pc, #424]	; (8005348 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 800519e:	63e5      	str	r5, [r4, #60]	; 0x3c
 80051a0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80051a4:	2226      	movs	r2, #38	; 0x26
 80051a6:	4629      	mov	r1, r5
 80051a8:	4658      	mov	r0, fp
 80051aa:	f025 fe8e 	bl	802aeca <memset>
 80051ae:	4658      	mov	r0, fp
 80051b0:	f7fd fc04 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 80051b4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80051b8:	26ff      	movs	r6, #255	; 0xff
 80051ba:	4b64      	ldr	r3, [pc, #400]	; (800534c <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80051bc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80051be:	2226      	movs	r2, #38	; 0x26
 80051c0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80051c4:	4629      	mov	r1, r5
 80051c6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80051ca:	4650      	mov	r0, sl
        : color(col)
 80051cc:	66a5      	str	r5, [r4, #104]	; 0x68
 80051ce:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80051d2:	f025 fe7a 	bl	802aeca <memset>
 80051d6:	4650      	mov	r0, sl
 80051d8:	f7fd fbf0 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 80051dc:	4b5c      	ldr	r3, [pc, #368]	; (8005350 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80051de:	66e3      	str	r3, [r4, #108]	; 0x6c
 80051e0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80051e4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80051e8:	a90c      	add	r1, sp, #48	; 0x30
 80051ea:	4650      	mov	r0, sl
 80051ec:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80051f0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80051f4:	f00e f89d 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80051f8:	4648      	mov	r0, r9
 80051fa:	f7fd fc35 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80051fe:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005202:	4b54      	ldr	r3, [pc, #336]	; (8005354 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005204:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005208:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800520c:	4638      	mov	r0, r7
 800520e:	f00c fd83 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8005212:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005216:	4618      	mov	r0, r3
 8005218:	9303      	str	r3, [sp, #12]
 800521a:	f7fd f9cb 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800521e:	4b4e      	ldr	r3, [pc, #312]	; (8005358 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005220:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005224:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005228:	3324      	adds	r3, #36	; 0x24
 800522a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800522e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005232:	4640      	mov	r0, r8
 8005234:	f7fd fc18 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005238:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800523c:	4618      	mov	r0, r3
 800523e:	ee08 3a10 	vmov	s16, r3
 8005242:	f7fd fc11 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005246:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800524a:	4618      	mov	r0, r3
 800524c:	ee08 3a90 	vmov	s17, r3
 8005250:	f7fd fc0a 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005254:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005258:	4618      	mov	r0, r3
 800525a:	ee09 3a10 	vmov	s18, r3
 800525e:	f00e f99f 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005262:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005266:	4618      	mov	r0, r3
 8005268:	ee09 3a90 	vmov	s19, r3
 800526c:	f00e f998 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005270:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005274:	4618      	mov	r0, r3
 8005276:	ee0a 3a10 	vmov	s20, r3
 800527a:	f00e f991 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800527e:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005282:	4618      	mov	r0, r3
 8005284:	ee0a 3a90 	vmov	s21, r3
 8005288:	f00e f82c 	bl	80132e4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800528c:	4a33      	ldr	r2, [pc, #204]	; (800535c <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 800528e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005292:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005296:	4a32      	ldr	r2, [pc, #200]	; (8005360 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005298:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800529c:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80052a0:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80052a4:	f00f f838 	bl	8014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80052a8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80052ac:	462a      	mov	r2, r5
 80052ae:	4658      	mov	r0, fp
 80052b0:	9300      	str	r3, [sp, #0]
 80052b2:	4629      	mov	r1, r5
 80052b4:	23f0      	movs	r3, #240	; 0xf0
 80052b6:	f7fd fb5c 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80052ba:	1d26      	adds	r6, r4, #4
        color = newColor;
 80052bc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80052c0:	66a3      	str	r3, [r4, #104]	; 0x68
 80052c2:	4659      	mov	r1, fp
 80052c4:	4630      	mov	r0, r6
 80052c6:	f00a fc5b 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80052ca:	462a      	mov	r2, r5
 80052cc:	4650      	mov	r0, sl
 80052ce:	4629      	mov	r1, r5
 80052d0:	f7fd fb42 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80052d4:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80052d6:	4650      	mov	r0, sl
 80052d8:	a90c      	add	r1, sp, #48	; 0x30
 80052da:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80052de:	f00e f828 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80052e2:	4651      	mov	r1, sl
 80052e4:	4630      	mov	r0, r6
 80052e6:	f00a fc4b 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 80052ea:	f44f 729a 	mov.w	r2, #308	; 0x134
 80052ee:	2156      	movs	r1, #86	; 0x56
 80052f0:	4648      	mov	r0, r9
 80052f2:	f7fd fb31 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80052f6:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80052fa:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80052fe:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005302:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005306:	4650      	mov	r0, sl
 8005308:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800530c:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005310:	4649      	mov	r1, r9
 8005312:	4798      	blx	r3
 8005314:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005318:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800531c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005320:	4b10      	ldr	r3, [pc, #64]	; (8005364 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005322:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005324:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005328:	b92b      	cbnz	r3, 8005336 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 800532a:	4b0f      	ldr	r3, [pc, #60]	; (8005368 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 800532c:	4a0f      	ldr	r2, [pc, #60]	; (800536c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800532e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005330:	480f      	ldr	r0, [pc, #60]	; (8005370 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005332:	f025 fbc5 	bl	802aac0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005336:	4b0f      	ldr	r3, [pc, #60]	; (8005374 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005338:	881b      	ldrh	r3, [r3, #0]
 800533a:	2b30      	cmp	r3, #48	; 0x30
 800533c:	d81e      	bhi.n	800537c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800533e:	4b0e      	ldr	r3, [pc, #56]	; (8005378 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005340:	4a0a      	ldr	r2, [pc, #40]	; (800536c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005342:	2161      	movs	r1, #97	; 0x61
 8005344:	e7f4      	b.n	8005330 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005346:	bf00      	nop
 8005348:	0802dbf0 	.word	0x0802dbf0
 800534c:	0802eba4 	.word	0x0802eba4
 8005350:	0802edf0 	.word	0x0802edf0
 8005354:	0802c6f0 	.word	0x0802c6f0
 8005358:	0802e8d8 	.word	0x0802e8d8
 800535c:	0802dbd8 	.word	0x0802dbd8
 8005360:	0800512d 	.word	0x0800512d
 8005364:	20013314 	.word	0x20013314
 8005368:	0802c4a0 	.word	0x0802c4a0
 800536c:	0802c5a5 	.word	0x0802c5a5
 8005370:	0802c51d 	.word	0x0802c51d
 8005374:	20013318 	.word	0x20013318
 8005378:	0802c564 	.word	0x0802c564
        return texts->getText(typedTextId);
 800537c:	4ba5      	ldr	r3, [pc, #660]	; (8005614 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 800537e:	2130      	movs	r1, #48	; 0x30
 8005380:	6818      	ldr	r0, [r3, #0]
 8005382:	f002 fdb9 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8005386:	4aa4      	ldr	r2, [pc, #656]	; (8005618 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005388:	4603      	mov	r3, r0
 800538a:	2104      	movs	r1, #4
 800538c:	4650      	mov	r0, sl
 800538e:	f013 fe7d 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005392:	4648      	mov	r0, r9
        wc1 = value;
 8005394:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005398:	f00d f9fa 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800539c:	4b9f      	ldr	r3, [pc, #636]	; (800561c <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 800539e:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80053a0:	a90c      	add	r1, sp, #48	; 0x30
 80053a2:	2331      	movs	r3, #49	; 0x31
 80053a4:	4648      	mov	r0, r9
 80053a6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80053aa:	f00d fa11 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80053ae:	4649      	mov	r1, r9
 80053b0:	4630      	mov	r0, r6
 80053b2:	f00a fbe5 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80053b6:	230a      	movs	r3, #10
 80053b8:	9300      	str	r3, [sp, #0]
 80053ba:	2232      	movs	r2, #50	; 0x32
 80053bc:	23f0      	movs	r3, #240	; 0xf0
 80053be:	4629      	mov	r1, r5
 80053c0:	4638      	mov	r0, r7
 80053c2:	f7fd fad6 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80053c6:	9b03      	ldr	r3, [sp, #12]
 80053c8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80053cc:	22a0      	movs	r2, #160	; 0xa0
 80053ce:	4611      	mov	r1, r2
 80053d0:	4638      	mov	r0, r7
 80053d2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80053d6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80053da:	f00c fdb3 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80053de:	22a0      	movs	r2, #160	; 0xa0
 80053e0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80053e4:	4638      	mov	r0, r7
 80053e6:	f00c fdb8 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80053ea:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80053ee:	2b20      	cmp	r3, #32
 80053f0:	d005      	beq.n	80053fe <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 80053f2:	2320      	movs	r3, #32
 80053f4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80053f8:	4638      	mov	r0, r7
 80053fa:	f00c fcad 	bl	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80053fe:	4638      	mov	r0, r7
 8005400:	2101      	movs	r1, #1
 8005402:	f00c fdb5 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005406:	4639      	mov	r1, r7
 8005408:	4630      	mov	r0, r6
 800540a:	ad04      	add	r5, sp, #16
        color = newColor;
 800540c:	f04f 37ff 	mov.w	r7, #4294967295
 8005410:	f00a fbb6 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005414:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005418:	2223      	movs	r2, #35	; 0x23
 800541a:	4640      	mov	r0, r8
 800541c:	2145      	movs	r1, #69	; 0x45
 800541e:	f7fd fa9b 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005422:	4641      	mov	r1, r8
 8005424:	4628      	mov	r0, r5
        color = newColor;
 8005426:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800542a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800542e:	f00c ff35 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005432:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005436:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800543a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800543e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005442:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 800561c <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005446:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800544a:	234b      	movs	r3, #75	; 0x4b
 800544c:	4649      	mov	r1, r9
 800544e:	4640      	mov	r0, r8
 8005450:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005454:	f00d f9bc 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005458:	4641      	mov	r1, r8
 800545a:	4630      	mov	r0, r6
 800545c:	f00a fb90 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005460:	ee18 0a10 	vmov	r0, s16
 8005464:	220c      	movs	r2, #12
 8005466:	2136      	movs	r1, #54	; 0x36
 8005468:	f7fd fa76 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 800546c:	ee18 1a10 	vmov	r1, s16
 8005470:	4628      	mov	r0, r5
        color = newColor;
 8005472:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005476:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800547a:	f00c ff0f 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800547e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005482:	ee18 3a10 	vmov	r3, s16
 8005486:	333c      	adds	r3, #60	; 0x3c
 8005488:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800548c:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 800548e:	ee18 0a10 	vmov	r0, s16
 8005492:	4649      	mov	r1, r9
 8005494:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005498:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800549c:	f00d f998 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80054a0:	ee18 1a10 	vmov	r1, s16
 80054a4:	4630      	mov	r0, r6
 80054a6:	f00a fb6b 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80054aa:	ee18 0a90 	vmov	r0, s17
 80054ae:	223c      	movs	r2, #60	; 0x3c
 80054b0:	2158      	movs	r1, #88	; 0x58
 80054b2:	f7fd fa51 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80054b6:	ee18 1a90 	vmov	r1, s17
 80054ba:	4628      	mov	r0, r5
        color = newColor;
 80054bc:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80054c0:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80054c4:	f00c feea 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80054c8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80054cc:	ee18 3a90 	vmov	r3, s17
 80054d0:	333c      	adds	r3, #60	; 0x3c
 80054d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80054d6:	2320      	movs	r3, #32
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80054d8:	ee18 0a90 	vmov	r0, s17
 80054dc:	4649      	mov	r1, r9
 80054de:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80054e2:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80054e6:	f00d f973 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80054ea:	ee18 1a90 	vmov	r1, s17
 80054ee:	4630      	mov	r0, r6
 80054f0:	f00a fb46 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80054f4:	ee19 0a10 	vmov	r0, s18
 80054f8:	22f0      	movs	r2, #240	; 0xf0
 80054fa:	2121      	movs	r1, #33	; 0x21
 80054fc:	f7fd fa2c 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005500:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005504:	464a      	mov	r2, r9
 8005506:	f04f 0802 	mov.w	r8, #2
 800550a:	a90b      	add	r1, sp, #44	; 0x2c
 800550c:	ee19 0a10 	vmov	r0, s18
 8005510:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005514:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005518:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800551c:	f00d fd13 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005520:	234d      	movs	r3, #77	; 0x4d
 8005522:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005526:	350c      	adds	r5, #12
        updateTextPosition();
 8005528:	ee19 0a10 	vmov	r0, s18
 800552c:	f7fd fa58 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005530:	ee19 1a10 	vmov	r1, s18
 8005534:	4630      	mov	r0, r6
        colorPressed = col;
 8005536:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800553a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800553e:	f00a fb1f 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005542:	ee19 0a90 	vmov	r0, s19
 8005546:	22aa      	movs	r2, #170	; 0xaa
 8005548:	2121      	movs	r1, #33	; 0x21
 800554a:	f7fd fa05 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800554e:	464a      	mov	r2, r9
 8005550:	a90b      	add	r1, sp, #44	; 0x2c
 8005552:	ee19 0a90 	vmov	r0, s19
 8005556:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800555a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800555e:	f00d fcf2 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005562:	234e      	movs	r3, #78	; 0x4e
 8005564:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005568:	ee19 0a90 	vmov	r0, s19
 800556c:	f7fd fa38 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005570:	ee19 1a90 	vmov	r1, s19
 8005574:	4630      	mov	r0, r6
        colorPressed = col;
 8005576:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800557a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800557e:	f00a faff 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005582:	ee1a 0a10 	vmov	r0, s20
 8005586:	2264      	movs	r2, #100	; 0x64
 8005588:	2121      	movs	r1, #33	; 0x21
 800558a:	f7fd f9e5 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800558e:	464a      	mov	r2, r9
 8005590:	a90b      	add	r1, sp, #44	; 0x2c
 8005592:	ee1a 0a10 	vmov	r0, s20
 8005596:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800559a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800559e:	f00d fcd2 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80055a2:	234f      	movs	r3, #79	; 0x4f
 80055a4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80055a8:	ee1a 0a10 	vmov	r0, s20
 80055ac:	f7fd fa18 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80055b0:	ee1a 1a10 	vmov	r1, s20
 80055b4:	4630      	mov	r0, r6
        colorPressed = col;
 80055b6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80055ba:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80055be:	f00a fadf 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80055c2:	ee1a 0a90 	vmov	r0, s21
 80055c6:	2205      	movs	r2, #5
 80055c8:	21c6      	movs	r1, #198	; 0xc6
 80055ca:	f7fd f9c5 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80055ce:	2301      	movs	r3, #1
 80055d0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80055d4:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80055d6:	ee1a 0a90 	vmov	r0, s21
 80055da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80055de:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80055e2:	aa0a      	add	r2, sp, #40	; 0x28
 80055e4:	ab0b      	add	r3, sp, #44	; 0x2c
 80055e6:	a909      	add	r1, sp, #36	; 0x24
 80055e8:	f8cd 9000 	str.w	r9, [sp]
 80055ec:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 80055f0:	f00d fde3 	bl	80131ba <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80055f4:	4630      	mov	r0, r6
 80055f6:	ee1a 1a90 	vmov	r1, s21
 80055fa:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 80055fe:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8005602:	f00a fabd 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005606:	4620      	mov	r0, r4
 8005608:	b00f      	add	sp, #60	; 0x3c
 800560a:	ecbd 8b06 	vpop	{d8-d10}
 800560e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005612:	bf00      	nop
 8005614:	20013320 	.word	0x20013320
 8005618:	0802c5dd 	.word	0x0802c5dd
 800561c:	0802c650 	.word	0x0802c650

08005620 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005620:	4770      	bx	lr

08005622 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005622:	4770      	bx	lr

08005624 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005624:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005626:	68c2      	ldr	r2, [r0, #12]
 8005628:	6844      	ldr	r4, [r0, #4]
 800562a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800562c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800562e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005632:	07d2      	lsls	r2, r2, #31
 8005634:	bf48      	it	mi
 8005636:	5962      	ldrmi	r2, [r4, r5]
 8005638:	689b      	ldr	r3, [r3, #8]
    }
 800563a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800563c:	bf48      	it	mi
 800563e:	58d3      	ldrmi	r3, [r2, r3]
 8005640:	4718      	bx	r3

08005642 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005642:	6843      	ldr	r3, [r0, #4]
 8005644:	b12b      	cbz	r3, 8005652 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005646:	6883      	ldr	r3, [r0, #8]
 8005648:	b92b      	cbnz	r3, 8005656 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800564a:	68c0      	ldr	r0, [r0, #12]
 800564c:	f000 0001 	and.w	r0, r0, #1
 8005650:	4770      	bx	lr
 8005652:	4618      	mov	r0, r3
 8005654:	4770      	bx	lr
 8005656:	2001      	movs	r0, #1
    }
 8005658:	4770      	bx	lr

0800565a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800565a:	b510      	push	{r4, lr}
 800565c:	2110      	movs	r1, #16
 800565e:	4604      	mov	r4, r0
 8005660:	f024 fc1b 	bl	8029e9a <_ZdlPvj>
 8005664:	4620      	mov	r0, r4
 8005666:	bd10      	pop	{r4, pc}

08005668 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005668:	b510      	push	{r4, lr}
 800566a:	4b03      	ldr	r3, [pc, #12]	; (8005678 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 800566c:	6003      	str	r3, [r0, #0]
 800566e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005670:	f00e fe5c 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005674:	4620      	mov	r0, r4
 8005676:	bd10      	pop	{r4, pc}
 8005678:	0802dc3c 	.word	0x0802dc3c

0800567c <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 800567c:	b507      	push	{r0, r1, r2, lr}
 800567e:	4b07      	ldr	r3, [pc, #28]	; (800569c <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8005680:	6003      	str	r3, [r0, #0]
 8005682:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005684:	f00e fe52 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005688:	9801      	ldr	r0, [sp, #4]
 800568a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800568e:	f024 fc04 	bl	8029e9a <_ZdlPvj>
 8005692:	9801      	ldr	r0, [sp, #4]
 8005694:	b003      	add	sp, #12
 8005696:	f85d fb04 	ldr.w	pc, [sp], #4
 800569a:	bf00      	nop
 800569c:	0802dc3c 	.word	0x0802dc3c

080056a0 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80056a0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80056a2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80056a6:	4299      	cmp	r1, r3
{
 80056a8:	4604      	mov	r4, r0
 80056aa:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80056ac:	d103      	bne.n	80056b6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80056ae:	f010 fb3f 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80056b2:	f7fe fbe5 	bl	8003e80 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80056b6:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80056ba:	429d      	cmp	r5, r3
 80056bc:	d103      	bne.n	80056c6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80056be:	f010 fb37 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80056c2:	f7fe fc0d 	bl	8003ee0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80056c6:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80056ca:	42a5      	cmp	r5, r4
 80056cc:	d105      	bne.n	80056da <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80056ce:	f010 fb2f 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80056d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80056d6:	f7fe bc33 	b.w	8003f40 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80056da:	bd38      	pop	{r3, r4, r5, pc}

080056dc <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80056dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80056e0:	ed2d 8b06 	vpush	{d8-d10}
 80056e4:	4604      	mov	r4, r0
 80056e6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 80056e8:	46a3      	mov	fp, r4
 80056ea:	2500      	movs	r5, #0
 80056ec:	f011 ffa0 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
 80056f0:	4b66      	ldr	r3, [pc, #408]	; (800588c <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 80056f2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80056f4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80056f8:	2226      	movs	r2, #38	; 0x26
 80056fa:	4629      	mov	r1, r5
 80056fc:	4658      	mov	r0, fp
 80056fe:	f025 fbe4 	bl	802aeca <memset>
 8005702:	4658      	mov	r0, fp
 8005704:	f7fd f95a 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8005708:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800570c:	26ff      	movs	r6, #255	; 0xff
 800570e:	4b60      	ldr	r3, [pc, #384]	; (8005890 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005710:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005712:	2226      	movs	r2, #38	; 0x26
 8005714:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005718:	4629      	mov	r1, r5
 800571a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800571e:	4650      	mov	r0, sl
 8005720:	66a5      	str	r5, [r4, #104]	; 0x68
 8005722:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005726:	f025 fbd0 	bl	802aeca <memset>
 800572a:	4650      	mov	r0, sl
 800572c:	f7fd f946 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8005730:	4b58      	ldr	r3, [pc, #352]	; (8005894 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005732:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005734:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005738:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800573c:	a90a      	add	r1, sp, #40	; 0x28
 800573e:	4650      	mov	r0, sl
 8005740:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005744:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005748:	f00d fdf3 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800574c:	4648      	mov	r0, r9
 800574e:	f7fd f98b 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005752:	4b51      	ldr	r3, [pc, #324]	; (8005898 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8005754:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005758:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800575c:	4618      	mov	r0, r3
 800575e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005762:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005766:	ee08 3a90 	vmov	s17, r3
 800576a:	f7fd f97d 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 800576e:	4638      	mov	r0, r7
 8005770:	f00c fad2 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8005774:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005778:	4618      	mov	r0, r3
 800577a:	9303      	str	r3, [sp, #12]
 800577c:	f7fc ff1a 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005780:	4b46      	ldr	r3, [pc, #280]	; (800589c <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8005782:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005786:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800578a:	3324      	adds	r3, #36	; 0x24
 800578c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005790:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005794:	4640      	mov	r0, r8
 8005796:	f7fd f967 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 800579a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800579e:	4618      	mov	r0, r3
 80057a0:	ee08 3a10 	vmov	s16, r3
 80057a4:	f7fd f960 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80057a8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80057ac:	4618      	mov	r0, r3
 80057ae:	ee09 3a10 	vmov	s18, r3
 80057b2:	f00d fef5 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80057b6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80057ba:	4618      	mov	r0, r3
 80057bc:	ee09 3a90 	vmov	s19, r3
 80057c0:	f00d feee 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80057c4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80057c8:	4618      	mov	r0, r3
 80057ca:	ee0a 3a10 	vmov	s20, r3
 80057ce:	f00d fee7 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80057d2:	4a33      	ldr	r2, [pc, #204]	; (80058a0 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 80057d4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80057d8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80057dc:	4a31      	ldr	r2, [pc, #196]	; (80058a4 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80057de:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80057e2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80057e6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80057ea:	f00e fd95 	bl	8014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80057ee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80057f2:	462a      	mov	r2, r5
 80057f4:	4658      	mov	r0, fp
 80057f6:	9300      	str	r3, [sp, #0]
 80057f8:	4629      	mov	r1, r5
 80057fa:	23f0      	movs	r3, #240	; 0xf0
 80057fc:	f7fd f8b9 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005800:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005802:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005806:	66a3      	str	r3, [r4, #104]	; 0x68
 8005808:	4659      	mov	r1, fp
 800580a:	4630      	mov	r0, r6
 800580c:	f00a f9b8 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005810:	462a      	mov	r2, r5
 8005812:	4650      	mov	r0, sl
 8005814:	4629      	mov	r1, r5
 8005816:	f7fd f89f 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 800581a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800581c:	4650      	mov	r0, sl
 800581e:	a90a      	add	r1, sp, #40	; 0x28
 8005820:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005824:	f00d fd85 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005828:	4651      	mov	r1, sl
 800582a:	4630      	mov	r0, r6
 800582c:	f00a f9a8 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005830:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005834:	2156      	movs	r1, #86	; 0x56
 8005836:	4648      	mov	r0, r9
 8005838:	f7fd f88e 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800583c:	f04f 33ff 	mov.w	r3, #4294967295
 8005840:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005844:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005848:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800584c:	f10d 0b10 	add.w	fp, sp, #16
 8005850:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005854:	4649      	mov	r1, r9
 8005856:	4658      	mov	r0, fp
 8005858:	4798      	blx	r3
 800585a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800585e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005862:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005866:	4b10      	ldr	r3, [pc, #64]	; (80058a8 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005868:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 800586a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800586e:	b92b      	cbnz	r3, 800587c <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005870:	4b0e      	ldr	r3, [pc, #56]	; (80058ac <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005872:	4a0f      	ldr	r2, [pc, #60]	; (80058b0 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005874:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005876:	480f      	ldr	r0, [pc, #60]	; (80058b4 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005878:	f025 f922 	bl	802aac0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800587c:	4b0e      	ldr	r3, [pc, #56]	; (80058b8 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800587e:	881b      	ldrh	r3, [r3, #0]
 8005880:	2b21      	cmp	r3, #33	; 0x21
 8005882:	d81d      	bhi.n	80058c0 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005884:	4b0d      	ldr	r3, [pc, #52]	; (80058bc <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005886:	4a0a      	ldr	r2, [pc, #40]	; (80058b0 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005888:	2161      	movs	r1, #97	; 0x61
 800588a:	e7f4      	b.n	8005876 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 800588c:	0802dc3c 	.word	0x0802dc3c
 8005890:	0802eba4 	.word	0x0802eba4
 8005894:	0802edf0 	.word	0x0802edf0
 8005898:	0802c6f0 	.word	0x0802c6f0
 800589c:	0802e8d8 	.word	0x0802e8d8
 80058a0:	0802dc24 	.word	0x0802dc24
 80058a4:	080056a1 	.word	0x080056a1
 80058a8:	20013314 	.word	0x20013314
 80058ac:	0802c4a0 	.word	0x0802c4a0
 80058b0:	0802c5a5 	.word	0x0802c5a5
 80058b4:	0802c51d 	.word	0x0802c51d
 80058b8:	20013318 	.word	0x20013318
 80058bc:	0802c564 	.word	0x0802c564
        return texts->getText(typedTextId);
 80058c0:	4b95      	ldr	r3, [pc, #596]	; (8005b18 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80058c2:	2121      	movs	r1, #33	; 0x21
 80058c4:	6818      	ldr	r0, [r3, #0]
 80058c6:	f002 fb17 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 80058ca:	4a94      	ldr	r2, [pc, #592]	; (8005b1c <_ZN19MeasurementViewBaseC1Ev+0x440>)
 80058cc:	4603      	mov	r3, r0
 80058ce:	2104      	movs	r1, #4
 80058d0:	4650      	mov	r0, sl
 80058d2:	f013 fbdb 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80058d6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80058da:	4648      	mov	r0, r9
 80058dc:	f00c ff58 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80058e0:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005b20 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80058e4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80058e8:	2322      	movs	r3, #34	; 0x22
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80058ea:	a90a      	add	r1, sp, #40	; 0x28
 80058ec:	4648      	mov	r0, r9
 80058ee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80058f2:	f00c ff6d 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058f6:	4649      	mov	r1, r9
 80058f8:	4630      	mov	r0, r6
 80058fa:	f00a f941 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 80058fe:	223c      	movs	r2, #60	; 0x3c
 8005900:	ee18 0a90 	vmov	r0, s17
 8005904:	213d      	movs	r1, #61	; 0x3d
 8005906:	f7fd f827 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800590a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800590e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005912:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005916:	4658      	mov	r0, fp
        linespace = space;
 8005918:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 800591c:	f00c fcbe 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005920:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005924:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005928:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800592c:	232f      	movs	r3, #47	; 0x2f
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 800592e:	ee18 0a90 	vmov	r0, s17
 8005932:	a90a      	add	r1, sp, #40	; 0x28
 8005934:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005938:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800593c:	f00c ff48 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005940:	ee18 1a90 	vmov	r1, s17
 8005944:	4630      	mov	r0, r6
 8005946:	f00a f91b 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800594a:	230a      	movs	r3, #10
 800594c:	9300      	str	r3, [sp, #0]
 800594e:	2232      	movs	r2, #50	; 0x32
 8005950:	23f0      	movs	r3, #240	; 0xf0
 8005952:	4629      	mov	r1, r5
 8005954:	4638      	mov	r0, r7
 8005956:	f7fd f80c 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 800595a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800595e:	22a0      	movs	r2, #160	; 0xa0
 8005960:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005964:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005968:	9b03      	ldr	r3, [sp, #12]
 800596a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800596e:	4611      	mov	r1, r2
 8005970:	4638      	mov	r0, r7
 8005972:	f00c fae7 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005976:	22a0      	movs	r2, #160	; 0xa0
 8005978:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800597c:	4638      	mov	r0, r7
 800597e:	f00c faec 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005982:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005986:	2b20      	cmp	r3, #32
 8005988:	d005      	beq.n	8005996 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 800598a:	2320      	movs	r3, #32
 800598c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005990:	4638      	mov	r0, r7
 8005992:	f00c f9e1 	bl	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005996:	4638      	mov	r0, r7
 8005998:	2101      	movs	r1, #1
 800599a:	f00c fae9 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800599e:	4639      	mov	r1, r7
 80059a0:	4630      	mov	r0, r6
 80059a2:	f00a f8ed 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80059a6:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80059aa:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80059ac:	2223      	movs	r2, #35	; 0x23
 80059ae:	4640      	mov	r0, r8
        linespace = space;
 80059b0:	f04f 0a00 	mov.w	sl, #0
 80059b4:	2145      	movs	r1, #69	; 0x45
 80059b6:	f7fc ffcf 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80059ba:	4641      	mov	r1, r8
 80059bc:	4638      	mov	r0, r7
        color = newColor;
 80059be:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80059c2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80059c6:	f00c fc69 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059ca:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80059ce:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80059d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80059d6:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005b20 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80059da:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80059de:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80059e0:	a90a      	add	r1, sp, #40	; 0x28
 80059e2:	4640      	mov	r0, r8
 80059e4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80059e8:	f00c fef2 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80059ec:	4641      	mov	r1, r8
 80059ee:	4630      	mov	r0, r6
 80059f0:	f00a f8c6 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80059f4:	ee18 0a10 	vmov	r0, s16
 80059f8:	220c      	movs	r2, #12
 80059fa:	2136      	movs	r1, #54	; 0x36
 80059fc:	f7fc ffac 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005a00:	ee18 1a10 	vmov	r1, s16
 8005a04:	4638      	mov	r0, r7
        color = newColor;
 8005a06:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005a0a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005a0e:	f00c fc45 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a12:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005a16:	ee18 3a10 	vmov	r3, s16
 8005a1a:	333c      	adds	r3, #60	; 0x3c
 8005a1c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005a20:	234a      	movs	r3, #74	; 0x4a
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005a22:	ee18 0a10 	vmov	r0, s16
 8005a26:	a90a      	add	r1, sp, #40	; 0x28
 8005a28:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005a2c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005a30:	f00c fece 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a34:	ee18 1a10 	vmov	r1, s16
 8005a38:	4630      	mov	r0, r6
 8005a3a:	f00a f8a1 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005a3e:	ee19 0a10 	vmov	r0, s18
 8005a42:	22f0      	movs	r2, #240	; 0xf0
 8005a44:	2121      	movs	r1, #33	; 0x21
 8005a46:	f7fc ff87 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005a4a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a4e:	aa0a      	add	r2, sp, #40	; 0x28
 8005a50:	f04f 0802 	mov.w	r8, #2
 8005a54:	a909      	add	r1, sp, #36	; 0x24
 8005a56:	ee19 0a10 	vmov	r0, s18
 8005a5a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a5e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005a62:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a66:	f00d fa6e 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005a6a:	2348      	movs	r3, #72	; 0x48
 8005a6c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005a70:	3710      	adds	r7, #16
        updateTextPosition();
 8005a72:	ee19 0a10 	vmov	r0, s18
 8005a76:	f7fc ffb3 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a7a:	ee19 1a10 	vmov	r1, s18
 8005a7e:	4630      	mov	r0, r6
        colorPressed = col;
 8005a80:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005a84:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005a88:	f00a f87a 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005a8c:	ee19 0a90 	vmov	r0, s19
 8005a90:	22aa      	movs	r2, #170	; 0xaa
 8005a92:	2121      	movs	r1, #33	; 0x21
 8005a94:	f7fc ff60 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a98:	aa0a      	add	r2, sp, #40	; 0x28
 8005a9a:	a909      	add	r1, sp, #36	; 0x24
 8005a9c:	ee19 0a90 	vmov	r0, s19
 8005aa0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005aa4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005aa8:	f00d fa4d 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005aac:	2347      	movs	r3, #71	; 0x47
 8005aae:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005ab2:	ee19 0a90 	vmov	r0, s19
 8005ab6:	f7fc ff93 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005aba:	ee19 1a90 	vmov	r1, s19
 8005abe:	4630      	mov	r0, r6
        colorPressed = col;
 8005ac0:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005ac4:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005ac8:	f00a f85a 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005acc:	ee1a 0a10 	vmov	r0, s20
 8005ad0:	2264      	movs	r2, #100	; 0x64
 8005ad2:	2121      	movs	r1, #33	; 0x21
 8005ad4:	f7fc ff40 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ad8:	aa0a      	add	r2, sp, #40	; 0x28
 8005ada:	a909      	add	r1, sp, #36	; 0x24
 8005adc:	ee1a 0a10 	vmov	r0, s20
 8005ae0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005ae4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005ae8:	f00d fa2d 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005aec:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8005aee:	ee1a 0a10 	vmov	r0, s20
 8005af2:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005af6:	f7fc ff73 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005afa:	4630      	mov	r0, r6
        colorPressed = col;
 8005afc:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005b00:	ee1a 1a10 	vmov	r1, s20
 8005b04:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005b08:	f00a f83a 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005b0c:	4620      	mov	r0, r4
 8005b0e:	b00d      	add	sp, #52	; 0x34
 8005b10:	ecbd 8b06 	vpop	{d8-d10}
 8005b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b18:	20013320 	.word	0x20013320
 8005b1c:	0802c5dd 	.word	0x0802c5dd
 8005b20:	0802c650 	.word	0x0802c650

08005b24 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005b24:	4770      	bx	lr

08005b26 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b26:	4770      	bx	lr

08005b28 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005b28:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b2a:	68c2      	ldr	r2, [r0, #12]
 8005b2c:	6844      	ldr	r4, [r0, #4]
 8005b2e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005b30:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005b32:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005b36:	07d2      	lsls	r2, r2, #31
 8005b38:	bf48      	it	mi
 8005b3a:	5962      	ldrmi	r2, [r4, r5]
 8005b3c:	689b      	ldr	r3, [r3, #8]
    }
 8005b3e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b40:	bf48      	it	mi
 8005b42:	58d3      	ldrmi	r3, [r2, r3]
 8005b44:	4718      	bx	r3

08005b46 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005b46:	6843      	ldr	r3, [r0, #4]
 8005b48:	b12b      	cbz	r3, 8005b56 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005b4a:	6883      	ldr	r3, [r0, #8]
 8005b4c:	b92b      	cbnz	r3, 8005b5a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005b4e:	68c0      	ldr	r0, [r0, #12]
 8005b50:	f000 0001 	and.w	r0, r0, #1
 8005b54:	4770      	bx	lr
 8005b56:	4618      	mov	r0, r3
 8005b58:	4770      	bx	lr
 8005b5a:	2001      	movs	r0, #1
    }
 8005b5c:	4770      	bx	lr

08005b5e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b5e:	b510      	push	{r4, lr}
 8005b60:	2110      	movs	r1, #16
 8005b62:	4604      	mov	r4, r0
 8005b64:	f024 f999 	bl	8029e9a <_ZdlPvj>
 8005b68:	4620      	mov	r0, r4
 8005b6a:	bd10      	pop	{r4, pc}

08005b6c <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005b6c:	b510      	push	{r4, lr}
 8005b6e:	4b03      	ldr	r3, [pc, #12]	; (8005b7c <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005b70:	6003      	str	r3, [r0, #0]
 8005b72:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b74:	f00e fbda 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b78:	4620      	mov	r0, r4
 8005b7a:	bd10      	pop	{r4, pc}
 8005b7c:	0802dc88 	.word	0x0802dc88

08005b80 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005b80:	b507      	push	{r0, r1, r2, lr}
 8005b82:	4b07      	ldr	r3, [pc, #28]	; (8005ba0 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005b84:	6003      	str	r3, [r0, #0]
 8005b86:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b88:	f00e fbd0 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b8c:	9801      	ldr	r0, [sp, #4]
 8005b8e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005b92:	f024 f982 	bl	8029e9a <_ZdlPvj>
 8005b96:	9801      	ldr	r0, [sp, #4]
 8005b98:	b003      	add	sp, #12
 8005b9a:	f85d fb04 	ldr.w	pc, [sp], #4
 8005b9e:	bf00      	nop
 8005ba0:	0802dc88 	.word	0x0802dc88

08005ba4 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005ba4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005ba6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005baa:	4299      	cmp	r1, r3
{
 8005bac:	4604      	mov	r4, r0
 8005bae:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005bb0:	d103      	bne.n	8005bba <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005bb2:	f010 f8bd 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005bb6:	f7fe f983 	bl	8003ec0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005bba:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005bbe:	429d      	cmp	r5, r3
 8005bc0:	d103      	bne.n	8005bca <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005bc2:	f010 f8b5 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005bc6:	f7fe f9eb 	bl	8003fa0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005bca:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005bce:	42a5      	cmp	r5, r4
 8005bd0:	d105      	bne.n	8005bde <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005bd2:	f010 f8ad 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005bd6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005bda:	f7fe b9d1 	b.w	8003f80 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005bde:	bd38      	pop	{r3, r4, r5, pc}

08005be0 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005be4:	ed2d 8b06 	vpush	{d8-d10}
 8005be8:	4604      	mov	r4, r0
 8005bea:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005bec:	46a3      	mov	fp, r4
 8005bee:	2500      	movs	r5, #0
 8005bf0:	f011 fd1e 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
 8005bf4:	4b66      	ldr	r3, [pc, #408]	; (8005d90 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005bf6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005bf8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005bfc:	2226      	movs	r2, #38	; 0x26
 8005bfe:	4629      	mov	r1, r5
 8005c00:	4658      	mov	r0, fp
 8005c02:	f025 f962 	bl	802aeca <memset>
 8005c06:	4658      	mov	r0, fp
 8005c08:	f7fc fed8 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8005c0c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005c10:	26ff      	movs	r6, #255	; 0xff
 8005c12:	4b60      	ldr	r3, [pc, #384]	; (8005d94 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005c14:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005c16:	2226      	movs	r2, #38	; 0x26
 8005c18:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005c1c:	4629      	mov	r1, r5
 8005c1e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005c22:	4650      	mov	r0, sl
 8005c24:	66a5      	str	r5, [r4, #104]	; 0x68
 8005c26:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c2a:	f025 f94e 	bl	802aeca <memset>
 8005c2e:	4650      	mov	r0, sl
 8005c30:	f7fc fec4 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8005c34:	4b58      	ldr	r3, [pc, #352]	; (8005d98 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005c36:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005c38:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005c3c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005c40:	a90a      	add	r1, sp, #40	; 0x28
 8005c42:	4650      	mov	r0, sl
 8005c44:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005c48:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005c4c:	f00d fb71 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005c50:	4648      	mov	r0, r9
 8005c52:	f7fc ff09 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005c56:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005c5a:	4b50      	ldr	r3, [pc, #320]	; (8005d9c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005c5c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005c60:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005c64:	4638      	mov	r0, r7
 8005c66:	f00c f857 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8005c6a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005c6e:	4618      	mov	r0, r3
 8005c70:	9303      	str	r3, [sp, #12]
 8005c72:	f7fc fc9f 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005c76:	4b4a      	ldr	r3, [pc, #296]	; (8005da0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005c78:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005c7c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005c80:	3324      	adds	r3, #36	; 0x24
 8005c82:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005c86:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005c8a:	4640      	mov	r0, r8
 8005c8c:	f7fc feec 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005c90:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005c94:	4618      	mov	r0, r3
 8005c96:	ee08 3a10 	vmov	s16, r3
 8005c9a:	f7fc fee5 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005c9e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005ca2:	4618      	mov	r0, r3
 8005ca4:	ee08 3a90 	vmov	s17, r3
 8005ca8:	f7fc fede 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005cac:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005cb0:	4618      	mov	r0, r3
 8005cb2:	ee09 3a10 	vmov	s18, r3
 8005cb6:	f00d fc73 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005cba:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005cbe:	4618      	mov	r0, r3
 8005cc0:	ee09 3a90 	vmov	s19, r3
 8005cc4:	f00d fc6c 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005cc8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005ccc:	4618      	mov	r0, r3
 8005cce:	ee0a 3a10 	vmov	s20, r3
 8005cd2:	f00d fc65 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005cd6:	4a33      	ldr	r2, [pc, #204]	; (8005da4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005cd8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005cdc:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005ce0:	4a31      	ldr	r2, [pc, #196]	; (8005da8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005ce2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005ce6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005cea:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005cee:	f00e fb13 	bl	8014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005cf2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005cf6:	462a      	mov	r2, r5
 8005cf8:	4658      	mov	r0, fp
 8005cfa:	9300      	str	r3, [sp, #0]
 8005cfc:	4629      	mov	r1, r5
 8005cfe:	23f0      	movs	r3, #240	; 0xf0
 8005d00:	f7fc fe37 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d04:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005d06:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005d0a:	66a3      	str	r3, [r4, #104]	; 0x68
 8005d0c:	4659      	mov	r1, fp
 8005d0e:	4630      	mov	r0, r6
 8005d10:	f009 ff36 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005d14:	462a      	mov	r2, r5
 8005d16:	4650      	mov	r0, sl
 8005d18:	4629      	mov	r1, r5
 8005d1a:	f7fc fe1d 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005d1e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005d20:	4650      	mov	r0, sl
 8005d22:	a90a      	add	r1, sp, #40	; 0x28
 8005d24:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005d28:	f00d fb03 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005d2c:	4651      	mov	r1, sl
 8005d2e:	4630      	mov	r0, r6
 8005d30:	f009 ff26 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005d34:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005d38:	2156      	movs	r1, #86	; 0x56
 8005d3a:	4648      	mov	r0, r9
 8005d3c:	f7fc fe0c 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005d40:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005d44:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005d48:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005d4c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005d50:	4650      	mov	r0, sl
 8005d52:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005d56:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005d5a:	4649      	mov	r1, r9
 8005d5c:	4798      	blx	r3
 8005d5e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005d62:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005d66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005d6a:	4b10      	ldr	r3, [pc, #64]	; (8005dac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005d6c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005d6e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005d72:	b92b      	cbnz	r3, 8005d80 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005d74:	4b0e      	ldr	r3, [pc, #56]	; (8005db0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005d76:	4a0f      	ldr	r2, [pc, #60]	; (8005db4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005d78:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d7a:	480f      	ldr	r0, [pc, #60]	; (8005db8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005d7c:	f024 fea0 	bl	802aac0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005d80:	4b0e      	ldr	r3, [pc, #56]	; (8005dbc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d82:	881b      	ldrh	r3, [r3, #0]
 8005d84:	2b1c      	cmp	r3, #28
 8005d86:	d81d      	bhi.n	8005dc4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005d88:	4b0d      	ldr	r3, [pc, #52]	; (8005dc0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005d8a:	4a0a      	ldr	r2, [pc, #40]	; (8005db4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005d8c:	2161      	movs	r1, #97	; 0x61
 8005d8e:	e7f4      	b.n	8005d7a <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005d90:	0802dc88 	.word	0x0802dc88
 8005d94:	0802eba4 	.word	0x0802eba4
 8005d98:	0802edf0 	.word	0x0802edf0
 8005d9c:	0802c6f0 	.word	0x0802c6f0
 8005da0:	0802e8d8 	.word	0x0802e8d8
 8005da4:	0802dc70 	.word	0x0802dc70
 8005da8:	08005ba5 	.word	0x08005ba5
 8005dac:	20013314 	.word	0x20013314
 8005db0:	0802c4a0 	.word	0x0802c4a0
 8005db4:	0802c5a5 	.word	0x0802c5a5
 8005db8:	0802c51d 	.word	0x0802c51d
 8005dbc:	20013318 	.word	0x20013318
 8005dc0:	0802c564 	.word	0x0802c564
        return texts->getText(typedTextId);
 8005dc4:	4b93      	ldr	r3, [pc, #588]	; (8006014 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005dc6:	211c      	movs	r1, #28
 8005dc8:	6818      	ldr	r0, [r3, #0]
 8005dca:	f002 f895 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8005dce:	4a92      	ldr	r2, [pc, #584]	; (8006018 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005dd0:	4603      	mov	r3, r0
 8005dd2:	2104      	movs	r1, #4
 8005dd4:	4650      	mov	r0, sl
 8005dd6:	f013 f959 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005dda:	4648      	mov	r0, r9
        wc1 = value;
 8005ddc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005de0:	f00c fcd6 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005de4:	4b8d      	ldr	r3, [pc, #564]	; (800601c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005de6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8005de8:	a90a      	add	r1, sp, #40	; 0x28
 8005dea:	231d      	movs	r3, #29
 8005dec:	4648      	mov	r0, r9
 8005dee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005df2:	f00c fced 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005df6:	4649      	mov	r1, r9
 8005df8:	4630      	mov	r0, r6
 8005dfa:	f009 fec1 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005dfe:	230a      	movs	r3, #10
 8005e00:	9300      	str	r3, [sp, #0]
 8005e02:	2232      	movs	r2, #50	; 0x32
 8005e04:	23f0      	movs	r3, #240	; 0xf0
 8005e06:	4629      	mov	r1, r5
 8005e08:	4638      	mov	r0, r7
 8005e0a:	f7fc fdb2 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e0e:	9b03      	ldr	r3, [sp, #12]
 8005e10:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005e14:	22a0      	movs	r2, #160	; 0xa0
 8005e16:	4611      	mov	r1, r2
 8005e18:	4638      	mov	r0, r7
 8005e1a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005e1e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005e22:	f00c f88f 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005e26:	22a0      	movs	r2, #160	; 0xa0
 8005e28:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005e2c:	4638      	mov	r0, r7
 8005e2e:	f00c f894 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005e32:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005e36:	2b20      	cmp	r3, #32
 8005e38:	d005      	beq.n	8005e46 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8005e3a:	2320      	movs	r3, #32
 8005e3c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005e40:	4638      	mov	r0, r7
 8005e42:	f00b ff89 	bl	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005e46:	4638      	mov	r0, r7
 8005e48:	2101      	movs	r1, #1
 8005e4a:	f00c f891 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005e4e:	4639      	mov	r1, r7
 8005e50:	4630      	mov	r0, r6
 8005e52:	ad04      	add	r5, sp, #16
        color = newColor;
 8005e54:	f04f 37ff 	mov.w	r7, #4294967295
 8005e58:	f009 fe92 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005e5c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005e60:	2223      	movs	r2, #35	; 0x23
 8005e62:	4640      	mov	r0, r8
 8005e64:	2145      	movs	r1, #69	; 0x45
 8005e66:	f7fc fd77 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005e6a:	4641      	mov	r1, r8
 8005e6c:	4628      	mov	r0, r5
        color = newColor;
 8005e6e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005e72:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005e76:	f00c fa11 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e7a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e7e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005e82:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e86:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 8005e8a:	f8df 9190 	ldr.w	r9, [pc, #400]	; 800601c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8005e8e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005e92:	a90a      	add	r1, sp, #40	; 0x28
 8005e94:	4640      	mov	r0, r8
 8005e96:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005e9a:	f00c fc99 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e9e:	4641      	mov	r1, r8
 8005ea0:	4630      	mov	r0, r6
 8005ea2:	f009 fe6d 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005ea6:	ee18 0a10 	vmov	r0, s16
 8005eaa:	220c      	movs	r2, #12
 8005eac:	2136      	movs	r1, #54	; 0x36
 8005eae:	f7fc fd53 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005eb2:	ee18 1a10 	vmov	r1, s16
 8005eb6:	4628      	mov	r0, r5
        color = newColor;
 8005eb8:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005ebc:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005ec0:	f00c f9ec 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ec4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ec8:	ee18 3a10 	vmov	r3, s16
 8005ecc:	445b      	add	r3, fp
 8005ece:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ed2:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8005ed4:	ee18 0a10 	vmov	r0, s16
 8005ed8:	a90a      	add	r1, sp, #40	; 0x28
 8005eda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005ede:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005ee2:	f00c fc75 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ee6:	ee18 1a10 	vmov	r1, s16
 8005eea:	4630      	mov	r0, r6
 8005eec:	f009 fe48 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8005ef0:	465a      	mov	r2, fp
 8005ef2:	ee18 0a90 	vmov	r0, s17
 8005ef6:	2121      	movs	r1, #33	; 0x21
 8005ef8:	f7fc fd2e 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005efc:	ee18 1a90 	vmov	r1, s17
 8005f00:	4628      	mov	r0, r5
        color = newColor;
 8005f02:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005f06:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005f0a:	f00c f9c7 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f0e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f12:	ee18 3a90 	vmov	r3, s17
 8005f16:	445b      	add	r3, fp
 8005f18:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f1c:	232b      	movs	r3, #43	; 0x2b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8005f1e:	ee18 0a90 	vmov	r0, s17
 8005f22:	a90a      	add	r1, sp, #40	; 0x28
 8005f24:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005f28:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005f2c:	f00c fc50 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f30:	ee18 1a90 	vmov	r1, s17
 8005f34:	4630      	mov	r0, r6
 8005f36:	f009 fe23 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005f3a:	ee19 0a10 	vmov	r0, s18
 8005f3e:	22f0      	movs	r2, #240	; 0xf0
 8005f40:	2121      	movs	r1, #33	; 0x21
 8005f42:	f7fc fd09 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005f46:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f4a:	aa0a      	add	r2, sp, #40	; 0x28
 8005f4c:	f04f 0802 	mov.w	r8, #2
 8005f50:	a909      	add	r1, sp, #36	; 0x24
 8005f52:	ee19 0a10 	vmov	r0, s18
 8005f56:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f5a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005f5e:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f62:	f00c fff0 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005f66:	233a      	movs	r3, #58	; 0x3a
 8005f68:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005f6c:	3510      	adds	r5, #16
        updateTextPosition();
 8005f6e:	ee19 0a10 	vmov	r0, s18
 8005f72:	f7fc fd35 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f76:	ee19 1a10 	vmov	r1, s18
 8005f7a:	4630      	mov	r0, r6
        colorPressed = col;
 8005f7c:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005f80:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005f84:	f009 fdfc 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005f88:	ee19 0a90 	vmov	r0, s19
 8005f8c:	22aa      	movs	r2, #170	; 0xaa
 8005f8e:	2121      	movs	r1, #33	; 0x21
 8005f90:	f7fc fce2 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f94:	aa0a      	add	r2, sp, #40	; 0x28
 8005f96:	a909      	add	r1, sp, #36	; 0x24
 8005f98:	ee19 0a90 	vmov	r0, s19
 8005f9c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005fa0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005fa4:	f00c ffcf 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005fa8:	2339      	movs	r3, #57	; 0x39
 8005faa:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005fae:	ee19 0a90 	vmov	r0, s19
 8005fb2:	f7fc fd15 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005fb6:	ee19 1a90 	vmov	r1, s19
 8005fba:	4630      	mov	r0, r6
        colorPressed = col;
 8005fbc:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005fc0:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005fc4:	f009 fddc 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005fc8:	ee1a 0a10 	vmov	r0, s20
 8005fcc:	2264      	movs	r2, #100	; 0x64
 8005fce:	2121      	movs	r1, #33	; 0x21
 8005fd0:	f7fc fcc2 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005fd4:	aa0a      	add	r2, sp, #40	; 0x28
 8005fd6:	a909      	add	r1, sp, #36	; 0x24
 8005fd8:	ee1a 0a10 	vmov	r0, s20
 8005fdc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005fe0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005fe4:	f00c ffaf 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005fe8:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8005fea:	ee1a 0a10 	vmov	r0, s20
 8005fee:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005ff2:	f7fc fcf5 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005ff6:	4630      	mov	r0, r6
        colorPressed = col;
 8005ff8:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005ffc:	ee1a 1a10 	vmov	r1, s20
 8006000:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006004:	f009 fdbc 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006008:	4620      	mov	r0, r4
 800600a:	b00d      	add	sp, #52	; 0x34
 800600c:	ecbd 8b06 	vpop	{d8-d10}
 8006010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006014:	20013320 	.word	0x20013320
 8006018:	0802c5dd 	.word	0x0802c5dd
 800601c:	0802c650 	.word	0x0802c650

08006020 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8006020:	4770      	bx	lr

08006022 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006022:	4770      	bx	lr

08006024 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006024:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006026:	68c2      	ldr	r2, [r0, #12]
 8006028:	6844      	ldr	r4, [r0, #4]
 800602a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800602c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800602e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006032:	07d2      	lsls	r2, r2, #31
 8006034:	bf48      	it	mi
 8006036:	5962      	ldrmi	r2, [r4, r5]
 8006038:	689b      	ldr	r3, [r3, #8]
    }
 800603a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800603c:	bf48      	it	mi
 800603e:	58d3      	ldrmi	r3, [r2, r3]
 8006040:	4718      	bx	r3

08006042 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006042:	6843      	ldr	r3, [r0, #4]
 8006044:	b12b      	cbz	r3, 8006052 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006046:	6883      	ldr	r3, [r0, #8]
 8006048:	b92b      	cbnz	r3, 8006056 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800604a:	68c0      	ldr	r0, [r0, #12]
 800604c:	f000 0001 	and.w	r0, r0, #1
 8006050:	4770      	bx	lr
 8006052:	4618      	mov	r0, r3
 8006054:	4770      	bx	lr
 8006056:	2001      	movs	r0, #1
    }
 8006058:	4770      	bx	lr

0800605a <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800605a:	b510      	push	{r4, lr}
 800605c:	2110      	movs	r1, #16
 800605e:	4604      	mov	r4, r0
 8006060:	f023 ff1b 	bl	8029e9a <_ZdlPvj>
 8006064:	4620      	mov	r0, r4
 8006066:	bd10      	pop	{r4, pc}

08006068 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006068:	b510      	push	{r4, lr}
 800606a:	4b03      	ldr	r3, [pc, #12]	; (8006078 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 800606c:	6003      	str	r3, [r0, #0]
 800606e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006070:	f00e f95c 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006074:	4620      	mov	r0, r4
 8006076:	bd10      	pop	{r4, pc}
 8006078:	0802dcd4 	.word	0x0802dcd4

0800607c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800607c:	b507      	push	{r0, r1, r2, lr}
 800607e:	4b07      	ldr	r3, [pc, #28]	; (800609c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8006080:	6003      	str	r3, [r0, #0]
 8006082:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006084:	f00e f952 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006088:	9801      	ldr	r0, [sp, #4]
 800608a:	f241 015c 	movw	r1, #4188	; 0x105c
 800608e:	f023 ff04 	bl	8029e9a <_ZdlPvj>
 8006092:	9801      	ldr	r0, [sp, #4]
 8006094:	b003      	add	sp, #12
 8006096:	f85d fb04 	ldr.w	pc, [sp], #4
 800609a:	bf00      	nop
 800609c:	0802dcd4 	.word	0x0802dcd4

080060a0 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80060a0:	3098      	adds	r0, #152	; 0x98
 80060a2:	4288      	cmp	r0, r1
{
 80060a4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80060a6:	d105      	bne.n	80060b4 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80060a8:	f00f fe42 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80060ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80060b0:	f7fd bf56 	b.w	8003f60 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80060b4:	bd08      	pop	{r3, pc}
	...

080060b8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80060b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060bc:	ed2d 8b02 	vpush	{d8}
 80060c0:	4604      	mov	r4, r0
 80060c2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80060c4:	46a1      	mov	r9, r4
 80060c6:	2500      	movs	r5, #0
 80060c8:	f011 fab2 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
 80060cc:	4ba6      	ldr	r3, [pc, #664]	; (8006368 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 80060ce:	63e5      	str	r5, [r4, #60]	; 0x3c
 80060d0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80060d4:	2226      	movs	r2, #38	; 0x26
 80060d6:	4629      	mov	r1, r5
 80060d8:	4648      	mov	r0, r9
 80060da:	f024 fef6 	bl	802aeca <memset>
 80060de:	4648      	mov	r0, r9
 80060e0:	f7fc fc6c 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 80060e4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80060e8:	26ff      	movs	r6, #255	; 0xff
 80060ea:	4ba0      	ldr	r3, [pc, #640]	; (800636c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 80060ec:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80060ee:	2226      	movs	r2, #38	; 0x26
 80060f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80060f4:	4629      	mov	r1, r5
 80060f6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80060fa:	4640      	mov	r0, r8
 80060fc:	66a5      	str	r5, [r4, #104]	; 0x68
 80060fe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006102:	f024 fee2 	bl	802aeca <memset>
 8006106:	4640      	mov	r0, r8
 8006108:	f7fc fc58 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 800610c:	4b98      	ldr	r3, [pc, #608]	; (8006370 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 800610e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006110:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006114:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006118:	a90a      	add	r1, sp, #40	; 0x28
 800611a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800611e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006120:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006124:	f00d f905 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006128:	4658      	mov	r0, fp
 800612a:	f00d fa39 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800612e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006132:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006136:	4618      	mov	r0, r3
 8006138:	ee08 3a90 	vmov	s17, r3
 800613c:	f7fc fc94 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006140:	4638      	mov	r0, r7
 8006142:	f00b fde9 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8006146:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800614a:	4618      	mov	r0, r3
 800614c:	9303      	str	r3, [sp, #12]
 800614e:	f7fc fa31 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006152:	4b88      	ldr	r3, [pc, #544]	; (8006374 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8006154:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006158:	3324      	adds	r3, #36	; 0x24
 800615a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800615e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006162:	4618      	mov	r0, r3
 8006164:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006168:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 800616c:	ee08 3a10 	vmov	s16, r3
 8006170:	f7fc fc7a 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006174:	4650      	mov	r0, sl
 8006176:	f7fc fc77 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800617a:	4a7f      	ldr	r2, [pc, #508]	; (8006378 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
 800617c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006180:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006184:	4a7d      	ldr	r2, [pc, #500]	; (800637c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006186:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800618a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 800618e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006192:	f00e f8c1 	bl	8014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006196:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800619a:	462a      	mov	r2, r5
 800619c:	4648      	mov	r0, r9
 800619e:	9300      	str	r3, [sp, #0]
 80061a0:	4629      	mov	r1, r5
 80061a2:	23f0      	movs	r3, #240	; 0xf0
 80061a4:	f7fc fbe5 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061a8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80061aa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80061ae:	66a3      	str	r3, [r4, #104]	; 0x68
 80061b0:	4649      	mov	r1, r9
 80061b2:	4630      	mov	r0, r6
 80061b4:	f009 fce4 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80061b8:	462a      	mov	r2, r5
 80061ba:	4640      	mov	r0, r8
 80061bc:	4629      	mov	r1, r5
 80061be:	f7fc fbcb 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80061c2:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80061c4:	4640      	mov	r0, r8
 80061c6:	a90a      	add	r1, sp, #40	; 0x28
 80061c8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80061cc:	f00d f8b1 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80061d0:	4641      	mov	r1, r8
 80061d2:	4630      	mov	r0, r6
 80061d4:	f009 fcd4 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80061d8:	4658      	mov	r0, fp
 80061da:	f240 1201 	movw	r2, #257	; 0x101
 80061de:	2121      	movs	r1, #33	; 0x21
 80061e0:	f7fc fbba 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80061e4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80061e6:	aa0a      	add	r2, sp, #40	; 0x28
 80061e8:	a909      	add	r1, sp, #36	; 0x24
 80061ea:	4658      	mov	r0, fp
 80061ec:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80061f0:	2302      	movs	r3, #2
 80061f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80061f6:	f00c fea6 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80061fa:	2327      	movs	r3, #39	; 0x27
        updateTextPosition();
 80061fc:	4658      	mov	r0, fp
 80061fe:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006202:	f7fc fbed 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006206:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 800620a:	330c      	adds	r3, #12
        color = col;
 800620c:	f04f 39ff 	mov.w	r9, #4294967295
 8006210:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006214:	4659      	mov	r1, fp
 8006216:	4630      	mov	r0, r6
        colorPressed = col;
 8006218:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800621c:	f009 fcb0 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006220:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006224:	223c      	movs	r2, #60	; 0x3c
 8006226:	ee18 0a90 	vmov	r0, s17
 800622a:	2117      	movs	r1, #23
 800622c:	f7fc fb94 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006230:	ee18 1a90 	vmov	r1, s17
 8006234:	4640      	mov	r0, r8
        color = newColor;
 8006236:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800623a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800623e:	f00c f82d 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006242:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006246:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800624a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800624e:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006250:	eb0d 0103 	add.w	r1, sp, r3
 8006254:	ee18 0a90 	vmov	r0, s17
 8006258:	f8df b124 	ldr.w	fp, [pc, #292]	; 8006380 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>
 800625c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006260:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006264:	f00c fab4 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006268:	ee18 1a90 	vmov	r1, s17
 800626c:	4630      	mov	r0, r6
 800626e:	f009 fc87 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006272:	230a      	movs	r3, #10
 8006274:	9300      	str	r3, [sp, #0]
 8006276:	2232      	movs	r2, #50	; 0x32
 8006278:	23f0      	movs	r3, #240	; 0xf0
 800627a:	4629      	mov	r1, r5
 800627c:	4638      	mov	r0, r7
 800627e:	f7fc fb78 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006282:	9b03      	ldr	r3, [sp, #12]
 8006284:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006288:	22a0      	movs	r2, #160	; 0xa0
 800628a:	4611      	mov	r1, r2
 800628c:	4638      	mov	r0, r7
 800628e:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006292:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006296:	f00b fe55 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800629a:	22a0      	movs	r2, #160	; 0xa0
 800629c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80062a0:	4638      	mov	r0, r7
 80062a2:	f00b fe5a 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80062a6:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80062aa:	2b20      	cmp	r3, #32
 80062ac:	d005      	beq.n	80062ba <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x202>
        lineWidthQ5 = widthQ5;
 80062ae:	2320      	movs	r3, #32
 80062b0:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80062b4:	4638      	mov	r0, r7
 80062b6:	f00b fd4f 	bl	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80062ba:	4638      	mov	r0, r7
 80062bc:	2101      	movs	r1, #1
 80062be:	f00b fe57 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80062c2:	4639      	mov	r1, r7
 80062c4:	4630      	mov	r0, r6
 80062c6:	f009 fc5b 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80062ca:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 80062ce:	ee18 0a10 	vmov	r0, s16
 80062d2:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80062d4:	2500      	movs	r5, #0
 80062d6:	2145      	movs	r1, #69	; 0x45
 80062d8:	f7fc fb3e 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80062dc:	ee18 1a10 	vmov	r1, s16
 80062e0:	4640      	mov	r0, r8
        color = newColor;
 80062e2:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80062e6:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80062ea:	f00b ffd7 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062ee:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80062f2:	ee18 3a10 	vmov	r3, s16
 80062f6:	333c      	adds	r3, #60	; 0x3c
 80062f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062fc:	2329      	movs	r3, #41	; 0x29
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 80062fe:	ee18 0a10 	vmov	r0, s16
 8006302:	a90a      	add	r1, sp, #40	; 0x28
 8006304:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006308:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800630c:	f00c fa60 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006310:	ee18 1a10 	vmov	r1, s16
 8006314:	4630      	mov	r0, r6
 8006316:	f009 fc33 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800631a:	220c      	movs	r2, #12
 800631c:	4650      	mov	r0, sl
 800631e:	2136      	movs	r1, #54	; 0x36
 8006320:	f7fc fb1a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006324:	4651      	mov	r1, sl
 8006326:	4640      	mov	r0, r8
        color = newColor;
 8006328:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 800632c:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006330:	f00b ffb4 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006334:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006338:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800633c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006340:	232a      	movs	r3, #42	; 0x2a
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006342:	a90a      	add	r1, sp, #40	; 0x28
 8006344:	4650      	mov	r0, sl
 8006346:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800634a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800634e:	f00c fa3f 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006352:	4630      	mov	r0, r6
 8006354:	4651      	mov	r1, sl
 8006356:	f009 fc13 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800635a:	4620      	mov	r0, r4
 800635c:	b00d      	add	sp, #52	; 0x34
 800635e:	ecbd 8b02 	vpop	{d8}
 8006362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006366:	bf00      	nop
 8006368:	0802dcd4 	.word	0x0802dcd4
 800636c:	0802eba4 	.word	0x0802eba4
 8006370:	0802edf0 	.word	0x0802edf0
 8006374:	0802e8d8 	.word	0x0802e8d8
 8006378:	0802dcbc 	.word	0x0802dcbc
 800637c:	080060a1 	.word	0x080060a1
 8006380:	0802c650 	.word	0x0802c650

08006384 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006384:	4770      	bx	lr

08006386 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006386:	4770      	bx	lr

08006388 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006388:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800638a:	68c2      	ldr	r2, [r0, #12]
 800638c:	6844      	ldr	r4, [r0, #4]
 800638e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006390:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006392:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006396:	07d2      	lsls	r2, r2, #31
 8006398:	bf48      	it	mi
 800639a:	5962      	ldrmi	r2, [r4, r5]
 800639c:	689b      	ldr	r3, [r3, #8]
    }
 800639e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80063a0:	bf48      	it	mi
 80063a2:	58d3      	ldrmi	r3, [r2, r3]
 80063a4:	4718      	bx	r3

080063a6 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80063a6:	6843      	ldr	r3, [r0, #4]
 80063a8:	b12b      	cbz	r3, 80063b6 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80063aa:	6883      	ldr	r3, [r0, #8]
 80063ac:	b92b      	cbnz	r3, 80063ba <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80063ae:	68c0      	ldr	r0, [r0, #12]
 80063b0:	f000 0001 	and.w	r0, r0, #1
 80063b4:	4770      	bx	lr
 80063b6:	4618      	mov	r0, r3
 80063b8:	4770      	bx	lr
 80063ba:	2001      	movs	r0, #1
    }
 80063bc:	4770      	bx	lr

080063be <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80063be:	b510      	push	{r4, lr}
 80063c0:	2110      	movs	r1, #16
 80063c2:	4604      	mov	r4, r0
 80063c4:	f023 fd69 	bl	8029e9a <_ZdlPvj>
 80063c8:	4620      	mov	r0, r4
 80063ca:	bd10      	pop	{r4, pc}

080063cc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80063cc:	b510      	push	{r4, lr}
 80063ce:	4b03      	ldr	r3, [pc, #12]	; (80063dc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 80063d0:	6003      	str	r3, [r0, #0]
 80063d2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80063d4:	f00d ffaa 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80063d8:	4620      	mov	r0, r4
 80063da:	bd10      	pop	{r4, pc}
 80063dc:	0802dd20 	.word	0x0802dd20

080063e0 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80063e0:	b507      	push	{r0, r1, r2, lr}
 80063e2:	4b07      	ldr	r3, [pc, #28]	; (8006400 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 80063e4:	6003      	str	r3, [r0, #0]
 80063e6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80063e8:	f00d ffa0 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80063ec:	9801      	ldr	r0, [sp, #4]
 80063ee:	f241 015c 	movw	r1, #4188	; 0x105c
 80063f2:	f023 fd52 	bl	8029e9a <_ZdlPvj>
 80063f6:	9801      	ldr	r0, [sp, #4]
 80063f8:	b003      	add	sp, #12
 80063fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80063fe:	bf00      	nop
 8006400:	0802dd20 	.word	0x0802dd20

08006404 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006404:	3098      	adds	r0, #152	; 0x98
 8006406:	4288      	cmp	r0, r1
{
 8006408:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800640a:	d105      	bne.n	8006418 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800640c:	f00f fc90 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006410:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006414:	f7fd bda4 	b.w	8003f60 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006418:	bd08      	pop	{r3, pc}
	...

0800641c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 800641c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006420:	ed2d 8b02 	vpush	{d8}
 8006424:	4604      	mov	r4, r0
 8006426:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006428:	46a1      	mov	r9, r4
 800642a:	2500      	movs	r5, #0
 800642c:	f011 f900 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
 8006430:	4ba5      	ldr	r3, [pc, #660]	; (80066c8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006432:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006434:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006438:	2226      	movs	r2, #38	; 0x26
 800643a:	4629      	mov	r1, r5
 800643c:	4648      	mov	r0, r9
 800643e:	f024 fd44 	bl	802aeca <memset>
 8006442:	4648      	mov	r0, r9
 8006444:	f7fc faba 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8006448:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800644c:	26ff      	movs	r6, #255	; 0xff
 800644e:	4b9f      	ldr	r3, [pc, #636]	; (80066cc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006450:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006452:	2226      	movs	r2, #38	; 0x26
 8006454:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006458:	4629      	mov	r1, r5
 800645a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800645e:	4640      	mov	r0, r8
 8006460:	66a5      	str	r5, [r4, #104]	; 0x68
 8006462:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006466:	f024 fd30 	bl	802aeca <memset>
 800646a:	4640      	mov	r0, r8
 800646c:	f7fc faa6 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8006470:	4b97      	ldr	r3, [pc, #604]	; (80066d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8006472:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006474:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006478:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800647c:	a90a      	add	r1, sp, #40	; 0x28
 800647e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006482:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006484:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006488:	f00c ff53 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800648c:	4658      	mov	r0, fp
 800648e:	f00d f887 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006492:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006496:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800649a:	4618      	mov	r0, r3
 800649c:	ee08 3a90 	vmov	s17, r3
 80064a0:	f7fc fae2 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80064a4:	4638      	mov	r0, r7
 80064a6:	f00b fc37 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 80064aa:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80064ae:	4618      	mov	r0, r3
 80064b0:	9303      	str	r3, [sp, #12]
 80064b2:	f7fc f87f 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80064b6:	4b87      	ldr	r3, [pc, #540]	; (80066d4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 80064b8:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80064bc:	3324      	adds	r3, #36	; 0x24
 80064be:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80064c2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80064c6:	4618      	mov	r0, r3
 80064c8:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80064cc:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80064d0:	ee08 3a10 	vmov	s16, r3
 80064d4:	f7fc fac8 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80064d8:	4650      	mov	r0, sl
 80064da:	f7fc fac5 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80064de:	4a7e      	ldr	r2, [pc, #504]	; (80066d8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 80064e0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80064e4:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80064e8:	4a7c      	ldr	r2, [pc, #496]	; (80066dc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80064ea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80064ee:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80064f2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80064f6:	f00d ff0f 	bl	8014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80064fa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80064fe:	462a      	mov	r2, r5
 8006500:	4648      	mov	r0, r9
 8006502:	9300      	str	r3, [sp, #0]
 8006504:	4629      	mov	r1, r5
 8006506:	23f0      	movs	r3, #240	; 0xf0
 8006508:	f7fc fa33 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 800650c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800650e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006512:	66a3      	str	r3, [r4, #104]	; 0x68
 8006514:	4649      	mov	r1, r9
 8006516:	4630      	mov	r0, r6
 8006518:	f009 fb32 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800651c:	462a      	mov	r2, r5
 800651e:	4640      	mov	r0, r8
 8006520:	4629      	mov	r1, r5
 8006522:	f7fc fa19 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006526:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006528:	4640      	mov	r0, r8
 800652a:	a90a      	add	r1, sp, #40	; 0x28
 800652c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006530:	f00c feff 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006534:	4641      	mov	r1, r8
 8006536:	4630      	mov	r0, r6
 8006538:	f009 fb22 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800653c:	4658      	mov	r0, fp
 800653e:	f240 1201 	movw	r2, #257	; 0x101
 8006542:	2121      	movs	r1, #33	; 0x21
 8006544:	f7fc fa08 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006548:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800654a:	aa0a      	add	r2, sp, #40	; 0x28
 800654c:	a909      	add	r1, sp, #36	; 0x24
 800654e:	4658      	mov	r0, fp
 8006550:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006554:	2302      	movs	r3, #2
 8006556:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800655a:	f00c fcf4 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800655e:	2323      	movs	r3, #35	; 0x23
        updateTextPosition();
 8006560:	4658      	mov	r0, fp
 8006562:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006566:	f7fc fa3b 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800656a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 800656e:	330c      	adds	r3, #12
        color = col;
 8006570:	f04f 39ff 	mov.w	r9, #4294967295
 8006574:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006578:	4659      	mov	r1, fp
 800657a:	4630      	mov	r0, r6
        colorPressed = col;
 800657c:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006580:	f009 fafe 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006584:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006588:	223c      	movs	r2, #60	; 0x3c
 800658a:	ee18 0a90 	vmov	r0, s17
 800658e:	2117      	movs	r1, #23
 8006590:	f7fc f9e2 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006594:	ee18 1a90 	vmov	r1, s17
 8006598:	4640      	mov	r0, r8
        color = newColor;
 800659a:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800659e:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80065a2:	f00b fe7b 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065a6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065aa:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80065ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80065b2:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80066e0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 80065b6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80065ba:	2324      	movs	r3, #36	; 0x24
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80065bc:	ee18 0a90 	vmov	r0, s17
 80065c0:	a90a      	add	r1, sp, #40	; 0x28
 80065c2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80065c6:	f00c f903 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065ca:	ee18 1a90 	vmov	r1, s17
 80065ce:	4630      	mov	r0, r6
 80065d0:	f009 fad6 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80065d4:	230a      	movs	r3, #10
 80065d6:	9300      	str	r3, [sp, #0]
 80065d8:	2232      	movs	r2, #50	; 0x32
 80065da:	23f0      	movs	r3, #240	; 0xf0
 80065dc:	4629      	mov	r1, r5
 80065de:	4638      	mov	r0, r7
 80065e0:	f7fc f9c7 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80065e4:	9b03      	ldr	r3, [sp, #12]
 80065e6:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065ea:	22a0      	movs	r2, #160	; 0xa0
 80065ec:	4611      	mov	r1, r2
 80065ee:	4638      	mov	r0, r7
 80065f0:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80065f4:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80065f8:	f00b fca4 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065fc:	22a0      	movs	r2, #160	; 0xa0
 80065fe:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006602:	4638      	mov	r0, r7
 8006604:	f00b fca9 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006608:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800660c:	2b20      	cmp	r3, #32
 800660e:	d005      	beq.n	800661c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006610:	2320      	movs	r3, #32
 8006612:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006616:	4638      	mov	r0, r7
 8006618:	f00b fb9e 	bl	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800661c:	4638      	mov	r0, r7
 800661e:	2101      	movs	r1, #1
 8006620:	f00b fca6 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006624:	4639      	mov	r1, r7
 8006626:	4630      	mov	r0, r6
 8006628:	f009 faaa 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800662c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006630:	ee18 0a10 	vmov	r0, s16
 8006634:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006636:	2500      	movs	r5, #0
 8006638:	2145      	movs	r1, #69	; 0x45
 800663a:	f7fc f98d 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800663e:	ee18 1a10 	vmov	r1, s16
 8006642:	4640      	mov	r0, r8
        color = newColor;
 8006644:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006648:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800664c:	f00b fe26 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006650:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006654:	ee18 3a10 	vmov	r3, s16
 8006658:	333c      	adds	r3, #60	; 0x3c
 800665a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800665e:	2325      	movs	r3, #37	; 0x25
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006660:	ee18 0a10 	vmov	r0, s16
 8006664:	a90a      	add	r1, sp, #40	; 0x28
 8006666:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800666a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800666e:	f00c f8af 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006672:	ee18 1a10 	vmov	r1, s16
 8006676:	4630      	mov	r0, r6
 8006678:	f009 fa82 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800667c:	220c      	movs	r2, #12
 800667e:	4650      	mov	r0, sl
 8006680:	2136      	movs	r1, #54	; 0x36
 8006682:	f7fc f969 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006686:	4651      	mov	r1, sl
 8006688:	4640      	mov	r0, r8
        color = newColor;
 800668a:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 800668e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006692:	f00b fe03 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006696:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800669a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800669e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80066a2:	2326      	movs	r3, #38	; 0x26
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80066a4:	a90a      	add	r1, sp, #40	; 0x28
 80066a6:	4650      	mov	r0, sl
 80066a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80066ac:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80066b0:	f00c f88e 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066b4:	4630      	mov	r0, r6
 80066b6:	4651      	mov	r1, sl
 80066b8:	f009 fa62 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80066bc:	4620      	mov	r0, r4
 80066be:	b00d      	add	sp, #52	; 0x34
 80066c0:	ecbd 8b02 	vpop	{d8}
 80066c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066c8:	0802dd20 	.word	0x0802dd20
 80066cc:	0802eba4 	.word	0x0802eba4
 80066d0:	0802edf0 	.word	0x0802edf0
 80066d4:	0802e8d8 	.word	0x0802e8d8
 80066d8:	0802dd08 	.word	0x0802dd08
 80066dc:	08006405 	.word	0x08006405
 80066e0:	0802c650 	.word	0x0802c650

080066e4 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80066e4:	4770      	bx	lr

080066e6 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066e6:	4770      	bx	lr

080066e8 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80066e8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066ea:	68c2      	ldr	r2, [r0, #12]
 80066ec:	6844      	ldr	r4, [r0, #4]
 80066ee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80066f0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80066f2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80066f6:	07d2      	lsls	r2, r2, #31
 80066f8:	bf48      	it	mi
 80066fa:	5962      	ldrmi	r2, [r4, r5]
 80066fc:	689b      	ldr	r3, [r3, #8]
    }
 80066fe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006700:	bf48      	it	mi
 8006702:	58d3      	ldrmi	r3, [r2, r3]
 8006704:	4718      	bx	r3

08006706 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006706:	6843      	ldr	r3, [r0, #4]
 8006708:	b12b      	cbz	r3, 8006716 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800670a:	6883      	ldr	r3, [r0, #8]
 800670c:	b92b      	cbnz	r3, 800671a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800670e:	68c0      	ldr	r0, [r0, #12]
 8006710:	f000 0001 	and.w	r0, r0, #1
 8006714:	4770      	bx	lr
 8006716:	4618      	mov	r0, r3
 8006718:	4770      	bx	lr
 800671a:	2001      	movs	r0, #1
    }
 800671c:	4770      	bx	lr

0800671e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800671e:	b510      	push	{r4, lr}
 8006720:	2110      	movs	r1, #16
 8006722:	4604      	mov	r4, r0
 8006724:	f023 fbb9 	bl	8029e9a <_ZdlPvj>
 8006728:	4620      	mov	r0, r4
 800672a:	bd10      	pop	{r4, pc}

0800672c <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800672c:	b510      	push	{r4, lr}
 800672e:	4b03      	ldr	r3, [pc, #12]	; (800673c <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006730:	6003      	str	r3, [r0, #0]
 8006732:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006734:	f00d fdfa 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006738:	4620      	mov	r0, r4
 800673a:	bd10      	pop	{r4, pc}
 800673c:	0802dd6c 	.word	0x0802dd6c

08006740 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006740:	b507      	push	{r0, r1, r2, lr}
 8006742:	4b07      	ldr	r3, [pc, #28]	; (8006760 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006744:	6003      	str	r3, [r0, #0]
 8006746:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006748:	f00d fdf0 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800674c:	9801      	ldr	r0, [sp, #4]
 800674e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006752:	f023 fba2 	bl	8029e9a <_ZdlPvj>
 8006756:	9801      	ldr	r0, [sp, #4]
 8006758:	b003      	add	sp, #12
 800675a:	f85d fb04 	ldr.w	pc, [sp], #4
 800675e:	bf00      	nop
 8006760:	0802dd6c 	.word	0x0802dd6c

08006764 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006764:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006766:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800676a:	4299      	cmp	r1, r3
{
 800676c:	4604      	mov	r4, r0
 800676e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006770:	d103      	bne.n	800677a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006772:	f00f fadd 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006776:	f7fd fba3 	bl	8003ec0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800677a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800677e:	429d      	cmp	r5, r3
 8006780:	d103      	bne.n	800678a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006782:	f00f fad5 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006786:	f7fd fbbb 	bl	8003f00 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800678a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800678e:	42a5      	cmp	r5, r4
 8006790:	d105      	bne.n	800679e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006792:	f00f facd 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006796:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 800679a:	f7fd bbc1 	b.w	8003f20 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 800679e:	bd38      	pop	{r3, r4, r5, pc}

080067a0 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80067a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067a4:	ed2d 8b06 	vpush	{d8-d10}
 80067a8:	4604      	mov	r4, r0
 80067aa:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80067ac:	46a3      	mov	fp, r4
 80067ae:	2500      	movs	r5, #0
 80067b0:	f010 ff3e 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
 80067b4:	4b66      	ldr	r3, [pc, #408]	; (8006950 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80067b6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80067b8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80067bc:	2226      	movs	r2, #38	; 0x26
 80067be:	4629      	mov	r1, r5
 80067c0:	4658      	mov	r0, fp
 80067c2:	f024 fb82 	bl	802aeca <memset>
 80067c6:	4658      	mov	r0, fp
 80067c8:	f7fc f8f8 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 80067cc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80067d0:	26ff      	movs	r6, #255	; 0xff
 80067d2:	4b60      	ldr	r3, [pc, #384]	; (8006954 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80067d4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80067d6:	2226      	movs	r2, #38	; 0x26
 80067d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80067dc:	4629      	mov	r1, r5
 80067de:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80067e2:	4650      	mov	r0, sl
 80067e4:	66a5      	str	r5, [r4, #104]	; 0x68
 80067e6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80067ea:	f024 fb6e 	bl	802aeca <memset>
 80067ee:	4650      	mov	r0, sl
 80067f0:	f7fc f8e4 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 80067f4:	4b58      	ldr	r3, [pc, #352]	; (8006958 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 80067f6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80067f8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80067fc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006800:	a90a      	add	r1, sp, #40	; 0x28
 8006802:	4650      	mov	r0, sl
 8006804:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006808:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800680c:	f00c fd91 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006810:	4648      	mov	r0, r9
 8006812:	f7fc f929 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006816:	4b51      	ldr	r3, [pc, #324]	; (800695c <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006818:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800681c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006820:	4618      	mov	r0, r3
 8006822:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006826:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800682a:	ee08 3a90 	vmov	s17, r3
 800682e:	f7fc f91b 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006832:	4638      	mov	r0, r7
 8006834:	f00b fa70 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8006838:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800683c:	4618      	mov	r0, r3
 800683e:	9303      	str	r3, [sp, #12]
 8006840:	f7fb feb8 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006844:	4b46      	ldr	r3, [pc, #280]	; (8006960 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006846:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800684a:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800684e:	3324      	adds	r3, #36	; 0x24
 8006850:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006854:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006858:	4640      	mov	r0, r8
 800685a:	f7fc f905 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 800685e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006862:	4618      	mov	r0, r3
 8006864:	ee08 3a10 	vmov	s16, r3
 8006868:	f7fc f8fe 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 800686c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006870:	4618      	mov	r0, r3
 8006872:	ee09 3a10 	vmov	s18, r3
 8006876:	f00c fe93 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800687a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800687e:	4618      	mov	r0, r3
 8006880:	ee09 3a90 	vmov	s19, r3
 8006884:	f00c fe8c 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006888:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800688c:	4618      	mov	r0, r3
 800688e:	ee0a 3a10 	vmov	s20, r3
 8006892:	f00c fe85 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006896:	4a33      	ldr	r2, [pc, #204]	; (8006964 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006898:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800689c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80068a0:	4a31      	ldr	r2, [pc, #196]	; (8006968 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80068a2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80068a6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80068aa:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80068ae:	f00d fd33 	bl	8014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80068b2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80068b6:	462a      	mov	r2, r5
 80068b8:	4658      	mov	r0, fp
 80068ba:	9300      	str	r3, [sp, #0]
 80068bc:	4629      	mov	r1, r5
 80068be:	23f0      	movs	r3, #240	; 0xf0
 80068c0:	f7fc f857 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80068c4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80068c6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80068ca:	66a3      	str	r3, [r4, #104]	; 0x68
 80068cc:	4659      	mov	r1, fp
 80068ce:	4630      	mov	r0, r6
 80068d0:	f009 f956 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80068d4:	462a      	mov	r2, r5
 80068d6:	4650      	mov	r0, sl
 80068d8:	4629      	mov	r1, r5
 80068da:	f7fc f83d 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80068de:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80068e0:	4650      	mov	r0, sl
 80068e2:	a90a      	add	r1, sp, #40	; 0x28
 80068e4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80068e8:	f00c fd23 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80068ec:	4651      	mov	r1, sl
 80068ee:	4630      	mov	r0, r6
 80068f0:	f009 f946 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80068f4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80068f8:	2156      	movs	r1, #86	; 0x56
 80068fa:	4648      	mov	r0, r9
 80068fc:	f7fc f82c 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006900:	f04f 33ff 	mov.w	r3, #4294967295
 8006904:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006908:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800690c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006910:	f10d 0b10 	add.w	fp, sp, #16
 8006914:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006918:	4649      	mov	r1, r9
 800691a:	4658      	mov	r0, fp
 800691c:	4798      	blx	r3
 800691e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006922:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006926:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800692a:	4b10      	ldr	r3, [pc, #64]	; (800696c <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 800692c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 800692e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006932:	b92b      	cbnz	r3, 8006940 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006934:	4b0e      	ldr	r3, [pc, #56]	; (8006970 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006936:	4a0f      	ldr	r2, [pc, #60]	; (8006974 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006938:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800693a:	480f      	ldr	r0, [pc, #60]	; (8006978 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 800693c:	f024 f8c0 	bl	802aac0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006940:	4b0e      	ldr	r3, [pc, #56]	; (800697c <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006942:	881b      	ldrh	r3, [r3, #0]
 8006944:	2b1e      	cmp	r3, #30
 8006946:	d81d      	bhi.n	8006984 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006948:	4b0d      	ldr	r3, [pc, #52]	; (8006980 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 800694a:	4a0a      	ldr	r2, [pc, #40]	; (8006974 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 800694c:	2161      	movs	r1, #97	; 0x61
 800694e:	e7f4      	b.n	800693a <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8006950:	0802dd6c 	.word	0x0802dd6c
 8006954:	0802eba4 	.word	0x0802eba4
 8006958:	0802edf0 	.word	0x0802edf0
 800695c:	0802c6f0 	.word	0x0802c6f0
 8006960:	0802e8d8 	.word	0x0802e8d8
 8006964:	0802dd54 	.word	0x0802dd54
 8006968:	08006765 	.word	0x08006765
 800696c:	20013314 	.word	0x20013314
 8006970:	0802c4a0 	.word	0x0802c4a0
 8006974:	0802c5a5 	.word	0x0802c5a5
 8006978:	0802c51d 	.word	0x0802c51d
 800697c:	20013318 	.word	0x20013318
 8006980:	0802c564 	.word	0x0802c564
        return texts->getText(typedTextId);
 8006984:	4b95      	ldr	r3, [pc, #596]	; (8006bdc <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8006986:	211e      	movs	r1, #30
 8006988:	6818      	ldr	r0, [r3, #0]
 800698a:	f001 fab5 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 800698e:	4a94      	ldr	r2, [pc, #592]	; (8006be0 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006990:	4603      	mov	r3, r0
 8006992:	2104      	movs	r1, #4
 8006994:	4650      	mov	r0, sl
 8006996:	f012 fb79 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800699a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800699e:	4648      	mov	r0, r9
 80069a0:	f00b fef6 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80069a4:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006be4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80069a8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80069ac:	231f      	movs	r3, #31
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 80069ae:	a90a      	add	r1, sp, #40	; 0x28
 80069b0:	4648      	mov	r0, r9
 80069b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069b6:	f00b ff0b 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069ba:	4649      	mov	r1, r9
 80069bc:	4630      	mov	r0, r6
 80069be:	f009 f8df 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 80069c2:	223c      	movs	r2, #60	; 0x3c
 80069c4:	ee18 0a90 	vmov	r0, s17
 80069c8:	2129      	movs	r1, #41	; 0x29
 80069ca:	f7fb ffc5 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80069ce:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80069d2:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80069d6:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80069da:	4658      	mov	r0, fp
        linespace = space;
 80069dc:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80069e0:	f00b fc5c 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069e4:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80069e8:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80069ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069f0:	232e      	movs	r3, #46	; 0x2e
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 80069f2:	ee18 0a90 	vmov	r0, s17
 80069f6:	a90a      	add	r1, sp, #40	; 0x28
 80069f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069fc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006a00:	f00b fee6 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a04:	ee18 1a90 	vmov	r1, s17
 8006a08:	4630      	mov	r0, r6
 8006a0a:	f009 f8b9 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006a0e:	230a      	movs	r3, #10
 8006a10:	9300      	str	r3, [sp, #0]
 8006a12:	2232      	movs	r2, #50	; 0x32
 8006a14:	23f0      	movs	r3, #240	; 0xf0
 8006a16:	4629      	mov	r1, r5
 8006a18:	4638      	mov	r0, r7
 8006a1a:	f7fb ffaa 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a1e:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a22:	22a0      	movs	r2, #160	; 0xa0
 8006a24:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006a28:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006a2c:	9b03      	ldr	r3, [sp, #12]
 8006a2e:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006a32:	4611      	mov	r1, r2
 8006a34:	4638      	mov	r0, r7
 8006a36:	f00b fa85 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a3a:	22a0      	movs	r2, #160	; 0xa0
 8006a3c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006a40:	4638      	mov	r0, r7
 8006a42:	f00b fa8a 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006a46:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006a4a:	2b20      	cmp	r3, #32
 8006a4c:	d005      	beq.n	8006a5a <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8006a4e:	2320      	movs	r3, #32
 8006a50:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006a54:	4638      	mov	r0, r7
 8006a56:	f00b f97f 	bl	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006a5a:	4638      	mov	r0, r7
 8006a5c:	2101      	movs	r1, #1
 8006a5e:	f00b fa87 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006a62:	4639      	mov	r1, r7
 8006a64:	4630      	mov	r0, r6
 8006a66:	f009 f88b 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006a6a:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006a6e:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006a70:	2223      	movs	r2, #35	; 0x23
 8006a72:	4640      	mov	r0, r8
        linespace = space;
 8006a74:	f04f 0a00 	mov.w	sl, #0
 8006a78:	2145      	movs	r1, #69	; 0x45
 8006a7a:	f7fb ff6d 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006a7e:	4641      	mov	r1, r8
 8006a80:	4638      	mov	r0, r7
        color = newColor;
 8006a82:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006a86:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006a8a:	f00b fc07 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a8e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006a92:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006a96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a9a:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006be4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8006a9e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006aa2:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006aa4:	a90a      	add	r1, sp, #40	; 0x28
 8006aa6:	4640      	mov	r0, r8
 8006aa8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006aac:	f00b fe90 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ab0:	4641      	mov	r1, r8
 8006ab2:	4630      	mov	r0, r6
 8006ab4:	f009 f864 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006ab8:	ee18 0a10 	vmov	r0, s16
 8006abc:	220c      	movs	r2, #12
 8006abe:	2136      	movs	r1, #54	; 0x36
 8006ac0:	f7fb ff4a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006ac4:	ee18 1a10 	vmov	r1, s16
 8006ac8:	4638      	mov	r0, r7
        color = newColor;
 8006aca:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006ace:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006ad2:	f00b fbe3 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ad6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006ada:	ee18 3a10 	vmov	r3, s16
 8006ade:	333c      	adds	r3, #60	; 0x3c
 8006ae0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ae4:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006ae6:	ee18 0a10 	vmov	r0, s16
 8006aea:	a90a      	add	r1, sp, #40	; 0x28
 8006aec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006af0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006af4:	f00b fe6c 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006af8:	ee18 1a10 	vmov	r1, s16
 8006afc:	4630      	mov	r0, r6
 8006afe:	f009 f83f 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006b02:	ee19 0a10 	vmov	r0, s18
 8006b06:	22f0      	movs	r2, #240	; 0xf0
 8006b08:	2121      	movs	r1, #33	; 0x21
 8006b0a:	f7fb ff25 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006b0e:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b12:	aa0a      	add	r2, sp, #40	; 0x28
 8006b14:	f04f 0802 	mov.w	r8, #2
 8006b18:	a909      	add	r1, sp, #36	; 0x24
 8006b1a:	ee19 0a10 	vmov	r0, s18
 8006b1e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b22:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006b26:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b2a:	f00c fa0c 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006b2e:	233f      	movs	r3, #63	; 0x3f
 8006b30:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006b34:	3710      	adds	r7, #16
        updateTextPosition();
 8006b36:	ee19 0a10 	vmov	r0, s18
 8006b3a:	f7fb ff51 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b3e:	ee19 1a10 	vmov	r1, s18
 8006b42:	4630      	mov	r0, r6
        colorPressed = col;
 8006b44:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006b48:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006b4c:	f009 f818 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006b50:	ee19 0a90 	vmov	r0, s19
 8006b54:	22aa      	movs	r2, #170	; 0xaa
 8006b56:	2121      	movs	r1, #33	; 0x21
 8006b58:	f7fb fefe 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b5c:	aa0a      	add	r2, sp, #40	; 0x28
 8006b5e:	a909      	add	r1, sp, #36	; 0x24
 8006b60:	ee19 0a90 	vmov	r0, s19
 8006b64:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b68:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b6c:	f00c f9eb 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b70:	233e      	movs	r3, #62	; 0x3e
 8006b72:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006b76:	ee19 0a90 	vmov	r0, s19
 8006b7a:	f7fb ff31 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b7e:	ee19 1a90 	vmov	r1, s19
 8006b82:	4630      	mov	r0, r6
        colorPressed = col;
 8006b84:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006b88:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006b8c:	f008 fff8 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006b90:	ee1a 0a10 	vmov	r0, s20
 8006b94:	2264      	movs	r2, #100	; 0x64
 8006b96:	2121      	movs	r1, #33	; 0x21
 8006b98:	f7fb fede 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b9c:	aa0a      	add	r2, sp, #40	; 0x28
 8006b9e:	a909      	add	r1, sp, #36	; 0x24
 8006ba0:	ee1a 0a10 	vmov	r0, s20
 8006ba4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ba8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006bac:	f00c f9cb 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006bb0:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006bb2:	ee1a 0a10 	vmov	r0, s20
 8006bb6:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006bba:	f7fb ff11 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006bbe:	4630      	mov	r0, r6
        colorPressed = col;
 8006bc0:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006bc4:	ee1a 1a10 	vmov	r1, s20
 8006bc8:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006bcc:	f008 ffd8 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006bd0:	4620      	mov	r0, r4
 8006bd2:	b00d      	add	sp, #52	; 0x34
 8006bd4:	ecbd 8b06 	vpop	{d8-d10}
 8006bd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006bdc:	20013320 	.word	0x20013320
 8006be0:	0802c5dd 	.word	0x0802c5dd
 8006be4:	0802c650 	.word	0x0802c650

08006be8 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006be8:	4770      	bx	lr

08006bea <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006bea:	4770      	bx	lr

08006bec <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006bec:	4770      	bx	lr

08006bee <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006bee:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006bf0:	68c2      	ldr	r2, [r0, #12]
 8006bf2:	6844      	ldr	r4, [r0, #4]
 8006bf4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006bf6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006bf8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006bfc:	07d2      	lsls	r2, r2, #31
 8006bfe:	bf48      	it	mi
 8006c00:	5962      	ldrmi	r2, [r4, r5]
 8006c02:	689b      	ldr	r3, [r3, #8]
    }
 8006c04:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c06:	bf48      	it	mi
 8006c08:	58d3      	ldrmi	r3, [r2, r3]
 8006c0a:	4718      	bx	r3

08006c0c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006c0c:	6843      	ldr	r3, [r0, #4]
 8006c0e:	b12b      	cbz	r3, 8006c1c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006c10:	6883      	ldr	r3, [r0, #8]
 8006c12:	b92b      	cbnz	r3, 8006c20 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006c14:	68c0      	ldr	r0, [r0, #12]
 8006c16:	f000 0001 	and.w	r0, r0, #1
 8006c1a:	4770      	bx	lr
 8006c1c:	4618      	mov	r0, r3
 8006c1e:	4770      	bx	lr
 8006c20:	2001      	movs	r0, #1
    }
 8006c22:	4770      	bx	lr

08006c24 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c24:	b510      	push	{r4, lr}
 8006c26:	2110      	movs	r1, #16
 8006c28:	4604      	mov	r4, r0
 8006c2a:	f023 f936 	bl	8029e9a <_ZdlPvj>
 8006c2e:	4620      	mov	r0, r4
 8006c30:	bd10      	pop	{r4, pc}
	...

08006c34 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006c34:	b510      	push	{r4, lr}
 8006c36:	4b03      	ldr	r3, [pc, #12]	; (8006c44 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006c38:	6003      	str	r3, [r0, #0]
 8006c3a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c3c:	f00d fb76 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c40:	4620      	mov	r0, r4
 8006c42:	bd10      	pop	{r4, pc}
 8006c44:	0802ddb8 	.word	0x0802ddb8

08006c48 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006c48:	b507      	push	{r0, r1, r2, lr}
 8006c4a:	4b07      	ldr	r3, [pc, #28]	; (8006c68 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006c4c:	6003      	str	r3, [r0, #0]
 8006c4e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c50:	f00d fb6c 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c54:	9801      	ldr	r0, [sp, #4]
 8006c56:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8006c5a:	f023 f91e 	bl	8029e9a <_ZdlPvj>
 8006c5e:	9801      	ldr	r0, [sp, #4]
 8006c60:	b003      	add	sp, #12
 8006c62:	f85d fb04 	ldr.w	pc, [sp], #4
 8006c66:	bf00      	nop
 8006c68:	0802ddb8 	.word	0x0802ddb8

08006c6c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8006c6c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8006c6e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8006c72:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8006c76:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006c78:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8006c7a:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006c7e:	d105      	bne.n	8006c8c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8006c80:	6803      	ldr	r3, [r0, #0]
 8006c82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c84:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8006c86:	2300      	movs	r3, #0
 8006c88:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8006c8c:	bd10      	pop	{r4, pc}

08006c8e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006c8e:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006c92:	4288      	cmp	r0, r1
{
 8006c94:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006c96:	d105      	bne.n	8006ca4 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006c98:	f00f f84a 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006c9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006ca0:	f7fd b91e 	b.w	8003ee0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006ca4:	bd08      	pop	{r3, pc}
	...

08006ca8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006cac:	ed2d 8b0a 	vpush	{d8-d12}
 8006cb0:	4604      	mov	r4, r0
 8006cb2:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8006cb4:	46a1      	mov	r9, r4
 8006cb6:	2500      	movs	r5, #0
 8006cb8:	f010 fcba 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
 8006cbc:	4baa      	ldr	r3, [pc, #680]	; (8006f68 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8006cbe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006cc0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006cc4:	2226      	movs	r2, #38	; 0x26
 8006cc6:	4629      	mov	r1, r5
 8006cc8:	4648      	mov	r0, r9
 8006cca:	f024 f8fe 	bl	802aeca <memset>
 8006cce:	4648      	mov	r0, r9
 8006cd0:	f7fb fe74 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8006cd4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006cd8:	26ff      	movs	r6, #255	; 0xff
 8006cda:	4ba4      	ldr	r3, [pc, #656]	; (8006f6c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8006cdc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006cde:	2226      	movs	r2, #38	; 0x26
 8006ce0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006ce4:	4629      	mov	r1, r5
 8006ce6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006cea:	4640      	mov	r0, r8
 8006cec:	66a5      	str	r5, [r4, #104]	; 0x68
 8006cee:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006cf2:	f024 f8ea 	bl	802aeca <memset>
 8006cf6:	4640      	mov	r0, r8
 8006cf8:	f7fb fe60 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8006cfc:	4b9c      	ldr	r3, [pc, #624]	; (8006f70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8006cfe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006d00:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006d04:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006d08:	a90a      	add	r1, sp, #40	; 0x28
 8006d0a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006d0e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006d10:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006d14:	f00c fb0d 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d18:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006d1c:	4658      	mov	r0, fp
 8006d1e:	f7fb fea3 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006d22:	4638      	mov	r0, r7
 8006d24:	f00b ffc8 	bl	8012cb8 <_ZN8touchgfx5GaugeC1Ev>
 8006d28:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8006d2c:	4618      	mov	r0, r3
 8006d2e:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006d32:	4e90      	ldr	r6, [pc, #576]	; (8006f74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
        : TextArea()
 8006d34:	f7fb fe98 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006d38:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8006d3c:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8006d40:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006d42:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8006d46:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8006d4a:	f7fb fe8d 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006d4e:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8006d52:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8006d56:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006d58:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8006d5c:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8006d60:	f7fb fe82 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006d64:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8006d68:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8006d6c:	4618      	mov	r0, r3
 8006d6e:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8006d72:	ee0a 3a90 	vmov	s21, r3
 8006d76:	f7fb fe77 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006d7a:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8006d7e:	4618      	mov	r0, r3
 8006d80:	ee0b 3a10 	vmov	s22, r3
 8006d84:	f7fb fe70 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006d88:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8006d8c:	4618      	mov	r0, r3
 8006d8e:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8006d92:	ee0b 3a90 	vmov	s23, r3
 8006d96:	f7fb fe67 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006d9a:	4650      	mov	r0, sl
 8006d9c:	f00a ffbc 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8006da0:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006da4:	4618      	mov	r0, r3
 8006da6:	9303      	str	r3, [sp, #12]
 8006da8:	f7fb fc04 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006dac:	4b72      	ldr	r3, [pc, #456]	; (8006f78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8006dae:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8006db2:	3324      	adds	r3, #36	; 0x24
 8006db4:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8006db8:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8006dbc:	4618      	mov	r0, r3
 8006dbe:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8006dc2:	ee08 3a10 	vmov	s16, r3
 8006dc6:	f7fb fe4f 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006dca:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8006dce:	4618      	mov	r0, r3
 8006dd0:	ee08 3a90 	vmov	s17, r3
 8006dd4:	f7fb fe48 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006dd8:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8006ddc:	4618      	mov	r0, r3
 8006dde:	ee0c 3a10 	vmov	s24, r3
 8006de2:	f00c fbdd 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006de6:	4a65      	ldr	r2, [pc, #404]	; (8006f7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006de8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006dec:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8006df0:	4a63      	ldr	r2, [pc, #396]	; (8006f80 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8006df2:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8006df6:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006dfa:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006dfe:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8006e02:	f00d fa89 	bl	8014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006e06:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006e0a:	462a      	mov	r2, r5
 8006e0c:	4648      	mov	r0, r9
 8006e0e:	9300      	str	r3, [sp, #0]
 8006e10:	4629      	mov	r1, r5
 8006e12:	23f0      	movs	r3, #240	; 0xf0
 8006e14:	f7fb fdad 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e18:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006e1a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006e1e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006e20:	4649      	mov	r1, r9
 8006e22:	4630      	mov	r0, r6
 8006e24:	f008 feac 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006e28:	462a      	mov	r2, r5
 8006e2a:	4640      	mov	r0, r8
 8006e2c:	4629      	mov	r1, r5
 8006e2e:	f7fb fd93 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006e32:	f04f 0908 	mov.w	r9, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006e36:	4640      	mov	r0, r8
 8006e38:	a90a      	add	r1, sp, #40	; 0x28
 8006e3a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8006e3e:	f00c fa78 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e42:	4641      	mov	r1, r8
 8006e44:	4630      	mov	r0, r6
 8006e46:	f008 fe9b 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8006e4a:	223c      	movs	r2, #60	; 0x3c
 8006e4c:	4658      	mov	r0, fp
 8006e4e:	211f      	movs	r1, #31
 8006e50:	f7fb fd82 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006e54:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 8006e58:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006e5c:	4659      	mov	r1, fp
        color = newColor;
 8006e5e:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006e62:	4640      	mov	r0, r8
        linespace = space;
 8006e64:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006e68:	f00b fa18 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e6c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e70:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006e74:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006e78:	4b42      	ldr	r3, [pc, #264]	; (8006f84 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8006e7a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8006e7c:	4658      	mov	r0, fp
 8006e7e:	232d      	movs	r3, #45	; 0x2d
 8006e80:	a90a      	add	r1, sp, #40	; 0x28
 8006e82:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e86:	f00b fca3 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e8a:	4659      	mov	r1, fp
 8006e8c:	4630      	mov	r0, r6
 8006e8e:	f008 fe77 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e92:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8006e94:	4638      	mov	r0, r7
 8006e96:	a90a      	add	r1, sp, #40	; 0x28
 8006e98:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e9c:	f008 fe02 	bl	800faa4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8006ea0:	236a      	movs	r3, #106	; 0x6a
 8006ea2:	4638      	mov	r0, r7
 8006ea4:	9300      	str	r3, [sp, #0]
 8006ea6:	225e      	movs	r2, #94	; 0x5e
 8006ea8:	23b8      	movs	r3, #184	; 0xb8
 8006eaa:	211c      	movs	r1, #28
 8006eac:	f7fb fd61 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8006eb0:	225c      	movs	r2, #92	; 0x5c
 8006eb2:	4611      	mov	r1, r2
 8006eb4:	4638      	mov	r0, r7
 8006eb6:	f00b ffaa 	bl	8012e0e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8006eba:	4638      	mov	r0, r7
 8006ebc:	225a      	movs	r2, #90	; 0x5a
 8006ebe:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8006ec2:	f00c f829 	bl	8012f18 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8006ec6:	462b      	mov	r3, r5
 8006ec8:	225a      	movs	r2, #90	; 0x5a
 8006eca:	4638      	mov	r0, r7
 8006ecc:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8006ed0:	9500      	str	r5, [sp, #0]
 8006ed2:	f008 fc94 	bl	800f7fe <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8006ed6:	4638      	mov	r0, r7
 8006ed8:	4629      	mov	r1, r5
 8006eda:	f00b ffc7 	bl	8012e6c <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8006ede:	464a      	mov	r2, r9
 8006ee0:	2335      	movs	r3, #53	; 0x35
 8006ee2:	4638      	mov	r0, r7
 8006ee4:	2105      	movs	r1, #5
 8006ee6:	f00b ff7d 	bl	8012de4 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8006eea:	4638      	mov	r0, r7
 8006eec:	2101      	movs	r1, #1
 8006eee:	f00b ff1b 	bl	8012d28 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8006ef2:	4638      	mov	r0, r7
 8006ef4:	2101      	movs	r1, #1
 8006ef6:	f00b ff1a 	bl	8012d2e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8006efa:	f04f 0b0f 	mov.w	fp, #15
 8006efe:	4639      	mov	r1, r7
 8006f00:	4630      	mov	r0, r6
 8006f02:	f008 fe3d 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006f06:	22e6      	movs	r2, #230	; 0xe6
 8006f08:	ee19 0a10 	vmov	r0, s18
 8006f0c:	23f0      	movs	r3, #240	; 0xf0
 8006f0e:	4629      	mov	r1, r5
 8006f10:	f8cd b000 	str.w	fp, [sp]
 8006f14:	f7fb fd2d 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006f18:	f04f 33ff 	mov.w	r3, #4294967295
 8006f1c:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8006f20:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8006f24:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8006f28:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006f2c:	4f16      	ldr	r7, [pc, #88]	; (8006f88 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8006f2e:	ee19 1a10 	vmov	r1, s18
 8006f32:	4640      	mov	r0, r8
 8006f34:	4798      	blx	r3
 8006f36:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006f3a:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8006f3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006f42:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8006f44:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 8006f48:	b92b      	cbnz	r3, 8006f56 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ae>
 8006f4a:	4b10      	ldr	r3, [pc, #64]	; (8006f8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8006f4c:	4a10      	ldr	r2, [pc, #64]	; (8006f90 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8006f4e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006f50:	4810      	ldr	r0, [pc, #64]	; (8006f94 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8006f52:	f023 fdb5 	bl	802aac0 <__assert_func>
 8006f56:	4b10      	ldr	r3, [pc, #64]	; (8006f98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 8006f58:	881b      	ldrh	r3, [r3, #0]
 8006f5a:	2b0d      	cmp	r3, #13
 8006f5c:	d820      	bhi.n	8006fa0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 8006f5e:	4b0f      	ldr	r3, [pc, #60]	; (8006f9c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>)
 8006f60:	4a0b      	ldr	r2, [pc, #44]	; (8006f90 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8006f62:	2161      	movs	r1, #97	; 0x61
 8006f64:	e7f4      	b.n	8006f50 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a8>
 8006f66:	bf00      	nop
 8006f68:	0802ddb8 	.word	0x0802ddb8
 8006f6c:	0802eba4 	.word	0x0802eba4
 8006f70:	0802edf0 	.word	0x0802edf0
 8006f74:	0802c6f0 	.word	0x0802c6f0
 8006f78:	0802e8d8 	.word	0x0802e8d8
 8006f7c:	0802dda0 	.word	0x0802dda0
 8006f80:	08006c8f 	.word	0x08006c8f
 8006f84:	0802c650 	.word	0x0802c650
 8006f88:	20013314 	.word	0x20013314
 8006f8c:	0802c4a0 	.word	0x0802c4a0
 8006f90:	0802c5a5 	.word	0x0802c5a5
 8006f94:	0802c51d 	.word	0x0802c51d
 8006f98:	20013318 	.word	0x20013318
 8006f9c:	0802c564 	.word	0x0802c564
        return texts->getText(typedTextId);
 8006fa0:	4bdf      	ldr	r3, [pc, #892]	; (8007320 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8006fa2:	210d      	movs	r1, #13
 8006fa4:	6818      	ldr	r0, [r3, #0]
 8006fa6:	f000 ffa7 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8006faa:	4ade      	ldr	r2, [pc, #888]	; (8007324 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 8006fac:	4603      	mov	r3, r0
 8006fae:	210a      	movs	r1, #10
 8006fb0:	4648      	mov	r0, r9
 8006fb2:	f012 f86b 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006fb6:	4bdc      	ldr	r3, [pc, #880]	; (8007328 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
        wc1 = value;
 8006fb8:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8006fbc:	ee19 0a10 	vmov	r0, s18
 8006fc0:	930a      	str	r3, [sp, #40]	; 0x28
 8006fc2:	a90a      	add	r1, sp, #40	; 0x28
 8006fc4:	2310      	movs	r3, #16
 8006fc6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006fca:	f00b fc01 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fce:	ee19 1a10 	vmov	r1, s18
 8006fd2:	4630      	mov	r0, r6
 8006fd4:	f008 fdd4 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8006fd8:	22d7      	movs	r2, #215	; 0xd7
 8006fda:	ee19 0a90 	vmov	r0, s19
 8006fde:	23f0      	movs	r3, #240	; 0xf0
 8006fe0:	4629      	mov	r1, r5
 8006fe2:	f8cd b000 	str.w	fp, [sp]
 8006fe6:	f7fb fcc4 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006fea:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8006fee:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8006ff2:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8006ff6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006ffa:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8006ffe:	4640      	mov	r0, r8
 8007000:	ee19 1a90 	vmov	r1, s19
 8007004:	4798      	blx	r3
 8007006:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800700a:	f504 7342 	add.w	r3, r4, #776	; 0x308
 800700e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007012:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007014:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007018:	2b00      	cmp	r3, #0
 800701a:	d096      	beq.n	8006f4a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800701c:	49c3      	ldr	r1, [pc, #780]	; (800732c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 800701e:	880b      	ldrh	r3, [r1, #0]
 8007020:	2b0e      	cmp	r3, #14
 8007022:	d99c      	bls.n	8006f5e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b6>
        return texts->getText(typedTextId);
 8007024:	4abe      	ldr	r2, [pc, #760]	; (8007320 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007026:	210e      	movs	r1, #14
 8007028:	6810      	ldr	r0, [r2, #0]
 800702a:	f000 ff65 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 800702e:	4abd      	ldr	r2, [pc, #756]	; (8007324 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 8007030:	4603      	mov	r3, r0
 8007032:	210a      	movs	r1, #10
 8007034:	4648      	mov	r0, r9
 8007036:	f012 f829 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800703a:	4bbb      	ldr	r3, [pc, #748]	; (8007328 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
 800703c:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007040:	a80a      	add	r0, sp, #40	; 0x28
 8007042:	4601      	mov	r1, r0
 8007044:	930a      	str	r3, [sp, #40]	; 0x28
 8007046:	ee19 0a90 	vmov	r0, s19
 800704a:	2311      	movs	r3, #17
 800704c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007050:	f00b fbbe 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007054:	ee19 1a90 	vmov	r1, s19
 8007058:	4630      	mov	r0, r6
 800705a:	f008 fd91 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 800705e:	22c8      	movs	r2, #200	; 0xc8
 8007060:	ee1a 0a10 	vmov	r0, s20
 8007064:	23f0      	movs	r3, #240	; 0xf0
 8007066:	4629      	mov	r1, r5
 8007068:	f8cd b000 	str.w	fp, [sp]
 800706c:	f7fb fc81 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007070:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 8007074:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 8007078:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800707c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007080:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007084:	ee1a 1a10 	vmov	r1, s20
 8007088:	4640      	mov	r0, r8
 800708a:	4798      	blx	r3
 800708c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007090:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007094:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007098:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800709a:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 800709e:	2b00      	cmp	r3, #0
 80070a0:	f43f af53 	beq.w	8006f4a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80070a4:	49a1      	ldr	r1, [pc, #644]	; (800732c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 80070a6:	880b      	ldrh	r3, [r1, #0]
 80070a8:	2b0f      	cmp	r3, #15
 80070aa:	f67f af58 	bls.w	8006f5e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b6>
        return texts->getText(typedTextId);
 80070ae:	4a9c      	ldr	r2, [pc, #624]	; (8007320 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        : typedTextId(id)
 80070b0:	4f9d      	ldr	r7, [pc, #628]	; (8007328 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
        return texts->getText(typedTextId);
 80070b2:	6810      	ldr	r0, [r2, #0]
 80070b4:	4659      	mov	r1, fp
 80070b6:	f000 ff1f 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 80070ba:	4a9a      	ldr	r2, [pc, #616]	; (8007324 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 80070bc:	4603      	mov	r3, r0
 80070be:	210a      	movs	r1, #10
 80070c0:	4648      	mov	r0, r9
 80070c2:	f011 ffe3 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80070c6:	2312      	movs	r3, #18
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 80070c8:	ee1a 0a10 	vmov	r0, s20
 80070cc:	a90a      	add	r1, sp, #40	; 0x28
 80070ce:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 80070d2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070d6:	970a      	str	r7, [sp, #40]	; 0x28
 80070d8:	f00b fb7a 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070dc:	ee1a 1a10 	vmov	r1, s20
 80070e0:	4630      	mov	r0, r6
 80070e2:	f008 fd4d 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 80070e6:	224c      	movs	r2, #76	; 0x4c
 80070e8:	ee1a 0a90 	vmov	r0, s21
 80070ec:	2171      	movs	r1, #113	; 0x71
 80070ee:	f7fb fc33 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80070f2:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80070f6:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 80070fa:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80070fe:	4640      	mov	r0, r8
        linespace = space;
 8007100:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007104:	f00b f8ca 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007108:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800710c:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007110:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007114:	2313      	movs	r3, #19
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8007116:	ee1a 0a90 	vmov	r0, s21
 800711a:	a90a      	add	r1, sp, #40	; 0x28
 800711c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007120:	970a      	str	r7, [sp, #40]	; 0x28
 8007122:	f00b fb55 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007126:	ee1a 1a90 	vmov	r1, s21
 800712a:	4630      	mov	r0, r6
 800712c:	f008 fd28 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007130:	22b9      	movs	r2, #185	; 0xb9
 8007132:	ee1b 0a10 	vmov	r0, s22
 8007136:	4629      	mov	r1, r5
 8007138:	f7fb fc0e 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800713c:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007140:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8007144:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 8007148:	4640      	mov	r0, r8
        linespace = space;
 800714a:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 800714e:	f00b f8a5 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007152:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007156:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 800715a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800715e:	2314      	movs	r3, #20
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007160:	ee1b 0a10 	vmov	r0, s22
 8007164:	a90a      	add	r1, sp, #40	; 0x28
 8007166:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800716a:	970a      	str	r7, [sp, #40]	; 0x28
 800716c:	f00b fb30 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007170:	ee1b 1a10 	vmov	r1, s22
 8007174:	4630      	mov	r0, r6
 8007176:	f008 fd03 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 800717a:	22b9      	movs	r2, #185	; 0xb9
 800717c:	ee1b 0a90 	vmov	r0, s23
 8007180:	21d9      	movs	r1, #217	; 0xd9
 8007182:	f7fb fbe9 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007186:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800718a:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 800718e:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 8007192:	4640      	mov	r0, r8
        linespace = space;
 8007194:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007198:	f00b f880 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800719c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071a0:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 80071a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071a8:	2315      	movs	r3, #21
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 80071aa:	ee1b 0a90 	vmov	r0, s23
 80071ae:	a90a      	add	r1, sp, #40	; 0x28
 80071b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071b4:	970a      	str	r7, [sp, #40]	; 0x28
 80071b6:	f00b fb0b 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071ba:	ee1b 1a90 	vmov	r1, s23
 80071be:	4630      	mov	r0, r6
 80071c0:	f008 fcde 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80071c4:	230a      	movs	r3, #10
 80071c6:	9300      	str	r3, [sp, #0]
 80071c8:	2232      	movs	r2, #50	; 0x32
 80071ca:	23f0      	movs	r3, #240	; 0xf0
 80071cc:	4629      	mov	r1, r5
 80071ce:	4650      	mov	r0, sl
 80071d0:	f7fb fbcf 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80071d4:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071d8:	22a0      	movs	r2, #160	; 0xa0
 80071da:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80071de:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 80071e2:	9b03      	ldr	r3, [sp, #12]
 80071e4:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 80071e8:	4611      	mov	r1, r2
 80071ea:	4650      	mov	r0, sl
 80071ec:	f00a feaa 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071f0:	22a0      	movs	r2, #160	; 0xa0
 80071f2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80071f6:	4650      	mov	r0, sl
 80071f8:	f00a feaf 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80071fc:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007200:	2b20      	cmp	r3, #32
 8007202:	d005      	beq.n	8007210 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x568>
        lineWidthQ5 = widthQ5;
 8007204:	2320      	movs	r3, #32
 8007206:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800720a:	4650      	mov	r0, sl
 800720c:	f00a fda4 	bl	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007210:	4650      	mov	r0, sl
 8007212:	2101      	movs	r1, #1
 8007214:	f00a feac 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007218:	4651      	mov	r1, sl
 800721a:	4630      	mov	r0, r6
 800721c:	f008 fcb0 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007220:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8007224:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007226:	ee18 0a10 	vmov	r0, s16
 800722a:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800722c:	f04f 0900 	mov.w	r9, #0
 8007230:	2145      	movs	r1, #69	; 0x45
 8007232:	f7fb fb91 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007236:	ee18 1a10 	vmov	r1, s16
 800723a:	4628      	mov	r0, r5
        color = newColor;
 800723c:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 8007240:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007244:	f00b f82a 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007248:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800724c:	ee18 3a10 	vmov	r3, s16
 8007250:	333c      	adds	r3, #60	; 0x3c
 8007252:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007256:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007328 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>
 800725a:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800725e:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007260:	ee18 0a10 	vmov	r0, s16
 8007264:	a90a      	add	r1, sp, #40	; 0x28
 8007266:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800726a:	f00b fab1 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800726e:	ee18 1a10 	vmov	r1, s16
 8007272:	4630      	mov	r0, r6
 8007274:	f008 fc84 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007278:	ee18 0a90 	vmov	r0, s17
 800727c:	220c      	movs	r2, #12
 800727e:	2136      	movs	r1, #54	; 0x36
 8007280:	f7fb fb6a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007284:	ee18 1a90 	vmov	r1, s17
 8007288:	4628      	mov	r0, r5
        color = newColor;
 800728a:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 800728e:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007292:	f00b f803 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007296:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800729a:	ee18 3a90 	vmov	r3, s17
 800729e:	333c      	adds	r3, #60	; 0x3c
 80072a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072a4:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 80072a6:	ee18 0a90 	vmov	r0, s17
 80072aa:	a90a      	add	r1, sp, #40	; 0x28
 80072ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072b0:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80072b4:	f00b fa8c 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072b8:	ee18 1a90 	vmov	r1, s17
 80072bc:	4630      	mov	r0, r6
 80072be:	f008 fc5f 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 80072c2:	ee1c 0a10 	vmov	r0, s24
 80072c6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80072ca:	2121      	movs	r1, #33	; 0x21
 80072cc:	f7fb fb44 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80072d0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80072d2:	aa0a      	add	r2, sp, #40	; 0x28
 80072d4:	a909      	add	r1, sp, #36	; 0x24
 80072d6:	ee1c 0a10 	vmov	r0, s24
 80072da:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80072de:	2302      	movs	r3, #2
 80072e0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80072e4:	f00b fe2f 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80072e8:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 80072ea:	ee1c 0a10 	vmov	r0, s24
 80072ee:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 80072f2:	f7fb fb75 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80072f6:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 80072fa:	3304      	adds	r3, #4
 80072fc:	4630      	mov	r0, r6
 80072fe:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007302:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007306:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 800730a:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 800730e:	f008 fc37 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007312:	4620      	mov	r0, r4
 8007314:	b00d      	add	sp, #52	; 0x34
 8007316:	ecbd 8b0a 	vpop	{d8-d12}
 800731a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800731e:	bf00      	nop
 8007320:	20013320 	.word	0x20013320
 8007324:	0802c5dd 	.word	0x0802c5dd
 8007328:	0802c650 	.word	0x0802c650
 800732c:	20013318 	.word	0x20013318

08007330 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007330:	4770      	bx	lr

08007332 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007332:	4770      	bx	lr

08007334 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007334:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007336:	68c2      	ldr	r2, [r0, #12]
 8007338:	6844      	ldr	r4, [r0, #4]
 800733a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800733c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800733e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007342:	07d2      	lsls	r2, r2, #31
 8007344:	bf48      	it	mi
 8007346:	5962      	ldrmi	r2, [r4, r5]
 8007348:	689b      	ldr	r3, [r3, #8]
    }
 800734a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800734c:	bf48      	it	mi
 800734e:	58d3      	ldrmi	r3, [r2, r3]
 8007350:	4718      	bx	r3

08007352 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007352:	6843      	ldr	r3, [r0, #4]
 8007354:	b12b      	cbz	r3, 8007362 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007356:	6883      	ldr	r3, [r0, #8]
 8007358:	b92b      	cbnz	r3, 8007366 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800735a:	68c0      	ldr	r0, [r0, #12]
 800735c:	f000 0001 	and.w	r0, r0, #1
 8007360:	4770      	bx	lr
 8007362:	4618      	mov	r0, r3
 8007364:	4770      	bx	lr
 8007366:	2001      	movs	r0, #1
    }
 8007368:	4770      	bx	lr

0800736a <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800736a:	b510      	push	{r4, lr}
 800736c:	2110      	movs	r1, #16
 800736e:	4604      	mov	r4, r0
 8007370:	f022 fd93 	bl	8029e9a <_ZdlPvj>
 8007374:	4620      	mov	r0, r4
 8007376:	bd10      	pop	{r4, pc}

08007378 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007378:	b510      	push	{r4, lr}
 800737a:	4b03      	ldr	r3, [pc, #12]	; (8007388 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 800737c:	6003      	str	r3, [r0, #0]
 800737e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007380:	f00c ffd4 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007384:	4620      	mov	r0, r4
 8007386:	bd10      	pop	{r4, pc}
 8007388:	0802de08 	.word	0x0802de08

0800738c <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800738c:	b507      	push	{r0, r1, r2, lr}
 800738e:	4b07      	ldr	r3, [pc, #28]	; (80073ac <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007390:	6003      	str	r3, [r0, #0]
 8007392:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007394:	f00c ffca 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007398:	9801      	ldr	r0, [sp, #4]
 800739a:	f241 015c 	movw	r1, #4188	; 0x105c
 800739e:	f022 fd7c 	bl	8029e9a <_ZdlPvj>
 80073a2:	9801      	ldr	r0, [sp, #4]
 80073a4:	b003      	add	sp, #12
 80073a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80073aa:	bf00      	nop
 80073ac:	0802de08 	.word	0x0802de08

080073b0 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80073b0:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 80073b4:	4288      	cmp	r0, r1
{
 80073b6:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80073b8:	d105      	bne.n	80073c6 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80073ba:	f00e fcb9 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 80073be:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80073c2:	f7fc bd8d 	b.w	8003ee0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80073c6:	bd08      	pop	{r3, pc}

080073c8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 80073c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073cc:	ed2d 8b02 	vpush	{d8}
 80073d0:	4604      	mov	r4, r0
 80073d2:	b08d      	sub	sp, #52	; 0x34
 80073d4:	f010 f92c 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 80073d8:	4622      	mov	r2, r4
 80073da:	2500      	movs	r5, #0
 80073dc:	4ba4      	ldr	r3, [pc, #656]	; (8007670 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 80073de:	63e5      	str	r5, [r4, #60]	; 0x3c
 80073e0:	f842 3b40 	str.w	r3, [r2], #64
 80073e4:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 80073e8:	4629      	mov	r1, r5
 80073ea:	2226      	movs	r2, #38	; 0x26
 80073ec:	ee18 0a10 	vmov	r0, s16
 80073f0:	f023 fd6b 	bl	802aeca <memset>
 80073f4:	ee18 0a10 	vmov	r0, s16
 80073f8:	f7fb fae0 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 80073fc:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007400:	26ff      	movs	r6, #255	; 0xff
 8007402:	4b9c      	ldr	r3, [pc, #624]	; (8007674 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007404:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007406:	2226      	movs	r2, #38	; 0x26
 8007408:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800740c:	4629      	mov	r1, r5
 800740e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007412:	66a5      	str	r5, [r4, #104]	; 0x68
 8007414:	4658      	mov	r0, fp
 8007416:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800741a:	f023 fd56 	bl	802aeca <memset>
 800741e:	4658      	mov	r0, fp
 8007420:	f7fb facc 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8007424:	4b94      	ldr	r3, [pc, #592]	; (8007678 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8007426:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007428:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800742c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007430:	a90a      	add	r1, sp, #40	; 0x28
 8007432:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007436:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800743a:	4658      	mov	r0, fp
 800743c:	f00b ff79 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007440:	4638      	mov	r0, r7
 8007442:	f00a fc69 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 8007446:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800744a:	4618      	mov	r0, r3
 800744c:	9303      	str	r3, [sp, #12]
 800744e:	f7fb f8b1 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007452:	4b8a      	ldr	r3, [pc, #552]	; (800767c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007454:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007458:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 800745c:	3324      	adds	r3, #36	; 0x24
 800745e:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007462:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007466:	4650      	mov	r0, sl
 8007468:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 800746c:	f7fb fafc 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8007470:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8007474:	4648      	mov	r0, r9
 8007476:	f7fb faf7 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 800747a:	4640      	mov	r0, r8
 800747c:	f7fb faf4 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8007480:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007484:	4618      	mov	r0, r3
 8007486:	ee08 3a90 	vmov	s17, r3
 800748a:	f00c f889 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800748e:	4a7c      	ldr	r2, [pc, #496]	; (8007680 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8007490:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007494:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007498:	4a7a      	ldr	r2, [pc, #488]	; (8007684 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800749a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800749e:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80074a2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80074a6:	f00c ff37 	bl	8014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80074aa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80074ae:	462a      	mov	r2, r5
 80074b0:	ee18 0a10 	vmov	r0, s16
 80074b4:	9300      	str	r3, [sp, #0]
 80074b6:	4629      	mov	r1, r5
 80074b8:	23f0      	movs	r3, #240	; 0xf0
 80074ba:	f7fb fa5a 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80074be:	1d26      	adds	r6, r4, #4
        color = newColor;
 80074c0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80074c4:	66a3      	str	r3, [r4, #104]	; 0x68
 80074c6:	ee18 1a10 	vmov	r1, s16
 80074ca:	4630      	mov	r0, r6
 80074cc:	f008 fb58 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80074d0:	462a      	mov	r2, r5
 80074d2:	4629      	mov	r1, r5
 80074d4:	4658      	mov	r0, fp
 80074d6:	f7fb fa3f 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80074da:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80074dc:	a90a      	add	r1, sp, #40	; 0x28
 80074de:	4658      	mov	r0, fp
 80074e0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80074e4:	f00b ff25 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80074e8:	4659      	mov	r1, fp
 80074ea:	4630      	mov	r0, r6
 80074ec:	f008 fb48 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80074f0:	230a      	movs	r3, #10
 80074f2:	9300      	str	r3, [sp, #0]
 80074f4:	2232      	movs	r2, #50	; 0x32
 80074f6:	23f0      	movs	r3, #240	; 0xf0
 80074f8:	4629      	mov	r1, r5
 80074fa:	4638      	mov	r0, r7
 80074fc:	f7fb fa39 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007500:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007504:	22a0      	movs	r2, #160	; 0xa0
 8007506:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800750a:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 800750e:	9b03      	ldr	r3, [sp, #12]
 8007510:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007514:	4611      	mov	r1, r2
 8007516:	4638      	mov	r0, r7
 8007518:	f00a fd14 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800751c:	22a0      	movs	r2, #160	; 0xa0
 800751e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007522:	4638      	mov	r0, r7
 8007524:	f00a fd19 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007528:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 800752c:	2b20      	cmp	r3, #32
 800752e:	d005      	beq.n	800753c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8007530:	2320      	movs	r3, #32
 8007532:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007536:	4638      	mov	r0, r7
 8007538:	f00a fc0e 	bl	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800753c:	4638      	mov	r0, r7
 800753e:	2101      	movs	r1, #1
 8007540:	f00a fd16 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007544:	4639      	mov	r1, r7
 8007546:	4630      	mov	r0, r6
 8007548:	f008 fb1a 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800754c:	ad04      	add	r5, sp, #16
        color = newColor;
 800754e:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8007552:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 8007556:	2223      	movs	r2, #35	; 0x23
 8007558:	4650      	mov	r0, sl
 800755a:	2145      	movs	r1, #69	; 0x45
 800755c:	f7fb f9fc 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007560:	4651      	mov	r1, sl
 8007562:	4628      	mov	r0, r5
        color = newColor;
 8007564:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8007568:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 800756c:	f00a fe96 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007570:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007574:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8007578:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800757c:	4b42      	ldr	r3, [pc, #264]	; (8007688 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 800757e:	930a      	str	r3, [sp, #40]	; 0x28
 8007580:	2237      	movs	r2, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007582:	a90a      	add	r1, sp, #40	; 0x28
 8007584:	4650      	mov	r0, sl
 8007586:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800758a:	f00b f921 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800758e:	4651      	mov	r1, sl
 8007590:	4630      	mov	r0, r6
 8007592:	f008 faf5 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007596:	223c      	movs	r2, #60	; 0x3c
 8007598:	4648      	mov	r0, r9
 800759a:	211f      	movs	r1, #31
 800759c:	f7fb f9dc 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80075a0:	4649      	mov	r1, r9
 80075a2:	4628      	mov	r0, r5
        color = newColor;
 80075a4:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80075a8:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80075ac:	f00a fe76 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075b0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80075b4:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 80075b8:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80075bc:	4b32      	ldr	r3, [pc, #200]	; (8007688 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80075be:	930a      	str	r3, [sp, #40]	; 0x28
 80075c0:	222c      	movs	r2, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80075c2:	a90a      	add	r1, sp, #40	; 0x28
 80075c4:	4648      	mov	r0, r9
 80075c6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80075ca:	f00b f901 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075ce:	4649      	mov	r1, r9
 80075d0:	4630      	mov	r0, r6
 80075d2:	f008 fad5 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80075d6:	220c      	movs	r2, #12
 80075d8:	4640      	mov	r0, r8
 80075da:	2136      	movs	r1, #54	; 0x36
 80075dc:	f7fb f9bc 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80075e0:	4641      	mov	r1, r8
 80075e2:	4628      	mov	r0, r5
        color = newColor;
 80075e4:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80075e8:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80075ec:	f00a fe56 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075f0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80075f4:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 80075f8:	4b23      	ldr	r3, [pc, #140]	; (8007688 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80075fa:	930a      	str	r3, [sp, #40]	; 0x28
 80075fc:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007600:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007602:	a90a      	add	r1, sp, #40	; 0x28
 8007604:	4640      	mov	r0, r8
 8007606:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800760a:	f00b f8e1 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800760e:	4641      	mov	r1, r8
 8007610:	4630      	mov	r0, r6
 8007612:	f008 fab5 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007616:	ee18 0a90 	vmov	r0, s17
 800761a:	f240 1201 	movw	r2, #257	; 0x101
 800761e:	2121      	movs	r1, #33	; 0x21
 8007620:	f7fb f99a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007624:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007626:	aa0a      	add	r2, sp, #40	; 0x28
 8007628:	a909      	add	r1, sp, #36	; 0x24
 800762a:	ee18 0a90 	vmov	r0, s17
 800762e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007632:	2302      	movs	r3, #2
 8007634:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007638:	f00b fc85 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800763c:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 800763e:	ee18 0a90 	vmov	r0, s17
 8007642:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8007646:	f7fb f9cb 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800764a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 800764e:	330c      	adds	r3, #12
 8007650:	4630      	mov	r0, r6
        colorPressed = col;
 8007652:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8007656:	ee18 1a90 	vmov	r1, s17
 800765a:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 800765e:	f008 fa8f 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007662:	4620      	mov	r0, r4
 8007664:	b00d      	add	sp, #52	; 0x34
 8007666:	ecbd 8b02 	vpop	{d8}
 800766a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800766e:	bf00      	nop
 8007670:	0802de08 	.word	0x0802de08
 8007674:	0802eba4 	.word	0x0802eba4
 8007678:	0802edf0 	.word	0x0802edf0
 800767c:	0802e8d8 	.word	0x0802e8d8
 8007680:	0802ddf0 	.word	0x0802ddf0
 8007684:	080073b1 	.word	0x080073b1
 8007688:	0802c650 	.word	0x0802c650

0800768c <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 800768c:	4770      	bx	lr

0800768e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800768e:	4770      	bx	lr

08007690 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007690:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007692:	68c2      	ldr	r2, [r0, #12]
 8007694:	6844      	ldr	r4, [r0, #4]
 8007696:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007698:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800769a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800769e:	07d2      	lsls	r2, r2, #31
 80076a0:	bf48      	it	mi
 80076a2:	5962      	ldrmi	r2, [r4, r5]
 80076a4:	689b      	ldr	r3, [r3, #8]
    }
 80076a6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80076a8:	bf48      	it	mi
 80076aa:	58d3      	ldrmi	r3, [r2, r3]
 80076ac:	4718      	bx	r3

080076ae <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80076ae:	6843      	ldr	r3, [r0, #4]
 80076b0:	b12b      	cbz	r3, 80076be <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80076b2:	6883      	ldr	r3, [r0, #8]
 80076b4:	b92b      	cbnz	r3, 80076c2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80076b6:	68c0      	ldr	r0, [r0, #12]
 80076b8:	f000 0001 	and.w	r0, r0, #1
 80076bc:	4770      	bx	lr
 80076be:	4618      	mov	r0, r3
 80076c0:	4770      	bx	lr
 80076c2:	2001      	movs	r0, #1
    }
 80076c4:	4770      	bx	lr

080076c6 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80076c6:	b510      	push	{r4, lr}
 80076c8:	2110      	movs	r1, #16
 80076ca:	4604      	mov	r4, r0
 80076cc:	f022 fbe5 	bl	8029e9a <_ZdlPvj>
 80076d0:	4620      	mov	r0, r4
 80076d2:	bd10      	pop	{r4, pc}

080076d4 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80076d4:	b510      	push	{r4, lr}
 80076d6:	4b03      	ldr	r3, [pc, #12]	; (80076e4 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80076d8:	6003      	str	r3, [r0, #0]
 80076da:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80076dc:	f00c fe26 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80076e0:	4620      	mov	r0, r4
 80076e2:	bd10      	pop	{r4, pc}
 80076e4:	0802de54 	.word	0x0802de54

080076e8 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80076e8:	b507      	push	{r0, r1, r2, lr}
 80076ea:	4b07      	ldr	r3, [pc, #28]	; (8007708 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 80076ec:	6003      	str	r3, [r0, #0]
 80076ee:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80076f0:	f00c fe1c 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80076f4:	9801      	ldr	r0, [sp, #4]
 80076f6:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80076fa:	f022 fbce 	bl	8029e9a <_ZdlPvj>
 80076fe:	9801      	ldr	r0, [sp, #4]
 8007700:	b003      	add	sp, #12
 8007702:	f85d fb04 	ldr.w	pc, [sp], #4
 8007706:	bf00      	nop
 8007708:	0802de54 	.word	0x0802de54

0800770c <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800770c:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007710:	4288      	cmp	r0, r1
{
 8007712:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007714:	d105      	bne.n	8007722 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007716:	f00e fb0b 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 800771a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 800771e:	f7fc bbaf 	b.w	8003e80 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007722:	bd08      	pop	{r3, pc}

08007724 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007728:	ed2d 8b04 	vpush	{d8-d9}
 800772c:	4604      	mov	r4, r0
 800772e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007730:	46a3      	mov	fp, r4
 8007732:	2500      	movs	r5, #0
 8007734:	f00f ff7c 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
 8007738:	4bd1      	ldr	r3, [pc, #836]	; (8007a80 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 800773a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800773c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007740:	2226      	movs	r2, #38	; 0x26
 8007742:	4629      	mov	r1, r5
 8007744:	4658      	mov	r0, fp
 8007746:	f023 fbc0 	bl	802aeca <memset>
 800774a:	4658      	mov	r0, fp
 800774c:	f7fb f936 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8007750:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007754:	26ff      	movs	r6, #255	; 0xff
 8007756:	4bcb      	ldr	r3, [pc, #812]	; (8007a84 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007758:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800775a:	2226      	movs	r2, #38	; 0x26
 800775c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007760:	4629      	mov	r1, r5
 8007762:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007766:	4650      	mov	r0, sl
 8007768:	66a5      	str	r5, [r4, #104]	; 0x68
 800776a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800776e:	f023 fbac 	bl	802aeca <memset>
 8007772:	4650      	mov	r0, sl
 8007774:	f7fb f922 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8007778:	4bc3      	ldr	r3, [pc, #780]	; (8007a88 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 800777a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800777c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007780:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007784:	a90a      	add	r1, sp, #40	; 0x28
 8007786:	4650      	mov	r0, sl
 8007788:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800778c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007790:	f00b fdcf 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007794:	4648      	mov	r0, r9
 8007796:	f7fb f967 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 800779a:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800779e:	4bbb      	ldr	r3, [pc, #748]	; (8007a8c <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80077a0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80077a4:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80077a8:	4638      	mov	r0, r7
 80077aa:	f00a fab5 	bl	8011d18 <_ZN8touchgfx4LineC1Ev>
 80077ae:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80077b2:	4618      	mov	r0, r3
 80077b4:	9303      	str	r3, [sp, #12]
 80077b6:	f7fa fefd 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80077ba:	4bb5      	ldr	r3, [pc, #724]	; (8007a90 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80077bc:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80077c0:	3324      	adds	r3, #36	; 0x24
 80077c2:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80077c6:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 80077ca:	4618      	mov	r0, r3
 80077cc:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80077d0:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80077d4:	ee09 3a10 	vmov	s18, r3
 80077d8:	f00b fee2 	bl	80135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80077dc:	4640      	mov	r0, r8
 80077de:	f7fb f943 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80077e2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80077e6:	4618      	mov	r0, r3
 80077e8:	ee08 3a10 	vmov	s16, r3
 80077ec:	f7fb f93c 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80077f0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80077f4:	4618      	mov	r0, r3
 80077f6:	ee08 3a90 	vmov	s17, r3
 80077fa:	f7fb f935 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80077fe:	4aa5      	ldr	r2, [pc, #660]	; (8007a94 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007800:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007804:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007808:	4aa3      	ldr	r2, [pc, #652]	; (8007a98 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800780a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800780e:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007812:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007816:	f00c fd7f 	bl	8014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800781a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800781e:	462a      	mov	r2, r5
 8007820:	4658      	mov	r0, fp
 8007822:	9300      	str	r3, [sp, #0]
 8007824:	4629      	mov	r1, r5
 8007826:	23f0      	movs	r3, #240	; 0xf0
 8007828:	f7fb f8a3 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 800782c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800782e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007832:	66a3      	str	r3, [r4, #104]	; 0x68
 8007834:	4659      	mov	r1, fp
 8007836:	4630      	mov	r0, r6
 8007838:	f008 f9a2 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800783c:	462a      	mov	r2, r5
 800783e:	4650      	mov	r0, sl
 8007840:	4629      	mov	r1, r5
 8007842:	f7fb f889 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007846:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007848:	4650      	mov	r0, sl
 800784a:	a90a      	add	r1, sp, #40	; 0x28
 800784c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007850:	f00b fd6f 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007854:	4651      	mov	r1, sl
 8007856:	4630      	mov	r0, r6
 8007858:	f008 f992 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800785c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007860:	2156      	movs	r1, #86	; 0x56
 8007862:	4648      	mov	r0, r9
 8007864:	f7fb f878 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007868:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800786c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007870:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007874:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007878:	4650      	mov	r0, sl
 800787a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800787e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007882:	4649      	mov	r1, r9
 8007884:	4798      	blx	r3
 8007886:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800788a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800788e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007892:	4b82      	ldr	r3, [pc, #520]	; (8007a9c <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007894:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007896:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 800789a:	b92b      	cbnz	r3, 80078a8 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 800789c:	4b80      	ldr	r3, [pc, #512]	; (8007aa0 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 800789e:	4a81      	ldr	r2, [pc, #516]	; (8007aa4 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80078a0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80078a2:	4881      	ldr	r0, [pc, #516]	; (8007aa8 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80078a4:	f023 f90c 	bl	802aac0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80078a8:	4b80      	ldr	r3, [pc, #512]	; (8007aac <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80078aa:	881b      	ldrh	r3, [r3, #0]
 80078ac:	2b1a      	cmp	r3, #26
 80078ae:	d803      	bhi.n	80078b8 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80078b0:	4b7f      	ldr	r3, [pc, #508]	; (8007ab0 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80078b2:	4a7c      	ldr	r2, [pc, #496]	; (8007aa4 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80078b4:	2161      	movs	r1, #97	; 0x61
 80078b6:	e7f4      	b.n	80078a2 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80078b8:	4b7e      	ldr	r3, [pc, #504]	; (8007ab4 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80078ba:	211a      	movs	r1, #26
 80078bc:	6818      	ldr	r0, [r3, #0]
 80078be:	f000 fb1b 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 80078c2:	4a7d      	ldr	r2, [pc, #500]	; (8007ab8 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80078c4:	4603      	mov	r3, r0
 80078c6:	2104      	movs	r1, #4
 80078c8:	4650      	mov	r0, sl
 80078ca:	f011 fbdf 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80078ce:	4648      	mov	r0, r9
        wc1 = value;
 80078d0:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80078d4:	f00a ff5c 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80078d8:	4b78      	ldr	r3, [pc, #480]	; (8007abc <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 80078da:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 80078dc:	a90a      	add	r1, sp, #40	; 0x28
 80078de:	231b      	movs	r3, #27
 80078e0:	4648      	mov	r0, r9
 80078e2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078e6:	f00a ff73 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078ea:	4649      	mov	r1, r9
 80078ec:	4630      	mov	r0, r6
 80078ee:	f008 f947 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80078f2:	230a      	movs	r3, #10
 80078f4:	9300      	str	r3, [sp, #0]
 80078f6:	2232      	movs	r2, #50	; 0x32
 80078f8:	23f0      	movs	r3, #240	; 0xf0
 80078fa:	4629      	mov	r1, r5
 80078fc:	4638      	mov	r0, r7
 80078fe:	f7fb f838 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007902:	9b03      	ldr	r3, [sp, #12]
 8007904:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007908:	22a0      	movs	r2, #160	; 0xa0
 800790a:	4611      	mov	r1, r2
 800790c:	4638      	mov	r0, r7
 800790e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007912:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007916:	f00a fb15 	bl	8011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800791a:	22a0      	movs	r2, #160	; 0xa0
 800791c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007920:	4638      	mov	r0, r7
 8007922:	f00a fb1a 	bl	8011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007926:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800792a:	2b20      	cmp	r3, #32
 800792c:	d005      	beq.n	800793a <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 800792e:	2320      	movs	r3, #32
 8007930:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007934:	4638      	mov	r0, r7
 8007936:	f00a fa0f 	bl	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800793a:	4638      	mov	r0, r7
 800793c:	2101      	movs	r1, #1
 800793e:	f00a fb17 	bl	8011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007942:	4639      	mov	r1, r7
 8007944:	4630      	mov	r0, r6
 8007946:	f008 f91b 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800794a:	ee19 0a10 	vmov	r0, s18
 800794e:	22f0      	movs	r2, #240	; 0xf0
 8007950:	2121      	movs	r1, #33	; 0x21
 8007952:	f7fb f801 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007956:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007958:	aa0a      	add	r2, sp, #40	; 0x28
 800795a:	a909      	add	r1, sp, #36	; 0x24
 800795c:	ee19 0a10 	vmov	r0, s18
 8007960:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007964:	2302      	movs	r3, #2
 8007966:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800796a:	f00b faec 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800796e:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8007970:	ee19 0a10 	vmov	r0, s18
 8007974:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007978:	f7fb f832 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800797c:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8007980:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007984:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007988:	ee19 1a10 	vmov	r1, s18
 800798c:	4630      	mov	r0, r6
        colorPressed = col;
 800798e:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8007992:	ad04      	add	r5, sp, #16
 8007994:	f008 f8f4 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007998:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 800799c:	225b      	movs	r2, #91	; 0x5b
 800799e:	4640      	mov	r0, r8
 80079a0:	2105      	movs	r1, #5
 80079a2:	f7fa ffd9 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80079a6:	4641      	mov	r1, r8
 80079a8:	4628      	mov	r0, r5
        color = newColor;
 80079aa:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80079ae:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80079b2:	f00a fc73 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079b6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80079ba:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80079be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80079c2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007abc <_ZN20Project_InfoViewBaseC1Ev+0x398>
 80079c6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80079ca:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 80079cc:	a90a      	add	r1, sp, #40	; 0x28
 80079ce:	4640      	mov	r0, r8
 80079d0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079d4:	f00a fefc 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079d8:	4641      	mov	r1, r8
 80079da:	4630      	mov	r0, r6
 80079dc:	f008 f8d0 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80079e0:	ee18 0a10 	vmov	r0, s16
 80079e4:	2223      	movs	r2, #35	; 0x23
 80079e6:	2145      	movs	r1, #69	; 0x45
 80079e8:	f7fa ffb6 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80079ec:	ee18 1a10 	vmov	r1, s16
 80079f0:	4628      	mov	r0, r5
        color = newColor;
 80079f2:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80079f6:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80079fa:	f00a fc4f 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079fe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007a02:	ee18 3a10 	vmov	r3, s16
 8007a06:	333c      	adds	r3, #60	; 0x3c
 8007a08:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a0c:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007a0e:	ee18 0a10 	vmov	r0, s16
 8007a12:	a90a      	add	r1, sp, #40	; 0x28
 8007a14:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a18:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007a1c:	f00a fed8 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a20:	ee18 1a10 	vmov	r1, s16
 8007a24:	4630      	mov	r0, r6
 8007a26:	f008 f8ab 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007a2a:	ee18 0a90 	vmov	r0, s17
 8007a2e:	220c      	movs	r2, #12
 8007a30:	2136      	movs	r1, #54	; 0x36
 8007a32:	f7fa ff91 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007a36:	ee18 1a90 	vmov	r1, s17
 8007a3a:	4628      	mov	r0, r5
        color = newColor;
 8007a3c:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007a40:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007a44:	f00a fc2a 	bl	801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a48:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007a4c:	ee18 3a90 	vmov	r3, s17
 8007a50:	333c      	adds	r3, #60	; 0x3c
 8007a52:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a56:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007a58:	ee18 0a90 	vmov	r0, s17
 8007a5c:	a90a      	add	r1, sp, #40	; 0x28
 8007a5e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a62:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007a66:	f00a feb3 	bl	80127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	ee18 1a90 	vmov	r1, s17
 8007a70:	f008 f886 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007a74:	4620      	mov	r0, r4
 8007a76:	b00d      	add	sp, #52	; 0x34
 8007a78:	ecbd 8b04 	vpop	{d8-d9}
 8007a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a80:	0802de54 	.word	0x0802de54
 8007a84:	0802eba4 	.word	0x0802eba4
 8007a88:	0802edf0 	.word	0x0802edf0
 8007a8c:	0802c6f0 	.word	0x0802c6f0
 8007a90:	0802e8d8 	.word	0x0802e8d8
 8007a94:	0802de3c 	.word	0x0802de3c
 8007a98:	0800770d 	.word	0x0800770d
 8007a9c:	20013314 	.word	0x20013314
 8007aa0:	0802c4a0 	.word	0x0802c4a0
 8007aa4:	0802c5a5 	.word	0x0802c5a5
 8007aa8:	0802c51d 	.word	0x0802c51d
 8007aac:	20013318 	.word	0x20013318
 8007ab0:	0802c564 	.word	0x0802c564
 8007ab4:	20013320 	.word	0x20013320
 8007ab8:	0802c5dd 	.word	0x0802c5dd
 8007abc:	0802c650 	.word	0x0802c650

08007ac0 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007ac0:	4770      	bx	lr

08007ac2 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007ac2:	4770      	bx	lr

08007ac4 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007ac4:	b510      	push	{r4, lr}
}
 8007ac6:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007ac8:	4604      	mov	r4, r0
}
 8007aca:	f022 f9e6 	bl	8029e9a <_ZdlPvj>
 8007ace:	4620      	mov	r0, r4
 8007ad0:	bd10      	pop	{r4, pc}
	...

08007ad4 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007ad4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007ad8:	4604      	mov	r4, r0
 8007ada:	4626      	mov	r6, r4
 8007adc:	f00f fda8 	bl	8017630 <_ZN8touchgfx6ScreenC1Ev>
 8007ae0:	2500      	movs	r5, #0
 8007ae2:	4b2e      	ldr	r3, [pc, #184]	; (8007b9c <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007ae4:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007ae6:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007aea:	4b2d      	ldr	r3, [pc, #180]	; (8007ba0 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007aec:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007aee:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007af2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007af6:	23ff      	movs	r3, #255	; 0xff
 8007af8:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007afc:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007b00:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007b04:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007b08:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007b0c:	4a25      	ldr	r2, [pc, #148]	; (8007ba4 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007b0e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007b12:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007b16:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007b18:	a901      	add	r1, sp, #4
 8007b1a:	4638      	mov	r0, r7
 8007b1c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007b20:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007b24:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007b28:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007b2c:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007b30:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007b34:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007b38:	66a5      	str	r5, [r4, #104]	; 0x68
 8007b3a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007b3e:	f00b fbf8 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007b42:	462a      	mov	r2, r5
 8007b44:	4629      	mov	r1, r5
 8007b46:	4630      	mov	r0, r6
 8007b48:	f7fa ff06 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007b4c:	4630      	mov	r0, r6
 8007b4e:	21f0      	movs	r1, #240	; 0xf0
 8007b50:	f7fa fc7c 	bl	800244c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007b54:	4630      	mov	r0, r6
 8007b56:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007b5a:	f7fa fc79 	bl	8002450 <_ZN8touchgfx8Drawable9setHeightEs>
 8007b5e:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007b62:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007b66:	66a3      	str	r3, [r4, #104]	; 0x68
 8007b68:	4631      	mov	r1, r6
 8007b6a:	4640      	mov	r0, r8
 8007b6c:	f008 f808 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007b70:	462a      	mov	r2, r5
 8007b72:	4638      	mov	r0, r7
 8007b74:	f06f 0102 	mvn.w	r1, #2
 8007b78:	f7fa feee 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007b7c:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007b7e:	a901      	add	r1, sp, #4
 8007b80:	4638      	mov	r0, r7
 8007b82:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007b86:	f00b fbd4 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b8a:	4640      	mov	r0, r8
 8007b8c:	4639      	mov	r1, r7
 8007b8e:	f007 fff7 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007b92:	4620      	mov	r0, r4
 8007b94:	b002      	add	sp, #8
 8007b96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007b9a:	bf00      	nop
 8007b9c:	0802de88 	.word	0x0802de88
 8007ba0:	0802eba4 	.word	0x0802eba4
 8007ba4:	0802edf0 	.word	0x0802edf0

08007ba8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007ba8:	4770      	bx	lr
	...

08007bac <_Z23getFont_verdana_10_4bppv>:
{
 8007bac:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007bae:	4d17      	ldr	r5, [pc, #92]	; (8007c0c <_Z23getFont_verdana_10_4bppv+0x60>)
 8007bb0:	682c      	ldr	r4, [r5, #0]
 8007bb2:	f3bf 8f5b 	dmb	ish
 8007bb6:	f014 0401 	ands.w	r4, r4, #1
{
 8007bba:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007bbc:	d122      	bne.n	8007c04 <_Z23getFont_verdana_10_4bppv+0x58>
 8007bbe:	4628      	mov	r0, r5
 8007bc0:	f022 f96d 	bl	8029e9e <__cxa_guard_acquire>
 8007bc4:	b1f0      	cbz	r0, 8007c04 <_Z23getFont_verdana_10_4bppv+0x58>
 8007bc6:	233f      	movs	r3, #63	; 0x3f
 8007bc8:	9309      	str	r3, [sp, #36]	; 0x24
 8007bca:	4b11      	ldr	r3, [pc, #68]	; (8007c10 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007bcc:	9308      	str	r3, [sp, #32]
 8007bce:	4b11      	ldr	r3, [pc, #68]	; (8007c14 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007bd0:	9307      	str	r3, [sp, #28]
 8007bd2:	2301      	movs	r3, #1
 8007bd4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007bd8:	9304      	str	r3, [sp, #16]
 8007bda:	2304      	movs	r3, #4
 8007bdc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007be0:	230a      	movs	r3, #10
 8007be2:	490d      	ldr	r1, [pc, #52]	; (8007c18 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007be4:	9300      	str	r3, [sp, #0]
 8007be6:	225f      	movs	r2, #95	; 0x5f
 8007be8:	230c      	movs	r3, #12
 8007bea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007bee:	480b      	ldr	r0, [pc, #44]	; (8007c1c <_Z23getFont_verdana_10_4bppv+0x70>)
 8007bf0:	940a      	str	r4, [sp, #40]	; 0x28
 8007bf2:	9401      	str	r4, [sp, #4]
 8007bf4:	f7fd fa2a 	bl	800504c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007bf8:	4809      	ldr	r0, [pc, #36]	; (8007c20 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007bfa:	f022 ff7f 	bl	802aafc <atexit>
 8007bfe:	4628      	mov	r0, r5
 8007c00:	f022 f959 	bl	8029eb6 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007c04:	4805      	ldr	r0, [pc, #20]	; (8007c1c <_Z23getFont_verdana_10_4bppv+0x70>)
 8007c06:	b00f      	add	sp, #60	; 0x3c
 8007c08:	bd30      	pop	{r4, r5, pc}
 8007c0a:	bf00      	nop
 8007c0c:	200023bc 	.word	0x200023bc
 8007c10:	08046a74 	.word	0x08046a74
 8007c14:	08046cb0 	.word	0x08046cb0
 8007c18:	08045abc 	.word	0x08045abc
 8007c1c:	200023c0 	.word	0x200023c0
 8007c20:	08007ba9 	.word	0x08007ba9

08007c24 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007c24:	4770      	bx	lr
	...

08007c28 <_Z23getFont_verdana_12_4bppv>:
{
 8007c28:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007c2a:	4d17      	ldr	r5, [pc, #92]	; (8007c88 <_Z23getFont_verdana_12_4bppv+0x60>)
 8007c2c:	682c      	ldr	r4, [r5, #0]
 8007c2e:	f3bf 8f5b 	dmb	ish
 8007c32:	f014 0401 	ands.w	r4, r4, #1
{
 8007c36:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007c38:	d122      	bne.n	8007c80 <_Z23getFont_verdana_12_4bppv+0x58>
 8007c3a:	4628      	mov	r0, r5
 8007c3c:	f022 f92f 	bl	8029e9e <__cxa_guard_acquire>
 8007c40:	b1f0      	cbz	r0, 8007c80 <_Z23getFont_verdana_12_4bppv+0x58>
 8007c42:	233f      	movs	r3, #63	; 0x3f
 8007c44:	9309      	str	r3, [sp, #36]	; 0x24
 8007c46:	4b11      	ldr	r3, [pc, #68]	; (8007c8c <_Z23getFont_verdana_12_4bppv+0x64>)
 8007c48:	9308      	str	r3, [sp, #32]
 8007c4a:	4b11      	ldr	r3, [pc, #68]	; (8007c90 <_Z23getFont_verdana_12_4bppv+0x68>)
 8007c4c:	9307      	str	r3, [sp, #28]
 8007c4e:	2301      	movs	r3, #1
 8007c50:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007c54:	9304      	str	r3, [sp, #16]
 8007c56:	2304      	movs	r3, #4
 8007c58:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007c5c:	230c      	movs	r3, #12
 8007c5e:	490d      	ldr	r1, [pc, #52]	; (8007c94 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007c60:	9300      	str	r3, [sp, #0]
 8007c62:	2260      	movs	r2, #96	; 0x60
 8007c64:	230f      	movs	r3, #15
 8007c66:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007c6a:	480b      	ldr	r0, [pc, #44]	; (8007c98 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007c6c:	940a      	str	r4, [sp, #40]	; 0x28
 8007c6e:	9401      	str	r4, [sp, #4]
 8007c70:	f7fd f9ec 	bl	800504c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007c74:	4809      	ldr	r0, [pc, #36]	; (8007c9c <_Z23getFont_verdana_12_4bppv+0x74>)
 8007c76:	f022 ff41 	bl	802aafc <atexit>
 8007c7a:	4628      	mov	r0, r5
 8007c7c:	f022 f91b 	bl	8029eb6 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007c80:	4805      	ldr	r0, [pc, #20]	; (8007c98 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007c82:	b00f      	add	sp, #60	; 0x3c
 8007c84:	bd30      	pop	{r4, r5, pc}
 8007c86:	bf00      	nop
 8007c88:	200023ec 	.word	0x200023ec
 8007c8c:	08046aa8 	.word	0x08046aa8
 8007c90:	08046cb4 	.word	0x08046cb4
 8007c94:	08045ff0 	.word	0x08045ff0
 8007c98:	200023f0 	.word	0x200023f0
 8007c9c:	08007c25 	.word	0x08007c25

08007ca0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007ca0:	4770      	bx	lr
	...

08007ca4 <_Z23getFont_verdana_19_4bppv>:
{
 8007ca4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007ca6:	4d17      	ldr	r5, [pc, #92]	; (8007d04 <_Z23getFont_verdana_19_4bppv+0x60>)
 8007ca8:	682c      	ldr	r4, [r5, #0]
 8007caa:	f3bf 8f5b 	dmb	ish
 8007cae:	f014 0401 	ands.w	r4, r4, #1
{
 8007cb2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007cb4:	d122      	bne.n	8007cfc <_Z23getFont_verdana_19_4bppv+0x58>
 8007cb6:	4628      	mov	r0, r5
 8007cb8:	f022 f8f1 	bl	8029e9e <__cxa_guard_acquire>
 8007cbc:	b1f0      	cbz	r0, 8007cfc <_Z23getFont_verdana_19_4bppv+0x58>
 8007cbe:	233f      	movs	r3, #63	; 0x3f
 8007cc0:	9309      	str	r3, [sp, #36]	; 0x24
 8007cc2:	4b11      	ldr	r3, [pc, #68]	; (8007d08 <_Z23getFont_verdana_19_4bppv+0x64>)
 8007cc4:	9308      	str	r3, [sp, #32]
 8007cc6:	4b11      	ldr	r3, [pc, #68]	; (8007d0c <_Z23getFont_verdana_19_4bppv+0x68>)
 8007cc8:	9307      	str	r3, [sp, #28]
 8007cca:	2301      	movs	r3, #1
 8007ccc:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007cd0:	9304      	str	r3, [sp, #16]
 8007cd2:	2304      	movs	r3, #4
 8007cd4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007cd8:	2313      	movs	r3, #19
 8007cda:	490d      	ldr	r1, [pc, #52]	; (8007d10 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007cdc:	9300      	str	r3, [sp, #0]
 8007cde:	225f      	movs	r2, #95	; 0x5f
 8007ce0:	2317      	movs	r3, #23
 8007ce2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007ce6:	480b      	ldr	r0, [pc, #44]	; (8007d14 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007ce8:	940a      	str	r4, [sp, #40]	; 0x28
 8007cea:	9401      	str	r4, [sp, #4]
 8007cec:	f7fd f9ae 	bl	800504c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007cf0:	4809      	ldr	r0, [pc, #36]	; (8007d18 <_Z23getFont_verdana_19_4bppv+0x74>)
 8007cf2:	f022 ff03 	bl	802aafc <atexit>
 8007cf6:	4628      	mov	r0, r5
 8007cf8:	f022 f8dd 	bl	8029eb6 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007cfc:	4805      	ldr	r0, [pc, #20]	; (8007d14 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007cfe:	b00f      	add	sp, #60	; 0x3c
 8007d00:	bd30      	pop	{r4, r5, pc}
 8007d02:	bf00      	nop
 8007d04:	2000241c 	.word	0x2000241c
 8007d08:	08046b2c 	.word	0x08046b2c
 8007d0c:	08046cb8 	.word	0x08046cb8
 8007d10:	08046530 	.word	0x08046530
 8007d14:	20002420 	.word	0x20002420
 8007d18:	08007ca1 	.word	0x08007ca1

08007d1c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007d1c:	4770      	bx	lr
	...

08007d20 <_Z23getFont_verdana_40_4bppv>:
{
 8007d20:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007d22:	4d16      	ldr	r5, [pc, #88]	; (8007d7c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007d24:	682c      	ldr	r4, [r5, #0]
 8007d26:	f3bf 8f5b 	dmb	ish
 8007d2a:	f014 0401 	ands.w	r4, r4, #1
{
 8007d2e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007d30:	d120      	bne.n	8007d74 <_Z23getFont_verdana_40_4bppv+0x54>
 8007d32:	4628      	mov	r0, r5
 8007d34:	f022 f8b3 	bl	8029e9e <__cxa_guard_acquire>
 8007d38:	b1e0      	cbz	r0, 8007d74 <_Z23getFont_verdana_40_4bppv+0x54>
 8007d3a:	233f      	movs	r3, #63	; 0x3f
 8007d3c:	9309      	str	r3, [sp, #36]	; 0x24
 8007d3e:	4b10      	ldr	r3, [pc, #64]	; (8007d80 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007d40:	9308      	str	r3, [sp, #32]
 8007d42:	4b10      	ldr	r3, [pc, #64]	; (8007d84 <_Z23getFont_verdana_40_4bppv+0x64>)
 8007d44:	4910      	ldr	r1, [pc, #64]	; (8007d88 <_Z23getFont_verdana_40_4bppv+0x68>)
 8007d46:	4811      	ldr	r0, [pc, #68]	; (8007d8c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007d48:	940a      	str	r4, [sp, #40]	; 0x28
 8007d4a:	2201      	movs	r2, #1
 8007d4c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007d50:	2304      	movs	r3, #4
 8007d52:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007d56:	2328      	movs	r3, #40	; 0x28
 8007d58:	9300      	str	r3, [sp, #0]
 8007d5a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007d5e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007d62:	9405      	str	r4, [sp, #20]
 8007d64:	f7fd f972 	bl	800504c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007d68:	4809      	ldr	r0, [pc, #36]	; (8007d90 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007d6a:	f022 fec7 	bl	802aafc <atexit>
 8007d6e:	4628      	mov	r0, r5
 8007d70:	f022 f8a1 	bl	8029eb6 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007d74:	4805      	ldr	r0, [pc, #20]	; (8007d8c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007d76:	b00f      	add	sp, #60	; 0x3c
 8007d78:	bd30      	pop	{r4, r5, pc}
 8007d7a:	bf00      	nop
 8007d7c:	2000244c 	.word	0x2000244c
 8007d80:	08046cac 	.word	0x08046cac
 8007d84:	08046cbc 	.word	0x08046cbc
 8007d88:	08046a64 	.word	0x08046a64
 8007d8c:	20002450 	.word	0x20002450
 8007d90:	08007d1d 	.word	0x08007d1d

08007d94 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8007d94:	2000      	movs	r0, #0
 8007d96:	4770      	bx	lr

08007d98 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8007d98:	2000      	movs	r0, #0
 8007d9a:	4770      	bx	lr

08007d9c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007d9c:	b40e      	push	{r1, r2, r3}
 8007d9e:	b503      	push	{r0, r1, lr}
 8007da0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007da2:	2100      	movs	r1, #0
{
 8007da4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8007da8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007daa:	f00e ff7f 	bl	8016cac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007dae:	b002      	add	sp, #8
 8007db0:	f85d eb04 	ldr.w	lr, [sp], #4
 8007db4:	b003      	add	sp, #12
 8007db6:	4770      	bx	lr

08007db8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007db8:	b40c      	push	{r2, r3}
 8007dba:	b507      	push	{r0, r1, r2, lr}
 8007dbc:	ab04      	add	r3, sp, #16
 8007dbe:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8007dc2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8007dc4:	f00e ff72 	bl	8016cac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007dc8:	b003      	add	sp, #12
 8007dca:	f85d eb04 	ldr.w	lr, [sp], #4
 8007dce:	b002      	add	sp, #8
 8007dd0:	4770      	bx	lr
	...

08007dd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8007dd4:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8007dd6:	b510      	push	{r4, lr}
 8007dd8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007dda:	b373      	cbz	r3, 8007e3a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007ddc:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8007dde:	b92b      	cbnz	r3, 8007dec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007de0:	4b18      	ldr	r3, [pc, #96]	; (8007e44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8007de2:	4a19      	ldr	r2, [pc, #100]	; (8007e48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8007de4:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8007de6:	4819      	ldr	r0, [pc, #100]	; (8007e4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007de8:	f022 fe6a 	bl	802aac0 <__assert_func>
            return buffer[pos];
 8007dec:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8007dee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007df2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8007df4:	b30b      	cbz	r3, 8007e3a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8007df6:	f010 fb94 	bl	8018522 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007dfa:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8007dfc:	2b01      	cmp	r3, #1
 8007dfe:	d803      	bhi.n	8007e08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007e00:	4b13      	ldr	r3, [pc, #76]	; (8007e50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8007e02:	4a14      	ldr	r2, [pc, #80]	; (8007e54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8007e04:	21cb      	movs	r1, #203	; 0xcb
 8007e06:	e7ee      	b.n	8007de6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007e08:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007e0a:	1c53      	adds	r3, r2, #1
 8007e0c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007e0e:	2b09      	cmp	r3, #9
 8007e10:	4619      	mov	r1, r3
 8007e12:	bf88      	it	hi
 8007e14:	f1a3 010a 	subhi.w	r1, r3, #10
 8007e18:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007e1c:	f640 103f 	movw	r0, #2367	; 0x93f
 8007e20:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8007e22:	4281      	cmp	r1, r0
 8007e24:	d109      	bne.n	8007e3a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8007e26:	2b0a      	cmp	r3, #10
 8007e28:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007e2c:	bf28      	it	cs
 8007e2e:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8007e30:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8007e34:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8007e36:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007e38:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007e3a:	4620      	mov	r0, r4
}
 8007e3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007e40:	f010 ba72 	b.w	8018328 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8007e44:	0802deb4 	.word	0x0802deb4
 8007e48:	0802debd 	.word	0x0802debd
 8007e4c:	0802df68 	.word	0x0802df68
 8007e50:	0802dfb2 	.word	0x0802dfb2
 8007e54:	0802dfc0 	.word	0x0802dfc0

08007e58 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8007e58:	f010 ba2d 	b.w	80182b6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007e5c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007e5c:	b510      	push	{r4, lr}
 8007e5e:	b086      	sub	sp, #24
 8007e60:	ac02      	add	r4, sp, #8
 8007e62:	e884 0006 	stmia.w	r4, {r1, r2}
 8007e66:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8007e68:	ab0a      	add	r3, sp, #40	; 0x28
 8007e6a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007e6c:	9301      	str	r3, [sp, #4]
 8007e6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007e70:	9300      	str	r3, [sp, #0]
 8007e72:	4621      	mov	r1, r4
 8007e74:	9b08      	ldr	r3, [sp, #32]
 8007e76:	f00d fadd 	bl	8015434 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8007e7a:	b006      	add	sp, #24
 8007e7c:	bd10      	pop	{r4, pc}
	...

08007e80 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007e80:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8007e82:	bb18      	cbnz	r0, 8007ecc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8007e84:	4b12      	ldr	r3, [pc, #72]	; (8007ed0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8007e86:	4813      	ldr	r0, [pc, #76]	; (8007ed4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8007e88:	681c      	ldr	r4, [r3, #0]
 8007e8a:	4913      	ldr	r1, [pc, #76]	; (8007ed8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8007e8c:	b1b4      	cbz	r4, 8007ebc <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007e8e:	6822      	ldr	r2, [r4, #0]
 8007e90:	4422      	add	r2, r4
 8007e92:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8007e94:	6862      	ldr	r2, [r4, #4]
 8007e96:	4422      	add	r2, r4
 8007e98:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007e9a:	68a2      	ldr	r2, [r4, #8]
 8007e9c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8007e9e:	4b0f      	ldr	r3, [pc, #60]	; (8007edc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8007ea0:	2200      	movs	r2, #0
 8007ea2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8007ea4:	f000 f838 	bl	8007f18 <_ZN17TypedTextDatabase8getFontsEv>
 8007ea8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8007eaa:	f000 f833 	bl	8007f14 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8007eae:	4b0c      	ldr	r3, [pc, #48]	; (8007ee0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8007eb0:	601c      	str	r4, [r3, #0]
        fonts = f;
 8007eb2:	4b0c      	ldr	r3, [pc, #48]	; (8007ee4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8007eb4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8007eb6:	4b0c      	ldr	r3, [pc, #48]	; (8007ee8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8007eb8:	8018      	strh	r0, [r3, #0]
    }
}
 8007eba:	e007      	b.n	8007ecc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8007ebc:	4b0b      	ldr	r3, [pc, #44]	; (8007eec <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8007ebe:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8007ec0:	4b0b      	ldr	r3, [pc, #44]	; (8007ef0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8007ec2:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8007ec4:	4b0b      	ldr	r3, [pc, #44]	; (8007ef4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8007ec6:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8007ec8:	2c00      	cmp	r4, #0
 8007eca:	d1e8      	bne.n	8007e9e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8007ecc:	bd38      	pop	{r3, r4, r5, pc}
 8007ece:	bf00      	nop
 8007ed0:	2000247c 	.word	0x2000247c
 8007ed4:	20002480 	.word	0x20002480
 8007ed8:	20002484 	.word	0x20002484
 8007edc:	20002488 	.word	0x20002488
 8007ee0:	20013314 	.word	0x20013314
 8007ee4:	2001331c 	.word	0x2001331c
 8007ee8:	20013318 	.word	0x20013318
 8007eec:	08046e00 	.word	0x08046e00
 8007ef0:	08046cc0 	.word	0x08046cc0
 8007ef4:	080472f8 	.word	0x080472f8

08007ef8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8007ef8:	4b04      	ldr	r3, [pc, #16]	; (8007f0c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8007efa:	681b      	ldr	r3, [r3, #0]
 8007efc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007f00:	4b03      	ldr	r3, [pc, #12]	; (8007f10 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8007f02:	681b      	ldr	r3, [r3, #0]
}
 8007f04:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8007f08:	4770      	bx	lr
 8007f0a:	bf00      	nop
 8007f0c:	20002484 	.word	0x20002484
 8007f10:	20002480 	.word	0x20002480

08007f14 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8007f14:	2050      	movs	r0, #80	; 0x50
 8007f16:	4770      	bx	lr

08007f18 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007f18:	4800      	ldr	r0, [pc, #0]	; (8007f1c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007f1a:	4770      	bx	lr
 8007f1c:	2000248c 	.word	0x2000248c

08007f20 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007f20:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8007f22:	f7ff febf 	bl	8007ca4 <_Z23getFont_verdana_19_4bppv>
};
 8007f26:	4c06      	ldr	r4, [pc, #24]	; (8007f40 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8007f28:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8007f2a:	f7ff fef9 	bl	8007d20 <_Z23getFont_verdana_40_4bppv>
};
 8007f2e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8007f30:	f7ff fe3c 	bl	8007bac <_Z23getFont_verdana_10_4bppv>
};
 8007f34:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8007f36:	f7ff fe77 	bl	8007c28 <_Z23getFont_verdana_12_4bppv>
};
 8007f3a:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8007f3c:	bd10      	pop	{r4, pc}
 8007f3e:	bf00      	nop
 8007f40:	2000248c 	.word	0x2000248c

08007f44 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8007f44:	4770      	bx	lr

08007f46 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8007f46:	3804      	subs	r0, #4
 8007f48:	4770      	bx	lr

08007f4a <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8007f4a:	4770      	bx	lr

08007f4c <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8007f4c:	4770      	bx	lr

08007f4e <_ZN24Calibration_PadPresenterD0Ev>:
 8007f4e:	b510      	push	{r4, lr}
 8007f50:	2110      	movs	r1, #16
 8007f52:	4604      	mov	r4, r0
 8007f54:	f021 ffa1 	bl	8029e9a <_ZdlPvj>
 8007f58:	4620      	mov	r0, r4
 8007f5a:	bd10      	pop	{r4, pc}

08007f5c <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8007f5c:	f1a0 0004 	sub.w	r0, r0, #4
 8007f60:	e7f5      	b.n	8007f4e <_ZN24Calibration_PadPresenterD0Ev>

08007f62 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8007f62:	4770      	bx	lr

08007f64 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8007f64:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007f66:	2200      	movs	r2, #0
 8007f68:	6082      	str	r2, [r0, #8]
    : view(v)
 8007f6a:	4a04      	ldr	r2, [pc, #16]	; (8007f7c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8007f6c:	60c1      	str	r1, [r0, #12]
 8007f6e:	f102 0408 	add.w	r4, r2, #8
 8007f72:	3224      	adds	r2, #36	; 0x24
 8007f74:	6004      	str	r4, [r0, #0]
 8007f76:	6042      	str	r2, [r0, #4]
}
 8007f78:	bd10      	pop	{r4, pc}
 8007f7a:	bf00      	nop
 8007f7c:	0802e094 	.word	0x0802e094

08007f80 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8007f80:	4770      	bx	lr

08007f82 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8007f82:	4770      	bx	lr

08007f84 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8007f84:	b510      	push	{r4, lr}
 8007f86:	4b03      	ldr	r3, [pc, #12]	; (8007f94 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8007f88:	6003      	str	r3, [r0, #0]
 8007f8a:	4604      	mov	r4, r0
 8007f8c:	f7fa fc8e 	bl	80028ac <_ZN23Calibration_PadViewBaseD1Ev>
 8007f90:	4620      	mov	r0, r4
 8007f92:	bd10      	pop	{r4, pc}
 8007f94:	0802e0cc 	.word	0x0802e0cc

08007f98 <_ZN19Calibration_PadViewD0Ev>:
 8007f98:	b510      	push	{r4, lr}
 8007f9a:	4604      	mov	r4, r0
 8007f9c:	f7ff fff2 	bl	8007f84 <_ZN19Calibration_PadViewD1Ev>
 8007fa0:	4620      	mov	r0, r4
 8007fa2:	f241 71cc 	movw	r1, #6092	; 0x17cc
 8007fa6:	f021 ff78 	bl	8029e9a <_ZdlPvj>
 8007faa:	4620      	mov	r0, r4
 8007fac:	bd10      	pop	{r4, pc}
	...

08007fb0 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8007fb0:	b510      	push	{r4, lr}
 8007fb2:	4604      	mov	r4, r0
 8007fb4:	f7fa fe8e 	bl	8002cd4 <_ZN23Calibration_PadViewBaseC1Ev>
 8007fb8:	4b01      	ldr	r3, [pc, #4]	; (8007fc0 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8007fba:	6023      	str	r3, [r4, #0]
}
 8007fbc:	4620      	mov	r0, r4
 8007fbe:	bd10      	pop	{r4, pc}
 8007fc0:	0802e0cc 	.word	0x0802e0cc

08007fc4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 8007fc4:	b530      	push	{r4, r5, lr}
 8007fc6:	4604      	mov	r4, r0
 8007fc8:	b0c5      	sub	sp, #276	; 0x114
 8007fca:	f100 05e0 	add.w	r5, r0, #224	; 0xe0
 8007fce:	4629      	mov	r1, r5
 8007fd0:	a807      	add	r0, sp, #28
 8007fd2:	f7fa fd77 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8007fd6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8007fda:	9311      	str	r3, [sp, #68]	; 0x44
 8007fdc:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8007fe0:	9312      	str	r3, [sp, #72]	; 0x48
 8007fe2:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8007fe6:	4a41      	ldr	r2, [pc, #260]	; (80080ec <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x128>)
 8007fe8:	9313      	str	r3, [sp, #76]	; 0x4c
 8007fea:	f504 718c 	add.w	r1, r4, #280	; 0x118
 8007fee:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8007ff2:	9207      	str	r2, [sp, #28]
 8007ff4:	a815      	add	r0, sp, #84	; 0x54
 8007ff6:	9314      	str	r3, [sp, #80]	; 0x50
 8007ff8:	f7fa fd64 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8007ffc:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8008000:	931f      	str	r3, [sp, #124]	; 0x7c
 8008002:	4b3b      	ldr	r3, [pc, #236]	; (80080f0 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x12c>)
 8008004:	9315      	str	r3, [sp, #84]	; 0x54
 8008006:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 800800a:	f88d 3080 	strb.w	r3, [sp, #128]	; 0x80
 800800e:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8008012:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8008016:	f8ad 3082 	strh.w	r3, [sp, #130]	; 0x82
 800801a:	a821      	add	r0, sp, #132	; 0x84
 800801c:	f7fa fd52 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008020:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8008024:	932b      	str	r3, [sp, #172]	; 0xac
 8008026:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 800802a:	4b32      	ldr	r3, [pc, #200]	; (80080f4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x130>)
 800802c:	9321      	str	r3, [sp, #132]	; 0x84
 800802e:	a82c      	add	r0, sp, #176	; 0xb0
 8008030:	f7fa fd48 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 8008034:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8008038:	f8ad 30d6 	strh.w	r3, [sp, #214]	; 0xd6
 800803c:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8008040:	f88d 30d8 	strb.w	r3, [sp, #216]	; 0xd8
 8008044:	4b2c      	ldr	r3, [pc, #176]	; (80080f8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x134>)
 8008046:	932c      	str	r3, [sp, #176]	; 0xb0
 8008048:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 800804c:	f8ad 30da 	strh.w	r3, [sp, #218]	; 0xda
 8008050:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 8008054:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8008058:	f8ad 30dc 	strh.w	r3, [sp, #220]	; 0xdc
 800805c:	a838      	add	r0, sp, #224	; 0xe0
 800805e:	f7fa fd31 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008062:	4b26      	ldr	r3, [pc, #152]	; (80080fc <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x138>)
 8008064:	9338      	str	r3, [sp, #224]	; 0xe0
 8008066:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
 800806a:	f8ad 3106 	strh.w	r3, [sp, #262]	; 0x106
 800806e:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8008072:	f88d 3108 	strb.w	r3, [sp, #264]	; 0x108

	SwipeContainer swipeContainer = swipeContainer1;
	uint32_t Rx_Data[6];

	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 6);
 8008076:	a901      	add	r1, sp, #4
 8008078:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 800807c:	4820      	ldr	r0, [pc, #128]	; (8008100 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x13c>)
 800807e:	f8ad 310c 	strh.w	r3, [sp, #268]	; 0x10c
 8008082:	2206      	movs	r2, #6
 8008084:	f7f8 fbe4 	bl	8000850 <Flash_Read_Data>

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008088:	9b01      	ldr	r3, [sp, #4]
 800808a:	4a1e      	ldr	r2, [pc, #120]	; (8008104 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 800808c:	210a      	movs	r1, #10
 800808e:	f604 105c 	addw	r0, r4, #2396	; 0x95c
 8008092:	f010 fffb 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8008096:	9b02      	ldr	r3, [sp, #8]
 8008098:	4a1a      	ldr	r2, [pc, #104]	; (8008104 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 800809a:	210a      	movs	r1, #10
 800809c:	f604 1048 	addw	r0, r4, #2376	; 0x948
 80080a0:	f010 fff4 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 80080a4:	9b03      	ldr	r3, [sp, #12]
 80080a6:	4a17      	ldr	r2, [pc, #92]	; (8008104 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 80080a8:	210a      	movs	r1, #10
 80080aa:	f604 1034 	addw	r0, r4, #2356	; 0x934
 80080ae:	f010 ffed 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 80080b2:	9b04      	ldr	r3, [sp, #16]
 80080b4:	4a13      	ldr	r2, [pc, #76]	; (8008104 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 80080b6:	210a      	movs	r1, #10
 80080b8:	f604 1098 	addw	r0, r4, #2456	; 0x998
 80080bc:	f010 ffe6 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 80080c0:	9b05      	ldr	r3, [sp, #20]
 80080c2:	4a10      	ldr	r2, [pc, #64]	; (8008104 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 80080c4:	210a      	movs	r1, #10
 80080c6:	f604 1084 	addw	r0, r4, #2436	; 0x984
 80080ca:	f010 ffdf 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 80080ce:	9b06      	ldr	r3, [sp, #24]
 80080d0:	4a0c      	ldr	r2, [pc, #48]	; (8008104 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 80080d2:	210a      	movs	r1, #10
 80080d4:	f504 6017 	add.w	r0, r4, #2416	; 0x970
 80080d8:	f010 ffd8 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 80080dc:	4628      	mov	r0, r5
 80080de:	f00e ff0f 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 80080e2:	a807      	add	r0, sp, #28
 80080e4:	f007 ffda 	bl	801009c <_ZN8touchgfx14SwipeContainerD1Ev>
 80080e8:	b045      	add	sp, #276	; 0x114
 80080ea:	bd30      	pop	{r4, r5, pc}
 80080ec:	0802e74c 	.word	0x0802e74c
 80080f0:	0802e810 	.word	0x0802e810
 80080f4:	0802c660 	.word	0x0802c660
 80080f8:	0802ec0c 	.word	0x0802ec0c
 80080fc:	0802edf0 	.word	0x0802edf0
 8008100:	081e0000 	.word	0x081e0000
 8008104:	0802c5a2 	.word	0x0802c5a2

08008108 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008108:	f7fa bb8f 	b.w	800282a <_ZN23Calibration_PadViewBase11setupScreenEv>

0800810c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800810c:	4770      	bx	lr

0800810e <_ZN19FrontendApplicationD0Ev>:
 800810e:	b510      	push	{r4, lr}
 8008110:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008114:	4604      	mov	r4, r0
 8008116:	f021 fec0 	bl	8029e9a <_ZdlPvj>
 800811a:	4620      	mov	r0, r4
 800811c:	bd10      	pop	{r4, pc}

0800811e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800811e:	b510      	push	{r4, lr}
 8008120:	4604      	mov	r4, r0
    {
        model.tick();
 8008122:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008126:	f000 fafb 	bl	8008720 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800812a:	4620      	mov	r0, r4
    }
 800812c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008130:	f00d bec2 	b.w	8015eb8 <_ZN8touchgfx11Application15handleTickEventEv>

08008134 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008134:	b510      	push	{r4, lr}
 8008136:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008138:	f7fb fe62 	bl	8003e00 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800813c:	4b01      	ldr	r3, [pc, #4]	; (8008144 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800813e:	6023      	str	r3, [r4, #0]
{

}
 8008140:	4620      	mov	r0, r4
 8008142:	bd10      	pop	{r4, pc}
 8008144:	0802e10c 	.word	0x0802e10c

08008148 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008148:	4770      	bx	lr

0800814a <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800814a:	3804      	subs	r0, #4
 800814c:	4770      	bx	lr

0800814e <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800814e:	4770      	bx	lr

08008150 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008150:	68c0      	ldr	r0, [r0, #12]
 8008152:	6803      	ldr	r3, [r0, #0]
 8008154:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008156:	4718      	bx	r3

08008158 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008158:	f1a0 0004 	sub.w	r0, r0, #4
 800815c:	f7ff bff8 	b.w	8008150 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008160 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008160:	b510      	push	{r4, lr}
 8008162:	2110      	movs	r1, #16
 8008164:	4604      	mov	r4, r0
 8008166:	f021 fe98 	bl	8029e9a <_ZdlPvj>
 800816a:	4620      	mov	r0, r4
 800816c:	bd10      	pop	{r4, pc}

0800816e <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800816e:	f1a0 0004 	sub.w	r0, r0, #4
 8008172:	e7f5      	b.n	8008160 <_ZN18Main_MenuPresenterD0Ev>

08008174 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008174:	b510      	push	{r4, lr}
 8008176:	2200      	movs	r2, #0
 8008178:	6082      	str	r2, [r0, #8]
    : view(v)
 800817a:	4a04      	ldr	r2, [pc, #16]	; (800818c <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 800817c:	60c1      	str	r1, [r0, #12]
 800817e:	f102 0408 	add.w	r4, r2, #8
 8008182:	3224      	adds	r2, #36	; 0x24
 8008184:	6004      	str	r4, [r0, #0]
 8008186:	6042      	str	r2, [r0, #4]
}
 8008188:	bd10      	pop	{r4, pc}
 800818a:	bf00      	nop
 800818c:	0802e158 	.word	0x0802e158

08008190 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008190:	4770      	bx	lr
	...

08008194 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008194:	b510      	push	{r4, lr}
 8008196:	4b03      	ldr	r3, [pc, #12]	; (80081a4 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008198:	6003      	str	r3, [r0, #0]
 800819a:	4604      	mov	r4, r0
 800819c:	f7fc ffaa 	bl	80050f4 <_ZN17Main_MenuViewBaseD1Ev>
 80081a0:	4620      	mov	r0, r4
 80081a2:	bd10      	pop	{r4, pc}
 80081a4:	0802e190 	.word	0x0802e190

080081a8 <_ZN13Main_MenuViewD0Ev>:
 80081a8:	b510      	push	{r4, lr}
 80081aa:	4604      	mov	r4, r0
 80081ac:	f7ff fff2 	bl	8008194 <_ZN13Main_MenuViewD1Ev>
 80081b0:	4620      	mov	r0, r4
 80081b2:	f241 117c 	movw	r1, #4476	; 0x117c
 80081b6:	f021 fe70 	bl	8029e9a <_ZdlPvj>
 80081ba:	4620      	mov	r0, r4
 80081bc:	bd10      	pop	{r4, pc}
	...

080081c0 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 80081c0:	b510      	push	{r4, lr}
 80081c2:	4604      	mov	r4, r0
 80081c4:	f7fc ffe0 	bl	8005188 <_ZN17Main_MenuViewBaseC1Ev>
 80081c8:	4b01      	ldr	r3, [pc, #4]	; (80081d0 <_ZN13Main_MenuViewC1Ev+0x10>)
 80081ca:	6023      	str	r3, [r4, #0]
}
 80081cc:	4620      	mov	r0, r4
 80081ce:	bd10      	pop	{r4, pc}
 80081d0:	0802e190 	.word	0x0802e190

080081d4 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80081d4:	f7fc bf6a 	b.w	80050ac <_ZN17Main_MenuViewBase11setupScreenEv>

080081d8 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80081d8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80081da:	4a0a      	ldr	r2, [pc, #40]	; (8008204 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80081dc:	4605      	mov	r5, r0
 80081de:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80081e0:	460b      	mov	r3, r1
 80081e2:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80081e6:	2104      	movs	r1, #4
 80081e8:	f010 ff50 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80081ec:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80081f0:	f00e fe86 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80081f4:	b92c      	cbnz	r4, 8008202 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80081f6:	f00d fd9b 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80081fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80081fe:	f7fb beff 	b.w	8004000 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008202:	bd38      	pop	{r3, r4, r5, pc}
 8008204:	0802c5a2 	.word	0x0802c5a2

08008208 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008208:	4770      	bx	lr

0800820a <_ZThn4_N20MeasurementPresenterD1Ev>:
 800820a:	3804      	subs	r0, #4
 800820c:	4770      	bx	lr

0800820e <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800820e:	4770      	bx	lr

08008210 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008210:	68c0      	ldr	r0, [r0, #12]
 8008212:	6803      	ldr	r3, [r0, #0]
 8008214:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008216:	4718      	bx	r3

08008218 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008218:	f1a0 0004 	sub.w	r0, r0, #4
 800821c:	f7ff bff8 	b.w	8008210 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008220 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008220:	b510      	push	{r4, lr}
 8008222:	2110      	movs	r1, #16
 8008224:	4604      	mov	r4, r0
 8008226:	f021 fe38 	bl	8029e9a <_ZdlPvj>
 800822a:	4620      	mov	r0, r4
 800822c:	bd10      	pop	{r4, pc}

0800822e <_ZThn4_N20MeasurementPresenterD0Ev>:
 800822e:	f1a0 0004 	sub.w	r0, r0, #4
 8008232:	e7f5      	b.n	8008220 <_ZN20MeasurementPresenterD0Ev>

08008234 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008234:	b510      	push	{r4, lr}
 8008236:	2200      	movs	r2, #0
 8008238:	6082      	str	r2, [r0, #8]
    : view(v)
 800823a:	4a04      	ldr	r2, [pc, #16]	; (800824c <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800823c:	60c1      	str	r1, [r0, #12]
 800823e:	f102 0408 	add.w	r4, r2, #8
 8008242:	3224      	adds	r2, #36	; 0x24
 8008244:	6004      	str	r4, [r0, #0]
 8008246:	6042      	str	r2, [r0, #4]
}
 8008248:	bd10      	pop	{r4, pc}
 800824a:	bf00      	nop
 800824c:	0802e1c0 	.word	0x0802e1c0

08008250 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008250:	4770      	bx	lr
	...

08008254 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008254:	b510      	push	{r4, lr}
 8008256:	4b03      	ldr	r3, [pc, #12]	; (8008264 <_ZN15MeasurementViewD1Ev+0x10>)
 8008258:	6003      	str	r3, [r0, #0]
 800825a:	4604      	mov	r4, r0
 800825c:	f7fd fa04 	bl	8005668 <_ZN19MeasurementViewBaseD1Ev>
 8008260:	4620      	mov	r0, r4
 8008262:	bd10      	pop	{r4, pc}
 8008264:	0802e1f8 	.word	0x0802e1f8

08008268 <_ZN15MeasurementViewD0Ev>:
 8008268:	b510      	push	{r4, lr}
 800826a:	4604      	mov	r4, r0
 800826c:	f7ff fff2 	bl	8008254 <_ZN15MeasurementViewD1Ev>
 8008270:	4620      	mov	r0, r4
 8008272:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008276:	f021 fe10 	bl	8029e9a <_ZdlPvj>
 800827a:	4620      	mov	r0, r4
 800827c:	bd10      	pop	{r4, pc}
	...

08008280 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008280:	b510      	push	{r4, lr}
 8008282:	4604      	mov	r4, r0
 8008284:	f7fd fa2a 	bl	80056dc <_ZN19MeasurementViewBaseC1Ev>
 8008288:	4b01      	ldr	r3, [pc, #4]	; (8008290 <_ZN15MeasurementViewC1Ev+0x10>)
 800828a:	6023      	str	r3, [r4, #0]
}
 800828c:	4620      	mov	r0, r4
 800828e:	bd10      	pop	{r4, pc}
 8008290:	0802e1f8 	.word	0x0802e1f8

08008294 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008294:	f7fd b9c4 	b.w	8005620 <_ZN19MeasurementViewBase11setupScreenEv>

08008298 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008298:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800829a:	4a0a      	ldr	r2, [pc, #40]	; (80082c4 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800829c:	4605      	mov	r5, r0
 800829e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80082a0:	460b      	mov	r3, r1
 80082a2:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80082a6:	2104      	movs	r1, #4
 80082a8:	f010 fef0 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80082ac:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80082b0:	f00e fe26 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80082b4:	b92c      	cbnz	r4, 80082c2 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 80082b6:	f00d fd3b 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80082ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80082be:	f7fb be9f 	b.w	8004000 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80082c2:	bd38      	pop	{r3, r4, r5, pc}
 80082c4:	0802c5a2 	.word	0x0802c5a2

080082c8 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 80082c8:	4770      	bx	lr

080082ca <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 80082ca:	3804      	subs	r0, #4
 80082cc:	4770      	bx	lr

080082ce <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80082ce:	4770      	bx	lr

080082d0 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80082d0:	68c0      	ldr	r0, [r0, #12]
 80082d2:	6803      	ldr	r3, [r0, #0]
 80082d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082d6:	4718      	bx	r3

080082d8 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80082d8:	f1a0 0004 	sub.w	r0, r0, #4
 80082dc:	f7ff bff8 	b.w	80082d0 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080082e0 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80082e0:	b510      	push	{r4, lr}
 80082e2:	2110      	movs	r1, #16
 80082e4:	4604      	mov	r4, r0
 80082e6:	f021 fdd8 	bl	8029e9a <_ZdlPvj>
 80082ea:	4620      	mov	r0, r4
 80082ec:	bd10      	pop	{r4, pc}

080082ee <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80082ee:	f1a0 0004 	sub.w	r0, r0, #4
 80082f2:	e7f5      	b.n	80082e0 <_ZN29Measurement_AccuratePresenterD0Ev>

080082f4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80082f4:	b510      	push	{r4, lr}
 80082f6:	2200      	movs	r2, #0
 80082f8:	6082      	str	r2, [r0, #8]
    : view(v)
 80082fa:	4a04      	ldr	r2, [pc, #16]	; (800830c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80082fc:	60c1      	str	r1, [r0, #12]
 80082fe:	f102 0408 	add.w	r4, r2, #8
 8008302:	3224      	adds	r2, #36	; 0x24
 8008304:	6004      	str	r4, [r0, #0]
 8008306:	6042      	str	r2, [r0, #4]
}
 8008308:	bd10      	pop	{r4, pc}
 800830a:	bf00      	nop
 800830c:	0802e228 	.word	0x0802e228

08008310 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008310:	4770      	bx	lr
	...

08008314 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008314:	b510      	push	{r4, lr}
 8008316:	4b03      	ldr	r3, [pc, #12]	; (8008324 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008318:	6003      	str	r3, [r0, #0]
 800831a:	4604      	mov	r4, r0
 800831c:	f7fd fc26 	bl	8005b6c <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008320:	4620      	mov	r0, r4
 8008322:	bd10      	pop	{r4, pc}
 8008324:	0802e260 	.word	0x0802e260

08008328 <_ZN24Measurement_AccurateViewD0Ev>:
 8008328:	b510      	push	{r4, lr}
 800832a:	4604      	mov	r4, r0
 800832c:	f7ff fff2 	bl	8008314 <_ZN24Measurement_AccurateViewD1Ev>
 8008330:	4620      	mov	r0, r4
 8008332:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008336:	f021 fdb0 	bl	8029e9a <_ZdlPvj>
 800833a:	4620      	mov	r0, r4
 800833c:	bd10      	pop	{r4, pc}
	...

08008340 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008340:	b510      	push	{r4, lr}
 8008342:	4604      	mov	r4, r0
 8008344:	f7fd fc4c 	bl	8005be0 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008348:	4b01      	ldr	r3, [pc, #4]	; (8008350 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800834a:	6023      	str	r3, [r4, #0]
}
 800834c:	4620      	mov	r0, r4
 800834e:	bd10      	pop	{r4, pc}
 8008350:	0802e260 	.word	0x0802e260

08008354 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008354:	f7fd bbe6 	b.w	8005b24 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008358 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008358:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800835a:	4a0a      	ldr	r2, [pc, #40]	; (8008384 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800835c:	4605      	mov	r5, r0
 800835e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008360:	460b      	mov	r3, r1
 8008362:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008366:	2104      	movs	r1, #4
 8008368:	f010 fe90 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800836c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008370:	f00e fdc6 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008374:	b92c      	cbnz	r4, 8008382 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008376:	f00d fcdb 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800837a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800837e:	f7fb be3f 	b.w	8004000 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008382:	bd38      	pop	{r3, r4, r5, pc}
 8008384:	0802c5a2 	.word	0x0802c5a2

08008388 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008388:	4770      	bx	lr

0800838a <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800838a:	3804      	subs	r0, #4
 800838c:	4770      	bx	lr

0800838e <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800838e:	4770      	bx	lr

08008390 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008390:	4770      	bx	lr

08008392 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008392:	b510      	push	{r4, lr}
 8008394:	2110      	movs	r1, #16
 8008396:	4604      	mov	r4, r0
 8008398:	f021 fd7f 	bl	8029e9a <_ZdlPvj>
 800839c:	4620      	mov	r0, r4
 800839e:	bd10      	pop	{r4, pc}

080083a0 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 80083a0:	f1a0 0004 	sub.w	r0, r0, #4
 80083a4:	e7f5      	b.n	8008392 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

080083a6 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 80083a6:	4770      	bx	lr

080083a8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 80083a8:	b510      	push	{r4, lr}
 80083aa:	2200      	movs	r2, #0
 80083ac:	6082      	str	r2, [r0, #8]
    : view(v)
 80083ae:	4a04      	ldr	r2, [pc, #16]	; (80083c0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 80083b0:	60c1      	str	r1, [r0, #12]
 80083b2:	f102 0408 	add.w	r4, r2, #8
 80083b6:	3224      	adds	r2, #36	; 0x24
 80083b8:	6004      	str	r4, [r0, #0]
 80083ba:	6042      	str	r2, [r0, #4]
}
 80083bc:	bd10      	pop	{r4, pc}
 80083be:	bf00      	nop
 80083c0:	0802e290 	.word	0x0802e290

080083c4 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 80083c4:	4770      	bx	lr
	...

080083c8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 80083c8:	b510      	push	{r4, lr}
 80083ca:	4b03      	ldr	r3, [pc, #12]	; (80083d8 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 80083cc:	6003      	str	r3, [r0, #0]
 80083ce:	4604      	mov	r4, r0
 80083d0:	f7fd fe4a 	bl	8006068 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80083d4:	4620      	mov	r0, r4
 80083d6:	bd10      	pop	{r4, pc}
 80083d8:	0802e2c8 	.word	0x0802e2c8

080083dc <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 80083dc:	b510      	push	{r4, lr}
 80083de:	4604      	mov	r4, r0
 80083e0:	f7ff fff2 	bl	80083c8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80083e4:	4620      	mov	r0, r4
 80083e6:	f241 015c 	movw	r1, #4188	; 0x105c
 80083ea:	f021 fd56 	bl	8029e9a <_ZdlPvj>
 80083ee:	4620      	mov	r0, r4
 80083f0:	bd10      	pop	{r4, pc}
	...

080083f4 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80083f4:	b510      	push	{r4, lr}
 80083f6:	4604      	mov	r4, r0
 80083f8:	f7fd fe5e 	bl	80060b8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80083fc:	4b01      	ldr	r3, [pc, #4]	; (8008404 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80083fe:	6023      	str	r3, [r4, #0]
}
 8008400:	4620      	mov	r0, r4
 8008402:	bd10      	pop	{r4, pc}
 8008404:	0802e2c8 	.word	0x0802e2c8

08008408 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008408:	f7fd be0a 	b.w	8006020 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800840c <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800840c:	4770      	bx	lr

0800840e <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800840e:	3804      	subs	r0, #4
 8008410:	4770      	bx	lr

08008412 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008412:	4770      	bx	lr

08008414 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008414:	4770      	bx	lr

08008416 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008416:	b510      	push	{r4, lr}
 8008418:	2110      	movs	r1, #16
 800841a:	4604      	mov	r4, r0
 800841c:	f021 fd3d 	bl	8029e9a <_ZdlPvj>
 8008420:	4620      	mov	r0, r4
 8008422:	bd10      	pop	{r4, pc}

08008424 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008424:	f1a0 0004 	sub.w	r0, r0, #4
 8008428:	e7f5      	b.n	8008416 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800842a <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800842a:	4770      	bx	lr

0800842c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800842c:	b510      	push	{r4, lr}
 800842e:	2200      	movs	r2, #0
 8008430:	6082      	str	r2, [r0, #8]
    : view(v)
 8008432:	4a04      	ldr	r2, [pc, #16]	; (8008444 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008434:	60c1      	str	r1, [r0, #12]
 8008436:	f102 0408 	add.w	r4, r2, #8
 800843a:	3224      	adds	r2, #36	; 0x24
 800843c:	6004      	str	r4, [r0, #0]
 800843e:	6042      	str	r2, [r0, #4]
}
 8008440:	bd10      	pop	{r4, pc}
 8008442:	bf00      	nop
 8008444:	0802e2f4 	.word	0x0802e2f4

08008448 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008448:	4770      	bx	lr
	...

0800844c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800844c:	b510      	push	{r4, lr}
 800844e:	4b03      	ldr	r3, [pc, #12]	; (800845c <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008450:	6003      	str	r3, [r0, #0]
 8008452:	4604      	mov	r4, r0
 8008454:	f7fd ffba 	bl	80063cc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008458:	4620      	mov	r0, r4
 800845a:	bd10      	pop	{r4, pc}
 800845c:	0802e32c 	.word	0x0802e32c

08008460 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008460:	b510      	push	{r4, lr}
 8008462:	4604      	mov	r4, r0
 8008464:	f7ff fff2 	bl	800844c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008468:	4620      	mov	r0, r4
 800846a:	f241 015c 	movw	r1, #4188	; 0x105c
 800846e:	f021 fd14 	bl	8029e9a <_ZdlPvj>
 8008472:	4620      	mov	r0, r4
 8008474:	bd10      	pop	{r4, pc}
	...

08008478 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008478:	b510      	push	{r4, lr}
 800847a:	4604      	mov	r4, r0
 800847c:	f7fd ffce 	bl	800641c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008480:	4b01      	ldr	r3, [pc, #4]	; (8008488 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008482:	6023      	str	r3, [r4, #0]
}
 8008484:	4620      	mov	r0, r4
 8008486:	bd10      	pop	{r4, pc}
 8008488:	0802e32c 	.word	0x0802e32c

0800848c <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800848c:	f7fd bf7a 	b.w	8006384 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008490 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008490:	4770      	bx	lr

08008492 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008492:	3804      	subs	r0, #4
 8008494:	4770      	bx	lr

08008496 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008496:	4770      	bx	lr

08008498 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008498:	68c0      	ldr	r0, [r0, #12]
 800849a:	6803      	ldr	r3, [r0, #0]
 800849c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800849e:	4718      	bx	r3

080084a0 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80084a0:	f1a0 0004 	sub.w	r0, r0, #4
 80084a4:	f7ff bff8 	b.w	8008498 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

080084a8 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 80084a8:	b510      	push	{r4, lr}
 80084aa:	2110      	movs	r1, #16
 80084ac:	4604      	mov	r4, r0
 80084ae:	f021 fcf4 	bl	8029e9a <_ZdlPvj>
 80084b2:	4620      	mov	r0, r4
 80084b4:	bd10      	pop	{r4, pc}

080084b6 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 80084b6:	f1a0 0004 	sub.w	r0, r0, #4
 80084ba:	e7f5      	b.n	80084a8 <_ZN27Measurement_SinglePresenterD0Ev>

080084bc <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 80084bc:	b510      	push	{r4, lr}
 80084be:	2200      	movs	r2, #0
 80084c0:	6082      	str	r2, [r0, #8]
    : view(v)
 80084c2:	4a04      	ldr	r2, [pc, #16]	; (80084d4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 80084c4:	60c1      	str	r1, [r0, #12]
 80084c6:	f102 0408 	add.w	r4, r2, #8
 80084ca:	3224      	adds	r2, #36	; 0x24
 80084cc:	6004      	str	r4, [r0, #0]
 80084ce:	6042      	str	r2, [r0, #4]
}
 80084d0:	bd10      	pop	{r4, pc}
 80084d2:	bf00      	nop
 80084d4:	0802e358 	.word	0x0802e358

080084d8 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 80084d8:	4770      	bx	lr
	...

080084dc <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80084dc:	b510      	push	{r4, lr}
 80084de:	4b03      	ldr	r3, [pc, #12]	; (80084ec <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80084e0:	6003      	str	r3, [r0, #0]
 80084e2:	4604      	mov	r4, r0
 80084e4:	f7fe f922 	bl	800672c <_ZN26Measurement_SingleViewBaseD1Ev>
 80084e8:	4620      	mov	r0, r4
 80084ea:	bd10      	pop	{r4, pc}
 80084ec:	0802e390 	.word	0x0802e390

080084f0 <_ZN22Measurement_SingleViewD0Ev>:
 80084f0:	b510      	push	{r4, lr}
 80084f2:	4604      	mov	r4, r0
 80084f4:	f7ff fff2 	bl	80084dc <_ZN22Measurement_SingleViewD1Ev>
 80084f8:	4620      	mov	r0, r4
 80084fa:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80084fe:	f021 fccc 	bl	8029e9a <_ZdlPvj>
 8008502:	4620      	mov	r0, r4
 8008504:	bd10      	pop	{r4, pc}
	...

08008508 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8008508:	b510      	push	{r4, lr}
 800850a:	4604      	mov	r4, r0
 800850c:	f7fe f948 	bl	80067a0 <_ZN26Measurement_SingleViewBaseC1Ev>
 8008510:	4b01      	ldr	r3, [pc, #4]	; (8008518 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8008512:	6023      	str	r3, [r4, #0]
}
 8008514:	4620      	mov	r0, r4
 8008516:	bd10      	pop	{r4, pc}
 8008518:	0802e390 	.word	0x0802e390

0800851c <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800851c:	f7fe b8e2 	b.w	80066e4 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08008520 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8008520:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008522:	4a0a      	ldr	r2, [pc, #40]	; (800854c <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008524:	4605      	mov	r5, r0
 8008526:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008528:	460b      	mov	r3, r1
 800852a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800852e:	2104      	movs	r1, #4
 8008530:	f010 fdac 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008534:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008538:	f00e fce2 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800853c:	b92c      	cbnz	r4, 800854a <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800853e:	f00d fbf7 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008546:	f7fb bd5b 	b.w	8004000 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800854a:	bd38      	pop	{r3, r4, r5, pc}
 800854c:	0802c5a2 	.word	0x0802c5a2

08008550 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008550:	4770      	bx	lr

08008552 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8008552:	3804      	subs	r0, #4
 8008554:	4770      	bx	lr

08008556 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8008556:	4770      	bx	lr

08008558 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8008558:	4770      	bx	lr

0800855a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800855a:	b510      	push	{r4, lr}
 800855c:	2110      	movs	r1, #16
 800855e:	4604      	mov	r4, r0
 8008560:	f021 fc9b 	bl	8029e9a <_ZdlPvj>
 8008564:	4620      	mov	r0, r4
 8008566:	bd10      	pop	{r4, pc}

08008568 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8008568:	f1a0 0004 	sub.w	r0, r0, #4
 800856c:	e7f5      	b.n	800855a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800856e <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800856e:	4770      	bx	lr

08008570 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8008570:	b510      	push	{r4, lr}
 8008572:	2200      	movs	r2, #0
 8008574:	6082      	str	r2, [r0, #8]
    : view(v)
 8008576:	4a04      	ldr	r2, [pc, #16]	; (8008588 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8008578:	60c1      	str	r1, [r0, #12]
 800857a:	f102 0408 	add.w	r4, r2, #8
 800857e:	3224      	adds	r2, #36	; 0x24
 8008580:	6004      	str	r4, [r0, #0]
 8008582:	6042      	str	r2, [r0, #4]
}
 8008584:	bd10      	pop	{r4, pc}
 8008586:	bf00      	nop
 8008588:	0802e3c0 	.word	0x0802e3c0

0800858c <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800858c:	4770      	bx	lr
	...

08008590 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008590:	b510      	push	{r4, lr}
 8008592:	4b03      	ldr	r3, [pc, #12]	; (80085a0 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008594:	6003      	str	r3, [r0, #0]
 8008596:	4604      	mov	r4, r0
 8008598:	f7fe fb4c 	bl	8006c34 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800859c:	4620      	mov	r0, r4
 800859e:	bd10      	pop	{r4, pc}
 80085a0:	0802e400 	.word	0x0802e400

080085a4 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 80085a4:	b510      	push	{r4, lr}
 80085a6:	4604      	mov	r4, r0
 80085a8:	f7ff fff2 	bl	8008590 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 80085ac:	4620      	mov	r0, r4
 80085ae:	f241 31f8 	movw	r1, #5112	; 0x13f8
 80085b2:	f021 fc72 	bl	8029e9a <_ZdlPvj>
 80085b6:	4620      	mov	r0, r4
 80085b8:	bd10      	pop	{r4, pc}
	...

080085bc <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 80085bc:	b510      	push	{r4, lr}
 80085be:	4604      	mov	r4, r0
 80085c0:	f7fe fb72 	bl	8006ca8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 80085c4:	4b01      	ldr	r3, [pc, #4]	; (80085cc <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 80085c6:	6023      	str	r3, [r4, #0]
}
 80085c8:	4620      	mov	r0, r4
 80085ca:	bd10      	pop	{r4, pc}
 80085cc:	0802e400 	.word	0x0802e400

080085d0 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 80085d0:	f7fe bb0b 	b.w	8006bea <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

080085d4 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 80085d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80085d6:	4e2a      	ldr	r6, [pc, #168]	; (8008680 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 80085d8:	4f2a      	ldr	r7, [pc, #168]	; (8008684 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 80085da:	4604      	mov	r4, r0
 80085dc:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 80085de:	6803      	ldr	r3, [r0, #0]
{
 80085e0:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 80085e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80085e4:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 80085e6:	2201      	movs	r2, #1
 80085e8:	2180      	movs	r1, #128	; 0x80
 80085ea:	4638      	mov	r0, r7
 80085ec:	f000 ffe2 	bl	80095b4 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 80085f0:	f7f8 f9ee 	bl	80009d0 <updateGUI_test>
 80085f4:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 80085f6:	f7f8 ff81 	bl	80014fc <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80085fa:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 80085fc:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80085fe:	2001      	movs	r0, #1
 8008600:	f7f8 f932 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8008604:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8008608:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800860a:	ed8d 0a04 	vstr	s0, [sp, #16]
 800860e:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 8008612:	9001      	str	r0, [sp, #4]
 8008614:	f00a fc2a 	bl	8012e6c <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8008618:	9801      	ldr	r0, [sp, #4]
 800861a:	f00e fc71 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 800861e:	462b      	mov	r3, r5
 8008620:	4a19      	ldr	r2, [pc, #100]	; (8008688 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 8008622:	210a      	movs	r1, #10
 8008624:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8008628:	f010 fd30 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 800862c:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008630:	f00e fc66 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8008634:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8008636:	4a15      	ldr	r2, [pc, #84]	; (800868c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8008638:	9303      	str	r3, [sp, #12]
 800863a:	210a      	movs	r1, #10
 800863c:	ab03      	add	r3, sp, #12
 800863e:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008642:	f010 ff0f 	bl	8019464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8008646:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 800864a:	f00e fc59 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 800864e:	9b05      	ldr	r3, [sp, #20]
 8008650:	4a0e      	ldr	r2, [pc, #56]	; (800868c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8008652:	9303      	str	r3, [sp, #12]
 8008654:	210a      	movs	r1, #10
 8008656:	ab03      	add	r3, sp, #12
 8008658:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 800865c:	f010 ff02 	bl	8019464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8008660:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8008664:	f00e fc4c 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 8008668:	4638      	mov	r0, r7
 800866a:	2200      	movs	r2, #0
 800866c:	2180      	movs	r1, #128	; 0x80
 800866e:	f000 ffa1 	bl	80095b4 <HAL_GPIO_WritePin>
 8008672:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 8008674:	6803      	ldr	r3, [r0, #0]
 8008676:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 8008678:	b007      	add	sp, #28
 800867a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 800867e:	4718      	bx	r3
 8008680:	200132bc 	.word	0x200132bc
 8008684:	40020000 	.word	0x40020000
 8008688:	0802c5a2 	.word	0x0802c5a2
 800868c:	0802e3f0 	.word	0x0802e3f0

08008690 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008690:	4770      	bx	lr

08008692 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8008692:	3804      	subs	r0, #4
 8008694:	4770      	bx	lr

08008696 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008696:	4770      	bx	lr

08008698 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008698:	4770      	bx	lr

0800869a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800869a:	b510      	push	{r4, lr}
 800869c:	2110      	movs	r1, #16
 800869e:	4604      	mov	r4, r0
 80086a0:	f021 fbfb 	bl	8029e9a <_ZdlPvj>
 80086a4:	4620      	mov	r0, r4
 80086a6:	bd10      	pop	{r4, pc}

080086a8 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 80086a8:	f1a0 0004 	sub.w	r0, r0, #4
 80086ac:	e7f5      	b.n	800869a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

080086ae <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 80086ae:	4770      	bx	lr

080086b0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 80086b0:	b510      	push	{r4, lr}
 80086b2:	2200      	movs	r2, #0
 80086b4:	6082      	str	r2, [r0, #8]
    : view(v)
 80086b6:	4a04      	ldr	r2, [pc, #16]	; (80086c8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 80086b8:	60c1      	str	r1, [r0, #12]
 80086ba:	f102 0408 	add.w	r4, r2, #8
 80086be:	3224      	adds	r2, #36	; 0x24
 80086c0:	6004      	str	r4, [r0, #0]
 80086c2:	6042      	str	r2, [r0, #4]
}
 80086c4:	bd10      	pop	{r4, pc}
 80086c6:	bf00      	nop
 80086c8:	0802e430 	.word	0x0802e430

080086cc <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 80086cc:	4770      	bx	lr
	...

080086d0 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 80086d0:	b510      	push	{r4, lr}
 80086d2:	4b03      	ldr	r3, [pc, #12]	; (80086e0 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 80086d4:	6003      	str	r3, [r0, #0]
 80086d6:	4604      	mov	r4, r0
 80086d8:	f7fe fe4e 	bl	8007378 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80086dc:	4620      	mov	r0, r4
 80086de:	bd10      	pop	{r4, pc}
 80086e0:	0802e468 	.word	0x0802e468

080086e4 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 80086e4:	b510      	push	{r4, lr}
 80086e6:	4604      	mov	r4, r0
 80086e8:	f7ff fff2 	bl	80086d0 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 80086ec:	4620      	mov	r0, r4
 80086ee:	f241 015c 	movw	r1, #4188	; 0x105c
 80086f2:	f021 fbd2 	bl	8029e9a <_ZdlPvj>
 80086f6:	4620      	mov	r0, r4
 80086f8:	bd10      	pop	{r4, pc}
	...

080086fc <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 80086fc:	b510      	push	{r4, lr}
 80086fe:	4604      	mov	r4, r0
 8008700:	f7fe fe62 	bl	80073c8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008704:	4b01      	ldr	r3, [pc, #4]	; (800870c <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008706:	6023      	str	r3, [r4, #0]
}
 8008708:	4620      	mov	r0, r4
 800870a:	bd10      	pop	{r4, pc}
 800870c:	0802e468 	.word	0x0802e468

08008710 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008710:	f7fe be0e 	b.w	8007330 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008714 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008714:	2100      	movs	r1, #0
 8008716:	223c      	movs	r2, #60	; 0x3c
 8008718:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800871c:	4770      	bx	lr
	...

08008720 <_ZN5Model4tickEv>:

void Model::tick()
{
 8008720:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008722:	4d0a      	ldr	r5, [pc, #40]	; (800874c <_ZN5Model4tickEv+0x2c>)
{
 8008724:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008726:	6828      	ldr	r0, [r5, #0]
 8008728:	f004 fc20 	bl	800cf6c <osMessageQueueGetCount>
 800872c:	b168      	cbz	r0, 800874a <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800872e:	2300      	movs	r3, #0
 8008730:	6828      	ldr	r0, [r5, #0]
 8008732:	461a      	mov	r2, r3
 8008734:	1d21      	adds	r1, r4, #4
 8008736:	f004 fbe5 	bl	800cf04 <osMessageQueueGet>
 800873a:	b930      	cbnz	r0, 800874a <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800873c:	6820      	ldr	r0, [r4, #0]
 800873e:	6861      	ldr	r1, [r4, #4]
 8008740:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008742:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008746:	689b      	ldr	r3, [r3, #8]
 8008748:	4718      	bx	r3
}
 800874a:	bd70      	pop	{r4, r5, r6, pc}
 800874c:	200001d8 	.word	0x200001d8

08008750 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008750:	4770      	bx	lr

08008752 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008752:	3804      	subs	r0, #4
 8008754:	4770      	bx	lr

08008756 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008756:	4770      	bx	lr

08008758 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008758:	68c0      	ldr	r0, [r0, #12]
 800875a:	6803      	ldr	r3, [r0, #0]
 800875c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800875e:	4718      	bx	r3

08008760 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008760:	f1a0 0004 	sub.w	r0, r0, #4
 8008764:	f7ff bff8 	b.w	8008758 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008768 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008768:	b510      	push	{r4, lr}
 800876a:	2110      	movs	r1, #16
 800876c:	4604      	mov	r4, r0
 800876e:	f021 fb94 	bl	8029e9a <_ZdlPvj>
 8008772:	4620      	mov	r0, r4
 8008774:	bd10      	pop	{r4, pc}

08008776 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008776:	f1a0 0004 	sub.w	r0, r0, #4
 800877a:	e7f5      	b.n	8008768 <_ZN21Project_InfoPresenterD0Ev>

0800877c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800877c:	b510      	push	{r4, lr}
 800877e:	2200      	movs	r2, #0
 8008780:	6082      	str	r2, [r0, #8]
    : view(v)
 8008782:	4a04      	ldr	r2, [pc, #16]	; (8008794 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008784:	60c1      	str	r1, [r0, #12]
 8008786:	f102 0408 	add.w	r4, r2, #8
 800878a:	3224      	adds	r2, #36	; 0x24
 800878c:	6004      	str	r4, [r0, #0]
 800878e:	6042      	str	r2, [r0, #4]
}
 8008790:	bd10      	pop	{r4, pc}
 8008792:	bf00      	nop
 8008794:	0802e494 	.word	0x0802e494

08008798 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008798:	4770      	bx	lr
	...

0800879c <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800879c:	b510      	push	{r4, lr}
 800879e:	4b03      	ldr	r3, [pc, #12]	; (80087ac <_ZN16Project_InfoViewD1Ev+0x10>)
 80087a0:	6003      	str	r3, [r0, #0]
 80087a2:	4604      	mov	r4, r0
 80087a4:	f7fe ff96 	bl	80076d4 <_ZN20Project_InfoViewBaseD1Ev>
 80087a8:	4620      	mov	r0, r4
 80087aa:	bd10      	pop	{r4, pc}
 80087ac:	0802e4cc 	.word	0x0802e4cc

080087b0 <_ZN16Project_InfoViewD0Ev>:
 80087b0:	b510      	push	{r4, lr}
 80087b2:	4604      	mov	r4, r0
 80087b4:	f7ff fff2 	bl	800879c <_ZN16Project_InfoViewD1Ev>
 80087b8:	4620      	mov	r0, r4
 80087ba:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80087be:	f021 fb6c 	bl	8029e9a <_ZdlPvj>
 80087c2:	4620      	mov	r0, r4
 80087c4:	bd10      	pop	{r4, pc}
	...

080087c8 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 80087c8:	b510      	push	{r4, lr}
 80087ca:	4604      	mov	r4, r0
 80087cc:	f7fe ffaa 	bl	8007724 <_ZN20Project_InfoViewBaseC1Ev>
 80087d0:	4b01      	ldr	r3, [pc, #4]	; (80087d8 <_ZN16Project_InfoViewC1Ev+0x10>)
 80087d2:	6023      	str	r3, [r4, #0]
}
 80087d4:	4620      	mov	r0, r4
 80087d6:	bd10      	pop	{r4, pc}
 80087d8:	0802e4cc 	.word	0x0802e4cc

080087dc <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 80087dc:	f7fe bf56 	b.w	800768c <_ZN20Project_InfoViewBase11setupScreenEv>

080087e0 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 80087e0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80087e2:	4a0a      	ldr	r2, [pc, #40]	; (800880c <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 80087e4:	4605      	mov	r5, r0
 80087e6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80087e8:	460b      	mov	r3, r1
 80087ea:	f500 7022 	add.w	r0, r0, #648	; 0x288
 80087ee:	2104      	movs	r1, #4
 80087f0:	f010 fc4c 	bl	801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80087f4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80087f8:	f00e fb82 	bl	8016f00 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 80087fc:	b92c      	cbnz	r4, 800880a <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 80087fe:	f00d fa97 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008802:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008806:	f7fb bbfb 	b.w	8004000 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800880a:	bd38      	pop	{r3, r4, r5, pc}
 800880c:	0802c5a2 	.word	0x0802c5a2

08008810 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008810:	4770      	bx	lr

08008812 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008812:	3804      	subs	r0, #4
 8008814:	4770      	bx	lr

08008816 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008816:	4770      	bx	lr

08008818 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008818:	4770      	bx	lr

0800881a <_ZN21Shutting_OffPresenterD0Ev>:
 800881a:	b510      	push	{r4, lr}
 800881c:	2110      	movs	r1, #16
 800881e:	4604      	mov	r4, r0
 8008820:	f021 fb3b 	bl	8029e9a <_ZdlPvj>
 8008824:	4620      	mov	r0, r4
 8008826:	bd10      	pop	{r4, pc}

08008828 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8008828:	f1a0 0004 	sub.w	r0, r0, #4
 800882c:	e7f5      	b.n	800881a <_ZN21Shutting_OffPresenterD0Ev>

0800882e <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800882e:	4770      	bx	lr

08008830 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008830:	b510      	push	{r4, lr}
 8008832:	2200      	movs	r2, #0
 8008834:	6082      	str	r2, [r0, #8]
    : view(v)
 8008836:	4a04      	ldr	r2, [pc, #16]	; (8008848 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008838:	60c1      	str	r1, [r0, #12]
 800883a:	f102 0408 	add.w	r4, r2, #8
 800883e:	3224      	adds	r2, #36	; 0x24
 8008840:	6004      	str	r4, [r0, #0]
 8008842:	6042      	str	r2, [r0, #4]
}
 8008844:	bd10      	pop	{r4, pc}
 8008846:	bf00      	nop
 8008848:	0802e4fc 	.word	0x0802e4fc

0800884c <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 800884c:	4770      	bx	lr
	...

08008850 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008850:	b510      	push	{r4, lr}
 8008852:	4b03      	ldr	r3, [pc, #12]	; (8008860 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008854:	6003      	str	r3, [r0, #0]
 8008856:	4604      	mov	r4, r0
 8008858:	f7ff f932 	bl	8007ac0 <_ZN20Shutting_OffViewBaseD1Ev>
 800885c:	4620      	mov	r0, r4
 800885e:	bd10      	pop	{r4, pc}
 8008860:	0802e534 	.word	0x0802e534

08008864 <_ZN16Shutting_OffViewD0Ev>:
 8008864:	b510      	push	{r4, lr}
 8008866:	4604      	mov	r4, r0
 8008868:	f7ff fff2 	bl	8008850 <_ZN16Shutting_OffViewD1Ev>
 800886c:	4620      	mov	r0, r4
 800886e:	2198      	movs	r1, #152	; 0x98
 8008870:	f021 fb13 	bl	8029e9a <_ZdlPvj>
 8008874:	4620      	mov	r0, r4
 8008876:	bd10      	pop	{r4, pc}

08008878 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008878:	b510      	push	{r4, lr}
 800887a:	4604      	mov	r4, r0
 800887c:	f7ff f92a 	bl	8007ad4 <_ZN20Shutting_OffViewBaseC1Ev>
 8008880:	4b01      	ldr	r3, [pc, #4]	; (8008888 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008882:	6023      	str	r3, [r4, #0]
}
 8008884:	4620      	mov	r0, r4
 8008886:	bd10      	pop	{r4, pc}
 8008888:	0802e534 	.word	0x0802e534

0800888c <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800888c:	f7ff b919 	b.w	8007ac2 <_ZN20Shutting_OffViewBase11setupScreenEv>

08008890 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008890:	20f0      	movs	r0, #240	; 0xf0
 8008892:	4770      	bx	lr

08008894 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008894:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008898:	4770      	bx	lr
 800889a:	bf00      	nop

0800889c <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800889c:	2029      	movs	r0, #41	; 0x29
 800889e:	f7f8 bca5 	b.w	80011ec <LCD_IO_WriteReg>
 80088a2:	bf00      	nop

080088a4 <ili9341_DisplayOff>:
 80088a4:	2028      	movs	r0, #40	; 0x28
 80088a6:	f7f8 bca1 	b.w	80011ec <LCD_IO_WriteReg>
 80088aa:	bf00      	nop

080088ac <ili9341_Init>:
{
 80088ac:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80088ae:	f7f8 fc63 	bl	8001178 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80088b2:	20ca      	movs	r0, #202	; 0xca
 80088b4:	f7f8 fc9a 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088b8:	20c3      	movs	r0, #195	; 0xc3
 80088ba:	f7f8 fc6d 	bl	8001198 <LCD_IO_WriteData>
 80088be:	2008      	movs	r0, #8
 80088c0:	f7f8 fc6a 	bl	8001198 <LCD_IO_WriteData>
 80088c4:	2050      	movs	r0, #80	; 0x50
 80088c6:	f7f8 fc67 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088ca:	20cf      	movs	r0, #207	; 0xcf
 80088cc:	f7f8 fc8e 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088d0:	2000      	movs	r0, #0
 80088d2:	f7f8 fc61 	bl	8001198 <LCD_IO_WriteData>
 80088d6:	20c1      	movs	r0, #193	; 0xc1
 80088d8:	f7f8 fc5e 	bl	8001198 <LCD_IO_WriteData>
 80088dc:	2030      	movs	r0, #48	; 0x30
 80088de:	f7f8 fc5b 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088e2:	20ed      	movs	r0, #237	; 0xed
 80088e4:	f7f8 fc82 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088e8:	2064      	movs	r0, #100	; 0x64
 80088ea:	f7f8 fc55 	bl	8001198 <LCD_IO_WriteData>
 80088ee:	2003      	movs	r0, #3
 80088f0:	f7f8 fc52 	bl	8001198 <LCD_IO_WriteData>
 80088f4:	2012      	movs	r0, #18
 80088f6:	f7f8 fc4f 	bl	8001198 <LCD_IO_WriteData>
 80088fa:	2081      	movs	r0, #129	; 0x81
 80088fc:	f7f8 fc4c 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008900:	20e8      	movs	r0, #232	; 0xe8
 8008902:	f7f8 fc73 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008906:	2085      	movs	r0, #133	; 0x85
 8008908:	f7f8 fc46 	bl	8001198 <LCD_IO_WriteData>
 800890c:	2000      	movs	r0, #0
 800890e:	f7f8 fc43 	bl	8001198 <LCD_IO_WriteData>
 8008912:	2078      	movs	r0, #120	; 0x78
 8008914:	f7f8 fc40 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008918:	20cb      	movs	r0, #203	; 0xcb
 800891a:	f7f8 fc67 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800891e:	2039      	movs	r0, #57	; 0x39
 8008920:	f7f8 fc3a 	bl	8001198 <LCD_IO_WriteData>
 8008924:	202c      	movs	r0, #44	; 0x2c
 8008926:	f7f8 fc37 	bl	8001198 <LCD_IO_WriteData>
 800892a:	2000      	movs	r0, #0
 800892c:	f7f8 fc34 	bl	8001198 <LCD_IO_WriteData>
 8008930:	2034      	movs	r0, #52	; 0x34
 8008932:	f7f8 fc31 	bl	8001198 <LCD_IO_WriteData>
 8008936:	2002      	movs	r0, #2
 8008938:	f7f8 fc2e 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800893c:	20f7      	movs	r0, #247	; 0xf7
 800893e:	f7f8 fc55 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008942:	2020      	movs	r0, #32
 8008944:	f7f8 fc28 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008948:	20ea      	movs	r0, #234	; 0xea
 800894a:	f7f8 fc4f 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800894e:	2000      	movs	r0, #0
 8008950:	f7f8 fc22 	bl	8001198 <LCD_IO_WriteData>
 8008954:	2000      	movs	r0, #0
 8008956:	f7f8 fc1f 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800895a:	20b1      	movs	r0, #177	; 0xb1
 800895c:	f7f8 fc46 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008960:	2000      	movs	r0, #0
 8008962:	f7f8 fc19 	bl	8001198 <LCD_IO_WriteData>
 8008966:	201b      	movs	r0, #27
 8008968:	f7f8 fc16 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800896c:	20b6      	movs	r0, #182	; 0xb6
 800896e:	f7f8 fc3d 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008972:	200a      	movs	r0, #10
 8008974:	f7f8 fc10 	bl	8001198 <LCD_IO_WriteData>
 8008978:	20a2      	movs	r0, #162	; 0xa2
 800897a:	f7f8 fc0d 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800897e:	20c0      	movs	r0, #192	; 0xc0
 8008980:	f7f8 fc34 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008984:	2010      	movs	r0, #16
 8008986:	f7f8 fc07 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800898a:	20c1      	movs	r0, #193	; 0xc1
 800898c:	f7f8 fc2e 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008990:	2010      	movs	r0, #16
 8008992:	f7f8 fc01 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008996:	20c5      	movs	r0, #197	; 0xc5
 8008998:	f7f8 fc28 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800899c:	2045      	movs	r0, #69	; 0x45
 800899e:	f7f8 fbfb 	bl	8001198 <LCD_IO_WriteData>
 80089a2:	2015      	movs	r0, #21
 80089a4:	f7f8 fbf8 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089a8:	20c7      	movs	r0, #199	; 0xc7
 80089aa:	f7f8 fc1f 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089ae:	2090      	movs	r0, #144	; 0x90
 80089b0:	f7f8 fbf2 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089b4:	2036      	movs	r0, #54	; 0x36
 80089b6:	f7f8 fc19 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089ba:	20c8      	movs	r0, #200	; 0xc8
 80089bc:	f7f8 fbec 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089c0:	20f2      	movs	r0, #242	; 0xf2
 80089c2:	f7f8 fc13 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089c6:	2000      	movs	r0, #0
 80089c8:	f7f8 fbe6 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089cc:	20b0      	movs	r0, #176	; 0xb0
 80089ce:	f7f8 fc0d 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089d2:	20c2      	movs	r0, #194	; 0xc2
 80089d4:	f7f8 fbe0 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089d8:	20b6      	movs	r0, #182	; 0xb6
 80089da:	f7f8 fc07 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089de:	200a      	movs	r0, #10
 80089e0:	f7f8 fbda 	bl	8001198 <LCD_IO_WriteData>
 80089e4:	20a7      	movs	r0, #167	; 0xa7
 80089e6:	f7f8 fbd7 	bl	8001198 <LCD_IO_WriteData>
 80089ea:	2027      	movs	r0, #39	; 0x27
 80089ec:	f7f8 fbd4 	bl	8001198 <LCD_IO_WriteData>
 80089f0:	2004      	movs	r0, #4
 80089f2:	f7f8 fbd1 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089f6:	202a      	movs	r0, #42	; 0x2a
 80089f8:	f7f8 fbf8 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089fc:	2000      	movs	r0, #0
 80089fe:	f7f8 fbcb 	bl	8001198 <LCD_IO_WriteData>
 8008a02:	2000      	movs	r0, #0
 8008a04:	f7f8 fbc8 	bl	8001198 <LCD_IO_WriteData>
 8008a08:	2000      	movs	r0, #0
 8008a0a:	f7f8 fbc5 	bl	8001198 <LCD_IO_WriteData>
 8008a0e:	20ef      	movs	r0, #239	; 0xef
 8008a10:	f7f8 fbc2 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a14:	202b      	movs	r0, #43	; 0x2b
 8008a16:	f7f8 fbe9 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a1a:	2000      	movs	r0, #0
 8008a1c:	f7f8 fbbc 	bl	8001198 <LCD_IO_WriteData>
 8008a20:	2000      	movs	r0, #0
 8008a22:	f7f8 fbb9 	bl	8001198 <LCD_IO_WriteData>
 8008a26:	2001      	movs	r0, #1
 8008a28:	f7f8 fbb6 	bl	8001198 <LCD_IO_WriteData>
 8008a2c:	203f      	movs	r0, #63	; 0x3f
 8008a2e:	f7f8 fbb3 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a32:	20f6      	movs	r0, #246	; 0xf6
 8008a34:	f7f8 fbda 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a38:	2001      	movs	r0, #1
 8008a3a:	f7f8 fbad 	bl	8001198 <LCD_IO_WriteData>
 8008a3e:	2000      	movs	r0, #0
 8008a40:	f7f8 fbaa 	bl	8001198 <LCD_IO_WriteData>
 8008a44:	2006      	movs	r0, #6
 8008a46:	f7f8 fba7 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a4a:	202c      	movs	r0, #44	; 0x2c
 8008a4c:	f7f8 fbce 	bl	80011ec <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008a50:	20c8      	movs	r0, #200	; 0xc8
 8008a52:	f7f8 fc33 	bl	80012bc <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008a56:	2026      	movs	r0, #38	; 0x26
 8008a58:	f7f8 fbc8 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a5c:	2001      	movs	r0, #1
 8008a5e:	f7f8 fb9b 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a62:	20e0      	movs	r0, #224	; 0xe0
 8008a64:	f7f8 fbc2 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a68:	200f      	movs	r0, #15
 8008a6a:	f7f8 fb95 	bl	8001198 <LCD_IO_WriteData>
 8008a6e:	2029      	movs	r0, #41	; 0x29
 8008a70:	f7f8 fb92 	bl	8001198 <LCD_IO_WriteData>
 8008a74:	2024      	movs	r0, #36	; 0x24
 8008a76:	f7f8 fb8f 	bl	8001198 <LCD_IO_WriteData>
 8008a7a:	200c      	movs	r0, #12
 8008a7c:	f7f8 fb8c 	bl	8001198 <LCD_IO_WriteData>
 8008a80:	200e      	movs	r0, #14
 8008a82:	f7f8 fb89 	bl	8001198 <LCD_IO_WriteData>
 8008a86:	2009      	movs	r0, #9
 8008a88:	f7f8 fb86 	bl	8001198 <LCD_IO_WriteData>
 8008a8c:	204e      	movs	r0, #78	; 0x4e
 8008a8e:	f7f8 fb83 	bl	8001198 <LCD_IO_WriteData>
 8008a92:	2078      	movs	r0, #120	; 0x78
 8008a94:	f7f8 fb80 	bl	8001198 <LCD_IO_WriteData>
 8008a98:	203c      	movs	r0, #60	; 0x3c
 8008a9a:	f7f8 fb7d 	bl	8001198 <LCD_IO_WriteData>
 8008a9e:	2009      	movs	r0, #9
 8008aa0:	f7f8 fb7a 	bl	8001198 <LCD_IO_WriteData>
 8008aa4:	2013      	movs	r0, #19
 8008aa6:	f7f8 fb77 	bl	8001198 <LCD_IO_WriteData>
 8008aaa:	2005      	movs	r0, #5
 8008aac:	f7f8 fb74 	bl	8001198 <LCD_IO_WriteData>
 8008ab0:	2017      	movs	r0, #23
 8008ab2:	f7f8 fb71 	bl	8001198 <LCD_IO_WriteData>
 8008ab6:	2011      	movs	r0, #17
 8008ab8:	f7f8 fb6e 	bl	8001198 <LCD_IO_WriteData>
 8008abc:	2000      	movs	r0, #0
 8008abe:	f7f8 fb6b 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ac2:	20e1      	movs	r0, #225	; 0xe1
 8008ac4:	f7f8 fb92 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ac8:	2000      	movs	r0, #0
 8008aca:	f7f8 fb65 	bl	8001198 <LCD_IO_WriteData>
 8008ace:	2016      	movs	r0, #22
 8008ad0:	f7f8 fb62 	bl	8001198 <LCD_IO_WriteData>
 8008ad4:	201b      	movs	r0, #27
 8008ad6:	f7f8 fb5f 	bl	8001198 <LCD_IO_WriteData>
 8008ada:	2004      	movs	r0, #4
 8008adc:	f7f8 fb5c 	bl	8001198 <LCD_IO_WriteData>
 8008ae0:	2011      	movs	r0, #17
 8008ae2:	f7f8 fb59 	bl	8001198 <LCD_IO_WriteData>
 8008ae6:	2007      	movs	r0, #7
 8008ae8:	f7f8 fb56 	bl	8001198 <LCD_IO_WriteData>
 8008aec:	2031      	movs	r0, #49	; 0x31
 8008aee:	f7f8 fb53 	bl	8001198 <LCD_IO_WriteData>
 8008af2:	2033      	movs	r0, #51	; 0x33
 8008af4:	f7f8 fb50 	bl	8001198 <LCD_IO_WriteData>
 8008af8:	2042      	movs	r0, #66	; 0x42
 8008afa:	f7f8 fb4d 	bl	8001198 <LCD_IO_WriteData>
 8008afe:	2005      	movs	r0, #5
 8008b00:	f7f8 fb4a 	bl	8001198 <LCD_IO_WriteData>
 8008b04:	200c      	movs	r0, #12
 8008b06:	f7f8 fb47 	bl	8001198 <LCD_IO_WriteData>
 8008b0a:	200a      	movs	r0, #10
 8008b0c:	f7f8 fb44 	bl	8001198 <LCD_IO_WriteData>
 8008b10:	2028      	movs	r0, #40	; 0x28
 8008b12:	f7f8 fb41 	bl	8001198 <LCD_IO_WriteData>
 8008b16:	202f      	movs	r0, #47	; 0x2f
 8008b18:	f7f8 fb3e 	bl	8001198 <LCD_IO_WriteData>
 8008b1c:	200f      	movs	r0, #15
 8008b1e:	f7f8 fb3b 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b22:	2011      	movs	r0, #17
 8008b24:	f7f8 fb62 	bl	80011ec <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008b28:	20c8      	movs	r0, #200	; 0xc8
 8008b2a:	f7f8 fbc7 	bl	80012bc <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008b2e:	2029      	movs	r0, #41	; 0x29
 8008b30:	f7f8 fb5c 	bl	80011ec <LCD_IO_WriteReg>
}
 8008b34:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008b38:	202c      	movs	r0, #44	; 0x2c
 8008b3a:	f7f8 bb57 	b.w	80011ec <LCD_IO_WriteReg>
 8008b3e:	bf00      	nop

08008b40 <ili9341_ReadID>:
{
 8008b40:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008b42:	f7f8 fb19 	bl	8001178 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008b46:	2103      	movs	r1, #3
 8008b48:	20d3      	movs	r0, #211	; 0xd3
 8008b4a:	f7f8 fb79 	bl	8001240 <LCD_IO_ReadData>
}
 8008b4e:	b280      	uxth	r0, r0
 8008b50:	bd08      	pop	{r3, pc}
 8008b52:	bf00      	nop

08008b54 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008b54:	221f      	movs	r2, #31
 8008b56:	210b      	movs	r1, #11
 8008b58:	b2c0      	uxtb	r0, r0
 8008b5a:	f7f8 babf 	b.w	80010dc <IOE_Write>
 8008b5e:	bf00      	nop

08008b60 <stmpe811_Reset>:
{
 8008b60:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008b62:	b2c4      	uxtb	r4, r0
 8008b64:	2202      	movs	r2, #2
 8008b66:	2103      	movs	r1, #3
 8008b68:	4620      	mov	r0, r4
 8008b6a:	f7f8 fab7 	bl	80010dc <IOE_Write>
  IOE_Delay(10); 
 8008b6e:	200a      	movs	r0, #10
 8008b70:	f7f8 fb00 	bl	8001174 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008b74:	4620      	mov	r0, r4
 8008b76:	2200      	movs	r2, #0
 8008b78:	2103      	movs	r1, #3
 8008b7a:	f7f8 faaf 	bl	80010dc <IOE_Write>
}
 8008b7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008b82:	2002      	movs	r0, #2
 8008b84:	f7f8 baf6 	b.w	8001174 <IOE_Delay>

08008b88 <stmpe811_ReadID>:
{
 8008b88:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b8a:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008b8c:	f7f8 faa2 	bl	80010d4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b90:	2100      	movs	r1, #0
 8008b92:	4620      	mov	r0, r4
 8008b94:	f7f8 faba 	bl	800110c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008b98:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b9a:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008b9c:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b9e:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008ba0:	f7f8 fab4 	bl	800110c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008ba4:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008ba8:	b280      	uxth	r0, r0
 8008baa:	bd10      	pop	{r4, pc}

08008bac <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008bac:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008bae:	b2c4      	uxtb	r4, r0
 8008bb0:	2140      	movs	r1, #64	; 0x40
 8008bb2:	4620      	mov	r0, r4
 8008bb4:	f7f8 faaa 	bl	800110c <IOE_Read>
  
  if(state > 0)
 8008bb8:	0603      	lsls	r3, r0, #24
 8008bba:	d40b      	bmi.n	8008bd4 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008bbc:	4620      	mov	r0, r4
 8008bbe:	2201      	movs	r2, #1
 8008bc0:	214b      	movs	r1, #75	; 0x4b
 8008bc2:	f7f8 fa8b 	bl	80010dc <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008bc6:	4620      	mov	r0, r4
 8008bc8:	2200      	movs	r2, #0
 8008bca:	214b      	movs	r1, #75	; 0x4b
 8008bcc:	f7f8 fa86 	bl	80010dc <IOE_Write>
  uint8_t ret = 0;
 8008bd0:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008bd2:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008bd4:	214c      	movs	r1, #76	; 0x4c
 8008bd6:	4620      	mov	r0, r4
 8008bd8:	f7f8 fa98 	bl	800110c <IOE_Read>
      ret = 1;
 8008bdc:	3800      	subs	r0, #0
 8008bde:	bf18      	it	ne
 8008be0:	2001      	movne	r0, #1
}
 8008be2:	bd10      	pop	{r4, pc}

08008be4 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008be4:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008be6:	210b      	movs	r1, #11
 8008be8:	b2c0      	uxtb	r0, r0
 8008bea:	f7f8 fa8f 	bl	800110c <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008bee:	f000 001f 	and.w	r0, r0, #31
 8008bf2:	bd08      	pop	{r3, pc}

08008bf4 <stmpe811_TS_GetXY>:
{
 8008bf4:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008bf6:	2304      	movs	r3, #4
{
 8008bf8:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008bfa:	b2c4      	uxtb	r4, r0
{
 8008bfc:	4615      	mov	r5, r2
 8008bfe:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008c00:	eb0d 0203 	add.w	r2, sp, r3
 8008c04:	21d7      	movs	r1, #215	; 0xd7
 8008c06:	4620      	mov	r0, r4
 8008c08:	f7f8 fa9c 	bl	8001144 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008c0c:	9b01      	ldr	r3, [sp, #4]
 8008c0e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008c10:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008c12:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008c16:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008c18:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008c1a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008c1c:	2201      	movs	r2, #1
 8008c1e:	214b      	movs	r1, #75	; 0x4b
 8008c20:	f7f8 fa5c 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008c24:	2200      	movs	r2, #0
 8008c26:	214b      	movs	r1, #75	; 0x4b
 8008c28:	4620      	mov	r0, r4
 8008c2a:	f7f8 fa57 	bl	80010dc <IOE_Write>
}
 8008c2e:	b002      	add	sp, #8
 8008c30:	bd70      	pop	{r4, r5, r6, pc}
 8008c32:	bf00      	nop

08008c34 <stmpe811_TS_Start>:
{
 8008c34:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008c36:	b2c4      	uxtb	r4, r0
 8008c38:	2104      	movs	r1, #4
 8008c3a:	4620      	mov	r0, r4
 8008c3c:	f7f8 fa66 	bl	800110c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008c40:	2104      	movs	r1, #4
 8008c42:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008c46:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008c48:	4620      	mov	r0, r4
 8008c4a:	f7f8 fa47 	bl	80010dc <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008c4e:	2117      	movs	r1, #23
 8008c50:	4620      	mov	r0, r4
 8008c52:	f7f8 fa5b 	bl	800110c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008c56:	2117      	movs	r1, #23
 8008c58:	f000 020f 	and.w	r2, r0, #15
 8008c5c:	4620      	mov	r0, r4
 8008c5e:	f7f8 fa3d 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008c62:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008c66:	4620      	mov	r0, r4
 8008c68:	2104      	movs	r1, #4
 8008c6a:	f7f8 fa37 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008c6e:	2249      	movs	r2, #73	; 0x49
 8008c70:	2120      	movs	r1, #32
 8008c72:	4620      	mov	r0, r4
 8008c74:	f7f8 fa32 	bl	80010dc <IOE_Write>
  IOE_Delay(2); 
 8008c78:	2002      	movs	r0, #2
 8008c7a:	f7f8 fa7b 	bl	8001174 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008c7e:	4620      	mov	r0, r4
 8008c80:	2201      	movs	r2, #1
 8008c82:	2121      	movs	r1, #33	; 0x21
 8008c84:	f7f8 fa2a 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008c88:	4620      	mov	r0, r4
 8008c8a:	229a      	movs	r2, #154	; 0x9a
 8008c8c:	2141      	movs	r1, #65	; 0x41
 8008c8e:	f7f8 fa25 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008c92:	4620      	mov	r0, r4
 8008c94:	2201      	movs	r2, #1
 8008c96:	214a      	movs	r1, #74	; 0x4a
 8008c98:	f7f8 fa20 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008c9c:	4620      	mov	r0, r4
 8008c9e:	2201      	movs	r2, #1
 8008ca0:	214b      	movs	r1, #75	; 0x4b
 8008ca2:	f7f8 fa1b 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008ca6:	4620      	mov	r0, r4
 8008ca8:	2200      	movs	r2, #0
 8008caa:	214b      	movs	r1, #75	; 0x4b
 8008cac:	f7f8 fa16 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008cb0:	4620      	mov	r0, r4
 8008cb2:	2201      	movs	r2, #1
 8008cb4:	2156      	movs	r1, #86	; 0x56
 8008cb6:	f7f8 fa11 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008cba:	4620      	mov	r0, r4
 8008cbc:	2201      	movs	r2, #1
 8008cbe:	2158      	movs	r1, #88	; 0x58
 8008cc0:	f7f8 fa0c 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008cc4:	4620      	mov	r0, r4
 8008cc6:	2201      	movs	r2, #1
 8008cc8:	2140      	movs	r1, #64	; 0x40
 8008cca:	f7f8 fa07 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008cce:	4620      	mov	r0, r4
 8008cd0:	22ff      	movs	r2, #255	; 0xff
 8008cd2:	210b      	movs	r1, #11
 8008cd4:	f7f8 fa02 	bl	80010dc <IOE_Write>
}
 8008cd8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008cdc:	2002      	movs	r0, #2
 8008cde:	f7f8 ba49 	b.w	8001174 <IOE_Delay>
 8008ce2:	bf00      	nop

08008ce4 <stmpe811_TS_DisableIT>:
{
 8008ce4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008ce6:	b2c4      	uxtb	r4, r0
 8008ce8:	2109      	movs	r1, #9
 8008cea:	4620      	mov	r0, r4
 8008cec:	f7f8 fa0e 	bl	800110c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008cf0:	2109      	movs	r1, #9
 8008cf2:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8008cf6:	4620      	mov	r0, r4
 8008cf8:	f7f8 f9f0 	bl	80010dc <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008cfc:	210a      	movs	r1, #10
 8008cfe:	4620      	mov	r0, r4
 8008d00:	f7f8 fa04 	bl	800110c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008d04:	210a      	movs	r1, #10
 8008d06:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8008d0a:	4620      	mov	r0, r4
}
 8008d0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008d10:	f7f8 b9e4 	b.w	80010dc <IOE_Write>

08008d14 <stmpe811_TS_EnableIT>:
{
 8008d14:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008d16:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8008d18:	f7f8 f9de 	bl	80010d8 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008d1c:	210a      	movs	r1, #10
 8008d1e:	4620      	mov	r0, r4
 8008d20:	f7f8 f9f4 	bl	800110c <IOE_Read>
  tmp |= Source; 
 8008d24:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008d28:	b2c2      	uxtb	r2, r0
 8008d2a:	210a      	movs	r1, #10
 8008d2c:	4620      	mov	r0, r4
 8008d2e:	f7f8 f9d5 	bl	80010dc <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008d32:	2109      	movs	r1, #9
 8008d34:	4620      	mov	r0, r4
 8008d36:	f7f8 f9e9 	bl	800110c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008d3a:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008d3e:	b2c2      	uxtb	r2, r0
 8008d40:	2109      	movs	r1, #9
 8008d42:	4620      	mov	r0, r4
}
 8008d44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008d48:	f7f8 b9c8 	b.w	80010dc <IOE_Write>

08008d4c <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008d4c:	4a10      	ldr	r2, [pc, #64]	; (8008d90 <stmpe811_Init+0x44>)
 8008d4e:	7813      	ldrb	r3, [r2, #0]
 8008d50:	4298      	cmp	r0, r3
 8008d52:	d004      	beq.n	8008d5e <stmpe811_Init+0x12>
 8008d54:	7851      	ldrb	r1, [r2, #1]
 8008d56:	4288      	cmp	r0, r1
 8008d58:	d001      	beq.n	8008d5e <stmpe811_Init+0x12>
 8008d5a:	b113      	cbz	r3, 8008d62 <stmpe811_Init+0x16>
 8008d5c:	b101      	cbz	r1, 8008d60 <stmpe811_Init+0x14>
 8008d5e:	4770      	bx	lr
 8008d60:	2301      	movs	r3, #1
{
 8008d62:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8008d64:	b2c4      	uxtb	r4, r0
 8008d66:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008d68:	f7f8 f9b4 	bl	80010d4 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008d6c:	2202      	movs	r2, #2
 8008d6e:	2103      	movs	r1, #3
 8008d70:	4620      	mov	r0, r4
 8008d72:	f7f8 f9b3 	bl	80010dc <IOE_Write>
  IOE_Delay(10); 
 8008d76:	200a      	movs	r0, #10
 8008d78:	f7f8 f9fc 	bl	8001174 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008d7c:	4620      	mov	r0, r4
 8008d7e:	2200      	movs	r2, #0
 8008d80:	2103      	movs	r1, #3
 8008d82:	f7f8 f9ab 	bl	80010dc <IOE_Write>
}
 8008d86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008d8a:	2002      	movs	r0, #2
 8008d8c:	f7f8 b9f2 	b.w	8001174 <IOE_Delay>
 8008d90:	2000249c 	.word	0x2000249c

08008d94 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008d94:	4b05      	ldr	r3, [pc, #20]	; (8008dac <SystemInit+0x18>)
 8008d96:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008d9a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008d9e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8008da2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008da6:	6099      	str	r1, [r3, #8]
#endif
}
 8008da8:	4770      	bx	lr
 8008daa:	bf00      	nop
 8008dac:	e000ed00 	.word	0xe000ed00

08008db0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8008db0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8008db2:	4b0b      	ldr	r3, [pc, #44]	; (8008de0 <HAL_Init+0x30>)
 8008db4:	681a      	ldr	r2, [r3, #0]
 8008db6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008dba:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008dbc:	681a      	ldr	r2, [r3, #0]
 8008dbe:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008dc2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008dc4:	681a      	ldr	r2, [r3, #0]
 8008dc6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008dca:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008dcc:	2003      	movs	r0, #3
 8008dce:	f000 f82d 	bl	8008e2c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8008dd2:	2000      	movs	r0, #0
 8008dd4:	f7f8 fe46 	bl	8001a64 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8008dd8:	f7f8 fbc4 	bl	8001564 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8008ddc:	2000      	movs	r0, #0
 8008dde:	bd08      	pop	{r3, pc}
 8008de0:	40023c00 	.word	0x40023c00

08008de4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008de4:	4a03      	ldr	r2, [pc, #12]	; (8008df4 <HAL_IncTick+0x10>)
 8008de6:	4b04      	ldr	r3, [pc, #16]	; (8008df8 <HAL_IncTick+0x14>)
 8008de8:	6811      	ldr	r1, [r2, #0]
 8008dea:	781b      	ldrb	r3, [r3, #0]
 8008dec:	440b      	add	r3, r1
 8008dee:	6013      	str	r3, [r2, #0]
}
 8008df0:	4770      	bx	lr
 8008df2:	bf00      	nop
 8008df4:	200024a0 	.word	0x200024a0
 8008df8:	20000098 	.word	0x20000098

08008dfc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008dfc:	4b01      	ldr	r3, [pc, #4]	; (8008e04 <HAL_GetTick+0x8>)
 8008dfe:	6818      	ldr	r0, [r3, #0]
}
 8008e00:	4770      	bx	lr
 8008e02:	bf00      	nop
 8008e04:	200024a0 	.word	0x200024a0

08008e08 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8008e08:	b538      	push	{r3, r4, r5, lr}
 8008e0a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008e0c:	f7ff fff6 	bl	8008dfc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8008e10:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8008e12:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8008e14:	d002      	beq.n	8008e1c <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8008e16:	4b04      	ldr	r3, [pc, #16]	; (8008e28 <HAL_Delay+0x20>)
 8008e18:	781b      	ldrb	r3, [r3, #0]
 8008e1a:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8008e1c:	f7ff ffee 	bl	8008dfc <HAL_GetTick>
 8008e20:	1b43      	subs	r3, r0, r5
 8008e22:	42a3      	cmp	r3, r4
 8008e24:	d3fa      	bcc.n	8008e1c <HAL_Delay+0x14>
  {
  }
}
 8008e26:	bd38      	pop	{r3, r4, r5, pc}
 8008e28:	20000098 	.word	0x20000098

08008e2c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8008e2c:	4907      	ldr	r1, [pc, #28]	; (8008e4c <HAL_NVIC_SetPriorityGrouping+0x20>)
 8008e2e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008e30:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008e32:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008e36:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008e3a:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8008e3c:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8008e3e:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8008e42:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8008e46:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8008e48:	4770      	bx	lr
 8008e4a:	bf00      	nop
 8008e4c:	e000ed00 	.word	0xe000ed00

08008e50 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8008e50:	4b1c      	ldr	r3, [pc, #112]	; (8008ec4 <HAL_NVIC_SetPriority+0x74>)
 8008e52:	68db      	ldr	r3, [r3, #12]
 8008e54:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8008e58:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008e5a:	f1c3 0e07 	rsb	lr, r3, #7
 8008e5e:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008e62:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008e66:	bf28      	it	cs
 8008e68:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008e6c:	f1bc 0f06 	cmp.w	ip, #6
 8008e70:	d91b      	bls.n	8008eaa <HAL_NVIC_SetPriority+0x5a>
 8008e72:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8008e74:	f04f 3cff 	mov.w	ip, #4294967295
 8008e78:	fa0c fc03 	lsl.w	ip, ip, r3
 8008e7c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008e80:	f04f 3cff 	mov.w	ip, #4294967295
 8008e84:	fa0c fc0e 	lsl.w	ip, ip, lr
 8008e88:	ea21 010c 	bic.w	r1, r1, ip
 8008e8c:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8008e8e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008e90:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8008e94:	db0c      	blt.n	8008eb0 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008e96:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8008e9a:	0109      	lsls	r1, r1, #4
 8008e9c:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8008ea0:	b2c9      	uxtb	r1, r1
 8008ea2:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8008ea6:	f85d fb04 	ldr.w	pc, [sp], #4
 8008eaa:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008eac:	4613      	mov	r3, r2
 8008eae:	e7e7      	b.n	8008e80 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008eb0:	4b05      	ldr	r3, [pc, #20]	; (8008ec8 <HAL_NVIC_SetPriority+0x78>)
 8008eb2:	f000 000f 	and.w	r0, r0, #15
 8008eb6:	0109      	lsls	r1, r1, #4
 8008eb8:	4403      	add	r3, r0
 8008eba:	b2c9      	uxtb	r1, r1
 8008ebc:	7619      	strb	r1, [r3, #24]
 8008ebe:	f85d fb04 	ldr.w	pc, [sp], #4
 8008ec2:	bf00      	nop
 8008ec4:	e000ed00 	.word	0xe000ed00
 8008ec8:	e000ecfc 	.word	0xe000ecfc

08008ecc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8008ecc:	2800      	cmp	r0, #0
 8008ece:	db07      	blt.n	8008ee0 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8008ed0:	0941      	lsrs	r1, r0, #5
 8008ed2:	4a04      	ldr	r2, [pc, #16]	; (8008ee4 <HAL_NVIC_EnableIRQ+0x18>)
 8008ed4:	f000 001f 	and.w	r0, r0, #31
 8008ed8:	2301      	movs	r3, #1
 8008eda:	4083      	lsls	r3, r0
 8008edc:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8008ee0:	4770      	bx	lr
 8008ee2:	bf00      	nop
 8008ee4:	e000e100 	.word	0xe000e100

08008ee8 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8008ee8:	b180      	cbz	r0, 8008f0c <HAL_CRC_Init+0x24>
{
 8008eea:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8008eec:	7943      	ldrb	r3, [r0, #5]
 8008eee:	4604      	mov	r4, r0
 8008ef0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008ef4:	b11b      	cbz	r3, 8008efe <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8008ef6:	2301      	movs	r3, #1
 8008ef8:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8008efa:	2000      	movs	r0, #0
}
 8008efc:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8008efe:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8008f00:	f7f8 fb50 	bl	80015a4 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8008f04:	2301      	movs	r3, #1
 8008f06:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8008f08:	2000      	movs	r0, #0
}
 8008f0a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008f0c:	2001      	movs	r0, #1
}
 8008f0e:	4770      	bx	lr

08008f10 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8008f10:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8008f14:	2b02      	cmp	r3, #2
 8008f16:	d003      	beq.n	8008f20 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8008f18:	2380      	movs	r3, #128	; 0x80
 8008f1a:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8008f1c:	2001      	movs	r0, #1
 8008f1e:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8008f20:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8008f22:	2305      	movs	r3, #5
 8008f24:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8008f28:	6813      	ldr	r3, [r2, #0]
 8008f2a:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8008f2e:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8008f30:	6013      	str	r3, [r2, #0]
}
 8008f32:	4770      	bx	lr

08008f34 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8008f34:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8008f38:	4770      	bx	lr
 8008f3a:	bf00      	nop

08008f3c <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8008f3c:	4b21      	ldr	r3, [pc, #132]	; (8008fc4 <FLASH_SetErrorCode+0x88>)
 8008f3e:	68da      	ldr	r2, [r3, #12]
 8008f40:	06d0      	lsls	r0, r2, #27
 8008f42:	d505      	bpl.n	8008f50 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8008f44:	4920      	ldr	r1, [pc, #128]	; (8008fc8 <FLASH_SetErrorCode+0x8c>)
 8008f46:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8008f48:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8008f4a:	4302      	orrs	r2, r0
 8008f4c:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8008f4e:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8008f50:	4b1c      	ldr	r3, [pc, #112]	; (8008fc4 <FLASH_SetErrorCode+0x88>)
 8008f52:	68da      	ldr	r2, [r3, #12]
 8008f54:	0691      	lsls	r1, r2, #26
 8008f56:	d506      	bpl.n	8008f66 <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8008f58:	491b      	ldr	r1, [pc, #108]	; (8008fc8 <FLASH_SetErrorCode+0x8c>)
 8008f5a:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8008f5c:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8008f5e:	f042 0208 	orr.w	r2, r2, #8
 8008f62:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8008f64:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8008f66:	4b17      	ldr	r3, [pc, #92]	; (8008fc4 <FLASH_SetErrorCode+0x88>)
 8008f68:	68da      	ldr	r2, [r3, #12]
 8008f6a:	0652      	lsls	r2, r2, #25
 8008f6c:	d506      	bpl.n	8008f7c <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8008f6e:	4916      	ldr	r1, [pc, #88]	; (8008fc8 <FLASH_SetErrorCode+0x8c>)
 8008f70:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8008f72:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8008f74:	f042 0204 	orr.w	r2, r2, #4
 8008f78:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8008f7a:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8008f7c:	4b11      	ldr	r3, [pc, #68]	; (8008fc4 <FLASH_SetErrorCode+0x88>)
 8008f7e:	68da      	ldr	r2, [r3, #12]
 8008f80:	0610      	lsls	r0, r2, #24
 8008f82:	d506      	bpl.n	8008f92 <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8008f84:	4910      	ldr	r1, [pc, #64]	; (8008fc8 <FLASH_SetErrorCode+0x8c>)
 8008f86:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8008f88:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8008f8a:	f042 0202 	orr.w	r2, r2, #2
 8008f8e:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8008f90:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8008f92:	4b0c      	ldr	r3, [pc, #48]	; (8008fc4 <FLASH_SetErrorCode+0x88>)
 8008f94:	68da      	ldr	r2, [r3, #12]
 8008f96:	05d1      	lsls	r1, r2, #23
 8008f98:	d507      	bpl.n	8008faa <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8008f9a:	490b      	ldr	r1, [pc, #44]	; (8008fc8 <FLASH_SetErrorCode+0x8c>)
 8008f9c:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8008f9e:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8008fa2:	f042 0201 	orr.w	r2, r2, #1
 8008fa6:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8008fa8:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8008faa:	4b06      	ldr	r3, [pc, #24]	; (8008fc4 <FLASH_SetErrorCode+0x88>)
 8008fac:	68da      	ldr	r2, [r3, #12]
 8008fae:	0792      	lsls	r2, r2, #30
 8008fb0:	d506      	bpl.n	8008fc0 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8008fb2:	4905      	ldr	r1, [pc, #20]	; (8008fc8 <FLASH_SetErrorCode+0x8c>)
 8008fb4:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8008fb6:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8008fb8:	f042 0220 	orr.w	r2, r2, #32
 8008fbc:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8008fbe:	60d8      	str	r0, [r3, #12]
  }
}
 8008fc0:	4770      	bx	lr
 8008fc2:	bf00      	nop
 8008fc4:	40023c00 	.word	0x40023c00
 8008fc8:	200024a4 	.word	0x200024a4

08008fcc <HAL_FLASH_Program>:
{
 8008fcc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8008fd0:	4f4d      	ldr	r7, [pc, #308]	; (8009108 <HAL_FLASH_Program+0x13c>)
{
 8008fd2:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 8008fd4:	7e3b      	ldrb	r3, [r7, #24]
 8008fd6:	2b01      	cmp	r3, #1
 8008fd8:	d060      	beq.n	800909c <HAL_FLASH_Program+0xd0>
 8008fda:	2301      	movs	r3, #1
 8008fdc:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8008fde:	2300      	movs	r3, #0
 8008fe0:	4681      	mov	r9, r0
 8008fe2:	468a      	mov	sl, r1
 8008fe4:	4690      	mov	r8, r2
 8008fe6:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8008fe8:	f7ff ff08 	bl	8008dfc <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8008fec:	4d47      	ldr	r5, [pc, #284]	; (800910c <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8008fee:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008ff0:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8008ff4:	e004      	b.n	8009000 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008ff6:	f7ff ff01 	bl	8008dfc <HAL_GetTick>
 8008ffa:	1b00      	subs	r0, r0, r4
 8008ffc:	42b0      	cmp	r0, r6
 8008ffe:	d848      	bhi.n	8009092 <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009000:	68eb      	ldr	r3, [r5, #12]
 8009002:	03d8      	lsls	r0, r3, #15
 8009004:	d4f7      	bmi.n	8008ff6 <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009006:	68eb      	ldr	r3, [r5, #12]
 8009008:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800900a:	bf44      	itt	mi
 800900c:	2301      	movmi	r3, #1
 800900e:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009010:	4b3e      	ldr	r3, [pc, #248]	; (800910c <HAL_FLASH_Program+0x140>)
 8009012:	68da      	ldr	r2, [r3, #12]
 8009014:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 8009018:	d154      	bne.n	80090c4 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800901a:	f1b9 0f00 	cmp.w	r9, #0
 800901e:	d040      	beq.n	80090a2 <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009020:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009024:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009026:	d051      	beq.n	80090cc <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009028:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800902c:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800902e:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009032:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009034:	d05e      	beq.n	80090f4 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8009036:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800903a:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800903c:	691a      	ldr	r2, [r3, #16]
 800903e:	f042 0201 	orr.w	r2, r2, #1
 8009042:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8009044:	f8ca 8000 	str.w	r8, [sl]
 8009048:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 800904c:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009050:	2300      	movs	r3, #0
 8009052:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009054:	f7ff fed2 	bl	8008dfc <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009058:	4d2c      	ldr	r5, [pc, #176]	; (800910c <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800905a:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800905c:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009060:	e004      	b.n	800906c <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009062:	f7ff fecb 	bl	8008dfc <HAL_GetTick>
 8009066:	1b00      	subs	r0, r0, r4
 8009068:	42b0      	cmp	r0, r6
 800906a:	d829      	bhi.n	80090c0 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800906c:	68eb      	ldr	r3, [r5, #12]
 800906e:	03da      	lsls	r2, r3, #15
 8009070:	d4f7      	bmi.n	8009062 <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009072:	68eb      	ldr	r3, [r5, #12]
 8009074:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009076:	bf44      	itt	mi
 8009078:	2301      	movmi	r3, #1
 800907a:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800907c:	4b23      	ldr	r3, [pc, #140]	; (800910c <HAL_FLASH_Program+0x140>)
 800907e:	68d8      	ldr	r0, [r3, #12]
 8009080:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009084:	d132      	bne.n	80090ec <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 8009086:	4a21      	ldr	r2, [pc, #132]	; (800910c <HAL_FLASH_Program+0x140>)
 8009088:	6913      	ldr	r3, [r2, #16]
 800908a:	f023 0301 	bic.w	r3, r3, #1
 800908e:	6113      	str	r3, [r2, #16]
 8009090:	e000      	b.n	8009094 <HAL_FLASH_Program+0xc8>
 8009092:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 8009094:	2300      	movs	r3, #0
 8009096:	763b      	strb	r3, [r7, #24]
}
 8009098:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 800909c:	2002      	movs	r0, #2
}
 800909e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80090a2:	691a      	ldr	r2, [r3, #16]
 80090a4:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80090a8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 80090aa:	691a      	ldr	r2, [r3, #16]
 80090ac:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 80090ae:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 80090b0:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 80090b4:	f042 0201 	orr.w	r2, r2, #1
 80090b8:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 80090ba:	f88a 8000 	strb.w	r8, [sl]
}
 80090be:	e7c7      	b.n	8009050 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 80090c0:	2003      	movs	r0, #3
 80090c2:	e7e0      	b.n	8009086 <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 80090c4:	f7ff ff3a 	bl	8008f3c <FLASH_SetErrorCode>
    return HAL_ERROR;
 80090c8:	2001      	movs	r0, #1
 80090ca:	e7e3      	b.n	8009094 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80090cc:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80090d0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 80090d2:	691a      	ldr	r2, [r3, #16]
 80090d4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80090d8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 80090da:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 80090dc:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 80090e0:	f042 0201 	orr.w	r2, r2, #1
 80090e4:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 80090e6:	f8aa 8000 	strh.w	r8, [sl]
}
 80090ea:	e7b1      	b.n	8009050 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 80090ec:	f7ff ff26 	bl	8008f3c <FLASH_SetErrorCode>
    return HAL_ERROR;
 80090f0:	2001      	movs	r0, #1
 80090f2:	e7c8      	b.n	8009086 <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 80090f4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80090f8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 80090fa:	691a      	ldr	r2, [r3, #16]
 80090fc:	f042 0201 	orr.w	r2, r2, #1
 8009100:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 8009102:	f8ca 8000 	str.w	r8, [sl]
}
 8009106:	e7a3      	b.n	8009050 <HAL_FLASH_Program+0x84>
 8009108:	200024a4 	.word	0x200024a4
 800910c:	40023c00 	.word	0x40023c00

08009110 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009110:	4b06      	ldr	r3, [pc, #24]	; (800912c <HAL_FLASH_Unlock+0x1c>)
 8009112:	691a      	ldr	r2, [r3, #16]
 8009114:	2a00      	cmp	r2, #0
 8009116:	db01      	blt.n	800911c <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 8009118:	2000      	movs	r0, #0
}
 800911a:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800911c:	4904      	ldr	r1, [pc, #16]	; (8009130 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800911e:	4a05      	ldr	r2, [pc, #20]	; (8009134 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009120:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009122:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009124:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 8009126:	0fc0      	lsrs	r0, r0, #31
 8009128:	4770      	bx	lr
 800912a:	bf00      	nop
 800912c:	40023c00 	.word	0x40023c00
 8009130:	45670123 	.word	0x45670123
 8009134:	cdef89ab 	.word	0xcdef89ab

08009138 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8009138:	4a03      	ldr	r2, [pc, #12]	; (8009148 <HAL_FLASH_Lock+0x10>)
 800913a:	6913      	ldr	r3, [r2, #16]
 800913c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 8009140:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 8009142:	6113      	str	r3, [r2, #16]
}
 8009144:	4770      	bx	lr
 8009146:	bf00      	nop
 8009148:	40023c00 	.word	0x40023c00

0800914c <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800914c:	4b01      	ldr	r3, [pc, #4]	; (8009154 <HAL_FLASH_GetError+0x8>)
 800914e:	69d8      	ldr	r0, [r3, #28]
}  
 8009150:	4770      	bx	lr
 8009152:	bf00      	nop
 8009154:	200024a4 	.word	0x200024a4

08009158 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009158:	4b14      	ldr	r3, [pc, #80]	; (80091ac <FLASH_WaitForLastOperation+0x54>)
{ 
 800915a:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800915c:	2200      	movs	r2, #0
{ 
 800915e:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009160:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8009162:	f7ff fe4b 	bl	8008dfc <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009166:	4e12      	ldr	r6, [pc, #72]	; (80091b0 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 8009168:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800916a:	1c63      	adds	r3, r4, #1
 800916c:	d10f      	bne.n	800918e <FLASH_WaitForLastOperation+0x36>
 800916e:	4a10      	ldr	r2, [pc, #64]	; (80091b0 <FLASH_WaitForLastOperation+0x58>)
 8009170:	68d3      	ldr	r3, [r2, #12]
 8009172:	03d8      	lsls	r0, r3, #15
 8009174:	d4fc      	bmi.n	8009170 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009176:	4b0e      	ldr	r3, [pc, #56]	; (80091b0 <FLASH_WaitForLastOperation+0x58>)
 8009178:	68da      	ldr	r2, [r3, #12]
 800917a:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800917c:	bf44      	itt	mi
 800917e:	2201      	movmi	r2, #1
 8009180:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009182:	4b0b      	ldr	r3, [pc, #44]	; (80091b0 <FLASH_WaitForLastOperation+0x58>)
 8009184:	68d8      	ldr	r0, [r3, #12]
 8009186:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800918a:	d10b      	bne.n	80091a4 <FLASH_WaitForLastOperation+0x4c>
}  
 800918c:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800918e:	68f3      	ldr	r3, [r6, #12]
 8009190:	03d9      	lsls	r1, r3, #15
 8009192:	d5f0      	bpl.n	8009176 <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009194:	b124      	cbz	r4, 80091a0 <FLASH_WaitForLastOperation+0x48>
 8009196:	f7ff fe31 	bl	8008dfc <HAL_GetTick>
 800919a:	1b40      	subs	r0, r0, r5
 800919c:	42a0      	cmp	r0, r4
 800919e:	d9e4      	bls.n	800916a <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 80091a0:	2003      	movs	r0, #3
}  
 80091a2:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 80091a4:	f7ff feca 	bl	8008f3c <FLASH_SetErrorCode>
    return HAL_ERROR;
 80091a8:	2001      	movs	r0, #1
}  
 80091aa:	bd70      	pop	{r4, r5, r6, pc}
 80091ac:	200024a4 	.word	0x200024a4
 80091b0:	40023c00 	.word	0x40023c00

080091b4 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 80091b4:	4b14      	ldr	r3, [pc, #80]	; (8009208 <FLASH_FlushCaches+0x54>)
 80091b6:	681a      	ldr	r2, [r3, #0]
 80091b8:	0591      	lsls	r1, r2, #22
 80091ba:	d50f      	bpl.n	80091dc <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 80091bc:	681a      	ldr	r2, [r3, #0]
 80091be:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80091c2:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 80091c4:	681a      	ldr	r2, [r3, #0]
 80091c6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80091ca:	601a      	str	r2, [r3, #0]
 80091cc:	681a      	ldr	r2, [r3, #0]
 80091ce:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80091d2:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80091d4:	681a      	ldr	r2, [r3, #0]
 80091d6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80091da:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 80091dc:	4b0a      	ldr	r3, [pc, #40]	; (8009208 <FLASH_FlushCaches+0x54>)
 80091de:	681a      	ldr	r2, [r3, #0]
 80091e0:	0552      	lsls	r2, r2, #21
 80091e2:	d50f      	bpl.n	8009204 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 80091e4:	681a      	ldr	r2, [r3, #0]
 80091e6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80091ea:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 80091ec:	681a      	ldr	r2, [r3, #0]
 80091ee:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80091f2:	601a      	str	r2, [r3, #0]
 80091f4:	681a      	ldr	r2, [r3, #0]
 80091f6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80091fa:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 80091fc:	681a      	ldr	r2, [r3, #0]
 80091fe:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009202:	601a      	str	r2, [r3, #0]
  }
}
 8009204:	4770      	bx	lr
 8009206:	bf00      	nop
 8009208:	40023c00 	.word	0x40023c00

0800920c <HAL_FLASHEx_Erase>:
{
 800920c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009210:	4f44      	ldr	r7, [pc, #272]	; (8009324 <HAL_FLASHEx_Erase+0x118>)
 8009212:	7e3b      	ldrb	r3, [r7, #24]
 8009214:	2b01      	cmp	r3, #1
 8009216:	d053      	beq.n	80092c0 <HAL_FLASHEx_Erase+0xb4>
 8009218:	2301      	movs	r3, #1
 800921a:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800921c:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009220:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009222:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009224:	f7ff ff98 	bl	8009158 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8009228:	4606      	mov	r6, r0
 800922a:	2800      	cmp	r0, #0
 800922c:	d143      	bne.n	80092b6 <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 800922e:	f04f 33ff 	mov.w	r3, #4294967295
 8009232:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8009236:	f8d9 3000 	ldr.w	r3, [r9]
 800923a:	2b01      	cmp	r3, #1
 800923c:	d044      	beq.n	80092c8 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800923e:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 8009242:	442b      	add	r3, r5
 8009244:	429d      	cmp	r5, r3
 8009246:	d234      	bcs.n	80092b2 <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009248:	4c37      	ldr	r4, [pc, #220]	; (8009328 <HAL_FLASHEx_Erase+0x11c>)
 800924a:	e005      	b.n	8009258 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800924c:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 8009250:	3501      	adds	r5, #1
 8009252:	4413      	add	r3, r2
 8009254:	42ab      	cmp	r3, r5
 8009256:	d92c      	bls.n	80092b2 <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8009258:	f899 3010 	ldrb.w	r3, [r9, #16]
 800925c:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 800925e:	f44f 7140 	mov.w	r1, #768	; 0x300
 8009262:	bf98      	it	ls
 8009264:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009266:	6923      	ldr	r3, [r4, #16]
 8009268:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800926c:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 800926e:	6923      	ldr	r3, [r4, #16]
 8009270:	430b      	orrs	r3, r1
 8009272:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8009274:	6923      	ldr	r3, [r4, #16]
 8009276:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800927a:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800927c:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 800927e:	2d0b      	cmp	r5, #11
    Sector += 4U;
 8009280:	bf8c      	ite	hi
 8009282:	1d2a      	addhi	r2, r5, #4
 8009284:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009286:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800928a:	f043 0302 	orr.w	r3, r3, #2
 800928e:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8009290:	6923      	ldr	r3, [r4, #16]
 8009292:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009296:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009298:	f24c 3050 	movw	r0, #50000	; 0xc350
 800929c:	f7ff ff5c 	bl	8009158 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 80092a0:	6923      	ldr	r3, [r4, #16]
 80092a2:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 80092a6:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 80092a8:	2800      	cmp	r0, #0
 80092aa:	d0cf      	beq.n	800924c <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 80092ac:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80092b0:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 80092b2:	f7ff ff7f 	bl	80091b4 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 80092b6:	2300      	movs	r3, #0
 80092b8:	763b      	strb	r3, [r7, #24]
}
 80092ba:	4630      	mov	r0, r6
 80092bc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 80092c0:	2602      	movs	r6, #2
}
 80092c2:	4630      	mov	r0, r6
 80092c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80092c8:	4a17      	ldr	r2, [pc, #92]	; (8009328 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 80092ca:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80092ce:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 80092d0:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80092d4:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 80092d8:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 80092da:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 80092dc:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 80092de:	d01a      	beq.n	8009316 <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 80092e0:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 80092e2:	bf0c      	ite	eq
 80092e4:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 80092e8:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 80092ec:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 80092ee:	4c0e      	ldr	r4, [pc, #56]	; (8009328 <HAL_FLASHEx_Erase+0x11c>)
 80092f0:	021b      	lsls	r3, r3, #8
 80092f2:	6922      	ldr	r2, [r4, #16]
 80092f4:	b29b      	uxth	r3, r3
 80092f6:	4313      	orrs	r3, r2
 80092f8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80092fc:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80092fe:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009302:	f7ff ff29 	bl	8009158 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8009306:	6923      	ldr	r3, [r4, #16]
 8009308:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800930c:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009310:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009312:	6123      	str	r3, [r4, #16]
 8009314:	e7cd      	b.n	80092b2 <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 8009316:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800931a:	f041 0104 	orr.w	r1, r1, #4
 800931e:	6111      	str	r1, [r2, #16]
 8009320:	e7e5      	b.n	80092ee <HAL_FLASHEx_Erase+0xe2>
 8009322:	bf00      	nop
 8009324:	200024a4 	.word	0x200024a4
 8009328:	40023c00 	.word	0x40023c00

0800932c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800932c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009330:	2200      	movs	r2, #0
 8009332:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009334:	f8df a260 	ldr.w	sl, [pc, #608]	; 8009598 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009338:	4e90      	ldr	r6, [pc, #576]	; (800957c <HAL_GPIO_Init+0x250>)
{
 800933a:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800933c:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800933e:	4689      	mov	r9, r1
 8009340:	e005      	b.n	800934e <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009342:	3301      	adds	r3, #1
 8009344:	2b10      	cmp	r3, #16
 8009346:	f102 0202 	add.w	r2, r2, #2
 800934a:	f000 8095 	beq.w	8009478 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800934e:	2101      	movs	r1, #1
 8009350:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009352:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009356:	43a1      	bics	r1, r4
 8009358:	d1f3      	bne.n	8009342 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800935a:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800935e:	f00c 0103 	and.w	r1, ip, #3
 8009362:	1e4d      	subs	r5, r1, #1
 8009364:	2d01      	cmp	r5, #1
 8009366:	f240 808a 	bls.w	800947e <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800936a:	2903      	cmp	r1, #3
 800936c:	f040 80ca 	bne.w	8009504 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009370:	4091      	lsls	r1, r2
 8009372:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009374:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009376:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009378:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800937a:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800937e:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009380:	d0df      	beq.n	8009342 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009382:	2100      	movs	r1, #0
 8009384:	9103      	str	r1, [sp, #12]
 8009386:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800938a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800938e:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009392:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009396:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800939a:	9103      	str	r1, [sp, #12]
 800939c:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800939e:	f023 0103 	bic.w	r1, r3, #3
 80093a2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80093a6:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80093aa:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80093ae:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80093b0:	00bf      	lsls	r7, r7, #2
 80093b2:	f04f 0e0f 	mov.w	lr, #15
 80093b6:	fa0e fe07 	lsl.w	lr, lr, r7
 80093ba:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80093be:	4d70      	ldr	r5, [pc, #448]	; (8009580 <HAL_GPIO_Init+0x254>)
 80093c0:	42a8      	cmp	r0, r5
 80093c2:	d02e      	beq.n	8009422 <HAL_GPIO_Init+0xf6>
 80093c4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80093c8:	42a8      	cmp	r0, r5
 80093ca:	f000 809f 	beq.w	800950c <HAL_GPIO_Init+0x1e0>
 80093ce:	4d6d      	ldr	r5, [pc, #436]	; (8009584 <HAL_GPIO_Init+0x258>)
 80093d0:	42a8      	cmp	r0, r5
 80093d2:	f000 80a2 	beq.w	800951a <HAL_GPIO_Init+0x1ee>
 80093d6:	4d6c      	ldr	r5, [pc, #432]	; (8009588 <HAL_GPIO_Init+0x25c>)
 80093d8:	42a8      	cmp	r0, r5
 80093da:	f000 80a5 	beq.w	8009528 <HAL_GPIO_Init+0x1fc>
 80093de:	4d6b      	ldr	r5, [pc, #428]	; (800958c <HAL_GPIO_Init+0x260>)
 80093e0:	42a8      	cmp	r0, r5
 80093e2:	f000 80a8 	beq.w	8009536 <HAL_GPIO_Init+0x20a>
 80093e6:	4d6a      	ldr	r5, [pc, #424]	; (8009590 <HAL_GPIO_Init+0x264>)
 80093e8:	42a8      	cmp	r0, r5
 80093ea:	f000 80b2 	beq.w	8009552 <HAL_GPIO_Init+0x226>
 80093ee:	4d69      	ldr	r5, [pc, #420]	; (8009594 <HAL_GPIO_Init+0x268>)
 80093f0:	42a8      	cmp	r0, r5
 80093f2:	f000 80b5 	beq.w	8009560 <HAL_GPIO_Init+0x234>
 80093f6:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800959c <HAL_GPIO_Init+0x270>
 80093fa:	4570      	cmp	r0, lr
 80093fc:	f000 80a2 	beq.w	8009544 <HAL_GPIO_Init+0x218>
 8009400:	f8df e19c 	ldr.w	lr, [pc, #412]	; 80095a0 <HAL_GPIO_Init+0x274>
 8009404:	4570      	cmp	r0, lr
 8009406:	f000 80b2 	beq.w	800956e <HAL_GPIO_Init+0x242>
 800940a:	f8df e198 	ldr.w	lr, [pc, #408]	; 80095a4 <HAL_GPIO_Init+0x278>
 800940e:	4570      	cmp	r0, lr
 8009410:	bf0c      	ite	eq
 8009412:	f04f 0e09 	moveq.w	lr, #9
 8009416:	f04f 0e0a 	movne.w	lr, #10
 800941a:	fa0e f707 	lsl.w	r7, lr, r7
 800941e:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009422:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009426:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009428:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800942c:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009430:	bf0c      	ite	eq
 8009432:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009434:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009438:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800943a:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800943c:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009440:	bf0c      	ite	eq
 8009442:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009444:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009448:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800944a:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800944c:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009450:	bf0c      	ite	eq
 8009452:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009454:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009458:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800945a:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800945c:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009460:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009464:	bf0c      	ite	eq
 8009466:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009468:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800946c:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800946e:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009470:	f102 0202 	add.w	r2, r2, #2
 8009474:	f47f af6b 	bne.w	800934e <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009478:	b005      	add	sp, #20
 800947a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800947e:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009482:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009486:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800948a:	2503      	movs	r5, #3
 800948c:	fa05 f802 	lsl.w	r8, r5, r2
 8009490:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009494:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009498:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800949a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800949c:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80094a0:	f3cc 1700 	ubfx	r7, ip, #4, #1
 80094a4:	409f      	lsls	r7, r3
 80094a6:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80094aa:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 80094ae:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80094b0:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80094b2:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80094b6:	f8d9 7008 	ldr.w	r7, [r9, #8]
 80094ba:	4097      	lsls	r7, r2
 80094bc:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80094c0:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 80094c2:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80094c4:	fa01 f102 	lsl.w	r1, r1, r2
 80094c8:	f47f af54 	bne.w	8009374 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 80094cc:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 80094d0:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80094d4:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80094d8:	f8de 7020 	ldr.w	r7, [lr, #32]
 80094dc:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80094de:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80094e2:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80094e6:	fa07 f708 	lsl.w	r7, r7, r8
 80094ea:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80094ec:	270f      	movs	r7, #15
 80094ee:	fa07 f808 	lsl.w	r8, r7, r8
 80094f2:	9f00      	ldr	r7, [sp, #0]
 80094f4:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80094f8:	9f01      	ldr	r7, [sp, #4]
 80094fa:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 80094fe:	f8ce 7020 	str.w	r7, [lr, #32]
 8009502:	e737      	b.n	8009374 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009504:	2503      	movs	r5, #3
 8009506:	4095      	lsls	r5, r2
 8009508:	43ed      	mvns	r5, r5
 800950a:	e7d1      	b.n	80094b0 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800950c:	f04f 0e01 	mov.w	lr, #1
 8009510:	fa0e f707 	lsl.w	r7, lr, r7
 8009514:	ea48 0807 	orr.w	r8, r8, r7
 8009518:	e783      	b.n	8009422 <HAL_GPIO_Init+0xf6>
 800951a:	f04f 0e02 	mov.w	lr, #2
 800951e:	fa0e f707 	lsl.w	r7, lr, r7
 8009522:	ea48 0807 	orr.w	r8, r8, r7
 8009526:	e77c      	b.n	8009422 <HAL_GPIO_Init+0xf6>
 8009528:	f04f 0e03 	mov.w	lr, #3
 800952c:	fa0e f707 	lsl.w	r7, lr, r7
 8009530:	ea48 0807 	orr.w	r8, r8, r7
 8009534:	e775      	b.n	8009422 <HAL_GPIO_Init+0xf6>
 8009536:	f04f 0e04 	mov.w	lr, #4
 800953a:	fa0e f707 	lsl.w	r7, lr, r7
 800953e:	ea48 0807 	orr.w	r8, r8, r7
 8009542:	e76e      	b.n	8009422 <HAL_GPIO_Init+0xf6>
 8009544:	f04f 0e07 	mov.w	lr, #7
 8009548:	fa0e f707 	lsl.w	r7, lr, r7
 800954c:	ea48 0807 	orr.w	r8, r8, r7
 8009550:	e767      	b.n	8009422 <HAL_GPIO_Init+0xf6>
 8009552:	f04f 0e05 	mov.w	lr, #5
 8009556:	fa0e f707 	lsl.w	r7, lr, r7
 800955a:	ea48 0807 	orr.w	r8, r8, r7
 800955e:	e760      	b.n	8009422 <HAL_GPIO_Init+0xf6>
 8009560:	f04f 0e06 	mov.w	lr, #6
 8009564:	fa0e f707 	lsl.w	r7, lr, r7
 8009568:	ea48 0807 	orr.w	r8, r8, r7
 800956c:	e759      	b.n	8009422 <HAL_GPIO_Init+0xf6>
 800956e:	f04f 0e08 	mov.w	lr, #8
 8009572:	fa0e f707 	lsl.w	r7, lr, r7
 8009576:	ea48 0807 	orr.w	r8, r8, r7
 800957a:	e752      	b.n	8009422 <HAL_GPIO_Init+0xf6>
 800957c:	40013c00 	.word	0x40013c00
 8009580:	40020000 	.word	0x40020000
 8009584:	40020800 	.word	0x40020800
 8009588:	40020c00 	.word	0x40020c00
 800958c:	40021000 	.word	0x40021000
 8009590:	40021400 	.word	0x40021400
 8009594:	40021800 	.word	0x40021800
 8009598:	40023800 	.word	0x40023800
 800959c:	40021c00 	.word	0x40021c00
 80095a0:	40022000 	.word	0x40022000
 80095a4:	40022400 	.word	0x40022400

080095a8 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80095a8:	6903      	ldr	r3, [r0, #16]
 80095aa:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80095ac:	bf14      	ite	ne
 80095ae:	2001      	movne	r0, #1
 80095b0:	2000      	moveq	r0, #0
 80095b2:	4770      	bx	lr

080095b4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80095b4:	b902      	cbnz	r2, 80095b8 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80095b6:	0409      	lsls	r1, r1, #16
 80095b8:	6181      	str	r1, [r0, #24]
  }
}
 80095ba:	4770      	bx	lr

080095bc <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80095bc:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80095be:	ea01 0203 	and.w	r2, r1, r3
 80095c2:	ea21 0103 	bic.w	r1, r1, r3
 80095c6:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80095ca:	6181      	str	r1, [r0, #24]
}
 80095cc:	4770      	bx	lr
 80095ce:	bf00      	nop

080095d0 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80095d0:	4770      	bx	lr
 80095d2:	bf00      	nop

080095d4 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80095d4:	4a04      	ldr	r2, [pc, #16]	; (80095e8 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80095d6:	6951      	ldr	r1, [r2, #20]
 80095d8:	4201      	tst	r1, r0
 80095da:	d100      	bne.n	80095de <HAL_GPIO_EXTI_IRQHandler+0xa>
 80095dc:	4770      	bx	lr
{
 80095de:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80095e0:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80095e2:	f7ff fff5 	bl	80095d0 <HAL_GPIO_EXTI_Callback>
}
 80095e6:	bd08      	pop	{r3, pc}
 80095e8:	40013c00 	.word	0x40013c00

080095ec <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80095ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80095f0:	6804      	ldr	r4, [r0, #0]
{
 80095f2:	b083      	sub	sp, #12
 80095f4:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80095f6:	6823      	ldr	r3, [r4, #0]
{
 80095f8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80095fc:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009600:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009604:	4606      	mov	r6, r0
 8009606:	468a      	mov	sl, r1
 8009608:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800960a:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800960c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009610:	d136      	bne.n	8009680 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009612:	6965      	ldr	r5, [r4, #20]
 8009614:	07e8      	lsls	r0, r5, #31
 8009616:	d5fc      	bpl.n	8009612 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009618:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800961c:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800961e:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009622:	d003      	beq.n	800962c <I2C_RequestMemoryWrite+0x40>
 8009624:	e04f      	b.n	80096c6 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009626:	6961      	ldr	r1, [r4, #20]
 8009628:	054d      	lsls	r5, r1, #21
 800962a:	d45d      	bmi.n	80096e8 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800962c:	6961      	ldr	r1, [r4, #20]
 800962e:	078b      	lsls	r3, r1, #30
 8009630:	d5f9      	bpl.n	8009626 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009632:	2300      	movs	r3, #0
 8009634:	9301      	str	r3, [sp, #4]
 8009636:	6963      	ldr	r3, [r4, #20]
 8009638:	9301      	str	r3, [sp, #4]
 800963a:	69a3      	ldr	r3, [r4, #24]
 800963c:	9301      	str	r3, [sp, #4]
 800963e:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009640:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009644:	f040 8088 	bne.w	8009758 <I2C_RequestMemoryWrite+0x16c>
 8009648:	6963      	ldr	r3, [r4, #20]
 800964a:	061a      	lsls	r2, r3, #24
 800964c:	d464      	bmi.n	8009718 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800964e:	6963      	ldr	r3, [r4, #20]
 8009650:	055b      	lsls	r3, r3, #21
 8009652:	d5f9      	bpl.n	8009648 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8009654:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009656:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800965a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800965c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800965e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009660:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009664:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009668:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800966a:	f043 0304 	orr.w	r3, r3, #4
 800966e:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009670:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009672:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009674:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009676:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800967a:	d066      	beq.n	800974a <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800967c:	2001      	movs	r0, #1
 800967e:	e01f      	b.n	80096c0 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009680:	6963      	ldr	r3, [r4, #20]
 8009682:	07d9      	lsls	r1, r3, #31
 8009684:	d4c8      	bmi.n	8009618 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009686:	f7ff fbb9 	bl	8008dfc <HAL_GetTick>
 800968a:	eba0 000b 	sub.w	r0, r0, fp
 800968e:	4581      	cmp	r9, r0
 8009690:	d304      	bcc.n	800969c <I2C_RequestMemoryWrite+0xb0>
 8009692:	f1b9 0f00 	cmp.w	r9, #0
 8009696:	d001      	beq.n	800969c <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009698:	6834      	ldr	r4, [r6, #0]
 800969a:	e7b7      	b.n	800960c <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800969c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800969e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80096a0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80096a2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80096a6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80096aa:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80096ac:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 80096ae:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80096b2:	f042 0220 	orr.w	r2, r2, #32
 80096b6:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80096b8:	680b      	ldr	r3, [r1, #0]
 80096ba:	05dc      	lsls	r4, r3, #23
 80096bc:	d435      	bmi.n	800972a <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 80096be:	2003      	movs	r0, #3
}
 80096c0:	b003      	add	sp, #12
 80096c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80096c6:	6963      	ldr	r3, [r4, #20]
 80096c8:	0798      	lsls	r0, r3, #30
 80096ca:	d4b2      	bmi.n	8009632 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096cc:	6963      	ldr	r3, [r4, #20]
 80096ce:	055a      	lsls	r2, r3, #21
 80096d0:	d40a      	bmi.n	80096e8 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80096d2:	f7ff fb93 	bl	8008dfc <HAL_GetTick>
 80096d6:	eba0 000b 	sub.w	r0, r0, fp
 80096da:	4581      	cmp	r9, r0
 80096dc:	d34e      	bcc.n	800977c <I2C_RequestMemoryWrite+0x190>
 80096de:	f1b9 0f00 	cmp.w	r9, #0
 80096e2:	d04b      	beq.n	800977c <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80096e4:	6834      	ldr	r4, [r6, #0]
 80096e6:	e79a      	b.n	800961e <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096e8:	6823      	ldr	r3, [r4, #0]
 80096ea:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80096ee:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80096f0:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096f2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80096f6:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096f8:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80096fa:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80096fc:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009700:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009704:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009706:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800970a:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800970e:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009710:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009712:	b003      	add	sp, #12
 8009714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009718:	f1b8 0f01 	cmp.w	r8, #1
 800971c:	d109      	bne.n	8009732 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800971e:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009720:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009722:	6127      	str	r7, [r4, #16]
}
 8009724:	b003      	add	sp, #12
 8009726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800972a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800972e:	6433      	str	r3, [r6, #64]	; 0x40
 8009730:	e7c5      	b.n	80096be <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009732:	0a3b      	lsrs	r3, r7, #8
 8009734:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009736:	f1b9 3fff 	cmp.w	r9, #4294967295
 800973a:	d12e      	bne.n	800979a <I2C_RequestMemoryWrite+0x1ae>
 800973c:	6963      	ldr	r3, [r4, #20]
 800973e:	0619      	lsls	r1, r3, #24
 8009740:	d4ed      	bmi.n	800971e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009742:	6963      	ldr	r3, [r4, #20]
 8009744:	055a      	lsls	r2, r3, #21
 8009746:	d5f9      	bpl.n	800973c <I2C_RequestMemoryWrite+0x150>
 8009748:	e784      	b.n	8009654 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800974a:	6832      	ldr	r2, [r6, #0]
 800974c:	6813      	ldr	r3, [r2, #0]
 800974e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009752:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009754:	6013      	str	r3, [r2, #0]
 8009756:	e7b3      	b.n	80096c0 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009758:	6963      	ldr	r3, [r4, #20]
 800975a:	061d      	lsls	r5, r3, #24
 800975c:	d4dc      	bmi.n	8009718 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800975e:	6963      	ldr	r3, [r4, #20]
 8009760:	0559      	lsls	r1, r3, #21
 8009762:	f53f af77 	bmi.w	8009654 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009766:	f7ff fb49 	bl	8008dfc <HAL_GetTick>
 800976a:	eba0 000b 	sub.w	r0, r0, fp
 800976e:	4581      	cmp	r9, r0
 8009770:	d325      	bcc.n	80097be <I2C_RequestMemoryWrite+0x1d2>
 8009772:	f1b9 0f00 	cmp.w	r9, #0
 8009776:	d022      	beq.n	80097be <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009778:	6834      	ldr	r4, [r6, #0]
 800977a:	e761      	b.n	8009640 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800977c:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800977e:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009780:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009782:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009786:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800978a:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800978c:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009790:	f043 0320 	orr.w	r3, r3, #32
 8009794:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 8009796:	2001      	movs	r0, #1
 8009798:	e792      	b.n	80096c0 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800979a:	6963      	ldr	r3, [r4, #20]
 800979c:	061b      	lsls	r3, r3, #24
 800979e:	d4be      	bmi.n	800971e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097a0:	6963      	ldr	r3, [r4, #20]
 80097a2:	0558      	lsls	r0, r3, #21
 80097a4:	f53f af56 	bmi.w	8009654 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097a8:	f7ff fb28 	bl	8008dfc <HAL_GetTick>
 80097ac:	eba0 000b 	sub.w	r0, r0, fp
 80097b0:	4581      	cmp	r9, r0
 80097b2:	d304      	bcc.n	80097be <I2C_RequestMemoryWrite+0x1d2>
 80097b4:	f1b9 0f00 	cmp.w	r9, #0
 80097b8:	d001      	beq.n	80097be <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097ba:	6834      	ldr	r4, [r6, #0]
 80097bc:	e7bb      	b.n	8009736 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80097be:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80097c0:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80097c2:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80097c4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80097c8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80097cc:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80097ce:	4313      	orrs	r3, r2
 80097d0:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80097d2:	e74d      	b.n	8009670 <I2C_RequestMemoryWrite+0x84>

080097d4 <I2C_RequestMemoryRead>:
{
 80097d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80097d8:	6804      	ldr	r4, [r0, #0]
{
 80097da:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80097dc:	6823      	ldr	r3, [r4, #0]
 80097de:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80097e2:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097e4:	6823      	ldr	r3, [r4, #0]
{
 80097e6:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80097ec:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80097f0:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097f4:	6023      	str	r3, [r4, #0]
{
 80097f6:	4606      	mov	r6, r0
 80097f8:	468b      	mov	fp, r1
 80097fa:	4617      	mov	r7, r2
 80097fc:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009800:	d13a      	bne.n	8009878 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009802:	6965      	ldr	r5, [r4, #20]
 8009804:	07eb      	lsls	r3, r5, #31
 8009806:	d5fc      	bpl.n	8009802 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009808:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800980c:	6123      	str	r3, [r4, #16]
 800980e:	fa5f fb8b 	uxtb.w	fp, fp
 8009812:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009816:	d003      	beq.n	8009820 <I2C_RequestMemoryRead+0x4c>
 8009818:	e069      	b.n	80098ee <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800981a:	6965      	ldr	r5, [r4, #20]
 800981c:	056a      	lsls	r2, r5, #21
 800981e:	d44e      	bmi.n	80098be <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009820:	6965      	ldr	r5, [r4, #20]
 8009822:	07a9      	lsls	r1, r5, #30
 8009824:	d5f9      	bpl.n	800981a <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009826:	2300      	movs	r3, #0
 8009828:	9301      	str	r3, [sp, #4]
 800982a:	6963      	ldr	r3, [r4, #20]
 800982c:	9301      	str	r3, [sp, #4]
 800982e:	69a3      	ldr	r3, [r4, #24]
 8009830:	9301      	str	r3, [sp, #4]
 8009832:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009834:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009838:	f040 80bd 	bne.w	80099b6 <I2C_RequestMemoryRead+0x1e2>
 800983c:	6963      	ldr	r3, [r4, #20]
 800983e:	0618      	lsls	r0, r3, #24
 8009840:	d468      	bmi.n	8009914 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009842:	6963      	ldr	r3, [r4, #20]
 8009844:	0559      	lsls	r1, r3, #21
 8009846:	d5f9      	bpl.n	800983c <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009848:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800984a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800984e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009850:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009852:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009854:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009858:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800985c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800985e:	f043 0304 	orr.w	r3, r3, #4
 8009862:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009864:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009866:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009868:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800986a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800986e:	d070      	beq.n	8009952 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009870:	2001      	movs	r0, #1
}
 8009872:	b003      	add	sp, #12
 8009874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009878:	6963      	ldr	r3, [r4, #20]
 800987a:	07dd      	lsls	r5, r3, #31
 800987c:	d4c4      	bmi.n	8009808 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800987e:	f7ff fabd 	bl	8008dfc <HAL_GetTick>
 8009882:	eba0 0009 	sub.w	r0, r0, r9
 8009886:	4582      	cmp	sl, r0
 8009888:	d304      	bcc.n	8009894 <I2C_RequestMemoryRead+0xc0>
 800988a:	f1ba 0f00 	cmp.w	sl, #0
 800988e:	d001      	beq.n	8009894 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009890:	6834      	ldr	r4, [r6, #0]
 8009892:	e7b3      	b.n	80097fc <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009894:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009896:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009898:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800989a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800989e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80098a2:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80098a4:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 80098a6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80098aa:	f042 0220 	orr.w	r2, r2, #32
 80098ae:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80098b0:	680b      	ldr	r3, [r1, #0]
 80098b2:	05dc      	lsls	r4, r3, #23
 80098b4:	d43d      	bmi.n	8009932 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 80098b6:	2003      	movs	r0, #3
}
 80098b8:	b003      	add	sp, #12
 80098ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80098be:	6823      	ldr	r3, [r4, #0]
 80098c0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80098c4:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80098c6:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80098c8:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80098cc:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80098ce:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80098d0:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80098d2:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80098d6:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80098da:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80098dc:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80098e0:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80098e4:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80098e6:	6433      	str	r3, [r6, #64]	; 0x40
}
 80098e8:	b003      	add	sp, #12
 80098ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80098ee:	6963      	ldr	r3, [r4, #20]
 80098f0:	079b      	lsls	r3, r3, #30
 80098f2:	d498      	bmi.n	8009826 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098f4:	6963      	ldr	r3, [r4, #20]
 80098f6:	0558      	lsls	r0, r3, #21
 80098f8:	d4e1      	bmi.n	80098be <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80098fa:	f7ff fa7f 	bl	8008dfc <HAL_GetTick>
 80098fe:	eba0 0009 	sub.w	r0, r0, r9
 8009902:	4582      	cmp	sl, r0
 8009904:	f0c0 808f 	bcc.w	8009a26 <I2C_RequestMemoryRead+0x252>
 8009908:	f1ba 0f00 	cmp.w	sl, #0
 800990c:	f000 808b 	beq.w	8009a26 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009910:	6834      	ldr	r4, [r6, #0]
 8009912:	e77e      	b.n	8009812 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009914:	f1b8 0f01 	cmp.w	r8, #1
 8009918:	d10f      	bne.n	800993a <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800991a:	b2ff      	uxtb	r7, r7
 800991c:	6127      	str	r7, [r4, #16]
 800991e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009922:	d16e      	bne.n	8009a02 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009924:	6963      	ldr	r3, [r4, #20]
 8009926:	061b      	lsls	r3, r3, #24
 8009928:	d41a      	bmi.n	8009960 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800992a:	6963      	ldr	r3, [r4, #20]
 800992c:	055f      	lsls	r7, r3, #21
 800992e:	d5f9      	bpl.n	8009924 <I2C_RequestMemoryRead+0x150>
 8009930:	e78a      	b.n	8009848 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009932:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009936:	6433      	str	r3, [r6, #64]	; 0x40
 8009938:	e7bd      	b.n	80098b6 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800993a:	0a3b      	lsrs	r3, r7, #8
 800993c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800993e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009942:	d17e      	bne.n	8009a42 <I2C_RequestMemoryRead+0x26e>
 8009944:	6963      	ldr	r3, [r4, #20]
 8009946:	061d      	lsls	r5, r3, #24
 8009948:	d4e7      	bmi.n	800991a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800994a:	6963      	ldr	r3, [r4, #20]
 800994c:	0558      	lsls	r0, r3, #21
 800994e:	d5f9      	bpl.n	8009944 <I2C_RequestMemoryRead+0x170>
 8009950:	e77a      	b.n	8009848 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009952:	6832      	ldr	r2, [r6, #0]
 8009954:	6813      	ldr	r3, [r2, #0]
 8009956:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800995a:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800995c:	6013      	str	r3, [r2, #0]
 800995e:	e7ab      	b.n	80098b8 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009960:	6823      	ldr	r3, [r4, #0]
 8009962:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009966:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009968:	f1ba 3fff 	cmp.w	sl, #4294967295
 800996c:	d113      	bne.n	8009996 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800996e:	6963      	ldr	r3, [r4, #20]
 8009970:	07d8      	lsls	r0, r3, #31
 8009972:	d5fc      	bpl.n	800996e <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009974:	f04b 0301 	orr.w	r3, fp, #1
 8009978:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800997a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800997e:	d003      	beq.n	8009988 <I2C_RequestMemoryRead+0x1b4>
 8009980:	e02b      	b.n	80099da <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009982:	6963      	ldr	r3, [r4, #20]
 8009984:	055b      	lsls	r3, r3, #21
 8009986:	d49a      	bmi.n	80098be <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009988:	6963      	ldr	r3, [r4, #20]
 800998a:	43db      	mvns	r3, r3
 800998c:	f013 0302 	ands.w	r3, r3, #2
 8009990:	d1f7      	bne.n	8009982 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8009992:	4618      	mov	r0, r3
 8009994:	e790      	b.n	80098b8 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009996:	6963      	ldr	r3, [r4, #20]
 8009998:	07d9      	lsls	r1, r3, #31
 800999a:	d4eb      	bmi.n	8009974 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800999c:	f7ff fa2e 	bl	8008dfc <HAL_GetTick>
 80099a0:	eba0 0009 	sub.w	r0, r0, r9
 80099a4:	4582      	cmp	sl, r0
 80099a6:	f4ff af75 	bcc.w	8009894 <I2C_RequestMemoryRead+0xc0>
 80099aa:	f1ba 0f00 	cmp.w	sl, #0
 80099ae:	f43f af71 	beq.w	8009894 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80099b2:	6834      	ldr	r4, [r6, #0]
 80099b4:	e7d8      	b.n	8009968 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80099b6:	6963      	ldr	r3, [r4, #20]
 80099b8:	061a      	lsls	r2, r3, #24
 80099ba:	d4ab      	bmi.n	8009914 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80099bc:	6963      	ldr	r3, [r4, #20]
 80099be:	055d      	lsls	r5, r3, #21
 80099c0:	f53f af42 	bmi.w	8009848 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099c4:	f7ff fa1a 	bl	8008dfc <HAL_GetTick>
 80099c8:	eba0 0009 	sub.w	r0, r0, r9
 80099cc:	4582      	cmp	sl, r0
 80099ce:	d34b      	bcc.n	8009a68 <I2C_RequestMemoryRead+0x294>
 80099d0:	f1ba 0f00 	cmp.w	sl, #0
 80099d4:	d048      	beq.n	8009a68 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80099d6:	6834      	ldr	r4, [r6, #0]
 80099d8:	e72c      	b.n	8009834 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80099da:	6963      	ldr	r3, [r4, #20]
 80099dc:	43db      	mvns	r3, r3
 80099de:	f013 0302 	ands.w	r3, r3, #2
 80099e2:	d0d6      	beq.n	8009992 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80099e4:	6963      	ldr	r3, [r4, #20]
 80099e6:	055a      	lsls	r2, r3, #21
 80099e8:	f53f af69 	bmi.w	80098be <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099ec:	f7ff fa06 	bl	8008dfc <HAL_GetTick>
 80099f0:	eba0 0009 	sub.w	r0, r0, r9
 80099f4:	4582      	cmp	sl, r0
 80099f6:	d316      	bcc.n	8009a26 <I2C_RequestMemoryRead+0x252>
 80099f8:	f1ba 0f00 	cmp.w	sl, #0
 80099fc:	d013      	beq.n	8009a26 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80099fe:	6834      	ldr	r4, [r6, #0]
 8009a00:	e7bb      	b.n	800997a <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a02:	6963      	ldr	r3, [r4, #20]
 8009a04:	061d      	lsls	r5, r3, #24
 8009a06:	d4ab      	bmi.n	8009960 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a08:	6963      	ldr	r3, [r4, #20]
 8009a0a:	055a      	lsls	r2, r3, #21
 8009a0c:	f53f af1c 	bmi.w	8009848 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a10:	f7ff f9f4 	bl	8008dfc <HAL_GetTick>
 8009a14:	eba0 0009 	sub.w	r0, r0, r9
 8009a18:	4582      	cmp	sl, r0
 8009a1a:	d325      	bcc.n	8009a68 <I2C_RequestMemoryRead+0x294>
 8009a1c:	f1ba 0f00 	cmp.w	sl, #0
 8009a20:	d022      	beq.n	8009a68 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a22:	6834      	ldr	r4, [r6, #0]
 8009a24:	e77b      	b.n	800991e <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009a26:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009a28:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009a2a:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009a2c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009a30:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009a34:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009a36:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009a3a:	f043 0320 	orr.w	r3, r3, #32
 8009a3e:	6433      	str	r3, [r6, #64]	; 0x40
 8009a40:	e716      	b.n	8009870 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a42:	6963      	ldr	r3, [r4, #20]
 8009a44:	0619      	lsls	r1, r3, #24
 8009a46:	f53f af68 	bmi.w	800991a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a4a:	6963      	ldr	r3, [r4, #20]
 8009a4c:	055b      	lsls	r3, r3, #21
 8009a4e:	f53f aefb 	bmi.w	8009848 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a52:	f7ff f9d3 	bl	8008dfc <HAL_GetTick>
 8009a56:	eba0 0009 	sub.w	r0, r0, r9
 8009a5a:	4582      	cmp	sl, r0
 8009a5c:	d304      	bcc.n	8009a68 <I2C_RequestMemoryRead+0x294>
 8009a5e:	f1ba 0f00 	cmp.w	sl, #0
 8009a62:	d001      	beq.n	8009a68 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a64:	6834      	ldr	r4, [r6, #0]
 8009a66:	e76a      	b.n	800993e <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a68:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a6a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a6c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a6e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009a72:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a76:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009a78:	4313      	orrs	r3, r2
 8009a7a:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009a7c:	e6f2      	b.n	8009864 <I2C_RequestMemoryRead+0x90>
 8009a7e:	bf00      	nop

08009a80 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009a80:	2800      	cmp	r0, #0
 8009a82:	f000 80b9 	beq.w	8009bf8 <HAL_I2C_Init+0x178>
{
 8009a86:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009a88:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009a8c:	4604      	mov	r4, r0
 8009a8e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009a92:	2b00      	cmp	r3, #0
 8009a94:	f000 8098 	beq.w	8009bc8 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009a98:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009a9a:	2224      	movs	r2, #36	; 0x24
 8009a9c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009aa0:	681a      	ldr	r2, [r3, #0]
 8009aa2:	f022 0201 	bic.w	r2, r2, #1
 8009aa6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009aa8:	681a      	ldr	r2, [r3, #0]
 8009aaa:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009aae:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009ab0:	681a      	ldr	r2, [r3, #0]
 8009ab2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009ab6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009ab8:	f001 fe70 	bl	800b79c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009abc:	6865      	ldr	r5, [r4, #4]
 8009abe:	4b4f      	ldr	r3, [pc, #316]	; (8009bfc <HAL_I2C_Init+0x17c>)
 8009ac0:	429d      	cmp	r5, r3
 8009ac2:	d84f      	bhi.n	8009b64 <HAL_I2C_Init+0xe4>
 8009ac4:	4b4e      	ldr	r3, [pc, #312]	; (8009c00 <HAL_I2C_Init+0x180>)
 8009ac6:	4298      	cmp	r0, r3
 8009ac8:	d97c      	bls.n	8009bc4 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009aca:	4b4e      	ldr	r3, [pc, #312]	; (8009c04 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009acc:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009ace:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009ad2:	1e43      	subs	r3, r0, #1
 8009ad4:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009ad8:	6822      	ldr	r2, [r4, #0]
 8009ada:	6851      	ldr	r1, [r2, #4]
 8009adc:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009ae0:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009ae4:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009ae6:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009ae8:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009aec:	f10c 0c01 	add.w	ip, ip, #1
 8009af0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009af4:	ea41 010c 	orr.w	r1, r1, ip
 8009af8:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009afa:	69d1      	ldr	r1, [r2, #28]
 8009afc:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009b00:	3301      	adds	r3, #1
 8009b02:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009b06:	4203      	tst	r3, r0
 8009b08:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009b0c:	d161      	bne.n	8009bd2 <HAL_I2C_Init+0x152>
 8009b0e:	2304      	movs	r3, #4
 8009b10:	430b      	orrs	r3, r1
 8009b12:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009b14:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009b18:	6811      	ldr	r1, [r2, #0]
 8009b1a:	4303      	orrs	r3, r0
 8009b1c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009b20:	430b      	orrs	r3, r1
 8009b22:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009b24:	6891      	ldr	r1, [r2, #8]
 8009b26:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009b2a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009b2e:	4303      	orrs	r3, r0
 8009b30:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009b34:	430b      	orrs	r3, r1
 8009b36:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009b38:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009b3c:	68d1      	ldr	r1, [r2, #12]
 8009b3e:	4303      	orrs	r3, r0
 8009b40:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009b44:	430b      	orrs	r3, r1
 8009b46:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009b48:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009b4a:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009b4c:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009b50:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009b52:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009b54:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8009b56:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009b5a:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009b5c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009b60:	4618      	mov	r0, r3
}
 8009b62:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009b64:	4b28      	ldr	r3, [pc, #160]	; (8009c08 <HAL_I2C_Init+0x188>)
 8009b66:	4298      	cmp	r0, r3
 8009b68:	d92c      	bls.n	8009bc4 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009b6a:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009b6c:	4b25      	ldr	r3, [pc, #148]	; (8009c04 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009b6e:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009b70:	4e26      	ldr	r6, [pc, #152]	; (8009c0c <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009b72:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009b76:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009b7a:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009b7e:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009b80:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009b84:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009b88:	fb01 f303 	mul.w	r3, r1, r3
 8009b8c:	fba6 6303 	umull	r6, r3, r6, r3
 8009b90:	6a11      	ldr	r1, [r2, #32]
 8009b92:	099b      	lsrs	r3, r3, #6
 8009b94:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009b98:	3301      	adds	r3, #1
 8009b9a:	430b      	orrs	r3, r1
 8009b9c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009b9e:	69d1      	ldr	r1, [r2, #28]
 8009ba0:	68a3      	ldr	r3, [r4, #8]
 8009ba2:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009ba6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009baa:	b9ab      	cbnz	r3, 8009bd8 <HAL_I2C_Init+0x158>
 8009bac:	1e43      	subs	r3, r0, #1
 8009bae:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009bb2:	fbb3 f3f5 	udiv	r3, r3, r5
 8009bb6:	3301      	adds	r3, #1
 8009bb8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009bbc:	b1d3      	cbz	r3, 8009bf4 <HAL_I2C_Init+0x174>
 8009bbe:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009bc2:	e7a5      	b.n	8009b10 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009bc4:	2001      	movs	r0, #1
}
 8009bc6:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009bc8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009bcc:	f7f7 fd04 	bl	80015d8 <HAL_I2C_MspInit>
 8009bd0:	e762      	b.n	8009a98 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009bd2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009bd6:	e79b      	b.n	8009b10 <HAL_I2C_Init+0x90>
 8009bd8:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009bdc:	1e43      	subs	r3, r0, #1
 8009bde:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009be2:	fbb3 f3f5 	udiv	r3, r3, r5
 8009be6:	3301      	adds	r3, #1
 8009be8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009bec:	b113      	cbz	r3, 8009bf4 <HAL_I2C_Init+0x174>
 8009bee:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009bf2:	e78d      	b.n	8009b10 <HAL_I2C_Init+0x90>
 8009bf4:	2301      	movs	r3, #1
 8009bf6:	e78b      	b.n	8009b10 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009bf8:	2001      	movs	r0, #1
}
 8009bfa:	4770      	bx	lr
 8009bfc:	000186a0 	.word	0x000186a0
 8009c00:	001e847f 	.word	0x001e847f
 8009c04:	431bde83 	.word	0x431bde83
 8009c08:	003d08ff 	.word	0x003d08ff
 8009c0c:	10624dd3 	.word	0x10624dd3

08009c10 <HAL_I2C_Mem_Write>:
{
 8009c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c14:	4604      	mov	r4, r0
 8009c16:	b083      	sub	sp, #12
 8009c18:	4699      	mov	r9, r3
 8009c1a:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009c1e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009c20:	460f      	mov	r7, r1
 8009c22:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009c24:	f7ff f8ea 	bl	8008dfc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009c28:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009c2c:	2b20      	cmp	r3, #32
 8009c2e:	d004      	beq.n	8009c3a <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009c30:	2702      	movs	r7, #2
}
 8009c32:	4638      	mov	r0, r7
 8009c34:	b003      	add	sp, #12
 8009c36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c3a:	4605      	mov	r5, r0
 8009c3c:	e005      	b.n	8009c4a <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c3e:	f7ff f8dd 	bl	8008dfc <HAL_GetTick>
 8009c42:	1b40      	subs	r0, r0, r5
 8009c44:	2819      	cmp	r0, #25
 8009c46:	f200 80a8 	bhi.w	8009d9a <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009c4a:	6820      	ldr	r0, [r4, #0]
 8009c4c:	6983      	ldr	r3, [r0, #24]
 8009c4e:	ea6f 0c03 	mvn.w	ip, r3
 8009c52:	f01c 0b02 	ands.w	fp, ip, #2
 8009c56:	d0f2      	beq.n	8009c3e <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009c58:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009c5c:	2b01      	cmp	r3, #1
 8009c5e:	d0e7      	beq.n	8009c30 <HAL_I2C_Mem_Write+0x20>
 8009c60:	2301      	movs	r3, #1
 8009c62:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009c66:	6803      	ldr	r3, [r0, #0]
 8009c68:	07db      	lsls	r3, r3, #31
 8009c6a:	d572      	bpl.n	8009d52 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c6c:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009c6e:	6807      	ldr	r7, [r0, #0]
 8009c70:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009c74:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009c76:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009c78:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009c7a:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c7c:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009c80:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009c84:	2040      	movs	r0, #64	; 0x40
 8009c86:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009c8a:	2000      	movs	r0, #0
 8009c8c:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009c8e:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009c92:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009c94:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009c96:	4856      	ldr	r0, [pc, #344]	; (8009df0 <HAL_I2C_Mem_Write+0x1e0>)
 8009c98:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c9a:	464b      	mov	r3, r9
 8009c9c:	4642      	mov	r2, r8
 8009c9e:	4620      	mov	r0, r4
 8009ca0:	f7ff fca4 	bl	80095ec <I2C_RequestMemoryWrite>
 8009ca4:	4607      	mov	r7, r0
 8009ca6:	bb00      	cbnz	r0, 8009cea <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009ca8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009caa:	2b00      	cmp	r3, #0
 8009cac:	f000 809e 	beq.w	8009dec <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009cb0:	6823      	ldr	r3, [r4, #0]
 8009cb2:	1c72      	adds	r2, r6, #1
 8009cb4:	d159      	bne.n	8009d6a <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009cb6:	695a      	ldr	r2, [r3, #20]
 8009cb8:	0610      	lsls	r0, r2, #24
 8009cba:	d41b      	bmi.n	8009cf4 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009cbc:	695a      	ldr	r2, [r3, #20]
 8009cbe:	0551      	lsls	r1, r2, #21
 8009cc0:	d5f9      	bpl.n	8009cb6 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009cc2:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009cc4:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009cc8:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009cca:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009ccc:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009cce:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009cd2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009cd6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009cd8:	f043 0304 	orr.w	r3, r3, #4
 8009cdc:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009cde:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009ce0:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009ce2:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009ce4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009ce8:	d038      	beq.n	8009d5c <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009cea:	2701      	movs	r7, #1
}
 8009cec:	4638      	mov	r0, r7
 8009cee:	b003      	add	sp, #12
 8009cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009cf4:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009cf8:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009cfc:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009cfe:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009d02:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009d06:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009d08:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009d0a:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009d0c:	3a01      	subs	r2, #1
 8009d0e:	b292      	uxth	r2, r2
 8009d10:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009d12:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009d14:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009d16:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009d18:	0740      	lsls	r0, r0, #29
 8009d1a:	d517      	bpl.n	8009d4c <HAL_I2C_Mem_Write+0x13c>
 8009d1c:	b942      	cbnz	r2, 8009d30 <HAL_I2C_Mem_Write+0x120>
 8009d1e:	1c72      	adds	r2, r6, #1
 8009d20:	d156      	bne.n	8009dd0 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009d22:	695a      	ldr	r2, [r3, #20]
 8009d24:	0750      	lsls	r0, r2, #29
 8009d26:	d446      	bmi.n	8009db6 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d28:	695a      	ldr	r2, [r3, #20]
 8009d2a:	0551      	lsls	r1, r2, #21
 8009d2c:	d5f9      	bpl.n	8009d22 <HAL_I2C_Mem_Write+0x112>
 8009d2e:	e7c8      	b.n	8009cc2 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009d30:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009d34:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009d36:	f10c 0102 	add.w	r1, ip, #2
 8009d3a:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009d3c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009d3e:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009d42:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009d44:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009d46:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009d48:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009d4a:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009d4c:	2a00      	cmp	r2, #0
 8009d4e:	d1b0      	bne.n	8009cb2 <HAL_I2C_Mem_Write+0xa2>
 8009d50:	e7e5      	b.n	8009d1e <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009d52:	6803      	ldr	r3, [r0, #0]
 8009d54:	f043 0301 	orr.w	r3, r3, #1
 8009d58:	6003      	str	r3, [r0, #0]
 8009d5a:	e787      	b.n	8009c6c <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d5c:	6822      	ldr	r2, [r4, #0]
 8009d5e:	6813      	ldr	r3, [r2, #0]
 8009d60:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009d64:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d66:	6013      	str	r3, [r2, #0]
 8009d68:	e763      	b.n	8009c32 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009d6a:	695a      	ldr	r2, [r3, #20]
 8009d6c:	0612      	lsls	r2, r2, #24
 8009d6e:	d4c1      	bmi.n	8009cf4 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d70:	695a      	ldr	r2, [r3, #20]
 8009d72:	0551      	lsls	r1, r2, #21
 8009d74:	d4a5      	bmi.n	8009cc2 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d76:	f7ff f841 	bl	8008dfc <HAL_GetTick>
 8009d7a:	1b40      	subs	r0, r0, r5
 8009d7c:	4286      	cmp	r6, r0
 8009d7e:	d301      	bcc.n	8009d84 <HAL_I2C_Mem_Write+0x174>
 8009d80:	2e00      	cmp	r6, #0
 8009d82:	d195      	bne.n	8009cb0 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009d84:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009d86:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009d88:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009d8a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009d8e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009d92:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009d94:	4313      	orrs	r3, r2
 8009d96:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009d98:	e7a1      	b.n	8009cde <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009d9a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009d9c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009da0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009da4:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009da8:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009daa:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009dae:	f043 0320 	orr.w	r3, r3, #32
 8009db2:	6423      	str	r3, [r4, #64]	; 0x40
 8009db4:	e73c      	b.n	8009c30 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009db6:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009db8:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009dba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009dbe:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009dc0:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009dc2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009dc6:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009dca:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009dce:	e730      	b.n	8009c32 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009dd0:	695a      	ldr	r2, [r3, #20]
 8009dd2:	0752      	lsls	r2, r2, #29
 8009dd4:	d4ef      	bmi.n	8009db6 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009dd6:	695a      	ldr	r2, [r3, #20]
 8009dd8:	0551      	lsls	r1, r2, #21
 8009dda:	f53f af72 	bmi.w	8009cc2 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009dde:	f7ff f80d 	bl	8008dfc <HAL_GetTick>
 8009de2:	1b40      	subs	r0, r0, r5
 8009de4:	4286      	cmp	r6, r0
 8009de6:	d3cd      	bcc.n	8009d84 <HAL_I2C_Mem_Write+0x174>
 8009de8:	2e00      	cmp	r6, #0
 8009dea:	d0cb      	beq.n	8009d84 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009dec:	6823      	ldr	r3, [r4, #0]
 8009dee:	e796      	b.n	8009d1e <HAL_I2C_Mem_Write+0x10e>
 8009df0:	ffff0000 	.word	0xffff0000

08009df4 <HAL_I2C_Mem_Read>:
{
 8009df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009df8:	4604      	mov	r4, r0
 8009dfa:	b087      	sub	sp, #28
 8009dfc:	4699      	mov	r9, r3
 8009dfe:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009e02:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009e04:	460f      	mov	r7, r1
 8009e06:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009e08:	f7fe fff8 	bl	8008dfc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009e0c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009e10:	2b20      	cmp	r3, #32
 8009e12:	d004      	beq.n	8009e1e <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009e14:	2702      	movs	r7, #2
}
 8009e16:	4638      	mov	r0, r7
 8009e18:	b007      	add	sp, #28
 8009e1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e1e:	4606      	mov	r6, r0
 8009e20:	e005      	b.n	8009e2e <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e22:	f7fe ffeb 	bl	8008dfc <HAL_GetTick>
 8009e26:	1b80      	subs	r0, r0, r6
 8009e28:	2819      	cmp	r0, #25
 8009e2a:	f200 80d2 	bhi.w	8009fd2 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e2e:	f8d4 c000 	ldr.w	ip, [r4]
 8009e32:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8009e36:	43c0      	mvns	r0, r0
 8009e38:	f010 0b02 	ands.w	fp, r0, #2
 8009e3c:	d0f1      	beq.n	8009e22 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8009e3e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009e42:	2b01      	cmp	r3, #1
 8009e44:	d0e6      	beq.n	8009e14 <HAL_I2C_Mem_Read+0x20>
 8009e46:	2301      	movs	r3, #1
 8009e48:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009e4c:	f8dc 3000 	ldr.w	r3, [ip]
 8009e50:	07d9      	lsls	r1, r3, #31
 8009e52:	d537      	bpl.n	8009ec4 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009e54:	f8dc 0000 	ldr.w	r0, [ip]
 8009e58:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009e5c:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009e60:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009e62:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009e64:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009e66:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009e6a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009e6e:	2040      	movs	r0, #64	; 0x40
 8009e70:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009e74:	2000      	movs	r0, #0
 8009e76:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009e78:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009e7c:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009e7e:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009e80:	4893      	ldr	r0, [pc, #588]	; (800a0d0 <HAL_I2C_Mem_Read+0x2dc>)
 8009e82:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009e84:	4639      	mov	r1, r7
 8009e86:	464b      	mov	r3, r9
 8009e88:	4642      	mov	r2, r8
 8009e8a:	4620      	mov	r0, r4
 8009e8c:	f7ff fca2 	bl	80097d4 <I2C_RequestMemoryRead>
 8009e90:	4607      	mov	r7, r0
 8009e92:	2800      	cmp	r0, #0
 8009e94:	f040 80ab 	bne.w	8009fee <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8009e98:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8009e9a:	b9d2      	cbnz	r2, 8009ed2 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009e9c:	6823      	ldr	r3, [r4, #0]
 8009e9e:	9002      	str	r0, [sp, #8]
 8009ea0:	695a      	ldr	r2, [r3, #20]
 8009ea2:	9202      	str	r2, [sp, #8]
 8009ea4:	699a      	ldr	r2, [r3, #24]
 8009ea6:	9202      	str	r2, [sp, #8]
 8009ea8:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009eaa:	681a      	ldr	r2, [r3, #0]
 8009eac:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009eb0:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009eb2:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009eb4:	2220      	movs	r2, #32
 8009eb6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009eba:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009ebe:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8009ec2:	e7a8      	b.n	8009e16 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8009ec4:	f8dc 3000 	ldr.w	r3, [ip]
 8009ec8:	f043 0301 	orr.w	r3, r3, #1
 8009ecc:	f8cc 3000 	str.w	r3, [ip]
 8009ed0:	e7c0      	b.n	8009e54 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8009ed2:	2a01      	cmp	r2, #1
 8009ed4:	f000 812c 	beq.w	800a130 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 8009ed8:	2a02      	cmp	r2, #2
 8009eda:	f000 80bd 	beq.w	800a058 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009ede:	6823      	ldr	r3, [r4, #0]
 8009ee0:	9005      	str	r0, [sp, #20]
 8009ee2:	6959      	ldr	r1, [r3, #20]
 8009ee4:	9105      	str	r1, [sp, #20]
 8009ee6:	6999      	ldr	r1, [r3, #24]
 8009ee8:	9105      	str	r1, [sp, #20]
 8009eea:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8009eec:	2a03      	cmp	r2, #3
 8009eee:	d849      	bhi.n	8009f84 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8009ef0:	2a01      	cmp	r2, #1
 8009ef2:	f000 80eb 	beq.w	800a0cc <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 8009ef6:	2a02      	cmp	r2, #2
 8009ef8:	f000 8089 	beq.w	800a00e <HAL_I2C_Mem_Read+0x21a>
 8009efc:	1c69      	adds	r1, r5, #1
 8009efe:	f040 80bb 	bne.w	800a078 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f02:	695a      	ldr	r2, [r3, #20]
 8009f04:	0752      	lsls	r2, r2, #29
 8009f06:	d5fc      	bpl.n	8009f02 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009f08:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f0a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009f0c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009f10:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f12:	691b      	ldr	r3, [r3, #16]
 8009f14:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009f16:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009f18:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009f1a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009f1c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009f1e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009f20:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009f22:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009f24:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009f26:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009f28:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009f2a:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f2c:	6822      	ldr	r2, [r4, #0]
 8009f2e:	f040 80af 	bne.w	800a090 <HAL_I2C_Mem_Read+0x29c>
 8009f32:	6953      	ldr	r3, [r2, #20]
 8009f34:	075b      	lsls	r3, r3, #29
 8009f36:	d5fc      	bpl.n	8009f32 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f38:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f3a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f3c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009f40:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f42:	6913      	ldr	r3, [r2, #16]
 8009f44:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009f46:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009f48:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009f4a:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f4c:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8009f4e:	3b01      	subs	r3, #1
 8009f50:	b29b      	uxth	r3, r3
 8009f52:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f54:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 8009f56:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8009f58:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009f5c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009f5e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f62:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8009f64:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009f66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009f68:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009f6a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009f6c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009f6e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009f70:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009f72:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009f74:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009f76:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009f78:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009f7a:	2a00      	cmp	r2, #0
 8009f7c:	d099      	beq.n	8009eb2 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009f7e:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f80:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8009f82:	d9b5      	bls.n	8009ef0 <HAL_I2C_Mem_Read+0xfc>
 8009f84:	b95d      	cbnz	r5, 8009f9e <HAL_I2C_Mem_Read+0x1aa>
 8009f86:	e0c5      	b.n	800a114 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009f88:	695a      	ldr	r2, [r3, #20]
 8009f8a:	06d0      	lsls	r0, r2, #27
 8009f8c:	f100 80b2 	bmi.w	800a0f4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f90:	f7fe ff34 	bl	8008dfc <HAL_GetTick>
 8009f94:	1b80      	subs	r0, r0, r6
 8009f96:	4285      	cmp	r5, r0
 8009f98:	f0c0 8086 	bcc.w	800a0a8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f9c:	6823      	ldr	r3, [r4, #0]
 8009f9e:	695a      	ldr	r2, [r3, #20]
 8009fa0:	0652      	lsls	r2, r2, #25
 8009fa2:	d5f1      	bpl.n	8009f88 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009fa4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009fa6:	691b      	ldr	r3, [r3, #16]
 8009fa8:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 8009faa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009fac:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8009fae:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009fb0:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009fb2:	3b01      	subs	r3, #1
 8009fb4:	b29b      	uxth	r3, r3
 8009fb6:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009fb8:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 8009fba:	3a01      	subs	r2, #1
 8009fbc:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009fbe:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009fc2:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8009fc4:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009fc6:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009fca:	d5d6      	bpl.n	8009f7a <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009fcc:	6903      	ldr	r3, [r0, #16]
 8009fce:	704b      	strb	r3, [r1, #1]
 8009fd0:	e036      	b.n	800a040 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009fd2:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009fd4:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009fd8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009fdc:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009fe0:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009fe2:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009fe6:	f043 0320 	orr.w	r3, r3, #32
 8009fea:	6423      	str	r3, [r4, #64]	; 0x40
 8009fec:	e712      	b.n	8009e14 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8009fee:	2701      	movs	r7, #1
}
 8009ff0:	4638      	mov	r0, r7
 8009ff2:	b007      	add	sp, #28
 8009ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ff8:	695a      	ldr	r2, [r3, #20]
 8009ffa:	0750      	lsls	r0, r2, #29
 8009ffc:	d40c      	bmi.n	800a018 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ffe:	f7fe fefd 	bl	8008dfc <HAL_GetTick>
 800a002:	1b80      	subs	r0, r0, r6
 800a004:	4285      	cmp	r5, r0
 800a006:	d34f      	bcc.n	800a0a8 <HAL_I2C_Mem_Read+0x2b4>
 800a008:	2d00      	cmp	r5, #0
 800a00a:	d04d      	beq.n	800a0a8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a00c:	6823      	ldr	r3, [r4, #0]
 800a00e:	1c69      	adds	r1, r5, #1
 800a010:	d1f2      	bne.n	8009ff8 <HAL_I2C_Mem_Read+0x204>
 800a012:	695a      	ldr	r2, [r3, #20]
 800a014:	0752      	lsls	r2, r2, #29
 800a016:	d5fc      	bpl.n	800a012 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a018:	681a      	ldr	r2, [r3, #0]
 800a01a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a01e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a020:	691a      	ldr	r2, [r3, #16]
 800a022:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a024:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800a026:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a028:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a02a:	3b01      	subs	r3, #1
 800a02c:	b29b      	uxth	r3, r3
 800a02e:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a030:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a032:	3b01      	subs	r3, #1
 800a034:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a036:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a038:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a03a:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800a03c:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a03e:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800a040:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a042:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a044:	3301      	adds	r3, #1
 800a046:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a048:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a04a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a04c:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800a04e:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a050:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800a052:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a054:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a056:	e790      	b.n	8009f7a <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a058:	6823      	ldr	r3, [r4, #0]
 800a05a:	6819      	ldr	r1, [r3, #0]
 800a05c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a060:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a062:	6819      	ldr	r1, [r3, #0]
 800a064:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800a068:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a06a:	9004      	str	r0, [sp, #16]
 800a06c:	6959      	ldr	r1, [r3, #20]
 800a06e:	9104      	str	r1, [sp, #16]
 800a070:	6999      	ldr	r1, [r3, #24]
 800a072:	9104      	str	r1, [sp, #16]
 800a074:	9904      	ldr	r1, [sp, #16]
 800a076:	e739      	b.n	8009eec <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a078:	695a      	ldr	r2, [r3, #20]
 800a07a:	0750      	lsls	r0, r2, #29
 800a07c:	f53f af44 	bmi.w	8009f08 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a080:	f7fe febc 	bl	8008dfc <HAL_GetTick>
 800a084:	1b80      	subs	r0, r0, r6
 800a086:	4285      	cmp	r5, r0
 800a088:	d30e      	bcc.n	800a0a8 <HAL_I2C_Mem_Read+0x2b4>
 800a08a:	b16d      	cbz	r5, 800a0a8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a08c:	6823      	ldr	r3, [r4, #0]
 800a08e:	e735      	b.n	8009efc <HAL_I2C_Mem_Read+0x108>
 800a090:	6953      	ldr	r3, [r2, #20]
 800a092:	0758      	lsls	r0, r3, #29
 800a094:	f53f af50 	bmi.w	8009f38 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a098:	f7fe feb0 	bl	8008dfc <HAL_GetTick>
 800a09c:	1b80      	subs	r0, r0, r6
 800a09e:	4285      	cmp	r5, r0
 800a0a0:	d302      	bcc.n	800a0a8 <HAL_I2C_Mem_Read+0x2b4>
 800a0a2:	2d00      	cmp	r5, #0
 800a0a4:	f47f af41 	bne.w	8009f2a <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a0a8:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a0aa:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a0ac:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a0ae:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a0b2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a0b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a0b8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a0bc:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a0be:	f043 0320 	orr.w	r3, r3, #32
}
 800a0c2:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a0c4:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a0c6:	b007      	add	sp, #28
 800a0c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a0cc:	b95d      	cbnz	r5, 800a0e6 <HAL_I2C_Mem_Read+0x2f2>
 800a0ce:	e02b      	b.n	800a128 <HAL_I2C_Mem_Read+0x334>
 800a0d0:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a0d4:	695a      	ldr	r2, [r3, #20]
 800a0d6:	06d2      	lsls	r2, r2, #27
 800a0d8:	d40c      	bmi.n	800a0f4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a0da:	f7fe fe8f 	bl	8008dfc <HAL_GetTick>
 800a0de:	1b80      	subs	r0, r0, r6
 800a0e0:	4285      	cmp	r5, r0
 800a0e2:	d3e1      	bcc.n	800a0a8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a0e4:	6823      	ldr	r3, [r4, #0]
 800a0e6:	695a      	ldr	r2, [r3, #20]
 800a0e8:	0651      	lsls	r1, r2, #25
 800a0ea:	d5f3      	bpl.n	800a0d4 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a0ec:	691a      	ldr	r2, [r3, #16]
 800a0ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a0f0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a0f2:	e7a5      	b.n	800a040 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a0f4:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a0f6:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a0fa:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a0fc:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a0fe:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a100:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a104:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a108:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a10a:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a10c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a110:	2701      	movs	r7, #1
 800a112:	e680      	b.n	8009e16 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a114:	695a      	ldr	r2, [r3, #20]
 800a116:	0652      	lsls	r2, r2, #25
 800a118:	f53f af44 	bmi.w	8009fa4 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a11c:	695a      	ldr	r2, [r3, #20]
 800a11e:	06d1      	lsls	r1, r2, #27
 800a120:	d4e8      	bmi.n	800a0f4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a122:	f7fe fe6b 	bl	8008dfc <HAL_GetTick>
 800a126:	e7bf      	b.n	800a0a8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a128:	695a      	ldr	r2, [r3, #20]
 800a12a:	0650      	lsls	r0, r2, #25
 800a12c:	d5f6      	bpl.n	800a11c <HAL_I2C_Mem_Read+0x328>
 800a12e:	e7dd      	b.n	800a0ec <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a130:	6823      	ldr	r3, [r4, #0]
 800a132:	6819      	ldr	r1, [r3, #0]
 800a134:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a138:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a13a:	9003      	str	r0, [sp, #12]
 800a13c:	6959      	ldr	r1, [r3, #20]
 800a13e:	9103      	str	r1, [sp, #12]
 800a140:	6999      	ldr	r1, [r3, #24]
 800a142:	9103      	str	r1, [sp, #12]
 800a144:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a146:	6819      	ldr	r1, [r3, #0]
 800a148:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a14c:	6019      	str	r1, [r3, #0]
 800a14e:	e6cd      	b.n	8009eec <HAL_I2C_Mem_Read+0xf8>

0800a150 <HAL_I2C_MasterTxCpltCallback>:
 800a150:	4770      	bx	lr
 800a152:	bf00      	nop

0800a154 <HAL_I2C_MasterRxCpltCallback>:
 800a154:	4770      	bx	lr
 800a156:	bf00      	nop

0800a158 <HAL_I2C_SlaveTxCpltCallback>:
 800a158:	4770      	bx	lr
 800a15a:	bf00      	nop

0800a15c <HAL_I2C_SlaveRxCpltCallback>:
 800a15c:	4770      	bx	lr
 800a15e:	bf00      	nop

0800a160 <HAL_I2C_AddrCallback>:
}
 800a160:	4770      	bx	lr
 800a162:	bf00      	nop

0800a164 <HAL_I2C_ListenCpltCallback>:
 800a164:	4770      	bx	lr
 800a166:	bf00      	nop

0800a168 <HAL_I2C_MemTxCpltCallback>:
 800a168:	4770      	bx	lr
 800a16a:	bf00      	nop

0800a16c <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a16c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a170:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a172:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a174:	b959      	cbnz	r1, 800a18e <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a176:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a178:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a17a:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a17c:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a17e:	d00d      	beq.n	800a19c <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a180:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a184:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a186:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a188:	3201      	adds	r2, #1
 800a18a:	6502      	str	r2, [r0, #80]	; 0x50
 800a18c:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a18e:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a190:	2901      	cmp	r1, #1
 800a192:	d009      	beq.n	800a1a8 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a194:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a196:	2902      	cmp	r1, #2
 800a198:	d00e      	beq.n	800a1b8 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a19a:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a19c:	b2d2      	uxtb	r2, r2
 800a19e:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a1a0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a1a2:	3202      	adds	r2, #2
 800a1a4:	6502      	str	r2, [r0, #80]	; 0x50
 800a1a6:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a1a8:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a1aa:	6801      	ldr	r1, [r0, #0]
 800a1ac:	b2d2      	uxtb	r2, r2
 800a1ae:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a1b0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a1b2:	3201      	adds	r2, #1
 800a1b4:	6502      	str	r2, [r0, #80]	; 0x50
 800a1b6:	4770      	bx	lr
 800a1b8:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a1ba:	2a22      	cmp	r2, #34	; 0x22
 800a1bc:	d01f      	beq.n	800a1fe <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a1be:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a1c0:	b289      	uxth	r1, r1
 800a1c2:	b9c1      	cbnz	r1, 800a1f6 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a1c4:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a1c6:	b289      	uxth	r1, r1
 800a1c8:	2900      	cmp	r1, #0
 800a1ca:	d1e6      	bne.n	800a19a <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a1cc:	2a21      	cmp	r2, #33	; 0x21
 800a1ce:	d1e4      	bne.n	800a19a <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a1d0:	6802      	ldr	r2, [r0, #0]
{
 800a1d2:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a1d4:	6854      	ldr	r4, [r2, #4]
 800a1d6:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a1da:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1dc:	6814      	ldr	r4, [r2, #0]
 800a1de:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a1e2:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a1e4:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a1e6:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a1e8:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1ec:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a1f0:	f7ff ffba 	bl	800a168 <HAL_I2C_MemTxCpltCallback>
}
 800a1f4:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a1f6:	2a21      	cmp	r2, #33	; 0x21
 800a1f8:	d00a      	beq.n	800a210 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a1fa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a1fc:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a1fe:	6801      	ldr	r1, [r0, #0]
 800a200:	680a      	ldr	r2, [r1, #0]
 800a202:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a206:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a208:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a20a:	3201      	adds	r2, #1
 800a20c:	6502      	str	r2, [r0, #80]	; 0x50
 800a20e:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a210:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a212:	6802      	ldr	r2, [r0, #0]
 800a214:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a218:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a21a:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a21c:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a21e:	3a01      	subs	r2, #1
 800a220:	b292      	uxth	r2, r2
 800a222:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a224:	4770      	bx	lr
 800a226:	bf00      	nop

0800a228 <HAL_I2C_MemRxCpltCallback>:
 800a228:	4770      	bx	lr
 800a22a:	bf00      	nop

0800a22c <HAL_I2C_ErrorCallback>:
 800a22c:	4770      	bx	lr
 800a22e:	bf00      	nop

0800a230 <HAL_I2C_AbortCpltCallback>:
 800a230:	4770      	bx	lr
 800a232:	bf00      	nop

0800a234 <I2C_DMAAbort>:
{
 800a234:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a236:	4b3a      	ldr	r3, [pc, #232]	; (800a320 <I2C_DMAAbort+0xec>)
 800a238:	4a3a      	ldr	r2, [pc, #232]	; (800a324 <I2C_DMAAbort+0xf0>)
 800a23a:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a23c:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a23e:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a240:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a242:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a244:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a248:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a24a:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a24c:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a250:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a252:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a256:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a25a:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a25c:	9301      	str	r3, [sp, #4]
 800a25e:	e005      	b.n	800a26c <I2C_DMAAbort+0x38>
    count--;
 800a260:	9b01      	ldr	r3, [sp, #4]
 800a262:	3b01      	subs	r3, #1
 800a264:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a266:	6813      	ldr	r3, [r2, #0]
 800a268:	059b      	lsls	r3, r3, #22
 800a26a:	d506      	bpl.n	800a27a <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a26c:	9b01      	ldr	r3, [sp, #4]
 800a26e:	2b00      	cmp	r3, #0
 800a270:	d1f6      	bne.n	800a260 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a272:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a274:	f043 0320 	orr.w	r3, r3, #32
 800a278:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a27a:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a27c:	b34c      	cbz	r4, 800a2d2 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a27e:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a280:	2500      	movs	r5, #0
 800a282:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a284:	b1f3      	cbz	r3, 800a2c4 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a286:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a288:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a28a:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a28e:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a290:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a292:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a294:	2400      	movs	r4, #0
 800a296:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a298:	6813      	ldr	r3, [r2, #0]
 800a29a:	f023 0301 	bic.w	r3, r3, #1
 800a29e:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a2a0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a2a4:	2b60      	cmp	r3, #96	; 0x60
 800a2a6:	d02a      	beq.n	800a2fe <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a2a8:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a2ac:	2928      	cmp	r1, #40	; 0x28
 800a2ae:	d019      	beq.n	800a2e4 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a2b0:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a2b2:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a2b4:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a2b8:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a2bc:	f7ff ffb6 	bl	800a22c <HAL_I2C_ErrorCallback>
}
 800a2c0:	b002      	add	sp, #8
 800a2c2:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2c4:	6815      	ldr	r5, [r2, #0]
 800a2c6:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a2ca:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a2cc:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a2ce:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a2d0:	e7e2      	b.n	800a298 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a2d2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a2d4:	b1f3      	cbz	r3, 800a314 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2d6:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a2d8:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2da:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a2de:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a2e0:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a2e2:	e7d7      	b.n	800a294 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a2e4:	6813      	ldr	r3, [r2, #0]
 800a2e6:	f043 0301 	orr.w	r3, r3, #1
 800a2ea:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2ec:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a2ee:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2f0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a2f4:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a2f6:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a2f8:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a2fc:	e7de      	b.n	800a2bc <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a2fe:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a300:	2220      	movs	r2, #32
 800a302:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a306:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a30a:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a30c:	f7ff ff90 	bl	800a230 <HAL_I2C_AbortCpltCallback>
}
 800a310:	b002      	add	sp, #8
 800a312:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a314:	6814      	ldr	r4, [r2, #0]
 800a316:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a31a:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a31c:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a31e:	e7bb      	b.n	800a298 <I2C_DMAAbort+0x64>
 800a320:	20000094 	.word	0x20000094
 800a324:	14f8b589 	.word	0x14f8b589

0800a328 <I2C_ITError>:
{
 800a328:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a32a:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a32e:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a332:	2b10      	cmp	r3, #16
{
 800a334:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a336:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a338:	d039      	beq.n	800a3ae <I2C_ITError+0x86>
 800a33a:	b2d9      	uxtb	r1, r3
 800a33c:	2940      	cmp	r1, #64	; 0x40
 800a33e:	d036      	beq.n	800a3ae <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a340:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a344:	2928      	cmp	r1, #40	; 0x28
 800a346:	d03d      	beq.n	800a3c4 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a348:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a34a:	6859      	ldr	r1, [r3, #4]
 800a34c:	0508      	lsls	r0, r1, #20
 800a34e:	d407      	bmi.n	800a360 <I2C_ITError+0x38>
 800a350:	2a60      	cmp	r2, #96	; 0x60
 800a352:	d005      	beq.n	800a360 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a354:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a356:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a358:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a35c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a360:	2200      	movs	r2, #0
 800a362:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a364:	685a      	ldr	r2, [r3, #4]
 800a366:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a36a:	d134      	bne.n	800a3d6 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a36c:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a370:	2960      	cmp	r1, #96	; 0x60
 800a372:	d075      	beq.n	800a460 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a374:	695a      	ldr	r2, [r3, #20]
 800a376:	0650      	lsls	r0, r2, #25
 800a378:	d505      	bpl.n	800a386 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a37a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a37c:	691b      	ldr	r3, [r3, #16]
 800a37e:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a380:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a382:	3301      	adds	r3, #1
 800a384:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a386:	4620      	mov	r0, r4
 800a388:	f7ff ff50 	bl	800a22c <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a38c:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a38e:	0719      	lsls	r1, r3, #28
 800a390:	d004      	beq.n	800a39c <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a392:	6822      	ldr	r2, [r4, #0]
 800a394:	6853      	ldr	r3, [r2, #4]
 800a396:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a39a:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a39c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a3a0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a3a2:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a3a4:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a3a6:	d501      	bpl.n	800a3ac <I2C_ITError+0x84>
 800a3a8:	2b28      	cmp	r3, #40	; 0x28
 800a3aa:	d02f      	beq.n	800a40c <I2C_ITError+0xe4>
}
 800a3ac:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a3ae:	2a22      	cmp	r2, #34	; 0x22
 800a3b0:	d1c6      	bne.n	800a340 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a3b2:	6823      	ldr	r3, [r4, #0]
 800a3b4:	681a      	ldr	r2, [r3, #0]
 800a3b6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a3ba:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a3bc:	685a      	ldr	r2, [r3, #4]
 800a3be:	0512      	lsls	r2, r2, #20
 800a3c0:	d5c8      	bpl.n	800a354 <I2C_ITError+0x2c>
 800a3c2:	e7cd      	b.n	800a360 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a3c4:	2300      	movs	r3, #0
 800a3c6:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a3c8:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a3ca:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a3ce:	685a      	ldr	r2, [r3, #4]
 800a3d0:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a3d4:	d0ca      	beq.n	800a36c <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a3d6:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a3d8:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a3da:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a3de:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a3e0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a3e4:	2b01      	cmp	r3, #1
 800a3e6:	d01e      	beq.n	800a426 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a3e8:	4b28      	ldr	r3, [pc, #160]	; (800a48c <I2C_ITError+0x164>)
 800a3ea:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a3ec:	f7fe fd90 	bl	8008f10 <HAL_DMA_Abort_IT>
 800a3f0:	2800      	cmp	r0, #0
 800a3f2:	d0cb      	beq.n	800a38c <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a3f4:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a3f6:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a3f8:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a3fa:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a3fc:	f023 0301 	bic.w	r3, r3, #1
 800a400:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a402:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a406:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a408:	4798      	blx	r3
 800a40a:	e7bf      	b.n	800a38c <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a40c:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a40e:	4920      	ldr	r1, [pc, #128]	; (800a490 <I2C_ITError+0x168>)
 800a410:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a412:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a414:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a416:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a418:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a41c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a420:	f7ff fea0 	bl	800a164 <HAL_I2C_ListenCpltCallback>
}
 800a424:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a426:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a428:	4b18      	ldr	r3, [pc, #96]	; (800a48c <I2C_ITError+0x164>)
 800a42a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a42c:	f7fe fd70 	bl	8008f10 <HAL_DMA_Abort_IT>
 800a430:	2800      	cmp	r0, #0
 800a432:	d0ab      	beq.n	800a38c <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a434:	6823      	ldr	r3, [r4, #0]
 800a436:	695a      	ldr	r2, [r3, #20]
 800a438:	0651      	lsls	r1, r2, #25
 800a43a:	d506      	bpl.n	800a44a <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a43c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a43e:	691b      	ldr	r3, [r3, #16]
 800a440:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a442:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a444:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a446:	3201      	adds	r2, #1
 800a448:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a44a:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a44c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a44e:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a452:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a454:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a456:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a45a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a45c:	4798      	blx	r3
 800a45e:	e795      	b.n	800a38c <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a460:	2120      	movs	r1, #32
 800a462:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a466:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a468:	695a      	ldr	r2, [r3, #20]
 800a46a:	0652      	lsls	r2, r2, #25
 800a46c:	d506      	bpl.n	800a47c <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a46e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a470:	691b      	ldr	r3, [r3, #16]
 800a472:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a474:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a476:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a478:	3201      	adds	r2, #1
 800a47a:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a47c:	681a      	ldr	r2, [r3, #0]
 800a47e:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a482:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a484:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a486:	f7ff fed3 	bl	800a230 <HAL_I2C_AbortCpltCallback>
 800a48a:	e77f      	b.n	800a38c <I2C_ITError+0x64>
 800a48c:	0800a235 	.word	0x0800a235
 800a490:	ffff0000 	.word	0xffff0000

0800a494 <HAL_I2C_EV_IRQHandler>:
{
 800a494:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a496:	6803      	ldr	r3, [r0, #0]
{
 800a498:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a49a:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a49c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a49e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4a2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a4a6:	2910      	cmp	r1, #16
{
 800a4a8:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4aa:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a4ac:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a4b0:	d022      	beq.n	800a4f8 <HAL_I2C_EV_IRQHandler+0x64>
 800a4b2:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a4b6:	d01f      	beq.n	800a4f8 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a4b8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a4ba:	2900      	cmp	r1, #0
 800a4bc:	f000 8094 	beq.w	800a5e8 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a4c0:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a4c2:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a4c4:	f011 0602 	ands.w	r6, r1, #2
 800a4c8:	d059      	beq.n	800a57e <HAL_I2C_EV_IRQHandler+0xea>
 800a4ca:	0586      	lsls	r6, r0, #22
 800a4cc:	d559      	bpl.n	800a582 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a4ce:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a4d0:	b102      	cbz	r2, 800a4d4 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a4d2:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a4d4:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a4d8:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a4dc:	2a28      	cmp	r2, #40	; 0x28
 800a4de:	f000 821e 	beq.w	800a91e <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a4e2:	2200      	movs	r2, #0
 800a4e4:	920c      	str	r2, [sp, #48]	; 0x30
 800a4e6:	6959      	ldr	r1, [r3, #20]
 800a4e8:	910c      	str	r1, [sp, #48]	; 0x30
 800a4ea:	699b      	ldr	r3, [r3, #24]
 800a4ec:	930c      	str	r3, [sp, #48]	; 0x30
 800a4ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a4f0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a4f4:	b00e      	add	sp, #56	; 0x38
 800a4f6:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a4f8:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a4fa:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a4fc:	f011 0f01 	tst.w	r1, #1
 800a500:	d11a      	bne.n	800a538 <HAL_I2C_EV_IRQHandler+0xa4>
 800a502:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a506:	d0f5      	beq.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800a508:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a50c:	d0f2      	beq.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a50e:	070d      	lsls	r5, r1, #28
 800a510:	d56d      	bpl.n	800a5ee <HAL_I2C_EV_IRQHandler+0x15a>
 800a512:	0585      	lsls	r5, r0, #22
 800a514:	f140 8083 	bpl.w	800a61e <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a518:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a51a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a51c:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a51e:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a520:	2900      	cmp	r1, #0
 800a522:	f000 81e3 	beq.w	800a8ec <HAL_I2C_EV_IRQHandler+0x458>
 800a526:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a528:	2a00      	cmp	r2, #0
 800a52a:	f000 81df 	beq.w	800a8ec <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a52e:	685a      	ldr	r2, [r3, #4]
 800a530:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a534:	605a      	str	r2, [r3, #4]
 800a536:	e7dd      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a538:	0585      	lsls	r5, r0, #22
 800a53a:	d56e      	bpl.n	800a61a <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a53c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a53e:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a542:	f000 81e9 	beq.w	800a918 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a546:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a548:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a54c:	bf04      	itt	eq
 800a54e:	2208      	moveq	r2, #8
 800a550:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a552:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a556:	2a40      	cmp	r2, #64	; 0x40
 800a558:	f000 81d7 	beq.w	800a90a <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a55c:	6922      	ldr	r2, [r4, #16]
 800a55e:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a562:	f000 81b2 	beq.w	800a8ca <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a566:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a568:	2a00      	cmp	r2, #0
 800a56a:	f040 81ef 	bne.w	800a94c <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a56e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a570:	11d2      	asrs	r2, r2, #7
 800a572:	f002 0206 	and.w	r2, r2, #6
 800a576:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a57a:	611a      	str	r2, [r3, #16]
 800a57c:	e7ba      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a57e:	06cd      	lsls	r5, r1, #27
 800a580:	d47c      	bmi.n	800a67c <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a582:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a586:	2a21      	cmp	r2, #33	; 0x21
 800a588:	f000 80f5 	beq.w	800a776 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a58c:	064e      	lsls	r6, r1, #25
 800a58e:	f140 8132 	bpl.w	800a7f6 <HAL_I2C_EV_IRQHandler+0x362>
 800a592:	0545      	lsls	r5, r0, #21
 800a594:	f140 812f 	bpl.w	800a7f6 <HAL_I2C_EV_IRQHandler+0x362>
 800a598:	0749      	lsls	r1, r1, #29
 800a59a:	f100 812f 	bmi.w	800a7fc <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a59e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a5a2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a5a4:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a5a6:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a5a8:	2a00      	cmp	r2, #0
 800a5aa:	d0a3      	beq.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a5ac:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a5ae:	691b      	ldr	r3, [r3, #16]
 800a5b0:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a5b2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a5b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a5b6:	3b01      	subs	r3, #1
 800a5b8:	b29b      	uxth	r3, r3
 800a5ba:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a5bc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a5be:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a5c0:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a5c2:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a5c4:	2b00      	cmp	r3, #0
 800a5c6:	d195      	bne.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800a5c8:	292a      	cmp	r1, #42	; 0x2a
 800a5ca:	d193      	bne.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a5cc:	6822      	ldr	r2, [r4, #0]
 800a5ce:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a5d0:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a5d2:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a5d4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a5d8:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a5da:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a5dc:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a5de:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a5e2:	f7ff fdbb 	bl	800a15c <HAL_I2C_SlaveRxCpltCallback>
 800a5e6:	e785      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a5e8:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a5ea:	6959      	ldr	r1, [r3, #20]
 800a5ec:	e76a      	b.n	800a4c4 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a5ee:	078d      	lsls	r5, r1, #30
 800a5f0:	d515      	bpl.n	800a61e <HAL_I2C_EV_IRQHandler+0x18a>
 800a5f2:	0585      	lsls	r5, r0, #22
 800a5f4:	d513      	bpl.n	800a61e <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a5f6:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a5fa:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a5fc:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a5fe:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a602:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a604:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a606:	f000 81b3 	beq.w	800a970 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a60a:	2200      	movs	r2, #0
 800a60c:	920a      	str	r2, [sp, #40]	; 0x28
 800a60e:	695a      	ldr	r2, [r3, #20]
 800a610:	920a      	str	r2, [sp, #40]	; 0x28
 800a612:	699b      	ldr	r3, [r3, #24]
 800a614:	930a      	str	r3, [sp, #40]	; 0x28
 800a616:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a618:	e76c      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a61a:	070d      	lsls	r5, r1, #28
 800a61c:	d5e7      	bpl.n	800a5ee <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a61e:	0776      	lsls	r6, r6, #29
 800a620:	f140 80f5 	bpl.w	800a80e <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a624:	685d      	ldr	r5, [r3, #4]
 800a626:	052d      	lsls	r5, r5, #20
 800a628:	f53f af64 	bmi.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a62c:	060e      	lsls	r6, r1, #24
 800a62e:	f140 8115 	bpl.w	800a85c <HAL_I2C_EV_IRQHandler+0x3c8>
 800a632:	0545      	lsls	r5, r0, #21
 800a634:	f140 8112 	bpl.w	800a85c <HAL_I2C_EV_IRQHandler+0x3c8>
 800a638:	074e      	lsls	r6, r1, #29
 800a63a:	f100 8112 	bmi.w	800a862 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a63e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a642:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a644:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a648:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a64a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a64c:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a64e:	2800      	cmp	r0, #0
 800a650:	f040 8235 	bne.w	800aabe <HAL_I2C_EV_IRQHandler+0x62a>
 800a654:	2a21      	cmp	r2, #33	; 0x21
 800a656:	f000 8347 	beq.w	800ace8 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a65a:	2940      	cmp	r1, #64	; 0x40
 800a65c:	f47f af4a 	bne.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a660:	2a22      	cmp	r2, #34	; 0x22
 800a662:	f47f af47 	bne.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a666:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a668:	b292      	uxth	r2, r2
 800a66a:	2a00      	cmp	r2, #0
 800a66c:	f000 8268 	beq.w	800ab40 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a670:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a674:	2a40      	cmp	r2, #64	; 0x40
 800a676:	f040 80b4 	bne.w	800a7e2 <HAL_I2C_EV_IRQHandler+0x34e>
 800a67a:	e0fc      	b.n	800a876 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a67c:	0585      	lsls	r5, r0, #22
 800a67e:	d580      	bpl.n	800a582 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a680:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a684:	685a      	ldr	r2, [r3, #4]
 800a686:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a68a:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a68c:	960d      	str	r6, [sp, #52]	; 0x34
 800a68e:	695a      	ldr	r2, [r3, #20]
 800a690:	920d      	str	r2, [sp, #52]	; 0x34
 800a692:	681a      	ldr	r2, [r3, #0]
 800a694:	f042 0201 	orr.w	r2, r2, #1
 800a698:	601a      	str	r2, [r3, #0]
 800a69a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a69c:	681a      	ldr	r2, [r3, #0]
 800a69e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a6a2:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a6a4:	685a      	ldr	r2, [r3, #4]
 800a6a6:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a6a8:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a6aa:	d521      	bpl.n	800a6f0 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a6ac:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a6b0:	2a22      	cmp	r2, #34	; 0x22
 800a6b2:	f000 817a 	beq.w	800a9aa <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a6b6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a6b8:	6802      	ldr	r2, [r0, #0]
 800a6ba:	6852      	ldr	r2, [r2, #4]
 800a6bc:	b292      	uxth	r2, r2
 800a6be:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a6c0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6c2:	b292      	uxth	r2, r2
 800a6c4:	b11a      	cbz	r2, 800a6ce <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a6c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a6c8:	f042 0204 	orr.w	r2, r2, #4
 800a6cc:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a6ce:	685a      	ldr	r2, [r3, #4]
 800a6d0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a6d4:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a6d6:	f7fe fc2d 	bl	8008f34 <HAL_DMA_GetState>
 800a6da:	2801      	cmp	r0, #1
 800a6dc:	d008      	beq.n	800a6f0 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a6de:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a6e0:	4b99      	ldr	r3, [pc, #612]	; (800a948 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a6e2:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a6e4:	f7fe fc14 	bl	8008f10 <HAL_DMA_Abort_IT>
 800a6e8:	b110      	cbz	r0, 800a6f0 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a6ea:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a6ec:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a6ee:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a6f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a6f2:	b29b      	uxth	r3, r3
 800a6f4:	b313      	cbz	r3, 800a73c <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a6f6:	6823      	ldr	r3, [r4, #0]
 800a6f8:	695a      	ldr	r2, [r3, #20]
 800a6fa:	0752      	lsls	r2, r2, #29
 800a6fc:	d50a      	bpl.n	800a714 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6fe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a700:	691b      	ldr	r3, [r3, #16]
 800a702:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a704:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a706:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a708:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a70a:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a70c:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a70e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a710:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a712:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a714:	695a      	ldr	r2, [r3, #20]
 800a716:	0656      	lsls	r6, r2, #25
 800a718:	d509      	bpl.n	800a72e <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a71a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a71c:	691b      	ldr	r3, [r3, #16]
 800a71e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a720:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a722:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a724:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a726:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a728:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a72a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a72c:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a72e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a730:	b29b      	uxth	r3, r3
 800a732:	b11b      	cbz	r3, 800a73c <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a734:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a736:	f043 0304 	orr.w	r3, r3, #4
 800a73a:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a73c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a73e:	2b00      	cmp	r3, #0
 800a740:	f040 80dd 	bne.w	800a8fe <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a744:	2d2a      	cmp	r5, #42	; 0x2a
 800a746:	f000 8151 	beq.w	800a9ec <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a74a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a74e:	2b28      	cmp	r3, #40	; 0x28
 800a750:	f000 8154 	beq.w	800a9fc <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a754:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a756:	2b22      	cmp	r3, #34	; 0x22
 800a758:	d002      	beq.n	800a760 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a75a:	2d22      	cmp	r5, #34	; 0x22
 800a75c:	f47f aeca 	bne.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a760:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a762:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a764:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a766:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a768:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a76c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a770:	f7ff fcf4 	bl	800a15c <HAL_I2C_SlaveRxCpltCallback>
 800a774:	e6be      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a776:	060d      	lsls	r5, r1, #24
 800a778:	d528      	bpl.n	800a7cc <HAL_I2C_EV_IRQHandler+0x338>
 800a77a:	0546      	lsls	r6, r0, #21
 800a77c:	d526      	bpl.n	800a7cc <HAL_I2C_EV_IRQHandler+0x338>
 800a77e:	074d      	lsls	r5, r1, #29
 800a780:	d427      	bmi.n	800a7d2 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a782:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a786:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a788:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a78a:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a78c:	2900      	cmp	r1, #0
 800a78e:	f43f aeb1 	beq.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a792:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a794:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a798:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a79a:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a79c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a79e:	3901      	subs	r1, #1
 800a7a0:	b289      	uxth	r1, r1
 800a7a2:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a7a4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a7a6:	b289      	uxth	r1, r1
 800a7a8:	2900      	cmp	r1, #0
 800a7aa:	f47f aea3 	bne.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800a7ae:	2829      	cmp	r0, #41	; 0x29
 800a7b0:	f47f aea0 	bne.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a7b4:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7b6:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a7b8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a7bc:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a7be:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a7c0:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7c2:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a7c6:	f7ff fcc7 	bl	800a158 <HAL_I2C_SlaveTxCpltCallback>
 800a7ca:	e693      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7cc:	0749      	lsls	r1, r1, #29
 800a7ce:	f57f ae91 	bpl.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800a7d2:	0582      	lsls	r2, r0, #22
 800a7d4:	f57f ae8e 	bpl.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a7d8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a7da:	b292      	uxth	r2, r2
 800a7dc:	2a00      	cmp	r2, #0
 800a7de:	f43f ae89 	beq.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a7e2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a7e4:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a7e8:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a7ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a7ec:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a7ee:	3b01      	subs	r3, #1
 800a7f0:	b29b      	uxth	r3, r3
 800a7f2:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a7f4:	e67e      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7f6:	074a      	lsls	r2, r1, #29
 800a7f8:	f57f ae7c 	bpl.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800a7fc:	0586      	lsls	r6, r0, #22
 800a7fe:	f57f ae79 	bpl.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a802:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a804:	b292      	uxth	r2, r2
 800a806:	2a00      	cmp	r2, #0
 800a808:	f43f ae74 	beq.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800a80c:	e01b      	b.n	800a846 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a80e:	685a      	ldr	r2, [r3, #4]
 800a810:	0512      	lsls	r2, r2, #20
 800a812:	f53f ae6f 	bmi.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a816:	064e      	lsls	r6, r1, #25
 800a818:	d433      	bmi.n	800a882 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a81a:	0749      	lsls	r1, r1, #29
 800a81c:	f57f ae6a 	bpl.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800a820:	0582      	lsls	r2, r0, #22
 800a822:	f57f ae67 	bpl.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a826:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a828:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a82a:	b292      	uxth	r2, r2
 800a82c:	2a04      	cmp	r2, #4
 800a82e:	f000 8113 	beq.w	800aa58 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800a832:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a834:	b292      	uxth	r2, r2
 800a836:	2a03      	cmp	r2, #3
 800a838:	f000 8153 	beq.w	800aae2 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800a83c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a83e:	b292      	uxth	r2, r2
 800a840:	2a02      	cmp	r2, #2
 800a842:	f000 8182 	beq.w	800ab4a <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a846:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a848:	691b      	ldr	r3, [r3, #16]
 800a84a:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a84c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a84e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a850:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800a852:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800a854:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a856:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a858:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800a85a:	e64b      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a85c:	074d      	lsls	r5, r1, #29
 800a85e:	f57f ae49 	bpl.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800a862:	0581      	lsls	r1, r0, #22
 800a864:	f57f ae46 	bpl.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800a868:	2a21      	cmp	r2, #33	; 0x21
 800a86a:	f000 80fd 	beq.w	800aa68 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800a86e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a872:	f47f ae3f 	bne.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a876:	4620      	mov	r0, r4
}
 800a878:	b00e      	add	sp, #56	; 0x38
 800a87a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a87e:	f7ff bc75 	b.w	800a16c <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a882:	0545      	lsls	r5, r0, #21
 800a884:	d5c9      	bpl.n	800a81a <HAL_I2C_EV_IRQHandler+0x386>
 800a886:	f011 0104 	ands.w	r1, r1, #4
 800a88a:	d1c9      	bne.n	800a820 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a88c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a890:	2a22      	cmp	r2, #34	; 0x22
 800a892:	f47f ae2f 	bne.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800a896:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a898:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800a89a:	2a03      	cmp	r2, #3
 800a89c:	f240 81ec 	bls.w	800ac78 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a8a2:	691b      	ldr	r3, [r3, #16]
 800a8a4:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a8a6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a8a8:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a8aa:	3b01      	subs	r3, #1
 800a8ac:	b29b      	uxth	r3, r3
 800a8ae:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800a8b0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a8b2:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a8b4:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800a8b6:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800a8b8:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800a8ba:	f47f ae1b 	bne.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8be:	6822      	ldr	r2, [r4, #0]
 800a8c0:	6853      	ldr	r3, [r2, #4]
 800a8c2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a8c6:	6053      	str	r3, [r2, #4]
 800a8c8:	e614      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a8ca:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a8ce:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a8d0:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a8d2:	bf16      	itet	ne
 800a8d4:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a8d8:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a8dc:	b2d2      	uxtbne	r2, r2
 800a8de:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a8e0:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a8e2:	b11a      	cbz	r2, 800a8ec <HAL_I2C_EV_IRQHandler+0x458>
 800a8e4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a8e6:	2a00      	cmp	r2, #0
 800a8e8:	f47f ae21 	bne.w	800a52e <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800a8ec:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a8ee:	2a00      	cmp	r2, #0
 800a8f0:	f43f ae00 	beq.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800a8f4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a8f6:	2a00      	cmp	r2, #0
 800a8f8:	f47f ae19 	bne.w	800a52e <HAL_I2C_EV_IRQHandler+0x9a>
 800a8fc:	e5fa      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800a8fe:	4620      	mov	r0, r4
}
 800a900:	b00e      	add	sp, #56	; 0x38
 800a902:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800a906:	f7ff bd0f 	b.w	800a328 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800a90a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a90c:	bb52      	cbnz	r2, 800a964 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a90e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a910:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a914:	611a      	str	r2, [r3, #16]
 800a916:	e5ed      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800a918:	2201      	movs	r2, #1
 800a91a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800a91c:	e619      	b.n	800a552 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800a91e:	685a      	ldr	r2, [r3, #4]
 800a920:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a924:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800a926:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800a928:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800a92c:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800a930:	bf54      	ite	pl
 800a932:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800a934:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800a936:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800a93a:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800a93e:	4620      	mov	r0, r4
 800a940:	f7ff fc0e 	bl	800a160 <HAL_I2C_AddrCallback>
 800a944:	e5d6      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800a946:	bf00      	nop
 800a948:	0800a235 	.word	0x0800a235
      else if (hi2c->EventCount == 1U)
 800a94c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a94e:	2a01      	cmp	r2, #1
 800a950:	f47f add0 	bne.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800a954:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a956:	11d2      	asrs	r2, r2, #7
 800a958:	f002 0206 	and.w	r2, r2, #6
 800a95c:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800a960:	611a      	str	r2, [r3, #16]
 800a962:	e5c7      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a964:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a966:	f042 0201 	orr.w	r2, r2, #1
 800a96a:	b2d2      	uxtb	r2, r2
 800a96c:	611a      	str	r2, [r3, #16]
 800a96e:	e5c1      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800a970:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800a972:	b911      	cbnz	r1, 800a97a <HAL_I2C_EV_IRQHandler+0x4e6>
 800a974:	2a40      	cmp	r2, #64	; 0x40
 800a976:	f000 809b 	beq.w	800aab0 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800a97a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a97c:	b922      	cbnz	r2, 800a988 <HAL_I2C_EV_IRQHandler+0x4f4>
 800a97e:	6921      	ldr	r1, [r4, #16]
 800a980:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800a984:	f000 809f 	beq.w	800aac6 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800a988:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a98a:	b292      	uxth	r2, r2
 800a98c:	2a00      	cmp	r2, #0
 800a98e:	d142      	bne.n	800aa16 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a990:	9203      	str	r2, [sp, #12]
 800a992:	695a      	ldr	r2, [r3, #20]
 800a994:	9203      	str	r2, [sp, #12]
 800a996:	699a      	ldr	r2, [r3, #24]
 800a998:	9203      	str	r2, [sp, #12]
 800a99a:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a99c:	681a      	ldr	r2, [r3, #0]
 800a99e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a9a2:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800a9a4:	2300      	movs	r3, #0
 800a9a6:	6523      	str	r3, [r4, #80]	; 0x50
 800a9a8:	e5a4      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800a9aa:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a9ac:	6802      	ldr	r2, [r0, #0]
 800a9ae:	6852      	ldr	r2, [r2, #4]
 800a9b0:	b292      	uxth	r2, r2
 800a9b2:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a9b4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9b6:	b292      	uxth	r2, r2
 800a9b8:	b11a      	cbz	r2, 800a9c2 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a9ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a9bc:	f042 0204 	orr.w	r2, r2, #4
 800a9c0:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a9c2:	685a      	ldr	r2, [r3, #4]
 800a9c4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a9c8:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800a9ca:	f7fe fab3 	bl	8008f34 <HAL_DMA_GetState>
 800a9ce:	2801      	cmp	r0, #1
 800a9d0:	f43f ae8e 	beq.w	800a6f0 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a9d4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a9d6:	4b98      	ldr	r3, [pc, #608]	; (800ac38 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800a9d8:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a9da:	f7fe fa99 	bl	8008f10 <HAL_DMA_Abort_IT>
 800a9de:	2800      	cmp	r0, #0
 800a9e0:	f43f ae86 	beq.w	800a6f0 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a9e4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a9e6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a9e8:	4798      	blx	r3
 800a9ea:	e681      	b.n	800a6f0 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a9ec:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800a9ee:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a9f0:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a9f2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a9f6:	f7ff fbb1 	bl	800a15c <HAL_I2C_SlaveRxCpltCallback>
 800a9fa:	e6a6      	b.n	800a74a <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800a9fc:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a9fe:	498f      	ldr	r1, [pc, #572]	; (800ac3c <HAL_I2C_EV_IRQHandler+0x7a8>)
 800aa00:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800aa02:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800aa04:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800aa06:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800aa08:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa0c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800aa10:	f7ff fba8 	bl	800a164 <HAL_I2C_ListenCpltCallback>
 800aa14:	e56e      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800aa16:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa18:	b292      	uxth	r2, r2
 800aa1a:	2a01      	cmp	r2, #1
 800aa1c:	d070      	beq.n	800ab00 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800aa1e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa20:	b292      	uxth	r2, r2
 800aa22:	2a02      	cmp	r2, #2
 800aa24:	f000 80d6 	beq.w	800abd4 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa28:	681a      	ldr	r2, [r3, #0]
 800aa2a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800aa2e:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800aa30:	685a      	ldr	r2, [r3, #4]
 800aa32:	0511      	lsls	r1, r2, #20
 800aa34:	d508      	bpl.n	800aa48 <HAL_I2C_EV_IRQHandler+0x5b4>
 800aa36:	2820      	cmp	r0, #32
 800aa38:	f200 80f8 	bhi.w	800ac2c <HAL_I2C_EV_IRQHandler+0x798>
 800aa3c:	2807      	cmp	r0, #7
 800aa3e:	f200 80ea 	bhi.w	800ac16 <HAL_I2C_EV_IRQHandler+0x782>
 800aa42:	2801      	cmp	r0, #1
 800aa44:	f000 80ed 	beq.w	800ac22 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa48:	2200      	movs	r2, #0
 800aa4a:	9209      	str	r2, [sp, #36]	; 0x24
 800aa4c:	695a      	ldr	r2, [r3, #20]
 800aa4e:	9209      	str	r2, [sp, #36]	; 0x24
 800aa50:	699b      	ldr	r3, [r3, #24]
 800aa52:	9309      	str	r3, [sp, #36]	; 0x24
 800aa54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800aa56:	e7a5      	b.n	800a9a4 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aa58:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa5a:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aa5c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa60:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa62:	691b      	ldr	r3, [r3, #16]
 800aa64:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800aa66:	e6f1      	b.n	800a84c <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800aa68:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800aa6a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800aa6e:	2a21      	cmp	r2, #33	; 0x21
 800aa70:	f47f ad40 	bne.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800aa74:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa76:	b292      	uxth	r2, r2
 800aa78:	2a00      	cmp	r2, #0
 800aa7a:	f47f aeb2 	bne.w	800a7e2 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800aa7e:	2908      	cmp	r1, #8
 800aa80:	f000 80e2 	beq.w	800ac48 <HAL_I2C_EV_IRQHandler+0x7b4>
 800aa84:	2920      	cmp	r1, #32
 800aa86:	f000 80df 	beq.w	800ac48 <HAL_I2C_EV_IRQHandler+0x7b4>
 800aa8a:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800aa8e:	f000 80db 	beq.w	800ac48 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aa92:	6859      	ldr	r1, [r3, #4]
 800aa94:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800aa98:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aa9a:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800aa9c:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aa9e:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800aaa0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800aaa4:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800aaa6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800aaaa:	f7ff fb51 	bl	800a150 <HAL_I2C_MasterTxCpltCallback>
 800aaae:	e521      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aab0:	9101      	str	r1, [sp, #4]
 800aab2:	695a      	ldr	r2, [r3, #20]
 800aab4:	9201      	str	r2, [sp, #4]
 800aab6:	699b      	ldr	r3, [r3, #24]
 800aab8:	9301      	str	r3, [sp, #4]
 800aaba:	9b01      	ldr	r3, [sp, #4]
 800aabc:	e51a      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800aabe:	2a21      	cmp	r2, #33	; 0x21
 800aac0:	f43f add1 	beq.w	800a666 <HAL_I2C_EV_IRQHandler+0x1d2>
 800aac4:	e5c9      	b.n	800a65a <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aac6:	9202      	str	r2, [sp, #8]
 800aac8:	695a      	ldr	r2, [r3, #20]
 800aaca:	9202      	str	r2, [sp, #8]
 800aacc:	699a      	ldr	r2, [r3, #24]
 800aace:	9202      	str	r2, [sp, #8]
 800aad0:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800aad2:	681a      	ldr	r2, [r3, #0]
 800aad4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800aad8:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800aada:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800aadc:	3301      	adds	r3, #1
 800aade:	6523      	str	r3, [r4, #80]	; 0x50
 800aae0:	e508      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aae2:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800aae4:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aae6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aaea:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800aaec:	f43f aeab 	beq.w	800a846 <HAL_I2C_EV_IRQHandler+0x3b2>
 800aaf0:	2902      	cmp	r1, #2
 800aaf2:	f43f aea8 	beq.w	800a846 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aaf6:	681a      	ldr	r2, [r3, #0]
 800aaf8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aafc:	601a      	str	r2, [r3, #0]
 800aafe:	e6a2      	b.n	800a846 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800ab00:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ab04:	f000 811b 	beq.w	800ad3e <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800ab08:	2808      	cmp	r0, #8
 800ab0a:	f000 8108 	beq.w	800ad1e <HAL_I2C_EV_IRQHandler+0x88a>
 800ab0e:	2820      	cmp	r0, #32
 800ab10:	f000 8105 	beq.w	800ad1e <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ab14:	2d12      	cmp	r5, #18
 800ab16:	f000 80ff 	beq.w	800ad18 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800ab1a:	2810      	cmp	r0, #16
 800ab1c:	d804      	bhi.n	800ab28 <HAL_I2C_EV_IRQHandler+0x694>
 800ab1e:	4a48      	ldr	r2, [pc, #288]	; (800ac40 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800ab20:	40c2      	lsrs	r2, r0
 800ab22:	07d1      	lsls	r1, r2, #31
 800ab24:	f100 814c 	bmi.w	800adc0 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab28:	681a      	ldr	r2, [r3, #0]
 800ab2a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab2e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab30:	2200      	movs	r2, #0
 800ab32:	9206      	str	r2, [sp, #24]
 800ab34:	695a      	ldr	r2, [r3, #20]
 800ab36:	9206      	str	r2, [sp, #24]
 800ab38:	699b      	ldr	r3, [r3, #24]
 800ab3a:	9306      	str	r3, [sp, #24]
 800ab3c:	9b06      	ldr	r3, [sp, #24]
 800ab3e:	e731      	b.n	800a9a4 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ab40:	685a      	ldr	r2, [r3, #4]
 800ab42:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab46:	605a      	str	r2, [r3, #4]
 800ab48:	e4d4      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800ab4a:	3901      	subs	r1, #1
 800ab4c:	290f      	cmp	r1, #15
 800ab4e:	d809      	bhi.n	800ab64 <HAL_I2C_EV_IRQHandler+0x6d0>
 800ab50:	e8df f001 	tbb	[pc, r1]
 800ab54:	3608363b 	.word	0x3608363b
 800ab58:	08080808 	.word	0x08080808
 800ab5c:	08080808 	.word	0x08080808
 800ab60:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab64:	681a      	ldr	r2, [r3, #0]
 800ab66:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab6a:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab6c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ab6e:	691b      	ldr	r3, [r3, #16]
 800ab70:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ab72:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ab74:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab76:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800ab78:	3b01      	subs	r3, #1
 800ab7a:	b29b      	uxth	r3, r3
 800ab7c:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab7e:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800ab80:	1c51      	adds	r1, r2, #1
 800ab82:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab84:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800ab86:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ab88:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800ab8a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ab8c:	3b01      	subs	r3, #1
 800ab8e:	b29b      	uxth	r3, r3
 800ab90:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ab92:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800ab94:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ab96:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800ab9a:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800ab9c:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ab9e:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800aba0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aba4:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800aba8:	2b40      	cmp	r3, #64	; 0x40
 800abaa:	f000 80f5 	beq.w	800ad98 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800abae:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800abb0:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800abb2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800abb6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800abb8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800abba:	f7ff facb 	bl	800a154 <HAL_I2C_MasterRxCpltCallback>
 800abbe:	e499      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abc0:	681a      	ldr	r2, [r3, #0]
 800abc2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800abc6:	601a      	str	r2, [r3, #0]
 800abc8:	e7d0      	b.n	800ab6c <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abca:	681a      	ldr	r2, [r3, #0]
 800abcc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abd0:	601a      	str	r2, [r3, #0]
 800abd2:	e7cb      	b.n	800ab6c <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800abd4:	2810      	cmp	r0, #16
 800abd6:	d804      	bhi.n	800abe2 <HAL_I2C_EV_IRQHandler+0x74e>
 800abd8:	4a19      	ldr	r2, [pc, #100]	; (800ac40 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800abda:	40c2      	lsrs	r2, r0
 800abdc:	07d2      	lsls	r2, r2, #31
 800abde:	f100 80c2 	bmi.w	800ad66 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abe2:	681a      	ldr	r2, [r3, #0]
 800abe4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abe8:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800abea:	681a      	ldr	r2, [r3, #0]
 800abec:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800abf0:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800abf2:	685a      	ldr	r2, [r3, #4]
 800abf4:	0516      	lsls	r6, r2, #20
 800abf6:	d506      	bpl.n	800ac06 <HAL_I2C_EV_IRQHandler+0x772>
 800abf8:	2820      	cmp	r0, #32
 800abfa:	f240 80bc 	bls.w	800ad76 <HAL_I2C_EV_IRQHandler+0x8e2>
 800abfe:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ac02:	f000 80bd 	beq.w	800ad80 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac06:	2200      	movs	r2, #0
 800ac08:	9208      	str	r2, [sp, #32]
 800ac0a:	695a      	ldr	r2, [r3, #20]
 800ac0c:	9208      	str	r2, [sp, #32]
 800ac0e:	699b      	ldr	r3, [r3, #24]
 800ac10:	9308      	str	r3, [sp, #32]
 800ac12:	9b08      	ldr	r3, [sp, #32]
 800ac14:	e6c6      	b.n	800a9a4 <HAL_I2C_EV_IRQHandler+0x510>
 800ac16:	4a0b      	ldr	r2, [pc, #44]	; (800ac44 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800ac18:	3808      	subs	r0, #8
 800ac1a:	40c2      	lsrs	r2, r0
 800ac1c:	07d2      	lsls	r2, r2, #31
 800ac1e:	f57f af13 	bpl.w	800aa48 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ac22:	685a      	ldr	r2, [r3, #4]
 800ac24:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800ac28:	605a      	str	r2, [r3, #4]
 800ac2a:	e70d      	b.n	800aa48 <HAL_I2C_EV_IRQHandler+0x5b4>
 800ac2c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ac30:	f47f af0a 	bne.w	800aa48 <HAL_I2C_EV_IRQHandler+0x5b4>
 800ac34:	e7f5      	b.n	800ac22 <HAL_I2C_EV_IRQHandler+0x78e>
 800ac36:	bf00      	nop
 800ac38:	0800a235 	.word	0x0800a235
 800ac3c:	ffff0000 	.word	0xffff0000
 800ac40:	00010014 	.word	0x00010014
 800ac44:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac48:	6859      	ldr	r1, [r3, #4]
 800ac4a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ac4e:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac50:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ac52:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800ac54:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac56:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800ac5a:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ac5c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800ac5e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac62:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac66:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac6a:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ac6c:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac6e:	f47f af1c 	bne.w	800aaaa <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ac72:	f7ff fa79 	bl	800a168 <HAL_I2C_MemTxCpltCallback>
 800ac76:	e43d      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800ac78:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ac7a:	2802      	cmp	r0, #2
 800ac7c:	f43f af60 	beq.w	800ab40 <HAL_I2C_EV_IRQHandler+0x6ac>
 800ac80:	2a01      	cmp	r2, #1
 800ac82:	f63f af5d 	bhi.w	800ab40 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ac86:	4a62      	ldr	r2, [pc, #392]	; (800ae10 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800ac88:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ac8a:	6812      	ldr	r2, [r2, #0]
 800ac8c:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800ac90:	fbb2 f2f0 	udiv	r2, r2, r0
 800ac94:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ac98:	920b      	str	r2, [sp, #44]	; 0x2c
 800ac9a:	e004      	b.n	800aca6 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ac9c:	681a      	ldr	r2, [r3, #0]
 800ac9e:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800aca2:	f000 8092 	beq.w	800adca <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800aca6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800aca8:	3a01      	subs	r2, #1
 800acaa:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800acac:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800acae:	2900      	cmp	r1, #0
 800acb0:	d1f4      	bne.n	800ac9c <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800acb2:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acb4:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800acb6:	f042 0220 	orr.w	r2, r2, #32
 800acba:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800acbc:	685a      	ldr	r2, [r3, #4]
 800acbe:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800acc2:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acc4:	691b      	ldr	r3, [r3, #16]
 800acc6:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800acc8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800acca:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800accc:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800acce:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800acd0:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800acd2:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800acd4:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800acd6:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800acd8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800acdc:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800acde:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800ace2:	f7ff faa3 	bl	800a22c <HAL_I2C_ErrorCallback>
 800ace6:	e405      	b.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ace8:	2d08      	cmp	r5, #8
 800acea:	d0ad      	beq.n	800ac48 <HAL_I2C_EV_IRQHandler+0x7b4>
 800acec:	2d20      	cmp	r5, #32
 800acee:	d0ab      	beq.n	800ac48 <HAL_I2C_EV_IRQHandler+0x7b4>
 800acf0:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800acf4:	d0a8      	beq.n	800ac48 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800acf6:	685a      	ldr	r2, [r3, #4]
 800acf8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800acfc:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800acfe:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad00:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ad02:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ad04:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad06:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ad0a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800ad0c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ad10:	f7ff fa1e 	bl	800a150 <HAL_I2C_MasterTxCpltCallback>
 800ad14:	f7ff bbee 	b.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ad18:	2801      	cmp	r0, #1
 800ad1a:	f43f af05 	beq.w	800ab28 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad1e:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad20:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad22:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad26:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad28:	9107      	str	r1, [sp, #28]
 800ad2a:	695a      	ldr	r2, [r3, #20]
 800ad2c:	9207      	str	r2, [sp, #28]
 800ad2e:	699a      	ldr	r2, [r3, #24]
 800ad30:	9207      	str	r2, [sp, #28]
 800ad32:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad34:	681a      	ldr	r2, [r3, #0]
 800ad36:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ad3a:	601a      	str	r2, [r3, #0]
 800ad3c:	e632      	b.n	800a9a4 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad3e:	681a      	ldr	r2, [r3, #0]
 800ad40:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad44:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ad46:	685a      	ldr	r2, [r3, #4]
 800ad48:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ad4c:	d02d      	beq.n	800adaa <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad4e:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad50:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad52:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad56:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad58:	9104      	str	r1, [sp, #16]
 800ad5a:	695a      	ldr	r2, [r3, #20]
 800ad5c:	9204      	str	r2, [sp, #16]
 800ad5e:	699b      	ldr	r3, [r3, #24]
 800ad60:	9304      	str	r3, [sp, #16]
 800ad62:	9b04      	ldr	r3, [sp, #16]
 800ad64:	e61e      	b.n	800a9a4 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad66:	681a      	ldr	r2, [r3, #0]
 800ad68:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ad6c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ad6e:	685a      	ldr	r2, [r3, #4]
 800ad70:	0515      	lsls	r5, r2, #20
 800ad72:	f57f af48 	bpl.w	800ac06 <HAL_I2C_EV_IRQHandler+0x772>
 800ad76:	2807      	cmp	r0, #7
 800ad78:	d807      	bhi.n	800ad8a <HAL_I2C_EV_IRQHandler+0x8f6>
 800ad7a:	2801      	cmp	r0, #1
 800ad7c:	f47f af43 	bne.w	800ac06 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ad80:	685a      	ldr	r2, [r3, #4]
 800ad82:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800ad86:	605a      	str	r2, [r3, #4]
 800ad88:	e73d      	b.n	800ac06 <HAL_I2C_EV_IRQHandler+0x772>
 800ad8a:	4a22      	ldr	r2, [pc, #136]	; (800ae14 <HAL_I2C_EV_IRQHandler+0x980>)
 800ad8c:	3808      	subs	r0, #8
 800ad8e:	40c2      	lsrs	r2, r0
 800ad90:	07d0      	lsls	r0, r2, #31
 800ad92:	f57f af38 	bpl.w	800ac06 <HAL_I2C_EV_IRQHandler+0x772>
 800ad96:	e7f3      	b.n	800ad80 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad98:	2300      	movs	r3, #0
 800ad9a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ad9e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800ada0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ada2:	f7ff fa41 	bl	800a228 <HAL_I2C_MemRxCpltCallback>
 800ada6:	f7ff bba5 	b.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800adaa:	9205      	str	r2, [sp, #20]
 800adac:	695a      	ldr	r2, [r3, #20]
 800adae:	9205      	str	r2, [sp, #20]
 800adb0:	699a      	ldr	r2, [r3, #24]
 800adb2:	9205      	str	r2, [sp, #20]
 800adb4:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800adb6:	681a      	ldr	r2, [r3, #0]
 800adb8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800adbc:	601a      	str	r2, [r3, #0]
 800adbe:	e5f1      	b.n	800a9a4 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adc0:	681a      	ldr	r2, [r3, #0]
 800adc2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800adc6:	601a      	str	r2, [r3, #0]
 800adc8:	e6b2      	b.n	800ab30 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adca:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800adcc:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adce:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800add2:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800add4:	6859      	ldr	r1, [r3, #4]
 800add6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800adda:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800addc:	691b      	ldr	r3, [r3, #16]
 800adde:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ade0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ade2:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800ade4:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800ade6:	b29b      	uxth	r3, r3
 800ade8:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800adea:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800adee:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800adf0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800adf4:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800adf6:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800adf8:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800adfa:	f47f aed9 	bne.w	800abb0 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800adfe:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ae02:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800ae04:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ae06:	f7ff fa0f 	bl	800a228 <HAL_I2C_MemRxCpltCallback>
 800ae0a:	f7ff bb73 	b.w	800a4f4 <HAL_I2C_EV_IRQHandler+0x60>
 800ae0e:	bf00      	nop
 800ae10:	20000094 	.word	0x20000094
 800ae14:	01000101 	.word	0x01000101

0800ae18 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800ae18:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ae1c:	2a20      	cmp	r2, #32
{
 800ae1e:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ae20:	fa5f fc82 	uxtb.w	ip, r2
 800ae24:	d001      	beq.n	800ae2a <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800ae26:	2002      	movs	r0, #2
  }
}
 800ae28:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800ae2a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ae2c:	2024      	movs	r0, #36	; 0x24
 800ae2e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ae32:	6810      	ldr	r0, [r2, #0]
 800ae34:	f020 0001 	bic.w	r0, r0, #1
 800ae38:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800ae3a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ae3c:	f020 0010 	bic.w	r0, r0, #16
 800ae40:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800ae42:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ae44:	4301      	orrs	r1, r0
 800ae46:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ae48:	6811      	ldr	r1, [r2, #0]
 800ae4a:	f041 0101 	orr.w	r1, r1, #1
 800ae4e:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800ae50:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800ae52:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ae56:	4770      	bx	lr

0800ae58 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800ae58:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ae5c:	2a20      	cmp	r2, #32
 800ae5e:	d001      	beq.n	800ae64 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800ae60:	2002      	movs	r0, #2
  }
}
 800ae62:	4770      	bx	lr
{
 800ae64:	b410      	push	{r4}
 800ae66:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800ae6a:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ae6c:	2224      	movs	r2, #36	; 0x24
 800ae6e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ae72:	6822      	ldr	r2, [r4, #0]
 800ae74:	f022 0201 	bic.w	r2, r2, #1
 800ae78:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800ae7a:	4603      	mov	r3, r0
 800ae7c:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800ae7e:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800ae82:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800ae84:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800ae86:	b289      	uxth	r1, r1
 800ae88:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ae8a:	6822      	ldr	r2, [r4, #0]
 800ae8c:	f042 0201 	orr.w	r2, r2, #1
 800ae90:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ae92:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ae96:	2000      	movs	r0, #0
}
 800ae98:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ae9c:	4770      	bx	lr
 800ae9e:	bf00      	nop

0800aea0 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800aea0:	2800      	cmp	r0, #0
 800aea2:	d069      	beq.n	800af78 <HAL_LTDC_Init+0xd8>
{
 800aea4:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800aea6:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800aeaa:	4604      	mov	r4, r0
 800aeac:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800aeb0:	2b00      	cmp	r3, #0
 800aeb2:	d05c      	beq.n	800af6e <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aeb4:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800aeb6:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aeb8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800aebc:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800aec0:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800aec2:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800aec4:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800aec8:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800aecc:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800aece:	6999      	ldr	r1, [r3, #24]
 800aed0:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800aed2:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800aed4:	430a      	orrs	r2, r1
 800aed6:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800aed8:	689a      	ldr	r2, [r3, #8]
 800aeda:	4928      	ldr	r1, [pc, #160]	; (800af7c <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800aedc:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800aede:	400a      	ands	r2, r1
 800aee0:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800aee2:	689a      	ldr	r2, [r3, #8]
 800aee4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800aee8:	69a0      	ldr	r0, [r4, #24]
 800aeea:	4302      	orrs	r2, r0
 800aeec:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800aeee:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800aef0:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800aef2:	400a      	ands	r2, r1
 800aef4:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800aef6:	68da      	ldr	r2, [r3, #12]
 800aef8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800aefc:	6a20      	ldr	r0, [r4, #32]
 800aefe:	4302      	orrs	r2, r0
 800af00:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800af02:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800af04:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800af06:	400a      	ands	r2, r1
 800af08:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800af0a:	691a      	ldr	r2, [r3, #16]
 800af0c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800af10:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800af12:	4302      	orrs	r2, r0
 800af14:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800af16:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800af18:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800af1a:	400a      	ands	r2, r1
 800af1c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800af1e:	695a      	ldr	r2, [r3, #20]
 800af20:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800af22:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800af26:	430a      	orrs	r2, r1
 800af28:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800af2a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800af2c:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800af30:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800af34:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800af38:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800af3a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800af3c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800af40:	432a      	orrs	r2, r5
 800af42:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800af46:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800af4a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800af4c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800af4e:	f042 0206 	orr.w	r2, r2, #6
 800af52:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800af54:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800af56:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800af5a:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800af5c:	ea42 020c 	orr.w	r2, r2, ip
 800af60:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800af62:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800af66:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800af6a:	4608      	mov	r0, r1
}
 800af6c:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800af6e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800af72:	f7f6 fb99 	bl	80016a8 <HAL_LTDC_MspInit>
 800af76:	e79d      	b.n	800aeb4 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800af78:	2001      	movs	r0, #1
}
 800af7a:	4770      	bx	lr
 800af7c:	f000f800 	.word	0xf000f800

0800af80 <HAL_LTDC_ErrorCallback>:
 800af80:	4770      	bx	lr
 800af82:	bf00      	nop

0800af84 <HAL_LTDC_ReloadEventCallback>:
 800af84:	4770      	bx	lr
 800af86:	bf00      	nop

0800af88 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800af88:	6803      	ldr	r3, [r0, #0]
{
 800af8a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800af8c:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800af8e:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800af90:	076a      	lsls	r2, r5, #29
{
 800af92:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800af94:	d501      	bpl.n	800af9a <HAL_LTDC_IRQHandler+0x12>
 800af96:	0771      	lsls	r1, r6, #29
 800af98:	d41d      	bmi.n	800afd6 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800af9a:	07aa      	lsls	r2, r5, #30
 800af9c:	d501      	bpl.n	800afa2 <HAL_LTDC_IRQHandler+0x1a>
 800af9e:	07b3      	lsls	r3, r6, #30
 800afa0:	d42d      	bmi.n	800affe <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800afa2:	07e8      	lsls	r0, r5, #31
 800afa4:	d501      	bpl.n	800afaa <HAL_LTDC_IRQHandler+0x22>
 800afa6:	07f1      	lsls	r1, r6, #31
 800afa8:	d440      	bmi.n	800b02c <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800afaa:	072a      	lsls	r2, r5, #28
 800afac:	d501      	bpl.n	800afb2 <HAL_LTDC_IRQHandler+0x2a>
 800afae:	0733      	lsls	r3, r6, #28
 800afb0:	d400      	bmi.n	800afb4 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800afb2:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800afb4:	6823      	ldr	r3, [r4, #0]
 800afb6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800afb8:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800afba:	f022 0208 	bic.w	r2, r2, #8
 800afbe:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800afc0:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800afc2:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800afc4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800afc6:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800afca:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800afce:	4620      	mov	r0, r4
 800afd0:	f7ff ffd8 	bl	800af84 <HAL_LTDC_ReloadEventCallback>
}
 800afd4:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800afd6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800afd8:	f022 0204 	bic.w	r2, r2, #4
 800afdc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800afde:	2204      	movs	r2, #4
 800afe0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800afe2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800afe6:	f043 0301 	orr.w	r3, r3, #1
 800afea:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800afee:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800aff0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aff4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800aff8:	f7ff ffc2 	bl	800af80 <HAL_LTDC_ErrorCallback>
 800affc:	e7cd      	b.n	800af9a <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800affe:	6823      	ldr	r3, [r4, #0]
 800b000:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b002:	f022 0202 	bic.w	r2, r2, #2
 800b006:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b008:	2202      	movs	r2, #2
 800b00a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b00c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b010:	f043 0302 	orr.w	r3, r3, #2
 800b014:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b018:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800b01a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b01c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b020:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b024:	4620      	mov	r0, r4
 800b026:	f7ff ffab 	bl	800af80 <HAL_LTDC_ErrorCallback>
 800b02a:	e7ba      	b.n	800afa2 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b02c:	6823      	ldr	r3, [r4, #0]
 800b02e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b030:	f022 0201 	bic.w	r2, r2, #1
 800b034:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b036:	2201      	movs	r2, #1
 800b038:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b03a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b03c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b040:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b044:	4620      	mov	r0, r4
 800b046:	f7f7 fb29 	bl	800269c <HAL_LTDC_LineEventCallback>
 800b04a:	e7ae      	b.n	800afaa <HAL_LTDC_IRQHandler+0x22>

0800b04c <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800b04c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b050:	2b01      	cmp	r3, #1
 800b052:	f000 80c2 	beq.w	800b1da <HAL_LTDC_ConfigLayer+0x18e>
{
 800b056:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b05a:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b05e:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b062:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b066:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b068:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b06a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b06e:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800b072:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b076:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b07a:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b07e:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800b082:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b084:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b088:	460c      	mov	r4, r1
 800b08a:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b08c:	9301      	str	r3, [sp, #4]
 800b08e:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b090:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b092:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800b096:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b09a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b09c:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b09e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b0a2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b0a4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b0a8:	6823      	ldr	r3, [r4, #0]
 800b0aa:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b0ae:	9b01      	ldr	r3, [sp, #4]
 800b0b0:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b0b4:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b0b8:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b0ba:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b0bc:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b0c0:	1c51      	adds	r1, r2, #1
 800b0c2:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b0c6:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b0c8:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b0ca:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b0ce:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b0d2:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b0d6:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b0da:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b0de:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b0e2:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b0e6:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b0e8:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b0ea:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b0ee:	3301      	adds	r3, #1
 800b0f0:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b0f4:	4403      	add	r3, r0
 800b0f6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b0fa:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b0fe:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b102:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b104:	f023 0307 	bic.w	r3, r3, #7
 800b108:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b10c:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b110:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b114:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b118:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b11c:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b120:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b124:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b128:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b12c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b130:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b134:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b138:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b13c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b140:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b144:	696b      	ldr	r3, [r5, #20]
 800b146:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b14a:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b14e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b152:	f023 0307 	bic.w	r3, r3, #7
 800b156:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b15a:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b15e:	4303      	orrs	r3, r0
 800b160:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b164:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b168:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b16a:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b16e:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b172:	bb69      	cbnz	r1, 800b1d0 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b174:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b176:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b178:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b17a:	fb03 f707 	mul.w	r7, r3, r7
 800b17e:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b180:	fb02 f303 	mul.w	r3, r2, r3
 800b184:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b188:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b18c:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b18e:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b192:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b196:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b19a:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b19e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b1a2:	f023 0307 	bic.w	r3, r3, #7
 800b1a6:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b1aa:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b1ae:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b1b2:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b1b4:	4313      	orrs	r3, r2
 800b1b6:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b1ba:	2300      	movs	r3, #0
  return HAL_OK;
 800b1bc:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b1be:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b1c2:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b1c6:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b1ca:	b003      	add	sp, #12
 800b1cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b1d0:	3901      	subs	r1, #1
 800b1d2:	2906      	cmp	r1, #6
 800b1d4:	d903      	bls.n	800b1de <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b1d6:	2301      	movs	r3, #1
 800b1d8:	e7cd      	b.n	800b176 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b1da:	2002      	movs	r0, #2
}
 800b1dc:	4770      	bx	lr
 800b1de:	4b02      	ldr	r3, [pc, #8]	; (800b1e8 <HAL_LTDC_ConfigLayer+0x19c>)
 800b1e0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b1e4:	e7c7      	b.n	800b176 <HAL_LTDC_ConfigLayer+0x12a>
 800b1e6:	bf00      	nop
 800b1e8:	0802e578 	.word	0x0802e578

0800b1ec <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b1ec:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b1f0:	2b01      	cmp	r3, #1
 800b1f2:	d019      	beq.n	800b228 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b1f4:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b1f6:	2302      	movs	r3, #2
{
 800b1f8:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b1fa:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b1fe:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b200:	4c0a      	ldr	r4, [pc, #40]	; (800b22c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b202:	f023 0301 	bic.w	r3, r3, #1
 800b206:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b208:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b20a:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b20c:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b20e:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b212:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b216:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b218:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b21c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b220:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b224:	4618      	mov	r0, r3
}
 800b226:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b228:	2002      	movs	r0, #2
}
 800b22a:	4770      	bx	lr
 800b22c:	40016800 	.word	0x40016800

0800b230 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b230:	2800      	cmp	r0, #0
 800b232:	f000 81a2 	beq.w	800b57a <HAL_RCC_OscConfig+0x34a>
{
 800b236:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b23a:	6803      	ldr	r3, [r0, #0]
 800b23c:	07dd      	lsls	r5, r3, #31
{
 800b23e:	b082      	sub	sp, #8
 800b240:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b242:	d52f      	bpl.n	800b2a4 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b244:	499e      	ldr	r1, [pc, #632]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b246:	688a      	ldr	r2, [r1, #8]
 800b248:	f002 020c 	and.w	r2, r2, #12
 800b24c:	2a04      	cmp	r2, #4
 800b24e:	f000 80ed 	beq.w	800b42c <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b252:	688a      	ldr	r2, [r1, #8]
 800b254:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b258:	2a08      	cmp	r2, #8
 800b25a:	f000 80e3 	beq.w	800b424 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b25e:	6863      	ldr	r3, [r4, #4]
 800b260:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b264:	f000 80ec 	beq.w	800b440 <HAL_RCC_OscConfig+0x210>
 800b268:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b26c:	f000 8175 	beq.w	800b55a <HAL_RCC_OscConfig+0x32a>
 800b270:	4d93      	ldr	r5, [pc, #588]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b272:	682a      	ldr	r2, [r5, #0]
 800b274:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b278:	602a      	str	r2, [r5, #0]
 800b27a:	682a      	ldr	r2, [r5, #0]
 800b27c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b280:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b282:	2b00      	cmp	r3, #0
 800b284:	f040 80e1 	bne.w	800b44a <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b288:	f7fd fdb8 	bl	8008dfc <HAL_GetTick>
 800b28c:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b28e:	e005      	b.n	800b29c <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b290:	f7fd fdb4 	bl	8008dfc <HAL_GetTick>
 800b294:	1b80      	subs	r0, r0, r6
 800b296:	2864      	cmp	r0, #100	; 0x64
 800b298:	f200 8101 	bhi.w	800b49e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b29c:	682b      	ldr	r3, [r5, #0]
 800b29e:	039b      	lsls	r3, r3, #14
 800b2a0:	d4f6      	bmi.n	800b290 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b2a2:	6823      	ldr	r3, [r4, #0]
 800b2a4:	079f      	lsls	r7, r3, #30
 800b2a6:	d528      	bpl.n	800b2fa <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b2a8:	4a85      	ldr	r2, [pc, #532]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b2aa:	6891      	ldr	r1, [r2, #8]
 800b2ac:	f011 0f0c 	tst.w	r1, #12
 800b2b0:	f000 8090 	beq.w	800b3d4 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b2b4:	6891      	ldr	r1, [r2, #8]
 800b2b6:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b2ba:	2908      	cmp	r1, #8
 800b2bc:	f000 8086 	beq.w	800b3cc <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b2c0:	68e3      	ldr	r3, [r4, #12]
 800b2c2:	2b00      	cmp	r3, #0
 800b2c4:	f000 810e 	beq.w	800b4e4 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b2c8:	4b7e      	ldr	r3, [pc, #504]	; (800b4c4 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b2ca:	4e7d      	ldr	r6, [pc, #500]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b2cc:	2201      	movs	r2, #1
 800b2ce:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b2d0:	f7fd fd94 	bl	8008dfc <HAL_GetTick>
 800b2d4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b2d6:	e005      	b.n	800b2e4 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b2d8:	f7fd fd90 	bl	8008dfc <HAL_GetTick>
 800b2dc:	1b40      	subs	r0, r0, r5
 800b2de:	2802      	cmp	r0, #2
 800b2e0:	f200 80dd 	bhi.w	800b49e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b2e4:	6833      	ldr	r3, [r6, #0]
 800b2e6:	0798      	lsls	r0, r3, #30
 800b2e8:	d5f6      	bpl.n	800b2d8 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b2ea:	6833      	ldr	r3, [r6, #0]
 800b2ec:	6922      	ldr	r2, [r4, #16]
 800b2ee:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b2f2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b2f6:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b2f8:	6823      	ldr	r3, [r4, #0]
 800b2fa:	071a      	lsls	r2, r3, #28
 800b2fc:	d451      	bmi.n	800b3a2 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b2fe:	0758      	lsls	r0, r3, #29
 800b300:	d52f      	bpl.n	800b362 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b302:	4a6f      	ldr	r2, [pc, #444]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b304:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b306:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b30a:	d07f      	beq.n	800b40c <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b30c:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b30e:	4e6e      	ldr	r6, [pc, #440]	; (800b4c8 <HAL_RCC_OscConfig+0x298>)
 800b310:	6833      	ldr	r3, [r6, #0]
 800b312:	05d9      	lsls	r1, r3, #23
 800b314:	f140 80b3 	bpl.w	800b47e <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b318:	68a3      	ldr	r3, [r4, #8]
 800b31a:	2b01      	cmp	r3, #1
 800b31c:	f000 80c3 	beq.w	800b4a6 <HAL_RCC_OscConfig+0x276>
 800b320:	2b05      	cmp	r3, #5
 800b322:	f000 812c 	beq.w	800b57e <HAL_RCC_OscConfig+0x34e>
 800b326:	4e66      	ldr	r6, [pc, #408]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b328:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b32a:	f022 0201 	bic.w	r2, r2, #1
 800b32e:	6732      	str	r2, [r6, #112]	; 0x70
 800b330:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b332:	f022 0204 	bic.w	r2, r2, #4
 800b336:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b338:	2b00      	cmp	r3, #0
 800b33a:	f040 80b9 	bne.w	800b4b0 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b33e:	f7fd fd5d 	bl	8008dfc <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b342:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b346:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b348:	e005      	b.n	800b356 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b34a:	f7fd fd57 	bl	8008dfc <HAL_GetTick>
 800b34e:	1bc0      	subs	r0, r0, r7
 800b350:	4540      	cmp	r0, r8
 800b352:	f200 80a4 	bhi.w	800b49e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b356:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b358:	0798      	lsls	r0, r3, #30
 800b35a:	d4f6      	bmi.n	800b34a <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b35c:	2d00      	cmp	r5, #0
 800b35e:	f040 8106 	bne.w	800b56e <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b362:	69a0      	ldr	r0, [r4, #24]
 800b364:	b1c8      	cbz	r0, 800b39a <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b366:	4d56      	ldr	r5, [pc, #344]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b368:	68ab      	ldr	r3, [r5, #8]
 800b36a:	f003 030c 	and.w	r3, r3, #12
 800b36e:	2b08      	cmp	r3, #8
 800b370:	f000 80c9 	beq.w	800b506 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b374:	4b53      	ldr	r3, [pc, #332]	; (800b4c4 <HAL_RCC_OscConfig+0x294>)
 800b376:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b378:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b37a:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b37c:	f000 8109 	beq.w	800b592 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b380:	f7fd fd3c 	bl	8008dfc <HAL_GetTick>
 800b384:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b386:	e005      	b.n	800b394 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b388:	f7fd fd38 	bl	8008dfc <HAL_GetTick>
 800b38c:	1b00      	subs	r0, r0, r4
 800b38e:	2802      	cmp	r0, #2
 800b390:	f200 8085 	bhi.w	800b49e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b394:	682b      	ldr	r3, [r5, #0]
 800b396:	019b      	lsls	r3, r3, #6
 800b398:	d4f6      	bmi.n	800b388 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b39a:	2000      	movs	r0, #0
}
 800b39c:	b002      	add	sp, #8
 800b39e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b3a2:	6963      	ldr	r3, [r4, #20]
 800b3a4:	b30b      	cbz	r3, 800b3ea <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b3a6:	4b47      	ldr	r3, [pc, #284]	; (800b4c4 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b3a8:	4e45      	ldr	r6, [pc, #276]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b3aa:	2201      	movs	r2, #1
 800b3ac:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b3b0:	f7fd fd24 	bl	8008dfc <HAL_GetTick>
 800b3b4:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b3b6:	e004      	b.n	800b3c2 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b3b8:	f7fd fd20 	bl	8008dfc <HAL_GetTick>
 800b3bc:	1b40      	subs	r0, r0, r5
 800b3be:	2802      	cmp	r0, #2
 800b3c0:	d86d      	bhi.n	800b49e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b3c2:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b3c4:	079b      	lsls	r3, r3, #30
 800b3c6:	d5f7      	bpl.n	800b3b8 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b3c8:	6823      	ldr	r3, [r4, #0]
 800b3ca:	e798      	b.n	800b2fe <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b3cc:	6852      	ldr	r2, [r2, #4]
 800b3ce:	0256      	lsls	r6, r2, #9
 800b3d0:	f53f af76 	bmi.w	800b2c0 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b3d4:	4a3a      	ldr	r2, [pc, #232]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b3d6:	6812      	ldr	r2, [r2, #0]
 800b3d8:	0795      	lsls	r5, r2, #30
 800b3da:	d544      	bpl.n	800b466 <HAL_RCC_OscConfig+0x236>
 800b3dc:	68e2      	ldr	r2, [r4, #12]
 800b3de:	2a01      	cmp	r2, #1
 800b3e0:	d041      	beq.n	800b466 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b3e2:	2001      	movs	r0, #1
}
 800b3e4:	b002      	add	sp, #8
 800b3e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b3ea:	4a36      	ldr	r2, [pc, #216]	; (800b4c4 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b3ec:	4e34      	ldr	r6, [pc, #208]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b3ee:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b3f2:	f7fd fd03 	bl	8008dfc <HAL_GetTick>
 800b3f6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b3f8:	e004      	b.n	800b404 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b3fa:	f7fd fcff 	bl	8008dfc <HAL_GetTick>
 800b3fe:	1b40      	subs	r0, r0, r5
 800b400:	2802      	cmp	r0, #2
 800b402:	d84c      	bhi.n	800b49e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b404:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b406:	079f      	lsls	r7, r3, #30
 800b408:	d4f7      	bmi.n	800b3fa <HAL_RCC_OscConfig+0x1ca>
 800b40a:	e7dd      	b.n	800b3c8 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b40c:	9301      	str	r3, [sp, #4]
 800b40e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b410:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b414:	6413      	str	r3, [r2, #64]	; 0x40
 800b416:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b418:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b41c:	9301      	str	r3, [sp, #4]
 800b41e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b420:	2501      	movs	r5, #1
 800b422:	e774      	b.n	800b30e <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b424:	684a      	ldr	r2, [r1, #4]
 800b426:	0250      	lsls	r0, r2, #9
 800b428:	f57f af19 	bpl.w	800b25e <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b42c:	4a24      	ldr	r2, [pc, #144]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b42e:	6812      	ldr	r2, [r2, #0]
 800b430:	0391      	lsls	r1, r2, #14
 800b432:	f57f af37 	bpl.w	800b2a4 <HAL_RCC_OscConfig+0x74>
 800b436:	6862      	ldr	r2, [r4, #4]
 800b438:	2a00      	cmp	r2, #0
 800b43a:	f47f af33 	bne.w	800b2a4 <HAL_RCC_OscConfig+0x74>
 800b43e:	e7d0      	b.n	800b3e2 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b440:	4a1f      	ldr	r2, [pc, #124]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b442:	6813      	ldr	r3, [r2, #0]
 800b444:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b448:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b44a:	f7fd fcd7 	bl	8008dfc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b44e:	4e1c      	ldr	r6, [pc, #112]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b450:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b452:	e004      	b.n	800b45e <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b454:	f7fd fcd2 	bl	8008dfc <HAL_GetTick>
 800b458:	1b40      	subs	r0, r0, r5
 800b45a:	2864      	cmp	r0, #100	; 0x64
 800b45c:	d81f      	bhi.n	800b49e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b45e:	6833      	ldr	r3, [r6, #0]
 800b460:	039a      	lsls	r2, r3, #14
 800b462:	d5f7      	bpl.n	800b454 <HAL_RCC_OscConfig+0x224>
 800b464:	e71d      	b.n	800b2a2 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b466:	4916      	ldr	r1, [pc, #88]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b468:	6920      	ldr	r0, [r4, #16]
 800b46a:	680a      	ldr	r2, [r1, #0]
 800b46c:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b470:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b474:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b476:	071a      	lsls	r2, r3, #28
 800b478:	f57f af41 	bpl.w	800b2fe <HAL_RCC_OscConfig+0xce>
 800b47c:	e791      	b.n	800b3a2 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b47e:	6833      	ldr	r3, [r6, #0]
 800b480:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b484:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b486:	f7fd fcb9 	bl	8008dfc <HAL_GetTick>
 800b48a:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b48c:	6833      	ldr	r3, [r6, #0]
 800b48e:	05da      	lsls	r2, r3, #23
 800b490:	f53f af42 	bmi.w	800b318 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b494:	f7fd fcb2 	bl	8008dfc <HAL_GetTick>
 800b498:	1bc0      	subs	r0, r0, r7
 800b49a:	2802      	cmp	r0, #2
 800b49c:	d9f6      	bls.n	800b48c <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b49e:	2003      	movs	r0, #3
}
 800b4a0:	b002      	add	sp, #8
 800b4a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b4a6:	4a06      	ldr	r2, [pc, #24]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
 800b4a8:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b4aa:	f043 0301 	orr.w	r3, r3, #1
 800b4ae:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b4b0:	f7fd fca4 	bl	8008dfc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b4b4:	4f02      	ldr	r7, [pc, #8]	; (800b4c0 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b4b6:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b4b8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b4bc:	e00b      	b.n	800b4d6 <HAL_RCC_OscConfig+0x2a6>
 800b4be:	bf00      	nop
 800b4c0:	40023800 	.word	0x40023800
 800b4c4:	42470000 	.word	0x42470000
 800b4c8:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b4cc:	f7fd fc96 	bl	8008dfc <HAL_GetTick>
 800b4d0:	1b80      	subs	r0, r0, r6
 800b4d2:	4540      	cmp	r0, r8
 800b4d4:	d8e3      	bhi.n	800b49e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b4d6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b4d8:	079b      	lsls	r3, r3, #30
 800b4da:	d5f7      	bpl.n	800b4cc <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b4dc:	2d00      	cmp	r5, #0
 800b4de:	f43f af40 	beq.w	800b362 <HAL_RCC_OscConfig+0x132>
 800b4e2:	e044      	b.n	800b56e <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b4e4:	4a42      	ldr	r2, [pc, #264]	; (800b5f0 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b4e6:	4e43      	ldr	r6, [pc, #268]	; (800b5f4 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b4e8:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b4ea:	f7fd fc87 	bl	8008dfc <HAL_GetTick>
 800b4ee:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b4f0:	e004      	b.n	800b4fc <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b4f2:	f7fd fc83 	bl	8008dfc <HAL_GetTick>
 800b4f6:	1b40      	subs	r0, r0, r5
 800b4f8:	2802      	cmp	r0, #2
 800b4fa:	d8d0      	bhi.n	800b49e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b4fc:	6833      	ldr	r3, [r6, #0]
 800b4fe:	0799      	lsls	r1, r3, #30
 800b500:	d4f7      	bmi.n	800b4f2 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b502:	6823      	ldr	r3, [r4, #0]
 800b504:	e6f9      	b.n	800b2fa <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b506:	2801      	cmp	r0, #1
 800b508:	f43f af48 	beq.w	800b39c <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b50c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b50e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b510:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b514:	4291      	cmp	r1, r2
 800b516:	f47f af64 	bne.w	800b3e2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b51a:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b51c:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b520:	4291      	cmp	r1, r2
 800b522:	f47f af5e 	bne.w	800b3e2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b526:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b528:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b52c:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b52e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b532:	f47f af56 	bne.w	800b3e2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b536:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b538:	0852      	lsrs	r2, r2, #1
 800b53a:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b53e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b540:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b544:	f47f af4d 	bne.w	800b3e2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b548:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b54a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b54e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b552:	bf14      	ite	ne
 800b554:	2001      	movne	r0, #1
 800b556:	2000      	moveq	r0, #0
 800b558:	e720      	b.n	800b39c <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b55a:	4b26      	ldr	r3, [pc, #152]	; (800b5f4 <HAL_RCC_OscConfig+0x3c4>)
 800b55c:	681a      	ldr	r2, [r3, #0]
 800b55e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b562:	601a      	str	r2, [r3, #0]
 800b564:	681a      	ldr	r2, [r3, #0]
 800b566:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b56a:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b56c:	e76d      	b.n	800b44a <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b56e:	4a21      	ldr	r2, [pc, #132]	; (800b5f4 <HAL_RCC_OscConfig+0x3c4>)
 800b570:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b572:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b576:	6413      	str	r3, [r2, #64]	; 0x40
 800b578:	e6f3      	b.n	800b362 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b57a:	2001      	movs	r0, #1
}
 800b57c:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b57e:	4b1d      	ldr	r3, [pc, #116]	; (800b5f4 <HAL_RCC_OscConfig+0x3c4>)
 800b580:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b582:	f042 0204 	orr.w	r2, r2, #4
 800b586:	671a      	str	r2, [r3, #112]	; 0x70
 800b588:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b58a:	f042 0201 	orr.w	r2, r2, #1
 800b58e:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b590:	e78e      	b.n	800b4b0 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b592:	f7fd fc33 	bl	8008dfc <HAL_GetTick>
 800b596:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b598:	e005      	b.n	800b5a6 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b59a:	f7fd fc2f 	bl	8008dfc <HAL_GetTick>
 800b59e:	1b80      	subs	r0, r0, r6
 800b5a0:	2802      	cmp	r0, #2
 800b5a2:	f63f af7c 	bhi.w	800b49e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b5a6:	682b      	ldr	r3, [r5, #0]
 800b5a8:	0199      	lsls	r1, r3, #6
 800b5aa:	d4f6      	bmi.n	800b59a <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b5ac:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b5b0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b5b2:	430b      	orrs	r3, r1
 800b5b4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b5b8:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b5bc:	0852      	lsrs	r2, r2, #1
 800b5be:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b5c2:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b5c4:	490a      	ldr	r1, [pc, #40]	; (800b5f0 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b5c6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b5ca:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b5cc:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b5ce:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b5d0:	f7fd fc14 	bl	8008dfc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b5d4:	4d07      	ldr	r5, [pc, #28]	; (800b5f4 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b5d6:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b5d8:	e005      	b.n	800b5e6 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b5da:	f7fd fc0f 	bl	8008dfc <HAL_GetTick>
 800b5de:	1b00      	subs	r0, r0, r4
 800b5e0:	2802      	cmp	r0, #2
 800b5e2:	f63f af5c 	bhi.w	800b49e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b5e6:	682b      	ldr	r3, [r5, #0]
 800b5e8:	019a      	lsls	r2, r3, #6
 800b5ea:	d5f6      	bpl.n	800b5da <HAL_RCC_OscConfig+0x3aa>
 800b5ec:	e6d5      	b.n	800b39a <HAL_RCC_OscConfig+0x16a>
 800b5ee:	bf00      	nop
 800b5f0:	42470000 	.word	0x42470000
 800b5f4:	40023800 	.word	0x40023800

0800b5f8 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b5f8:	4916      	ldr	r1, [pc, #88]	; (800b654 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b5fa:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b5fc:	688b      	ldr	r3, [r1, #8]
 800b5fe:	f003 030c 	and.w	r3, r3, #12
 800b602:	2b04      	cmp	r3, #4
 800b604:	d01b      	beq.n	800b63e <HAL_RCC_GetSysClockFreq+0x46>
 800b606:	2b08      	cmp	r3, #8
 800b608:	d117      	bne.n	800b63a <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b60a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b60c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b60e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b610:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b614:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b618:	d113      	bne.n	800b642 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b61a:	480f      	ldr	r0, [pc, #60]	; (800b658 <HAL_RCC_GetSysClockFreq+0x60>)
 800b61c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b620:	fba1 0100 	umull	r0, r1, r1, r0
 800b624:	f7f4 fe94 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b628:	4b0a      	ldr	r3, [pc, #40]	; (800b654 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b62a:	685b      	ldr	r3, [r3, #4]
 800b62c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b630:	3301      	adds	r3, #1
 800b632:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b634:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b638:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b63a:	4807      	ldr	r0, [pc, #28]	; (800b658 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b63c:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b63e:	4807      	ldr	r0, [pc, #28]	; (800b65c <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b640:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b642:	4806      	ldr	r0, [pc, #24]	; (800b65c <HAL_RCC_GetSysClockFreq+0x64>)
 800b644:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b648:	2300      	movs	r3, #0
 800b64a:	fba1 0100 	umull	r0, r1, r1, r0
 800b64e:	f7f4 fe7f 	bl	8000350 <__aeabi_uldivmod>
 800b652:	e7e9      	b.n	800b628 <HAL_RCC_GetSysClockFreq+0x30>
 800b654:	40023800 	.word	0x40023800
 800b658:	00f42400 	.word	0x00f42400
 800b65c:	007a1200 	.word	0x007a1200

0800b660 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b660:	2800      	cmp	r0, #0
 800b662:	f000 8087 	beq.w	800b774 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b666:	4a48      	ldr	r2, [pc, #288]	; (800b788 <HAL_RCC_ClockConfig+0x128>)
 800b668:	6813      	ldr	r3, [r2, #0]
 800b66a:	f003 030f 	and.w	r3, r3, #15
 800b66e:	428b      	cmp	r3, r1
{
 800b670:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b674:	460d      	mov	r5, r1
 800b676:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b678:	d209      	bcs.n	800b68e <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b67a:	b2cb      	uxtb	r3, r1
 800b67c:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b67e:	6813      	ldr	r3, [r2, #0]
 800b680:	f003 030f 	and.w	r3, r3, #15
 800b684:	428b      	cmp	r3, r1
 800b686:	d002      	beq.n	800b68e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b688:	2001      	movs	r0, #1
}
 800b68a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b68e:	6823      	ldr	r3, [r4, #0]
 800b690:	0798      	lsls	r0, r3, #30
 800b692:	d514      	bpl.n	800b6be <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b694:	0759      	lsls	r1, r3, #29
 800b696:	d504      	bpl.n	800b6a2 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b698:	493c      	ldr	r1, [pc, #240]	; (800b78c <HAL_RCC_ClockConfig+0x12c>)
 800b69a:	688a      	ldr	r2, [r1, #8]
 800b69c:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b6a0:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b6a2:	071a      	lsls	r2, r3, #28
 800b6a4:	d504      	bpl.n	800b6b0 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b6a6:	4939      	ldr	r1, [pc, #228]	; (800b78c <HAL_RCC_ClockConfig+0x12c>)
 800b6a8:	688a      	ldr	r2, [r1, #8]
 800b6aa:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b6ae:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b6b0:	4936      	ldr	r1, [pc, #216]	; (800b78c <HAL_RCC_ClockConfig+0x12c>)
 800b6b2:	68a0      	ldr	r0, [r4, #8]
 800b6b4:	688a      	ldr	r2, [r1, #8]
 800b6b6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b6ba:	4302      	orrs	r2, r0
 800b6bc:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b6be:	07df      	lsls	r7, r3, #31
 800b6c0:	d521      	bpl.n	800b706 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b6c2:	6862      	ldr	r2, [r4, #4]
 800b6c4:	2a01      	cmp	r2, #1
 800b6c6:	d057      	beq.n	800b778 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b6c8:	1e93      	subs	r3, r2, #2
 800b6ca:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b6cc:	4b2f      	ldr	r3, [pc, #188]	; (800b78c <HAL_RCC_ClockConfig+0x12c>)
 800b6ce:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b6d0:	d94d      	bls.n	800b76e <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b6d2:	0799      	lsls	r1, r3, #30
 800b6d4:	d5d8      	bpl.n	800b688 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b6d6:	4e2d      	ldr	r6, [pc, #180]	; (800b78c <HAL_RCC_ClockConfig+0x12c>)
 800b6d8:	68b3      	ldr	r3, [r6, #8]
 800b6da:	f023 0303 	bic.w	r3, r3, #3
 800b6de:	4313      	orrs	r3, r2
 800b6e0:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b6e2:	f7fd fb8b 	bl	8008dfc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b6e6:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b6ea:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b6ec:	e004      	b.n	800b6f8 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b6ee:	f7fd fb85 	bl	8008dfc <HAL_GetTick>
 800b6f2:	1bc0      	subs	r0, r0, r7
 800b6f4:	4540      	cmp	r0, r8
 800b6f6:	d844      	bhi.n	800b782 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b6f8:	68b3      	ldr	r3, [r6, #8]
 800b6fa:	6862      	ldr	r2, [r4, #4]
 800b6fc:	f003 030c 	and.w	r3, r3, #12
 800b700:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b704:	d1f3      	bne.n	800b6ee <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b706:	4a20      	ldr	r2, [pc, #128]	; (800b788 <HAL_RCC_ClockConfig+0x128>)
 800b708:	6813      	ldr	r3, [r2, #0]
 800b70a:	f003 030f 	and.w	r3, r3, #15
 800b70e:	42ab      	cmp	r3, r5
 800b710:	d906      	bls.n	800b720 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b712:	b2eb      	uxtb	r3, r5
 800b714:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b716:	6813      	ldr	r3, [r2, #0]
 800b718:	f003 030f 	and.w	r3, r3, #15
 800b71c:	42ab      	cmp	r3, r5
 800b71e:	d1b3      	bne.n	800b688 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b720:	6823      	ldr	r3, [r4, #0]
 800b722:	075a      	lsls	r2, r3, #29
 800b724:	d506      	bpl.n	800b734 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b726:	4919      	ldr	r1, [pc, #100]	; (800b78c <HAL_RCC_ClockConfig+0x12c>)
 800b728:	68e0      	ldr	r0, [r4, #12]
 800b72a:	688a      	ldr	r2, [r1, #8]
 800b72c:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b730:	4302      	orrs	r2, r0
 800b732:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b734:	071b      	lsls	r3, r3, #28
 800b736:	d507      	bpl.n	800b748 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b738:	4a14      	ldr	r2, [pc, #80]	; (800b78c <HAL_RCC_ClockConfig+0x12c>)
 800b73a:	6921      	ldr	r1, [r4, #16]
 800b73c:	6893      	ldr	r3, [r2, #8]
 800b73e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b742:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b746:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b748:	f7ff ff56 	bl	800b5f8 <HAL_RCC_GetSysClockFreq>
 800b74c:	4a0f      	ldr	r2, [pc, #60]	; (800b78c <HAL_RCC_ClockConfig+0x12c>)
 800b74e:	4c10      	ldr	r4, [pc, #64]	; (800b790 <HAL_RCC_ClockConfig+0x130>)
 800b750:	6892      	ldr	r2, [r2, #8]
 800b752:	4910      	ldr	r1, [pc, #64]	; (800b794 <HAL_RCC_ClockConfig+0x134>)
 800b754:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b758:	4603      	mov	r3, r0
 800b75a:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b75c:	480e      	ldr	r0, [pc, #56]	; (800b798 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b75e:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b760:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b762:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b764:	f7f6 f97e 	bl	8001a64 <HAL_InitTick>
  return HAL_OK;
 800b768:	2000      	movs	r0, #0
}
 800b76a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b76e:	0198      	lsls	r0, r3, #6
 800b770:	d4b1      	bmi.n	800b6d6 <HAL_RCC_ClockConfig+0x76>
 800b772:	e789      	b.n	800b688 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b774:	2001      	movs	r0, #1
}
 800b776:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b778:	4b04      	ldr	r3, [pc, #16]	; (800b78c <HAL_RCC_ClockConfig+0x12c>)
 800b77a:	681b      	ldr	r3, [r3, #0]
 800b77c:	039e      	lsls	r6, r3, #14
 800b77e:	d4aa      	bmi.n	800b6d6 <HAL_RCC_ClockConfig+0x76>
 800b780:	e782      	b.n	800b688 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b782:	2003      	movs	r0, #3
 800b784:	e781      	b.n	800b68a <HAL_RCC_ClockConfig+0x2a>
 800b786:	bf00      	nop
 800b788:	40023c00 	.word	0x40023c00
 800b78c:	40023800 	.word	0x40023800
 800b790:	0802e560 	.word	0x0802e560
 800b794:	20000094 	.word	0x20000094
 800b798:	2000009c 	.word	0x2000009c

0800b79c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b79c:	4b04      	ldr	r3, [pc, #16]	; (800b7b0 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b79e:	4905      	ldr	r1, [pc, #20]	; (800b7b4 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b7a0:	689b      	ldr	r3, [r3, #8]
 800b7a2:	4a05      	ldr	r2, [pc, #20]	; (800b7b8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b7a4:	6808      	ldr	r0, [r1, #0]
 800b7a6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b7aa:	5cd3      	ldrb	r3, [r2, r3]
}
 800b7ac:	40d8      	lsrs	r0, r3
 800b7ae:	4770      	bx	lr
 800b7b0:	40023800 	.word	0x40023800
 800b7b4:	20000094 	.word	0x20000094
 800b7b8:	0802e570 	.word	0x0802e570

0800b7bc <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b7bc:	4b0e      	ldr	r3, [pc, #56]	; (800b7f8 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b7be:	220f      	movs	r2, #15
 800b7c0:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b7c2:	689a      	ldr	r2, [r3, #8]
 800b7c4:	f002 0203 	and.w	r2, r2, #3
 800b7c8:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b7ca:	689a      	ldr	r2, [r3, #8]
 800b7cc:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b7d0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b7d2:	689a      	ldr	r2, [r3, #8]
 800b7d4:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b7d8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b7da:	689b      	ldr	r3, [r3, #8]
 800b7dc:	08db      	lsrs	r3, r3, #3
{
 800b7de:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b7e0:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b7e4:	4c05      	ldr	r4, [pc, #20]	; (800b7fc <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b7e6:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b7e8:	6823      	ldr	r3, [r4, #0]
}
 800b7ea:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b7ee:	f003 030f 	and.w	r3, r3, #15
 800b7f2:	600b      	str	r3, [r1, #0]
}
 800b7f4:	4770      	bx	lr
 800b7f6:	bf00      	nop
 800b7f8:	40023800 	.word	0x40023800
 800b7fc:	40023c00 	.word	0x40023c00

0800b800 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b800:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b802:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b804:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b808:	b083      	sub	sp, #12
 800b80a:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b80c:	d111      	bne.n	800b832 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b80e:	f013 0f0c 	tst.w	r3, #12
 800b812:	d16f      	bne.n	800b8f4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b814:	0698      	lsls	r0, r3, #26
 800b816:	f100 80c2 	bmi.w	800b99e <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b81a:	f013 0310 	ands.w	r3, r3, #16
 800b81e:	f000 80bb 	beq.w	800b998 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b822:	4b89      	ldr	r3, [pc, #548]	; (800ba48 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b824:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b828:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b82c:	2000      	movs	r0, #0
}
 800b82e:	b003      	add	sp, #12
 800b830:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800b832:	4b86      	ldr	r3, [pc, #536]	; (800ba4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b834:	4e86      	ldr	r6, [pc, #536]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800b836:	2200      	movs	r2, #0
 800b838:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b83a:	f7fd fadf 	bl	8008dfc <HAL_GetTick>
 800b83e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b840:	e004      	b.n	800b84c <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b842:	f7fd fadb 	bl	8008dfc <HAL_GetTick>
 800b846:	1b43      	subs	r3, r0, r5
 800b848:	2b02      	cmp	r3, #2
 800b84a:	d850      	bhi.n	800b8ee <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b84c:	6833      	ldr	r3, [r6, #0]
 800b84e:	0118      	lsls	r0, r3, #4
 800b850:	d4f7      	bmi.n	800b842 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800b852:	6823      	ldr	r3, [r4, #0]
 800b854:	07d9      	lsls	r1, r3, #31
 800b856:	d506      	bpl.n	800b866 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800b858:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800b85c:	0712      	lsls	r2, r2, #28
 800b85e:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800b862:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800b866:	079a      	lsls	r2, r3, #30
 800b868:	d515      	bpl.n	800b896 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b86a:	4979      	ldr	r1, [pc, #484]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b86c:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b86e:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b872:	6865      	ldr	r5, [r4, #4]
 800b874:	0612      	lsls	r2, r2, #24
 800b876:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800b87a:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800b87e:	4302      	orrs	r2, r0
 800b880:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800b884:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800b888:	69e2      	ldr	r2, [r4, #28]
 800b88a:	f020 001f 	bic.w	r0, r0, #31
 800b88e:	3a01      	subs	r2, #1
 800b890:	4302      	orrs	r2, r0
 800b892:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800b896:	065b      	lsls	r3, r3, #25
 800b898:	d509      	bpl.n	800b8ae <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800b89a:	1d20      	adds	r0, r4, #4
 800b89c:	c80b      	ldmia	r0, {r0, r1, r3}
 800b89e:	061b      	lsls	r3, r3, #24
 800b8a0:	4a6b      	ldr	r2, [pc, #428]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b8a2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b8a6:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800b8aa:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800b8ae:	4b67      	ldr	r3, [pc, #412]	; (800ba4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b8b0:	4e67      	ldr	r6, [pc, #412]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800b8b2:	2201      	movs	r2, #1
 800b8b4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b8b6:	f7fd faa1 	bl	8008dfc <HAL_GetTick>
 800b8ba:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b8bc:	e004      	b.n	800b8c8 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b8be:	f7fd fa9d 	bl	8008dfc <HAL_GetTick>
 800b8c2:	1b40      	subs	r0, r0, r5
 800b8c4:	2802      	cmp	r0, #2
 800b8c6:	d812      	bhi.n	800b8ee <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b8c8:	6833      	ldr	r3, [r6, #0]
 800b8ca:	011f      	lsls	r7, r3, #4
 800b8cc:	d5f7      	bpl.n	800b8be <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b8ce:	6823      	ldr	r3, [r4, #0]
 800b8d0:	e79d      	b.n	800b80e <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800b8d2:	f7fd fa93 	bl	8008dfc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b8d6:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800b8da:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b8dc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b8de:	079b      	lsls	r3, r3, #30
 800b8e0:	f100 80a5 	bmi.w	800ba2e <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b8e4:	f7fd fa8a 	bl	8008dfc <HAL_GetTick>
 800b8e8:	1b80      	subs	r0, r0, r6
 800b8ea:	42b8      	cmp	r0, r7
 800b8ec:	d9f6      	bls.n	800b8dc <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800b8ee:	2003      	movs	r0, #3
}
 800b8f0:	b003      	add	sp, #12
 800b8f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800b8f4:	4b55      	ldr	r3, [pc, #340]	; (800ba4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b8f6:	4e56      	ldr	r6, [pc, #344]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800b8f8:	2200      	movs	r2, #0
 800b8fa:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b8fc:	f7fd fa7e 	bl	8008dfc <HAL_GetTick>
 800b900:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b902:	e004      	b.n	800b90e <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b904:	f7fd fa7a 	bl	8008dfc <HAL_GetTick>
 800b908:	1b43      	subs	r3, r0, r5
 800b90a:	2b02      	cmp	r3, #2
 800b90c:	d8ef      	bhi.n	800b8ee <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b90e:	6833      	ldr	r3, [r6, #0]
 800b910:	0098      	lsls	r0, r3, #2
 800b912:	d4f7      	bmi.n	800b904 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800b914:	6822      	ldr	r2, [r4, #0]
 800b916:	0751      	lsls	r1, r2, #29
 800b918:	d515      	bpl.n	800b946 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b91a:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800b91c:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b920:	6920      	ldr	r0, [r4, #16]
 800b922:	061b      	lsls	r3, r3, #24
 800b924:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800b928:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b92c:	430b      	orrs	r3, r1
 800b92e:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800b932:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800b936:	6a21      	ldr	r1, [r4, #32]
 800b938:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800b93c:	3901      	subs	r1, #1
 800b93e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b942:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800b946:	0713      	lsls	r3, r2, #28
 800b948:	d514      	bpl.n	800b974 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b94a:	4a41      	ldr	r2, [pc, #260]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b94c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b94e:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b952:	6920      	ldr	r0, [r4, #16]
 800b954:	071b      	lsls	r3, r3, #28
 800b956:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800b95a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b95e:	430b      	orrs	r3, r1
 800b960:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800b964:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800b968:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b96a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b96e:	430b      	orrs	r3, r1
 800b970:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800b974:	4b35      	ldr	r3, [pc, #212]	; (800ba4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b976:	4e36      	ldr	r6, [pc, #216]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800b978:	2201      	movs	r2, #1
 800b97a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b97c:	f7fd fa3e 	bl	8008dfc <HAL_GetTick>
 800b980:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b982:	e004      	b.n	800b98e <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b984:	f7fd fa3a 	bl	8008dfc <HAL_GetTick>
 800b988:	1b40      	subs	r0, r0, r5
 800b98a:	2802      	cmp	r0, #2
 800b98c:	d8af      	bhi.n	800b8ee <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b98e:	6833      	ldr	r3, [r6, #0]
 800b990:	009f      	lsls	r7, r3, #2
 800b992:	d5f7      	bpl.n	800b984 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b994:	6823      	ldr	r3, [r4, #0]
 800b996:	e73d      	b.n	800b814 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800b998:	4618      	mov	r0, r3
}
 800b99a:	b003      	add	sp, #12
 800b99c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800b99e:	4b2c      	ldr	r3, [pc, #176]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800b9a0:	4d2c      	ldr	r5, [pc, #176]	; (800ba54 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800b9a2:	2200      	movs	r2, #0
 800b9a4:	9201      	str	r2, [sp, #4]
 800b9a6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b9a8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b9ac:	641a      	str	r2, [r3, #64]	; 0x40
 800b9ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b9b0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b9b4:	9301      	str	r3, [sp, #4]
 800b9b6:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800b9b8:	682b      	ldr	r3, [r5, #0]
 800b9ba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b9be:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800b9c0:	f7fd fa1c 	bl	8008dfc <HAL_GetTick>
 800b9c4:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b9c6:	e004      	b.n	800b9d2 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800b9c8:	f7fd fa18 	bl	8008dfc <HAL_GetTick>
 800b9cc:	1b83      	subs	r3, r0, r6
 800b9ce:	2b02      	cmp	r3, #2
 800b9d0:	d88d      	bhi.n	800b8ee <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b9d2:	682b      	ldr	r3, [r5, #0]
 800b9d4:	05d9      	lsls	r1, r3, #23
 800b9d6:	d5f7      	bpl.n	800b9c8 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b9d8:	4d1d      	ldr	r5, [pc, #116]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b9da:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b9dc:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b9de:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800b9e2:	d111      	bne.n	800ba08 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b9e4:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800b9e8:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800b9ec:	d021      	beq.n	800ba32 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800b9ee:	4918      	ldr	r1, [pc, #96]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b9f0:	688a      	ldr	r2, [r1, #8]
 800b9f2:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b9f6:	608a      	str	r2, [r1, #8]
 800b9f8:	4a15      	ldr	r2, [pc, #84]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b9fa:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800b9fc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ba00:	430b      	orrs	r3, r1
 800ba02:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800ba04:	6823      	ldr	r3, [r4, #0]
 800ba06:	e708      	b.n	800b81a <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800ba08:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800ba0c:	4291      	cmp	r1, r2
 800ba0e:	d0eb      	beq.n	800b9e8 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800ba10:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800ba12:	4a0e      	ldr	r2, [pc, #56]	; (800ba4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800ba14:	2101      	movs	r1, #1
 800ba16:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800ba1a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800ba1e:	2100      	movs	r1, #0
 800ba20:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800ba24:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800ba26:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800ba28:	07da      	lsls	r2, r3, #31
 800ba2a:	f53f af52 	bmi.w	800b8d2 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800ba2e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ba30:	e7d8      	b.n	800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800ba32:	4807      	ldr	r0, [pc, #28]	; (800ba50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800ba34:	6882      	ldr	r2, [r0, #8]
 800ba36:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800ba3a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800ba3e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800ba42:	430a      	orrs	r2, r1
 800ba44:	6082      	str	r2, [r0, #8]
 800ba46:	e7d7      	b.n	800b9f8 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800ba48:	42471000 	.word	0x42471000
 800ba4c:	42470000 	.word	0x42470000
 800ba50:	40023800 	.word	0x40023800
 800ba54:	40007000 	.word	0x40007000

0800ba58 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800ba58:	b1f0      	cbz	r0, 800ba98 <HAL_SDRAM_Init+0x40>
{
 800ba5a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800ba5c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ba60:	460d      	mov	r5, r1
 800ba62:	4604      	mov	r4, r0
 800ba64:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ba68:	b18b      	cbz	r3, 800ba8e <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800ba6a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ba6c:	2302      	movs	r3, #2
 800ba6e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800ba72:	f851 0b04 	ldr.w	r0, [r1], #4
 800ba76:	f000 ffcd 	bl	800ca14 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800ba7a:	e9d4 0200 	ldrd	r0, r2, [r4]
 800ba7e:	4629      	mov	r1, r5
 800ba80:	f001 f806 	bl	800ca90 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800ba84:	2301      	movs	r3, #1
 800ba86:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800ba8a:	2000      	movs	r0, #0
}
 800ba8c:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800ba8e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800ba92:	f7f5 ff7f 	bl	8001994 <HAL_SDRAM_MspInit>
 800ba96:	e7e8      	b.n	800ba6a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800ba98:	2001      	movs	r0, #1
}
 800ba9a:	4770      	bx	lr

0800ba9c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800ba9c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800ba9e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800baa2:	2b02      	cmp	r3, #2
{
 800baa4:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800baa6:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800baa8:	d004      	beq.n	800bab4 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800baaa:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800baae:	2c01      	cmp	r4, #1
 800bab0:	d001      	beq.n	800bab6 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800bab2:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bab4:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bab6:	460e      	mov	r6, r1
 800bab8:	2302      	movs	r3, #2
 800baba:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800babe:	6828      	ldr	r0, [r5, #0]
 800bac0:	f001 f832 	bl	800cb28 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800bac4:	6833      	ldr	r3, [r6, #0]
 800bac6:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800bac8:	bf06      	itte	eq
 800baca:	2305      	moveq	r3, #5
 800bacc:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800bad0:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800bad4:	2000      	movs	r0, #0
}
 800bad6:	bd70      	pop	{r4, r5, r6, pc}

0800bad8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800bad8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bada:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bade:	2b02      	cmp	r3, #2
{
 800bae0:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bae2:	b2d8      	uxtb	r0, r3
 800bae4:	d005      	beq.n	800baf2 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800bae6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800baea:	2b01      	cmp	r3, #1
 800baec:	b2dd      	uxtb	r5, r3
 800baee:	d001      	beq.n	800baf4 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800baf0:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800baf2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800baf4:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800baf6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800baf8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bafc:	f001 f83e 	bl	800cb7c <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800bb00:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800bb04:	2000      	movs	r0, #0
}
 800bb06:	bd38      	pop	{r3, r4, r5, pc}

0800bb08 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800bb08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb0c:	b082      	sub	sp, #8
 800bb0e:	461d      	mov	r5, r3
 800bb10:	4616      	mov	r6, r2
 800bb12:	460c      	mov	r4, r1
 800bb14:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800bb16:	f7fd f971 	bl	8008dfc <HAL_GetTick>
 800bb1a:	4435      	add	r5, r6
 800bb1c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800bb1e:	f7fd f96d 	bl	8008dfc <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bb22:	4b27      	ldr	r3, [pc, #156]	; (800bbc0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800bb24:	681b      	ldr	r3, [r3, #0]
 800bb26:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800bb2a:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800bb2e:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bb30:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bb32:	1c73      	adds	r3, r6, #1
 800bb34:	6839      	ldr	r1, [r7, #0]
 800bb36:	d107      	bne.n	800bb48 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800bb38:	688b      	ldr	r3, [r1, #8]
 800bb3a:	ea34 0303 	bics.w	r3, r4, r3
 800bb3e:	d0fb      	beq.n	800bb38 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800bb40:	2000      	movs	r0, #0
}
 800bb42:	b002      	add	sp, #8
 800bb44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bb48:	688b      	ldr	r3, [r1, #8]
 800bb4a:	ea34 0303 	bics.w	r3, r4, r3
 800bb4e:	d1f7      	bne.n	800bb40 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800bb50:	f7fd f954 	bl	8008dfc <HAL_GetTick>
 800bb54:	eba0 0008 	sub.w	r0, r0, r8
 800bb58:	42a8      	cmp	r0, r5
 800bb5a:	d208      	bcs.n	800bb6e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800bb5c:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800bb5e:	2b00      	cmp	r3, #0
      count--;
 800bb60:	9b01      	ldr	r3, [sp, #4]
 800bb62:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800bb66:	bf08      	it	eq
 800bb68:	2500      	moveq	r5, #0
      count--;
 800bb6a:	9301      	str	r3, [sp, #4]
 800bb6c:	e7e1      	b.n	800bb32 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb6e:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bb72:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb74:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bb78:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800bb7c:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb7e:	d013      	beq.n	800bba8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800bb80:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800bb82:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800bb86:	d107      	bne.n	800bb98 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800bb88:	681a      	ldr	r2, [r3, #0]
 800bb8a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800bb8e:	601a      	str	r2, [r3, #0]
 800bb90:	681a      	ldr	r2, [r3, #0]
 800bb92:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bb96:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800bb98:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800bb9a:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800bb9c:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800bba0:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800bba4:	2003      	movs	r0, #3
 800bba6:	e7cc      	b.n	800bb42 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bba8:	68ba      	ldr	r2, [r7, #8]
 800bbaa:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bbae:	d002      	beq.n	800bbb6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bbb0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bbb4:	d1e4      	bne.n	800bb80 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800bbb6:	681a      	ldr	r2, [r3, #0]
 800bbb8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bbbc:	601a      	str	r2, [r3, #0]
 800bbbe:	e7df      	b.n	800bb80 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800bbc0:	20000094 	.word	0x20000094

0800bbc4 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800bbc4:	b538      	push	{r3, r4, r5, lr}
 800bbc6:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbc8:	6842      	ldr	r2, [r0, #4]
 800bbca:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800bbce:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbd0:	d006      	beq.n	800bbe0 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bbd2:	460a      	mov	r2, r1
 800bbd4:	2101      	movs	r1, #1
 800bbd6:	f7ff ff97 	bl	800bb08 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bbda:	b978      	cbnz	r0, 800bbfc <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800bbdc:	2000      	movs	r0, #0
}
 800bbde:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbe0:	6882      	ldr	r2, [r0, #8]
 800bbe2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bbe6:	d01c      	beq.n	800bc22 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bbe8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bbec:	d00c      	beq.n	800bc08 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bbee:	460a      	mov	r2, r1
 800bbf0:	4620      	mov	r0, r4
 800bbf2:	2180      	movs	r1, #128	; 0x80
 800bbf4:	f7ff ff88 	bl	800bb08 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bbf8:	2800      	cmp	r0, #0
 800bbfa:	d0ef      	beq.n	800bbdc <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bbfc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800bbfe:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800bc02:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bc04:	6563      	str	r3, [r4, #84]	; 0x54
}
 800bc06:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800bc08:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bc0a:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800bc0c:	6829      	ldr	r1, [r5, #0]
 800bc0e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bc12:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bc14:	2101      	movs	r1, #1
 800bc16:	f7ff ff77 	bl	800bb08 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bc1a:	2800      	cmp	r0, #0
 800bc1c:	d1ee      	bne.n	800bbfc <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800bc1e:	2000      	movs	r0, #0
 800bc20:	e7dd      	b.n	800bbde <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800bc22:	6800      	ldr	r0, [r0, #0]
 800bc24:	6802      	ldr	r2, [r0, #0]
 800bc26:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bc2a:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bc2c:	460a      	mov	r2, r1
 800bc2e:	4620      	mov	r0, r4
 800bc30:	2180      	movs	r1, #128	; 0x80
 800bc32:	f7ff ff69 	bl	800bb08 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bc36:	2800      	cmp	r0, #0
 800bc38:	d0d0      	beq.n	800bbdc <SPI_EndRxTransaction+0x18>
 800bc3a:	e7df      	b.n	800bbfc <SPI_EndRxTransaction+0x38>

0800bc3c <HAL_SPI_Init>:
  if (hspi == NULL)
 800bc3c:	2800      	cmp	r0, #0
 800bc3e:	d05c      	beq.n	800bcfa <HAL_SPI_Init+0xbe>
{
 800bc40:	b570      	push	{r4, r5, r6, lr}
 800bc42:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800bc44:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800bc46:	2800      	cmp	r0, #0
 800bc48:	d047      	beq.n	800bcda <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800bc4a:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800bc4c:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bc50:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800bc54:	2200      	movs	r2, #0
 800bc56:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bc58:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800bc5c:	2b00      	cmp	r3, #0
 800bc5e:	d042      	beq.n	800bce6 <HAL_SPI_Init+0xaa>
 800bc60:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800bc62:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc64:	68a5      	ldr	r5, [r4, #8]
 800bc66:	69a2      	ldr	r2, [r4, #24]
 800bc68:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800bc6a:	2302      	movs	r3, #2
 800bc6c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800bc70:	680b      	ldr	r3, [r1, #0]
 800bc72:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bc76:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc78:	6863      	ldr	r3, [r4, #4]
 800bc7a:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800bc7e:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800bc82:	432b      	orrs	r3, r5
 800bc84:	68e5      	ldr	r5, [r4, #12]
 800bc86:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800bc8a:	432b      	orrs	r3, r5
 800bc8c:	6925      	ldr	r5, [r4, #16]
 800bc8e:	f005 0502 	and.w	r5, r5, #2
 800bc92:	432b      	orrs	r3, r5
 800bc94:	6965      	ldr	r5, [r4, #20]
 800bc96:	f005 0501 	and.w	r5, r5, #1
 800bc9a:	432b      	orrs	r3, r5
 800bc9c:	69e5      	ldr	r5, [r4, #28]
 800bc9e:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800bca2:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800bca6:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800bcaa:	4333      	orrs	r3, r6
 800bcac:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bcae:	0c12      	lsrs	r2, r2, #16
 800bcb0:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bcb4:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bcb8:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bcbc:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bcc0:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bcc2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bcc4:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bcc6:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bcc8:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bcca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bcce:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bcd0:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bcd2:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bcd4:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800bcd8:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bcda:	6863      	ldr	r3, [r4, #4]
 800bcdc:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bce0:	d0b6      	beq.n	800bc50 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800bce2:	61e0      	str	r0, [r4, #28]
 800bce4:	e7b4      	b.n	800bc50 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800bce6:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bce8:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bcec:	f7f5 fdcc 	bl	8001888 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bcf0:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bcf4:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800bcf8:	e7b3      	b.n	800bc62 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800bcfa:	2001      	movs	r0, #1
}
 800bcfc:	4770      	bx	lr
 800bcfe:	bf00      	nop

0800bd00 <HAL_SPI_Transmit>:
{
 800bd00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd04:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bd06:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bd0a:	2801      	cmp	r0, #1
{
 800bd0c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bd0e:	f000 8085 	beq.w	800be1c <HAL_SPI_Transmit+0x11c>
 800bd12:	461d      	mov	r5, r3
 800bd14:	2301      	movs	r3, #1
 800bd16:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bd1a:	4688      	mov	r8, r1
 800bd1c:	4617      	mov	r7, r2
 800bd1e:	f7fd f86d 	bl	8008dfc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bd22:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800bd26:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800bd28:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bd2a:	b2d8      	uxtb	r0, r3
 800bd2c:	d009      	beq.n	800bd42 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800bd2e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bd30:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bd32:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bd34:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bd38:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bd3c:	b002      	add	sp, #8
 800bd3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bd42:	f1b8 0f00 	cmp.w	r8, #0
 800bd46:	d0f3      	beq.n	800bd30 <HAL_SPI_Transmit+0x30>
 800bd48:	2f00      	cmp	r7, #0
 800bd4a:	d0f1      	beq.n	800bd30 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd4c:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bd4e:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bd50:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bd54:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bd56:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd58:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bd5c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bd60:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bd64:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bd66:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bd68:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bd6a:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bd6c:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bd6e:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd70:	f000 8085 	beq.w	800be7e <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bd74:	6803      	ldr	r3, [r0, #0]
 800bd76:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bd78:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bd7a:	d403      	bmi.n	800bd84 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bd7c:	6803      	ldr	r3, [r0, #0]
 800bd7e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bd82:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bd84:	68e3      	ldr	r3, [r4, #12]
 800bd86:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bd8a:	d04b      	beq.n	800be24 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bd8c:	6863      	ldr	r3, [r4, #4]
 800bd8e:	2b00      	cmp	r3, #0
 800bd90:	f000 8097 	beq.w	800bec2 <HAL_SPI_Transmit+0x1c2>
 800bd94:	2f01      	cmp	r7, #1
 800bd96:	f000 8094 	beq.w	800bec2 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800bd9a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd9c:	b29b      	uxth	r3, r3
 800bd9e:	b1ab      	cbz	r3, 800bdcc <HAL_SPI_Transmit+0xcc>
 800bda0:	1c68      	adds	r0, r5, #1
 800bda2:	f040 8083 	bne.w	800beac <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bda6:	6823      	ldr	r3, [r4, #0]
 800bda8:	689a      	ldr	r2, [r3, #8]
 800bdaa:	0791      	lsls	r1, r2, #30
 800bdac:	f140 8094 	bpl.w	800bed8 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bdb0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bdb2:	7812      	ldrb	r2, [r2, #0]
 800bdb4:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bdb6:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bdb8:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bdba:	3901      	subs	r1, #1
 800bdbc:	b289      	uxth	r1, r1
 800bdbe:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bdc0:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bdc2:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800bdc4:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bdc6:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800bdc8:	2900      	cmp	r1, #0
 800bdca:	d1ec      	bne.n	800bda6 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bdcc:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bdce:	4b5b      	ldr	r3, [pc, #364]	; (800bf3c <HAL_SPI_Transmit+0x23c>)
 800bdd0:	4a5b      	ldr	r2, [pc, #364]	; (800bf40 <HAL_SPI_Transmit+0x240>)
 800bdd2:	681b      	ldr	r3, [r3, #0]
 800bdd4:	fba2 2303 	umull	r2, r3, r2, r3
 800bdd8:	0d5b      	lsrs	r3, r3, #21
 800bdda:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800bdde:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bde2:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bde6:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bde8:	d107      	bne.n	800bdfa <HAL_SPI_Transmit+0xfa>
 800bdea:	e098      	b.n	800bf1e <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800bdec:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bdee:	6822      	ldr	r2, [r4, #0]
      count--;
 800bdf0:	3b01      	subs	r3, #1
 800bdf2:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bdf4:	6893      	ldr	r3, [r2, #8]
 800bdf6:	061b      	lsls	r3, r3, #24
 800bdf8:	d502      	bpl.n	800be00 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800bdfa:	9b01      	ldr	r3, [sp, #4]
 800bdfc:	2b00      	cmp	r3, #0
 800bdfe:	d1f5      	bne.n	800bdec <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800be00:	68a3      	ldr	r3, [r4, #8]
 800be02:	b933      	cbnz	r3, 800be12 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800be04:	6822      	ldr	r2, [r4, #0]
 800be06:	9300      	str	r3, [sp, #0]
 800be08:	68d3      	ldr	r3, [r2, #12]
 800be0a:	9300      	str	r3, [sp, #0]
 800be0c:	6893      	ldr	r3, [r2, #8]
 800be0e:	9300      	str	r3, [sp, #0]
 800be10:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800be12:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800be14:	3800      	subs	r0, #0
 800be16:	bf18      	it	ne
 800be18:	2001      	movne	r0, #1
error:
 800be1a:	e789      	b.n	800bd30 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800be1c:	2002      	movs	r0, #2
}
 800be1e:	b002      	add	sp, #8
 800be20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800be24:	6861      	ldr	r1, [r4, #4]
 800be26:	2900      	cmp	r1, #0
 800be28:	d176      	bne.n	800bf18 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800be2a:	4643      	mov	r3, r8
 800be2c:	f833 7b02 	ldrh.w	r7, [r3], #2
 800be30:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800be32:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800be34:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be36:	3b01      	subs	r3, #1
 800be38:	b29b      	uxth	r3, r3
 800be3a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800be3c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be3e:	b29b      	uxth	r3, r3
 800be40:	2b00      	cmp	r3, #0
 800be42:	d0c4      	beq.n	800bdce <HAL_SPI_Transmit+0xce>
 800be44:	1c6b      	adds	r3, r5, #1
 800be46:	d15e      	bne.n	800bf06 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800be48:	6883      	ldr	r3, [r0, #8]
 800be4a:	079f      	lsls	r7, r3, #30
 800be4c:	d50f      	bpl.n	800be6e <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800be4e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800be50:	f832 3b02 	ldrh.w	r3, [r2], #2
 800be54:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800be56:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800be58:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800be5a:	3b01      	subs	r3, #1
 800be5c:	b29b      	uxth	r3, r3
 800be5e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800be60:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be62:	b29b      	uxth	r3, r3
 800be64:	2b00      	cmp	r3, #0
 800be66:	d0b1      	beq.n	800bdcc <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800be68:	6883      	ldr	r3, [r0, #8]
 800be6a:	079f      	lsls	r7, r3, #30
 800be6c:	d4ef      	bmi.n	800be4e <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800be6e:	f7fc ffc5 	bl	8008dfc <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800be72:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be74:	b29b      	uxth	r3, r3
 800be76:	2b00      	cmp	r3, #0
 800be78:	d0a8      	beq.n	800bdcc <HAL_SPI_Transmit+0xcc>
 800be7a:	6820      	ldr	r0, [r4, #0]
 800be7c:	e7e4      	b.n	800be48 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800be7e:	6803      	ldr	r3, [r0, #0]
 800be80:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800be84:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800be86:	6803      	ldr	r3, [r0, #0]
 800be88:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800be8c:	6003      	str	r3, [r0, #0]
 800be8e:	e771      	b.n	800bd74 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800be90:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800be92:	7812      	ldrb	r2, [r2, #0]
 800be94:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800be96:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800be98:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800be9a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800be9c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800be9e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bea0:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bea2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bea4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bea6:	b29b      	uxth	r3, r3
 800bea8:	2b00      	cmp	r3, #0
 800beaa:	d08f      	beq.n	800bdcc <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800beac:	6823      	ldr	r3, [r4, #0]
 800beae:	689a      	ldr	r2, [r3, #8]
 800beb0:	0792      	lsls	r2, r2, #30
 800beb2:	d4ed      	bmi.n	800be90 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800beb4:	f7fc ffa2 	bl	8008dfc <HAL_GetTick>
 800beb8:	1b80      	subs	r0, r0, r6
 800beba:	42a8      	cmp	r0, r5
 800bebc:	d3f2      	bcc.n	800bea4 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800bebe:	2003      	movs	r0, #3
 800bec0:	e736      	b.n	800bd30 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bec2:	f898 3000 	ldrb.w	r3, [r8]
 800bec6:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800bec8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800beca:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800becc:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bece:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bed0:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bed2:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bed4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bed6:	e760      	b.n	800bd9a <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bed8:	f7fc ff90 	bl	8008dfc <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bedc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bede:	b29b      	uxth	r3, r3
 800bee0:	2b00      	cmp	r3, #0
 800bee2:	f47f af60 	bne.w	800bda6 <HAL_SPI_Transmit+0xa6>
 800bee6:	e771      	b.n	800bdcc <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bee8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800beea:	f831 3b02 	ldrh.w	r3, [r1], #2
 800beee:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800bef0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bef2:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bef4:	3b01      	subs	r3, #1
 800bef6:	b29b      	uxth	r3, r3
 800bef8:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800befa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800befc:	b29b      	uxth	r3, r3
 800befe:	2b00      	cmp	r3, #0
 800bf00:	f43f af64 	beq.w	800bdcc <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bf04:	6822      	ldr	r2, [r4, #0]
 800bf06:	6893      	ldr	r3, [r2, #8]
 800bf08:	0799      	lsls	r1, r3, #30
 800bf0a:	d4ed      	bmi.n	800bee8 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bf0c:	f7fc ff76 	bl	8008dfc <HAL_GetTick>
 800bf10:	1b80      	subs	r0, r0, r6
 800bf12:	42a8      	cmp	r0, r5
 800bf14:	d3f1      	bcc.n	800befa <HAL_SPI_Transmit+0x1fa>
 800bf16:	e7d2      	b.n	800bebe <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bf18:	2f01      	cmp	r7, #1
 800bf1a:	d18f      	bne.n	800be3c <HAL_SPI_Transmit+0x13c>
 800bf1c:	e785      	b.n	800be2a <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bf1e:	4633      	mov	r3, r6
 800bf20:	462a      	mov	r2, r5
 800bf22:	2180      	movs	r1, #128	; 0x80
 800bf24:	4620      	mov	r0, r4
 800bf26:	f7ff fdef 	bl	800bb08 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bf2a:	2800      	cmp	r0, #0
 800bf2c:	f43f af68 	beq.w	800be00 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bf30:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bf32:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bf34:	4313      	orrs	r3, r2
 800bf36:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bf38:	6562      	str	r2, [r4, #84]	; 0x54
 800bf3a:	e761      	b.n	800be00 <HAL_SPI_Transmit+0x100>
 800bf3c:	20000094 	.word	0x20000094
 800bf40:	165e9f81 	.word	0x165e9f81

0800bf44 <HAL_SPI_TransmitReceive>:
{
 800bf44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf48:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bf4a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bf4e:	2801      	cmp	r0, #1
{
 800bf50:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bf52:	f000 80ac 	beq.w	800c0ae <HAL_SPI_TransmitReceive+0x16a>
 800bf56:	461e      	mov	r6, r3
 800bf58:	2301      	movs	r3, #1
 800bf5a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bf5e:	4690      	mov	r8, r2
 800bf60:	460f      	mov	r7, r1
 800bf62:	f7fc ff4b 	bl	8008dfc <HAL_GetTick>
 800bf66:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800bf68:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800bf6c:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bf6e:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800bf70:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bf72:	d011      	beq.n	800bf98 <HAL_SPI_TransmitReceive+0x54>
 800bf74:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bf78:	d009      	beq.n	800bf8e <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800bf7a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bf7c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bf7e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bf80:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bf84:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bf88:	b002      	add	sp, #8
 800bf8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800bf8e:	68a1      	ldr	r1, [r4, #8]
 800bf90:	2900      	cmp	r1, #0
 800bf92:	d1f2      	bne.n	800bf7a <HAL_SPI_TransmitReceive+0x36>
 800bf94:	2a04      	cmp	r2, #4
 800bf96:	d1f0      	bne.n	800bf7a <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800bf98:	2f00      	cmp	r7, #0
 800bf9a:	f000 808c 	beq.w	800c0b6 <HAL_SPI_TransmitReceive+0x172>
 800bf9e:	f1b8 0f00 	cmp.w	r8, #0
 800bfa2:	f000 8088 	beq.w	800c0b6 <HAL_SPI_TransmitReceive+0x172>
 800bfa6:	2e00      	cmp	r6, #0
 800bfa8:	f000 8085 	beq.w	800c0b6 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bfac:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800bfb0:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bfb4:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800bfb6:	bf1c      	itt	ne
 800bfb8:	2205      	movne	r2, #5
 800bfba:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bfbe:	2200      	movs	r2, #0
 800bfc0:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800bfc2:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bfc6:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800bfc8:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800bfca:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bfcc:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800bfce:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bfd0:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800bfd2:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800bfd4:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bfd6:	d403      	bmi.n	800bfe0 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800bfd8:	6811      	ldr	r1, [r2, #0]
 800bfda:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800bfde:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bfe0:	68e1      	ldr	r1, [r4, #12]
 800bfe2:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800bfe6:	f000 809e 	beq.w	800c126 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bfea:	2b00      	cmp	r3, #0
 800bfec:	f000 8091 	beq.w	800c112 <HAL_SPI_TransmitReceive+0x1ce>
 800bff0:	2e01      	cmp	r6, #1
 800bff2:	f000 808e 	beq.w	800c112 <HAL_SPI_TransmitReceive+0x1ce>
 800bff6:	9b08      	ldr	r3, [sp, #32]
 800bff8:	3301      	adds	r3, #1
        txallowed = 1U;
 800bffa:	f04f 0601 	mov.w	r6, #1
 800bffe:	d028      	beq.n	800c052 <HAL_SPI_TransmitReceive+0x10e>
 800c000:	e05b      	b.n	800c0ba <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c002:	6821      	ldr	r1, [r4, #0]
 800c004:	688b      	ldr	r3, [r1, #8]
 800c006:	0798      	lsls	r0, r3, #30
 800c008:	d50f      	bpl.n	800c02a <HAL_SPI_TransmitReceive+0xe6>
 800c00a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c00c:	b29b      	uxth	r3, r3
 800c00e:	b163      	cbz	r3, 800c02a <HAL_SPI_TransmitReceive+0xe6>
 800c010:	b15e      	cbz	r6, 800c02a <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c012:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c014:	781b      	ldrb	r3, [r3, #0]
 800c016:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800c018:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c01a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c01c:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800c01e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c020:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c022:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800c024:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c026:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c028:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c02a:	688a      	ldr	r2, [r1, #8]
 800c02c:	f012 0201 	ands.w	r2, r2, #1
 800c030:	d00d      	beq.n	800c04e <HAL_SPI_TransmitReceive+0x10a>
 800c032:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c034:	b29b      	uxth	r3, r3
 800c036:	b153      	cbz	r3, 800c04e <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c038:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c03a:	68c9      	ldr	r1, [r1, #12]
 800c03c:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800c03e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c040:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c042:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800c044:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c046:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800c048:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c04a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c04c:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c04e:	f7fc fed5 	bl	8008dfc <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c052:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c054:	b292      	uxth	r2, r2
 800c056:	2a00      	cmp	r2, #0
 800c058:	d1d3      	bne.n	800c002 <HAL_SPI_TransmitReceive+0xbe>
 800c05a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c05c:	b29b      	uxth	r3, r3
 800c05e:	2b00      	cmp	r3, #0
 800c060:	d1cf      	bne.n	800c002 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c062:	4b79      	ldr	r3, [pc, #484]	; (800c248 <HAL_SPI_TransmitReceive+0x304>)
 800c064:	4a79      	ldr	r2, [pc, #484]	; (800c24c <HAL_SPI_TransmitReceive+0x308>)
 800c066:	681b      	ldr	r3, [r3, #0]
 800c068:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c06c:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c06e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c072:	0d5b      	lsrs	r3, r3, #21
 800c074:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c078:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c07c:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c07e:	d107      	bne.n	800c090 <HAL_SPI_TransmitReceive+0x14c>
 800c080:	e0d2      	b.n	800c228 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800c082:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c084:	6822      	ldr	r2, [r4, #0]
      count--;
 800c086:	3b01      	subs	r3, #1
 800c088:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c08a:	6893      	ldr	r3, [r2, #8]
 800c08c:	061b      	lsls	r3, r3, #24
 800c08e:	d502      	bpl.n	800c096 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800c090:	9b01      	ldr	r3, [sp, #4]
 800c092:	2b00      	cmp	r3, #0
 800c094:	d1f5      	bne.n	800c082 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c096:	68a0      	ldr	r0, [r4, #8]
 800c098:	2800      	cmp	r0, #0
 800c09a:	f040 8082 	bne.w	800c1a2 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c09e:	6823      	ldr	r3, [r4, #0]
 800c0a0:	9000      	str	r0, [sp, #0]
 800c0a2:	68da      	ldr	r2, [r3, #12]
 800c0a4:	9200      	str	r2, [sp, #0]
 800c0a6:	689b      	ldr	r3, [r3, #8]
 800c0a8:	9300      	str	r3, [sp, #0]
 800c0aa:	9b00      	ldr	r3, [sp, #0]
 800c0ac:	e766      	b.n	800bf7c <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c0ae:	2002      	movs	r0, #2
}
 800c0b0:	b002      	add	sp, #8
 800c0b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c0b6:	2001      	movs	r0, #1
 800c0b8:	e760      	b.n	800bf7c <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c0ba:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0bc:	b29b      	uxth	r3, r3
 800c0be:	b91b      	cbnz	r3, 800c0c8 <HAL_SPI_TransmitReceive+0x184>
 800c0c0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c0c2:	b29b      	uxth	r3, r3
 800c0c4:	2b00      	cmp	r3, #0
 800c0c6:	d0cc      	beq.n	800c062 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c0c8:	6822      	ldr	r2, [r4, #0]
 800c0ca:	6893      	ldr	r3, [r2, #8]
 800c0cc:	0799      	lsls	r1, r3, #30
 800c0ce:	d50f      	bpl.n	800c0f0 <HAL_SPI_TransmitReceive+0x1ac>
 800c0d0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0d2:	b29b      	uxth	r3, r3
 800c0d4:	b163      	cbz	r3, 800c0f0 <HAL_SPI_TransmitReceive+0x1ac>
 800c0d6:	b15e      	cbz	r6, 800c0f0 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c0d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c0da:	781b      	ldrb	r3, [r3, #0]
 800c0dc:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c0de:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c0e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c0e2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c0e4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c0e6:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c0e8:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c0ea:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c0ec:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c0ee:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c0f0:	6893      	ldr	r3, [r2, #8]
 800c0f2:	f013 0301 	ands.w	r3, r3, #1
 800c0f6:	d004      	beq.n	800c102 <HAL_SPI_TransmitReceive+0x1be>
 800c0f8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c0fa:	b289      	uxth	r1, r1
 800c0fc:	2900      	cmp	r1, #0
 800c0fe:	f040 8087 	bne.w	800c210 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c102:	f7fc fe7b 	bl	8008dfc <HAL_GetTick>
 800c106:	9b08      	ldr	r3, [sp, #32]
 800c108:	1b40      	subs	r0, r0, r5
 800c10a:	4298      	cmp	r0, r3
 800c10c:	d3d5      	bcc.n	800c0ba <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c10e:	2003      	movs	r0, #3
 800c110:	e734      	b.n	800bf7c <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c112:	783b      	ldrb	r3, [r7, #0]
 800c114:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c116:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c118:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c11a:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c11c:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c11e:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c120:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c122:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c124:	e767      	b.n	800bff6 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c126:	2b00      	cmp	r3, #0
 800c128:	d13d      	bne.n	800c1a6 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c12a:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c12e:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c130:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c132:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c134:	3b01      	subs	r3, #1
 800c136:	b29b      	uxth	r3, r3
 800c138:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c13a:	9b08      	ldr	r3, [sp, #32]
 800c13c:	3301      	adds	r3, #1
{
 800c13e:	f04f 0601 	mov.w	r6, #1
 800c142:	d025      	beq.n	800c190 <HAL_SPI_TransmitReceive+0x24c>
 800c144:	e032      	b.n	800c1ac <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c146:	6823      	ldr	r3, [r4, #0]
 800c148:	689a      	ldr	r2, [r3, #8]
 800c14a:	0792      	lsls	r2, r2, #30
 800c14c:	d50d      	bpl.n	800c16a <HAL_SPI_TransmitReceive+0x226>
 800c14e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c150:	b292      	uxth	r2, r2
 800c152:	b152      	cbz	r2, 800c16a <HAL_SPI_TransmitReceive+0x226>
 800c154:	b14e      	cbz	r6, 800c16a <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c156:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c158:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c15c:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c15e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c160:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c162:	3a01      	subs	r2, #1
 800c164:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c166:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c168:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c16a:	689a      	ldr	r2, [r3, #8]
 800c16c:	f012 0201 	ands.w	r2, r2, #1
 800c170:	d00c      	beq.n	800c18c <HAL_SPI_TransmitReceive+0x248>
 800c172:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c174:	b289      	uxth	r1, r1
 800c176:	b149      	cbz	r1, 800c18c <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c178:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c17a:	68db      	ldr	r3, [r3, #12]
 800c17c:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c180:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c182:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c184:	3b01      	subs	r3, #1
 800c186:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c188:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c18a:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c18c:	f7fc fe36 	bl	8008dfc <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c190:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c192:	b29b      	uxth	r3, r3
 800c194:	2b00      	cmp	r3, #0
 800c196:	d1d6      	bne.n	800c146 <HAL_SPI_TransmitReceive+0x202>
 800c198:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c19a:	b29b      	uxth	r3, r3
 800c19c:	2b00      	cmp	r3, #0
 800c19e:	d1d2      	bne.n	800c146 <HAL_SPI_TransmitReceive+0x202>
 800c1a0:	e75f      	b.n	800c062 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c1a2:	2000      	movs	r0, #0
 800c1a4:	e6ea      	b.n	800bf7c <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c1a6:	2e01      	cmp	r6, #1
 800c1a8:	d1c7      	bne.n	800c13a <HAL_SPI_TransmitReceive+0x1f6>
 800c1aa:	e7be      	b.n	800c12a <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c1ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c1ae:	b29b      	uxth	r3, r3
 800c1b0:	b923      	cbnz	r3, 800c1bc <HAL_SPI_TransmitReceive+0x278>
 800c1b2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c1b4:	b29b      	uxth	r3, r3
 800c1b6:	2b00      	cmp	r3, #0
 800c1b8:	f43f af53 	beq.w	800c062 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c1bc:	6822      	ldr	r2, [r4, #0]
 800c1be:	6893      	ldr	r3, [r2, #8]
 800c1c0:	079f      	lsls	r7, r3, #30
 800c1c2:	d50d      	bpl.n	800c1e0 <HAL_SPI_TransmitReceive+0x29c>
 800c1c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c1c6:	b29b      	uxth	r3, r3
 800c1c8:	b153      	cbz	r3, 800c1e0 <HAL_SPI_TransmitReceive+0x29c>
 800c1ca:	b14e      	cbz	r6, 800c1e0 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c1cc:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c1ce:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c1d2:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c1d4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c1d6:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c1d8:	3b01      	subs	r3, #1
 800c1da:	b29b      	uxth	r3, r3
 800c1dc:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c1de:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c1e0:	6893      	ldr	r3, [r2, #8]
 800c1e2:	f013 0301 	ands.w	r3, r3, #1
 800c1e6:	d00c      	beq.n	800c202 <HAL_SPI_TransmitReceive+0x2be>
 800c1e8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c1ea:	b289      	uxth	r1, r1
 800c1ec:	b149      	cbz	r1, 800c202 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c1ee:	68d1      	ldr	r1, [r2, #12]
 800c1f0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c1f2:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c1f6:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c1f8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c1fa:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1fc:	3b01      	subs	r3, #1
 800c1fe:	b29b      	uxth	r3, r3
 800c200:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c202:	f7fc fdfb 	bl	8008dfc <HAL_GetTick>
 800c206:	9b08      	ldr	r3, [sp, #32]
 800c208:	1b40      	subs	r0, r0, r5
 800c20a:	4298      	cmp	r0, r3
 800c20c:	d3ce      	bcc.n	800c1ac <HAL_SPI_TransmitReceive+0x268>
 800c20e:	e77e      	b.n	800c10e <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c210:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c212:	68d2      	ldr	r2, [r2, #12]
 800c214:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c216:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c218:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c21a:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c21c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c21e:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c220:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c222:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c224:	461e      	mov	r6, r3
 800c226:	e76c      	b.n	800c102 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c228:	9a08      	ldr	r2, [sp, #32]
 800c22a:	462b      	mov	r3, r5
 800c22c:	2180      	movs	r1, #128	; 0x80
 800c22e:	4620      	mov	r0, r4
 800c230:	f7ff fc6a 	bl	800bb08 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c234:	2800      	cmp	r0, #0
 800c236:	f43f af2e 	beq.w	800c096 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c23a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c23c:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c23e:	4313      	orrs	r3, r2
 800c240:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c242:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c244:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c246:	e699      	b.n	800bf7c <HAL_SPI_TransmitReceive+0x38>
 800c248:	20000094 	.word	0x20000094
 800c24c:	165e9f81 	.word	0x165e9f81

0800c250 <HAL_SPI_Receive>:
{
 800c250:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c254:	6846      	ldr	r6, [r0, #4]
 800c256:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c25a:	b082      	sub	sp, #8
 800c25c:	4604      	mov	r4, r0
 800c25e:	4690      	mov	r8, r2
 800c260:	461d      	mov	r5, r3
 800c262:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c264:	d06e      	beq.n	800c344 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c266:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c26a:	2b01      	cmp	r3, #1
 800c26c:	d076      	beq.n	800c35c <HAL_SPI_Receive+0x10c>
 800c26e:	2301      	movs	r3, #1
 800c270:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c274:	f7fc fdc2 	bl	8008dfc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c278:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c27c:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c280:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c282:	fa5f f08c 	uxtb.w	r0, ip
 800c286:	d009      	beq.n	800c29c <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c288:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c28a:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c28c:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c28e:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c292:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c296:	b002      	add	sp, #8
 800c298:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c29c:	2f00      	cmp	r7, #0
 800c29e:	d0f4      	beq.n	800c28a <HAL_SPI_Receive+0x3a>
 800c2a0:	f1b8 0f00 	cmp.w	r8, #0
 800c2a4:	d0f1      	beq.n	800c28a <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c2a6:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c2a8:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c2aa:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c2ae:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c2b0:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c2b4:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c2b8:	f04f 0104 	mov.w	r1, #4
 800c2bc:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c2c0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c2c4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c2c6:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c2c8:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c2ca:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c2ce:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c2d0:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c2d2:	d107      	bne.n	800c2e4 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c2d4:	6811      	ldr	r1, [r2, #0]
 800c2d6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c2da:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c2dc:	6811      	ldr	r1, [r2, #0]
 800c2de:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c2e2:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c2e4:	6811      	ldr	r1, [r2, #0]
 800c2e6:	0648      	lsls	r0, r1, #25
 800c2e8:	d403      	bmi.n	800c2f2 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c2ea:	6811      	ldr	r1, [r2, #0]
 800c2ec:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c2f0:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c2f2:	68e1      	ldr	r1, [r4, #12]
 800c2f4:	2900      	cmp	r1, #0
 800c2f6:	d054      	beq.n	800c3a2 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c2f8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c2fa:	b289      	uxth	r1, r1
 800c2fc:	b1a9      	cbz	r1, 800c32a <HAL_SPI_Receive+0xda>
 800c2fe:	1c69      	adds	r1, r5, #1
 800c300:	d13e      	bne.n	800c380 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c302:	6893      	ldr	r3, [r2, #8]
 800c304:	07db      	lsls	r3, r3, #31
 800c306:	d544      	bpl.n	800c392 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c308:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c30a:	68d1      	ldr	r1, [r2, #12]
 800c30c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c310:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c314:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c316:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c31a:	fa1f fc8c 	uxth.w	ip, ip
 800c31e:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c322:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c324:	b29b      	uxth	r3, r3
 800c326:	2b00      	cmp	r3, #0
 800c328:	d1eb      	bne.n	800c302 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c32a:	4632      	mov	r2, r6
 800c32c:	4629      	mov	r1, r5
 800c32e:	4620      	mov	r0, r4
 800c330:	f7ff fc48 	bl	800bbc4 <SPI_EndRxTransaction>
 800c334:	b108      	cbz	r0, 800c33a <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c336:	2320      	movs	r3, #32
 800c338:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c33a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c33c:	3800      	subs	r0, #0
 800c33e:	bf18      	it	ne
 800c340:	2001      	movne	r0, #1
error :
 800c342:	e7a2      	b.n	800c28a <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c344:	6883      	ldr	r3, [r0, #8]
 800c346:	2b00      	cmp	r3, #0
 800c348:	d18d      	bne.n	800c266 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c34a:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c34c:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c34e:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c350:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c354:	460a      	mov	r2, r1
 800c356:	f7ff fdf5 	bl	800bf44 <HAL_SPI_TransmitReceive>
 800c35a:	e79c      	b.n	800c296 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c35c:	2002      	movs	r0, #2
}
 800c35e:	b002      	add	sp, #8
 800c360:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c364:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c366:	68db      	ldr	r3, [r3, #12]
 800c368:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c36c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c36e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c370:	3b01      	subs	r3, #1
 800c372:	b29b      	uxth	r3, r3
 800c374:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c376:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c378:	b29b      	uxth	r3, r3
 800c37a:	2b00      	cmp	r3, #0
 800c37c:	d0d5      	beq.n	800c32a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c37e:	6823      	ldr	r3, [r4, #0]
 800c380:	689a      	ldr	r2, [r3, #8]
 800c382:	07d2      	lsls	r2, r2, #31
 800c384:	d4ee      	bmi.n	800c364 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c386:	f7fc fd39 	bl	8008dfc <HAL_GetTick>
 800c38a:	1b80      	subs	r0, r0, r6
 800c38c:	42a8      	cmp	r0, r5
 800c38e:	d243      	bcs.n	800c418 <HAL_SPI_Receive+0x1c8>
 800c390:	e7f1      	b.n	800c376 <HAL_SPI_Receive+0x126>
 800c392:	f7fc fd33 	bl	8008dfc <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c396:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c398:	b29b      	uxth	r3, r3
 800c39a:	2b00      	cmp	r3, #0
 800c39c:	d0c5      	beq.n	800c32a <HAL_SPI_Receive+0xda>
 800c39e:	6822      	ldr	r2, [r4, #0]
 800c3a0:	e7af      	b.n	800c302 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c3a2:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c3a4:	b292      	uxth	r2, r2
 800c3a6:	2a00      	cmp	r2, #0
 800c3a8:	d0bf      	beq.n	800c32a <HAL_SPI_Receive+0xda>
 800c3aa:	1c6f      	adds	r7, r5, #1
 800c3ac:	d013      	beq.n	800c3d6 <HAL_SPI_Receive+0x186>
 800c3ae:	e02b      	b.n	800c408 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c3b0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c3b2:	7b1b      	ldrb	r3, [r3, #12]
 800c3b4:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c3b6:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c3ba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c3bc:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c3c0:	fa1f fc8c 	uxth.w	ip, ip
 800c3c4:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c3c8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c3ca:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c3cc:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c3ce:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c3d0:	2b00      	cmp	r3, #0
 800c3d2:	d0aa      	beq.n	800c32a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c3d4:	6823      	ldr	r3, [r4, #0]
 800c3d6:	689a      	ldr	r2, [r3, #8]
 800c3d8:	07d0      	lsls	r0, r2, #31
 800c3da:	d4e9      	bmi.n	800c3b0 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c3dc:	f7fc fd0e 	bl	8008dfc <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c3e0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c3e2:	b29b      	uxth	r3, r3
 800c3e4:	2b00      	cmp	r3, #0
 800c3e6:	d1f5      	bne.n	800c3d4 <HAL_SPI_Receive+0x184>
 800c3e8:	e79f      	b.n	800c32a <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c3ea:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c3ec:	7b1b      	ldrb	r3, [r3, #12]
 800c3ee:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c3f0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c3f2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c3f4:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c3f6:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c3f8:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c3fa:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c3fc:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c3fe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c400:	b29b      	uxth	r3, r3
 800c402:	2b00      	cmp	r3, #0
 800c404:	d091      	beq.n	800c32a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c406:	6823      	ldr	r3, [r4, #0]
 800c408:	689a      	ldr	r2, [r3, #8]
 800c40a:	07d1      	lsls	r1, r2, #31
 800c40c:	d4ed      	bmi.n	800c3ea <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c40e:	f7fc fcf5 	bl	8008dfc <HAL_GetTick>
 800c412:	1b80      	subs	r0, r0, r6
 800c414:	42a8      	cmp	r0, r5
 800c416:	d3f2      	bcc.n	800c3fe <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c418:	2003      	movs	r0, #3
 800c41a:	e736      	b.n	800c28a <HAL_SPI_Receive+0x3a>

0800c41c <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c41c:	2800      	cmp	r0, #0
 800c41e:	f000 8087 	beq.w	800c530 <HAL_TIM_Base_Init+0x114>
{
 800c422:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c424:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c428:	4604      	mov	r4, r0
 800c42a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c42e:	2b00      	cmp	r3, #0
 800c430:	d079      	beq.n	800c526 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c432:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c434:	493f      	ldr	r1, [pc, #252]	; (800c534 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c436:	2302      	movs	r3, #2
 800c438:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c43c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c43e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c440:	d05d      	beq.n	800c4fe <HAL_TIM_Base_Init+0xe2>
 800c442:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c446:	d031      	beq.n	800c4ac <HAL_TIM_Base_Init+0x90>
 800c448:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c44c:	428a      	cmp	r2, r1
 800c44e:	d02d      	beq.n	800c4ac <HAL_TIM_Base_Init+0x90>
 800c450:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c454:	428a      	cmp	r2, r1
 800c456:	d029      	beq.n	800c4ac <HAL_TIM_Base_Init+0x90>
 800c458:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c45c:	428a      	cmp	r2, r1
 800c45e:	d025      	beq.n	800c4ac <HAL_TIM_Base_Init+0x90>
 800c460:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c464:	428a      	cmp	r2, r1
 800c466:	d04a      	beq.n	800c4fe <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c468:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c46c:	428a      	cmp	r2, r1
 800c46e:	d021      	beq.n	800c4b4 <HAL_TIM_Base_Init+0x98>
 800c470:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c474:	428a      	cmp	r2, r1
 800c476:	d01d      	beq.n	800c4b4 <HAL_TIM_Base_Init+0x98>
 800c478:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c47c:	428a      	cmp	r2, r1
 800c47e:	d019      	beq.n	800c4b4 <HAL_TIM_Base_Init+0x98>
 800c480:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c484:	428a      	cmp	r2, r1
 800c486:	d015      	beq.n	800c4b4 <HAL_TIM_Base_Init+0x98>
 800c488:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c48c:	428a      	cmp	r2, r1
 800c48e:	d011      	beq.n	800c4b4 <HAL_TIM_Base_Init+0x98>
 800c490:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c494:	428a      	cmp	r2, r1
 800c496:	d00d      	beq.n	800c4b4 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c498:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c49a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c49c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c4a0:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c4a2:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c4a4:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c4a6:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c4a8:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c4aa:	e010      	b.n	800c4ce <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c4ac:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c4ae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c4b2:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c4b4:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c4b6:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c4b8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c4bc:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c4be:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c4c2:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c4c4:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c4c6:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c4c8:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c4ca:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c4cc:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c4ce:	2301      	movs	r3, #1
 800c4d0:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c4d2:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c4d6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c4da:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c4de:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c4e2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c4e6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c4ea:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c4ee:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c4f2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c4f6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c4fa:	2000      	movs	r0, #0
}
 800c4fc:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c4fe:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c500:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c502:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c506:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c508:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c50c:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c50e:	69a1      	ldr	r1, [r4, #24]
 800c510:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c514:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c516:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c518:	68e3      	ldr	r3, [r4, #12]
 800c51a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c51c:	6863      	ldr	r3, [r4, #4]
 800c51e:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c520:	6963      	ldr	r3, [r4, #20]
 800c522:	6313      	str	r3, [r2, #48]	; 0x30
 800c524:	e7d3      	b.n	800c4ce <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c526:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c52a:	f7f5 f9e9 	bl	8001900 <HAL_TIM_Base_MspInit>
 800c52e:	e780      	b.n	800c432 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c530:	2001      	movs	r0, #1
}
 800c532:	4770      	bx	lr
 800c534:	40010000 	.word	0x40010000

0800c538 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c538:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c53c:	2b01      	cmp	r3, #1
 800c53e:	d12f      	bne.n	800c5a0 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c540:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c542:	4919      	ldr	r1, [pc, #100]	; (800c5a8 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c544:	2202      	movs	r2, #2
 800c546:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c54a:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c54c:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c54e:	f042 0201 	orr.w	r2, r2, #1
 800c552:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c554:	d019      	beq.n	800c58a <HAL_TIM_Base_Start_IT+0x52>
 800c556:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c55a:	d016      	beq.n	800c58a <HAL_TIM_Base_Start_IT+0x52>
 800c55c:	4a13      	ldr	r2, [pc, #76]	; (800c5ac <HAL_TIM_Base_Start_IT+0x74>)
 800c55e:	4293      	cmp	r3, r2
 800c560:	d013      	beq.n	800c58a <HAL_TIM_Base_Start_IT+0x52>
 800c562:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c566:	4293      	cmp	r3, r2
 800c568:	d00f      	beq.n	800c58a <HAL_TIM_Base_Start_IT+0x52>
 800c56a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c56e:	4293      	cmp	r3, r2
 800c570:	d00b      	beq.n	800c58a <HAL_TIM_Base_Start_IT+0x52>
 800c572:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c576:	4293      	cmp	r3, r2
 800c578:	d007      	beq.n	800c58a <HAL_TIM_Base_Start_IT+0x52>
 800c57a:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c57e:	4293      	cmp	r3, r2
 800c580:	d003      	beq.n	800c58a <HAL_TIM_Base_Start_IT+0x52>
 800c582:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c586:	4293      	cmp	r3, r2
 800c588:	d104      	bne.n	800c594 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c58a:	689a      	ldr	r2, [r3, #8]
 800c58c:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c590:	2a06      	cmp	r2, #6
 800c592:	d007      	beq.n	800c5a4 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c594:	681a      	ldr	r2, [r3, #0]
 800c596:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c59a:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c59c:	601a      	str	r2, [r3, #0]
 800c59e:	4770      	bx	lr
    return HAL_ERROR;
 800c5a0:	2001      	movs	r0, #1
 800c5a2:	4770      	bx	lr
  return HAL_OK;
 800c5a4:	2000      	movs	r0, #0
}
 800c5a6:	4770      	bx	lr
 800c5a8:	40010000 	.word	0x40010000
 800c5ac:	40000400 	.word	0x40000400

0800c5b0 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c5b0:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c5b4:	2b01      	cmp	r3, #1
 800c5b6:	d075      	beq.n	800c6a4 <HAL_TIM_ConfigClockSource+0xf4>
 800c5b8:	4602      	mov	r2, r0
{
 800c5ba:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c5bc:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c5be:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c5c0:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c5c4:	2001      	movs	r0, #1
 800c5c6:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c5ca:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c5cc:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c5d0:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c5d4:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c5d6:	680b      	ldr	r3, [r1, #0]
 800c5d8:	2b60      	cmp	r3, #96	; 0x60
 800c5da:	d065      	beq.n	800c6a8 <HAL_TIM_ConfigClockSource+0xf8>
 800c5dc:	d824      	bhi.n	800c628 <HAL_TIM_ConfigClockSource+0x78>
 800c5de:	2b40      	cmp	r3, #64	; 0x40
 800c5e0:	d07c      	beq.n	800c6dc <HAL_TIM_ConfigClockSource+0x12c>
 800c5e2:	d94b      	bls.n	800c67c <HAL_TIM_ConfigClockSource+0xcc>
 800c5e4:	2b50      	cmp	r3, #80	; 0x50
 800c5e6:	d117      	bne.n	800c618 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c5e8:	684b      	ldr	r3, [r1, #4]
 800c5ea:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c5ec:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c5ee:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c5f2:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c5f4:	6a23      	ldr	r3, [r4, #32]
 800c5f6:	f023 0301 	bic.w	r3, r3, #1
 800c5fa:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c5fc:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c5fe:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c602:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c606:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c608:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c60a:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c60c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c610:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c614:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c616:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c618:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c61a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c61c:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c620:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c624:	bc30      	pop	{r4, r5}
 800c626:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c628:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c62c:	d038      	beq.n	800c6a0 <HAL_TIM_ConfigClockSource+0xf0>
 800c62e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c632:	d110      	bne.n	800c656 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c634:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c638:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c63a:	432b      	orrs	r3, r5
 800c63c:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c63e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c642:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c646:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c648:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c64a:	68a3      	ldr	r3, [r4, #8]
 800c64c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c650:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c652:	60a3      	str	r3, [r4, #8]
      break;
 800c654:	e7e0      	b.n	800c618 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c656:	2b70      	cmp	r3, #112	; 0x70
 800c658:	d1de      	bne.n	800c618 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c65a:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c65e:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c660:	432b      	orrs	r3, r5
 800c662:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c664:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c668:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c66c:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c66e:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c670:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c672:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c676:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c678:	60a3      	str	r3, [r4, #8]
      break;
 800c67a:	e7cd      	b.n	800c618 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c67c:	2b20      	cmp	r3, #32
 800c67e:	d002      	beq.n	800c686 <HAL_TIM_ConfigClockSource+0xd6>
 800c680:	d90a      	bls.n	800c698 <HAL_TIM_ConfigClockSource+0xe8>
 800c682:	2b30      	cmp	r3, #48	; 0x30
 800c684:	d1c8      	bne.n	800c618 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c686:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c688:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c68c:	430b      	orrs	r3, r1
 800c68e:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c692:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c694:	60a3      	str	r3, [r4, #8]
}
 800c696:	e7bf      	b.n	800c618 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c698:	f033 0110 	bics.w	r1, r3, #16
 800c69c:	d1bc      	bne.n	800c618 <HAL_TIM_ConfigClockSource+0x68>
 800c69e:	e7f2      	b.n	800c686 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c6a0:	2000      	movs	r0, #0
 800c6a2:	e7b9      	b.n	800c618 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c6a4:	2002      	movs	r0, #2
}
 800c6a6:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c6a8:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c6aa:	6848      	ldr	r0, [r1, #4]
 800c6ac:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c6ae:	f023 0310 	bic.w	r3, r3, #16
 800c6b2:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c6b4:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c6b6:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c6b8:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c6bc:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c6c0:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c6c4:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c6c8:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c6ca:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c6cc:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c6ce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c6d2:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c6d6:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c6d8:	60a3      	str	r3, [r4, #8]
}
 800c6da:	e79d      	b.n	800c618 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c6dc:	684b      	ldr	r3, [r1, #4]
 800c6de:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c6e0:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c6e2:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c6e6:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c6e8:	6a23      	ldr	r3, [r4, #32]
 800c6ea:	f023 0301 	bic.w	r3, r3, #1
 800c6ee:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c6f0:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c6f2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c6f6:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c6fa:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c6fc:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c6fe:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c700:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c704:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c708:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c70a:	60a3      	str	r3, [r4, #8]
}
 800c70c:	e784      	b.n	800c618 <HAL_TIM_ConfigClockSource+0x68>
 800c70e:	bf00      	nop

0800c710 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800c710:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800c714:	2a01      	cmp	r2, #1
 800c716:	d050      	beq.n	800c7ba <HAL_TIM_SlaveConfigSynchro+0xaa>
 800c718:	4603      	mov	r3, r0
{
 800c71a:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c71c:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800c71e:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c720:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c724:	2001      	movs	r0, #1
 800c726:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c72a:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c72c:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c72e:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c730:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c734:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800c736:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c73a:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800c73c:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800c73e:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800c740:	d060      	beq.n	800c804 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800c742:	d90f      	bls.n	800c764 <HAL_TIM_SlaveConfigSynchro+0x54>
 800c744:	2860      	cmp	r0, #96	; 0x60
 800c746:	d03a      	beq.n	800c7be <HAL_TIM_SlaveConfigSynchro+0xae>
 800c748:	2870      	cmp	r0, #112	; 0x70
 800c74a:	d10e      	bne.n	800c76a <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c74c:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800c750:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c752:	432a      	orrs	r2, r5
 800c754:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c756:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c75a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c75e:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800c760:	60a2      	str	r2, [r4, #8]
 800c762:	e00f      	b.n	800c784 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800c764:	2840      	cmp	r0, #64	; 0x40
 800c766:	d03d      	beq.n	800c7e4 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800c768:	d907      	bls.n	800c77a <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800c76a:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c76c:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c76e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c772:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800c776:	bc30      	pop	{r4, r5}
 800c778:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c77a:	2820      	cmp	r0, #32
 800c77c:	d002      	beq.n	800c784 <HAL_TIM_SlaveConfigSynchro+0x74>
 800c77e:	d912      	bls.n	800c7a6 <HAL_TIM_SlaveConfigSynchro+0x96>
 800c780:	2830      	cmp	r0, #48	; 0x30
 800c782:	d1f2      	bne.n	800c76a <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800c784:	68e2      	ldr	r2, [r4, #12]
 800c786:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c78a:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c78c:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800c78e:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800c790:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c792:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800c796:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800c798:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c79c:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800c7a0:	4608      	mov	r0, r1
}
 800c7a2:	bc30      	pop	{r4, r5}
 800c7a4:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c7a6:	f030 0210 	bics.w	r2, r0, #16
 800c7aa:	d0eb      	beq.n	800c784 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800c7ac:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c7ae:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c7b0:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c7b4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800c7b8:	e7dd      	b.n	800c776 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800c7ba:	2002      	movs	r0, #2
}
 800c7bc:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c7be:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c7c0:	6888      	ldr	r0, [r1, #8]
 800c7c2:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c7c4:	f022 0210 	bic.w	r2, r2, #16
 800c7c8:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c7ca:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c7cc:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c7ce:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c7d2:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c7d6:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800c7da:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800c7de:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c7e0:	6222      	str	r2, [r4, #32]
 800c7e2:	e7cf      	b.n	800c784 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800c7e4:	2d05      	cmp	r5, #5
 800c7e6:	d0c0      	beq.n	800c76a <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800c7e8:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c7ea:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c7ec:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c7ee:	f022 0201 	bic.w	r2, r2, #1
 800c7f2:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800c7f4:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c7f6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c7fa:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800c7fe:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800c800:	6220      	str	r0, [r4, #32]
      break;
 800c802:	e7bf      	b.n	800c784 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c804:	688a      	ldr	r2, [r1, #8]
 800c806:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800c808:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c80a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c80e:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c810:	6a22      	ldr	r2, [r4, #32]
 800c812:	f022 0201 	bic.w	r2, r2, #1
 800c816:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c818:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c81a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c81e:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c822:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800c824:	6221      	str	r1, [r4, #32]
 800c826:	e7ad      	b.n	800c784 <HAL_TIM_SlaveConfigSynchro+0x74>

0800c828 <HAL_TIM_OC_DelayElapsedCallback>:
 800c828:	4770      	bx	lr
 800c82a:	bf00      	nop

0800c82c <HAL_TIM_IC_CaptureCallback>:
 800c82c:	4770      	bx	lr
 800c82e:	bf00      	nop

0800c830 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c830:	4770      	bx	lr
 800c832:	bf00      	nop

0800c834 <HAL_TIM_TriggerCallback>:
 800c834:	4770      	bx	lr
 800c836:	bf00      	nop

0800c838 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c838:	6803      	ldr	r3, [r0, #0]
 800c83a:	691a      	ldr	r2, [r3, #16]
 800c83c:	0791      	lsls	r1, r2, #30
{
 800c83e:	b510      	push	{r4, lr}
 800c840:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c842:	d502      	bpl.n	800c84a <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c844:	68da      	ldr	r2, [r3, #12]
 800c846:	0792      	lsls	r2, r2, #30
 800c848:	d45f      	bmi.n	800c90a <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c84a:	691a      	ldr	r2, [r3, #16]
 800c84c:	0750      	lsls	r0, r2, #29
 800c84e:	d502      	bpl.n	800c856 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c850:	68da      	ldr	r2, [r3, #12]
 800c852:	0751      	lsls	r1, r2, #29
 800c854:	d446      	bmi.n	800c8e4 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c856:	691a      	ldr	r2, [r3, #16]
 800c858:	0712      	lsls	r2, r2, #28
 800c85a:	d502      	bpl.n	800c862 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c85c:	68da      	ldr	r2, [r3, #12]
 800c85e:	0710      	lsls	r0, r2, #28
 800c860:	d42e      	bmi.n	800c8c0 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c862:	691a      	ldr	r2, [r3, #16]
 800c864:	06d2      	lsls	r2, r2, #27
 800c866:	d502      	bpl.n	800c86e <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c868:	68da      	ldr	r2, [r3, #12]
 800c86a:	06d0      	lsls	r0, r2, #27
 800c86c:	d418      	bmi.n	800c8a0 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c86e:	691a      	ldr	r2, [r3, #16]
 800c870:	07d1      	lsls	r1, r2, #31
 800c872:	d502      	bpl.n	800c87a <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c874:	68da      	ldr	r2, [r3, #12]
 800c876:	07d2      	lsls	r2, r2, #31
 800c878:	d45d      	bmi.n	800c936 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c87a:	691a      	ldr	r2, [r3, #16]
 800c87c:	0610      	lsls	r0, r2, #24
 800c87e:	d502      	bpl.n	800c886 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c880:	68da      	ldr	r2, [r3, #12]
 800c882:	0611      	lsls	r1, r2, #24
 800c884:	d45f      	bmi.n	800c946 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c886:	691a      	ldr	r2, [r3, #16]
 800c888:	0652      	lsls	r2, r2, #25
 800c88a:	d502      	bpl.n	800c892 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c88c:	68da      	ldr	r2, [r3, #12]
 800c88e:	0650      	lsls	r0, r2, #25
 800c890:	d461      	bmi.n	800c956 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c892:	691a      	ldr	r2, [r3, #16]
 800c894:	0691      	lsls	r1, r2, #26
 800c896:	d502      	bpl.n	800c89e <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c898:	68da      	ldr	r2, [r3, #12]
 800c89a:	0692      	lsls	r2, r2, #26
 800c89c:	d443      	bmi.n	800c926 <HAL_TIM_IRQHandler+0xee>
}
 800c89e:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c8a0:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c8a4:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c8a6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c8a8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c8aa:	69db      	ldr	r3, [r3, #28]
 800c8ac:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c8b0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c8b2:	d064      	beq.n	800c97e <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c8b4:	f7ff ffba 	bl	800c82c <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c8b8:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c8ba:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c8bc:	7722      	strb	r2, [r4, #28]
 800c8be:	e7d6      	b.n	800c86e <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c8c0:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c8c4:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c8c6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c8c8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c8ca:	69db      	ldr	r3, [r3, #28]
 800c8cc:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c8ce:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c8d0:	d152      	bne.n	800c978 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c8d2:	f7ff ffa9 	bl	800c828 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c8d6:	4620      	mov	r0, r4
 800c8d8:	f7ff ffaa 	bl	800c830 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c8dc:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c8de:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c8e0:	7722      	strb	r2, [r4, #28]
 800c8e2:	e7be      	b.n	800c862 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c8e4:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c8e8:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c8ea:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c8ec:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c8ee:	699b      	ldr	r3, [r3, #24]
 800c8f0:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c8f4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c8f6:	d13c      	bne.n	800c972 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c8f8:	f7ff ff96 	bl	800c828 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c8fc:	4620      	mov	r0, r4
 800c8fe:	f7ff ff97 	bl	800c830 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c902:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c904:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c906:	7722      	strb	r2, [r4, #28]
 800c908:	e7a5      	b.n	800c856 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c90a:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c90e:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c910:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c912:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c914:	699b      	ldr	r3, [r3, #24]
 800c916:	079b      	lsls	r3, r3, #30
 800c918:	d025      	beq.n	800c966 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c91a:	f7ff ff87 	bl	800c82c <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c91e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c920:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c922:	7722      	strb	r2, [r4, #28]
 800c924:	e791      	b.n	800c84a <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c926:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c92a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c92c:	611a      	str	r2, [r3, #16]
}
 800c92e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c932:	f000 b86b 	b.w	800ca0c <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c936:	f06f 0201 	mvn.w	r2, #1
 800c93a:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c93c:	4620      	mov	r0, r4
 800c93e:	f7f4 fcbf 	bl	80012c0 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c942:	6823      	ldr	r3, [r4, #0]
 800c944:	e799      	b.n	800c87a <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c946:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c94a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c94c:	4620      	mov	r0, r4
 800c94e:	f000 f85f 	bl	800ca10 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c952:	6823      	ldr	r3, [r4, #0]
 800c954:	e797      	b.n	800c886 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c956:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c95a:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c95c:	4620      	mov	r0, r4
 800c95e:	f7ff ff69 	bl	800c834 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c962:	6823      	ldr	r3, [r4, #0]
 800c964:	e795      	b.n	800c892 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c966:	f7ff ff5f 	bl	800c828 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c96a:	4620      	mov	r0, r4
 800c96c:	f7ff ff60 	bl	800c830 <HAL_TIM_PWM_PulseFinishedCallback>
 800c970:	e7d5      	b.n	800c91e <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800c972:	f7ff ff5b 	bl	800c82c <HAL_TIM_IC_CaptureCallback>
 800c976:	e7c4      	b.n	800c902 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800c978:	f7ff ff58 	bl	800c82c <HAL_TIM_IC_CaptureCallback>
 800c97c:	e7ae      	b.n	800c8dc <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c97e:	f7ff ff53 	bl	800c828 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c982:	4620      	mov	r0, r4
 800c984:	f7ff ff54 	bl	800c830 <HAL_TIM_PWM_PulseFinishedCallback>
 800c988:	e796      	b.n	800c8b8 <HAL_TIM_IRQHandler+0x80>
 800c98a:	bf00      	nop

0800c98c <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800c98c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c990:	2b01      	cmp	r3, #1
 800c992:	d037      	beq.n	800ca04 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800c994:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c996:	2202      	movs	r2, #2
{
 800c998:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c99a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800c99e:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c9a0:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800c9a2:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800c9a4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c9a8:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800c9aa:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c9ac:	4a16      	ldr	r2, [pc, #88]	; (800ca08 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800c9ae:	4293      	cmp	r3, r2
 800c9b0:	d01a      	beq.n	800c9e8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c9b2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c9b6:	d017      	beq.n	800c9e8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c9b8:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c9bc:	4293      	cmp	r3, r2
 800c9be:	d013      	beq.n	800c9e8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c9c0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c9c4:	4293      	cmp	r3, r2
 800c9c6:	d00f      	beq.n	800c9e8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c9c8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c9cc:	4293      	cmp	r3, r2
 800c9ce:	d00b      	beq.n	800c9e8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c9d0:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c9d4:	4293      	cmp	r3, r2
 800c9d6:	d007      	beq.n	800c9e8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c9d8:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c9dc:	4293      	cmp	r3, r2
 800c9de:	d003      	beq.n	800c9e8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c9e0:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c9e4:	4293      	cmp	r3, r2
 800c9e6:	d104      	bne.n	800c9f2 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c9e8:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800c9ea:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c9ee:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800c9f0:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800c9f2:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c9f4:	2201      	movs	r2, #1
 800c9f6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c9fa:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800c9fe:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800ca00:	4618      	mov	r0, r3
}
 800ca02:	4770      	bx	lr
  __HAL_LOCK(htim);
 800ca04:	2002      	movs	r0, #2
}
 800ca06:	4770      	bx	lr
 800ca08:	40010000 	.word	0x40010000

0800ca0c <HAL_TIMEx_CommutCallback>:
 800ca0c:	4770      	bx	lr
 800ca0e:	bf00      	nop

0800ca10 <HAL_TIMEx_BreakCallback>:
 800ca10:	4770      	bx	lr
 800ca12:	bf00      	nop

0800ca14 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800ca14:	680b      	ldr	r3, [r1, #0]
{
 800ca16:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800ca18:	b9d3      	cbnz	r3, 800ca50 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800ca1a:	6803      	ldr	r3, [r0, #0]
 800ca1c:	684c      	ldr	r4, [r1, #4]
 800ca1e:	688a      	ldr	r2, [r1, #8]
 800ca20:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800ca24:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800ca28:	4323      	orrs	r3, r4
 800ca2a:	4313      	orrs	r3, r2
 800ca2c:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800ca30:	4323      	orrs	r3, r4
 800ca32:	4313      	orrs	r3, r2
 800ca34:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800ca38:	4323      	orrs	r3, r4
 800ca3a:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800ca3e:	4313      	orrs	r3, r2
 800ca40:	432b      	orrs	r3, r5
 800ca42:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800ca44:	4323      	orrs	r3, r4
 800ca46:	4313      	orrs	r3, r2
 800ca48:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800ca4a:	bc30      	pop	{r4, r5}
 800ca4c:	2000      	movs	r0, #0
 800ca4e:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800ca50:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800ca54:	6803      	ldr	r3, [r0, #0]
 800ca56:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800ca5a:	4323      	orrs	r3, r4
 800ca5c:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800ca5e:	4313      	orrs	r3, r2
 800ca60:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800ca62:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800ca64:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800ca66:	6843      	ldr	r3, [r0, #4]
 800ca68:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800ca6c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800ca70:	4313      	orrs	r3, r2
 800ca72:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800ca76:	4323      	orrs	r3, r4
 800ca78:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800ca7c:	4313      	orrs	r3, r2
 800ca7e:	432b      	orrs	r3, r5
 800ca80:	698a      	ldr	r2, [r1, #24]
 800ca82:	4323      	orrs	r3, r4
 800ca84:	4313      	orrs	r3, r2
 800ca86:	6043      	str	r3, [r0, #4]
}
 800ca88:	bc30      	pop	{r4, r5}
 800ca8a:	2000      	movs	r0, #0
 800ca8c:	4770      	bx	lr
 800ca8e:	bf00      	nop

0800ca90 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800ca90:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ca92:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800ca94:	bb02      	cbnz	r2, 800cad8 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ca96:	e9d1 2400 	ldrd	r2, r4, [r1]
 800ca9a:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ca9e:	3c01      	subs	r4, #1
 800caa0:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800caa4:	3a01      	subs	r2, #1
 800caa6:	4313      	orrs	r3, r2
 800caa8:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800caac:	3c01      	subs	r4, #1
 800caae:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800cab2:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800cab6:	3a01      	subs	r2, #1
 800cab8:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800cabc:	698a      	ldr	r2, [r1, #24]
 800cabe:	1e69      	subs	r1, r5, #1
 800cac0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cac4:	1e61      	subs	r1, r4, #1
 800cac6:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800caca:	3a01      	subs	r2, #1
 800cacc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cad0:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800cad2:	bc30      	pop	{r4, r5}
 800cad4:	2000      	movs	r0, #0
 800cad6:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cad8:	68cc      	ldr	r4, [r1, #12]
 800cada:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800cadc:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cade:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800cae2:	3c01      	subs	r4, #1
 800cae4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800cae8:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800caec:	3a01      	subs	r2, #1
 800caee:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800caf2:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800caf4:	e9d1 2400 	ldrd	r2, r4, [r1]
 800caf8:	68c3      	ldr	r3, [r0, #12]
 800cafa:	3c01      	subs	r4, #1
 800cafc:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cb00:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800cb04:	3a01      	subs	r2, #1
 800cb06:	690c      	ldr	r4, [r1, #16]
 800cb08:	4313      	orrs	r3, r2
 800cb0a:	698a      	ldr	r2, [r1, #24]
 800cb0c:	1e69      	subs	r1, r5, #1
 800cb0e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800cb12:	1e61      	subs	r1, r4, #1
 800cb14:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cb18:	3a01      	subs	r2, #1
 800cb1a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cb1e:	60c3      	str	r3, [r0, #12]
}
 800cb20:	bc30      	pop	{r4, r5}
 800cb22:	2000      	movs	r0, #0
 800cb24:	4770      	bx	lr
 800cb26:	bf00      	nop

0800cb28 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800cb28:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cb2a:	680b      	ldr	r3, [r1, #0]
{
 800cb2c:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cb2e:	684a      	ldr	r2, [r1, #4]
{
 800cb30:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cb32:	4313      	orrs	r3, r2
 800cb34:	6900      	ldr	r0, [r0, #16]
 800cb36:	68ca      	ldr	r2, [r1, #12]
 800cb38:	0d80      	lsrs	r0, r0, #22
 800cb3a:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800cb3e:	688a      	ldr	r2, [r1, #8]
 800cb40:	0580      	lsls	r0, r0, #22
 800cb42:	4303      	orrs	r3, r0
 800cb44:	3a01      	subs	r2, #1
 800cb46:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800cb4a:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cb4c:	f7fc f956 	bl	8008dfc <HAL_GetTick>
 800cb50:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cb52:	1c6b      	adds	r3, r5, #1
 800cb54:	d105      	bne.n	800cb62 <FMC_SDRAM_SendCommand+0x3a>
 800cb56:	69a3      	ldr	r3, [r4, #24]
 800cb58:	f013 0320 	ands.w	r3, r3, #32
 800cb5c:	d1fb      	bne.n	800cb56 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800cb5e:	4618      	mov	r0, r3
}
 800cb60:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cb62:	69a3      	ldr	r3, [r4, #24]
 800cb64:	f013 0320 	ands.w	r3, r3, #32
 800cb68:	d0f9      	beq.n	800cb5e <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cb6a:	b125      	cbz	r5, 800cb76 <FMC_SDRAM_SendCommand+0x4e>
 800cb6c:	f7fc f946 	bl	8008dfc <HAL_GetTick>
 800cb70:	1b80      	subs	r0, r0, r6
 800cb72:	42a8      	cmp	r0, r5
 800cb74:	d9ed      	bls.n	800cb52 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800cb76:	2003      	movs	r0, #3
}
 800cb78:	bd70      	pop	{r4, r5, r6, pc}
 800cb7a:	bf00      	nop

0800cb7c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cb7c:	6943      	ldr	r3, [r0, #20]
 800cb7e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800cb82:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cb84:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800cb88:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800cb8c:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cb8e:	6151      	str	r1, [r2, #20]
}
 800cb90:	4770      	bx	lr
 800cb92:	bf00      	nop

0800cb94 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cb94:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cb96:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cb9a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cb9c:	f002 fb02 	bl	800f1a4 <xTaskGetSchedulerState>
 800cba0:	2801      	cmp	r0, #1
 800cba2:	d100      	bne.n	800cba6 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cba4:	bd08      	pop	{r3, pc}
 800cba6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cbaa:	f000 bc43 	b.w	800d434 <xPortSysTickHandler>
 800cbae:	bf00      	nop

0800cbb0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cbb0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cbb4:	b92b      	cbnz	r3, 800cbc2 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cbb6:	4b06      	ldr	r3, [pc, #24]	; (800cbd0 <osKernelInitialize+0x20>)
 800cbb8:	6818      	ldr	r0, [r3, #0]
 800cbba:	b928      	cbnz	r0, 800cbc8 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cbbc:	2201      	movs	r2, #1
 800cbbe:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cbc0:	4770      	bx	lr
    stat = osErrorISR;
 800cbc2:	f06f 0005 	mvn.w	r0, #5
 800cbc6:	4770      	bx	lr
    } else {
      stat = osError;
 800cbc8:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cbcc:	4770      	bx	lr
 800cbce:	bf00      	nop
 800cbd0:	20002770 	.word	0x20002770

0800cbd4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cbd4:	b510      	push	{r4, lr}
 800cbd6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cbda:	b974      	cbnz	r4, 800cbfa <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cbdc:	4b08      	ldr	r3, [pc, #32]	; (800cc00 <osKernelStart+0x2c>)
 800cbde:	681a      	ldr	r2, [r3, #0]
 800cbe0:	2a01      	cmp	r2, #1
 800cbe2:	d107      	bne.n	800cbf4 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cbe4:	4907      	ldr	r1, [pc, #28]	; (800cc04 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cbe6:	2202      	movs	r2, #2
 800cbe8:	77cc      	strb	r4, [r1, #31]
 800cbea:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cbec:	f002 f8b4 	bl	800ed58 <vTaskStartScheduler>
      stat = osOK;
 800cbf0:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cbf2:	bd10      	pop	{r4, pc}
      stat = osError;
 800cbf4:	f04f 30ff 	mov.w	r0, #4294967295
}
 800cbf8:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cbfa:	f06f 0005 	mvn.w	r0, #5
}
 800cbfe:	bd10      	pop	{r4, pc}
 800cc00:	20002770 	.word	0x20002770
 800cc04:	e000ed00 	.word	0xe000ed00

0800cc08 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cc08:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc0a:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cc0c:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cc0e:	4615      	mov	r5, r2
  hTask = NULL;
 800cc10:	9405      	str	r4, [sp, #20]
 800cc12:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cc16:	b9ea      	cbnz	r2, 800cc54 <osThreadNew+0x4c>
 800cc18:	b350      	cbz	r0, 800cc70 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cc1a:	b1f5      	cbz	r5, 800cc5a <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cc1c:	69ab      	ldr	r3, [r5, #24]
 800cc1e:	bb5b      	cbnz	r3, 800cc78 <osThreadNew+0x70>
 800cc20:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cc22:	686a      	ldr	r2, [r5, #4]
 800cc24:	07d2      	lsls	r2, r2, #31
 800cc26:	d423      	bmi.n	800cc70 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cc28:	696e      	ldr	r6, [r5, #20]
 800cc2a:	b34e      	cbz	r6, 800cc80 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cc2c:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cc30:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800cc32:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cc34:	b34c      	cbz	r4, 800cc8a <osThreadNew+0x82>
 800cc36:	68ea      	ldr	r2, [r5, #12]
 800cc38:	2aab      	cmp	r2, #171	; 0xab
 800cc3a:	d919      	bls.n	800cc70 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cc3c:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cc3e:	b1bd      	cbz	r5, 800cc70 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cc40:	b1b6      	cbz	r6, 800cc70 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cc42:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800cc46:	9300      	str	r3, [sp, #0]
 800cc48:	4662      	mov	r2, ip
 800cc4a:	460b      	mov	r3, r1
 800cc4c:	4639      	mov	r1, r7
 800cc4e:	f001 ffc1 	bl	800ebd4 <xTaskCreateStatic>
 800cc52:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800cc54:	4620      	mov	r0, r4
 800cc56:	b007      	add	sp, #28
 800cc58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cc5a:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800cc5c:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cc5e:	ac05      	add	r4, sp, #20
 800cc60:	9300      	str	r3, [sp, #0]
 800cc62:	9401      	str	r4, [sp, #4]
 800cc64:	460b      	mov	r3, r1
 800cc66:	4629      	mov	r1, r5
 800cc68:	f001 ffee 	bl	800ec48 <xTaskCreate>
 800cc6c:	2801      	cmp	r0, #1
 800cc6e:	d00a      	beq.n	800cc86 <osThreadNew+0x7e>
        return (NULL);
 800cc70:	2400      	movs	r4, #0
}
 800cc72:	4620      	mov	r0, r4
 800cc74:	b007      	add	sp, #28
 800cc76:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cc78:	1e5c      	subs	r4, r3, #1
 800cc7a:	2c37      	cmp	r4, #55	; 0x37
 800cc7c:	d9d1      	bls.n	800cc22 <osThreadNew+0x1a>
 800cc7e:	e7f7      	b.n	800cc70 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800cc80:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800cc84:	e7d4      	b.n	800cc30 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800cc86:	9c05      	ldr	r4, [sp, #20]
 800cc88:	e7e4      	b.n	800cc54 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cc8a:	68ee      	ldr	r6, [r5, #12]
 800cc8c:	2e00      	cmp	r6, #0
 800cc8e:	d1e1      	bne.n	800cc54 <osThreadNew+0x4c>
 800cc90:	692d      	ldr	r5, [r5, #16]
 800cc92:	2d00      	cmp	r5, #0
 800cc94:	d1de      	bne.n	800cc54 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cc96:	fa1f f28c 	uxth.w	r2, ip
 800cc9a:	463d      	mov	r5, r7
 800cc9c:	e7df      	b.n	800cc5e <osThreadNew+0x56>
 800cc9e:	bf00      	nop

0800cca0 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cca0:	b510      	push	{r4, lr}
 800cca2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cca6:	b92c      	cbnz	r4, 800ccb4 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cca8:	b900      	cbnz	r0, 800ccac <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800ccaa:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800ccac:	f001 fffe 	bl	800ecac <vTaskDelay>
    stat = osOK;
 800ccb0:	4620      	mov	r0, r4
}
 800ccb2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ccb4:	f06f 0005 	mvn.w	r0, #5
}
 800ccb8:	bd10      	pop	{r4, pc}
 800ccba:	bf00      	nop

0800ccbc <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800ccbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ccbe:	b083      	sub	sp, #12
 800ccc0:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800ccc4:	b9fe      	cbnz	r6, 800cd06 <osSemaphoreNew+0x4a>
 800ccc6:	b1f0      	cbz	r0, 800cd06 <osSemaphoreNew+0x4a>
 800ccc8:	4288      	cmp	r0, r1
 800ccca:	460f      	mov	r7, r1
 800cccc:	d31b      	bcc.n	800cd06 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800ccce:	4615      	mov	r5, r2
 800ccd0:	b192      	cbz	r2, 800ccf8 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800ccd2:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800ccd6:	b1d2      	cbz	r2, 800cd0e <osSemaphoreNew+0x52>
 800ccd8:	2b4f      	cmp	r3, #79	; 0x4f
 800ccda:	d914      	bls.n	800cd06 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800ccdc:	2801      	cmp	r0, #1
 800ccde:	d038      	beq.n	800cd52 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cce0:	f000 fd8e 	bl	800d800 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800cce4:	4604      	mov	r4, r0
 800cce6:	b170      	cbz	r0, 800cd06 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800cce8:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800ccea:	4620      	mov	r0, r4
 800ccec:	4629      	mov	r1, r5
 800ccee:	f001 fc39 	bl	800e564 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800ccf2:	4620      	mov	r0, r4
 800ccf4:	b003      	add	sp, #12
 800ccf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800ccf8:	2801      	cmp	r0, #1
 800ccfa:	d012      	beq.n	800cd22 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800ccfc:	f000 fde0 	bl	800d8c0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cd00:	4604      	mov	r4, r0
 800cd02:	2800      	cmp	r0, #0
 800cd04:	d1f1      	bne.n	800ccea <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800cd06:	2400      	movs	r4, #0
}
 800cd08:	4620      	mov	r0, r4
 800cd0a:	b003      	add	sp, #12
 800cd0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cd0e:	2b00      	cmp	r3, #0
 800cd10:	d1f9      	bne.n	800cd06 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800cd12:	2801      	cmp	r0, #1
 800cd14:	d005      	beq.n	800cd22 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cd16:	f000 fdd3 	bl	800d8c0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cd1a:	4604      	mov	r4, r0
 800cd1c:	2800      	cmp	r0, #0
 800cd1e:	d1e3      	bne.n	800cce8 <osSemaphoreNew+0x2c>
 800cd20:	e7f1      	b.n	800cd06 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800cd22:	2203      	movs	r2, #3
 800cd24:	2100      	movs	r1, #0
 800cd26:	2001      	movs	r0, #1
 800cd28:	f000 fd28 	bl	800d77c <xQueueGenericCreate>
 800cd2c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cd2e:	2c00      	cmp	r4, #0
 800cd30:	d0e9      	beq.n	800cd06 <osSemaphoreNew+0x4a>
 800cd32:	b917      	cbnz	r7, 800cd3a <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800cd34:	2d00      	cmp	r5, #0
 800cd36:	d1d7      	bne.n	800cce8 <osSemaphoreNew+0x2c>
 800cd38:	e7d7      	b.n	800ccea <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cd3a:	2300      	movs	r3, #0
 800cd3c:	461a      	mov	r2, r3
 800cd3e:	4619      	mov	r1, r3
 800cd40:	4620      	mov	r0, r4
 800cd42:	f000 fe03 	bl	800d94c <xQueueGenericSend>
 800cd46:	2801      	cmp	r0, #1
 800cd48:	d0f4      	beq.n	800cd34 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800cd4a:	4620      	mov	r0, r4
 800cd4c:	f001 fbc4 	bl	800e4d8 <vQueueDelete>
 800cd50:	e7d9      	b.n	800cd06 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800cd52:	4613      	mov	r3, r2
 800cd54:	2203      	movs	r2, #3
 800cd56:	9200      	str	r2, [sp, #0]
 800cd58:	4631      	mov	r1, r6
 800cd5a:	4632      	mov	r2, r6
 800cd5c:	f000 fca0 	bl	800d6a0 <xQueueGenericCreateStatic>
 800cd60:	4604      	mov	r4, r0
 800cd62:	e7e4      	b.n	800cd2e <osSemaphoreNew+0x72>

0800cd64 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cd64:	b370      	cbz	r0, 800cdc4 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800cd66:	b510      	push	{r4, lr}
 800cd68:	460c      	mov	r4, r1
 800cd6a:	b082      	sub	sp, #8
 800cd6c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cd70:	b1c3      	cbz	r3, 800cda4 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800cd72:	bb21      	cbnz	r1, 800cdbe <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cd74:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cd76:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cd78:	f001 fb2c 	bl	800e3d4 <xQueueReceiveFromISR>
 800cd7c:	2801      	cmp	r0, #1
 800cd7e:	d11a      	bne.n	800cdb6 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cd80:	9b01      	ldr	r3, [sp, #4]
 800cd82:	b913      	cbnz	r3, 800cd8a <osSemaphoreAcquire+0x26>
  stat = osOK;
 800cd84:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cd86:	b002      	add	sp, #8
 800cd88:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800cd8a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd92:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd96:	f3bf 8f4f 	dsb	sy
 800cd9a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cd9e:	4620      	mov	r0, r4
}
 800cda0:	b002      	add	sp, #8
 800cda2:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800cda4:	f001 f98c 	bl	800e0c0 <xQueueSemaphoreTake>
 800cda8:	2801      	cmp	r0, #1
 800cdaa:	d0eb      	beq.n	800cd84 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800cdac:	b11c      	cbz	r4, 800cdb6 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800cdae:	f06f 0001 	mvn.w	r0, #1
}
 800cdb2:	b002      	add	sp, #8
 800cdb4:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800cdb6:	f06f 0002 	mvn.w	r0, #2
}
 800cdba:	b002      	add	sp, #8
 800cdbc:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800cdbe:	f06f 0003 	mvn.w	r0, #3
 800cdc2:	e7e0      	b.n	800cd86 <osSemaphoreAcquire+0x22>
 800cdc4:	f06f 0003 	mvn.w	r0, #3
}
 800cdc8:	4770      	bx	lr
 800cdca:	bf00      	nop

0800cdcc <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cdcc:	b330      	cbz	r0, 800ce1c <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800cdce:	b510      	push	{r4, lr}
 800cdd0:	b082      	sub	sp, #8
 800cdd2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cdd6:	b1ab      	cbz	r3, 800ce04 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800cdd8:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cdda:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800cddc:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cdde:	f000 ff99 	bl	800dd14 <xQueueGiveFromISR>
 800cde2:	2801      	cmp	r0, #1
 800cde4:	d117      	bne.n	800ce16 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800cde6:	9b01      	ldr	r3, [sp, #4]
 800cde8:	b193      	cbz	r3, 800ce10 <osSemaphoreRelease+0x44>
 800cdea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cdee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cdf2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cdf6:	f3bf 8f4f 	dsb	sy
 800cdfa:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cdfe:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800ce00:	b002      	add	sp, #8
 800ce02:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800ce04:	461a      	mov	r2, r3
 800ce06:	4619      	mov	r1, r3
 800ce08:	f000 fda0 	bl	800d94c <xQueueGenericSend>
 800ce0c:	2801      	cmp	r0, #1
 800ce0e:	d102      	bne.n	800ce16 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800ce10:	2000      	movs	r0, #0
}
 800ce12:	b002      	add	sp, #8
 800ce14:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800ce16:	f06f 0002 	mvn.w	r0, #2
 800ce1a:	e7fa      	b.n	800ce12 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800ce1c:	f06f 0003 	mvn.w	r0, #3
}
 800ce20:	4770      	bx	lr
 800ce22:	bf00      	nop

0800ce24 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800ce24:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce26:	b085      	sub	sp, #20
 800ce28:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800ce2c:	b987      	cbnz	r7, 800ce50 <osMessageQueueNew+0x2c>
 800ce2e:	4605      	mov	r5, r0
 800ce30:	b170      	cbz	r0, 800ce50 <osMessageQueueNew+0x2c>
 800ce32:	b169      	cbz	r1, 800ce50 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800ce34:	4614      	mov	r4, r2
 800ce36:	b1ea      	cbz	r2, 800ce74 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ce38:	6893      	ldr	r3, [r2, #8]
 800ce3a:	b163      	cbz	r3, 800ce56 <osMessageQueueNew+0x32>
 800ce3c:	68d2      	ldr	r2, [r2, #12]
 800ce3e:	2a4f      	cmp	r2, #79	; 0x4f
 800ce40:	d906      	bls.n	800ce50 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ce42:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ce44:	b122      	cbz	r2, 800ce50 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ce46:	6966      	ldr	r6, [r4, #20]
 800ce48:	fb01 f505 	mul.w	r5, r1, r5
 800ce4c:	42ae      	cmp	r6, r5
 800ce4e:	d21c      	bcs.n	800ce8a <osMessageQueueNew+0x66>
  hQueue = NULL;
 800ce50:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800ce52:	b005      	add	sp, #20
 800ce54:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800ce56:	68d3      	ldr	r3, [r2, #12]
 800ce58:	2b00      	cmp	r3, #0
 800ce5a:	d1f9      	bne.n	800ce50 <osMessageQueueNew+0x2c>
 800ce5c:	6913      	ldr	r3, [r2, #16]
 800ce5e:	2b00      	cmp	r3, #0
 800ce60:	d1f6      	bne.n	800ce50 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800ce62:	6952      	ldr	r2, [r2, #20]
 800ce64:	2a00      	cmp	r2, #0
 800ce66:	d1f3      	bne.n	800ce50 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800ce68:	f000 fc88 	bl	800d77c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800ce6c:	2800      	cmp	r0, #0
 800ce6e:	d0ef      	beq.n	800ce50 <osMessageQueueNew+0x2c>
        name = attr->name;
 800ce70:	6824      	ldr	r4, [r4, #0]
 800ce72:	e003      	b.n	800ce7c <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800ce74:	f000 fc82 	bl	800d77c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800ce78:	2800      	cmp	r0, #0
 800ce7a:	d0e9      	beq.n	800ce50 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800ce7c:	4621      	mov	r1, r4
 800ce7e:	9003      	str	r0, [sp, #12]
 800ce80:	f001 fb70 	bl	800e564 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800ce84:	9803      	ldr	r0, [sp, #12]
}
 800ce86:	b005      	add	sp, #20
 800ce88:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800ce8a:	9700      	str	r7, [sp, #0]
 800ce8c:	f000 fc08 	bl	800d6a0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800ce90:	2800      	cmp	r0, #0
 800ce92:	d1ed      	bne.n	800ce70 <osMessageQueueNew+0x4c>
 800ce94:	e7dc      	b.n	800ce50 <osMessageQueueNew+0x2c>
 800ce96:	bf00      	nop

0800ce98 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800ce98:	b570      	push	{r4, r5, r6, lr}
 800ce9a:	461c      	mov	r4, r3
 800ce9c:	b082      	sub	sp, #8
 800ce9e:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cea2:	b1be      	cbz	r6, 800ced4 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cea4:	b350      	cbz	r0, 800cefc <osMessageQueuePut+0x64>
 800cea6:	b349      	cbz	r1, 800cefc <osMessageQueuePut+0x64>
 800cea8:	bb43      	cbnz	r3, 800cefc <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ceaa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ceac:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ceae:	f000 fecb 	bl	800dc48 <xQueueGenericSendFromISR>
 800ceb2:	2801      	cmp	r0, #1
 800ceb4:	d11e      	bne.n	800cef4 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ceb6:	9b01      	ldr	r3, [sp, #4]
 800ceb8:	b1cb      	cbz	r3, 800ceee <osMessageQueuePut+0x56>
 800ceba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cebe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cec2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cec6:	f3bf 8f4f 	dsb	sy
 800ceca:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cece:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800ced0:	b002      	add	sp, #8
 800ced2:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ced4:	b190      	cbz	r0, 800cefc <osMessageQueuePut+0x64>
 800ced6:	b189      	cbz	r1, 800cefc <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ced8:	4633      	mov	r3, r6
 800ceda:	4622      	mov	r2, r4
 800cedc:	f000 fd36 	bl	800d94c <xQueueGenericSend>
 800cee0:	2801      	cmp	r0, #1
 800cee2:	d004      	beq.n	800ceee <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800cee4:	b134      	cbz	r4, 800cef4 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800cee6:	f06f 0001 	mvn.w	r0, #1
}
 800ceea:	b002      	add	sp, #8
 800ceec:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800ceee:	2000      	movs	r0, #0
}
 800cef0:	b002      	add	sp, #8
 800cef2:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800cef4:	f06f 0002 	mvn.w	r0, #2
}
 800cef8:	b002      	add	sp, #8
 800cefa:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800cefc:	f06f 0003 	mvn.w	r0, #3
 800cf00:	e7e6      	b.n	800ced0 <osMessageQueuePut+0x38>
 800cf02:	bf00      	nop

0800cf04 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800cf04:	b530      	push	{r4, r5, lr}
 800cf06:	461c      	mov	r4, r3
 800cf08:	b083      	sub	sp, #12
 800cf0a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cf0e:	b1bb      	cbz	r3, 800cf40 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cf10:	b348      	cbz	r0, 800cf66 <osMessageQueueGet+0x62>
 800cf12:	b341      	cbz	r1, 800cf66 <osMessageQueueGet+0x62>
 800cf14:	bb3c      	cbnz	r4, 800cf66 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cf16:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cf18:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cf1a:	f001 fa5b 	bl	800e3d4 <xQueueReceiveFromISR>
 800cf1e:	2801      	cmp	r0, #1
 800cf20:	d11d      	bne.n	800cf5e <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cf22:	9b01      	ldr	r3, [sp, #4]
 800cf24:	b1c3      	cbz	r3, 800cf58 <osMessageQueueGet+0x54>
 800cf26:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cf2a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cf2e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cf32:	f3bf 8f4f 	dsb	sy
 800cf36:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cf3a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cf3c:	b003      	add	sp, #12
 800cf3e:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cf40:	b188      	cbz	r0, 800cf66 <osMessageQueueGet+0x62>
 800cf42:	b181      	cbz	r1, 800cf66 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cf44:	4622      	mov	r2, r4
 800cf46:	f000 ff3d 	bl	800ddc4 <xQueueReceive>
 800cf4a:	2801      	cmp	r0, #1
 800cf4c:	d004      	beq.n	800cf58 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800cf4e:	b134      	cbz	r4, 800cf5e <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800cf50:	f06f 0001 	mvn.w	r0, #1
}
 800cf54:	b003      	add	sp, #12
 800cf56:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800cf58:	2000      	movs	r0, #0
}
 800cf5a:	b003      	add	sp, #12
 800cf5c:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800cf5e:	f06f 0002 	mvn.w	r0, #2
}
 800cf62:	b003      	add	sp, #12
 800cf64:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800cf66:	f06f 0003 	mvn.w	r0, #3
 800cf6a:	e7e7      	b.n	800cf3c <osMessageQueueGet+0x38>

0800cf6c <osMessageQueueGetCount>:
 800cf6c:	b130      	cbz	r0, 800cf7c <osMessageQueueGetCount+0x10>
 800cf6e:	f3ef 8305 	mrs	r3, IPSR
 800cf72:	b10b      	cbz	r3, 800cf78 <osMessageQueueGetCount+0xc>
 800cf74:	f001 baa2 	b.w	800e4bc <uxQueueMessagesWaitingFromISR>
 800cf78:	f001 ba8a 	b.w	800e490 <uxQueueMessagesWaiting>
 800cf7c:	4770      	bx	lr
 800cf7e:	bf00      	nop

0800cf80 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800cf80:	4b04      	ldr	r3, [pc, #16]	; (800cf94 <vApplicationGetIdleTaskMemory+0x14>)
 800cf82:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800cf84:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cf86:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800cf88:	4c03      	ldr	r4, [pc, #12]	; (800cf98 <vApplicationGetIdleTaskMemory+0x18>)
 800cf8a:	600c      	str	r4, [r1, #0]
}
 800cf8c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cf90:	6013      	str	r3, [r2, #0]
}
 800cf92:	4770      	bx	lr
 800cf94:	200026c4 	.word	0x200026c4
 800cf98:	200024c4 	.word	0x200024c4

0800cf9c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800cf9c:	4b05      	ldr	r3, [pc, #20]	; (800cfb4 <vApplicationGetTimerTaskMemory+0x18>)
 800cf9e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800cfa0:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cfa2:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800cfa6:	4c04      	ldr	r4, [pc, #16]	; (800cfb8 <vApplicationGetTimerTaskMemory+0x1c>)
 800cfa8:	600c      	str	r4, [r1, #0]
}
 800cfaa:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cfae:	6013      	str	r3, [r2, #0]
}
 800cfb0:	4770      	bx	lr
 800cfb2:	bf00      	nop
 800cfb4:	20002b74 	.word	0x20002b74
 800cfb8:	20002774 	.word	0x20002774

0800cfbc <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800cfbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cfc0:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800cfc2:	f001 ff45 	bl	800ee50 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800cfc6:	4a54      	ldr	r2, [pc, #336]	; (800d118 <pvPortMalloc+0x15c>)
 800cfc8:	6816      	ldr	r6, [r2, #0]
 800cfca:	2e00      	cmp	r6, #0
 800cfcc:	d06e      	beq.n	800d0ac <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800cfce:	4b53      	ldr	r3, [pc, #332]	; (800d11c <pvPortMalloc+0x160>)
 800cfd0:	681f      	ldr	r7, [r3, #0]
 800cfd2:	423d      	tst	r5, r7
 800cfd4:	d12e      	bne.n	800d034 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800cfd6:	b36d      	cbz	r5, 800d034 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800cfd8:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800cfdc:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800cfde:	bf1c      	itt	ne
 800cfe0:	f024 0407 	bicne.w	r4, r4, #7
 800cfe4:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800cfe6:	b32c      	cbz	r4, 800d034 <pvPortMalloc+0x78>
 800cfe8:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d130 <pvPortMalloc+0x174>
 800cfec:	f8dc 5000 	ldr.w	r5, [ip]
 800cff0:	42a5      	cmp	r5, r4
 800cff2:	d31f      	bcc.n	800d034 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800cff4:	484a      	ldr	r0, [pc, #296]	; (800d120 <pvPortMalloc+0x164>)
 800cff6:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800cff8:	e003      	b.n	800d002 <pvPortMalloc+0x46>
 800cffa:	681a      	ldr	r2, [r3, #0]
 800cffc:	b122      	cbz	r2, 800d008 <pvPortMalloc+0x4c>
 800cffe:	4618      	mov	r0, r3
 800d000:	4613      	mov	r3, r2
 800d002:	6859      	ldr	r1, [r3, #4]
 800d004:	42a1      	cmp	r1, r4
 800d006:	d3f8      	bcc.n	800cffa <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800d008:	42b3      	cmp	r3, r6
 800d00a:	d013      	beq.n	800d034 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d00c:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d00e:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d010:	f858 eb08 	ldr.w	lr, [r8], #8
 800d014:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d018:	2a10      	cmp	r2, #16
 800d01a:	d929      	bls.n	800d070 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d01c:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d01e:	0748      	lsls	r0, r1, #29
 800d020:	d00f      	beq.n	800d042 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d022:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d026:	f383 8811 	msr	BASEPRI, r3
 800d02a:	f3bf 8f6f 	isb	sy
 800d02e:	f3bf 8f4f 	dsb	sy
 800d032:	e7fe      	b.n	800d032 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800d034:	f001 ff14 	bl	800ee60 <xTaskResumeAll>
 800d038:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800d03c:	4640      	mov	r0, r8
 800d03e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d042:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d044:	4a36      	ldr	r2, [pc, #216]	; (800d120 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800d046:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d048:	4614      	mov	r4, r2
 800d04a:	6812      	ldr	r2, [r2, #0]
 800d04c:	4291      	cmp	r1, r2
 800d04e:	d8fb      	bhi.n	800d048 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d050:	6860      	ldr	r0, [r4, #4]
 800d052:	eb04 0e00 	add.w	lr, r4, r0
 800d056:	4571      	cmp	r1, lr
 800d058:	d04b      	beq.n	800d0f2 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d05a:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d05e:	eb01 000e 	add.w	r0, r1, lr
 800d062:	4282      	cmp	r2, r0
 800d064:	d051      	beq.n	800d10a <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d066:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d068:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d06a:	bf18      	it	ne
 800d06c:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d06e:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d070:	4a2c      	ldr	r2, [pc, #176]	; (800d124 <pvPortMalloc+0x168>)
 800d072:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d074:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d076:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d078:	bf38      	it	cc
 800d07a:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d07c:	4a2a      	ldr	r2, [pc, #168]	; (800d128 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d07e:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d082:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d084:	2000      	movs	r0, #0
 800d086:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d08a:	6813      	ldr	r3, [r2, #0]
 800d08c:	3301      	adds	r3, #1
 800d08e:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d090:	f001 fee6 	bl	800ee60 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d094:	f018 0f07 	tst.w	r8, #7
 800d098:	d0d0      	beq.n	800d03c <pvPortMalloc+0x80>
 800d09a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d09e:	f383 8811 	msr	BASEPRI, r3
 800d0a2:	f3bf 8f6f 	isb	sy
 800d0a6:	f3bf 8f4f 	dsb	sy
 800d0aa:	e7fe      	b.n	800d0aa <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d0ac:	4b1f      	ldr	r3, [pc, #124]	; (800d12c <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d0ae:	075e      	lsls	r6, r3, #29
 800d0b0:	d118      	bne.n	800d0e4 <pvPortMalloc+0x128>
 800d0b2:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d0b6:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d0b8:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d0ba:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d0be:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d0c0:	4a18      	ldr	r2, [pc, #96]	; (800d124 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d0c2:	4817      	ldr	r0, [pc, #92]	; (800d120 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d0c4:	4c15      	ldr	r4, [pc, #84]	; (800d11c <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d0c6:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d0c8:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d0ca:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d0cc:	4a18      	ldr	r2, [pc, #96]	; (800d130 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d0ce:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d0d2:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d0d4:	2200      	movs	r2, #0
 800d0d6:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d0d8:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d0da:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d0de:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d0e2:	e776      	b.n	800cfd2 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d0e4:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d0e6:	f021 0107 	bic.w	r1, r1, #7
 800d0ea:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d0ee:	460b      	mov	r3, r1
 800d0f0:	e7e2      	b.n	800d0b8 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d0f2:	6849      	ldr	r1, [r1, #4]
 800d0f4:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d0f8:	eb04 010e 	add.w	r1, r4, lr
 800d0fc:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d0fe:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d102:	d001      	beq.n	800d108 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d104:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d106:	e7b2      	b.n	800d06e <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d108:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d10a:	42b2      	cmp	r2, r6
 800d10c:	d0ab      	beq.n	800d066 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d10e:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d110:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d112:	4470      	add	r0, lr
 800d114:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d116:	e7a6      	b.n	800d066 <pvPortMalloc+0xaa>
 800d118:	20002c20 	.word	0x20002c20
 800d11c:	20012c24 	.word	0x20012c24
 800d120:	20012c38 	.word	0x20012c38
 800d124:	20012c2c 	.word	0x20012c2c
 800d128:	20012c30 	.word	0x20012c30
 800d12c:	20002c24 	.word	0x20002c24
 800d130:	20012c28 	.word	0x20012c28

0800d134 <vPortFree>:
	if( pv != NULL )
 800d134:	b1d0      	cbz	r0, 800d16c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d136:	4a2c      	ldr	r2, [pc, #176]	; (800d1e8 <vPortFree+0xb4>)
 800d138:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d13c:	6812      	ldr	r2, [r2, #0]
 800d13e:	4213      	tst	r3, r2
 800d140:	d00b      	beq.n	800d15a <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d142:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d146:	b191      	cbz	r1, 800d16e <vPortFree+0x3a>
 800d148:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d14c:	f383 8811 	msr	BASEPRI, r3
 800d150:	f3bf 8f6f 	isb	sy
 800d154:	f3bf 8f4f 	dsb	sy
 800d158:	e7fe      	b.n	800d158 <vPortFree+0x24>
 800d15a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d15e:	f383 8811 	msr	BASEPRI, r3
 800d162:	f3bf 8f6f 	isb	sy
 800d166:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d16a:	e7fe      	b.n	800d16a <vPortFree+0x36>
 800d16c:	4770      	bx	lr
{
 800d16e:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d170:	ea23 0302 	bic.w	r3, r3, r2
{
 800d174:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d176:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d17a:	4c1c      	ldr	r4, [pc, #112]	; (800d1ec <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d17c:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d17e:	f001 fe67 	bl	800ee50 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d182:	9801      	ldr	r0, [sp, #4]
 800d184:	6822      	ldr	r2, [r4, #0]
 800d186:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d18a:	4b19      	ldr	r3, [pc, #100]	; (800d1f0 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d18c:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d18e:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d190:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d192:	461a      	mov	r2, r3
 800d194:	681b      	ldr	r3, [r3, #0]
 800d196:	4298      	cmp	r0, r3
 800d198:	d8fb      	bhi.n	800d192 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d19a:	6854      	ldr	r4, [r2, #4]
 800d19c:	eb02 0e04 	add.w	lr, r2, r4
 800d1a0:	4570      	cmp	r0, lr
 800d1a2:	d010      	beq.n	800d1c6 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d1a4:	eb00 0c01 	add.w	ip, r0, r1
 800d1a8:	4563      	cmp	r3, ip
 800d1aa:	d014      	beq.n	800d1d6 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d1ac:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d1ae:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d1b0:	bf18      	it	ne
 800d1b2:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d1b4:	4a0f      	ldr	r2, [pc, #60]	; (800d1f4 <vPortFree+0xc0>)
 800d1b6:	6813      	ldr	r3, [r2, #0]
 800d1b8:	3301      	adds	r3, #1
 800d1ba:	6013      	str	r3, [r2, #0]
}
 800d1bc:	b002      	add	sp, #8
 800d1be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d1c2:	f001 be4d 	b.w	800ee60 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d1c6:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d1c8:	1850      	adds	r0, r2, r1
 800d1ca:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d1cc:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d1ce:	d001      	beq.n	800d1d4 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d1d0:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d1d2:	e7ef      	b.n	800d1b4 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d1d4:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d1d6:	4c08      	ldr	r4, [pc, #32]	; (800d1f8 <vPortFree+0xc4>)
 800d1d8:	6824      	ldr	r4, [r4, #0]
 800d1da:	42a3      	cmp	r3, r4
 800d1dc:	d0e6      	beq.n	800d1ac <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d1de:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d1e2:	4421      	add	r1, r4
 800d1e4:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d1e6:	e7e1      	b.n	800d1ac <vPortFree+0x78>
 800d1e8:	20012c24 	.word	0x20012c24
 800d1ec:	20012c28 	.word	0x20012c28
 800d1f0:	20012c38 	.word	0x20012c38
 800d1f4:	20012c34 	.word	0x20012c34
 800d1f8:	20002c20 	.word	0x20002c20

0800d1fc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d1fc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d200:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d204:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d206:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d20a:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d20e:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d210:	4770      	bx	lr
 800d212:	bf00      	nop

0800d214 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d214:	2300      	movs	r3, #0
 800d216:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d218:	4770      	bx	lr
 800d21a:	bf00      	nop

0800d21c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d21c:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d21e:	689a      	ldr	r2, [r3, #8]
 800d220:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d222:	6802      	ldr	r2, [r0, #0]
{
 800d224:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d226:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d228:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d22a:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d22c:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d22e:	6099      	str	r1, [r3, #8]
}
 800d230:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d234:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d236:	6002      	str	r2, [r0, #0]
}
 800d238:	4770      	bx	lr
 800d23a:	bf00      	nop

0800d23c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d23c:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d23e:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d240:	1c6b      	adds	r3, r5, #1
 800d242:	d010      	beq.n	800d266 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d244:	f100 0308 	add.w	r3, r0, #8
 800d248:	461c      	mov	r4, r3
 800d24a:	685b      	ldr	r3, [r3, #4]
 800d24c:	681a      	ldr	r2, [r3, #0]
 800d24e:	42aa      	cmp	r2, r5
 800d250:	d9fa      	bls.n	800d248 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d252:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d254:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d256:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d258:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d25a:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d25c:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d25e:	6108      	str	r0, [r1, #16]
}
 800d260:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d262:	6002      	str	r2, [r0, #0]
}
 800d264:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d266:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d268:	6863      	ldr	r3, [r4, #4]
 800d26a:	e7f2      	b.n	800d252 <vListInsert+0x16>

0800d26c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d26c:	6903      	ldr	r3, [r0, #16]
{
 800d26e:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d270:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d274:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d276:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d278:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d27a:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d27c:	bf08      	it	eq
 800d27e:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d280:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d282:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d286:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d288:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d28a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d28c:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d28e:	6818      	ldr	r0, [r3, #0]
}
 800d290:	4770      	bx	lr
 800d292:	bf00      	nop

0800d294 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d294:	4808      	ldr	r0, [pc, #32]	; (800d2b8 <prvPortStartFirstTask+0x24>)
 800d296:	6800      	ldr	r0, [r0, #0]
 800d298:	6800      	ldr	r0, [r0, #0]
 800d29a:	f380 8808 	msr	MSP, r0
 800d29e:	f04f 0000 	mov.w	r0, #0
 800d2a2:	f380 8814 	msr	CONTROL, r0
 800d2a6:	b662      	cpsie	i
 800d2a8:	b661      	cpsie	f
 800d2aa:	f3bf 8f4f 	dsb	sy
 800d2ae:	f3bf 8f6f 	isb	sy
 800d2b2:	df00      	svc	0
 800d2b4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d2b6:	0000      	.short	0x0000
 800d2b8:	e000ed08 	.word	0xe000ed08

0800d2bc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d2bc:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d2cc <vPortEnableVFP+0x10>
 800d2c0:	6801      	ldr	r1, [r0, #0]
 800d2c2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d2c6:	6001      	str	r1, [r0, #0]
 800d2c8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d2ca:	0000      	.short	0x0000
 800d2cc:	e000ed88 	.word	0xe000ed88

0800d2d0 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d2d0:	4b0e      	ldr	r3, [pc, #56]	; (800d30c <prvTaskExitError+0x3c>)
 800d2d2:	681b      	ldr	r3, [r3, #0]
{
 800d2d4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d2d6:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d2d8:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d2da:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d2dc:	d008      	beq.n	800d2f0 <prvTaskExitError+0x20>
 800d2de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2e2:	f383 8811 	msr	BASEPRI, r3
 800d2e6:	f3bf 8f6f 	isb	sy
 800d2ea:	f3bf 8f4f 	dsb	sy
 800d2ee:	e7fe      	b.n	800d2ee <prvTaskExitError+0x1e>
 800d2f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2f4:	f383 8811 	msr	BASEPRI, r3
 800d2f8:	f3bf 8f6f 	isb	sy
 800d2fc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d300:	9b01      	ldr	r3, [sp, #4]
 800d302:	2b00      	cmp	r3, #0
 800d304:	d0fc      	beq.n	800d300 <prvTaskExitError+0x30>
}
 800d306:	b002      	add	sp, #8
 800d308:	4770      	bx	lr
 800d30a:	bf00      	nop
 800d30c:	200000a0 	.word	0x200000a0

0800d310 <pxPortInitialiseStack>:
{
 800d310:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d312:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d316:	4c07      	ldr	r4, [pc, #28]	; (800d334 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d318:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d31c:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d320:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d324:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d328:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d32c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d330:	3844      	subs	r0, #68	; 0x44
 800d332:	4770      	bx	lr
 800d334:	0800d2d1 	.word	0x0800d2d1
	...

0800d340 <SVC_Handler>:
	__asm volatile (
 800d340:	4b07      	ldr	r3, [pc, #28]	; (800d360 <pxCurrentTCBConst2>)
 800d342:	6819      	ldr	r1, [r3, #0]
 800d344:	6808      	ldr	r0, [r1, #0]
 800d346:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d34a:	f380 8809 	msr	PSP, r0
 800d34e:	f3bf 8f6f 	isb	sy
 800d352:	f04f 0000 	mov.w	r0, #0
 800d356:	f380 8811 	msr	BASEPRI, r0
 800d35a:	4770      	bx	lr
 800d35c:	f3af 8000 	nop.w

0800d360 <pxCurrentTCBConst2>:
 800d360:	20012c88 	.word	0x20012c88

0800d364 <vPortEnterCritical>:
 800d364:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d368:	f383 8811 	msr	BASEPRI, r3
 800d36c:	f3bf 8f6f 	isb	sy
 800d370:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d374:	4a0b      	ldr	r2, [pc, #44]	; (800d3a4 <vPortEnterCritical+0x40>)
 800d376:	6813      	ldr	r3, [r2, #0]
 800d378:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d37a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d37c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d37e:	d000      	beq.n	800d382 <vPortEnterCritical+0x1e>
}
 800d380:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d382:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d386:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d38a:	b2db      	uxtb	r3, r3
 800d38c:	2b00      	cmp	r3, #0
 800d38e:	d0f7      	beq.n	800d380 <vPortEnterCritical+0x1c>
 800d390:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d394:	f383 8811 	msr	BASEPRI, r3
 800d398:	f3bf 8f6f 	isb	sy
 800d39c:	f3bf 8f4f 	dsb	sy
 800d3a0:	e7fe      	b.n	800d3a0 <vPortEnterCritical+0x3c>
 800d3a2:	bf00      	nop
 800d3a4:	200000a0 	.word	0x200000a0

0800d3a8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d3a8:	4a08      	ldr	r2, [pc, #32]	; (800d3cc <vPortExitCritical+0x24>)
 800d3aa:	6813      	ldr	r3, [r2, #0]
 800d3ac:	b943      	cbnz	r3, 800d3c0 <vPortExitCritical+0x18>
 800d3ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3b2:	f383 8811 	msr	BASEPRI, r3
 800d3b6:	f3bf 8f6f 	isb	sy
 800d3ba:	f3bf 8f4f 	dsb	sy
 800d3be:	e7fe      	b.n	800d3be <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d3c0:	3b01      	subs	r3, #1
 800d3c2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d3c4:	b90b      	cbnz	r3, 800d3ca <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d3c6:	f383 8811 	msr	BASEPRI, r3
}
 800d3ca:	4770      	bx	lr
 800d3cc:	200000a0 	.word	0x200000a0

0800d3d0 <PendSV_Handler>:
	__asm volatile
 800d3d0:	f3ef 8009 	mrs	r0, PSP
 800d3d4:	f3bf 8f6f 	isb	sy
 800d3d8:	4b15      	ldr	r3, [pc, #84]	; (800d430 <pxCurrentTCBConst>)
 800d3da:	681a      	ldr	r2, [r3, #0]
 800d3dc:	f01e 0f10 	tst.w	lr, #16
 800d3e0:	bf08      	it	eq
 800d3e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d3e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3ea:	6010      	str	r0, [r2, #0]
 800d3ec:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d3f0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d3f4:	f380 8811 	msr	BASEPRI, r0
 800d3f8:	f3bf 8f4f 	dsb	sy
 800d3fc:	f3bf 8f6f 	isb	sy
 800d400:	f001 fd54 	bl	800eeac <vTaskSwitchContext>
 800d404:	f04f 0000 	mov.w	r0, #0
 800d408:	f380 8811 	msr	BASEPRI, r0
 800d40c:	bc09      	pop	{r0, r3}
 800d40e:	6819      	ldr	r1, [r3, #0]
 800d410:	6808      	ldr	r0, [r1, #0]
 800d412:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d416:	f01e 0f10 	tst.w	lr, #16
 800d41a:	bf08      	it	eq
 800d41c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d420:	f380 8809 	msr	PSP, r0
 800d424:	f3bf 8f6f 	isb	sy
 800d428:	4770      	bx	lr
 800d42a:	bf00      	nop
 800d42c:	f3af 8000 	nop.w

0800d430 <pxCurrentTCBConst>:
 800d430:	20012c88 	.word	0x20012c88

0800d434 <xPortSysTickHandler>:
{
 800d434:	b508      	push	{r3, lr}
	__asm volatile
 800d436:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d43a:	f383 8811 	msr	BASEPRI, r3
 800d43e:	f3bf 8f6f 	isb	sy
 800d442:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d446:	f001 fd21 	bl	800ee8c <xTaskIncrementTick>
 800d44a:	b128      	cbz	r0, 800d458 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d44c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d450:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d454:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d458:	2300      	movs	r3, #0
 800d45a:	f383 8811 	msr	BASEPRI, r3
}
 800d45e:	bd08      	pop	{r3, pc}

0800d460 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d460:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d464:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d466:	4906      	ldr	r1, [pc, #24]	; (800d480 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d468:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d46a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d46c:	680b      	ldr	r3, [r1, #0]
 800d46e:	4905      	ldr	r1, [pc, #20]	; (800d484 <vPortSetupTimerInterrupt+0x24>)
 800d470:	fba1 1303 	umull	r1, r3, r1, r3
 800d474:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d476:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d478:	3b01      	subs	r3, #1
 800d47a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d47c:	6110      	str	r0, [r2, #16]
}
 800d47e:	4770      	bx	lr
 800d480:	20000094 	.word	0x20000094
 800d484:	10624dd3 	.word	0x10624dd3

0800d488 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d488:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d48c:	4a49      	ldr	r2, [pc, #292]	; (800d5b4 <xPortStartScheduler+0x12c>)
 800d48e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d492:	4291      	cmp	r1, r2
 800d494:	d043      	beq.n	800d51e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d496:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d49a:	4b47      	ldr	r3, [pc, #284]	; (800d5b8 <xPortStartScheduler+0x130>)
 800d49c:	429a      	cmp	r2, r3
 800d49e:	d035      	beq.n	800d50c <xPortStartScheduler+0x84>
{
 800d4a0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d4a2:	4b46      	ldr	r3, [pc, #280]	; (800d5bc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d4a4:	4846      	ldr	r0, [pc, #280]	; (800d5c0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d4a6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d4a8:	4c46      	ldr	r4, [pc, #280]	; (800d5c4 <xPortStartScheduler+0x13c>)
{
 800d4aa:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d4ac:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d4ae:	b2d2      	uxtb	r2, r2
 800d4b0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d4b2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d4b4:	781b      	ldrb	r3, [r3, #0]
 800d4b6:	b2db      	uxtb	r3, r3
 800d4b8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d4bc:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d4c0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d4c4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d4c8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d4ca:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d4cc:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d4ce:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d4d0:	bf48      	it	mi
 800d4d2:	2206      	movmi	r2, #6
 800d4d4:	d511      	bpl.n	800d4fa <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d4d6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d4da:	005b      	lsls	r3, r3, #1
 800d4dc:	b2db      	uxtb	r3, r3
 800d4de:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d4e2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d4e6:	0609      	lsls	r1, r1, #24
 800d4e8:	4610      	mov	r0, r2
 800d4ea:	f102 32ff 	add.w	r2, r2, #4294967295
 800d4ee:	d4f2      	bmi.n	800d4d6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d4f0:	2803      	cmp	r0, #3
 800d4f2:	6020      	str	r0, [r4, #0]
 800d4f4:	f88d 3007 	strb.w	r3, [sp, #7]
 800d4f8:	d01a      	beq.n	800d530 <xPortStartScheduler+0xa8>
	__asm volatile
 800d4fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4fe:	f383 8811 	msr	BASEPRI, r3
 800d502:	f3bf 8f6f 	isb	sy
 800d506:	f3bf 8f4f 	dsb	sy
 800d50a:	e7fe      	b.n	800d50a <xPortStartScheduler+0x82>
 800d50c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d510:	f383 8811 	msr	BASEPRI, r3
 800d514:	f3bf 8f6f 	isb	sy
 800d518:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d51c:	e7fe      	b.n	800d51c <xPortStartScheduler+0x94>
 800d51e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d522:	f383 8811 	msr	BASEPRI, r3
 800d526:	f3bf 8f6f 	isb	sy
 800d52a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d52e:	e7fe      	b.n	800d52e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d530:	9b02      	ldr	r3, [sp, #8]
 800d532:	4a22      	ldr	r2, [pc, #136]	; (800d5bc <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d534:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d538:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d53c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d53e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d540:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d542:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d546:	4c20      	ldr	r4, [pc, #128]	; (800d5c8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d548:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d54c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d550:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d554:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d558:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d55c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d55e:	f7ff ff7f 	bl	800d460 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d562:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d564:	f7ff feaa 	bl	800d2bc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d568:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d56c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d570:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d574:	f7ff fe8e 	bl	800d294 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d578:	f001 fc98 	bl	800eeac <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d57c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d57e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d580:	3301      	adds	r3, #1
 800d582:	d008      	beq.n	800d596 <xPortStartScheduler+0x10e>
 800d584:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d588:	f383 8811 	msr	BASEPRI, r3
 800d58c:	f3bf 8f6f 	isb	sy
 800d590:	f3bf 8f4f 	dsb	sy
 800d594:	e7fe      	b.n	800d594 <xPortStartScheduler+0x10c>
 800d596:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d59a:	f383 8811 	msr	BASEPRI, r3
 800d59e:	f3bf 8f6f 	isb	sy
 800d5a2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d5a6:	9b03      	ldr	r3, [sp, #12]
 800d5a8:	2b00      	cmp	r3, #0
 800d5aa:	d0fc      	beq.n	800d5a6 <xPortStartScheduler+0x11e>
}
 800d5ac:	2000      	movs	r0, #0
 800d5ae:	b004      	add	sp, #16
 800d5b0:	bd70      	pop	{r4, r5, r6, pc}
 800d5b2:	bf00      	nop
 800d5b4:	410fc271 	.word	0x410fc271
 800d5b8:	410fc270 	.word	0x410fc270
 800d5bc:	e000e400 	.word	0xe000e400
 800d5c0:	20012c40 	.word	0x20012c40
 800d5c4:	20012c44 	.word	0x20012c44
 800d5c8:	200000a0 	.word	0x200000a0

0800d5cc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d5cc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d5d0:	2b0f      	cmp	r3, #15
 800d5d2:	d90e      	bls.n	800d5f2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d5d4:	4911      	ldr	r1, [pc, #68]	; (800d61c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d5d6:	4a12      	ldr	r2, [pc, #72]	; (800d620 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d5d8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d5da:	7812      	ldrb	r2, [r2, #0]
 800d5dc:	429a      	cmp	r2, r3
 800d5de:	d908      	bls.n	800d5f2 <vPortValidateInterruptPriority+0x26>
 800d5e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5e4:	f383 8811 	msr	BASEPRI, r3
 800d5e8:	f3bf 8f6f 	isb	sy
 800d5ec:	f3bf 8f4f 	dsb	sy
 800d5f0:	e7fe      	b.n	800d5f0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d5f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d5f6:	4a0b      	ldr	r2, [pc, #44]	; (800d624 <vPortValidateInterruptPriority+0x58>)
 800d5f8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d5fc:	6812      	ldr	r2, [r2, #0]
 800d5fe:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d602:	4293      	cmp	r3, r2
 800d604:	d908      	bls.n	800d618 <vPortValidateInterruptPriority+0x4c>
 800d606:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d60a:	f383 8811 	msr	BASEPRI, r3
 800d60e:	f3bf 8f6f 	isb	sy
 800d612:	f3bf 8f4f 	dsb	sy
 800d616:	e7fe      	b.n	800d616 <vPortValidateInterruptPriority+0x4a>
	}
 800d618:	4770      	bx	lr
 800d61a:	bf00      	nop
 800d61c:	e000e3f0 	.word	0xe000e3f0
 800d620:	20012c40 	.word	0x20012c40
 800d624:	20012c44 	.word	0x20012c44

0800d628 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d628:	b570      	push	{r4, r5, r6, lr}
 800d62a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d62c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d62e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d630:	b920      	cbnz	r0, 800d63c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d632:	6825      	ldr	r5, [r4, #0]
 800d634:	b34d      	cbz	r5, 800d68a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d636:	3601      	adds	r6, #1
 800d638:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d63a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d63c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d63e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d640:	b97d      	cbnz	r5, 800d662 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d642:	6860      	ldr	r0, [r4, #4]
 800d644:	f01d fd67 	bl	802b116 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d648:	6863      	ldr	r3, [r4, #4]
 800d64a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d64c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d64e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d650:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d652:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d654:	bf24      	itt	cs
 800d656:	6823      	ldrcs	r3, [r4, #0]
 800d658:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d65a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d65c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d65e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d660:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d662:	68e0      	ldr	r0, [r4, #12]
 800d664:	f01d fd57 	bl	802b116 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d668:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d66a:	68e3      	ldr	r3, [r4, #12]
 800d66c:	4251      	negs	r1, r2
 800d66e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d670:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d672:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d674:	4293      	cmp	r3, r2
 800d676:	d202      	bcs.n	800d67e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d678:	68a3      	ldr	r3, [r4, #8]
 800d67a:	440b      	add	r3, r1
 800d67c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d67e:	2d02      	cmp	r5, #2
 800d680:	d008      	beq.n	800d694 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d682:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d684:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d686:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d688:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d68a:	68a0      	ldr	r0, [r4, #8]
 800d68c:	f001 fde0 	bl	800f250 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d690:	60a5      	str	r5, [r4, #8]
 800d692:	e7d0      	b.n	800d636 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d694:	2e01      	cmp	r6, #1
 800d696:	bf38      	it	cc
 800d698:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d69a:	2000      	movs	r0, #0
 800d69c:	e7cc      	b.n	800d638 <prvCopyDataToQueue+0x10>
 800d69e:	bf00      	nop

0800d6a0 <xQueueGenericCreateStatic>:
	{
 800d6a0:	b530      	push	{r4, r5, lr}
 800d6a2:	b083      	sub	sp, #12
 800d6a4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d6a8:	b940      	cbnz	r0, 800d6bc <xQueueGenericCreateStatic+0x1c>
 800d6aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6ae:	f383 8811 	msr	BASEPRI, r3
 800d6b2:	f3bf 8f6f 	isb	sy
 800d6b6:	f3bf 8f4f 	dsb	sy
 800d6ba:	e7fe      	b.n	800d6ba <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d6bc:	461d      	mov	r5, r3
 800d6be:	b17b      	cbz	r3, 800d6e0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d6c0:	b302      	cbz	r2, 800d704 <xQueueGenericCreateStatic+0x64>
 800d6c2:	b1b1      	cbz	r1, 800d6f2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d6c4:	2350      	movs	r3, #80	; 0x50
 800d6c6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d6c8:	9b01      	ldr	r3, [sp, #4]
 800d6ca:	2b50      	cmp	r3, #80	; 0x50
 800d6cc:	d023      	beq.n	800d716 <xQueueGenericCreateStatic+0x76>
 800d6ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6d2:	f383 8811 	msr	BASEPRI, r3
 800d6d6:	f3bf 8f6f 	isb	sy
 800d6da:	f3bf 8f4f 	dsb	sy
 800d6de:	e7fe      	b.n	800d6de <xQueueGenericCreateStatic+0x3e>
 800d6e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6e4:	f383 8811 	msr	BASEPRI, r3
 800d6e8:	f3bf 8f6f 	isb	sy
 800d6ec:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d6f0:	e7fe      	b.n	800d6f0 <xQueueGenericCreateStatic+0x50>
 800d6f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6f6:	f383 8811 	msr	BASEPRI, r3
 800d6fa:	f3bf 8f6f 	isb	sy
 800d6fe:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d702:	e7fe      	b.n	800d702 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d704:	bb89      	cbnz	r1, 800d76a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d706:	2250      	movs	r2, #80	; 0x50
 800d708:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d70a:	9a01      	ldr	r2, [sp, #4]
 800d70c:	2a50      	cmp	r2, #80	; 0x50
 800d70e:	d1de      	bne.n	800d6ce <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d710:	9a01      	ldr	r2, [sp, #4]
 800d712:	462a      	mov	r2, r5
 800d714:	e000      	b.n	800d718 <xQueueGenericCreateStatic+0x78>
 800d716:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d718:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d71a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d71c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d720:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d724:	f7ff fe1e 	bl	800d364 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d728:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d72c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d72e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d730:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d734:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d736:	4401      	add	r1, r0
 800d738:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d73a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d73c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d73e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d740:	21ff      	movs	r1, #255	; 0xff
 800d742:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d746:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d748:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d74c:	f105 0010 	add.w	r0, r5, #16
 800d750:	f7ff fd54 	bl	800d1fc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d754:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d758:	f7ff fd50 	bl	800d1fc <vListInitialise>
	taskEXIT_CRITICAL();
 800d75c:	f7ff fe24 	bl	800d3a8 <vPortExitCritical>
	}
 800d760:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d762:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d766:	b003      	add	sp, #12
 800d768:	bd30      	pop	{r4, r5, pc}
 800d76a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d76e:	f383 8811 	msr	BASEPRI, r3
 800d772:	f3bf 8f6f 	isb	sy
 800d776:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d77a:	e7fe      	b.n	800d77a <xQueueGenericCreateStatic+0xda>

0800d77c <xQueueGenericCreate>:
	{
 800d77c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d77e:	b940      	cbnz	r0, 800d792 <xQueueGenericCreate+0x16>
 800d780:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d784:	f383 8811 	msr	BASEPRI, r3
 800d788:	f3bf 8f6f 	isb	sy
 800d78c:	f3bf 8f4f 	dsb	sy
 800d790:	e7fe      	b.n	800d790 <xQueueGenericCreate+0x14>
 800d792:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d794:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d798:	3050      	adds	r0, #80	; 0x50
 800d79a:	460e      	mov	r6, r1
 800d79c:	4617      	mov	r7, r2
 800d79e:	f7ff fc0d 	bl	800cfbc <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d7a2:	4604      	mov	r4, r0
 800d7a4:	b340      	cbz	r0, 800d7f8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d7a6:	2300      	movs	r3, #0
 800d7a8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d7ac:	b336      	cbz	r6, 800d7fc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7ae:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d7b2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d7b4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d7b8:	f7ff fdd4 	bl	800d364 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7bc:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d7c0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d7c2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7c4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7c8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7ca:	440a      	add	r2, r1
 800d7cc:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d7ce:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7d0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d7d2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d7d4:	22ff      	movs	r2, #255	; 0xff
 800d7d6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7da:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d7dc:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d7e0:	f104 0010 	add.w	r0, r4, #16
 800d7e4:	f7ff fd0a 	bl	800d1fc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d7e8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d7ec:	f7ff fd06 	bl	800d1fc <vListInitialise>
	taskEXIT_CRITICAL();
 800d7f0:	f7ff fdda 	bl	800d3a8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d7f4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d7f8:	4620      	mov	r0, r4
 800d7fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d7fc:	4603      	mov	r3, r0
 800d7fe:	e7d8      	b.n	800d7b2 <xQueueGenericCreate+0x36>

0800d800 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d800:	b940      	cbnz	r0, 800d814 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d802:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d806:	f383 8811 	msr	BASEPRI, r3
 800d80a:	f3bf 8f6f 	isb	sy
 800d80e:	f3bf 8f4f 	dsb	sy
 800d812:	e7fe      	b.n	800d812 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d814:	4288      	cmp	r0, r1
 800d816:	d208      	bcs.n	800d82a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d818:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d81c:	f383 8811 	msr	BASEPRI, r3
 800d820:	f3bf 8f6f 	isb	sy
 800d824:	f3bf 8f4f 	dsb	sy
 800d828:	e7fe      	b.n	800d828 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d82a:	b530      	push	{r4, r5, lr}
 800d82c:	4615      	mov	r5, r2
 800d82e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d830:	2a00      	cmp	r2, #0
 800d832:	d03c      	beq.n	800d8ae <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d834:	2350      	movs	r3, #80	; 0x50
 800d836:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d838:	9b03      	ldr	r3, [sp, #12]
 800d83a:	2b50      	cmp	r3, #80	; 0x50
 800d83c:	d008      	beq.n	800d850 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d83e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d842:	f383 8811 	msr	BASEPRI, r3
 800d846:	f3bf 8f6f 	isb	sy
 800d84a:	f3bf 8f4f 	dsb	sy
 800d84e:	e7fe      	b.n	800d84e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d850:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d852:	2301      	movs	r3, #1
 800d854:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d858:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d85a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d85e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d860:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d862:	f7ff fd7f 	bl	800d364 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d866:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d86a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d86c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d86e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d872:	1ac3      	subs	r3, r0, r3
 800d874:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d876:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d878:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d87c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d880:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d882:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d884:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d888:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d88a:	f105 0010 	add.w	r0, r5, #16
 800d88e:	f7ff fcb5 	bl	800d1fc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d892:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d896:	f7ff fcb1 	bl	800d1fc <vListInitialise>
	taskEXIT_CRITICAL();
 800d89a:	f7ff fd85 	bl	800d3a8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d89e:	9901      	ldr	r1, [sp, #4]
 800d8a0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d8a2:	2302      	movs	r3, #2
	}
 800d8a4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d8a6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d8aa:	b005      	add	sp, #20
 800d8ac:	bd30      	pop	{r4, r5, pc}
 800d8ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8b2:	f383 8811 	msr	BASEPRI, r3
 800d8b6:	f3bf 8f6f 	isb	sy
 800d8ba:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d8be:	e7fe      	b.n	800d8be <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d8c0 <xQueueCreateCountingSemaphore>:
	{
 800d8c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d8c2:	b940      	cbnz	r0, 800d8d6 <xQueueCreateCountingSemaphore+0x16>
 800d8c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8c8:	f383 8811 	msr	BASEPRI, r3
 800d8cc:	f3bf 8f6f 	isb	sy
 800d8d0:	f3bf 8f4f 	dsb	sy
 800d8d4:	e7fe      	b.n	800d8d4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d8d6:	4288      	cmp	r0, r1
 800d8d8:	460e      	mov	r6, r1
 800d8da:	4604      	mov	r4, r0
 800d8dc:	d208      	bcs.n	800d8f0 <xQueueCreateCountingSemaphore+0x30>
 800d8de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8e2:	f383 8811 	msr	BASEPRI, r3
 800d8e6:	f3bf 8f6f 	isb	sy
 800d8ea:	f3bf 8f4f 	dsb	sy
 800d8ee:	e7fe      	b.n	800d8ee <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d8f0:	2050      	movs	r0, #80	; 0x50
 800d8f2:	f7ff fb63 	bl	800cfbc <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d8f6:	4605      	mov	r5, r0
 800d8f8:	b330      	cbz	r0, 800d948 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d8fa:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d8fc:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d900:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d904:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d906:	f7ff fd2d 	bl	800d364 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d90a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d90e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d910:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d912:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d916:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d918:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d91a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d91c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d91e:	22ff      	movs	r2, #255	; 0xff
 800d920:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d924:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d926:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d928:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d92c:	f105 0010 	add.w	r0, r5, #16
 800d930:	f7ff fc64 	bl	800d1fc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d934:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d938:	f7ff fc60 	bl	800d1fc <vListInitialise>
	taskEXIT_CRITICAL();
 800d93c:	f7ff fd34 	bl	800d3a8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d940:	2302      	movs	r3, #2
 800d942:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d946:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800d948:	4628      	mov	r0, r5
 800d94a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d94c <xQueueGenericSend>:
{
 800d94c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d950:	b085      	sub	sp, #20
 800d952:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800d954:	2800      	cmp	r0, #0
 800d956:	f000 80a4 	beq.w	800daa2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d95a:	4688      	mov	r8, r1
 800d95c:	461f      	mov	r7, r3
 800d95e:	4604      	mov	r4, r0
 800d960:	2900      	cmp	r1, #0
 800d962:	f000 8091 	beq.w	800da88 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d966:	2f02      	cmp	r7, #2
 800d968:	d10b      	bne.n	800d982 <xQueueGenericSend+0x36>
 800d96a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d96c:	2b01      	cmp	r3, #1
 800d96e:	d008      	beq.n	800d982 <xQueueGenericSend+0x36>
 800d970:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d974:	f383 8811 	msr	BASEPRI, r3
 800d978:	f3bf 8f6f 	isb	sy
 800d97c:	f3bf 8f4f 	dsb	sy
 800d980:	e7fe      	b.n	800d980 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d982:	f001 fc0f 	bl	800f1a4 <xTaskGetSchedulerState>
 800d986:	4605      	mov	r5, r0
 800d988:	2800      	cmp	r0, #0
 800d98a:	f000 8093 	beq.w	800dab4 <xQueueGenericSend+0x168>
 800d98e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d990:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d994:	f7ff fce6 	bl	800d364 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d998:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d99a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d99c:	429a      	cmp	r2, r3
 800d99e:	f0c0 80ef 	bcc.w	800db80 <xQueueGenericSend+0x234>
 800d9a2:	2f02      	cmp	r7, #2
 800d9a4:	f000 80ec 	beq.w	800db80 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d9a8:	9801      	ldr	r0, [sp, #4]
 800d9aa:	2800      	cmp	r0, #0
 800d9ac:	f000 8101 	beq.w	800dbb2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800d9b0:	2d00      	cmp	r5, #0
 800d9b2:	f000 80e1 	beq.w	800db78 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800d9b6:	f7ff fcf7 	bl	800d3a8 <vPortExitCritical>
		vTaskSuspendAll();
 800d9ba:	f001 fa49 	bl	800ee50 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d9be:	f7ff fcd1 	bl	800d364 <vPortEnterCritical>
 800d9c2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d9c6:	2bff      	cmp	r3, #255	; 0xff
 800d9c8:	bf04      	itt	eq
 800d9ca:	2300      	moveq	r3, #0
 800d9cc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d9d0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d9d4:	2bff      	cmp	r3, #255	; 0xff
 800d9d6:	bf04      	itt	eq
 800d9d8:	2300      	moveq	r3, #0
 800d9da:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d9de:	f7ff fce3 	bl	800d3a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d9e2:	a901      	add	r1, sp, #4
 800d9e4:	a802      	add	r0, sp, #8
 800d9e6:	f001 fb8f 	bl	800f108 <xTaskCheckForTimeOut>
 800d9ea:	2800      	cmp	r0, #0
 800d9ec:	f040 80e6 	bne.w	800dbbc <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d9f0:	f7ff fcb8 	bl	800d364 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d9f4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d9f6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d9f8:	429a      	cmp	r2, r3
 800d9fa:	d068      	beq.n	800dace <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d9fc:	f7ff fcd4 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800da00:	f7ff fcb0 	bl	800d364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800da04:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800da08:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da0a:	2d00      	cmp	r5, #0
 800da0c:	dc04      	bgt.n	800da18 <xQueueGenericSend+0xcc>
 800da0e:	e011      	b.n	800da34 <xQueueGenericSend+0xe8>
			--cTxLock;
 800da10:	1e6a      	subs	r2, r5, #1
 800da12:	b2d3      	uxtb	r3, r2
 800da14:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da16:	b16b      	cbz	r3, 800da34 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da18:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da1a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da1c:	b153      	cbz	r3, 800da34 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da1e:	f001 fb1f 	bl	800f060 <xTaskRemoveFromEventList>
 800da22:	2800      	cmp	r0, #0
 800da24:	d0f4      	beq.n	800da10 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800da26:	f001 fbb7 	bl	800f198 <vTaskMissedYield>
			--cTxLock;
 800da2a:	1e6a      	subs	r2, r5, #1
 800da2c:	b2d3      	uxtb	r3, r2
 800da2e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da30:	2b00      	cmp	r3, #0
 800da32:	d1f1      	bne.n	800da18 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800da34:	23ff      	movs	r3, #255	; 0xff
 800da36:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800da3a:	f7ff fcb5 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800da3e:	f7ff fc91 	bl	800d364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800da42:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800da46:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da48:	2d00      	cmp	r5, #0
 800da4a:	dd14      	ble.n	800da76 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da4c:	f104 0910 	add.w	r9, r4, #16
 800da50:	e003      	b.n	800da5a <xQueueGenericSend+0x10e>
				--cRxLock;
 800da52:	1e6a      	subs	r2, r5, #1
 800da54:	b2d3      	uxtb	r3, r2
 800da56:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da58:	b16b      	cbz	r3, 800da76 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da5a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da5c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da5e:	b153      	cbz	r3, 800da76 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da60:	f001 fafe 	bl	800f060 <xTaskRemoveFromEventList>
 800da64:	2800      	cmp	r0, #0
 800da66:	d0f4      	beq.n	800da52 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800da68:	f001 fb96 	bl	800f198 <vTaskMissedYield>
				--cRxLock;
 800da6c:	1e6a      	subs	r2, r5, #1
 800da6e:	b2d3      	uxtb	r3, r2
 800da70:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da72:	2b00      	cmp	r3, #0
 800da74:	d1f1      	bne.n	800da5a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800da76:	23ff      	movs	r3, #255	; 0xff
 800da78:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800da7c:	f7ff fc94 	bl	800d3a8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800da80:	f001 f9ee 	bl	800ee60 <xTaskResumeAll>
 800da84:	2501      	movs	r5, #1
 800da86:	e785      	b.n	800d994 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800da88:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800da8a:	2b00      	cmp	r3, #0
 800da8c:	f43f af6b 	beq.w	800d966 <xQueueGenericSend+0x1a>
 800da90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da94:	f383 8811 	msr	BASEPRI, r3
 800da98:	f3bf 8f6f 	isb	sy
 800da9c:	f3bf 8f4f 	dsb	sy
 800daa0:	e7fe      	b.n	800daa0 <xQueueGenericSend+0x154>
 800daa2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daa6:	f383 8811 	msr	BASEPRI, r3
 800daaa:	f3bf 8f6f 	isb	sy
 800daae:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dab2:	e7fe      	b.n	800dab2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dab4:	9b01      	ldr	r3, [sp, #4]
 800dab6:	2b00      	cmp	r3, #0
 800dab8:	f43f af6a 	beq.w	800d990 <xQueueGenericSend+0x44>
 800dabc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dac0:	f383 8811 	msr	BASEPRI, r3
 800dac4:	f3bf 8f6f 	isb	sy
 800dac8:	f3bf 8f4f 	dsb	sy
 800dacc:	e7fe      	b.n	800dacc <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dace:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800dad2:	f7ff fc69 	bl	800d3a8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dad6:	9901      	ldr	r1, [sp, #4]
 800dad8:	4648      	mov	r0, r9
 800dada:	f001 fa33 	bl	800ef44 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800dade:	f7ff fc41 	bl	800d364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dae2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dae6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dae8:	2d00      	cmp	r5, #0
 800daea:	dc04      	bgt.n	800daf6 <xQueueGenericSend+0x1aa>
 800daec:	e011      	b.n	800db12 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800daee:	1e6b      	subs	r3, r5, #1
 800daf0:	b2da      	uxtb	r2, r3
 800daf2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800daf4:	b16a      	cbz	r2, 800db12 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800daf6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800daf8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dafa:	b153      	cbz	r3, 800db12 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dafc:	f001 fab0 	bl	800f060 <xTaskRemoveFromEventList>
 800db00:	2800      	cmp	r0, #0
 800db02:	d0f4      	beq.n	800daee <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800db04:	f001 fb48 	bl	800f198 <vTaskMissedYield>
			--cTxLock;
 800db08:	1e6b      	subs	r3, r5, #1
 800db0a:	b2da      	uxtb	r2, r3
 800db0c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db0e:	2a00      	cmp	r2, #0
 800db10:	d1f1      	bne.n	800daf6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800db12:	23ff      	movs	r3, #255	; 0xff
 800db14:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800db18:	f7ff fc46 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800db1c:	f7ff fc22 	bl	800d364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800db20:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800db24:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db26:	2d00      	cmp	r5, #0
 800db28:	dc04      	bgt.n	800db34 <xQueueGenericSend+0x1e8>
 800db2a:	e011      	b.n	800db50 <xQueueGenericSend+0x204>
				--cRxLock;
 800db2c:	1e6b      	subs	r3, r5, #1
 800db2e:	b2da      	uxtb	r2, r3
 800db30:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db32:	b16a      	cbz	r2, 800db50 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db34:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db36:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db38:	b153      	cbz	r3, 800db50 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db3a:	f001 fa91 	bl	800f060 <xTaskRemoveFromEventList>
 800db3e:	2800      	cmp	r0, #0
 800db40:	d0f4      	beq.n	800db2c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800db42:	f001 fb29 	bl	800f198 <vTaskMissedYield>
				--cRxLock;
 800db46:	1e6b      	subs	r3, r5, #1
 800db48:	b2da      	uxtb	r2, r3
 800db4a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db4c:	2a00      	cmp	r2, #0
 800db4e:	d1f1      	bne.n	800db34 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800db50:	23ff      	movs	r3, #255	; 0xff
 800db52:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800db56:	f7ff fc27 	bl	800d3a8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800db5a:	f001 f981 	bl	800ee60 <xTaskResumeAll>
 800db5e:	2800      	cmp	r0, #0
 800db60:	d190      	bne.n	800da84 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800db62:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db66:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800db6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800db6e:	f3bf 8f4f 	dsb	sy
 800db72:	f3bf 8f6f 	isb	sy
 800db76:	e785      	b.n	800da84 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800db78:	a802      	add	r0, sp, #8
 800db7a:	f001 fab9 	bl	800f0f0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800db7e:	e71a      	b.n	800d9b6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800db80:	463a      	mov	r2, r7
 800db82:	4641      	mov	r1, r8
 800db84:	4620      	mov	r0, r4
 800db86:	f7ff fd4f 	bl	800d628 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800db8c:	2b00      	cmp	r3, #0
 800db8e:	d153      	bne.n	800dc38 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800db90:	b148      	cbz	r0, 800dba6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800db92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800db9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800db9e:	f3bf 8f4f 	dsb	sy
 800dba2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dba6:	f7ff fbff 	bl	800d3a8 <vPortExitCritical>
				return pdPASS;
 800dbaa:	2001      	movs	r0, #1
}
 800dbac:	b005      	add	sp, #20
 800dbae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dbb2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800dbb4:	f7ff fbf8 	bl	800d3a8 <vPortExitCritical>
					return errQUEUE_FULL;
 800dbb8:	9800      	ldr	r0, [sp, #0]
 800dbba:	e7f7      	b.n	800dbac <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800dbbc:	f7ff fbd2 	bl	800d364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dbc0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dbc4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbc6:	2d00      	cmp	r5, #0
 800dbc8:	dd10      	ble.n	800dbec <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbca:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800dbce:	e003      	b.n	800dbd8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800dbd0:	1e6b      	subs	r3, r5, #1
 800dbd2:	b2da      	uxtb	r2, r3
 800dbd4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbd6:	b14a      	cbz	r2, 800dbec <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbda:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbdc:	b133      	cbz	r3, 800dbec <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbde:	f001 fa3f 	bl	800f060 <xTaskRemoveFromEventList>
 800dbe2:	2800      	cmp	r0, #0
 800dbe4:	d0f4      	beq.n	800dbd0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800dbe6:	f001 fad7 	bl	800f198 <vTaskMissedYield>
 800dbea:	e7f1      	b.n	800dbd0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800dbec:	23ff      	movs	r3, #255	; 0xff
 800dbee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dbf2:	f7ff fbd9 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dbf6:	f7ff fbb5 	bl	800d364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dbfa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dbfe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc00:	2d00      	cmp	r5, #0
 800dc02:	dd10      	ble.n	800dc26 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc04:	f104 0610 	add.w	r6, r4, #16
 800dc08:	e003      	b.n	800dc12 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800dc0a:	1e6b      	subs	r3, r5, #1
 800dc0c:	b2da      	uxtb	r2, r3
 800dc0e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc10:	b14a      	cbz	r2, 800dc26 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc12:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc14:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc16:	b133      	cbz	r3, 800dc26 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc18:	f001 fa22 	bl	800f060 <xTaskRemoveFromEventList>
 800dc1c:	2800      	cmp	r0, #0
 800dc1e:	d0f4      	beq.n	800dc0a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800dc20:	f001 faba 	bl	800f198 <vTaskMissedYield>
 800dc24:	e7f1      	b.n	800dc0a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800dc26:	23ff      	movs	r3, #255	; 0xff
 800dc28:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dc2c:	f7ff fbbc 	bl	800d3a8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800dc30:	f001 f916 	bl	800ee60 <xTaskResumeAll>
			return errQUEUE_FULL;
 800dc34:	2000      	movs	r0, #0
 800dc36:	e7b9      	b.n	800dbac <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc38:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dc3c:	f001 fa10 	bl	800f060 <xTaskRemoveFromEventList>
 800dc40:	2800      	cmp	r0, #0
 800dc42:	d0b0      	beq.n	800dba6 <xQueueGenericSend+0x25a>
 800dc44:	e7a5      	b.n	800db92 <xQueueGenericSend+0x246>
 800dc46:	bf00      	nop

0800dc48 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800dc48:	2800      	cmp	r0, #0
 800dc4a:	d04b      	beq.n	800dce4 <xQueueGenericSendFromISR+0x9c>
{
 800dc4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc50:	460e      	mov	r6, r1
 800dc52:	4617      	mov	r7, r2
 800dc54:	461d      	mov	r5, r3
 800dc56:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dc58:	b321      	cbz	r1, 800dca4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dc5a:	2d02      	cmp	r5, #2
 800dc5c:	d10b      	bne.n	800dc76 <xQueueGenericSendFromISR+0x2e>
 800dc5e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dc60:	2b01      	cmp	r3, #1
 800dc62:	d008      	beq.n	800dc76 <xQueueGenericSendFromISR+0x2e>
 800dc64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc68:	f383 8811 	msr	BASEPRI, r3
 800dc6c:	f3bf 8f6f 	isb	sy
 800dc70:	f3bf 8f4f 	dsb	sy
 800dc74:	e7fe      	b.n	800dc74 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dc76:	f7ff fca9 	bl	800d5cc <vPortValidateInterruptPriority>
	__asm volatile
 800dc7a:	f3ef 8811 	mrs	r8, BASEPRI
 800dc7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc82:	f383 8811 	msr	BASEPRI, r3
 800dc86:	f3bf 8f6f 	isb	sy
 800dc8a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dc8e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dc90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dc92:	429a      	cmp	r2, r3
 800dc94:	d312      	bcc.n	800dcbc <xQueueGenericSendFromISR+0x74>
 800dc96:	2d02      	cmp	r5, #2
 800dc98:	d010      	beq.n	800dcbc <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800dc9a:	2000      	movs	r0, #0
	__asm volatile
 800dc9c:	f388 8811 	msr	BASEPRI, r8
}
 800dca0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dca4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dca6:	2b00      	cmp	r3, #0
 800dca8:	d0d7      	beq.n	800dc5a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800dcaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcae:	f383 8811 	msr	BASEPRI, r3
 800dcb2:	f3bf 8f6f 	isb	sy
 800dcb6:	f3bf 8f4f 	dsb	sy
 800dcba:	e7fe      	b.n	800dcba <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dcbc:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800dcbe:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dcc2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dcc4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800dcc6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dcc8:	4620      	mov	r0, r4
 800dcca:	f7ff fcad 	bl	800d628 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800dcce:	1c6b      	adds	r3, r5, #1
 800dcd0:	d011      	beq.n	800dcf6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dcd2:	1c6b      	adds	r3, r5, #1
 800dcd4:	b25b      	sxtb	r3, r3
 800dcd6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800dcda:	2001      	movs	r0, #1
	__asm volatile
 800dcdc:	f388 8811 	msr	BASEPRI, r8
}
 800dce0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800dce4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dce8:	f383 8811 	msr	BASEPRI, r3
 800dcec:	f3bf 8f6f 	isb	sy
 800dcf0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dcf4:	e7fe      	b.n	800dcf4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcf6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dcf8:	2b00      	cmp	r3, #0
 800dcfa:	d0ee      	beq.n	800dcda <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcfc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dd00:	f001 f9ae 	bl	800f060 <xTaskRemoveFromEventList>
 800dd04:	2800      	cmp	r0, #0
 800dd06:	d0e8      	beq.n	800dcda <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800dd08:	2f00      	cmp	r7, #0
 800dd0a:	d0e6      	beq.n	800dcda <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dd0c:	2001      	movs	r0, #1
 800dd0e:	6038      	str	r0, [r7, #0]
 800dd10:	e7c4      	b.n	800dc9c <xQueueGenericSendFromISR+0x54>
 800dd12:	bf00      	nop

0800dd14 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800dd14:	b370      	cbz	r0, 800dd74 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dd16:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800dd18:	b570      	push	{r4, r5, r6, lr}
 800dd1a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800dd1c:	b143      	cbz	r3, 800dd30 <xQueueGiveFromISR+0x1c>
 800dd1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd22:	f383 8811 	msr	BASEPRI, r3
 800dd26:	f3bf 8f6f 	isb	sy
 800dd2a:	f3bf 8f4f 	dsb	sy
 800dd2e:	e7fe      	b.n	800dd2e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dd30:	6803      	ldr	r3, [r0, #0]
 800dd32:	460c      	mov	r4, r1
 800dd34:	b33b      	cbz	r3, 800dd86 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dd36:	f7ff fc49 	bl	800d5cc <vPortValidateInterruptPriority>
	__asm volatile
 800dd3a:	f3ef 8511 	mrs	r5, BASEPRI
 800dd3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd42:	f383 8811 	msr	BASEPRI, r3
 800dd46:	f3bf 8f6f 	isb	sy
 800dd4a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dd4e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800dd50:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800dd52:	429a      	cmp	r2, r3
 800dd54:	d923      	bls.n	800dd9e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dd56:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dd5a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800dd5c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dd5e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dd60:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800dd62:	d020      	beq.n	800dda6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dd64:	3301      	adds	r3, #1
 800dd66:	b25b      	sxtb	r3, r3
 800dd68:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800dd6c:	2001      	movs	r0, #1
	__asm volatile
 800dd6e:	f385 8811 	msr	BASEPRI, r5
}
 800dd72:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800dd74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd78:	f383 8811 	msr	BASEPRI, r3
 800dd7c:	f3bf 8f6f 	isb	sy
 800dd80:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dd84:	e7fe      	b.n	800dd84 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dd86:	6883      	ldr	r3, [r0, #8]
 800dd88:	2b00      	cmp	r3, #0
 800dd8a:	d0d4      	beq.n	800dd36 <xQueueGiveFromISR+0x22>
 800dd8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd90:	f383 8811 	msr	BASEPRI, r3
 800dd94:	f3bf 8f6f 	isb	sy
 800dd98:	f3bf 8f4f 	dsb	sy
 800dd9c:	e7fe      	b.n	800dd9c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800dd9e:	2000      	movs	r0, #0
	__asm volatile
 800dda0:	f385 8811 	msr	BASEPRI, r5
}
 800dda4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dda6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800dda8:	2b00      	cmp	r3, #0
 800ddaa:	d0df      	beq.n	800dd6c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddac:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800ddb0:	f001 f956 	bl	800f060 <xTaskRemoveFromEventList>
 800ddb4:	2800      	cmp	r0, #0
 800ddb6:	d0d9      	beq.n	800dd6c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800ddb8:	2c00      	cmp	r4, #0
 800ddba:	d0d7      	beq.n	800dd6c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ddbc:	2001      	movs	r0, #1
 800ddbe:	6020      	str	r0, [r4, #0]
 800ddc0:	e7ee      	b.n	800dda0 <xQueueGiveFromISR+0x8c>
 800ddc2:	bf00      	nop

0800ddc4 <xQueueReceive>:
{
 800ddc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ddc8:	b085      	sub	sp, #20
 800ddca:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ddcc:	2800      	cmp	r0, #0
 800ddce:	f000 815c 	beq.w	800e08a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ddd2:	460f      	mov	r7, r1
 800ddd4:	4604      	mov	r4, r0
 800ddd6:	2900      	cmp	r1, #0
 800ddd8:	d079      	beq.n	800dece <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ddda:	f001 f9e3 	bl	800f1a4 <xTaskGetSchedulerState>
 800ddde:	2800      	cmp	r0, #0
 800dde0:	f000 8081 	beq.w	800dee6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800dde4:	f7ff fabe 	bl	800d364 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dde8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ddea:	2d00      	cmp	r5, #0
 800ddec:	f040 8138 	bne.w	800e060 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ddf0:	9b01      	ldr	r3, [sp, #4]
 800ddf2:	2b00      	cmp	r3, #0
 800ddf4:	f000 80d5 	beq.w	800dfa2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ddf8:	a802      	add	r0, sp, #8
 800ddfa:	f001 f979 	bl	800f0f0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800ddfe:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de00:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800de04:	f7ff fad0 	bl	800d3a8 <vPortExitCritical>
		vTaskSuspendAll();
 800de08:	f001 f822 	bl	800ee50 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800de0c:	f7ff faaa 	bl	800d364 <vPortEnterCritical>
 800de10:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800de14:	2bff      	cmp	r3, #255	; 0xff
 800de16:	bf08      	it	eq
 800de18:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800de1c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800de20:	2bff      	cmp	r3, #255	; 0xff
 800de22:	bf08      	it	eq
 800de24:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800de28:	f7ff fabe 	bl	800d3a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800de2c:	a901      	add	r1, sp, #4
 800de2e:	a802      	add	r0, sp, #8
 800de30:	f001 f96a 	bl	800f108 <xTaskCheckForTimeOut>
 800de34:	2800      	cmp	r0, #0
 800de36:	d163      	bne.n	800df00 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800de38:	f7ff fa94 	bl	800d364 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800de3c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800de3e:	2b00      	cmp	r3, #0
 800de40:	f000 80b5 	beq.w	800dfae <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800de44:	f7ff fab0 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800de48:	f7ff fa8c 	bl	800d364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800de4c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800de50:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de52:	2d00      	cmp	r5, #0
 800de54:	dc04      	bgt.n	800de60 <xQueueReceive+0x9c>
 800de56:	e011      	b.n	800de7c <xQueueReceive+0xb8>
			--cTxLock;
 800de58:	1e6b      	subs	r3, r5, #1
 800de5a:	b2da      	uxtb	r2, r3
 800de5c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de5e:	b16a      	cbz	r2, 800de7c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de60:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de62:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de64:	b153      	cbz	r3, 800de7c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de66:	f001 f8fb 	bl	800f060 <xTaskRemoveFromEventList>
 800de6a:	2800      	cmp	r0, #0
 800de6c:	d0f4      	beq.n	800de58 <xQueueReceive+0x94>
						vTaskMissedYield();
 800de6e:	f001 f993 	bl	800f198 <vTaskMissedYield>
			--cTxLock;
 800de72:	1e6b      	subs	r3, r5, #1
 800de74:	b2da      	uxtb	r2, r3
 800de76:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de78:	2a00      	cmp	r2, #0
 800de7a:	d1f1      	bne.n	800de60 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800de7c:	23ff      	movs	r3, #255	; 0xff
 800de7e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800de82:	f7ff fa91 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800de86:	f7ff fa6d 	bl	800d364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800de8a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800de8e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de90:	2d00      	cmp	r5, #0
 800de92:	dd14      	ble.n	800debe <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de94:	f104 0910 	add.w	r9, r4, #16
 800de98:	e003      	b.n	800dea2 <xQueueReceive+0xde>
				--cRxLock;
 800de9a:	1e6b      	subs	r3, r5, #1
 800de9c:	b2da      	uxtb	r2, r3
 800de9e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dea0:	b16a      	cbz	r2, 800debe <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dea2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dea4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dea6:	b153      	cbz	r3, 800debe <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dea8:	f001 f8da 	bl	800f060 <xTaskRemoveFromEventList>
 800deac:	2800      	cmp	r0, #0
 800deae:	d0f4      	beq.n	800de9a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800deb0:	f001 f972 	bl	800f198 <vTaskMissedYield>
				--cRxLock;
 800deb4:	1e6b      	subs	r3, r5, #1
 800deb6:	b2da      	uxtb	r2, r3
 800deb8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800deba:	2a00      	cmp	r2, #0
 800debc:	d1f1      	bne.n	800dea2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800debe:	23ff      	movs	r3, #255	; 0xff
 800dec0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dec4:	f7ff fa70 	bl	800d3a8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dec8:	f000 ffca 	bl	800ee60 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800decc:	e060      	b.n	800df90 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dece:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ded0:	2b00      	cmp	r3, #0
 800ded2:	d082      	beq.n	800ddda <xQueueReceive+0x16>
	__asm volatile
 800ded4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ded8:	f383 8811 	msr	BASEPRI, r3
 800dedc:	f3bf 8f6f 	isb	sy
 800dee0:	f3bf 8f4f 	dsb	sy
 800dee4:	e7fe      	b.n	800dee4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dee6:	9b01      	ldr	r3, [sp, #4]
 800dee8:	2b00      	cmp	r3, #0
 800deea:	f43f af7b 	beq.w	800dde4 <xQueueReceive+0x20>
 800deee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800def2:	f383 8811 	msr	BASEPRI, r3
 800def6:	f3bf 8f6f 	isb	sy
 800defa:	f3bf 8f4f 	dsb	sy
 800defe:	e7fe      	b.n	800defe <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800df00:	f7ff fa30 	bl	800d364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800df04:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df08:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df0a:	2d00      	cmp	r5, #0
 800df0c:	dc04      	bgt.n	800df18 <xQueueReceive+0x154>
 800df0e:	e011      	b.n	800df34 <xQueueReceive+0x170>
			--cTxLock;
 800df10:	1e6b      	subs	r3, r5, #1
 800df12:	b2da      	uxtb	r2, r3
 800df14:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df16:	b16a      	cbz	r2, 800df34 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df18:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df1a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df1c:	b153      	cbz	r3, 800df34 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df1e:	f001 f89f 	bl	800f060 <xTaskRemoveFromEventList>
 800df22:	2800      	cmp	r0, #0
 800df24:	d0f4      	beq.n	800df10 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800df26:	f001 f937 	bl	800f198 <vTaskMissedYield>
			--cTxLock;
 800df2a:	1e6b      	subs	r3, r5, #1
 800df2c:	b2da      	uxtb	r2, r3
 800df2e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df30:	2a00      	cmp	r2, #0
 800df32:	d1f1      	bne.n	800df18 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800df34:	23ff      	movs	r3, #255	; 0xff
 800df36:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800df3a:	f7ff fa35 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800df3e:	f7ff fa11 	bl	800d364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800df42:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800df46:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df48:	2d00      	cmp	r5, #0
 800df4a:	dd14      	ble.n	800df76 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df4c:	f104 0910 	add.w	r9, r4, #16
 800df50:	e003      	b.n	800df5a <xQueueReceive+0x196>
				--cRxLock;
 800df52:	1e6b      	subs	r3, r5, #1
 800df54:	b2da      	uxtb	r2, r3
 800df56:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df58:	b16a      	cbz	r2, 800df76 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df5a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df5c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df5e:	b153      	cbz	r3, 800df76 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df60:	f001 f87e 	bl	800f060 <xTaskRemoveFromEventList>
 800df64:	2800      	cmp	r0, #0
 800df66:	d0f4      	beq.n	800df52 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800df68:	f001 f916 	bl	800f198 <vTaskMissedYield>
				--cRxLock;
 800df6c:	1e6b      	subs	r3, r5, #1
 800df6e:	b2da      	uxtb	r2, r3
 800df70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df72:	2a00      	cmp	r2, #0
 800df74:	d1f1      	bne.n	800df5a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800df76:	23ff      	movs	r3, #255	; 0xff
 800df78:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800df7c:	f7ff fa14 	bl	800d3a8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800df80:	f000 ff6e 	bl	800ee60 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800df84:	f7ff f9ee 	bl	800d364 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800df88:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800df8a:	b153      	cbz	r3, 800dfa2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800df8c:	f7ff fa0c 	bl	800d3a8 <vPortExitCritical>
		taskENTER_CRITICAL();
 800df90:	f7ff f9e8 	bl	800d364 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800df94:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800df96:	2d00      	cmp	r5, #0
 800df98:	d162      	bne.n	800e060 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800df9a:	9b01      	ldr	r3, [sp, #4]
 800df9c:	2b00      	cmp	r3, #0
 800df9e:	f47f af31 	bne.w	800de04 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800dfa2:	f7ff fa01 	bl	800d3a8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800dfa6:	2000      	movs	r0, #0
}
 800dfa8:	b005      	add	sp, #20
 800dfaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800dfae:	f7ff f9fb 	bl	800d3a8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800dfb2:	9901      	ldr	r1, [sp, #4]
 800dfb4:	4630      	mov	r0, r6
 800dfb6:	f000 ffc5 	bl	800ef44 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800dfba:	f7ff f9d3 	bl	800d364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dfbe:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dfc2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfc4:	2d00      	cmp	r5, #0
 800dfc6:	dc04      	bgt.n	800dfd2 <xQueueReceive+0x20e>
 800dfc8:	e011      	b.n	800dfee <xQueueReceive+0x22a>
			--cTxLock;
 800dfca:	1e6b      	subs	r3, r5, #1
 800dfcc:	b2da      	uxtb	r2, r3
 800dfce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfd0:	b16a      	cbz	r2, 800dfee <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfd2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfd4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfd6:	b153      	cbz	r3, 800dfee <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfd8:	f001 f842 	bl	800f060 <xTaskRemoveFromEventList>
 800dfdc:	2800      	cmp	r0, #0
 800dfde:	d0f4      	beq.n	800dfca <xQueueReceive+0x206>
						vTaskMissedYield();
 800dfe0:	f001 f8da 	bl	800f198 <vTaskMissedYield>
			--cTxLock;
 800dfe4:	1e6b      	subs	r3, r5, #1
 800dfe6:	b2da      	uxtb	r2, r3
 800dfe8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfea:	2a00      	cmp	r2, #0
 800dfec:	d1f1      	bne.n	800dfd2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800dfee:	23ff      	movs	r3, #255	; 0xff
 800dff0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dff4:	f7ff f9d8 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dff8:	f7ff f9b4 	bl	800d364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dffc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e000:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e002:	2d00      	cmp	r5, #0
 800e004:	dd14      	ble.n	800e030 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e006:	f104 0910 	add.w	r9, r4, #16
 800e00a:	e003      	b.n	800e014 <xQueueReceive+0x250>
				--cRxLock;
 800e00c:	1e6b      	subs	r3, r5, #1
 800e00e:	b2da      	uxtb	r2, r3
 800e010:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e012:	b16a      	cbz	r2, 800e030 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e014:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e016:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e018:	b153      	cbz	r3, 800e030 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e01a:	f001 f821 	bl	800f060 <xTaskRemoveFromEventList>
 800e01e:	2800      	cmp	r0, #0
 800e020:	d0f4      	beq.n	800e00c <xQueueReceive+0x248>
					vTaskMissedYield();
 800e022:	f001 f8b9 	bl	800f198 <vTaskMissedYield>
				--cRxLock;
 800e026:	1e6b      	subs	r3, r5, #1
 800e028:	b2da      	uxtb	r2, r3
 800e02a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e02c:	2a00      	cmp	r2, #0
 800e02e:	d1f1      	bne.n	800e014 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800e030:	23ff      	movs	r3, #255	; 0xff
 800e032:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e036:	f7ff f9b7 	bl	800d3a8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e03a:	f000 ff11 	bl	800ee60 <xTaskResumeAll>
 800e03e:	2800      	cmp	r0, #0
 800e040:	d1a6      	bne.n	800df90 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800e042:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e046:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e04a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e04e:	f3bf 8f4f 	dsb	sy
 800e052:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800e056:	f7ff f985 	bl	800d364 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e05a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e05c:	2d00      	cmp	r5, #0
 800e05e:	d09c      	beq.n	800df9a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e060:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e062:	b152      	cbz	r2, 800e07a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e064:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e066:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e068:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e06a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e06c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e06e:	bf24      	itt	cs
 800e070:	6821      	ldrcs	r1, [r4, #0]
 800e072:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e074:	4638      	mov	r0, r7
 800e076:	f01d f84e 	bl	802b116 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e07a:	3d01      	subs	r5, #1
 800e07c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e07e:	6923      	ldr	r3, [r4, #16]
 800e080:	b963      	cbnz	r3, 800e09c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e082:	f7ff f991 	bl	800d3a8 <vPortExitCritical>
				return pdPASS;
 800e086:	2001      	movs	r0, #1
 800e088:	e78e      	b.n	800dfa8 <xQueueReceive+0x1e4>
 800e08a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e08e:	f383 8811 	msr	BASEPRI, r3
 800e092:	f3bf 8f6f 	isb	sy
 800e096:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e09a:	e7fe      	b.n	800e09a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e09c:	f104 0010 	add.w	r0, r4, #16
 800e0a0:	f000 ffde 	bl	800f060 <xTaskRemoveFromEventList>
 800e0a4:	2800      	cmp	r0, #0
 800e0a6:	d0ec      	beq.n	800e082 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e0a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e0ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e0b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e0b4:	f3bf 8f4f 	dsb	sy
 800e0b8:	f3bf 8f6f 	isb	sy
 800e0bc:	e7e1      	b.n	800e082 <xQueueReceive+0x2be>
 800e0be:	bf00      	nop

0800e0c0 <xQueueSemaphoreTake>:
{
 800e0c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e0c4:	b084      	sub	sp, #16
 800e0c6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e0c8:	2800      	cmp	r0, #0
 800e0ca:	d05c      	beq.n	800e186 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e0cc:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e0ce:	4604      	mov	r4, r0
 800e0d0:	b147      	cbz	r7, 800e0e4 <xQueueSemaphoreTake+0x24>
 800e0d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0d6:	f383 8811 	msr	BASEPRI, r3
 800e0da:	f3bf 8f6f 	isb	sy
 800e0de:	f3bf 8f4f 	dsb	sy
 800e0e2:	e7fe      	b.n	800e0e2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e0e4:	f001 f85e 	bl	800f1a4 <xTaskGetSchedulerState>
 800e0e8:	4605      	mov	r5, r0
 800e0ea:	2800      	cmp	r0, #0
 800e0ec:	d054      	beq.n	800e198 <xQueueSemaphoreTake+0xd8>
 800e0ee:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0f0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e0f4:	f7ff f936 	bl	800d364 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e0f8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e0fa:	2b00      	cmp	r3, #0
 800e0fc:	f040 8148 	bne.w	800e390 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e100:	9b01      	ldr	r3, [sp, #4]
 800e102:	2b00      	cmp	r3, #0
 800e104:	f000 813a 	beq.w	800e37c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e108:	2d00      	cmp	r5, #0
 800e10a:	f000 809d 	beq.w	800e248 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e10e:	f7ff f94b 	bl	800d3a8 <vPortExitCritical>
		vTaskSuspendAll();
 800e112:	f000 fe9d 	bl	800ee50 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e116:	f7ff f925 	bl	800d364 <vPortEnterCritical>
 800e11a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e11e:	2bff      	cmp	r3, #255	; 0xff
 800e120:	bf04      	itt	eq
 800e122:	2300      	moveq	r3, #0
 800e124:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e128:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e12c:	2bff      	cmp	r3, #255	; 0xff
 800e12e:	bf04      	itt	eq
 800e130:	2300      	moveq	r3, #0
 800e132:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e136:	f7ff f937 	bl	800d3a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e13a:	a901      	add	r1, sp, #4
 800e13c:	a802      	add	r0, sp, #8
 800e13e:	f000 ffe3 	bl	800f108 <xTaskCheckForTimeOut>
 800e142:	2800      	cmp	r0, #0
 800e144:	d135      	bne.n	800e1b2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e146:	f7ff f90d 	bl	800d364 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e14a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e14c:	2b00      	cmp	r3, #0
 800e14e:	f000 80a4 	beq.w	800e29a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e152:	f7ff f929 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e156:	f7ff f905 	bl	800d364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e15a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e15e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e160:	2d00      	cmp	r5, #0
 800e162:	dc05      	bgt.n	800e170 <xQueueSemaphoreTake+0xb0>
 800e164:	e074      	b.n	800e250 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e166:	1e6b      	subs	r3, r5, #1
 800e168:	b2da      	uxtb	r2, r3
 800e16a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e16c:	2a00      	cmp	r2, #0
 800e16e:	d06f      	beq.n	800e250 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e170:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e172:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e174:	2b00      	cmp	r3, #0
 800e176:	d06b      	beq.n	800e250 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e178:	f000 ff72 	bl	800f060 <xTaskRemoveFromEventList>
 800e17c:	2800      	cmp	r0, #0
 800e17e:	d0f2      	beq.n	800e166 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e180:	f001 f80a 	bl	800f198 <vTaskMissedYield>
 800e184:	e7ef      	b.n	800e166 <xQueueSemaphoreTake+0xa6>
 800e186:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e18a:	f383 8811 	msr	BASEPRI, r3
 800e18e:	f3bf 8f6f 	isb	sy
 800e192:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e196:	e7fe      	b.n	800e196 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e198:	9b01      	ldr	r3, [sp, #4]
 800e19a:	2b00      	cmp	r3, #0
 800e19c:	f000 80d4 	beq.w	800e348 <xQueueSemaphoreTake+0x288>
 800e1a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1a4:	f383 8811 	msr	BASEPRI, r3
 800e1a8:	f3bf 8f6f 	isb	sy
 800e1ac:	f3bf 8f4f 	dsb	sy
 800e1b0:	e7fe      	b.n	800e1b0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e1b2:	f7ff f8d7 	bl	800d364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e1b6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e1ba:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e1bc:	2d00      	cmp	r5, #0
 800e1be:	dc04      	bgt.n	800e1ca <xQueueSemaphoreTake+0x10a>
 800e1c0:	e011      	b.n	800e1e6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e1c2:	1e6b      	subs	r3, r5, #1
 800e1c4:	b2da      	uxtb	r2, r3
 800e1c6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e1c8:	b16a      	cbz	r2, 800e1e6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e1ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e1cc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e1ce:	b153      	cbz	r3, 800e1e6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e1d0:	f000 ff46 	bl	800f060 <xTaskRemoveFromEventList>
 800e1d4:	2800      	cmp	r0, #0
 800e1d6:	d0f4      	beq.n	800e1c2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e1d8:	f000 ffde 	bl	800f198 <vTaskMissedYield>
			--cTxLock;
 800e1dc:	1e6b      	subs	r3, r5, #1
 800e1de:	b2da      	uxtb	r2, r3
 800e1e0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e1e2:	2a00      	cmp	r2, #0
 800e1e4:	d1f1      	bne.n	800e1ca <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e1e6:	23ff      	movs	r3, #255	; 0xff
 800e1e8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e1ec:	f7ff f8dc 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e1f0:	f7ff f8b8 	bl	800d364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e1f4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e1f8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1fa:	2d00      	cmp	r5, #0
 800e1fc:	dd14      	ble.n	800e228 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1fe:	f104 0810 	add.w	r8, r4, #16
 800e202:	e003      	b.n	800e20c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e204:	1e6b      	subs	r3, r5, #1
 800e206:	b2da      	uxtb	r2, r3
 800e208:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e20a:	b16a      	cbz	r2, 800e228 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e20c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e20e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e210:	b153      	cbz	r3, 800e228 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e212:	f000 ff25 	bl	800f060 <xTaskRemoveFromEventList>
 800e216:	2800      	cmp	r0, #0
 800e218:	d0f4      	beq.n	800e204 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e21a:	f000 ffbd 	bl	800f198 <vTaskMissedYield>
				--cRxLock;
 800e21e:	1e6b      	subs	r3, r5, #1
 800e220:	b2da      	uxtb	r2, r3
 800e222:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e224:	2a00      	cmp	r2, #0
 800e226:	d1f1      	bne.n	800e20c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e228:	23ff      	movs	r3, #255	; 0xff
 800e22a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e22e:	f7ff f8bb 	bl	800d3a8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e232:	f000 fe15 	bl	800ee60 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e236:	f7ff f895 	bl	800d364 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e23a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e23c:	2b00      	cmp	r3, #0
 800e23e:	d07c      	beq.n	800e33a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e240:	f7ff f8b2 	bl	800d3a8 <vPortExitCritical>
	return xReturn;
 800e244:	2501      	movs	r5, #1
 800e246:	e755      	b.n	800e0f4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e248:	a802      	add	r0, sp, #8
 800e24a:	f000 ff51 	bl	800f0f0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e24e:	e75e      	b.n	800e10e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e250:	23ff      	movs	r3, #255	; 0xff
 800e252:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e256:	f7ff f8a7 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e25a:	f7ff f883 	bl	800d364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e25e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e262:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e264:	2d00      	cmp	r5, #0
 800e266:	dd10      	ble.n	800e28a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e268:	f104 0810 	add.w	r8, r4, #16
 800e26c:	e003      	b.n	800e276 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e26e:	1e6b      	subs	r3, r5, #1
 800e270:	b2da      	uxtb	r2, r3
 800e272:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e274:	b14a      	cbz	r2, 800e28a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e276:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e278:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e27a:	b133      	cbz	r3, 800e28a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e27c:	f000 fef0 	bl	800f060 <xTaskRemoveFromEventList>
 800e280:	2800      	cmp	r0, #0
 800e282:	d0f4      	beq.n	800e26e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e284:	f000 ff88 	bl	800f198 <vTaskMissedYield>
 800e288:	e7f1      	b.n	800e26e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e28a:	23ff      	movs	r3, #255	; 0xff
 800e28c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e290:	f7ff f88a 	bl	800d3a8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e294:	f000 fde4 	bl	800ee60 <xTaskResumeAll>
 800e298:	e7d4      	b.n	800e244 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e29a:	f7ff f885 	bl	800d3a8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e29e:	6823      	ldr	r3, [r4, #0]
 800e2a0:	2b00      	cmp	r3, #0
 800e2a2:	d062      	beq.n	800e36a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e2a4:	9901      	ldr	r1, [sp, #4]
 800e2a6:	4630      	mov	r0, r6
 800e2a8:	f000 fe4c 	bl	800ef44 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e2ac:	f7ff f85a 	bl	800d364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e2b0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e2b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2b6:	2d00      	cmp	r5, #0
 800e2b8:	dc04      	bgt.n	800e2c4 <xQueueSemaphoreTake+0x204>
 800e2ba:	e00d      	b.n	800e2d8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e2bc:	1e6b      	subs	r3, r5, #1
 800e2be:	b2da      	uxtb	r2, r3
 800e2c0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2c2:	b14a      	cbz	r2, 800e2d8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2c6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2c8:	b133      	cbz	r3, 800e2d8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2ca:	f000 fec9 	bl	800f060 <xTaskRemoveFromEventList>
 800e2ce:	2800      	cmp	r0, #0
 800e2d0:	d0f4      	beq.n	800e2bc <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e2d2:	f000 ff61 	bl	800f198 <vTaskMissedYield>
 800e2d6:	e7f1      	b.n	800e2bc <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e2d8:	23ff      	movs	r3, #255	; 0xff
 800e2da:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e2de:	f7ff f863 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e2e2:	f7ff f83f 	bl	800d364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e2e6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e2ea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2ec:	2d00      	cmp	r5, #0
 800e2ee:	dd10      	ble.n	800e312 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2f0:	f104 0810 	add.w	r8, r4, #16
 800e2f4:	e003      	b.n	800e2fe <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e2f6:	1e6b      	subs	r3, r5, #1
 800e2f8:	b2da      	uxtb	r2, r3
 800e2fa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2fc:	b14a      	cbz	r2, 800e312 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2fe:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e300:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e302:	b133      	cbz	r3, 800e312 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e304:	f000 feac 	bl	800f060 <xTaskRemoveFromEventList>
 800e308:	2800      	cmp	r0, #0
 800e30a:	d0f4      	beq.n	800e2f6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e30c:	f000 ff44 	bl	800f198 <vTaskMissedYield>
 800e310:	e7f1      	b.n	800e2f6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e312:	23ff      	movs	r3, #255	; 0xff
 800e314:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e318:	f7ff f846 	bl	800d3a8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e31c:	f000 fda0 	bl	800ee60 <xTaskResumeAll>
 800e320:	2800      	cmp	r0, #0
 800e322:	d18f      	bne.n	800e244 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e324:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e328:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e32c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e330:	f3bf 8f4f 	dsb	sy
 800e334:	f3bf 8f6f 	isb	sy
 800e338:	e784      	b.n	800e244 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e33a:	f7ff f835 	bl	800d3a8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e33e:	b92f      	cbnz	r7, 800e34c <xQueueSemaphoreTake+0x28c>
}
 800e340:	4638      	mov	r0, r7
 800e342:	b004      	add	sp, #16
 800e344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e348:	4607      	mov	r7, r0
 800e34a:	e6d1      	b.n	800e0f0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e34c:	f7ff f80a 	bl	800d364 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e350:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e352:	b119      	cbz	r1, 800e35c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e354:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e356:	6819      	ldr	r1, [r3, #0]
 800e358:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e35c:	68a0      	ldr	r0, [r4, #8]
 800e35e:	f000 ffbd 	bl	800f2dc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e362:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e364:	f7ff f820 	bl	800d3a8 <vPortExitCritical>
 800e368:	e7ea      	b.n	800e340 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e36a:	f7fe fffb 	bl	800d364 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e36e:	68a0      	ldr	r0, [r4, #8]
 800e370:	f000 ff28 	bl	800f1c4 <xTaskPriorityInherit>
 800e374:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e376:	f7ff f817 	bl	800d3a8 <vPortExitCritical>
 800e37a:	e793      	b.n	800e2a4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e37c:	b197      	cbz	r7, 800e3a4 <xQueueSemaphoreTake+0x2e4>
 800e37e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e382:	f383 8811 	msr	BASEPRI, r3
 800e386:	f3bf 8f6f 	isb	sy
 800e38a:	f3bf 8f4f 	dsb	sy
 800e38e:	e7fe      	b.n	800e38e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e390:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e392:	3b01      	subs	r3, #1
 800e394:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e396:	b1ca      	cbz	r2, 800e3cc <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e398:	6923      	ldr	r3, [r4, #16]
 800e39a:	b933      	cbnz	r3, 800e3aa <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e39c:	f7ff f804 	bl	800d3a8 <vPortExitCritical>
				return pdPASS;
 800e3a0:	2701      	movs	r7, #1
 800e3a2:	e7cd      	b.n	800e340 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e3a4:	f7ff f800 	bl	800d3a8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e3a8:	e7ca      	b.n	800e340 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3aa:	f104 0010 	add.w	r0, r4, #16
 800e3ae:	f000 fe57 	bl	800f060 <xTaskRemoveFromEventList>
 800e3b2:	2800      	cmp	r0, #0
 800e3b4:	d0f2      	beq.n	800e39c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e3b6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e3ba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e3be:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e3c2:	f3bf 8f4f 	dsb	sy
 800e3c6:	f3bf 8f6f 	isb	sy
 800e3ca:	e7e7      	b.n	800e39c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e3cc:	f000 ffda 	bl	800f384 <pvTaskIncrementMutexHeldCount>
 800e3d0:	60a0      	str	r0, [r4, #8]
 800e3d2:	e7e1      	b.n	800e398 <xQueueSemaphoreTake+0x2d8>

0800e3d4 <xQueueReceiveFromISR>:
{
 800e3d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e3d8:	b310      	cbz	r0, 800e420 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e3da:	460e      	mov	r6, r1
 800e3dc:	4617      	mov	r7, r2
 800e3de:	4604      	mov	r4, r0
 800e3e0:	b191      	cbz	r1, 800e408 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e3e2:	f7ff f8f3 	bl	800d5cc <vPortValidateInterruptPriority>
	__asm volatile
 800e3e6:	f3ef 8911 	mrs	r9, BASEPRI
 800e3ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3ee:	f383 8811 	msr	BASEPRI, r3
 800e3f2:	f3bf 8f6f 	isb	sy
 800e3f6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e3fa:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e3fc:	b9cd      	cbnz	r5, 800e432 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e3fe:	4628      	mov	r0, r5
	__asm volatile
 800e400:	f389 8811 	msr	BASEPRI, r9
}
 800e404:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e408:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e40a:	2b00      	cmp	r3, #0
 800e40c:	d0e9      	beq.n	800e3e2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e40e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e412:	f383 8811 	msr	BASEPRI, r3
 800e416:	f3bf 8f6f 	isb	sy
 800e41a:	f3bf 8f4f 	dsb	sy
 800e41e:	e7fe      	b.n	800e41e <xQueueReceiveFromISR+0x4a>
 800e420:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e424:	f383 8811 	msr	BASEPRI, r3
 800e428:	f3bf 8f6f 	isb	sy
 800e42c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e430:	e7fe      	b.n	800e430 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e432:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e436:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e438:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e43c:	b152      	cbz	r2, 800e454 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e43e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e440:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e442:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e444:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e446:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e448:	bf24      	itt	cs
 800e44a:	6821      	ldrcs	r1, [r4, #0]
 800e44c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e44e:	4630      	mov	r0, r6
 800e450:	f01c fe61 	bl	802b116 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e454:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e456:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e45a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e45c:	d009      	beq.n	800e472 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e45e:	f108 0301 	add.w	r3, r8, #1
 800e462:	b25b      	sxtb	r3, r3
 800e464:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e468:	2001      	movs	r0, #1
	__asm volatile
 800e46a:	f389 8811 	msr	BASEPRI, r9
}
 800e46e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e472:	6923      	ldr	r3, [r4, #16]
 800e474:	2b00      	cmp	r3, #0
 800e476:	d0f7      	beq.n	800e468 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e478:	f104 0010 	add.w	r0, r4, #16
 800e47c:	f000 fdf0 	bl	800f060 <xTaskRemoveFromEventList>
 800e480:	2800      	cmp	r0, #0
 800e482:	d0f1      	beq.n	800e468 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e484:	2f00      	cmp	r7, #0
 800e486:	d0ef      	beq.n	800e468 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e488:	2001      	movs	r0, #1
 800e48a:	6038      	str	r0, [r7, #0]
 800e48c:	e7b8      	b.n	800e400 <xQueueReceiveFromISR+0x2c>
 800e48e:	bf00      	nop

0800e490 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e490:	b158      	cbz	r0, 800e4aa <uxQueueMessagesWaiting+0x1a>
{
 800e492:	b510      	push	{r4, lr}
 800e494:	4604      	mov	r4, r0
 800e496:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e498:	f7fe ff64 	bl	800d364 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e49c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e49e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e4a0:	f7fe ff82 	bl	800d3a8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e4a4:	9801      	ldr	r0, [sp, #4]
 800e4a6:	b002      	add	sp, #8
 800e4a8:	bd10      	pop	{r4, pc}
	__asm volatile
 800e4aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4ae:	f383 8811 	msr	BASEPRI, r3
 800e4b2:	f3bf 8f6f 	isb	sy
 800e4b6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e4ba:	e7fe      	b.n	800e4ba <uxQueueMessagesWaiting+0x2a>

0800e4bc <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e4bc:	b108      	cbz	r0, 800e4c2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e4be:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e4c0:	4770      	bx	lr
 800e4c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4c6:	f383 8811 	msr	BASEPRI, r3
 800e4ca:	f3bf 8f6f 	isb	sy
 800e4ce:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e4d2:	e7fe      	b.n	800e4d2 <uxQueueMessagesWaitingFromISR+0x16>
 800e4d4:	0000      	movs	r0, r0
	...

0800e4d8 <vQueueDelete>:
	configASSERT( pxQueue );
 800e4d8:	b1f0      	cbz	r0, 800e518 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e4da:	4b21      	ldr	r3, [pc, #132]	; (800e560 <vQueueDelete+0x88>)
 800e4dc:	685a      	ldr	r2, [r3, #4]
 800e4de:	4290      	cmp	r0, r2
 800e4e0:	d025      	beq.n	800e52e <vQueueDelete+0x56>
 800e4e2:	68da      	ldr	r2, [r3, #12]
 800e4e4:	4290      	cmp	r0, r2
 800e4e6:	d02c      	beq.n	800e542 <vQueueDelete+0x6a>
 800e4e8:	695a      	ldr	r2, [r3, #20]
 800e4ea:	4290      	cmp	r0, r2
 800e4ec:	d02b      	beq.n	800e546 <vQueueDelete+0x6e>
 800e4ee:	69da      	ldr	r2, [r3, #28]
 800e4f0:	4290      	cmp	r0, r2
 800e4f2:	d02a      	beq.n	800e54a <vQueueDelete+0x72>
 800e4f4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e4f6:	4290      	cmp	r0, r2
 800e4f8:	d029      	beq.n	800e54e <vQueueDelete+0x76>
 800e4fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e4fc:	4290      	cmp	r0, r2
 800e4fe:	d01e      	beq.n	800e53e <vQueueDelete+0x66>
 800e500:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e502:	4290      	cmp	r0, r2
 800e504:	d025      	beq.n	800e552 <vQueueDelete+0x7a>
 800e506:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e508:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e50a:	bf08      	it	eq
 800e50c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e50e:	d00f      	beq.n	800e530 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e510:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e514:	b14b      	cbz	r3, 800e52a <vQueueDelete+0x52>
}
 800e516:	4770      	bx	lr
 800e518:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e51c:	f383 8811 	msr	BASEPRI, r3
 800e520:	f3bf 8f6f 	isb	sy
 800e524:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e528:	e7fe      	b.n	800e528 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e52a:	f7fe be03 	b.w	800d134 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e52e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e530:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e558 <vQueueDelete+0x80>
 800e534:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e538:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e53c:	e7e8      	b.n	800e510 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e53e:	2205      	movs	r2, #5
 800e540:	e7f6      	b.n	800e530 <vQueueDelete+0x58>
 800e542:	2201      	movs	r2, #1
 800e544:	e7f4      	b.n	800e530 <vQueueDelete+0x58>
 800e546:	2202      	movs	r2, #2
 800e548:	e7f2      	b.n	800e530 <vQueueDelete+0x58>
 800e54a:	2203      	movs	r2, #3
 800e54c:	e7f0      	b.n	800e530 <vQueueDelete+0x58>
 800e54e:	2204      	movs	r2, #4
 800e550:	e7ee      	b.n	800e530 <vQueueDelete+0x58>
 800e552:	2206      	movs	r2, #6
 800e554:	e7ec      	b.n	800e530 <vQueueDelete+0x58>
 800e556:	bf00      	nop
	...
 800e560:	20012c48 	.word	0x20012c48

0800e564 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e564:	4b12      	ldr	r3, [pc, #72]	; (800e5b0 <vQueueAddToRegistry+0x4c>)
 800e566:	681a      	ldr	r2, [r3, #0]
 800e568:	b17a      	cbz	r2, 800e58a <vQueueAddToRegistry+0x26>
 800e56a:	689a      	ldr	r2, [r3, #8]
 800e56c:	b162      	cbz	r2, 800e588 <vQueueAddToRegistry+0x24>
 800e56e:	691a      	ldr	r2, [r3, #16]
 800e570:	b192      	cbz	r2, 800e598 <vQueueAddToRegistry+0x34>
 800e572:	699a      	ldr	r2, [r3, #24]
 800e574:	b192      	cbz	r2, 800e59c <vQueueAddToRegistry+0x38>
 800e576:	6a1a      	ldr	r2, [r3, #32]
 800e578:	b192      	cbz	r2, 800e5a0 <vQueueAddToRegistry+0x3c>
 800e57a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e57c:	b192      	cbz	r2, 800e5a4 <vQueueAddToRegistry+0x40>
 800e57e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e580:	b192      	cbz	r2, 800e5a8 <vQueueAddToRegistry+0x44>
 800e582:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e584:	b192      	cbz	r2, 800e5ac <vQueueAddToRegistry+0x48>
	}
 800e586:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e588:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e58a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e58e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e592:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e596:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e598:	2202      	movs	r2, #2
 800e59a:	e7f6      	b.n	800e58a <vQueueAddToRegistry+0x26>
 800e59c:	2203      	movs	r2, #3
 800e59e:	e7f4      	b.n	800e58a <vQueueAddToRegistry+0x26>
 800e5a0:	2204      	movs	r2, #4
 800e5a2:	e7f2      	b.n	800e58a <vQueueAddToRegistry+0x26>
 800e5a4:	2205      	movs	r2, #5
 800e5a6:	e7f0      	b.n	800e58a <vQueueAddToRegistry+0x26>
 800e5a8:	2206      	movs	r2, #6
 800e5aa:	e7ee      	b.n	800e58a <vQueueAddToRegistry+0x26>
 800e5ac:	2207      	movs	r2, #7
 800e5ae:	e7ec      	b.n	800e58a <vQueueAddToRegistry+0x26>
 800e5b0:	20012c48 	.word	0x20012c48

0800e5b4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e5b4:	b570      	push	{r4, r5, r6, lr}
 800e5b6:	4605      	mov	r5, r0
 800e5b8:	460e      	mov	r6, r1
 800e5ba:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e5bc:	f7fe fed2 	bl	800d364 <vPortEnterCritical>
 800e5c0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e5c4:	2bff      	cmp	r3, #255	; 0xff
 800e5c6:	bf04      	itt	eq
 800e5c8:	2300      	moveq	r3, #0
 800e5ca:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e5ce:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e5d2:	2bff      	cmp	r3, #255	; 0xff
 800e5d4:	bf04      	itt	eq
 800e5d6:	2300      	moveq	r3, #0
 800e5d8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e5dc:	f7fe fee4 	bl	800d3a8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e5e0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e5e2:	2b00      	cmp	r3, #0
 800e5e4:	d043      	beq.n	800e66e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e5e6:	f7fe febd 	bl	800d364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e5ea:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e5ee:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5f0:	2c00      	cmp	r4, #0
 800e5f2:	dd14      	ble.n	800e61e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e5f4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e5f8:	e003      	b.n	800e602 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e5fa:	1e63      	subs	r3, r4, #1
 800e5fc:	b2da      	uxtb	r2, r3
 800e5fe:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e600:	b16a      	cbz	r2, 800e61e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e602:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e604:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e606:	b153      	cbz	r3, 800e61e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e608:	f000 fd2a 	bl	800f060 <xTaskRemoveFromEventList>
 800e60c:	2800      	cmp	r0, #0
 800e60e:	d0f4      	beq.n	800e5fa <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e610:	f000 fdc2 	bl	800f198 <vTaskMissedYield>
			--cTxLock;
 800e614:	1e63      	subs	r3, r4, #1
 800e616:	b2da      	uxtb	r2, r3
 800e618:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e61a:	2a00      	cmp	r2, #0
 800e61c:	d1f1      	bne.n	800e602 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e61e:	23ff      	movs	r3, #255	; 0xff
 800e620:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e624:	f7fe fec0 	bl	800d3a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e628:	f7fe fe9c 	bl	800d364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e62c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e630:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e632:	2c00      	cmp	r4, #0
 800e634:	dd14      	ble.n	800e660 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e636:	f105 0610 	add.w	r6, r5, #16
 800e63a:	e003      	b.n	800e644 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e63c:	1e63      	subs	r3, r4, #1
 800e63e:	b2da      	uxtb	r2, r3
 800e640:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e642:	b16a      	cbz	r2, 800e660 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e644:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e646:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e648:	b153      	cbz	r3, 800e660 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e64a:	f000 fd09 	bl	800f060 <xTaskRemoveFromEventList>
 800e64e:	2800      	cmp	r0, #0
 800e650:	d0f4      	beq.n	800e63c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e652:	f000 fda1 	bl	800f198 <vTaskMissedYield>
				--cRxLock;
 800e656:	1e63      	subs	r3, r4, #1
 800e658:	b2da      	uxtb	r2, r3
 800e65a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e65c:	2a00      	cmp	r2, #0
 800e65e:	d1f1      	bne.n	800e644 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e660:	23ff      	movs	r3, #255	; 0xff
 800e662:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e666:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e66a:	f7fe be9d 	b.w	800d3a8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e66e:	4622      	mov	r2, r4
 800e670:	4631      	mov	r1, r6
 800e672:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e676:	f000 fca9 	bl	800efcc <vTaskPlaceOnEventListRestricted>
 800e67a:	e7b4      	b.n	800e5e6 <vQueueWaitForMessageRestricted+0x32>

0800e67c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e67c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e680:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e682:	f7fe fe6f 	bl	800d364 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e686:	4a34      	ldr	r2, [pc, #208]	; (800e758 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e688:	4e34      	ldr	r6, [pc, #208]	; (800e75c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e68a:	6813      	ldr	r3, [r2, #0]
 800e68c:	3301      	adds	r3, #1
 800e68e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e690:	6833      	ldr	r3, [r6, #0]
 800e692:	2b00      	cmp	r3, #0
 800e694:	d032      	beq.n	800e6fc <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e696:	4c32      	ldr	r4, [pc, #200]	; (800e760 <prvAddNewTaskToReadyList+0xe4>)
 800e698:	6823      	ldr	r3, [r4, #0]
 800e69a:	b33b      	cbz	r3, 800e6ec <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e69c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e69e:	4f31      	ldr	r7, [pc, #196]	; (800e764 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e6a0:	4a31      	ldr	r2, [pc, #196]	; (800e768 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e6a2:	4932      	ldr	r1, [pc, #200]	; (800e76c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e6a4:	6813      	ldr	r3, [r2, #0]
 800e6a6:	3301      	adds	r3, #1
 800e6a8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e6aa:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e6ac:	680b      	ldr	r3, [r1, #0]
 800e6ae:	4283      	cmp	r3, r0
 800e6b0:	bf38      	it	cc
 800e6b2:	6008      	strcc	r0, [r1, #0]
 800e6b4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e6b8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e6bc:	1d29      	adds	r1, r5, #4
 800e6be:	f7fe fdad 	bl	800d21c <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e6c2:	f7fe fe71 	bl	800d3a8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e6c6:	6823      	ldr	r3, [r4, #0]
 800e6c8:	b173      	cbz	r3, 800e6e8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e6ca:	6832      	ldr	r2, [r6, #0]
 800e6cc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e6ce:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e6d0:	429a      	cmp	r2, r3
 800e6d2:	d209      	bcs.n	800e6e8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e6d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e6d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e6e0:	f3bf 8f4f 	dsb	sy
 800e6e4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e6e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e6ec:	6833      	ldr	r3, [r6, #0]
 800e6ee:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e6f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6f2:	4f1c      	ldr	r7, [pc, #112]	; (800e764 <prvAddNewTaskToReadyList+0xe8>)
 800e6f4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e6f6:	bf98      	it	ls
 800e6f8:	6035      	strls	r5, [r6, #0]
 800e6fa:	e7d1      	b.n	800e6a0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e6fc:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e6fe:	6813      	ldr	r3, [r2, #0]
 800e700:	2b01      	cmp	r3, #1
 800e702:	d003      	beq.n	800e70c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e704:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e706:	4f17      	ldr	r7, [pc, #92]	; (800e764 <prvAddNewTaskToReadyList+0xe8>)
 800e708:	4c15      	ldr	r4, [pc, #84]	; (800e760 <prvAddNewTaskToReadyList+0xe4>)
 800e70a:	e7c9      	b.n	800e6a0 <prvAddNewTaskToReadyList+0x24>
 800e70c:	4f15      	ldr	r7, [pc, #84]	; (800e764 <prvAddNewTaskToReadyList+0xe8>)
 800e70e:	463c      	mov	r4, r7
 800e710:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e714:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e716:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e718:	f7fe fd70 	bl	800d1fc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e71c:	45a0      	cmp	r8, r4
 800e71e:	d1f9      	bne.n	800e714 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e720:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e784 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e724:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e788 <prvAddNewTaskToReadyList+0x10c>
 800e728:	4c0d      	ldr	r4, [pc, #52]	; (800e760 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e72a:	4648      	mov	r0, r9
 800e72c:	f7fe fd66 	bl	800d1fc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e730:	4640      	mov	r0, r8
 800e732:	f7fe fd63 	bl	800d1fc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e736:	480e      	ldr	r0, [pc, #56]	; (800e770 <prvAddNewTaskToReadyList+0xf4>)
 800e738:	f7fe fd60 	bl	800d1fc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e73c:	480d      	ldr	r0, [pc, #52]	; (800e774 <prvAddNewTaskToReadyList+0xf8>)
 800e73e:	f7fe fd5d 	bl	800d1fc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e742:	480d      	ldr	r0, [pc, #52]	; (800e778 <prvAddNewTaskToReadyList+0xfc>)
 800e744:	f7fe fd5a 	bl	800d1fc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e748:	4b0c      	ldr	r3, [pc, #48]	; (800e77c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e74a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e74c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e750:	4b0b      	ldr	r3, [pc, #44]	; (800e780 <prvAddNewTaskToReadyList+0x104>)
 800e752:	f8c3 8000 	str.w	r8, [r3]
}
 800e756:	e7a3      	b.n	800e6a0 <prvAddNewTaskToReadyList+0x24>
 800e758:	200130f4 	.word	0x200130f4
 800e75c:	20012c88 	.word	0x20012c88
 800e760:	20013150 	.word	0x20013150
 800e764:	20012c94 	.word	0x20012c94
 800e768:	20013100 	.word	0x20013100
 800e76c:	20013104 	.word	0x20013104
 800e770:	2001313c 	.word	0x2001313c
 800e774:	20013168 	.word	0x20013168
 800e778:	20013154 	.word	0x20013154
 800e77c:	20012c8c 	.word	0x20012c8c
 800e780:	20012c90 	.word	0x20012c90
 800e784:	20013108 	.word	0x20013108
 800e788:	2001311c 	.word	0x2001311c

0800e78c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e78c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e790:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e792:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e796:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e79a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e79c:	4606      	mov	r6, r0
 800e79e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e7a0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e7a2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e7a4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e7a6:	f01c fb90 	bl	802aeca <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e7aa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e7ac:	f1a9 0904 	sub.w	r9, r9, #4
 800e7b0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e7b2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e7b6:	2d00      	cmp	r5, #0
 800e7b8:	d079      	beq.n	800e8ae <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7ba:	782b      	ldrb	r3, [r5, #0]
 800e7bc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e7c0:	2b00      	cmp	r3, #0
 800e7c2:	d03b      	beq.n	800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7c4:	786b      	ldrb	r3, [r5, #1]
 800e7c6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e7ca:	2b00      	cmp	r3, #0
 800e7cc:	d036      	beq.n	800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7ce:	78ab      	ldrb	r3, [r5, #2]
 800e7d0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e7d4:	b393      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7d6:	78eb      	ldrb	r3, [r5, #3]
 800e7d8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e7dc:	b373      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7de:	792b      	ldrb	r3, [r5, #4]
 800e7e0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e7e4:	b353      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7e6:	796b      	ldrb	r3, [r5, #5]
 800e7e8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e7ec:	b333      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7ee:	79ab      	ldrb	r3, [r5, #6]
 800e7f0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e7f4:	b313      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7f6:	79eb      	ldrb	r3, [r5, #7]
 800e7f8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e7fc:	b1f3      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7fe:	7a2b      	ldrb	r3, [r5, #8]
 800e800:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e804:	b1d3      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e806:	7a6b      	ldrb	r3, [r5, #9]
 800e808:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e80c:	b1b3      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e80e:	7aab      	ldrb	r3, [r5, #10]
 800e810:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e814:	b193      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e816:	7aeb      	ldrb	r3, [r5, #11]
 800e818:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e81c:	b173      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e81e:	7b2b      	ldrb	r3, [r5, #12]
 800e820:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e824:	b153      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e826:	7b6b      	ldrb	r3, [r5, #13]
 800e828:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e82c:	b133      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e82e:	7bab      	ldrb	r3, [r5, #14]
 800e830:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e834:	b113      	cbz	r3, 800e83c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e836:	7beb      	ldrb	r3, [r5, #15]
 800e838:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e83c:	2300      	movs	r3, #0
 800e83e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e842:	9d08      	ldr	r5, [sp, #32]
 800e844:	2d37      	cmp	r5, #55	; 0x37
 800e846:	bf28      	it	cs
 800e848:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e84a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e84e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e850:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e852:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e854:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e858:	f7fe fcdc 	bl	800d214 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e85c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e860:	f104 0018 	add.w	r0, r4, #24
 800e864:	f7fe fcd6 	bl	800d214 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e868:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e86a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e86e:	4651      	mov	r1, sl
 800e870:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e872:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e874:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e876:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e87a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e87e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e882:	f01c fb22 	bl	802aeca <memset>
 800e886:	4b0b      	ldr	r3, [pc, #44]	; (800e8b4 <prvInitialiseNewTask.constprop.0+0x128>)
 800e888:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e88a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e88e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e890:	463a      	mov	r2, r7
 800e892:	4631      	mov	r1, r6
 800e894:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e896:	6625      	str	r5, [r4, #96]	; 0x60
 800e898:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e89a:	f7fe fd39 	bl	800d310 <pxPortInitialiseStack>
 800e89e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e8a0:	f1b8 0f00 	cmp.w	r8, #0
 800e8a4:	d001      	beq.n	800e8aa <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e8a6:	f8c8 4000 	str.w	r4, [r8]
}
 800e8aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e8ae:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e8b2:	e7c6      	b.n	800e842 <prvInitialiseNewTask.constprop.0+0xb6>
 800e8b4:	20013c18 	.word	0x20013c18

0800e8b8 <prvIdleTask>:
{
 800e8b8:	b580      	push	{r7, lr}
 800e8ba:	4d23      	ldr	r5, [pc, #140]	; (800e948 <prvIdleTask+0x90>)
 800e8bc:	4f23      	ldr	r7, [pc, #140]	; (800e94c <prvIdleTask+0x94>)
 800e8be:	4e24      	ldr	r6, [pc, #144]	; (800e950 <prvIdleTask+0x98>)
 800e8c0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800e954 <prvIdleTask+0x9c>
				taskYIELD();
 800e8c4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e8c8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e8cc:	682b      	ldr	r3, [r5, #0]
 800e8ce:	b35b      	cbz	r3, 800e928 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e8d0:	f7fe fd48 	bl	800d364 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8d4:	68fb      	ldr	r3, [r7, #12]
 800e8d6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e8d8:	1d20      	adds	r0, r4, #4
 800e8da:	f7fe fcc7 	bl	800d26c <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e8de:	6833      	ldr	r3, [r6, #0]
 800e8e0:	3b01      	subs	r3, #1
 800e8e2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e8e4:	682b      	ldr	r3, [r5, #0]
 800e8e6:	3b01      	subs	r3, #1
 800e8e8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e8ea:	f7fe fd5d 	bl	800d3a8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e8ee:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e8f2:	f01c fb33 	bl	802af5c <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e8f6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e8fa:	b163      	cbz	r3, 800e916 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e8fc:	2b01      	cmp	r3, #1
 800e8fe:	d01e      	beq.n	800e93e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e900:	2b02      	cmp	r3, #2
 800e902:	d0e3      	beq.n	800e8cc <prvIdleTask+0x14>
 800e904:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e908:	f383 8811 	msr	BASEPRI, r3
 800e90c:	f3bf 8f6f 	isb	sy
 800e910:	f3bf 8f4f 	dsb	sy
 800e914:	e7fe      	b.n	800e914 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e916:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e918:	f7fe fc0c 	bl	800d134 <vPortFree>
				vPortFree( pxTCB );
 800e91c:	4620      	mov	r0, r4
 800e91e:	f7fe fc09 	bl	800d134 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e922:	682b      	ldr	r3, [r5, #0]
 800e924:	2b00      	cmp	r3, #0
 800e926:	d1d3      	bne.n	800e8d0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e928:	f8d8 3000 	ldr.w	r3, [r8]
 800e92c:	2b01      	cmp	r3, #1
 800e92e:	d9cd      	bls.n	800e8cc <prvIdleTask+0x14>
				taskYIELD();
 800e930:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e934:	f3bf 8f4f 	dsb	sy
 800e938:	f3bf 8f6f 	isb	sy
 800e93c:	e7c6      	b.n	800e8cc <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e93e:	4620      	mov	r0, r4
 800e940:	f7fe fbf8 	bl	800d134 <vPortFree>
 800e944:	e7c2      	b.n	800e8cc <prvIdleTask+0x14>
 800e946:	bf00      	nop
 800e948:	200130f8 	.word	0x200130f8
 800e94c:	20013168 	.word	0x20013168
 800e950:	200130f4 	.word	0x200130f4
 800e954:	20012c94 	.word	0x20012c94

0800e958 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800e958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e95c:	4b47      	ldr	r3, [pc, #284]	; (800ea7c <xTaskIncrementTick.part.0+0x124>)
 800e95e:	681e      	ldr	r6, [r3, #0]
 800e960:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800e962:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800e964:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e966:	2e00      	cmp	r6, #0
 800e968:	d040      	beq.n	800e9ec <xTaskIncrementTick.part.0+0x94>
 800e96a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800ea90 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e96e:	f8db 3000 	ldr.w	r3, [fp]
 800e972:	429e      	cmp	r6, r3
 800e974:	d347      	bcc.n	800ea06 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e976:	4f42      	ldr	r7, [pc, #264]	; (800ea80 <xTaskIncrementTick.part.0+0x128>)
 800e978:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800ea94 <xTaskIncrementTick.part.0+0x13c>
 800e97c:	683b      	ldr	r3, [r7, #0]
 800e97e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800ea98 <xTaskIncrementTick.part.0+0x140>
 800e982:	681d      	ldr	r5, [r3, #0]
 800e984:	2d00      	cmp	r5, #0
 800e986:	d073      	beq.n	800ea70 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800e988:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800ea9c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800e98c:	2500      	movs	r5, #0
 800e98e:	e022      	b.n	800e9d6 <xTaskIncrementTick.part.0+0x7e>
 800e990:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e992:	f7fe fc6b 	bl	800d26c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e996:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e998:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e99a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e99e:	b113      	cbz	r3, 800e9a6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e9a0:	f7fe fc64 	bl	800d26c <uxListRemove>
 800e9a4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e9a6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e9a8:	f8d8 2000 	ldr.w	r2, [r8]
 800e9ac:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e9b0:	4293      	cmp	r3, r2
 800e9b2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e9b6:	bf88      	it	hi
 800e9b8:	f8c8 3000 	strhi.w	r3, [r8]
 800e9bc:	f7fe fc2e 	bl	800d21c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e9c0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e9c4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e9c6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e9c8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e9ca:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800e9cc:	4291      	cmp	r1, r2
 800e9ce:	bf28      	it	cs
 800e9d0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e9d2:	2b00      	cmp	r3, #0
 800e9d4:	d04c      	beq.n	800ea70 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9d6:	683b      	ldr	r3, [r7, #0]
 800e9d8:	68db      	ldr	r3, [r3, #12]
 800e9da:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e9dc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e9de:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800e9e0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e9e2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800e9e4:	d2d4      	bcs.n	800e990 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800e9e6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e9ea:	e011      	b.n	800ea10 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800e9ec:	4b24      	ldr	r3, [pc, #144]	; (800ea80 <xTaskIncrementTick.part.0+0x128>)
 800e9ee:	681a      	ldr	r2, [r3, #0]
 800e9f0:	6812      	ldr	r2, [r2, #0]
 800e9f2:	b30a      	cbz	r2, 800ea38 <xTaskIncrementTick.part.0+0xe0>
 800e9f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9f8:	f383 8811 	msr	BASEPRI, r3
 800e9fc:	f3bf 8f6f 	isb	sy
 800ea00:	f3bf 8f4f 	dsb	sy
 800ea04:	e7fe      	b.n	800ea04 <xTaskIncrementTick.part.0+0xac>
 800ea06:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800ea94 <xTaskIncrementTick.part.0+0x13c>
 800ea0a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800ea98 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800ea0e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ea10:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800ea14:	491b      	ldr	r1, [pc, #108]	; (800ea84 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ea16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea18:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ea1c:	009b      	lsls	r3, r3, #2
 800ea1e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800ea22:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800ea24:	2a02      	cmp	r2, #2
 800ea26:	bf28      	it	cs
 800ea28:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800ea2a:	2b00      	cmp	r3, #0
}
 800ea2c:	bf0c      	ite	eq
 800ea2e:	4628      	moveq	r0, r5
 800ea30:	2001      	movne	r0, #1
 800ea32:	b003      	add	sp, #12
 800ea34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800ea38:	4a13      	ldr	r2, [pc, #76]	; (800ea88 <xTaskIncrementTick.part.0+0x130>)
 800ea3a:	6818      	ldr	r0, [r3, #0]
 800ea3c:	6811      	ldr	r1, [r2, #0]
 800ea3e:	6019      	str	r1, [r3, #0]
 800ea40:	4912      	ldr	r1, [pc, #72]	; (800ea8c <xTaskIncrementTick.part.0+0x134>)
 800ea42:	6010      	str	r0, [r2, #0]
 800ea44:	680a      	ldr	r2, [r1, #0]
 800ea46:	3201      	adds	r2, #1
 800ea48:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ea4a:	681a      	ldr	r2, [r3, #0]
 800ea4c:	6812      	ldr	r2, [r2, #0]
 800ea4e:	b932      	cbnz	r2, 800ea5e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800ea50:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800ea90 <xTaskIncrementTick.part.0+0x138>
 800ea54:	f04f 33ff 	mov.w	r3, #4294967295
 800ea58:	f8cb 3000 	str.w	r3, [fp]
 800ea5c:	e787      	b.n	800e96e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea5e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ea60:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800ea90 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea64:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ea66:	68db      	ldr	r3, [r3, #12]
 800ea68:	685b      	ldr	r3, [r3, #4]
 800ea6a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800ea6e:	e77e      	b.n	800e96e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ea70:	f04f 33ff 	mov.w	r3, #4294967295
 800ea74:	f8cb 3000 	str.w	r3, [fp]
					break;
 800ea78:	e7ca      	b.n	800ea10 <xTaskIncrementTick.part.0+0xb8>
 800ea7a:	bf00      	nop
 800ea7c:	2001317c 	.word	0x2001317c
 800ea80:	20012c8c 	.word	0x20012c8c
 800ea84:	20013180 	.word	0x20013180
 800ea88:	20012c90 	.word	0x20012c90
 800ea8c:	20013134 	.word	0x20013134
 800ea90:	20013130 	.word	0x20013130
 800ea94:	20012c94 	.word	0x20012c94
 800ea98:	20012c88 	.word	0x20012c88
 800ea9c:	20013104 	.word	0x20013104

0800eaa0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800eaa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800eaa4:	4d41      	ldr	r5, [pc, #260]	; (800ebac <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800eaa6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800eaa8:	f7fe fc5c 	bl	800d364 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800eaac:	682b      	ldr	r3, [r5, #0]
 800eaae:	3b01      	subs	r3, #1
 800eab0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eab2:	682b      	ldr	r3, [r5, #0]
 800eab4:	2b00      	cmp	r3, #0
 800eab6:	d161      	bne.n	800eb7c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800eab8:	4b3d      	ldr	r3, [pc, #244]	; (800ebb0 <xTaskResumeAll.part.0+0x110>)
 800eaba:	681b      	ldr	r3, [r3, #0]
 800eabc:	2b00      	cmp	r3, #0
 800eabe:	d05d      	beq.n	800eb7c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800eac0:	4e3c      	ldr	r6, [pc, #240]	; (800ebb4 <xTaskResumeAll.part.0+0x114>)
 800eac2:	6833      	ldr	r3, [r6, #0]
 800eac4:	2b00      	cmp	r3, #0
 800eac6:	d06e      	beq.n	800eba6 <xTaskResumeAll.part.0+0x106>
 800eac8:	4f3b      	ldr	r7, [pc, #236]	; (800ebb8 <xTaskResumeAll.part.0+0x118>)
 800eaca:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800ebc8 <xTaskResumeAll.part.0+0x128>
 800eace:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800ebcc <xTaskResumeAll.part.0+0x12c>
 800ead2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800ebd0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ead6:	68f3      	ldr	r3, [r6, #12]
 800ead8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eada:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800eade:	f104 0018 	add.w	r0, r4, #24
 800eae2:	f7fe fbc3 	bl	800d26c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eae6:	4658      	mov	r0, fp
 800eae8:	f7fe fbc0 	bl	800d26c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800eaec:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800eaee:	683a      	ldr	r2, [r7, #0]
 800eaf0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800eaf4:	4293      	cmp	r3, r2
 800eaf6:	4659      	mov	r1, fp
 800eaf8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800eafc:	bf88      	it	hi
 800eafe:	603b      	strhi	r3, [r7, #0]
 800eb00:	f7fe fb8c 	bl	800d21c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800eb04:	f8d8 3000 	ldr.w	r3, [r8]
 800eb08:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800eb0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb0c:	429a      	cmp	r2, r3
 800eb0e:	d33d      	bcc.n	800eb8c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800eb10:	2301      	movs	r3, #1
 800eb12:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800eb16:	6833      	ldr	r3, [r6, #0]
 800eb18:	2b00      	cmp	r3, #0
 800eb1a:	d1dc      	bne.n	800ead6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eb1c:	4b27      	ldr	r3, [pc, #156]	; (800ebbc <xTaskResumeAll.part.0+0x11c>)
 800eb1e:	681a      	ldr	r2, [r3, #0]
 800eb20:	6812      	ldr	r2, [r2, #0]
 800eb22:	2a00      	cmp	r2, #0
 800eb24:	d03a      	beq.n	800eb9c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb26:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eb28:	4b25      	ldr	r3, [pc, #148]	; (800ebc0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb2a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eb2c:	68d2      	ldr	r2, [r2, #12]
 800eb2e:	6852      	ldr	r2, [r2, #4]
 800eb30:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800eb32:	4e24      	ldr	r6, [pc, #144]	; (800ebc4 <xTaskResumeAll.part.0+0x124>)
 800eb34:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800eb36:	b194      	cbz	r4, 800eb5e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800eb38:	2701      	movs	r7, #1
 800eb3a:	e006      	b.n	800eb4a <xTaskResumeAll.part.0+0xaa>
 800eb3c:	f7ff ff0c 	bl	800e958 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800eb40:	b108      	cbz	r0, 800eb46 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800eb42:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800eb46:	3c01      	subs	r4, #1
 800eb48:	d008      	beq.n	800eb5c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eb4a:	682b      	ldr	r3, [r5, #0]
 800eb4c:	2b00      	cmp	r3, #0
 800eb4e:	d0f5      	beq.n	800eb3c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800eb50:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800eb52:	3c01      	subs	r4, #1
		++xPendedTicks;
 800eb54:	f103 0301 	add.w	r3, r3, #1
 800eb58:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800eb5a:	d1f6      	bne.n	800eb4a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800eb5c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800eb5e:	f8da 3000 	ldr.w	r3, [sl]
 800eb62:	b15b      	cbz	r3, 800eb7c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800eb64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb68:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb6c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb70:	f3bf 8f4f 	dsb	sy
 800eb74:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800eb78:	2001      	movs	r0, #1
 800eb7a:	e000      	b.n	800eb7e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800eb7c:	2000      	movs	r0, #0
 800eb7e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800eb80:	f7fe fc12 	bl	800d3a8 <vPortExitCritical>
}
 800eb84:	9801      	ldr	r0, [sp, #4]
 800eb86:	b003      	add	sp, #12
 800eb88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800eb8c:	6833      	ldr	r3, [r6, #0]
 800eb8e:	2b00      	cmp	r3, #0
 800eb90:	d1a1      	bne.n	800ead6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eb92:	4b0a      	ldr	r3, [pc, #40]	; (800ebbc <xTaskResumeAll.part.0+0x11c>)
 800eb94:	681a      	ldr	r2, [r3, #0]
 800eb96:	6812      	ldr	r2, [r2, #0]
 800eb98:	2a00      	cmp	r2, #0
 800eb9a:	d1c4      	bne.n	800eb26 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800eb9c:	4b08      	ldr	r3, [pc, #32]	; (800ebc0 <xTaskResumeAll.part.0+0x120>)
 800eb9e:	f04f 32ff 	mov.w	r2, #4294967295
 800eba2:	601a      	str	r2, [r3, #0]
 800eba4:	e7c5      	b.n	800eb32 <xTaskResumeAll.part.0+0x92>
 800eba6:	f8df a028 	ldr.w	sl, [pc, #40]	; 800ebd0 <xTaskResumeAll.part.0+0x130>
 800ebaa:	e7c2      	b.n	800eb32 <xTaskResumeAll.part.0+0x92>
 800ebac:	200130fc 	.word	0x200130fc
 800ebb0:	200130f4 	.word	0x200130f4
 800ebb4:	2001313c 	.word	0x2001313c
 800ebb8:	20013104 	.word	0x20013104
 800ebbc:	20012c8c 	.word	0x20012c8c
 800ebc0:	20013130 	.word	0x20013130
 800ebc4:	20013138 	.word	0x20013138
 800ebc8:	20012c94 	.word	0x20012c94
 800ebcc:	20012c88 	.word	0x20012c88
 800ebd0:	20013180 	.word	0x20013180

0800ebd4 <xTaskCreateStatic>:
	{
 800ebd4:	b530      	push	{r4, r5, lr}
 800ebd6:	b087      	sub	sp, #28
 800ebd8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800ebda:	b1c4      	cbz	r4, 800ec0e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800ebdc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ebde:	b16d      	cbz	r5, 800ebfc <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ebe0:	25ac      	movs	r5, #172	; 0xac
 800ebe2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800ebe4:	9d05      	ldr	r5, [sp, #20]
 800ebe6:	2dac      	cmp	r5, #172	; 0xac
 800ebe8:	d01a      	beq.n	800ec20 <xTaskCreateStatic+0x4c>
 800ebea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebee:	f383 8811 	msr	BASEPRI, r3
 800ebf2:	f3bf 8f6f 	isb	sy
 800ebf6:	f3bf 8f4f 	dsb	sy
 800ebfa:	e7fe      	b.n	800ebfa <xTaskCreateStatic+0x26>
 800ebfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec00:	f383 8811 	msr	BASEPRI, r3
 800ec04:	f3bf 8f6f 	isb	sy
 800ec08:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ec0c:	e7fe      	b.n	800ec0c <xTaskCreateStatic+0x38>
 800ec0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec12:	f383 8811 	msr	BASEPRI, r3
 800ec16:	f3bf 8f6f 	isb	sy
 800ec1a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ec1e:	e7fe      	b.n	800ec1e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ec20:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ec22:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ec24:	2402      	movs	r4, #2
 800ec26:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ec2a:	ac04      	add	r4, sp, #16
 800ec2c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800ec30:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ec32:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ec34:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ec36:	f7ff fda9 	bl	800e78c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ec3a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ec3c:	f7ff fd1e 	bl	800e67c <prvAddNewTaskToReadyList>
	}
 800ec40:	9804      	ldr	r0, [sp, #16]
 800ec42:	b007      	add	sp, #28
 800ec44:	bd30      	pop	{r4, r5, pc}
 800ec46:	bf00      	nop

0800ec48 <xTaskCreate>:
	{
 800ec48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ec4c:	4607      	mov	r7, r0
 800ec4e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ec50:	0090      	lsls	r0, r2, #2
	{
 800ec52:	4615      	mov	r5, r2
 800ec54:	4688      	mov	r8, r1
 800ec56:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ec58:	f7fe f9b0 	bl	800cfbc <pvPortMalloc>
			if( pxStack != NULL )
 800ec5c:	b1d8      	cbz	r0, 800ec96 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ec5e:	4604      	mov	r4, r0
 800ec60:	20ac      	movs	r0, #172	; 0xac
 800ec62:	f7fe f9ab 	bl	800cfbc <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ec66:	4606      	mov	r6, r0
 800ec68:	b1d0      	cbz	r0, 800eca0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800ec6a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800ec6c:	2400      	movs	r4, #0
 800ec6e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ec72:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800ec74:	9401      	str	r4, [sp, #4]
 800ec76:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800ec78:	9602      	str	r6, [sp, #8]
 800ec7a:	464b      	mov	r3, r9
 800ec7c:	462a      	mov	r2, r5
 800ec7e:	4641      	mov	r1, r8
 800ec80:	4638      	mov	r0, r7
 800ec82:	9400      	str	r4, [sp, #0]
 800ec84:	f7ff fd82 	bl	800e78c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ec88:	4630      	mov	r0, r6
 800ec8a:	f7ff fcf7 	bl	800e67c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ec8e:	2001      	movs	r0, #1
	}
 800ec90:	b005      	add	sp, #20
 800ec92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ec96:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800ec9a:	b005      	add	sp, #20
 800ec9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800eca0:	4620      	mov	r0, r4
 800eca2:	f7fe fa47 	bl	800d134 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800eca6:	f04f 30ff 	mov.w	r0, #4294967295
 800ecaa:	e7f1      	b.n	800ec90 <xTaskCreate+0x48>

0800ecac <vTaskDelay>:
	{
 800ecac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800ecae:	b950      	cbnz	r0, 800ecc6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800ecb0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ecb4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ecb8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ecbc:	f3bf 8f4f 	dsb	sy
 800ecc0:	f3bf 8f6f 	isb	sy
	}
 800ecc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800ecc6:	4d1e      	ldr	r5, [pc, #120]	; (800ed40 <vTaskDelay+0x94>)
 800ecc8:	682b      	ldr	r3, [r5, #0]
 800ecca:	b143      	cbz	r3, 800ecde <vTaskDelay+0x32>
 800eccc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecd0:	f383 8811 	msr	BASEPRI, r3
 800ecd4:	f3bf 8f6f 	isb	sy
 800ecd8:	f3bf 8f4f 	dsb	sy
 800ecdc:	e7fe      	b.n	800ecdc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800ecde:	682b      	ldr	r3, [r5, #0]
 800ece0:	3301      	adds	r3, #1
 800ece2:	4604      	mov	r4, r0
 800ece4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800ece6:	4b17      	ldr	r3, [pc, #92]	; (800ed44 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ece8:	4e17      	ldr	r6, [pc, #92]	; (800ed48 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800ecea:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ecec:	6830      	ldr	r0, [r6, #0]
 800ecee:	3004      	adds	r0, #4
 800ecf0:	f7fe fabc 	bl	800d26c <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ecf4:	6833      	ldr	r3, [r6, #0]
 800ecf6:	19e4      	adds	r4, r4, r7
 800ecf8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800ecfa:	d310      	bcc.n	800ed1e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ecfc:	4b13      	ldr	r3, [pc, #76]	; (800ed4c <vTaskDelay+0xa0>)
 800ecfe:	6818      	ldr	r0, [r3, #0]
 800ed00:	6831      	ldr	r1, [r6, #0]
 800ed02:	3104      	adds	r1, #4
 800ed04:	f7fe fa9a 	bl	800d23c <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800ed08:	682b      	ldr	r3, [r5, #0]
 800ed0a:	b9a3      	cbnz	r3, 800ed36 <vTaskDelay+0x8a>
 800ed0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed10:	f383 8811 	msr	BASEPRI, r3
 800ed14:	f3bf 8f6f 	isb	sy
 800ed18:	f3bf 8f4f 	dsb	sy
 800ed1c:	e7fe      	b.n	800ed1c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ed1e:	4b0c      	ldr	r3, [pc, #48]	; (800ed50 <vTaskDelay+0xa4>)
 800ed20:	6818      	ldr	r0, [r3, #0]
 800ed22:	6831      	ldr	r1, [r6, #0]
 800ed24:	3104      	adds	r1, #4
 800ed26:	f7fe fa89 	bl	800d23c <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800ed2a:	4b0a      	ldr	r3, [pc, #40]	; (800ed54 <vTaskDelay+0xa8>)
 800ed2c:	681a      	ldr	r2, [r3, #0]
 800ed2e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800ed30:	bf38      	it	cc
 800ed32:	601c      	strcc	r4, [r3, #0]
 800ed34:	e7e8      	b.n	800ed08 <vTaskDelay+0x5c>
 800ed36:	f7ff feb3 	bl	800eaa0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800ed3a:	2800      	cmp	r0, #0
 800ed3c:	d0b8      	beq.n	800ecb0 <vTaskDelay+0x4>
	}
 800ed3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ed40:	200130fc 	.word	0x200130fc
 800ed44:	2001317c 	.word	0x2001317c
 800ed48:	20012c88 	.word	0x20012c88
 800ed4c:	20012c90 	.word	0x20012c90
 800ed50:	20012c8c 	.word	0x20012c8c
 800ed54:	20013130 	.word	0x20013130

0800ed58 <vTaskStartScheduler>:
{
 800ed58:	b530      	push	{r4, r5, lr}
 800ed5a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ed5c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ed5e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ed60:	a906      	add	r1, sp, #24
 800ed62:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ed64:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ed68:	f7fe f90a 	bl	800cf80 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800ed6c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ed70:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800ed72:	b1bb      	cbz	r3, 800eda4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800ed74:	b16d      	cbz	r5, 800ed92 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ed76:	21ac      	movs	r1, #172	; 0xac
 800ed78:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800ed7a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ed7c:	29ac      	cmp	r1, #172	; 0xac
 800ed7e:	d01a      	beq.n	800edb6 <vTaskStartScheduler+0x5e>
 800ed80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed84:	f383 8811 	msr	BASEPRI, r3
 800ed88:	f3bf 8f6f 	isb	sy
 800ed8c:	f3bf 8f4f 	dsb	sy
 800ed90:	e7fe      	b.n	800ed90 <vTaskStartScheduler+0x38>
 800ed92:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed96:	f383 8811 	msr	BASEPRI, r3
 800ed9a:	f3bf 8f6f 	isb	sy
 800ed9e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800eda2:	e7fe      	b.n	800eda2 <vTaskStartScheduler+0x4a>
 800eda4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eda8:	f383 8811 	msr	BASEPRI, r3
 800edac:	f3bf 8f6f 	isb	sy
 800edb0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800edb4:	e7fe      	b.n	800edb4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800edb6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800edb8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800edba:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800edbc:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800edc0:	4623      	mov	r3, r4
 800edc2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800edc6:	491b      	ldr	r1, [pc, #108]	; (800ee34 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800edc8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800edca:	9400      	str	r4, [sp, #0]
 800edcc:	481a      	ldr	r0, [pc, #104]	; (800ee38 <vTaskStartScheduler+0xe0>)
 800edce:	f7ff fcdd 	bl	800e78c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800edd2:	4628      	mov	r0, r5
 800edd4:	f7ff fc52 	bl	800e67c <prvAddNewTaskToReadyList>
		return xReturn;
 800edd8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800edda:	b1eb      	cbz	r3, 800ee18 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800eddc:	f000 fc6e 	bl	800f6bc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800ede0:	2801      	cmp	r0, #1
 800ede2:	d11b      	bne.n	800ee1c <vTaskStartScheduler+0xc4>
 800ede4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ede8:	f383 8811 	msr	BASEPRI, r3
 800edec:	f3bf 8f6f 	isb	sy
 800edf0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800edf4:	4b11      	ldr	r3, [pc, #68]	; (800ee3c <vTaskStartScheduler+0xe4>)
 800edf6:	4a12      	ldr	r2, [pc, #72]	; (800ee40 <vTaskStartScheduler+0xe8>)
 800edf8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800edfa:	4912      	ldr	r1, [pc, #72]	; (800ee44 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800edfc:	3358      	adds	r3, #88	; 0x58
 800edfe:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800ee00:	4a11      	ldr	r2, [pc, #68]	; (800ee48 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ee02:	4b12      	ldr	r3, [pc, #72]	; (800ee4c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800ee04:	f04f 35ff 	mov.w	r5, #4294967295
 800ee08:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800ee0a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ee0c:	601c      	str	r4, [r3, #0]
}
 800ee0e:	b00b      	add	sp, #44	; 0x2c
 800ee10:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800ee14:	f7fe bb38 	b.w	800d488 <xPortStartScheduler>
}
 800ee18:	b00b      	add	sp, #44	; 0x2c
 800ee1a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800ee1c:	3001      	adds	r0, #1
 800ee1e:	d1fb      	bne.n	800ee18 <vTaskStartScheduler+0xc0>
 800ee20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee24:	f383 8811 	msr	BASEPRI, r3
 800ee28:	f3bf 8f6f 	isb	sy
 800ee2c:	f3bf 8f4f 	dsb	sy
 800ee30:	e7fe      	b.n	800ee30 <vTaskStartScheduler+0xd8>
 800ee32:	bf00      	nop
 800ee34:	0802e594 	.word	0x0802e594
 800ee38:	0800e8b9 	.word	0x0800e8b9
 800ee3c:	20012c88 	.word	0x20012c88
 800ee40:	2000017c 	.word	0x2000017c
 800ee44:	20013130 	.word	0x20013130
 800ee48:	20013150 	.word	0x20013150
 800ee4c:	2001317c 	.word	0x2001317c

0800ee50 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800ee50:	4a02      	ldr	r2, [pc, #8]	; (800ee5c <vTaskSuspendAll+0xc>)
 800ee52:	6813      	ldr	r3, [r2, #0]
 800ee54:	3301      	adds	r3, #1
 800ee56:	6013      	str	r3, [r2, #0]
}
 800ee58:	4770      	bx	lr
 800ee5a:	bf00      	nop
 800ee5c:	200130fc 	.word	0x200130fc

0800ee60 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800ee60:	4b06      	ldr	r3, [pc, #24]	; (800ee7c <xTaskResumeAll+0x1c>)
 800ee62:	681b      	ldr	r3, [r3, #0]
 800ee64:	b943      	cbnz	r3, 800ee78 <xTaskResumeAll+0x18>
 800ee66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee6a:	f383 8811 	msr	BASEPRI, r3
 800ee6e:	f3bf 8f6f 	isb	sy
 800ee72:	f3bf 8f4f 	dsb	sy
 800ee76:	e7fe      	b.n	800ee76 <xTaskResumeAll+0x16>
 800ee78:	f7ff be12 	b.w	800eaa0 <xTaskResumeAll.part.0>
 800ee7c:	200130fc 	.word	0x200130fc

0800ee80 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ee80:	4b01      	ldr	r3, [pc, #4]	; (800ee88 <xTaskGetTickCount+0x8>)
 800ee82:	6818      	ldr	r0, [r3, #0]
}
 800ee84:	4770      	bx	lr
 800ee86:	bf00      	nop
 800ee88:	2001317c 	.word	0x2001317c

0800ee8c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ee8c:	4b05      	ldr	r3, [pc, #20]	; (800eea4 <xTaskIncrementTick+0x18>)
 800ee8e:	681b      	ldr	r3, [r3, #0]
 800ee90:	b90b      	cbnz	r3, 800ee96 <xTaskIncrementTick+0xa>
 800ee92:	f7ff bd61 	b.w	800e958 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800ee96:	4a04      	ldr	r2, [pc, #16]	; (800eea8 <xTaskIncrementTick+0x1c>)
 800ee98:	6813      	ldr	r3, [r2, #0]
 800ee9a:	3301      	adds	r3, #1
}
 800ee9c:	2000      	movs	r0, #0
		++xPendedTicks;
 800ee9e:	6013      	str	r3, [r2, #0]
}
 800eea0:	4770      	bx	lr
 800eea2:	bf00      	nop
 800eea4:	200130fc 	.word	0x200130fc
 800eea8:	20013138 	.word	0x20013138

0800eeac <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800eeac:	4b1f      	ldr	r3, [pc, #124]	; (800ef2c <vTaskSwitchContext+0x80>)
 800eeae:	681b      	ldr	r3, [r3, #0]
 800eeb0:	b11b      	cbz	r3, 800eeba <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800eeb2:	4b1f      	ldr	r3, [pc, #124]	; (800ef30 <vTaskSwitchContext+0x84>)
 800eeb4:	2201      	movs	r2, #1
 800eeb6:	601a      	str	r2, [r3, #0]
 800eeb8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800eeba:	4a1d      	ldr	r2, [pc, #116]	; (800ef30 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eebc:	491d      	ldr	r1, [pc, #116]	; (800ef34 <vTaskSwitchContext+0x88>)
{
 800eebe:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eec0:	4c1d      	ldr	r4, [pc, #116]	; (800ef38 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800eec2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eec4:	6823      	ldr	r3, [r4, #0]
 800eec6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800eeca:	0092      	lsls	r2, r2, #2
 800eecc:	0098      	lsls	r0, r3, #2
 800eece:	588a      	ldr	r2, [r1, r2]
 800eed0:	b942      	cbnz	r2, 800eee4 <vTaskSwitchContext+0x38>
 800eed2:	b313      	cbz	r3, 800ef1a <vTaskSwitchContext+0x6e>
 800eed4:	3b01      	subs	r3, #1
 800eed6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800eeda:	0098      	lsls	r0, r3, #2
 800eedc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800eee0:	2a00      	cmp	r2, #0
 800eee2:	d0f6      	beq.n	800eed2 <vTaskSwitchContext+0x26>
 800eee4:	4418      	add	r0, r3
 800eee6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800eeea:	4662      	mov	r2, ip
 800eeec:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800eef0:	6849      	ldr	r1, [r1, #4]
 800eef2:	f8cc 1004 	str.w	r1, [ip, #4]
 800eef6:	3208      	adds	r2, #8
 800eef8:	4291      	cmp	r1, r2
 800eefa:	bf08      	it	eq
 800eefc:	6849      	ldreq	r1, [r1, #4]
 800eefe:	4a0f      	ldr	r2, [pc, #60]	; (800ef3c <vTaskSwitchContext+0x90>)
 800ef00:	bf08      	it	eq
 800ef02:	f8cc 1004 	streq.w	r1, [ip, #4]
 800ef06:	68c9      	ldr	r1, [r1, #12]
 800ef08:	6011      	str	r1, [r2, #0]
 800ef0a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ef0c:	6813      	ldr	r3, [r2, #0]
 800ef0e:	4a0c      	ldr	r2, [pc, #48]	; (800ef40 <vTaskSwitchContext+0x94>)
}
 800ef10:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ef14:	3358      	adds	r3, #88	; 0x58
 800ef16:	6013      	str	r3, [r2, #0]
}
 800ef18:	4770      	bx	lr
 800ef1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef1e:	f383 8811 	msr	BASEPRI, r3
 800ef22:	f3bf 8f6f 	isb	sy
 800ef26:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ef2a:	e7fe      	b.n	800ef2a <vTaskSwitchContext+0x7e>
 800ef2c:	200130fc 	.word	0x200130fc
 800ef30:	20013180 	.word	0x20013180
 800ef34:	20012c94 	.word	0x20012c94
 800ef38:	20013104 	.word	0x20013104
 800ef3c:	20012c88 	.word	0x20012c88
 800ef40:	2000017c 	.word	0x2000017c

0800ef44 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800ef44:	b1d0      	cbz	r0, 800ef7c <vTaskPlaceOnEventList+0x38>
{
 800ef46:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ef48:	4d1a      	ldr	r5, [pc, #104]	; (800efb4 <vTaskPlaceOnEventList+0x70>)
 800ef4a:	460c      	mov	r4, r1
 800ef4c:	6829      	ldr	r1, [r5, #0]
 800ef4e:	3118      	adds	r1, #24
 800ef50:	f7fe f974 	bl	800d23c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ef54:	4b18      	ldr	r3, [pc, #96]	; (800efb8 <vTaskPlaceOnEventList+0x74>)
 800ef56:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ef58:	6828      	ldr	r0, [r5, #0]
 800ef5a:	3004      	adds	r0, #4
 800ef5c:	f7fe f986 	bl	800d26c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800ef60:	1c63      	adds	r3, r4, #1
 800ef62:	d014      	beq.n	800ef8e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ef64:	682b      	ldr	r3, [r5, #0]
 800ef66:	19a4      	adds	r4, r4, r6
 800ef68:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ef6a:	d317      	bcc.n	800ef9c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef6c:	4b13      	ldr	r3, [pc, #76]	; (800efbc <vTaskPlaceOnEventList+0x78>)
 800ef6e:	6818      	ldr	r0, [r3, #0]
 800ef70:	6829      	ldr	r1, [r5, #0]
}
 800ef72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef76:	3104      	adds	r1, #4
 800ef78:	f7fe b960 	b.w	800d23c <vListInsert>
 800ef7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef80:	f383 8811 	msr	BASEPRI, r3
 800ef84:	f3bf 8f6f 	isb	sy
 800ef88:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800ef8c:	e7fe      	b.n	800ef8c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef8e:	6829      	ldr	r1, [r5, #0]
 800ef90:	480b      	ldr	r0, [pc, #44]	; (800efc0 <vTaskPlaceOnEventList+0x7c>)
}
 800ef92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef96:	3104      	adds	r1, #4
 800ef98:	f7fe b940 	b.w	800d21c <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef9c:	4b09      	ldr	r3, [pc, #36]	; (800efc4 <vTaskPlaceOnEventList+0x80>)
 800ef9e:	6818      	ldr	r0, [r3, #0]
 800efa0:	6829      	ldr	r1, [r5, #0]
 800efa2:	3104      	adds	r1, #4
 800efa4:	f7fe f94a 	bl	800d23c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800efa8:	4b07      	ldr	r3, [pc, #28]	; (800efc8 <vTaskPlaceOnEventList+0x84>)
 800efaa:	681a      	ldr	r2, [r3, #0]
 800efac:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800efae:	bf38      	it	cc
 800efb0:	601c      	strcc	r4, [r3, #0]
}
 800efb2:	bd70      	pop	{r4, r5, r6, pc}
 800efb4:	20012c88 	.word	0x20012c88
 800efb8:	2001317c 	.word	0x2001317c
 800efbc:	20012c90 	.word	0x20012c90
 800efc0:	20013154 	.word	0x20013154
 800efc4:	20012c8c 	.word	0x20012c8c
 800efc8:	20013130 	.word	0x20013130

0800efcc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800efcc:	b330      	cbz	r0, 800f01c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800efce:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800efd0:	4e1d      	ldr	r6, [pc, #116]	; (800f048 <vTaskPlaceOnEventListRestricted+0x7c>)
 800efd2:	460c      	mov	r4, r1
 800efd4:	6831      	ldr	r1, [r6, #0]
 800efd6:	4615      	mov	r5, r2
 800efd8:	3118      	adds	r1, #24
 800efda:	f7fe f91f 	bl	800d21c <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800efde:	4b1b      	ldr	r3, [pc, #108]	; (800f04c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800efe0:	b985      	cbnz	r5, 800f004 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800efe2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800efe4:	6830      	ldr	r0, [r6, #0]
 800efe6:	3004      	adds	r0, #4
 800efe8:	f7fe f940 	bl	800d26c <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800efec:	6833      	ldr	r3, [r6, #0]
 800efee:	1964      	adds	r4, r4, r5
 800eff0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800eff2:	d31c      	bcc.n	800f02e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eff4:	4b16      	ldr	r3, [pc, #88]	; (800f050 <vTaskPlaceOnEventListRestricted+0x84>)
 800eff6:	6818      	ldr	r0, [r3, #0]
 800eff8:	6831      	ldr	r1, [r6, #0]
	}
 800effa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800effe:	3104      	adds	r1, #4
 800f000:	f7fe b91c 	b.w	800d23c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f004:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f006:	6830      	ldr	r0, [r6, #0]
 800f008:	3004      	adds	r0, #4
 800f00a:	f7fe f92f 	bl	800d26c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f00e:	6831      	ldr	r1, [r6, #0]
 800f010:	4810      	ldr	r0, [pc, #64]	; (800f054 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800f012:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f016:	3104      	adds	r1, #4
 800f018:	f7fe b900 	b.w	800d21c <vListInsertEnd>
 800f01c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f020:	f383 8811 	msr	BASEPRI, r3
 800f024:	f3bf 8f6f 	isb	sy
 800f028:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800f02c:	e7fe      	b.n	800f02c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f02e:	4b0a      	ldr	r3, [pc, #40]	; (800f058 <vTaskPlaceOnEventListRestricted+0x8c>)
 800f030:	6818      	ldr	r0, [r3, #0]
 800f032:	6831      	ldr	r1, [r6, #0]
 800f034:	3104      	adds	r1, #4
 800f036:	f7fe f901 	bl	800d23c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f03a:	4b08      	ldr	r3, [pc, #32]	; (800f05c <vTaskPlaceOnEventListRestricted+0x90>)
 800f03c:	681a      	ldr	r2, [r3, #0]
 800f03e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f040:	bf38      	it	cc
 800f042:	601c      	strcc	r4, [r3, #0]
	}
 800f044:	bd70      	pop	{r4, r5, r6, pc}
 800f046:	bf00      	nop
 800f048:	20012c88 	.word	0x20012c88
 800f04c:	2001317c 	.word	0x2001317c
 800f050:	20012c90 	.word	0x20012c90
 800f054:	20013154 	.word	0x20013154
 800f058:	20012c8c 	.word	0x20012c8c
 800f05c:	20013130 	.word	0x20013130

0800f060 <xTaskRemoveFromEventList>:
{
 800f060:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f062:	68c3      	ldr	r3, [r0, #12]
 800f064:	68dc      	ldr	r4, [r3, #12]
{
 800f066:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800f068:	2c00      	cmp	r4, #0
 800f06a:	d02b      	beq.n	800f0c4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800f06c:	f104 0518 	add.w	r5, r4, #24
 800f070:	4628      	mov	r0, r5
 800f072:	f7fe f8fb 	bl	800d26c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f076:	4b18      	ldr	r3, [pc, #96]	; (800f0d8 <xTaskRemoveFromEventList+0x78>)
 800f078:	681b      	ldr	r3, [r3, #0]
 800f07a:	b17b      	cbz	r3, 800f09c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f07c:	4817      	ldr	r0, [pc, #92]	; (800f0dc <xTaskRemoveFromEventList+0x7c>)
 800f07e:	4629      	mov	r1, r5
 800f080:	f7fe f8cc 	bl	800d21c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f084:	4b16      	ldr	r3, [pc, #88]	; (800f0e0 <xTaskRemoveFromEventList+0x80>)
 800f086:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f088:	681b      	ldr	r3, [r3, #0]
 800f08a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f08c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f08e:	bf85      	ittet	hi
 800f090:	4b14      	ldrhi	r3, [pc, #80]	; (800f0e4 <xTaskRemoveFromEventList+0x84>)
 800f092:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f094:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f096:	6018      	strhi	r0, [r3, #0]
}
 800f098:	b003      	add	sp, #12
 800f09a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f09c:	1d21      	adds	r1, r4, #4
 800f09e:	4608      	mov	r0, r1
 800f0a0:	9101      	str	r1, [sp, #4]
 800f0a2:	f7fe f8e3 	bl	800d26c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f0a6:	4a10      	ldr	r2, [pc, #64]	; (800f0e8 <xTaskRemoveFromEventList+0x88>)
 800f0a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f0aa:	6810      	ldr	r0, [r2, #0]
 800f0ac:	9901      	ldr	r1, [sp, #4]
 800f0ae:	4283      	cmp	r3, r0
 800f0b0:	480e      	ldr	r0, [pc, #56]	; (800f0ec <xTaskRemoveFromEventList+0x8c>)
 800f0b2:	bf88      	it	hi
 800f0b4:	6013      	strhi	r3, [r2, #0]
 800f0b6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f0ba:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f0be:	f7fe f8ad 	bl	800d21c <vListInsertEnd>
 800f0c2:	e7df      	b.n	800f084 <xTaskRemoveFromEventList+0x24>
 800f0c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0c8:	f383 8811 	msr	BASEPRI, r3
 800f0cc:	f3bf 8f6f 	isb	sy
 800f0d0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f0d4:	e7fe      	b.n	800f0d4 <xTaskRemoveFromEventList+0x74>
 800f0d6:	bf00      	nop
 800f0d8:	200130fc 	.word	0x200130fc
 800f0dc:	2001313c 	.word	0x2001313c
 800f0e0:	20012c88 	.word	0x20012c88
 800f0e4:	20013180 	.word	0x20013180
 800f0e8:	20013104 	.word	0x20013104
 800f0ec:	20012c94 	.word	0x20012c94

0800f0f0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f0f0:	4a03      	ldr	r2, [pc, #12]	; (800f100 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f0f2:	4b04      	ldr	r3, [pc, #16]	; (800f104 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f0f4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f0f6:	681b      	ldr	r3, [r3, #0]
 800f0f8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f0fc:	4770      	bx	lr
 800f0fe:	bf00      	nop
 800f100:	20013134 	.word	0x20013134
 800f104:	2001317c 	.word	0x2001317c

0800f108 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f108:	b328      	cbz	r0, 800f156 <xTaskCheckForTimeOut+0x4e>
{
 800f10a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f10c:	460d      	mov	r5, r1
 800f10e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f110:	b1c1      	cbz	r1, 800f144 <xTaskCheckForTimeOut+0x3c>
 800f112:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f114:	f7fe f926 	bl	800d364 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f118:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f11a:	4a1d      	ldr	r2, [pc, #116]	; (800f190 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f11c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f11e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f120:	d030      	beq.n	800f184 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f122:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f194 <xTaskCheckForTimeOut+0x8c>
 800f126:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f12a:	f8dc 7000 	ldr.w	r7, [ip]
 800f12e:	42be      	cmp	r6, r7
 800f130:	d01a      	beq.n	800f168 <xTaskCheckForTimeOut+0x60>
 800f132:	4288      	cmp	r0, r1
 800f134:	d818      	bhi.n	800f168 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f136:	2001      	movs	r0, #1
 800f138:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f13a:	f7fe f935 	bl	800d3a8 <vPortExitCritical>
}
 800f13e:	9801      	ldr	r0, [sp, #4]
 800f140:	b003      	add	sp, #12
 800f142:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f144:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f148:	f383 8811 	msr	BASEPRI, r3
 800f14c:	f3bf 8f6f 	isb	sy
 800f150:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f154:	e7fe      	b.n	800f154 <xTaskCheckForTimeOut+0x4c>
 800f156:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f15a:	f383 8811 	msr	BASEPRI, r3
 800f15e:	f3bf 8f6f 	isb	sy
 800f162:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f166:	e7fe      	b.n	800f166 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f168:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f16c:	4573      	cmp	r3, lr
 800f16e:	d90b      	bls.n	800f188 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f170:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f172:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f176:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f178:	4403      	add	r3, r0
 800f17a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f17c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f17e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f182:	e7d9      	b.n	800f138 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f184:	2000      	movs	r0, #0
 800f186:	e7d7      	b.n	800f138 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f188:	2300      	movs	r3, #0
 800f18a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f18c:	2001      	movs	r0, #1
 800f18e:	e7d3      	b.n	800f138 <xTaskCheckForTimeOut+0x30>
 800f190:	2001317c 	.word	0x2001317c
 800f194:	20013134 	.word	0x20013134

0800f198 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f198:	4b01      	ldr	r3, [pc, #4]	; (800f1a0 <vTaskMissedYield+0x8>)
 800f19a:	2201      	movs	r2, #1
 800f19c:	601a      	str	r2, [r3, #0]
}
 800f19e:	4770      	bx	lr
 800f1a0:	20013180 	.word	0x20013180

0800f1a4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f1a4:	4b05      	ldr	r3, [pc, #20]	; (800f1bc <xTaskGetSchedulerState+0x18>)
 800f1a6:	681b      	ldr	r3, [r3, #0]
 800f1a8:	b133      	cbz	r3, 800f1b8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f1aa:	4b05      	ldr	r3, [pc, #20]	; (800f1c0 <xTaskGetSchedulerState+0x1c>)
 800f1ac:	6818      	ldr	r0, [r3, #0]
 800f1ae:	fab0 f080 	clz	r0, r0
 800f1b2:	0940      	lsrs	r0, r0, #5
 800f1b4:	0040      	lsls	r0, r0, #1
 800f1b6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f1b8:	2001      	movs	r0, #1
	}
 800f1ba:	4770      	bx	lr
 800f1bc:	20013150 	.word	0x20013150
 800f1c0:	200130fc 	.word	0x200130fc

0800f1c4 <xTaskPriorityInherit>:
	{
 800f1c4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f1c6:	4604      	mov	r4, r0
	{
 800f1c8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f1ca:	b1c8      	cbz	r0, 800f200 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f1cc:	4d1d      	ldr	r5, [pc, #116]	; (800f244 <xTaskPriorityInherit+0x80>)
 800f1ce:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f1d0:	682a      	ldr	r2, [r5, #0]
 800f1d2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f1d4:	4293      	cmp	r3, r2
 800f1d6:	d215      	bcs.n	800f204 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f1d8:	6982      	ldr	r2, [r0, #24]
 800f1da:	2a00      	cmp	r2, #0
 800f1dc:	db04      	blt.n	800f1e8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f1de:	682a      	ldr	r2, [r5, #0]
 800f1e0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f1e2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f1e6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f1e8:	4e17      	ldr	r6, [pc, #92]	; (800f248 <xTaskPriorityInherit+0x84>)
 800f1ea:	6962      	ldr	r2, [r4, #20]
 800f1ec:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f1f0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f1f4:	429a      	cmp	r2, r3
 800f1f6:	d00e      	beq.n	800f216 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f1f8:	682b      	ldr	r3, [r5, #0]
 800f1fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f1fc:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f1fe:	2001      	movs	r0, #1
	}
 800f200:	b002      	add	sp, #8
 800f202:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f204:	682b      	ldr	r3, [r5, #0]
 800f206:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f208:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f20a:	4298      	cmp	r0, r3
 800f20c:	bf2c      	ite	cs
 800f20e:	2000      	movcs	r0, #0
 800f210:	2001      	movcc	r0, #1
	}
 800f212:	b002      	add	sp, #8
 800f214:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f216:	1d21      	adds	r1, r4, #4
 800f218:	4608      	mov	r0, r1
 800f21a:	9101      	str	r1, [sp, #4]
 800f21c:	f7fe f826 	bl	800d26c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f220:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f222:	4b0a      	ldr	r3, [pc, #40]	; (800f24c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f224:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f226:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f228:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f22a:	4290      	cmp	r0, r2
 800f22c:	bf88      	it	hi
 800f22e:	6018      	strhi	r0, [r3, #0]
 800f230:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f234:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f238:	9901      	ldr	r1, [sp, #4]
 800f23a:	f7fd ffef 	bl	800d21c <vListInsertEnd>
				xReturn = pdTRUE;
 800f23e:	2001      	movs	r0, #1
 800f240:	e7de      	b.n	800f200 <xTaskPriorityInherit+0x3c>
 800f242:	bf00      	nop
 800f244:	20012c88 	.word	0x20012c88
 800f248:	20012c94 	.word	0x20012c94
 800f24c:	20013104 	.word	0x20013104

0800f250 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f250:	b318      	cbz	r0, 800f29a <xTaskPriorityDisinherit+0x4a>
	{
 800f252:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f254:	4b1e      	ldr	r3, [pc, #120]	; (800f2d0 <xTaskPriorityDisinherit+0x80>)
 800f256:	681c      	ldr	r4, [r3, #0]
 800f258:	4284      	cmp	r4, r0
	{
 800f25a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f25c:	d008      	beq.n	800f270 <xTaskPriorityDisinherit+0x20>
 800f25e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f262:	f383 8811 	msr	BASEPRI, r3
 800f266:	f3bf 8f6f 	isb	sy
 800f26a:	f3bf 8f4f 	dsb	sy
 800f26e:	e7fe      	b.n	800f26e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f270:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f272:	b14b      	cbz	r3, 800f288 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f274:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f276:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f278:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f27a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f27c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f27e:	d000      	beq.n	800f282 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f280:	b16b      	cbz	r3, 800f29e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f282:	2000      	movs	r0, #0
	}
 800f284:	b002      	add	sp, #8
 800f286:	bd10      	pop	{r4, pc}
 800f288:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f28c:	f383 8811 	msr	BASEPRI, r3
 800f290:	f3bf 8f6f 	isb	sy
 800f294:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f298:	e7fe      	b.n	800f298 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f29a:	2000      	movs	r0, #0
	}
 800f29c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f29e:	1d21      	adds	r1, r4, #4
 800f2a0:	4608      	mov	r0, r1
 800f2a2:	9101      	str	r1, [sp, #4]
 800f2a4:	f7fd ffe2 	bl	800d26c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f2a8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f2aa:	4a0a      	ldr	r2, [pc, #40]	; (800f2d4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f2ac:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f2ae:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f2b2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f2b4:	6810      	ldr	r0, [r2, #0]
 800f2b6:	9901      	ldr	r1, [sp, #4]
 800f2b8:	4283      	cmp	r3, r0
 800f2ba:	4807      	ldr	r0, [pc, #28]	; (800f2d8 <xTaskPriorityDisinherit+0x88>)
 800f2bc:	bf88      	it	hi
 800f2be:	6013      	strhi	r3, [r2, #0]
 800f2c0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f2c4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f2c8:	f7fd ffa8 	bl	800d21c <vListInsertEnd>
					xReturn = pdTRUE;
 800f2cc:	2001      	movs	r0, #1
		return xReturn;
 800f2ce:	e7d9      	b.n	800f284 <xTaskPriorityDisinherit+0x34>
 800f2d0:	20012c88 	.word	0x20012c88
 800f2d4:	20013104 	.word	0x20013104
 800f2d8:	20012c94 	.word	0x20012c94

0800f2dc <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f2dc:	2800      	cmp	r0, #0
 800f2de:	d041      	beq.n	800f364 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f2e0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f2e2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f2e4:	b083      	sub	sp, #12
 800f2e6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f2e8:	b153      	cbz	r3, 800f300 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f2ea:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f2ec:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f2ee:	4281      	cmp	r1, r0
 800f2f0:	bf38      	it	cc
 800f2f2:	4601      	movcc	r1, r0
 800f2f4:	428a      	cmp	r2, r1
 800f2f6:	d001      	beq.n	800f2fc <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f2f8:	2b01      	cmp	r3, #1
 800f2fa:	d00a      	beq.n	800f312 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f2fc:	b003      	add	sp, #12
 800f2fe:	bd30      	pop	{r4, r5, pc}
 800f300:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f304:	f383 8811 	msr	BASEPRI, r3
 800f308:	f3bf 8f6f 	isb	sy
 800f30c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f310:	e7fe      	b.n	800f310 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f312:	4b19      	ldr	r3, [pc, #100]	; (800f378 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f314:	681b      	ldr	r3, [r3, #0]
 800f316:	42a3      	cmp	r3, r4
 800f318:	d025      	beq.n	800f366 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f31a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f31c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f31e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f320:	bfa8      	it	ge
 800f322:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f326:	4d15      	ldr	r5, [pc, #84]	; (800f37c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f328:	bfa8      	it	ge
 800f32a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f32c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f330:	6961      	ldr	r1, [r4, #20]
 800f332:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f336:	4299      	cmp	r1, r3
 800f338:	d1e0      	bne.n	800f2fc <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f33a:	1d21      	adds	r1, r4, #4
 800f33c:	4608      	mov	r0, r1
 800f33e:	9101      	str	r1, [sp, #4]
 800f340:	f7fd ff94 	bl	800d26c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f344:	4b0e      	ldr	r3, [pc, #56]	; (800f380 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f346:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f348:	681a      	ldr	r2, [r3, #0]
 800f34a:	9901      	ldr	r1, [sp, #4]
 800f34c:	4290      	cmp	r0, r2
 800f34e:	bf88      	it	hi
 800f350:	6018      	strhi	r0, [r3, #0]
 800f352:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f356:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f35a:	b003      	add	sp, #12
 800f35c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f360:	f7fd bf5c 	b.w	800d21c <vListInsertEnd>
 800f364:	4770      	bx	lr
 800f366:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f36a:	f383 8811 	msr	BASEPRI, r3
 800f36e:	f3bf 8f6f 	isb	sy
 800f372:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f376:	e7fe      	b.n	800f376 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f378:	20012c88 	.word	0x20012c88
 800f37c:	20012c94 	.word	0x20012c94
 800f380:	20013104 	.word	0x20013104

0800f384 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f384:	4b04      	ldr	r3, [pc, #16]	; (800f398 <pvTaskIncrementMutexHeldCount+0x14>)
 800f386:	681a      	ldr	r2, [r3, #0]
 800f388:	b11a      	cbz	r2, 800f392 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f38a:	6819      	ldr	r1, [r3, #0]
 800f38c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f38e:	3201      	adds	r2, #1
 800f390:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f392:	6818      	ldr	r0, [r3, #0]
	}
 800f394:	4770      	bx	lr
 800f396:	bf00      	nop
 800f398:	20012c88 	.word	0x20012c88

0800f39c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f39c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f3a0:	4e22      	ldr	r6, [pc, #136]	; (800f42c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f3a2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f434 <prvSwitchTimerLists+0x98>
{
 800f3a6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f3a8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f3ac:	e00d      	b.n	800f3ca <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f3ae:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f3b0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f3b2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f3b4:	1d25      	adds	r5, r4, #4
 800f3b6:	4628      	mov	r0, r5
 800f3b8:	f7fd ff58 	bl	800d26c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f3bc:	6a23      	ldr	r3, [r4, #32]
 800f3be:	4620      	mov	r0, r4
 800f3c0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f3c2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f3c6:	075b      	lsls	r3, r3, #29
 800f3c8:	d40a      	bmi.n	800f3e0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f3ca:	6833      	ldr	r3, [r6, #0]
 800f3cc:	681a      	ldr	r2, [r3, #0]
 800f3ce:	2a00      	cmp	r2, #0
 800f3d0:	d1ed      	bne.n	800f3ae <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f3d2:	4a17      	ldr	r2, [pc, #92]	; (800f430 <prvSwitchTimerLists+0x94>)
 800f3d4:	6811      	ldr	r1, [r2, #0]
 800f3d6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f3d8:	6013      	str	r3, [r2, #0]
}
 800f3da:	b005      	add	sp, #20
 800f3dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f3e0:	69a3      	ldr	r3, [r4, #24]
 800f3e2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f3e4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f3e6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f3e8:	d205      	bcs.n	800f3f6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f3ea:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f3ec:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f3ee:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f3f0:	f7fd ff24 	bl	800d23c <vListInsert>
 800f3f4:	e7e9      	b.n	800f3ca <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f3f6:	f8d9 3000 	ldr.w	r3, [r9]
 800f3fa:	b16b      	cbz	r3, 800f418 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f3fc:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f400:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f402:	f7ff fecf 	bl	800f1a4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f406:	2300      	movs	r3, #0
 800f408:	f8d9 0000 	ldr.w	r0, [r9]
 800f40c:	461a      	mov	r2, r3
 800f40e:	4669      	mov	r1, sp
 800f410:	f7fe fa9c 	bl	800d94c <xQueueGenericSend>
				configASSERT( xResult );
 800f414:	2800      	cmp	r0, #0
 800f416:	d1d8      	bne.n	800f3ca <prvSwitchTimerLists+0x2e>
 800f418:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f41c:	f383 8811 	msr	BASEPRI, r3
 800f420:	f3bf 8f6f 	isb	sy
 800f424:	f3bf 8f4f 	dsb	sy
 800f428:	e7fe      	b.n	800f428 <prvSwitchTimerLists+0x8c>
 800f42a:	bf00      	nop
 800f42c:	20013184 	.word	0x20013184
 800f430:	20013188 	.word	0x20013188
 800f434:	200132a8 	.word	0x200132a8

0800f438 <prvTimerTask>:
{
 800f438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f43c:	4e9b      	ldr	r6, [pc, #620]	; (800f6ac <prvTimerTask+0x274>)
 800f43e:	4d9c      	ldr	r5, [pc, #624]	; (800f6b0 <prvTimerTask+0x278>)
 800f440:	4c9c      	ldr	r4, [pc, #624]	; (800f6b4 <prvTimerTask+0x27c>)
 800f442:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f444:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f448:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f44c:	6833      	ldr	r3, [r6, #0]
 800f44e:	681f      	ldr	r7, [r3, #0]
 800f450:	2f00      	cmp	r7, #0
 800f452:	f000 80a8 	beq.w	800f5a6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f456:	68db      	ldr	r3, [r3, #12]
 800f458:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f45a:	f7ff fcf9 	bl	800ee50 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f45e:	f7ff fd0f 	bl	800ee80 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f462:	682a      	ldr	r2, [r5, #0]
 800f464:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f466:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f468:	f0c0 80ae 	bcc.w	800f5c8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f46c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f46e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f470:	f240 80b4 	bls.w	800f5dc <prvTimerTask+0x1a4>
 800f474:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f476:	6820      	ldr	r0, [r4, #0]
 800f478:	eba7 010a 	sub.w	r1, r7, sl
 800f47c:	f7ff f89a 	bl	800e5b4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f480:	f7ff fcee 	bl	800ee60 <xTaskResumeAll>
 800f484:	b928      	cbnz	r0, 800f492 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f486:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f48a:	f3bf 8f4f 	dsb	sy
 800f48e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f492:	6820      	ldr	r0, [r4, #0]
 800f494:	2200      	movs	r2, #0
 800f496:	a902      	add	r1, sp, #8
 800f498:	f7fe fc94 	bl	800ddc4 <xQueueReceive>
 800f49c:	2800      	cmp	r0, #0
 800f49e:	d0d5      	beq.n	800f44c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f4a0:	9b02      	ldr	r3, [sp, #8]
 800f4a2:	2b00      	cmp	r3, #0
 800f4a4:	db76      	blt.n	800f594 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f4a6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f4a8:	697b      	ldr	r3, [r7, #20]
 800f4aa:	b113      	cbz	r3, 800f4b2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f4ac:	1d38      	adds	r0, r7, #4
 800f4ae:	f7fd fedd 	bl	800d26c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f4b2:	f7ff fce5 	bl	800ee80 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f4b6:	682b      	ldr	r3, [r5, #0]
 800f4b8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f4ba:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f4bc:	f0c0 808b 	bcc.w	800f5d6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f4c0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f4c2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f4c6:	2b09      	cmp	r3, #9
 800f4c8:	d8e3      	bhi.n	800f492 <prvTimerTask+0x5a>
 800f4ca:	e8df f003 	tbb	[pc, r3]
 800f4ce:	0505      	.short	0x0505
 800f4d0:	5a3d5305 	.word	0x5a3d5305
 800f4d4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f4d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f4dc:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f4de:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f4e0:	f043 0301 	orr.w	r3, r3, #1
 800f4e4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f4e8:	9b03      	ldr	r3, [sp, #12]
 800f4ea:	1899      	adds	r1, r3, r2
 800f4ec:	bf2c      	ite	cs
 800f4ee:	2001      	movcs	r0, #1
 800f4f0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f4f2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f4f4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f4f6:	f200 808c 	bhi.w	800f612 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4fa:	ebaa 0303 	sub.w	r3, sl, r3
 800f4fe:	429a      	cmp	r2, r3
 800f500:	d832      	bhi.n	800f568 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f502:	6a3b      	ldr	r3, [r7, #32]
 800f504:	4638      	mov	r0, r7
 800f506:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f508:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f50c:	075b      	lsls	r3, r3, #29
 800f50e:	d5c0      	bpl.n	800f492 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f510:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f512:	9903      	ldr	r1, [sp, #12]
 800f514:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f516:	b172      	cbz	r2, 800f536 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f518:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f51a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f51e:	2300      	movs	r3, #0
 800f520:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f522:	f7ff fe3f 	bl	800f1a4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f526:	2300      	movs	r3, #0
 800f528:	6820      	ldr	r0, [r4, #0]
 800f52a:	461a      	mov	r2, r3
 800f52c:	a906      	add	r1, sp, #24
 800f52e:	f7fe fa0d 	bl	800d94c <xQueueGenericSend>
							configASSERT( xResult );
 800f532:	2800      	cmp	r0, #0
 800f534:	d1ad      	bne.n	800f492 <prvTimerTask+0x5a>
 800f536:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f53a:	f383 8811 	msr	BASEPRI, r3
 800f53e:	f3bf 8f6f 	isb	sy
 800f542:	f3bf 8f4f 	dsb	sy
 800f546:	e7fe      	b.n	800f546 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f548:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f54c:	f043 0301 	orr.w	r3, r3, #1
 800f550:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f554:	9b03      	ldr	r3, [sp, #12]
 800f556:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f558:	2b00      	cmp	r3, #0
 800f55a:	f000 809d 	beq.w	800f698 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f55e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f560:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f562:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f564:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f566:	d85e      	bhi.n	800f626 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f568:	4b53      	ldr	r3, [pc, #332]	; (800f6b8 <prvTimerTask+0x280>)
 800f56a:	1d39      	adds	r1, r7, #4
 800f56c:	6818      	ldr	r0, [r3, #0]
 800f56e:	f7fd fe65 	bl	800d23c <vListInsert>
	return xProcessTimerNow;
 800f572:	e78e      	b.n	800f492 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f574:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f578:	f023 0301 	bic.w	r3, r3, #1
 800f57c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f580:	e787      	b.n	800f492 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f582:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f586:	079a      	lsls	r2, r3, #30
 800f588:	d552      	bpl.n	800f630 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f58a:	f023 0301 	bic.w	r3, r3, #1
 800f58e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f592:	e77e      	b.n	800f492 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f594:	9b03      	ldr	r3, [sp, #12]
 800f596:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f59a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f59c:	9b02      	ldr	r3, [sp, #8]
 800f59e:	2b00      	cmp	r3, #0
 800f5a0:	f6ff af77 	blt.w	800f492 <prvTimerTask+0x5a>
 800f5a4:	e77f      	b.n	800f4a6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f5a6:	f7ff fc53 	bl	800ee50 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f5aa:	f7ff fc69 	bl	800ee80 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f5ae:	682a      	ldr	r2, [r5, #0]
 800f5b0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f5b2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f5b4:	d808      	bhi.n	800f5c8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f5b6:	4b40      	ldr	r3, [pc, #256]	; (800f6b8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f5b8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f5bc:	681a      	ldr	r2, [r3, #0]
 800f5be:	6812      	ldr	r2, [r2, #0]
 800f5c0:	fab2 f282 	clz	r2, r2
 800f5c4:	0952      	lsrs	r2, r2, #5
 800f5c6:	e756      	b.n	800f476 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f5c8:	f7ff fee8 	bl	800f39c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f5cc:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f5d0:	f7ff fc46 	bl	800ee60 <xTaskResumeAll>
 800f5d4:	e75d      	b.n	800f492 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f5d6:	f7ff fee1 	bl	800f39c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f5da:	e771      	b.n	800f4c0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f5dc:	f7ff fc40 	bl	800ee60 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5e0:	6832      	ldr	r2, [r6, #0]
 800f5e2:	68d2      	ldr	r2, [r2, #12]
 800f5e4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f5e8:	f10b 0104 	add.w	r1, fp, #4
 800f5ec:	4608      	mov	r0, r1
 800f5ee:	9101      	str	r1, [sp, #4]
 800f5f0:	f7fd fe3c 	bl	800d26c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f5f4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f5f8:	9901      	ldr	r1, [sp, #4]
 800f5fa:	f010 0f04 	tst.w	r0, #4
 800f5fe:	d11b      	bne.n	800f638 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f600:	f020 0001 	bic.w	r0, r0, #1
 800f604:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f608:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f60c:	4658      	mov	r0, fp
 800f60e:	4798      	blx	r3
}
 800f610:	e73f      	b.n	800f492 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f612:	4553      	cmp	r3, sl
 800f614:	d902      	bls.n	800f61c <prvTimerTask+0x1e4>
 800f616:	2800      	cmp	r0, #0
 800f618:	f43f af73 	beq.w	800f502 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f61c:	6830      	ldr	r0, [r6, #0]
 800f61e:	1d39      	adds	r1, r7, #4
 800f620:	f7fd fe0c 	bl	800d23c <vListInsert>
	return xProcessTimerNow;
 800f624:	e735      	b.n	800f492 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f626:	6830      	ldr	r0, [r6, #0]
 800f628:	1d39      	adds	r1, r7, #4
 800f62a:	f7fd fe07 	bl	800d23c <vListInsert>
 800f62e:	e730      	b.n	800f492 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f630:	4638      	mov	r0, r7
 800f632:	f7fd fd7f 	bl	800d134 <vPortFree>
 800f636:	e72c      	b.n	800f492 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f638:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f63c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f640:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f642:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f644:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f648:	d903      	bls.n	800f652 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f64a:	6830      	ldr	r0, [r6, #0]
 800f64c:	f7fd fdf6 	bl	800d23c <vListInsert>
	return xProcessTimerNow;
 800f650:	e7da      	b.n	800f608 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f652:	ebaa 0307 	sub.w	r3, sl, r7
 800f656:	429a      	cmp	r2, r3
 800f658:	d819      	bhi.n	800f68e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f65a:	6823      	ldr	r3, [r4, #0]
 800f65c:	b173      	cbz	r3, 800f67c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f65e:	2300      	movs	r3, #0
 800f660:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f662:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f664:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f668:	f7ff fd9c 	bl	800f1a4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f66c:	2300      	movs	r3, #0
 800f66e:	6820      	ldr	r0, [r4, #0]
 800f670:	461a      	mov	r2, r3
 800f672:	a906      	add	r1, sp, #24
 800f674:	f7fe f96a 	bl	800d94c <xQueueGenericSend>
			configASSERT( xResult );
 800f678:	2800      	cmp	r0, #0
 800f67a:	d1c5      	bne.n	800f608 <prvTimerTask+0x1d0>
 800f67c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f680:	f383 8811 	msr	BASEPRI, r3
 800f684:	f3bf 8f6f 	isb	sy
 800f688:	f3bf 8f4f 	dsb	sy
 800f68c:	e7fe      	b.n	800f68c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f68e:	4b0a      	ldr	r3, [pc, #40]	; (800f6b8 <prvTimerTask+0x280>)
 800f690:	6818      	ldr	r0, [r3, #0]
 800f692:	f7fd fdd3 	bl	800d23c <vListInsert>
	return xProcessTimerNow;
 800f696:	e7b7      	b.n	800f608 <prvTimerTask+0x1d0>
 800f698:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f69c:	f383 8811 	msr	BASEPRI, r3
 800f6a0:	f3bf 8f6f 	isb	sy
 800f6a4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f6a8:	e7fe      	b.n	800f6a8 <prvTimerTask+0x270>
 800f6aa:	bf00      	nop
 800f6ac:	20013184 	.word	0x20013184
 800f6b0:	20013254 	.word	0x20013254
 800f6b4:	200132a8 	.word	0x200132a8
 800f6b8:	20013188 	.word	0x20013188

0800f6bc <xTimerCreateTimerTask>:
{
 800f6bc:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f6be:	4c23      	ldr	r4, [pc, #140]	; (800f74c <xTimerCreateTimerTask+0x90>)
{
 800f6c0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f6c2:	f7fd fe4f 	bl	800d364 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f6c6:	6825      	ldr	r5, [r4, #0]
 800f6c8:	b335      	cbz	r5, 800f718 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f6ca:	f7fd fe6d 	bl	800d3a8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f6ce:	6823      	ldr	r3, [r4, #0]
 800f6d0:	b1cb      	cbz	r3, 800f706 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f6d2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f6d4:	aa07      	add	r2, sp, #28
 800f6d6:	a906      	add	r1, sp, #24
 800f6d8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f6da:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f6de:	f7fd fc5d 	bl	800cf9c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f6e2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f6e6:	2302      	movs	r3, #2
 800f6e8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f6ec:	9300      	str	r3, [sp, #0]
 800f6ee:	9a07      	ldr	r2, [sp, #28]
 800f6f0:	4917      	ldr	r1, [pc, #92]	; (800f750 <xTimerCreateTimerTask+0x94>)
 800f6f2:	4818      	ldr	r0, [pc, #96]	; (800f754 <xTimerCreateTimerTask+0x98>)
 800f6f4:	4623      	mov	r3, r4
 800f6f6:	f7ff fa6d 	bl	800ebd4 <xTaskCreateStatic>
 800f6fa:	4b17      	ldr	r3, [pc, #92]	; (800f758 <xTimerCreateTimerTask+0x9c>)
 800f6fc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f6fe:	b110      	cbz	r0, 800f706 <xTimerCreateTimerTask+0x4a>
}
 800f700:	2001      	movs	r0, #1
 800f702:	b009      	add	sp, #36	; 0x24
 800f704:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f706:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f70a:	f383 8811 	msr	BASEPRI, r3
 800f70e:	f3bf 8f6f 	isb	sy
 800f712:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f716:	e7fe      	b.n	800f716 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f718:	4f10      	ldr	r7, [pc, #64]	; (800f75c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f71a:	4e11      	ldr	r6, [pc, #68]	; (800f760 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f71c:	4638      	mov	r0, r7
 800f71e:	f7fd fd6d 	bl	800d1fc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f722:	4630      	mov	r0, r6
 800f724:	f7fd fd6a 	bl	800d1fc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f728:	4a0e      	ldr	r2, [pc, #56]	; (800f764 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f72a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f72c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f72e:	4a0e      	ldr	r2, [pc, #56]	; (800f768 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f730:	4b0e      	ldr	r3, [pc, #56]	; (800f76c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f732:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f734:	2110      	movs	r1, #16
 800f736:	4a0e      	ldr	r2, [pc, #56]	; (800f770 <xTimerCreateTimerTask+0xb4>)
 800f738:	200a      	movs	r0, #10
 800f73a:	f7fd ffb1 	bl	800d6a0 <xQueueGenericCreateStatic>
 800f73e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f740:	2800      	cmp	r0, #0
 800f742:	d0c2      	beq.n	800f6ca <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f744:	490b      	ldr	r1, [pc, #44]	; (800f774 <xTimerCreateTimerTask+0xb8>)
 800f746:	f7fe ff0d 	bl	800e564 <vQueueAddToRegistry>
 800f74a:	e7be      	b.n	800f6ca <xTimerCreateTimerTask+0xe>
 800f74c:	200132a8 	.word	0x200132a8
 800f750:	0802e5a4 	.word	0x0802e5a4
 800f754:	0800f439 	.word	0x0800f439
 800f758:	200132ac 	.word	0x200132ac
 800f75c:	2001322c 	.word	0x2001322c
 800f760:	20013240 	.word	0x20013240
 800f764:	20013184 	.word	0x20013184
 800f768:	20013188 	.word	0x20013188
 800f76c:	20013258 	.word	0x20013258
 800f770:	2001318c 	.word	0x2001318c
 800f774:	0802e59c 	.word	0x0802e59c

0800f778 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f778:	8880      	ldrh	r0, [r0, #4]
 800f77a:	4770      	bx	lr

0800f77c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f77c:	b570      	push	{r4, r5, r6, lr}
 800f77e:	6803      	ldr	r3, [r0, #0]
 800f780:	4605      	mov	r5, r0
 800f782:	460c      	mov	r4, r1
 800f784:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f786:	2100      	movs	r1, #0
 800f788:	4798      	blx	r3
 800f78a:	682b      	ldr	r3, [r5, #0]
 800f78c:	4606      	mov	r6, r0
 800f78e:	6a1b      	ldr	r3, [r3, #32]
 800f790:	4628      	mov	r0, r5
 800f792:	4798      	blx	r3
 800f794:	1ba4      	subs	r4, r4, r6
 800f796:	b2a4      	uxth	r4, r4
 800f798:	fbb4 f0f0 	udiv	r0, r4, r0
 800f79c:	bd70      	pop	{r4, r5, r6, pc}

0800f79e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f79e:	2300      	movs	r3, #0
 800f7a0:	8083      	strh	r3, [r0, #4]
 800f7a2:	4770      	bx	lr

0800f7a4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f7a4:	b510      	push	{r4, lr}
 800f7a6:	6803      	ldr	r3, [r0, #0]
 800f7a8:	8881      	ldrh	r1, [r0, #4]
 800f7aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f7ac:	4604      	mov	r4, r0
 800f7ae:	4798      	blx	r3
 800f7b0:	88a3      	ldrh	r3, [r4, #4]
 800f7b2:	3301      	adds	r3, #1
 800f7b4:	80a3      	strh	r3, [r4, #4]
 800f7b6:	bd10      	pop	{r4, pc}

0800f7b8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f7b8:	6803      	ldr	r3, [r0, #0]
 800f7ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f7bc:	4718      	bx	r3

0800f7be <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f7be:	4770      	bx	lr

0800f7c0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f7c0:	4a02      	ldr	r2, [pc, #8]	; (800f7cc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f7c2:	6002      	str	r2, [r0, #0]
 800f7c4:	2200      	movs	r2, #0
 800f7c6:	8082      	strh	r2, [r0, #4]
 800f7c8:	4770      	bx	lr
 800f7ca:	bf00      	nop
 800f7cc:	0802e5b4 	.word	0x0802e5b4

0800f7d0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f7d0:	b510      	push	{r4, lr}
 800f7d2:	6803      	ldr	r3, [r0, #0]
 800f7d4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f7d8:	4604      	mov	r4, r0
 800f7da:	4798      	blx	r3
 800f7dc:	b110      	cbz	r0, 800f7e4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f7de:	4620      	mov	r0, r4
 800f7e0:	f7f2 fed4 	bl	800258c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f7e4:	bd10      	pop	{r4, pc}

0800f7e6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f7e6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f7ea:	4770      	bx	lr

0800f7ec <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f7ec:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f7f0:	4770      	bx	lr

0800f7f2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f7f2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f7f6:	4770      	bx	lr

0800f7f8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f7f8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f7fc:	4770      	bx	lr

0800f7fe <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f7fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f800:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f804:	461e      	mov	r6, r3
 800f806:	6803      	ldr	r3, [r0, #0]
 800f808:	460f      	mov	r7, r1
 800f80a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f80e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f812:	4604      	mov	r4, r0
 800f814:	4615      	mov	r5, r2
 800f816:	4798      	blx	r3
 800f818:	b93e      	cbnz	r6, 800f82a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f81a:	1bed      	subs	r5, r5, r7
 800f81c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f820:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f824:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f828:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f82a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f82e:	e7f7      	b.n	800f820 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f830 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f830:	b510      	push	{r4, lr}
 800f832:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f836:	600c      	str	r4, [r1, #0]
 800f838:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f83c:	6011      	str	r1, [r2, #0]
 800f83e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f842:	801a      	strh	r2, [r3, #0]
 800f844:	9b02      	ldr	r3, [sp, #8]
 800f846:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f84a:	801a      	strh	r2, [r3, #0]
 800f84c:	bd10      	pop	{r4, pc}

0800f84e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f84e:	b510      	push	{r4, lr}
 800f850:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f854:	600c      	str	r4, [r1, #0]
 800f856:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f85a:	6011      	str	r1, [r2, #0]
 800f85c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f860:	801a      	strh	r2, [r3, #0]
 800f862:	bd10      	pop	{r4, pc}

0800f864 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f864:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f868:	600b      	str	r3, [r1, #0]
 800f86a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f86e:	6013      	str	r3, [r2, #0]
 800f870:	4770      	bx	lr

0800f872 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f872:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f876:	4770      	bx	lr

0800f878 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f878:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f87c:	4770      	bx	lr

0800f87e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f87e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f882:	4770      	bx	lr

0800f884 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f884:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f888:	4770      	bx	lr

0800f88a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f88a:	4770      	bx	lr

0800f88c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f88c:	b510      	push	{r4, lr}
 800f88e:	21b4      	movs	r1, #180	; 0xb4
 800f890:	4604      	mov	r4, r0
 800f892:	f01a fb02 	bl	8029e9a <_ZdlPvj>
 800f896:	4620      	mov	r0, r4
 800f898:	bd10      	pop	{r4, pc}

0800f89a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f89a:	b570      	push	{r4, r5, r6, lr}
 800f89c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f8a0:	428d      	cmp	r5, r1
 800f8a2:	bfb8      	it	lt
 800f8a4:	460d      	movlt	r5, r1
 800f8a6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f8aa:	428d      	cmp	r5, r1
 800f8ac:	4604      	mov	r4, r0
 800f8ae:	bfa8      	it	ge
 800f8b0:	460d      	movge	r5, r1
 800f8b2:	4616      	mov	r6, r2
 800f8b4:	b99a      	cbnz	r2, 800f8de <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f8b6:	6803      	ldr	r3, [r0, #0]
 800f8b8:	4629      	mov	r1, r5
 800f8ba:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f8be:	4798      	blx	r3
 800f8c0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f8c4:	b368      	cbz	r0, 800f922 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f8c6:	6803      	ldr	r3, [r0, #0]
 800f8c8:	68db      	ldr	r3, [r3, #12]
 800f8ca:	4798      	blx	r3
 800f8cc:	b348      	cbz	r0, 800f922 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f8ce:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f8d2:	6803      	ldr	r3, [r0, #0]
 800f8d4:	4621      	mov	r1, r4
 800f8d6:	689b      	ldr	r3, [r3, #8]
 800f8d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f8dc:	4718      	bx	r3
 800f8de:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f8e2:	2b00      	cmp	r3, #0
 800f8e4:	dd08      	ble.n	800f8f8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f8e6:	f006 fa23 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 800f8ea:	4621      	mov	r1, r4
 800f8ec:	3004      	adds	r0, #4
 800f8ee:	f006 fa6c 	bl	8015dca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f8f2:	2300      	movs	r3, #0
 800f8f4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f8f8:	6823      	ldr	r3, [r4, #0]
 800f8fa:	4620      	mov	r0, r4
 800f8fc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f900:	4798      	blx	r3
 800f902:	2300      	movs	r3, #0
 800f904:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f908:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f90c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f910:	f006 fa0e 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 800f914:	4621      	mov	r1, r4
 800f916:	3004      	adds	r0, #4
 800f918:	f006 fb00 	bl	8015f1c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f91c:	2301      	movs	r3, #1
 800f91e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f922:	bd70      	pop	{r4, r5, r6, pc}

0800f924 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f924:	b510      	push	{r4, lr}
 800f926:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f92a:	4299      	cmp	r1, r3
 800f92c:	bfb8      	it	lt
 800f92e:	4619      	movlt	r1, r3
 800f930:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f934:	4299      	cmp	r1, r3
 800f936:	bfa8      	it	ge
 800f938:	4619      	movge	r1, r3
 800f93a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f93e:	428b      	cmp	r3, r1
 800f940:	4604      	mov	r4, r0
 800f942:	d010      	beq.n	800f966 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f944:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f948:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f94c:	b158      	cbz	r0, 800f966 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f94e:	6803      	ldr	r3, [r0, #0]
 800f950:	68db      	ldr	r3, [r3, #12]
 800f952:	4798      	blx	r3
 800f954:	b138      	cbz	r0, 800f966 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f956:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f95a:	6803      	ldr	r3, [r0, #0]
 800f95c:	4621      	mov	r1, r4
 800f95e:	689b      	ldr	r3, [r3, #8]
 800f960:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f964:	4718      	bx	r3
 800f966:	bd10      	pop	{r4, pc}

0800f968 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f968:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f96a:	4604      	mov	r4, r0
 800f96c:	460d      	mov	r5, r1
 800f96e:	b1a9      	cbz	r1, 800f99c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f970:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f974:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f978:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f97c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f980:	ab01      	add	r3, sp, #4
 800f982:	1a12      	subs	r2, r2, r0
 800f984:	1b89      	subs	r1, r1, r6
 800f986:	1a38      	subs	r0, r7, r0
 800f988:	f007 fc88 	bl	801729c <_ZN8touchgfx6muldivElllRl>
 800f98c:	4629      	mov	r1, r5
 800f98e:	ab01      	add	r3, sp, #4
 800f990:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f994:	4430      	add	r0, r6
 800f996:	f007 fc81 	bl	801729c <_ZN8touchgfx6muldivElllRl>
 800f99a:	b285      	uxth	r5, r0
 800f99c:	4628      	mov	r0, r5
 800f99e:	b003      	add	sp, #12
 800f9a0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f9a2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f9a2:	b570      	push	{r4, r5, r6, lr}
 800f9a4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f9a8:	4604      	mov	r4, r0
 800f9aa:	2b00      	cmp	r3, #0
 800f9ac:	d035      	beq.n	800fa1a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f9ae:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f9b2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f9b6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f9ba:	3001      	adds	r0, #1
 800f9bc:	1ad2      	subs	r2, r2, r3
 800f9be:	b212      	sxth	r2, r2
 800f9c0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f9c4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f9c8:	2100      	movs	r1, #0
 800f9ca:	b280      	uxth	r0, r0
 800f9cc:	47a8      	blx	r5
 800f9ce:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f9d2:	6823      	ldr	r3, [r4, #0]
 800f9d4:	4401      	add	r1, r0
 800f9d6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f9da:	4620      	mov	r0, r4
 800f9dc:	4798      	blx	r3
 800f9de:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f9e2:	429a      	cmp	r2, r3
 800f9e4:	db19      	blt.n	800fa1a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f9e6:	2500      	movs	r5, #0
 800f9e8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f9ec:	f006 f9a0 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 800f9f0:	4621      	mov	r1, r4
 800f9f2:	3004      	adds	r0, #4
 800f9f4:	f006 f9e9 	bl	8015dca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f9f8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f9fc:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fa00:	b158      	cbz	r0, 800fa1a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fa02:	6803      	ldr	r3, [r0, #0]
 800fa04:	68db      	ldr	r3, [r3, #12]
 800fa06:	4798      	blx	r3
 800fa08:	b138      	cbz	r0, 800fa1a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fa0a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fa0e:	6803      	ldr	r3, [r0, #0]
 800fa10:	4621      	mov	r1, r4
 800fa12:	689b      	ldr	r3, [r3, #8]
 800fa14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa18:	4718      	bx	r3
 800fa1a:	bd70      	pop	{r4, r5, r6, pc}

0800fa1c <_ZN8touchgfx8DrawableC1Ev>:
 800fa1c:	4a0a      	ldr	r2, [pc, #40]	; (800fa48 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800fa1e:	6002      	str	r2, [r0, #0]
 800fa20:	2200      	movs	r2, #0
 800fa22:	8082      	strh	r2, [r0, #4]
 800fa24:	80c2      	strh	r2, [r0, #6]
 800fa26:	8102      	strh	r2, [r0, #8]
 800fa28:	8142      	strh	r2, [r0, #10]
 800fa2a:	8182      	strh	r2, [r0, #12]
 800fa2c:	81c2      	strh	r2, [r0, #14]
 800fa2e:	8202      	strh	r2, [r0, #16]
 800fa30:	8242      	strh	r2, [r0, #18]
 800fa32:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fa36:	61c2      	str	r2, [r0, #28]
 800fa38:	8402      	strh	r2, [r0, #32]
 800fa3a:	8442      	strh	r2, [r0, #34]	; 0x22
 800fa3c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fa40:	2201      	movs	r2, #1
 800fa42:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800fa46:	4770      	bx	lr
 800fa48:	0802ef34 	.word	0x0802ef34

0800fa4c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800fa4c:	b570      	push	{r4, r5, r6, lr}
 800fa4e:	6803      	ldr	r3, [r0, #0]
 800fa50:	4604      	mov	r4, r0
 800fa52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa54:	4615      	mov	r5, r2
 800fa56:	4798      	blx	r3
 800fa58:	6823      	ldr	r3, [r4, #0]
 800fa5a:	4629      	mov	r1, r5
 800fa5c:	4620      	mov	r0, r4
 800fa5e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fa60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa64:	4718      	bx	r3

0800fa66 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800fa66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fa6a:	4604      	mov	r4, r0
 800fa6c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800fa70:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800fa74:	460e      	mov	r6, r1
 800fa76:	4615      	mov	r5, r2
 800fa78:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800fa7c:	4619      	mov	r1, r3
 800fa7e:	463a      	mov	r2, r7
 800fa80:	3058      	adds	r0, #88	; 0x58
 800fa82:	4698      	mov	r8, r3
 800fa84:	f7ff ffe2 	bl	800fa4c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fa88:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800fa8c:	4446      	add	r6, r8
 800fa8e:	42b3      	cmp	r3, r6
 800fa90:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fa94:	bfb8      	it	lt
 800fa96:	8126      	strhlt	r6, [r4, #8]
 800fa98:	443d      	add	r5, r7
 800fa9a:	42ab      	cmp	r3, r5
 800fa9c:	bfb8      	it	lt
 800fa9e:	8165      	strhlt	r5, [r4, #10]
 800faa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800faa4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800faa4:	b510      	push	{r4, lr}
 800faa6:	4604      	mov	r4, r0
 800faa8:	302c      	adds	r0, #44	; 0x2c
 800faaa:	f003 fc42 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800faae:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800fab2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fab6:	4620      	mov	r0, r4
 800fab8:	f7ff ffc8 	bl	800fa4c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fabc:	bd10      	pop	{r4, pc}
	...

0800fac0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800fac0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fac2:	4604      	mov	r4, r0
 800fac4:	4626      	mov	r6, r4
 800fac6:	2500      	movs	r5, #0
 800fac8:	f7ff ffa8 	bl	800fa1c <_ZN8touchgfx8DrawableC1Ev>
 800facc:	4b23      	ldr	r3, [pc, #140]	; (800fb5c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800face:	62a5      	str	r5, [r4, #40]	; 0x28
 800fad0:	f846 3b2c 	str.w	r3, [r6], #44
 800fad4:	2226      	movs	r2, #38	; 0x26
 800fad6:	4629      	mov	r1, r5
 800fad8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800fadc:	4630      	mov	r0, r6
 800fade:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fae2:	f01b f9f2 	bl	802aeca <memset>
 800fae6:	4630      	mov	r0, r6
 800fae8:	f7ff ff98 	bl	800fa1c <_ZN8touchgfx8DrawableC1Ev>
 800faec:	a902      	add	r1, sp, #8
 800faee:	4b1c      	ldr	r3, [pc, #112]	; (800fb60 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800faf0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800faf2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800faf6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fafa:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800fafe:	4630      	mov	r0, r6
 800fb00:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800fb04:	f003 fc15 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fb08:	4638      	mov	r0, r7
 800fb0a:	f7ff ff87 	bl	800fa1c <_ZN8touchgfx8DrawableC1Ev>
 800fb0e:	4b15      	ldr	r3, [pc, #84]	; (800fb64 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800fb10:	65a3      	str	r3, [r4, #88]	; 0x58
 800fb12:	2364      	movs	r3, #100	; 0x64
 800fb14:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800fb18:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800fb1c:	4b12      	ldr	r3, [pc, #72]	; (800fb68 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800fb1e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800fb22:	4629      	mov	r1, r5
 800fb24:	4630      	mov	r0, r6
 800fb26:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800fb2a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fb2e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800fb32:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fb36:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800fb3a:	f7f2 fc83 	bl	8002444 <_ZN8touchgfx8Drawable4setXEs>
 800fb3e:	4629      	mov	r1, r5
 800fb40:	4630      	mov	r0, r6
 800fb42:	f7f2 fc81 	bl	8002448 <_ZN8touchgfx8Drawable4setYEs>
 800fb46:	4631      	mov	r1, r6
 800fb48:	4620      	mov	r0, r4
 800fb4a:	f000 f819 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fb4e:	4620      	mov	r0, r4
 800fb50:	4639      	mov	r1, r7
 800fb52:	f000 f815 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fb56:	4620      	mov	r0, r4
 800fb58:	b003      	add	sp, #12
 800fb5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fb5c:	0802e5e8 	.word	0x0802e5e8
 800fb60:	0802edf0 	.word	0x0802edf0
 800fb64:	0802e6bc 	.word	0x0802e6bc
 800fb68:	08017a77 	.word	0x08017a77

0800fb6c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800fb6c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fb6e:	2000      	movs	r0, #0
 800fb70:	b12b      	cbz	r3, 800fb7e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fb72:	b920      	cbnz	r0, 800fb7e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fb74:	1a5a      	subs	r2, r3, r1
 800fb76:	4250      	negs	r0, r2
 800fb78:	4150      	adcs	r0, r2
 800fb7a:	699b      	ldr	r3, [r3, #24]
 800fb7c:	e7f8      	b.n	800fb70 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800fb7e:	4770      	bx	lr

0800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800fb80:	2300      	movs	r3, #0
 800fb82:	6148      	str	r0, [r1, #20]
 800fb84:	618b      	str	r3, [r1, #24]
 800fb86:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fb88:	b913      	cbnz	r3, 800fb90 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800fb8a:	6281      	str	r1, [r0, #40]	; 0x28
 800fb8c:	4770      	bx	lr
 800fb8e:	4613      	mov	r3, r2
 800fb90:	699a      	ldr	r2, [r3, #24]
 800fb92:	2a00      	cmp	r2, #0
 800fb94:	d1fb      	bne.n	800fb8e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800fb96:	6199      	str	r1, [r3, #24]
 800fb98:	4770      	bx	lr

0800fb9a <_ZN8touchgfx9Container9removeAllEv>:
 800fb9a:	2200      	movs	r2, #0
 800fb9c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fb9e:	b123      	cbz	r3, 800fbaa <_ZN8touchgfx9Container9removeAllEv+0x10>
 800fba0:	6999      	ldr	r1, [r3, #24]
 800fba2:	6281      	str	r1, [r0, #40]	; 0x28
 800fba4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800fba8:	e7f8      	b.n	800fb9c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800fbaa:	4770      	bx	lr

0800fbac <_ZN8touchgfx9Container6unlinkEv>:
 800fbac:	2300      	movs	r3, #0
 800fbae:	6283      	str	r3, [r0, #40]	; 0x28
 800fbb0:	4770      	bx	lr

0800fbb2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800fbb2:	2200      	movs	r2, #0
 800fbb4:	8002      	strh	r2, [r0, #0]
 800fbb6:	8042      	strh	r2, [r0, #2]
 800fbb8:	8082      	strh	r2, [r0, #4]
 800fbba:	80c2      	strh	r2, [r0, #6]
 800fbbc:	4770      	bx	lr

0800fbbe <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800fbbe:	b570      	push	{r4, r5, r6, lr}
 800fbc0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fbc2:	460d      	mov	r5, r1
 800fbc4:	4616      	mov	r6, r2
 800fbc6:	b13c      	cbz	r4, 800fbd8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800fbc8:	6823      	ldr	r3, [r4, #0]
 800fbca:	4620      	mov	r0, r4
 800fbcc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800fbce:	4632      	mov	r2, r6
 800fbd0:	4629      	mov	r1, r5
 800fbd2:	4798      	blx	r3
 800fbd4:	69a4      	ldr	r4, [r4, #24]
 800fbd6:	e7f6      	b.n	800fbc6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800fbd8:	bd70      	pop	{r4, r5, r6, pc}

0800fbda <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800fbda:	b538      	push	{r3, r4, r5, lr}
 800fbdc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fbde:	460d      	mov	r5, r1
 800fbe0:	b134      	cbz	r4, 800fbf0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800fbe2:	682b      	ldr	r3, [r5, #0]
 800fbe4:	4621      	mov	r1, r4
 800fbe6:	689b      	ldr	r3, [r3, #8]
 800fbe8:	4628      	mov	r0, r5
 800fbea:	4798      	blx	r3
 800fbec:	69a4      	ldr	r4, [r4, #24]
 800fbee:	e7f7      	b.n	800fbe0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800fbf0:	bd38      	pop	{r3, r4, r5, pc}

0800fbf2 <_ZN8touchgfx9ContainerD1Ev>:
 800fbf2:	4770      	bx	lr

0800fbf4 <_ZN8touchgfx9ContainerD0Ev>:
 800fbf4:	b510      	push	{r4, lr}
 800fbf6:	212c      	movs	r1, #44	; 0x2c
 800fbf8:	4604      	mov	r4, r0
 800fbfa:	f01a f94e 	bl	8029e9a <_ZdlPvj>
 800fbfe:	4620      	mov	r0, r4
 800fc00:	bd10      	pop	{r4, pc}

0800fc02 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800fc02:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fc04:	b19b      	cbz	r3, 800fc2e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fc06:	428b      	cmp	r3, r1
 800fc08:	d109      	bne.n	800fc1e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800fc0a:	699a      	ldr	r2, [r3, #24]
 800fc0c:	2100      	movs	r1, #0
 800fc0e:	6159      	str	r1, [r3, #20]
 800fc10:	6282      	str	r2, [r0, #40]	; 0x28
 800fc12:	b902      	cbnz	r2, 800fc16 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800fc14:	4770      	bx	lr
 800fc16:	6199      	str	r1, [r3, #24]
 800fc18:	4770      	bx	lr
 800fc1a:	4613      	mov	r3, r2
 800fc1c:	b13a      	cbz	r2, 800fc2e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fc1e:	699a      	ldr	r2, [r3, #24]
 800fc20:	428a      	cmp	r2, r1
 800fc22:	d1fa      	bne.n	800fc1a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800fc24:	698a      	ldr	r2, [r1, #24]
 800fc26:	619a      	str	r2, [r3, #24]
 800fc28:	2300      	movs	r3, #0
 800fc2a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800fc2e:	4770      	bx	lr

0800fc30 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800fc30:	b410      	push	{r4}
 800fc32:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fc34:	4604      	mov	r4, r0
 800fc36:	b92b      	cbnz	r3, 800fc44 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800fc38:	6803      	ldr	r3, [r0, #0]
 800fc3a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fc3e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800fc40:	4611      	mov	r1, r2
 800fc42:	4718      	bx	r3
 800fc44:	b941      	cbnz	r1, 800fc58 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800fc46:	6193      	str	r3, [r2, #24]
 800fc48:	6282      	str	r2, [r0, #40]	; 0x28
 800fc4a:	6154      	str	r4, [r2, #20]
 800fc4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fc50:	4770      	bx	lr
 800fc52:	4603      	mov	r3, r0
 800fc54:	2800      	cmp	r0, #0
 800fc56:	d0f9      	beq.n	800fc4c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800fc58:	4299      	cmp	r1, r3
 800fc5a:	6998      	ldr	r0, [r3, #24]
 800fc5c:	d1f9      	bne.n	800fc52 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800fc5e:	6190      	str	r0, [r2, #24]
 800fc60:	618a      	str	r2, [r1, #24]
 800fc62:	e7f2      	b.n	800fc4a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800fc64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800fc64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc68:	461f      	mov	r7, r3
 800fc6a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800fc6e:	460d      	mov	r5, r1
 800fc70:	4616      	mov	r6, r2
 800fc72:	b103      	cbz	r3, 800fc76 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800fc74:	6038      	str	r0, [r7, #0]
 800fc76:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fc78:	b314      	cbz	r4, 800fcc0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800fc7a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fc7e:	b1eb      	cbz	r3, 800fcbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fc80:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800fc84:	428d      	cmp	r5, r1
 800fc86:	db19      	blt.n	800fcbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fc88:	8923      	ldrh	r3, [r4, #8]
 800fc8a:	b289      	uxth	r1, r1
 800fc8c:	440b      	add	r3, r1
 800fc8e:	b21b      	sxth	r3, r3
 800fc90:	429d      	cmp	r5, r3
 800fc92:	da13      	bge.n	800fcbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fc94:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fc98:	4296      	cmp	r6, r2
 800fc9a:	db0f      	blt.n	800fcbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fc9c:	8963      	ldrh	r3, [r4, #10]
 800fc9e:	b292      	uxth	r2, r2
 800fca0:	4413      	add	r3, r2
 800fca2:	b21b      	sxth	r3, r3
 800fca4:	429e      	cmp	r6, r3
 800fca6:	da09      	bge.n	800fcbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fca8:	6823      	ldr	r3, [r4, #0]
 800fcaa:	1ab2      	subs	r2, r6, r2
 800fcac:	1a69      	subs	r1, r5, r1
 800fcae:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800fcb2:	b212      	sxth	r2, r2
 800fcb4:	463b      	mov	r3, r7
 800fcb6:	b209      	sxth	r1, r1
 800fcb8:	4620      	mov	r0, r4
 800fcba:	47c0      	blx	r8
 800fcbc:	69a4      	ldr	r4, [r4, #24]
 800fcbe:	e7db      	b.n	800fc78 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800fcc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fcc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800fcc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcc8:	4c6e      	ldr	r4, [pc, #440]	; (800fe84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800fcca:	b0a1      	sub	sp, #132	; 0x84
 800fccc:	6824      	ldr	r4, [r4, #0]
 800fcce:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800fcd0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800fcd4:	9303      	str	r3, [sp, #12]
 800fcd6:	2400      	movs	r4, #0
 800fcd8:	802c      	strh	r4, [r5, #0]
 800fcda:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800fcdc:	802c      	strh	r4, [r5, #0]
 800fcde:	601c      	str	r4, [r3, #0]
 800fce0:	4606      	mov	r6, r0
 800fce2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800fce6:	f7ff ffbd 	bl	800fc64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fcea:	f1b9 0f03 	cmp.w	r9, #3
 800fcee:	f340 80c2 	ble.w	800fe76 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800fcf2:	4631      	mov	r1, r6
 800fcf4:	a80c      	add	r0, sp, #48	; 0x30
 800fcf6:	f007 f99f 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fcfa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800fcfe:	9306      	str	r3, [sp, #24]
 800fd00:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fd04:	9307      	str	r3, [sp, #28]
 800fd06:	9b03      	ldr	r3, [sp, #12]
 800fd08:	f8d3 a000 	ldr.w	sl, [r3]
 800fd0c:	f1ba 0f00 	cmp.w	sl, #0
 800fd10:	f000 80b4 	beq.w	800fe7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800fd14:	4651      	mov	r1, sl
 800fd16:	a810      	add	r0, sp, #64	; 0x40
 800fd18:	f007 f98e 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fd1c:	9b01      	ldr	r3, [sp, #4]
 800fd1e:	9a06      	ldr	r2, [sp, #24]
 800fd20:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800fd24:	189d      	adds	r5, r3, r2
 800fd26:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800fd2a:	9a07      	ldr	r2, [sp, #28]
 800fd2c:	2002      	movs	r0, #2
 800fd2e:	fb91 f1f0 	sdiv	r1, r1, r0
 800fd32:	4419      	add	r1, r3
 800fd34:	1a6d      	subs	r5, r5, r1
 800fd36:	9b02      	ldr	r3, [sp, #8]
 800fd38:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800fd3c:	4413      	add	r3, r2
 800fd3e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800fd42:	fb92 f2f0 	sdiv	r2, r2, r0
 800fd46:	440a      	add	r2, r1
 800fd48:	1a9b      	subs	r3, r3, r2
 800fd4a:	435b      	muls	r3, r3
 800fd4c:	fb05 3505 	mla	r5, r5, r5, r3
 800fd50:	4f4d      	ldr	r7, [pc, #308]	; (800fe88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800fd52:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fd54:	ac10      	add	r4, sp, #64	; 0x40
 800fd56:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fd58:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fd5a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fd5c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fd5e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fd60:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800fd64:	f1b9 0f0c 	cmp.w	r9, #12
 800fd68:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800fd6c:	f04f 0303 	mov.w	r3, #3
 800fd70:	bfc8      	it	gt
 800fd72:	4698      	movgt	r8, r3
 800fd74:	f8cd 9000 	str.w	r9, [sp]
 800fd78:	f04f 0400 	mov.w	r4, #0
 800fd7c:	bfdc      	itt	le
 800fd7e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800fd82:	fb92 f8f3 	sdivle	r8, r2, r3
 800fd86:	1c63      	adds	r3, r4, #1
 800fd88:	aa10      	add	r2, sp, #64	; 0x40
 800fd8a:	f004 0401 	and.w	r4, r4, #1
 800fd8e:	9308      	str	r3, [sp, #32]
 800fd90:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800fd94:	9b00      	ldr	r3, [sp, #0]
 800fd96:	fb93 f3f8 	sdiv	r3, r3, r8
 800fd9a:	b29b      	uxth	r3, r3
 800fd9c:	3404      	adds	r4, #4
 800fd9e:	f04f 0b00 	mov.w	fp, #0
 800fda2:	9304      	str	r3, [sp, #16]
 800fda4:	9a04      	ldr	r2, [sp, #16]
 800fda6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800fdaa:	fb13 f302 	smulbb	r3, r3, r2
 800fdae:	9a01      	ldr	r2, [sp, #4]
 800fdb0:	b29b      	uxth	r3, r3
 800fdb2:	1899      	adds	r1, r3, r2
 800fdb4:	9305      	str	r3, [sp, #20]
 800fdb6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800fdba:	b209      	sxth	r1, r1
 800fdbc:	4299      	cmp	r1, r3
 800fdbe:	db4d      	blt.n	800fe5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fdc0:	8932      	ldrh	r2, [r6, #8]
 800fdc2:	4413      	add	r3, r2
 800fdc4:	b21b      	sxth	r3, r3
 800fdc6:	4299      	cmp	r1, r3
 800fdc8:	da48      	bge.n	800fe5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fdca:	9b04      	ldr	r3, [sp, #16]
 800fdcc:	6827      	ldr	r7, [r4, #0]
 800fdce:	fb17 f703 	smulbb	r7, r7, r3
 800fdd2:	9b02      	ldr	r3, [sp, #8]
 800fdd4:	b2bf      	uxth	r7, r7
 800fdd6:	18fa      	adds	r2, r7, r3
 800fdd8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800fddc:	b212      	sxth	r2, r2
 800fdde:	429a      	cmp	r2, r3
 800fde0:	db3c      	blt.n	800fe5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fde2:	8970      	ldrh	r0, [r6, #10]
 800fde4:	4403      	add	r3, r0
 800fde6:	b21b      	sxth	r3, r3
 800fde8:	429a      	cmp	r2, r3
 800fdea:	da37      	bge.n	800fe5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fdec:	2300      	movs	r3, #0
 800fdee:	930b      	str	r3, [sp, #44]	; 0x2c
 800fdf0:	4630      	mov	r0, r6
 800fdf2:	ab0b      	add	r3, sp, #44	; 0x2c
 800fdf4:	f7ff ff36 	bl	800fc64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fdf8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fdfa:	b37a      	cbz	r2, 800fe5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fdfc:	4552      	cmp	r2, sl
 800fdfe:	d02d      	beq.n	800fe5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fe00:	4611      	mov	r1, r2
 800fe02:	a80e      	add	r0, sp, #56	; 0x38
 800fe04:	9209      	str	r2, [sp, #36]	; 0x24
 800fe06:	f007 f917 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fe0a:	9a06      	ldr	r2, [sp, #24]
 800fe0c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800fe10:	9b01      	ldr	r3, [sp, #4]
 800fe12:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800fe16:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800fe1a:	4413      	add	r3, r2
 800fe1c:	f04f 0e02 	mov.w	lr, #2
 800fe20:	fb91 f1fe 	sdiv	r1, r1, lr
 800fe24:	4401      	add	r1, r0
 800fe26:	1a58      	subs	r0, r3, r1
 800fe28:	9a07      	ldr	r2, [sp, #28]
 800fe2a:	9b02      	ldr	r3, [sp, #8]
 800fe2c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800fe30:	fb9c fcfe 	sdiv	ip, ip, lr
 800fe34:	4413      	add	r3, r2
 800fe36:	448c      	add	ip, r1
 800fe38:	eba3 030c 	sub.w	r3, r3, ip
 800fe3c:	435b      	muls	r3, r3
 800fe3e:	fb00 3300 	mla	r3, r0, r0, r3
 800fe42:	42ab      	cmp	r3, r5
 800fe44:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fe46:	d208      	bcs.n	800fe5a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800fe48:	9803      	ldr	r0, [sp, #12]
 800fe4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fe4c:	6001      	str	r1, [r0, #0]
 800fe4e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800fe50:	9805      	ldr	r0, [sp, #20]
 800fe52:	8008      	strh	r0, [r1, #0]
 800fe54:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fe56:	461d      	mov	r5, r3
 800fe58:	800f      	strh	r7, [r1, #0]
 800fe5a:	4692      	mov	sl, r2
 800fe5c:	f10b 0b01 	add.w	fp, fp, #1
 800fe60:	f1bb 0f04 	cmp.w	fp, #4
 800fe64:	f104 0408 	add.w	r4, r4, #8
 800fe68:	d19c      	bne.n	800fda4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800fe6a:	9b00      	ldr	r3, [sp, #0]
 800fe6c:	9c08      	ldr	r4, [sp, #32]
 800fe6e:	444b      	add	r3, r9
 800fe70:	4544      	cmp	r4, r8
 800fe72:	9300      	str	r3, [sp, #0]
 800fe74:	d187      	bne.n	800fd86 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800fe76:	b021      	add	sp, #132	; 0x84
 800fe78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe7c:	f04f 35ff 	mov.w	r5, #4294967295
 800fe80:	e766      	b.n	800fd50 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800fe82:	bf00      	nop
 800fe84:	200132bc 	.word	0x200132bc
 800fe88:	0802bbd8 	.word	0x0802bbd8

0800fe8c <_ZN8touchgfx4RectaNERKS0_>:
 800fe8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fe90:	f9b1 7000 	ldrsh.w	r7, [r1]
 800fe94:	888c      	ldrh	r4, [r1, #4]
 800fe96:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fe9a:	443c      	add	r4, r7
 800fe9c:	b2a4      	uxth	r4, r4
 800fe9e:	fa0f f884 	sxth.w	r8, r4
 800fea2:	45c1      	cmp	r9, r8
 800fea4:	da2f      	bge.n	800ff06 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fea6:	8882      	ldrh	r2, [r0, #4]
 800fea8:	444a      	add	r2, r9
 800feaa:	b292      	uxth	r2, r2
 800feac:	fa0f fe82 	sxth.w	lr, r2
 800feb0:	4577      	cmp	r7, lr
 800feb2:	da28      	bge.n	800ff06 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800feb4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800feb8:	88cb      	ldrh	r3, [r1, #6]
 800feba:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800febe:	442b      	add	r3, r5
 800fec0:	b21b      	sxth	r3, r3
 800fec2:	429e      	cmp	r6, r3
 800fec4:	da1f      	bge.n	800ff06 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fec6:	88c3      	ldrh	r3, [r0, #6]
 800fec8:	4433      	add	r3, r6
 800feca:	b29b      	uxth	r3, r3
 800fecc:	fa0f fc83 	sxth.w	ip, r3
 800fed0:	4565      	cmp	r5, ip
 800fed2:	da18      	bge.n	800ff06 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fed4:	454f      	cmp	r7, r9
 800fed6:	bfb8      	it	lt
 800fed8:	464f      	movlt	r7, r9
 800feda:	42b5      	cmp	r5, r6
 800fedc:	bfb8      	it	lt
 800fede:	4635      	movlt	r5, r6
 800fee0:	45f0      	cmp	r8, lr
 800fee2:	bfd8      	it	le
 800fee4:	4622      	movle	r2, r4
 800fee6:	1bd2      	subs	r2, r2, r7
 800fee8:	8082      	strh	r2, [r0, #4]
 800feea:	884a      	ldrh	r2, [r1, #2]
 800feec:	88c9      	ldrh	r1, [r1, #6]
 800feee:	8007      	strh	r7, [r0, #0]
 800fef0:	440a      	add	r2, r1
 800fef2:	b292      	uxth	r2, r2
 800fef4:	b211      	sxth	r1, r2
 800fef6:	458c      	cmp	ip, r1
 800fef8:	bfa8      	it	ge
 800fefa:	4613      	movge	r3, r2
 800fefc:	1b5b      	subs	r3, r3, r5
 800fefe:	80c3      	strh	r3, [r0, #6]
 800ff00:	8045      	strh	r5, [r0, #2]
 800ff02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ff06:	2300      	movs	r3, #0
 800ff08:	8003      	strh	r3, [r0, #0]
 800ff0a:	8043      	strh	r3, [r0, #2]
 800ff0c:	8083      	strh	r3, [r0, #4]
 800ff0e:	80c3      	strh	r3, [r0, #6]
 800ff10:	e7f7      	b.n	800ff02 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ff12:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ff16:	2b00      	cmp	r3, #0
 800ff18:	dd06      	ble.n	800ff28 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ff1a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ff1e:	2800      	cmp	r0, #0
 800ff20:	bfcc      	ite	gt
 800ff22:	2000      	movgt	r0, #0
 800ff24:	2001      	movle	r0, #1
 800ff26:	4770      	bx	lr
 800ff28:	2001      	movs	r0, #1
 800ff2a:	4770      	bx	lr

0800ff2c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ff2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ff30:	2300      	movs	r3, #0
 800ff32:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ff34:	8003      	strh	r3, [r0, #0]
 800ff36:	4604      	mov	r4, r0
 800ff38:	8043      	strh	r3, [r0, #2]
 800ff3a:	8083      	strh	r3, [r0, #4]
 800ff3c:	80c3      	strh	r3, [r0, #6]
 800ff3e:	2d00      	cmp	r5, #0
 800ff40:	d040      	beq.n	800ffc4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ff42:	1d28      	adds	r0, r5, #4
 800ff44:	f7ff ffe5 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ff48:	b988      	cbnz	r0, 800ff6e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ff4a:	4620      	mov	r0, r4
 800ff4c:	f7ff ffe1 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ff50:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ff54:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ff58:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ff5c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ff60:	b138      	cbz	r0, 800ff72 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ff62:	8022      	strh	r2, [r4, #0]
 800ff64:	8063      	strh	r3, [r4, #2]
 800ff66:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ff6a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ff6e:	69ad      	ldr	r5, [r5, #24]
 800ff70:	e7e5      	b.n	800ff3e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ff72:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ff76:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ff7a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ff7e:	4290      	cmp	r0, r2
 800ff80:	4607      	mov	r7, r0
 800ff82:	bfa8      	it	ge
 800ff84:	4617      	movge	r7, r2
 800ff86:	4472      	add	r2, lr
 800ff88:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ff8c:	8027      	strh	r7, [r4, #0]
 800ff8e:	4299      	cmp	r1, r3
 800ff90:	460e      	mov	r6, r1
 800ff92:	4440      	add	r0, r8
 800ff94:	bfa8      	it	ge
 800ff96:	461e      	movge	r6, r3
 800ff98:	4471      	add	r1, lr
 800ff9a:	4463      	add	r3, ip
 800ff9c:	b200      	sxth	r0, r0
 800ff9e:	b212      	sxth	r2, r2
 800ffa0:	b209      	sxth	r1, r1
 800ffa2:	b21b      	sxth	r3, r3
 800ffa4:	4290      	cmp	r0, r2
 800ffa6:	bfac      	ite	ge
 800ffa8:	ebc7 0200 	rsbge	r2, r7, r0
 800ffac:	ebc7 0202 	rsblt	r2, r7, r2
 800ffb0:	4299      	cmp	r1, r3
 800ffb2:	bfac      	ite	ge
 800ffb4:	ebc6 0301 	rsbge	r3, r6, r1
 800ffb8:	ebc6 0303 	rsblt	r3, r6, r3
 800ffbc:	8066      	strh	r6, [r4, #2]
 800ffbe:	80a2      	strh	r2, [r4, #4]
 800ffc0:	80e3      	strh	r3, [r4, #6]
 800ffc2:	e7d4      	b.n	800ff6e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ffc4:	4620      	mov	r0, r4
 800ffc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ffca <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ffca:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ffce:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ffd2:	b383      	cbz	r3, 8010036 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ffd4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ffd6:	b374      	cbz	r4, 8010036 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ffd8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ffdc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ffe0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ffe4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ffe8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ffec:	b303      	cbz	r3, 8010030 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ffee:	4668      	mov	r0, sp
 800fff0:	1d21      	adds	r1, r4, #4
 800fff2:	f8ad 5000 	strh.w	r5, [sp]
 800fff6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800fffa:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fffe:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010002:	f7ff ff43 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 8010006:	4668      	mov	r0, sp
 8010008:	f7ff ff83 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801000c:	b980      	cbnz	r0, 8010030 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801000e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010012:	88a2      	ldrh	r2, [r4, #4]
 8010014:	1a9b      	subs	r3, r3, r2
 8010016:	f8ad 3000 	strh.w	r3, [sp]
 801001a:	88e2      	ldrh	r2, [r4, #6]
 801001c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010020:	1a9b      	subs	r3, r3, r2
 8010022:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010026:	6823      	ldr	r3, [r4, #0]
 8010028:	4669      	mov	r1, sp
 801002a:	689b      	ldr	r3, [r3, #8]
 801002c:	4620      	mov	r0, r4
 801002e:	4798      	blx	r3
 8010030:	69a4      	ldr	r4, [r4, #24]
 8010032:	2c00      	cmp	r4, #0
 8010034:	d1d8      	bne.n	800ffe8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010036:	b002      	add	sp, #8
 8010038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801003c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801003c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801003e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010042:	460d      	mov	r5, r1
 8010044:	4616      	mov	r6, r2
 8010046:	b323      	cbz	r3, 8010092 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010048:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801004a:	b314      	cbz	r4, 8010092 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801004c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010050:	b1eb      	cbz	r3, 801008e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010052:	6828      	ldr	r0, [r5, #0]
 8010054:	6869      	ldr	r1, [r5, #4]
 8010056:	466b      	mov	r3, sp
 8010058:	c303      	stmia	r3!, {r0, r1}
 801005a:	4668      	mov	r0, sp
 801005c:	1d21      	adds	r1, r4, #4
 801005e:	f7ff ff15 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 8010062:	4668      	mov	r0, sp
 8010064:	f7ff ff55 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010068:	b988      	cbnz	r0, 801008e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801006a:	f8bd 3000 	ldrh.w	r3, [sp]
 801006e:	88a2      	ldrh	r2, [r4, #4]
 8010070:	1a9b      	subs	r3, r3, r2
 8010072:	f8ad 3000 	strh.w	r3, [sp]
 8010076:	88e2      	ldrh	r2, [r4, #6]
 8010078:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801007c:	1a9b      	subs	r3, r3, r2
 801007e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010082:	6823      	ldr	r3, [r4, #0]
 8010084:	4632      	mov	r2, r6
 8010086:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010088:	4669      	mov	r1, sp
 801008a:	4620      	mov	r0, r4
 801008c:	4798      	blx	r3
 801008e:	69a4      	ldr	r4, [r4, #24]
 8010090:	e7db      	b.n	801004a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010092:	b002      	add	sp, #8
 8010094:	bd70      	pop	{r4, r5, r6, pc}

08010096 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8010096:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8010098:	4770      	bx	lr
	...

0801009c <_ZN8touchgfx14SwipeContainerD1Ev>:
 801009c:	4b05      	ldr	r3, [pc, #20]	; (80100b4 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 801009e:	b510      	push	{r4, lr}
 80100a0:	6003      	str	r3, [r0, #0]
 80100a2:	4604      	mov	r4, r0
 80100a4:	f005 fe44 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 80100a8:	4621      	mov	r1, r4
 80100aa:	3004      	adds	r0, #4
 80100ac:	f005 fe8d 	bl	8015dca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80100b0:	4620      	mov	r0, r4
 80100b2:	bd10      	pop	{r4, pc}
 80100b4:	0802e74c 	.word	0x0802e74c

080100b8 <_ZN8touchgfx14SwipeContainerD0Ev>:
 80100b8:	b510      	push	{r4, lr}
 80100ba:	4604      	mov	r4, r0
 80100bc:	f7ff ffee 	bl	801009c <_ZN8touchgfx14SwipeContainerD1Ev>
 80100c0:	4620      	mov	r0, r4
 80100c2:	21f4      	movs	r1, #244	; 0xf4
 80100c4:	f019 fee9 	bl	8029e9a <_ZdlPvj>
 80100c8:	4620      	mov	r0, r4
 80100ca:	bd10      	pop	{r4, pc}

080100cc <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 80100cc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80100d0:	2b04      	cmp	r3, #4
 80100d2:	d117      	bne.n	8010104 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 80100d4:	790b      	ldrb	r3, [r1, #4]
 80100d6:	2b01      	cmp	r3, #1
 80100d8:	d114      	bne.n	8010104 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 80100da:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 80100de:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 80100e0:	8643      	strh	r3, [r0, #50]	; 0x32
 80100e2:	2b00      	cmp	r3, #0
 80100e4:	8682      	strh	r2, [r0, #52]	; 0x34
 80100e6:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 80100ea:	da0e      	bge.n	801010a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 80100ec:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 80100f0:	3a01      	subs	r2, #1
 80100f2:	4291      	cmp	r1, r2
 80100f4:	d007      	beq.n	8010106 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 80100f6:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 80100f8:	4252      	negs	r2, r2
 80100fa:	4293      	cmp	r3, r2
 80100fc:	dc03      	bgt.n	8010106 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 80100fe:	2302      	movs	r3, #2
 8010100:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010104:	4770      	bx	lr
 8010106:	2300      	movs	r3, #0
 8010108:	e7fa      	b.n	8010100 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 801010a:	d0fb      	beq.n	8010104 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801010c:	b111      	cbz	r1, 8010114 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 801010e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8010110:	4293      	cmp	r3, r2
 8010112:	da01      	bge.n	8010118 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8010114:	2301      	movs	r3, #1
 8010116:	e7f3      	b.n	8010100 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8010118:	2303      	movs	r3, #3
 801011a:	e7f1      	b.n	8010100 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

0801011c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 801011c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010120:	2b04      	cmp	r3, #4
 8010122:	d113      	bne.n	801014c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010124:	790b      	ldrb	r3, [r1, #4]
 8010126:	b98b      	cbnz	r3, 801014c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010128:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801012a:	8643      	strh	r3, [r0, #50]	; 0x32
 801012c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801012e:	8683      	strh	r3, [r0, #52]	; 0x34
 8010130:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010134:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8010138:	2b00      	cmp	r3, #0
 801013a:	da08      	bge.n	801014e <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 801013c:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8010140:	3b01      	subs	r3, #1
 8010142:	429a      	cmp	r2, r3
 8010144:	da02      	bge.n	801014c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010146:	2302      	movs	r3, #2
 8010148:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801014c:	4770      	bx	lr
 801014e:	d0fd      	beq.n	801014c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010150:	2a00      	cmp	r2, #0
 8010152:	d0fb      	beq.n	801014c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010154:	2303      	movs	r3, #3
 8010156:	e7f7      	b.n	8010148 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08010158 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8010158:	b538      	push	{r3, r4, r5, lr}
 801015a:	2226      	movs	r2, #38	; 0x26
 801015c:	4604      	mov	r4, r0
 801015e:	460d      	mov	r5, r1
 8010160:	2100      	movs	r1, #0
 8010162:	f01a feb2 	bl	802aeca <memset>
 8010166:	4620      	mov	r0, r4
 8010168:	f7ff fc58 	bl	800fa1c <_ZN8touchgfx8DrawableC1Ev>
 801016c:	4b06      	ldr	r3, [pc, #24]	; (8010188 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 801016e:	6023      	str	r3, [r4, #0]
 8010170:	882b      	ldrh	r3, [r5, #0]
 8010172:	84e3      	strh	r3, [r4, #38]	; 0x26
 8010174:	23ff      	movs	r3, #255	; 0xff
 8010176:	4620      	mov	r0, r4
 8010178:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 801017c:	4629      	mov	r1, r5
 801017e:	f003 f8d8 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010182:	4620      	mov	r0, r4
 8010184:	bd38      	pop	{r3, r4, r5, pc}
 8010186:	bf00      	nop
 8010188:	0802edf0 	.word	0x0802edf0

0801018c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 801018c:	86c1      	strh	r1, [r0, #54]	; 0x36
 801018e:	4770      	bx	lr

08010190 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8010190:	b508      	push	{r3, lr}
 8010192:	3068      	adds	r0, #104	; 0x68
 8010194:	f7f2 fbe0 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8010198:	bd08      	pop	{r3, pc}

0801019a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 801019a:	b508      	push	{r3, lr}
 801019c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 801019e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 80101a2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80101a6:	fb03 2111 	mls	r1, r3, r1, r2
 80101aa:	b209      	sxth	r1, r1
 80101ac:	2200      	movs	r2, #0
 80101ae:	3038      	adds	r0, #56	; 0x38
 80101b0:	f7f2 f955 	bl	800245e <_ZN8touchgfx8Drawable6moveToEss>
 80101b4:	bd08      	pop	{r3, pc}

080101b6 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 80101b6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80101ba:	2b04      	cmp	r3, #4
 80101bc:	d119      	bne.n	80101f2 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 80101be:	88ca      	ldrh	r2, [r1, #6]
 80101c0:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80101c2:	1a9b      	subs	r3, r3, r2
 80101c4:	894a      	ldrh	r2, [r1, #10]
 80101c6:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 80101ca:	4413      	add	r3, r2
 80101cc:	b21b      	sxth	r3, r3
 80101ce:	8603      	strh	r3, [r0, #48]	; 0x30
 80101d0:	b921      	cbnz	r1, 80101dc <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 80101d2:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 80101d4:	4293      	cmp	r3, r2
 80101d6:	dd01      	ble.n	80101dc <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 80101d8:	8602      	strh	r2, [r0, #48]	; 0x30
 80101da:	e008      	b.n	80101ee <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 80101dc:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 80101e0:	3a01      	subs	r2, #1
 80101e2:	4291      	cmp	r1, r2
 80101e4:	d103      	bne.n	80101ee <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 80101e6:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 80101e8:	4252      	negs	r2, r2
 80101ea:	4293      	cmp	r3, r2
 80101ec:	dbf4      	blt.n	80101d8 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 80101ee:	f7ff bfd4 	b.w	801019a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80101f2:	4770      	bx	lr

080101f4 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 80101f4:	b538      	push	{r3, r4, r5, lr}
 80101f6:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 80101fa:	2d0e      	cmp	r5, #14
 80101fc:	4604      	mov	r4, r0
 80101fe:	d813      	bhi.n	8010228 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8010200:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8010202:	4252      	negs	r2, r2
 8010204:	230e      	movs	r3, #14
 8010206:	b212      	sxth	r2, r2
 8010208:	2100      	movs	r1, #0
 801020a:	4628      	mov	r0, r5
 801020c:	f007 fbc2 	bl	8017994 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010210:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010212:	4418      	add	r0, r3
 8010214:	8620      	strh	r0, [r4, #48]	; 0x30
 8010216:	4620      	mov	r0, r4
 8010218:	f7ff ffbf 	bl	801019a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801021c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010220:	3301      	adds	r3, #1
 8010222:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010226:	bd38      	pop	{r3, r4, r5, pc}
 8010228:	2304      	movs	r3, #4
 801022a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801022e:	2300      	movs	r3, #0
 8010230:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8010234:	8603      	strh	r3, [r0, #48]	; 0x30
 8010236:	e7ef      	b.n	8010218 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08010238 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8010238:	b538      	push	{r3, r4, r5, lr}
 801023a:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801023e:	2d0e      	cmp	r5, #14
 8010240:	4604      	mov	r4, r0
 8010242:	d812      	bhi.n	801026a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8010244:	230e      	movs	r3, #14
 8010246:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 801024a:	2100      	movs	r1, #0
 801024c:	4628      	mov	r0, r5
 801024e:	f007 fba1 	bl	8017994 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010252:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010254:	1a18      	subs	r0, r3, r0
 8010256:	8620      	strh	r0, [r4, #48]	; 0x30
 8010258:	4620      	mov	r0, r4
 801025a:	f7ff ff9e 	bl	801019a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801025e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010262:	3301      	adds	r3, #1
 8010264:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010268:	bd38      	pop	{r3, r4, r5, pc}
 801026a:	2304      	movs	r3, #4
 801026c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010270:	2300      	movs	r3, #0
 8010272:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8010276:	8603      	strh	r3, [r0, #48]	; 0x30
 8010278:	e7ef      	b.n	801025a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

0801027c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 801027c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010280:	4604      	mov	r4, r0
 8010282:	4626      	mov	r6, r4
 8010284:	af02      	add	r7, sp, #8
 8010286:	f7ff fbc9 	bl	800fa1c <_ZN8touchgfx8DrawableC1Ev>
 801028a:	2500      	movs	r5, #0
 801028c:	4b18      	ldr	r3, [pc, #96]	; (80102f0 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 801028e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010290:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8010294:	f846 3b2c 	str.w	r3, [r6], #44
 8010298:	f827 9d04 	strh.w	r9, [r7, #-4]!
 801029c:	4630      	mov	r0, r6
 801029e:	4639      	mov	r1, r7
 80102a0:	f7ff ff5a 	bl	8010158 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80102a4:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 80102a8:	4b12      	ldr	r3, [pc, #72]	; (80102f4 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 80102aa:	62e3      	str	r3, [r4, #44]	; 0x2c
 80102ac:	4639      	mov	r1, r7
 80102ae:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80102b2:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 80102b6:	4640      	mov	r0, r8
 80102b8:	f8ad 9004 	strh.w	r9, [sp, #4]
 80102bc:	f7ff ff4c 	bl	8010158 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80102c0:	462a      	mov	r2, r5
 80102c2:	4629      	mov	r1, r5
 80102c4:	4630      	mov	r0, r6
 80102c6:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 80102ca:	f7f2 fb45 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80102ce:	462a      	mov	r2, r5
 80102d0:	4629      	mov	r1, r5
 80102d2:	4640      	mov	r0, r8
 80102d4:	f7f2 fb40 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80102d8:	4631      	mov	r1, r6
 80102da:	4620      	mov	r0, r4
 80102dc:	f7ff fc50 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80102e0:	4620      	mov	r0, r4
 80102e2:	4641      	mov	r1, r8
 80102e4:	f7ff fc4c 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80102e8:	4620      	mov	r0, r4
 80102ea:	b003      	add	sp, #12
 80102ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80102f0:	0802c660 	.word	0x0802c660
 80102f4:	0802ec0c 	.word	0x0802ec0c

080102f8 <_ZN8touchgfx14SwipeContainerC1Ev>:
 80102f8:	b570      	push	{r4, r5, r6, lr}
 80102fa:	4604      	mov	r4, r0
 80102fc:	f7ff fb8e 	bl	800fa1c <_ZN8touchgfx8DrawableC1Ev>
 8010300:	4b1a      	ldr	r3, [pc, #104]	; (801036c <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8010302:	6023      	str	r3, [r4, #0]
 8010304:	2304      	movs	r3, #4
 8010306:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801030a:	2350      	movs	r3, #80	; 0x50
 801030c:	2500      	movs	r5, #0
 801030e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8010310:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8010314:	231e      	movs	r3, #30
 8010316:	62a5      	str	r5, [r4, #40]	; 0x28
 8010318:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 801031c:	8625      	strh	r5, [r4, #48]	; 0x30
 801031e:	8665      	strh	r5, [r4, #50]	; 0x32
 8010320:	86a5      	strh	r5, [r4, #52]	; 0x34
 8010322:	86e3      	strh	r3, [r4, #54]	; 0x36
 8010324:	4630      	mov	r0, r6
 8010326:	f7ff fb79 	bl	800fa1c <_ZN8touchgfx8DrawableC1Ev>
 801032a:	4b11      	ldr	r3, [pc, #68]	; (8010370 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 801032c:	6625      	str	r5, [r4, #96]	; 0x60
 801032e:	63a3      	str	r3, [r4, #56]	; 0x38
 8010330:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8010334:	2302      	movs	r3, #2
 8010336:	f104 0568 	add.w	r5, r4, #104	; 0x68
 801033a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 801033e:	4628      	mov	r0, r5
 8010340:	f7ff ff9c 	bl	801027c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8010344:	f005 fcf4 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 8010348:	4621      	mov	r1, r4
 801034a:	3004      	adds	r0, #4
 801034c:	f005 fde6 	bl	8015f1c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8010350:	2301      	movs	r3, #1
 8010352:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8010356:	4631      	mov	r1, r6
 8010358:	4620      	mov	r0, r4
 801035a:	f7ff fc11 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801035e:	4620      	mov	r0, r4
 8010360:	4629      	mov	r1, r5
 8010362:	f7ff fc0d 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010366:	4620      	mov	r0, r4
 8010368:	bd70      	pop	{r4, r5, r6, pc}
 801036a:	bf00      	nop
 801036c:	0802e74c 	.word	0x0802e74c
 8010370:	0802e810 	.word	0x0802e810

08010374 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8010374:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010376:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 801037a:	428b      	cmp	r3, r1
 801037c:	4604      	mov	r4, r0
 801037e:	460d      	mov	r5, r1
 8010380:	d915      	bls.n	80103ae <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8010382:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8010386:	428b      	cmp	r3, r1
 8010388:	d011      	beq.n	80103ae <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 801038a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 801038e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8010392:	a802      	add	r0, sp, #8
 8010394:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8010398:	f009 f91a 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801039c:	fb15 f100 	smulbb	r1, r5, r0
 80103a0:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 80103a4:	b209      	sxth	r1, r1
 80103a6:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80103aa:	f7f2 f858 	bl	800245e <_ZN8touchgfx8Drawable6moveToEss>
 80103ae:	b003      	add	sp, #12
 80103b0:	bd30      	pop	{r4, r5, pc}

080103b2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 80103b2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80103b4:	4604      	mov	r4, r0
 80103b6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80103ba:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 80103be:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 80103c2:	4293      	cmp	r3, r2
 80103c4:	460d      	mov	r5, r1
 80103c6:	d01e      	beq.n	8010406 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 80103c8:	a802      	add	r0, sp, #8
 80103ca:	f820 3d04 	strh.w	r3, [r0, #-4]!
 80103ce:	f009 f8ff 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80103d2:	6823      	ldr	r3, [r4, #0]
 80103d4:	fb15 f000 	smulbb	r0, r5, r0
 80103d8:	86a0      	strh	r0, [r4, #52]	; 0x34
 80103da:	695b      	ldr	r3, [r3, #20]
 80103dc:	4620      	mov	r0, r4
 80103de:	4798      	blx	r3
 80103e0:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80103e4:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80103e8:	4620      	mov	r0, r4
 80103ea:	f7ff fb2f 	bl	800fa4c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80103ee:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 80103f2:	42a9      	cmp	r1, r5
 80103f4:	4620      	mov	r0, r4
 80103f6:	bf28      	it	cs
 80103f8:	4629      	movcs	r1, r5
 80103fa:	f7ff ffbb 	bl	8010374 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 80103fe:	6823      	ldr	r3, [r4, #0]
 8010400:	4620      	mov	r0, r4
 8010402:	695b      	ldr	r3, [r3, #20]
 8010404:	4798      	blx	r3
 8010406:	b003      	add	sp, #12
 8010408:	bd30      	pop	{r4, r5, pc}

0801040a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801040a:	b538      	push	{r3, r4, r5, lr}
 801040c:	4604      	mov	r4, r0
 801040e:	460d      	mov	r5, r1
 8010410:	305c      	adds	r0, #92	; 0x5c
 8010412:	4611      	mov	r1, r2
 8010414:	f002 ff8d 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010418:	4629      	mov	r1, r5
 801041a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801041e:	f002 fa53 	bl	80128c8 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8010422:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8010426:	b121      	cbz	r1, 8010432 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8010428:	4620      	mov	r0, r4
 801042a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801042e:	f7ff bfc0 	b.w	80103b2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010432:	bd38      	pop	{r3, r4, r5, pc}

08010434 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8010434:	3068      	adds	r0, #104	; 0x68
 8010436:	f7ff bfe8 	b.w	801040a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

0801043a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 801043a:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 801043e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8010442:	3101      	adds	r1, #1
 8010444:	fb91 f3f2 	sdiv	r3, r1, r2
 8010448:	fb02 1113 	mls	r1, r2, r3, r1
 801044c:	b2c9      	uxtb	r1, r1
 801044e:	f7ff bf91 	b.w	8010374 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08010452 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 8010452:	b510      	push	{r4, lr}
 8010454:	4604      	mov	r4, r0
 8010456:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 801045a:	280a      	cmp	r0, #10
 801045c:	d813      	bhi.n	8010486 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 801045e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010460:	8922      	ldrh	r2, [r4, #8]
 8010462:	441a      	add	r2, r3
 8010464:	b212      	sxth	r2, r2
 8010466:	230a      	movs	r3, #10
 8010468:	2100      	movs	r1, #0
 801046a:	f007 fad1 	bl	8017a10 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 801046e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010470:	1a18      	subs	r0, r3, r0
 8010472:	8620      	strh	r0, [r4, #48]	; 0x30
 8010474:	4620      	mov	r0, r4
 8010476:	f7ff fe90 	bl	801019a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801047a:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 801047e:	3301      	adds	r3, #1
 8010480:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010484:	bd10      	pop	{r4, pc}
 8010486:	2304      	movs	r3, #4
 8010488:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801048c:	2300      	movs	r3, #0
 801048e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010492:	8623      	strh	r3, [r4, #48]	; 0x30
 8010494:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010498:	f7ff ffcf 	bl	801043a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 801049c:	e7ea      	b.n	8010474 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

0801049e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 801049e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80104a2:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80104a6:	4411      	add	r1, r2
 80104a8:	3901      	subs	r1, #1
 80104aa:	fb91 f3f2 	sdiv	r3, r1, r2
 80104ae:	fb02 1113 	mls	r1, r2, r3, r1
 80104b2:	b2c9      	uxtb	r1, r1
 80104b4:	f7ff bf5e 	b.w	8010374 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080104b8 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 80104b8:	b510      	push	{r4, lr}
 80104ba:	4604      	mov	r4, r0
 80104bc:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80104c0:	280a      	cmp	r0, #10
 80104c2:	d813      	bhi.n	80104ec <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 80104c4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80104c6:	8922      	ldrh	r2, [r4, #8]
 80104c8:	1ad2      	subs	r2, r2, r3
 80104ca:	b212      	sxth	r2, r2
 80104cc:	230a      	movs	r3, #10
 80104ce:	2100      	movs	r1, #0
 80104d0:	f007 fa9e 	bl	8017a10 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80104d4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80104d6:	4418      	add	r0, r3
 80104d8:	8620      	strh	r0, [r4, #48]	; 0x30
 80104da:	4620      	mov	r0, r4
 80104dc:	f7ff fe5d 	bl	801019a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80104e0:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80104e4:	3301      	adds	r3, #1
 80104e6:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80104ea:	bd10      	pop	{r4, pc}
 80104ec:	2304      	movs	r3, #4
 80104ee:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80104f2:	2300      	movs	r3, #0
 80104f4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80104f8:	8623      	strh	r3, [r4, #48]	; 0x30
 80104fa:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80104fe:	f7ff ffce 	bl	801049e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8010502:	e7ea      	b.n	80104da <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08010504 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8010504:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010508:	b90b      	cbnz	r3, 801050e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801050a:	f7ff be73 	b.w	80101f4 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801050e:	2b01      	cmp	r3, #1
 8010510:	d101      	bne.n	8010516 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8010512:	f7ff be91 	b.w	8010238 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8010516:	2b02      	cmp	r3, #2
 8010518:	d101      	bne.n	801051e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801051a:	f7ff bf9a 	b.w	8010452 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801051e:	2b03      	cmp	r3, #3
 8010520:	d101      	bne.n	8010526 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8010522:	f7ff bfc9 	b.w	80104b8 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8010526:	4770      	bx	lr

08010528 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8010528:	b510      	push	{r4, lr}
 801052a:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 801052e:	428b      	cmp	r3, r1
 8010530:	4604      	mov	r4, r0
 8010532:	d907      	bls.n	8010544 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8010534:	3068      	adds	r0, #104	; 0x68
 8010536:	f7ff ff1d 	bl	8010374 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801053a:	4620      	mov	r0, r4
 801053c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010540:	f7ff be2b 	b.w	801019a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010544:	bd10      	pop	{r4, pc}

08010546 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 8010546:	b538      	push	{r3, r4, r5, lr}
 8010548:	4604      	mov	r4, r0
 801054a:	3038      	adds	r0, #56	; 0x38
 801054c:	460d      	mov	r5, r1
 801054e:	f000 f963 	bl	8010818 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8010552:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8010556:	3101      	adds	r1, #1
 8010558:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801055c:	b2c9      	uxtb	r1, r1
 801055e:	f7ff ff28 	bl	80103b2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010562:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8010566:	4620      	mov	r0, r4
 8010568:	f7ff ffde 	bl	8010528 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801056c:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8010570:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8010574:	4620      	mov	r0, r4
 8010576:	f7ff fa69 	bl	800fa4c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801057a:	bd38      	pop	{r3, r4, r5, pc}

0801057c <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 801057c:	b538      	push	{r3, r4, r5, lr}
 801057e:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8010582:	4604      	mov	r4, r0
 8010584:	b1e3      	cbz	r3, 80105c0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8010586:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8010588:	b1d3      	cbz	r3, 80105c0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 801058a:	428b      	cmp	r3, r1
 801058c:	d125      	bne.n	80105da <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 801058e:	4619      	mov	r1, r3
 8010590:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8010594:	f000 f9c0 	bl	8010918 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8010598:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801059c:	3901      	subs	r1, #1
 801059e:	b2c9      	uxtb	r1, r1
 80105a0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80105a4:	f7ff ff05 	bl	80103b2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80105a8:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 80105ac:	b94d      	cbnz	r5, 80105c2 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 80105ae:	6823      	ldr	r3, [r4, #0]
 80105b0:	4620      	mov	r0, r4
 80105b2:	695b      	ldr	r3, [r3, #20]
 80105b4:	4798      	blx	r3
 80105b6:	462a      	mov	r2, r5
 80105b8:	4629      	mov	r1, r5
 80105ba:	4620      	mov	r0, r4
 80105bc:	f7ff fa46 	bl	800fa4c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80105c0:	bd38      	pop	{r3, r4, r5, pc}
 80105c2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80105c6:	3d01      	subs	r5, #1
 80105c8:	42a9      	cmp	r1, r5
 80105ca:	bfa8      	it	ge
 80105cc:	4629      	movge	r1, r5
 80105ce:	4620      	mov	r0, r4
 80105d0:	b2c9      	uxtb	r1, r1
 80105d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80105d6:	f7ff bfa7 	b.w	8010528 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80105da:	699b      	ldr	r3, [r3, #24]
 80105dc:	e7d4      	b.n	8010588 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

080105de <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 80105de:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80105e2:	4770      	bx	lr

080105e4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 80105e4:	b538      	push	{r3, r4, r5, lr}
 80105e6:	7882      	ldrb	r2, [r0, #2]
 80105e8:	6843      	ldr	r3, [r0, #4]
 80105ea:	4604      	mov	r4, r0
 80105ec:	460d      	mov	r5, r1
 80105ee:	b98a      	cbnz	r2, 8010614 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 80105f0:	4299      	cmp	r1, r3
 80105f2:	d101      	bne.n	80105f8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80105f4:	2301      	movs	r3, #1
 80105f6:	7083      	strb	r3, [r0, #2]
 80105f8:	6863      	ldr	r3, [r4, #4]
 80105fa:	42ab      	cmp	r3, r5
 80105fc:	d009      	beq.n	8010612 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80105fe:	7a23      	ldrb	r3, [r4, #8]
 8010600:	2b01      	cmp	r3, #1
 8010602:	d11b      	bne.n	801063c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8010604:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8010608:	f9b4 2000 	ldrsh.w	r2, [r4]
 801060c:	429a      	cmp	r2, r3
 801060e:	bfb8      	it	lt
 8010610:	8023      	strhlt	r3, [r4, #0]
 8010612:	bd38      	pop	{r3, r4, r5, pc}
 8010614:	7a02      	ldrb	r2, [r0, #8]
 8010616:	2a01      	cmp	r2, #1
 8010618:	d108      	bne.n	801062c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801061a:	895b      	ldrh	r3, [r3, #10]
 801061c:	88c9      	ldrh	r1, [r1, #6]
 801061e:	1ac9      	subs	r1, r1, r3
 8010620:	682b      	ldr	r3, [r5, #0]
 8010622:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010624:	b209      	sxth	r1, r1
 8010626:	4628      	mov	r0, r5
 8010628:	4798      	blx	r3
 801062a:	e7e5      	b.n	80105f8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 801062c:	2a02      	cmp	r2, #2
 801062e:	d1e3      	bne.n	80105f8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8010630:	891b      	ldrh	r3, [r3, #8]
 8010632:	8889      	ldrh	r1, [r1, #4]
 8010634:	1ac9      	subs	r1, r1, r3
 8010636:	682b      	ldr	r3, [r5, #0]
 8010638:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801063a:	e7f3      	b.n	8010624 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 801063c:	2b02      	cmp	r3, #2
 801063e:	d1e8      	bne.n	8010612 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8010640:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8010644:	e7e0      	b.n	8010608 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

08010646 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 8010646:	4770      	bx	lr

08010648 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 8010648:	4770      	bx	lr

0801064a <_ZN8touchgfx10ListLayoutD1Ev>:
 801064a:	4770      	bx	lr

0801064c <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 801064c:	b430      	push	{r4, r5}
 801064e:	68c5      	ldr	r5, [r0, #12]
 8010650:	6844      	ldr	r4, [r0, #4]
 8010652:	106a      	asrs	r2, r5, #1
 8010654:	4603      	mov	r3, r0
 8010656:	07ed      	lsls	r5, r5, #31
 8010658:	eb04 0002 	add.w	r0, r4, r2
 801065c:	689b      	ldr	r3, [r3, #8]
 801065e:	bf48      	it	mi
 8010660:	58a2      	ldrmi	r2, [r4, r2]
 8010662:	bc30      	pop	{r4, r5}
 8010664:	bf48      	it	mi
 8010666:	58d3      	ldrmi	r3, [r2, r3]
 8010668:	4718      	bx	r3

0801066a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 801066a:	6843      	ldr	r3, [r0, #4]
 801066c:	b12b      	cbz	r3, 801067a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 801066e:	6883      	ldr	r3, [r0, #8]
 8010670:	b92b      	cbnz	r3, 801067e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8010672:	68c0      	ldr	r0, [r0, #12]
 8010674:	f000 0001 	and.w	r0, r0, #1
 8010678:	4770      	bx	lr
 801067a:	4618      	mov	r0, r3
 801067c:	4770      	bx	lr
 801067e:	2001      	movs	r0, #1
 8010680:	4770      	bx	lr

08010682 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8010682:	b430      	push	{r4, r5}
 8010684:	68c5      	ldr	r5, [r0, #12]
 8010686:	6844      	ldr	r4, [r0, #4]
 8010688:	106a      	asrs	r2, r5, #1
 801068a:	4603      	mov	r3, r0
 801068c:	07ed      	lsls	r5, r5, #31
 801068e:	eb04 0002 	add.w	r0, r4, r2
 8010692:	689b      	ldr	r3, [r3, #8]
 8010694:	bf48      	it	mi
 8010696:	58a2      	ldrmi	r2, [r4, r2]
 8010698:	bc30      	pop	{r4, r5}
 801069a:	bf48      	it	mi
 801069c:	58d3      	ldrmi	r3, [r2, r3]
 801069e:	4718      	bx	r3

080106a0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 80106a0:	6843      	ldr	r3, [r0, #4]
 80106a2:	b12b      	cbz	r3, 80106b0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 80106a4:	6883      	ldr	r3, [r0, #8]
 80106a6:	b92b      	cbnz	r3, 80106b4 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 80106a8:	68c0      	ldr	r0, [r0, #12]
 80106aa:	f000 0001 	and.w	r0, r0, #1
 80106ae:	4770      	bx	lr
 80106b0:	4618      	mov	r0, r3
 80106b2:	4770      	bx	lr
 80106b4:	2001      	movs	r0, #1
 80106b6:	4770      	bx	lr

080106b8 <_ZN8touchgfx10ListLayoutD0Ev>:
 80106b8:	b510      	push	{r4, lr}
 80106ba:	2130      	movs	r1, #48	; 0x30
 80106bc:	4604      	mov	r4, r0
 80106be:	f019 fbec 	bl	8029e9a <_ZdlPvj>
 80106c2:	4620      	mov	r0, r4
 80106c4:	bd10      	pop	{r4, pc}

080106c6 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 80106c6:	b510      	push	{r4, lr}
 80106c8:	2110      	movs	r1, #16
 80106ca:	4604      	mov	r4, r0
 80106cc:	f019 fbe5 	bl	8029e9a <_ZdlPvj>
 80106d0:	4620      	mov	r0, r4
 80106d2:	bd10      	pop	{r4, pc}

080106d4 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 80106d4:	b510      	push	{r4, lr}
 80106d6:	2110      	movs	r1, #16
 80106d8:	4604      	mov	r4, r0
 80106da:	f019 fbde 	bl	8029e9a <_ZdlPvj>
 80106de:	4620      	mov	r0, r4
 80106e0:	bd10      	pop	{r4, pc}

080106e2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 80106e2:	4603      	mov	r3, r0
 80106e4:	4608      	mov	r0, r1
 80106e6:	789a      	ldrb	r2, [r3, #2]
 80106e8:	b992      	cbnz	r2, 8010710 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 80106ea:	685a      	ldr	r2, [r3, #4]
 80106ec:	428a      	cmp	r2, r1
 80106ee:	d102      	bne.n	80106f6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 80106f0:	2201      	movs	r2, #1
 80106f2:	709a      	strb	r2, [r3, #2]
 80106f4:	4770      	bx	lr
 80106f6:	7a1a      	ldrb	r2, [r3, #8]
 80106f8:	2a01      	cmp	r2, #1
 80106fa:	d104      	bne.n	8010706 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 80106fc:	88ca      	ldrh	r2, [r1, #6]
 80106fe:	8949      	ldrh	r1, [r1, #10]
 8010700:	440a      	add	r2, r1
 8010702:	801a      	strh	r2, [r3, #0]
 8010704:	4770      	bx	lr
 8010706:	2a02      	cmp	r2, #2
 8010708:	d116      	bne.n	8010738 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801070a:	888a      	ldrh	r2, [r1, #4]
 801070c:	8909      	ldrh	r1, [r1, #8]
 801070e:	e7f7      	b.n	8010700 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8010710:	7a1a      	ldrb	r2, [r3, #8]
 8010712:	2a01      	cmp	r2, #1
 8010714:	d107      	bne.n	8010726 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8010716:	685b      	ldr	r3, [r3, #4]
 8010718:	8959      	ldrh	r1, [r3, #10]
 801071a:	88c3      	ldrh	r3, [r0, #6]
 801071c:	4419      	add	r1, r3
 801071e:	6803      	ldr	r3, [r0, #0]
 8010720:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010722:	b209      	sxth	r1, r1
 8010724:	4718      	bx	r3
 8010726:	2a02      	cmp	r2, #2
 8010728:	d106      	bne.n	8010738 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801072a:	685b      	ldr	r3, [r3, #4]
 801072c:	8919      	ldrh	r1, [r3, #8]
 801072e:	8883      	ldrh	r3, [r0, #4]
 8010730:	4419      	add	r1, r3
 8010732:	6803      	ldr	r3, [r0, #0]
 8010734:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010736:	e7f4      	b.n	8010722 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8010738:	4770      	bx	lr

0801073a <_ZN8touchgfx10ListLayout9removeAllEv>:
 801073a:	2200      	movs	r2, #0
 801073c:	b510      	push	{r4, lr}
 801073e:	4611      	mov	r1, r2
 8010740:	4604      	mov	r4, r0
 8010742:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8010744:	f7ff f982 	bl	800fa4c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010748:	4620      	mov	r0, r4
 801074a:	f7ff fa26 	bl	800fb9a <_ZN8touchgfx9Container9removeAllEv>
 801074e:	6960      	ldr	r0, [r4, #20]
 8010750:	b120      	cbz	r0, 801075c <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8010752:	6803      	ldr	r3, [r0, #0]
 8010754:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010758:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801075a:	4718      	bx	r3
 801075c:	bd10      	pop	{r4, pc}
	...

08010760 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8010760:	b530      	push	{r4, r5, lr}
 8010762:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010766:	428b      	cmp	r3, r1
 8010768:	b085      	sub	sp, #20
 801076a:	4604      	mov	r4, r0
 801076c:	d017      	beq.n	801079e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 801076e:	2500      	movs	r5, #0
 8010770:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8010774:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8010776:	462a      	mov	r2, r5
 8010778:	4629      	mov	r1, r5
 801077a:	f7ff f967 	bl	800fa4c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801077e:	4b09      	ldr	r3, [pc, #36]	; (80107a4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8010780:	e9cd 3400 	strd	r3, r4, [sp]
 8010784:	4b08      	ldr	r3, [pc, #32]	; (80107a8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8010786:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801078a:	6823      	ldr	r3, [r4, #0]
 801078c:	4620      	mov	r0, r4
 801078e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010790:	4669      	mov	r1, sp
 8010792:	4798      	blx	r3
 8010794:	6960      	ldr	r0, [r4, #20]
 8010796:	b110      	cbz	r0, 801079e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8010798:	6803      	ldr	r3, [r0, #0]
 801079a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801079c:	4798      	blx	r3
 801079e:	b005      	add	sp, #20
 80107a0:	bd30      	pop	{r4, r5, pc}
 80107a2:	bf00      	nop
 80107a4:	0802e7e0 	.word	0x0802e7e0
 80107a8:	08010811 	.word	0x08010811

080107ac <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 80107ac:	b538      	push	{r3, r4, r5, lr}
 80107ae:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80107b2:	2b01      	cmp	r3, #1
 80107b4:	460d      	mov	r5, r1
 80107b6:	4604      	mov	r4, r0
 80107b8:	4611      	mov	r1, r2
 80107ba:	d002      	beq.n	80107c2 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 80107bc:	2b02      	cmp	r3, #2
 80107be:	d015      	beq.n	80107ec <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 80107c0:	bd38      	pop	{r3, r4, r5, pc}
 80107c2:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 80107c6:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 80107ca:	429a      	cmp	r2, r3
 80107cc:	bfb8      	it	lt
 80107ce:	8103      	strhlt	r3, [r0, #8]
 80107d0:	896a      	ldrh	r2, [r5, #10]
 80107d2:	8943      	ldrh	r3, [r0, #10]
 80107d4:	4413      	add	r3, r2
 80107d6:	8143      	strh	r3, [r0, #10]
 80107d8:	460a      	mov	r2, r1
 80107da:	4628      	mov	r0, r5
 80107dc:	2100      	movs	r1, #0
 80107de:	f7f2 f8bb 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80107e2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80107e4:	896a      	ldrh	r2, [r5, #10]
 80107e6:	4413      	add	r3, r2
 80107e8:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80107ea:	e7e9      	b.n	80107c0 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 80107ec:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80107f0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80107f4:	429a      	cmp	r2, r3
 80107f6:	bfb8      	it	lt
 80107f8:	8143      	strhlt	r3, [r0, #10]
 80107fa:	892a      	ldrh	r2, [r5, #8]
 80107fc:	8903      	ldrh	r3, [r0, #8]
 80107fe:	4413      	add	r3, r2
 8010800:	8103      	strh	r3, [r0, #8]
 8010802:	2200      	movs	r2, #0
 8010804:	4628      	mov	r0, r5
 8010806:	f7f2 f8a7 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 801080a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801080c:	892a      	ldrh	r2, [r5, #8]
 801080e:	e7ea      	b.n	80107e6 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08010810 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8010810:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8010814:	f7ff bfca 	b.w	80107ac <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08010818 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8010818:	b570      	push	{r4, r5, r6, lr}
 801081a:	4604      	mov	r4, r0
 801081c:	460d      	mov	r5, r1
 801081e:	f7ff fff7 	bl	8010810 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8010822:	4620      	mov	r0, r4
 8010824:	4629      	mov	r1, r5
 8010826:	f7ff f9ab 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801082a:	6960      	ldr	r0, [r4, #20]
 801082c:	b120      	cbz	r0, 8010838 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 801082e:	6803      	ldr	r3, [r0, #0]
 8010830:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010834:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010836:	4718      	bx	r3
 8010838:	bd70      	pop	{r4, r5, r6, pc}
	...

0801083c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 801083c:	b530      	push	{r4, r5, lr}
 801083e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010840:	b089      	sub	sp, #36	; 0x24
 8010842:	4604      	mov	r4, r0
 8010844:	4615      	mov	r5, r2
 8010846:	b92b      	cbnz	r3, 8010854 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8010848:	6803      	ldr	r3, [r0, #0]
 801084a:	4611      	mov	r1, r2
 801084c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801084e:	4798      	blx	r3
 8010850:	b009      	add	sp, #36	; 0x24
 8010852:	bd30      	pop	{r4, r5, pc}
 8010854:	f7ff f9ec 	bl	800fc30 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 8010858:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 801085c:	f88d 200c 	strb.w	r2, [sp, #12]
 8010860:	4a0f      	ldr	r2, [pc, #60]	; (80108a0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8010862:	9204      	str	r2, [sp, #16]
 8010864:	aa01      	add	r2, sp, #4
 8010866:	9205      	str	r2, [sp, #20]
 8010868:	4a0e      	ldr	r2, [pc, #56]	; (80108a4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 801086a:	9502      	str	r5, [sp, #8]
 801086c:	2300      	movs	r3, #0
 801086e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8010872:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010876:	f88d 3006 	strb.w	r3, [sp, #6]
 801087a:	6823      	ldr	r3, [r4, #0]
 801087c:	a904      	add	r1, sp, #16
 801087e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010880:	4620      	mov	r0, r4
 8010882:	4798      	blx	r3
 8010884:	4620      	mov	r0, r4
 8010886:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801088a:	4629      	mov	r1, r5
 801088c:	f7ff ff8e 	bl	80107ac <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8010890:	6960      	ldr	r0, [r4, #20]
 8010892:	2800      	cmp	r0, #0
 8010894:	d0dc      	beq.n	8010850 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8010896:	6803      	ldr	r3, [r0, #0]
 8010898:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801089a:	4798      	blx	r3
 801089c:	e7d8      	b.n	8010850 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801089e:	bf00      	nop
 80108a0:	0802e7f8 	.word	0x0802e7f8
 80108a4:	080106e3 	.word	0x080106e3

080108a8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 80108a8:	b538      	push	{r3, r4, r5, lr}
 80108aa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80108ae:	2b01      	cmp	r3, #1
 80108b0:	4604      	mov	r4, r0
 80108b2:	460d      	mov	r5, r1
 80108b4:	d002      	beq.n	80108bc <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 80108b6:	2b02      	cmp	r3, #2
 80108b8:	d018      	beq.n	80108ec <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 80108ba:	bd38      	pop	{r3, r4, r5, pc}
 80108bc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80108c0:	4293      	cmp	r3, r2
 80108c2:	bfc8      	it	gt
 80108c4:	8102      	strhgt	r2, [r0, #8]
 80108c6:	894a      	ldrh	r2, [r1, #10]
 80108c8:	8943      	ldrh	r3, [r0, #10]
 80108ca:	1a9b      	subs	r3, r3, r2
 80108cc:	8143      	strh	r3, [r0, #10]
 80108ce:	680b      	ldr	r3, [r1, #0]
 80108d0:	4628      	mov	r0, r5
 80108d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80108d4:	2100      	movs	r1, #0
 80108d6:	4798      	blx	r3
 80108d8:	682b      	ldr	r3, [r5, #0]
 80108da:	2100      	movs	r1, #0
 80108dc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80108de:	4628      	mov	r0, r5
 80108e0:	4798      	blx	r3
 80108e2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80108e4:	896a      	ldrh	r2, [r5, #10]
 80108e6:	1a9b      	subs	r3, r3, r2
 80108e8:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80108ea:	e7e6      	b.n	80108ba <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 80108ec:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80108f0:	4293      	cmp	r3, r2
 80108f2:	bfc8      	it	gt
 80108f4:	8142      	strhgt	r2, [r0, #10]
 80108f6:	890a      	ldrh	r2, [r1, #8]
 80108f8:	8903      	ldrh	r3, [r0, #8]
 80108fa:	1a9b      	subs	r3, r3, r2
 80108fc:	8103      	strh	r3, [r0, #8]
 80108fe:	680b      	ldr	r3, [r1, #0]
 8010900:	4628      	mov	r0, r5
 8010902:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010904:	2100      	movs	r1, #0
 8010906:	4798      	blx	r3
 8010908:	682b      	ldr	r3, [r5, #0]
 801090a:	2100      	movs	r1, #0
 801090c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801090e:	4628      	mov	r0, r5
 8010910:	4798      	blx	r3
 8010912:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010914:	892a      	ldrh	r2, [r5, #8]
 8010916:	e7e6      	b.n	80108e6 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08010918 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8010918:	b530      	push	{r4, r5, lr}
 801091a:	b089      	sub	sp, #36	; 0x24
 801091c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8010920:	f88d 200c 	strb.w	r2, [sp, #12]
 8010924:	4a13      	ldr	r2, [pc, #76]	; (8010974 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8010926:	9204      	str	r2, [sp, #16]
 8010928:	aa01      	add	r2, sp, #4
 801092a:	9205      	str	r2, [sp, #20]
 801092c:	4a12      	ldr	r2, [pc, #72]	; (8010978 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 801092e:	9102      	str	r1, [sp, #8]
 8010930:	2300      	movs	r3, #0
 8010932:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010936:	f88d 3006 	strb.w	r3, [sp, #6]
 801093a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801093e:	6803      	ldr	r3, [r0, #0]
 8010940:	460d      	mov	r5, r1
 8010942:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010944:	a904      	add	r1, sp, #16
 8010946:	4604      	mov	r4, r0
 8010948:	4798      	blx	r3
 801094a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 801094e:	b14b      	cbz	r3, 8010964 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 8010950:	4629      	mov	r1, r5
 8010952:	4620      	mov	r0, r4
 8010954:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8010958:	f7ff ffa6 	bl	80108a8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 801095c:	4629      	mov	r1, r5
 801095e:	4620      	mov	r0, r4
 8010960:	f7ff f94f 	bl	800fc02 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8010964:	6960      	ldr	r0, [r4, #20]
 8010966:	b110      	cbz	r0, 801096e <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8010968:	6803      	ldr	r3, [r0, #0]
 801096a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801096c:	4798      	blx	r3
 801096e:	b009      	add	sp, #36	; 0x24
 8010970:	bd30      	pop	{r4, r5, pc}
 8010972:	bf00      	nop
 8010974:	0802e7f8 	.word	0x0802e7f8
 8010978:	080105e5 	.word	0x080105e5

0801097c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801097c:	b513      	push	{r0, r1, r4, lr}
 801097e:	6803      	ldr	r3, [r0, #0]
 8010980:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010984:	2300      	movs	r3, #0
 8010986:	e9cd 3300 	strd	r3, r3, [sp]
 801098a:	466b      	mov	r3, sp
 801098c:	47a0      	blx	r4
 801098e:	b002      	add	sp, #8
 8010990:	bd10      	pop	{r4, pc}

08010992 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010992:	2301      	movs	r3, #1
 8010994:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010998:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801099c:	4770      	bx	lr

0801099e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801099e:	2301      	movs	r3, #1
 80109a0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80109a4:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80109a8:	4770      	bx	lr

080109aa <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80109aa:	6843      	ldr	r3, [r0, #4]
 80109ac:	2201      	movs	r2, #1
 80109ae:	725a      	strb	r2, [r3, #9]
 80109b0:	6840      	ldr	r0, [r0, #4]
 80109b2:	6803      	ldr	r3, [r0, #0]
 80109b4:	691b      	ldr	r3, [r3, #16]
 80109b6:	4718      	bx	r3

080109b8 <_ZN8touchgfx3HAL8flushDMAEv>:
 80109b8:	6840      	ldr	r0, [r0, #4]
 80109ba:	6803      	ldr	r3, [r0, #0]
 80109bc:	689b      	ldr	r3, [r3, #8]
 80109be:	4718      	bx	r3

080109c0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80109c0:	b530      	push	{r4, r5, lr}
 80109c2:	b08b      	sub	sp, #44	; 0x2c
 80109c4:	6804      	ldr	r4, [r0, #0]
 80109c6:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80109ca:	9509      	str	r5, [sp, #36]	; 0x24
 80109cc:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80109d0:	9508      	str	r5, [sp, #32]
 80109d2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80109d6:	9507      	str	r5, [sp, #28]
 80109d8:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80109dc:	9506      	str	r5, [sp, #24]
 80109de:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80109e2:	9505      	str	r5, [sp, #20]
 80109e4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80109e8:	9504      	str	r5, [sp, #16]
 80109ea:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 80109ee:	9503      	str	r5, [sp, #12]
 80109f0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80109f4:	9502      	str	r5, [sp, #8]
 80109f6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80109fa:	e9cd 3500 	strd	r3, r5, [sp]
 80109fe:	4613      	mov	r3, r2
 8010a00:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010a02:	2200      	movs	r2, #0
 8010a04:	47a0      	blx	r4
 8010a06:	b00b      	add	sp, #44	; 0x2c
 8010a08:	bd30      	pop	{r4, r5, pc}
	...

08010a0c <_ZN8touchgfx3HAL10beginFrameEv>:
 8010a0c:	4b04      	ldr	r3, [pc, #16]	; (8010a20 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010a0e:	781b      	ldrb	r3, [r3, #0]
 8010a10:	b123      	cbz	r3, 8010a1c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010a12:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010a16:	f080 0001 	eor.w	r0, r0, #1
 8010a1a:	4770      	bx	lr
 8010a1c:	2001      	movs	r0, #1
 8010a1e:	4770      	bx	lr
 8010a20:	200132ba 	.word	0x200132ba

08010a24 <_ZN8touchgfx3HAL8endFrameEv>:
 8010a24:	b510      	push	{r4, lr}
 8010a26:	4604      	mov	r4, r0
 8010a28:	6840      	ldr	r0, [r0, #4]
 8010a2a:	6803      	ldr	r3, [r0, #0]
 8010a2c:	689b      	ldr	r3, [r3, #8]
 8010a2e:	4798      	blx	r3
 8010a30:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8010a34:	b113      	cbz	r3, 8010a3c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010a36:	2301      	movs	r3, #1
 8010a38:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010a3c:	bd10      	pop	{r4, pc}

08010a3e <_ZN8touchgfx3HAL10initializeEv>:
 8010a3e:	b510      	push	{r4, lr}
 8010a40:	4604      	mov	r4, r0
 8010a42:	f7f1 faed 	bl	8002020 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010a46:	f7f1 f9f9 	bl	8001e3c <_ZN8touchgfx4GPIO4initEv>
 8010a4a:	6860      	ldr	r0, [r4, #4]
 8010a4c:	6803      	ldr	r3, [r0, #0]
 8010a4e:	68db      	ldr	r3, [r3, #12]
 8010a50:	4798      	blx	r3
 8010a52:	68e0      	ldr	r0, [r4, #12]
 8010a54:	6803      	ldr	r3, [r0, #0]
 8010a56:	689b      	ldr	r3, [r3, #8]
 8010a58:	4798      	blx	r3
 8010a5a:	6823      	ldr	r3, [r4, #0]
 8010a5c:	4620      	mov	r0, r4
 8010a5e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010a60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a64:	4718      	bx	r3
	...

08010a68 <_ZN8touchgfx3HAL4tickEv>:
 8010a68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010a6a:	6803      	ldr	r3, [r0, #0]
 8010a6c:	4d5b      	ldr	r5, [pc, #364]	; (8010bdc <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010a6e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010a72:	4604      	mov	r4, r0
 8010a74:	4798      	blx	r3
 8010a76:	2800      	cmp	r0, #0
 8010a78:	f000 8095 	beq.w	8010ba6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010a7c:	2001      	movs	r0, #1
 8010a7e:	f7f1 f98f 	bl	8001da0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010a82:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8010a86:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010a8a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010a8e:	2600      	movs	r6, #0
 8010a90:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8010a94:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010a98:	b133      	cbz	r3, 8010aa8 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010a9a:	6823      	ldr	r3, [r4, #0]
 8010a9c:	4620      	mov	r0, r4
 8010a9e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010aa2:	4798      	blx	r3
 8010aa4:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010aa8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010aac:	6862      	ldr	r2, [r4, #4]
 8010aae:	f083 0301 	eor.w	r3, r3, #1
 8010ab2:	7253      	strb	r3, [r2, #9]
 8010ab4:	2601      	movs	r6, #1
 8010ab6:	702e      	strb	r6, [r5, #0]
 8010ab8:	f005 f93a 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 8010abc:	6803      	ldr	r3, [r0, #0]
 8010abe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010ac0:	4798      	blx	r3
 8010ac2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010ac6:	b90b      	cbnz	r3, 8010acc <_ZN8touchgfx3HAL4tickEv+0x64>
 8010ac8:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010acc:	f005 f930 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 8010ad0:	6803      	ldr	r3, [r0, #0]
 8010ad2:	695b      	ldr	r3, [r3, #20]
 8010ad4:	4798      	blx	r3
 8010ad6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010ad8:	6803      	ldr	r3, [r0, #0]
 8010ada:	691b      	ldr	r3, [r3, #16]
 8010adc:	4798      	blx	r3
 8010ade:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010ae2:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8010ae6:	3b01      	subs	r3, #1
 8010ae8:	b2db      	uxtb	r3, r3
 8010aea:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010aee:	b10a      	cbz	r2, 8010af4 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010af0:	2b00      	cmp	r3, #0
 8010af2:	d1eb      	bne.n	8010acc <_ZN8touchgfx3HAL4tickEv+0x64>
 8010af4:	4a3a      	ldr	r2, [pc, #232]	; (8010be0 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010af6:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010afa:	7813      	ldrb	r3, [r2, #0]
 8010afc:	3301      	adds	r3, #1
 8010afe:	b25b      	sxtb	r3, r3
 8010b00:	4299      	cmp	r1, r3
 8010b02:	7013      	strb	r3, [r2, #0]
 8010b04:	dc10      	bgt.n	8010b28 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010b06:	68e0      	ldr	r0, [r4, #12]
 8010b08:	2300      	movs	r3, #0
 8010b0a:	7013      	strb	r3, [r2, #0]
 8010b0c:	6803      	ldr	r3, [r0, #0]
 8010b0e:	aa03      	add	r2, sp, #12
 8010b10:	68db      	ldr	r3, [r3, #12]
 8010b12:	a902      	add	r1, sp, #8
 8010b14:	4798      	blx	r3
 8010b16:	6823      	ldr	r3, [r4, #0]
 8010b18:	2800      	cmp	r0, #0
 8010b1a:	d050      	beq.n	8010bbe <_ZN8touchgfx3HAL4tickEv+0x156>
 8010b1c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010b20:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010b24:	4620      	mov	r0, r4
 8010b26:	4798      	blx	r3
 8010b28:	6960      	ldr	r0, [r4, #20]
 8010b2a:	2300      	movs	r3, #0
 8010b2c:	f88d 3007 	strb.w	r3, [sp, #7]
 8010b30:	b158      	cbz	r0, 8010b4a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010b32:	6803      	ldr	r3, [r0, #0]
 8010b34:	f10d 0107 	add.w	r1, sp, #7
 8010b38:	68db      	ldr	r3, [r3, #12]
 8010b3a:	4798      	blx	r3
 8010b3c:	b128      	cbz	r0, 8010b4a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010b3e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010b40:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010b44:	6803      	ldr	r3, [r0, #0]
 8010b46:	68db      	ldr	r3, [r3, #12]
 8010b48:	4798      	blx	r3
 8010b4a:	f104 001c 	add.w	r0, r4, #28
 8010b4e:	f016 f8c3 	bl	8026cd8 <_ZN8touchgfx8Gestures4tickEv>
 8010b52:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8010b56:	b30b      	cbz	r3, 8010b9c <_ZN8touchgfx3HAL4tickEv+0x134>
 8010b58:	6920      	ldr	r0, [r4, #16]
 8010b5a:	6803      	ldr	r3, [r0, #0]
 8010b5c:	691b      	ldr	r3, [r3, #16]
 8010b5e:	4798      	blx	r3
 8010b60:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010b62:	4606      	mov	r6, r0
 8010b64:	b903      	cbnz	r3, 8010b68 <_ZN8touchgfx3HAL4tickEv+0x100>
 8010b66:	6760      	str	r0, [r4, #116]	; 0x74
 8010b68:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010b6a:	4a1e      	ldr	r2, [pc, #120]	; (8010be4 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010b6c:	1af3      	subs	r3, r6, r3
 8010b6e:	4293      	cmp	r3, r2
 8010b70:	d914      	bls.n	8010b9c <_ZN8touchgfx3HAL4tickEv+0x134>
 8010b72:	6920      	ldr	r0, [r4, #16]
 8010b74:	6803      	ldr	r3, [r0, #0]
 8010b76:	699b      	ldr	r3, [r3, #24]
 8010b78:	4798      	blx	r3
 8010b7a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010b7c:	2264      	movs	r2, #100	; 0x64
 8010b7e:	1af3      	subs	r3, r6, r3
 8010b80:	fbb3 f3f2 	udiv	r3, r3, r2
 8010b84:	fbb0 f0f3 	udiv	r0, r0, r3
 8010b88:	2800      	cmp	r0, #0
 8010b8a:	dc1d      	bgt.n	8010bc8 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010b8c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010b90:	6920      	ldr	r0, [r4, #16]
 8010b92:	6803      	ldr	r3, [r0, #0]
 8010b94:	2100      	movs	r1, #0
 8010b96:	69db      	ldr	r3, [r3, #28]
 8010b98:	4798      	blx	r3
 8010b9a:	6766      	str	r6, [r4, #116]	; 0x74
 8010b9c:	f005 f8c8 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 8010ba0:	6803      	ldr	r3, [r0, #0]
 8010ba2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010ba4:	4798      	blx	r3
 8010ba6:	6823      	ldr	r3, [r4, #0]
 8010ba8:	4620      	mov	r0, r4
 8010baa:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010bae:	4798      	blx	r3
 8010bb0:	2001      	movs	r0, #1
 8010bb2:	f7f1 f90d 	bl	8001dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010bb6:	2300      	movs	r3, #0
 8010bb8:	702b      	strb	r3, [r5, #0]
 8010bba:	b004      	add	sp, #16
 8010bbc:	bd70      	pop	{r4, r5, r6, pc}
 8010bbe:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010bc2:	4620      	mov	r0, r4
 8010bc4:	4798      	blx	r3
 8010bc6:	e7af      	b.n	8010b28 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010bc8:	2863      	cmp	r0, #99	; 0x63
 8010bca:	bfcb      	itete	gt
 8010bcc:	2300      	movgt	r3, #0
 8010bce:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8010bd2:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8010bd6:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010bda:	e7d9      	b.n	8010b90 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010bdc:	200132c0 	.word	0x200132c0
 8010be0:	200132c1 	.word	0x200132c1
 8010be4:	05f5e100 	.word	0x05f5e100

08010be8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010be8:	b510      	push	{r4, lr}
 8010bea:	4604      	mov	r4, r0
 8010bec:	f7f1 fa48 	bl	8002080 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010bf0:	6863      	ldr	r3, [r4, #4]
 8010bf2:	2200      	movs	r2, #0
 8010bf4:	729a      	strb	r2, [r3, #10]
 8010bf6:	bd10      	pop	{r4, pc}

08010bf8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010bf8:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010bfa:	301c      	adds	r0, #28
 8010bfc:	f016 b86a 	b.w	8026cd4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010c00 <_ZN8touchgfx3HAL5touchEll>:
 8010c00:	b530      	push	{r4, r5, lr}
 8010c02:	b087      	sub	sp, #28
 8010c04:	4604      	mov	r4, r0
 8010c06:	a804      	add	r0, sp, #16
 8010c08:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010c0c:	f004 fe5c 	bl	80158c8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010c10:	9b04      	ldr	r3, [sp, #16]
 8010c12:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010c16:	a906      	add	r1, sp, #24
 8010c18:	9b05      	ldr	r3, [sp, #20]
 8010c1a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010c1e:	a803      	add	r0, sp, #12
 8010c20:	f004 fea4 	bl	801596c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010c24:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010c28:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010c2c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010c30:	f104 001c 	add.w	r0, r4, #28
 8010c34:	b189      	cbz	r1, 8010c5a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010c36:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010c3a:	9300      	str	r3, [sp, #0]
 8010c3c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010c40:	4613      	mov	r3, r2
 8010c42:	462a      	mov	r2, r5
 8010c44:	f016 f856 	bl	8026cf4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010c48:	b128      	cbz	r0, 8010c56 <_ZN8touchgfx3HAL5touchEll+0x56>
 8010c4a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010c4e:	6623      	str	r3, [r4, #96]	; 0x60
 8010c50:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010c54:	6663      	str	r3, [r4, #100]	; 0x64
 8010c56:	b007      	add	sp, #28
 8010c58:	bd30      	pop	{r4, r5, pc}
 8010c5a:	f016 f88b 	bl	8026d74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010c5e:	2301      	movs	r3, #1
 8010c60:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010c64:	e7f1      	b.n	8010c4a <_ZN8touchgfx3HAL5touchEll+0x4a>

08010c66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010c66:	b510      	push	{r4, lr}
 8010c68:	2b00      	cmp	r3, #0
 8010c6a:	d046      	beq.n	8010cfa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010c6c:	ea81 0002 	eor.w	r0, r1, r2
 8010c70:	07c4      	lsls	r4, r0, #31
 8010c72:	d508      	bpl.n	8010c86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010c74:	440b      	add	r3, r1
 8010c76:	3a01      	subs	r2, #1
 8010c78:	428b      	cmp	r3, r1
 8010c7a:	d93e      	bls.n	8010cfa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010c7c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010c80:	f801 0b01 	strb.w	r0, [r1], #1
 8010c84:	e7f8      	b.n	8010c78 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010c86:	07d0      	lsls	r0, r2, #31
 8010c88:	bf42      	ittt	mi
 8010c8a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010c8e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8010c92:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010c96:	2b01      	cmp	r3, #1
 8010c98:	d911      	bls.n	8010cbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010c9a:	ea81 0402 	eor.w	r4, r1, r2
 8010c9e:	07a4      	lsls	r4, r4, #30
 8010ca0:	4610      	mov	r0, r2
 8010ca2:	d022      	beq.n	8010cea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010ca4:	f023 0401 	bic.w	r4, r3, #1
 8010ca8:	440c      	add	r4, r1
 8010caa:	428c      	cmp	r4, r1
 8010cac:	4602      	mov	r2, r0
 8010cae:	d904      	bls.n	8010cba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010cb0:	8812      	ldrh	r2, [r2, #0]
 8010cb2:	f821 2b02 	strh.w	r2, [r1], #2
 8010cb6:	3002      	adds	r0, #2
 8010cb8:	e7f7      	b.n	8010caa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010cba:	f003 0301 	and.w	r3, r3, #1
 8010cbe:	f023 0003 	bic.w	r0, r3, #3
 8010cc2:	4408      	add	r0, r1
 8010cc4:	4288      	cmp	r0, r1
 8010cc6:	4614      	mov	r4, r2
 8010cc8:	d904      	bls.n	8010cd4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010cca:	6824      	ldr	r4, [r4, #0]
 8010ccc:	f841 4b04 	str.w	r4, [r1], #4
 8010cd0:	3204      	adds	r2, #4
 8010cd2:	e7f7      	b.n	8010cc4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010cd4:	f003 0303 	and.w	r3, r3, #3
 8010cd8:	440b      	add	r3, r1
 8010cda:	3a01      	subs	r2, #1
 8010cdc:	428b      	cmp	r3, r1
 8010cde:	d90c      	bls.n	8010cfa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010ce0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010ce4:	f801 0b01 	strb.w	r0, [r1], #1
 8010ce8:	e7f8      	b.n	8010cdc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010cea:	0790      	lsls	r0, r2, #30
 8010cec:	d0e7      	beq.n	8010cbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010cee:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010cf2:	f821 0b02 	strh.w	r0, [r1], #2
 8010cf6:	3b02      	subs	r3, #2
 8010cf8:	e7e1      	b.n	8010cbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010cfa:	2001      	movs	r0, #1
 8010cfc:	bd10      	pop	{r4, pc}

08010cfe <_ZN8touchgfx3HAL7noTouchEv>:
 8010cfe:	b510      	push	{r4, lr}
 8010d00:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8010d04:	4604      	mov	r4, r0
 8010d06:	b153      	cbz	r3, 8010d1e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010d08:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010d0c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010d10:	2101      	movs	r1, #1
 8010d12:	301c      	adds	r0, #28
 8010d14:	f016 f82e 	bl	8026d74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010d18:	2300      	movs	r3, #0
 8010d1a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010d1e:	bd10      	pop	{r4, pc}

08010d20 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010d20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010d24:	b085      	sub	sp, #20
 8010d26:	ad04      	add	r5, sp, #16
 8010d28:	4604      	mov	r4, r0
 8010d2a:	2000      	movs	r0, #0
 8010d2c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010d30:	69a0      	ldr	r0, [r4, #24]
 8010d32:	6806      	ldr	r6, [r0, #0]
 8010d34:	9501      	str	r5, [sp, #4]
 8010d36:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010d3a:	9500      	str	r5, [sp, #0]
 8010d3c:	6835      	ldr	r5, [r6, #0]
 8010d3e:	4699      	mov	r9, r3
 8010d40:	460f      	mov	r7, r1
 8010d42:	4690      	mov	r8, r2
 8010d44:	47a8      	blx	r5
 8010d46:	4d10      	ldr	r5, [pc, #64]	; (8010d88 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010d48:	4606      	mov	r6, r0
 8010d4a:	f8a5 9000 	strh.w	r9, [r5]
 8010d4e:	f7f3 f84b 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 8010d52:	6803      	ldr	r3, [r0, #0]
 8010d54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d56:	4798      	blx	r3
 8010d58:	b128      	cbz	r0, 8010d66 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010d5a:	2801      	cmp	r0, #1
 8010d5c:	d00b      	beq.n	8010d76 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010d5e:	4630      	mov	r0, r6
 8010d60:	b005      	add	sp, #20
 8010d62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010d66:	882b      	ldrh	r3, [r5, #0]
 8010d68:	fb08 7203 	mla	r2, r8, r3, r7
 8010d6c:	9b03      	ldr	r3, [sp, #12]
 8010d6e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010d72:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010d74:	e7f3      	b.n	8010d5e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010d76:	882a      	ldrh	r2, [r5, #0]
 8010d78:	9b03      	ldr	r3, [sp, #12]
 8010d7a:	fb08 7202 	mla	r2, r8, r2, r7
 8010d7e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010d82:	1a9a      	subs	r2, r3, r2
 8010d84:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010d86:	e7ea      	b.n	8010d5e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010d88:	200132b6 	.word	0x200132b6

08010d8c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010d8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d8e:	b08b      	sub	sp, #44	; 0x2c
 8010d90:	4617      	mov	r7, r2
 8010d92:	4604      	mov	r4, r0
 8010d94:	460e      	mov	r6, r1
 8010d96:	461d      	mov	r5, r3
 8010d98:	f7f3 f826 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 8010d9c:	6803      	ldr	r3, [r0, #0]
 8010d9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010da0:	4798      	blx	r3
 8010da2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010da6:	9007      	str	r0, [sp, #28]
 8010da8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010dac:	4b0d      	ldr	r3, [pc, #52]	; (8010de4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010dae:	6822      	ldr	r2, [r4, #0]
 8010db0:	881b      	ldrh	r3, [r3, #0]
 8010db2:	9306      	str	r3, [sp, #24]
 8010db4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010db8:	9305      	str	r3, [sp, #20]
 8010dba:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010dbe:	9304      	str	r3, [sp, #16]
 8010dc0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010dc4:	9303      	str	r3, [sp, #12]
 8010dc6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010dca:	9302      	str	r3, [sp, #8]
 8010dcc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010dd0:	e9cd 5300 	strd	r5, r3, [sp]
 8010dd4:	4631      	mov	r1, r6
 8010dd6:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010dd8:	463b      	mov	r3, r7
 8010dda:	2200      	movs	r2, #0
 8010ddc:	4620      	mov	r0, r4
 8010dde:	47a8      	blx	r5
 8010de0:	b00b      	add	sp, #44	; 0x2c
 8010de2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010de4:	200132b6 	.word	0x200132b6

08010de8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010de8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010dec:	4698      	mov	r8, r3
 8010dee:	6803      	ldr	r3, [r0, #0]
 8010df0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8010df2:	4b15      	ldr	r3, [pc, #84]	; (8010e48 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010df4:	b08b      	sub	sp, #44	; 0x2c
 8010df6:	4617      	mov	r7, r2
 8010df8:	f8b3 9000 	ldrh.w	r9, [r3]
 8010dfc:	460e      	mov	r6, r1
 8010dfe:	4604      	mov	r4, r0
 8010e00:	f7f2 fff2 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 8010e04:	6803      	ldr	r3, [r0, #0]
 8010e06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010e08:	4798      	blx	r3
 8010e0a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010e0e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010e12:	2302      	movs	r3, #2
 8010e14:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010e18:	2301      	movs	r3, #1
 8010e1a:	9305      	str	r3, [sp, #20]
 8010e1c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010e20:	9304      	str	r3, [sp, #16]
 8010e22:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010e26:	9303      	str	r3, [sp, #12]
 8010e28:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010e2c:	9302      	str	r3, [sp, #8]
 8010e2e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010e32:	2200      	movs	r2, #0
 8010e34:	e9cd 8300 	strd	r8, r3, [sp]
 8010e38:	4631      	mov	r1, r6
 8010e3a:	463b      	mov	r3, r7
 8010e3c:	4620      	mov	r0, r4
 8010e3e:	47a8      	blx	r5
 8010e40:	b00b      	add	sp, #44	; 0x2c
 8010e42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010e46:	bf00      	nop
 8010e48:	200132b6 	.word	0x200132b6

08010e4c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010e4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010e50:	4698      	mov	r8, r3
 8010e52:	6803      	ldr	r3, [r0, #0]
 8010e54:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8010e56:	4b11      	ldr	r3, [pc, #68]	; (8010e9c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010e58:	b087      	sub	sp, #28
 8010e5a:	f8b3 9000 	ldrh.w	r9, [r3]
 8010e5e:	460e      	mov	r6, r1
 8010e60:	4617      	mov	r7, r2
 8010e62:	4604      	mov	r4, r0
 8010e64:	f7f2 ffc0 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 8010e68:	6803      	ldr	r3, [r0, #0]
 8010e6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010e6c:	4798      	blx	r3
 8010e6e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8010e72:	f8cd 900c 	str.w	r9, [sp, #12]
 8010e76:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010e7a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010e7e:	9302      	str	r3, [sp, #8]
 8010e80:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010e84:	9301      	str	r3, [sp, #4]
 8010e86:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010e8a:	9300      	str	r3, [sp, #0]
 8010e8c:	463a      	mov	r2, r7
 8010e8e:	4643      	mov	r3, r8
 8010e90:	4631      	mov	r1, r6
 8010e92:	4620      	mov	r0, r4
 8010e94:	47a8      	blx	r5
 8010e96:	b007      	add	sp, #28
 8010e98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010e9c:	200132b6 	.word	0x200132b6

08010ea0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010ea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ea4:	4604      	mov	r4, r0
 8010ea6:	b08f      	sub	sp, #60	; 0x3c
 8010ea8:	4610      	mov	r0, r2
 8010eaa:	460d      	mov	r5, r1
 8010eac:	4691      	mov	r9, r2
 8010eae:	461e      	mov	r6, r3
 8010eb0:	f008 fafa 	bl	80194a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010eb4:	2800      	cmp	r0, #0
 8010eb6:	f000 809d 	beq.w	8010ff4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010eba:	6823      	ldr	r3, [r4, #0]
 8010ebc:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011058 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010ec0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010ec2:	f8df a198 	ldr.w	sl, [pc, #408]	; 801105c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8010ec6:	4f61      	ldr	r7, [pc, #388]	; (801104c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010ec8:	4620      	mov	r0, r4
 8010eca:	4798      	blx	r3
 8010ecc:	6823      	ldr	r3, [r4, #0]
 8010ece:	4620      	mov	r0, r4
 8010ed0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ed2:	4798      	blx	r3
 8010ed4:	f8bb 3000 	ldrh.w	r3, [fp]
 8010ed8:	9301      	str	r3, [sp, #4]
 8010eda:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010ede:	f8ba 3000 	ldrh.w	r3, [sl]
 8010ee2:	9302      	str	r3, [sp, #8]
 8010ee4:	883b      	ldrh	r3, [r7, #0]
 8010ee6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010eea:	9303      	str	r3, [sp, #12]
 8010eec:	4b58      	ldr	r3, [pc, #352]	; (8011050 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010eee:	9305      	str	r3, [sp, #20]
 8010ef0:	881a      	ldrh	r2, [r3, #0]
 8010ef2:	9204      	str	r2, [sp, #16]
 8010ef4:	4640      	mov	r0, r8
 8010ef6:	f008 fb6b 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010efa:	8038      	strh	r0, [r7, #0]
 8010efc:	4640      	mov	r0, r8
 8010efe:	f008 fb9b 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010f02:	9b05      	ldr	r3, [sp, #20]
 8010f04:	b280      	uxth	r0, r0
 8010f06:	8018      	strh	r0, [r3, #0]
 8010f08:	4b52      	ldr	r3, [pc, #328]	; (8011054 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010f0a:	781b      	ldrb	r3, [r3, #0]
 8010f0c:	2b00      	cmp	r3, #0
 8010f0e:	d174      	bne.n	8010ffa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010f10:	883b      	ldrh	r3, [r7, #0]
 8010f12:	f8ab 3000 	strh.w	r3, [fp]
 8010f16:	f8aa 0000 	strh.w	r0, [sl]
 8010f1a:	4648      	mov	r0, r9
 8010f1c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010f20:	f008 fac2 	bl	80194a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010f24:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010f28:	2200      	movs	r2, #0
 8010f2a:	4611      	mov	r1, r2
 8010f2c:	4628      	mov	r0, r5
 8010f2e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8010f32:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8010f36:	f7f1 fd0f 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8010f3a:	2301      	movs	r3, #1
 8010f3c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010f40:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8010f44:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010f48:	2b00      	cmp	r3, #0
 8010f4a:	dd5c      	ble.n	8011006 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010f4c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010f50:	2b00      	cmp	r3, #0
 8010f52:	dd58      	ble.n	8011006 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010f54:	462a      	mov	r2, r5
 8010f56:	ab0a      	add	r3, sp, #40	; 0x28
 8010f58:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010f5c:	6851      	ldr	r1, [r2, #4]
 8010f5e:	c303      	stmia	r3!, {r0, r1}
 8010f60:	4631      	mov	r1, r6
 8010f62:	a80a      	add	r0, sp, #40	; 0x28
 8010f64:	f7fe ff92 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 8010f68:	4b38      	ldr	r3, [pc, #224]	; (801104c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010f6a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010f6e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8010f72:	2100      	movs	r1, #0
 8010f74:	aa0a      	add	r2, sp, #40	; 0x28
 8010f76:	4b36      	ldr	r3, [pc, #216]	; (8011050 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010f78:	910c      	str	r1, [sp, #48]	; 0x30
 8010f7a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010f7e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010f82:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010f86:	ab08      	add	r3, sp, #32
 8010f88:	e883 0003 	stmia.w	r3, {r0, r1}
 8010f8c:	4618      	mov	r0, r3
 8010f8e:	a90c      	add	r1, sp, #48	; 0x30
 8010f90:	f7fe ff7c 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 8010f94:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8010f96:	2b00      	cmp	r3, #0
 8010f98:	d13c      	bne.n	8011014 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010f9a:	2000      	movs	r0, #0
 8010f9c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010fa0:	2600      	movs	r6, #0
 8010fa2:	682a      	ldr	r2, [r5, #0]
 8010fa4:	696b      	ldr	r3, [r5, #20]
 8010fa6:	616e      	str	r6, [r5, #20]
 8010fa8:	9305      	str	r3, [sp, #20]
 8010faa:	6892      	ldr	r2, [r2, #8]
 8010fac:	a908      	add	r1, sp, #32
 8010fae:	4628      	mov	r0, r5
 8010fb0:	4790      	blx	r2
 8010fb2:	9b05      	ldr	r3, [sp, #20]
 8010fb4:	616b      	str	r3, [r5, #20]
 8010fb6:	4652      	mov	r2, sl
 8010fb8:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010fbc:	4649      	mov	r1, r9
 8010fbe:	4628      	mov	r0, r5
 8010fc0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8010fc4:	f7f1 fcc8 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8010fc8:	4b23      	ldr	r3, [pc, #140]	; (8011058 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010fca:	9a01      	ldr	r2, [sp, #4]
 8010fcc:	801a      	strh	r2, [r3, #0]
 8010fce:	4b23      	ldr	r3, [pc, #140]	; (801105c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010fd0:	9a02      	ldr	r2, [sp, #8]
 8010fd2:	801a      	strh	r2, [r3, #0]
 8010fd4:	4b1d      	ldr	r3, [pc, #116]	; (801104c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010fd6:	9a03      	ldr	r2, [sp, #12]
 8010fd8:	801a      	strh	r2, [r3, #0]
 8010fda:	4b1d      	ldr	r3, [pc, #116]	; (8011050 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010fdc:	9a04      	ldr	r2, [sp, #16]
 8010fde:	801a      	strh	r2, [r3, #0]
 8010fe0:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8010fe4:	6823      	ldr	r3, [r4, #0]
 8010fe6:	4620      	mov	r0, r4
 8010fe8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010fea:	4798      	blx	r3
 8010fec:	6823      	ldr	r3, [r4, #0]
 8010fee:	4620      	mov	r0, r4
 8010ff0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ff2:	4798      	blx	r3
 8010ff4:	b00f      	add	sp, #60	; 0x3c
 8010ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ffa:	883b      	ldrh	r3, [r7, #0]
 8010ffc:	f8ab 0000 	strh.w	r0, [fp]
 8011000:	f8aa 3000 	strh.w	r3, [sl]
 8011004:	e789      	b.n	8010f1a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011006:	462a      	mov	r2, r5
 8011008:	ab0a      	add	r3, sp, #40	; 0x28
 801100a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801100e:	6851      	ldr	r1, [r2, #4]
 8011010:	c303      	stmia	r3!, {r0, r1}
 8011012:	e7a9      	b.n	8010f68 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011014:	a807      	add	r0, sp, #28
 8011016:	f008 fc4b 	bl	80198b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801101a:	4606      	mov	r6, r0
 801101c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 801101e:	6803      	ldr	r3, [r0, #0]
 8011020:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011022:	4798      	blx	r3
 8011024:	4286      	cmp	r6, r0
 8011026:	d1b8      	bne.n	8010f9a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011028:	f7f2 fede 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 801102c:	6803      	ldr	r3, [r0, #0]
 801102e:	4606      	mov	r6, r0
 8011030:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011032:	9305      	str	r3, [sp, #20]
 8011034:	a807      	add	r0, sp, #28
 8011036:	f008 fc3b 	bl	80198b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801103a:	9b05      	ldr	r3, [sp, #20]
 801103c:	4601      	mov	r1, r0
 801103e:	4630      	mov	r0, r6
 8011040:	4798      	blx	r3
 8011042:	f080 0001 	eor.w	r0, r0, #1
 8011046:	b2c0      	uxtb	r0, r0
 8011048:	e7a8      	b.n	8010f9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 801104a:	bf00      	nop
 801104c:	200132b0 	.word	0x200132b0
 8011050:	200132b2 	.word	0x200132b2
 8011054:	200132b4 	.word	0x200132b4
 8011058:	200132b6 	.word	0x200132b6
 801105c:	200132b8 	.word	0x200132b8

08011060 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011060:	b510      	push	{r4, lr}
 8011062:	4b07      	ldr	r3, [pc, #28]	; (8011080 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011064:	781b      	ldrb	r3, [r3, #0]
 8011066:	4604      	mov	r4, r0
 8011068:	b13b      	cbz	r3, 801107a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801106a:	6803      	ldr	r3, [r0, #0]
 801106c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801106e:	4798      	blx	r3
 8011070:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011072:	4283      	cmp	r3, r0
 8011074:	d101      	bne.n	801107a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011076:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011078:	bd10      	pop	{r4, pc}
 801107a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801107c:	e7fc      	b.n	8011078 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801107e:	bf00      	nop
 8011080:	200132ba 	.word	0x200132ba

08011084 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011084:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011088:	b08a      	sub	sp, #40	; 0x28
 801108a:	461d      	mov	r5, r3
 801108c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011090:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011094:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011098:	f8ad 3018 	strh.w	r3, [sp, #24]
 801109c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80110a0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80110a4:	2400      	movs	r4, #0
 80110a6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80110aa:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80110ae:	f8ad 301c 	strh.w	r3, [sp, #28]
 80110b2:	4690      	mov	r8, r2
 80110b4:	4607      	mov	r7, r0
 80110b6:	9404      	str	r4, [sp, #16]
 80110b8:	f88d 4020 	strb.w	r4, [sp, #32]
 80110bc:	f7ff ffd0 	bl	8011060 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80110c0:	fb06 8505 	mla	r5, r6, r5, r8
 80110c4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80110c8:	6878      	ldr	r0, [r7, #4]
 80110ca:	9505      	str	r5, [sp, #20]
 80110cc:	f8ad 601e 	strh.w	r6, [sp, #30]
 80110d0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80110d4:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80110d8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80110dc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80110e0:	6803      	ldr	r3, [r0, #0]
 80110e2:	a901      	add	r1, sp, #4
 80110e4:	685b      	ldr	r3, [r3, #4]
 80110e6:	4798      	blx	r3
 80110e8:	b00a      	add	sp, #40	; 0x28
 80110ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080110ee <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80110ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80110f2:	b08b      	sub	sp, #44	; 0x2c
 80110f4:	2400      	movs	r4, #0
 80110f6:	461d      	mov	r5, r3
 80110f8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80110fc:	4688      	mov	r8, r1
 80110fe:	4691      	mov	r9, r2
 8011100:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8011104:	9404      	str	r4, [sp, #16]
 8011106:	4607      	mov	r7, r0
 8011108:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801110c:	f7ff ffa8 	bl	8011060 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011110:	fb06 9505 	mla	r5, r6, r5, r9
 8011114:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011118:	f8ad 3018 	strh.w	r3, [sp, #24]
 801111c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011120:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011124:	6878      	ldr	r0, [r7, #4]
 8011126:	9505      	str	r5, [sp, #20]
 8011128:	f8ad 301a 	strh.w	r3, [sp, #26]
 801112c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011130:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011134:	f8cd 8010 	str.w	r8, [sp, #16]
 8011138:	f8ad 4020 	strh.w	r4, [sp, #32]
 801113c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011140:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011144:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011148:	6803      	ldr	r3, [r0, #0]
 801114a:	a901      	add	r1, sp, #4
 801114c:	685b      	ldr	r3, [r3, #4]
 801114e:	4798      	blx	r3
 8011150:	b00b      	add	sp, #44	; 0x2c
 8011152:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011158 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011158:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801115c:	b08a      	sub	sp, #40	; 0x28
 801115e:	4698      	mov	r8, r3
 8011160:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8011164:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011168:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 801116c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8011170:	2300      	movs	r3, #0
 8011172:	2d0b      	cmp	r5, #11
 8011174:	4606      	mov	r6, r0
 8011176:	9304      	str	r3, [sp, #16]
 8011178:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801117c:	d138      	bne.n	80111f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 801117e:	2380      	movs	r3, #128	; 0x80
 8011180:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011184:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011188:	f8ad 3018 	strh.w	r3, [sp, #24]
 801118c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011190:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011194:	f88d 0020 	strb.w	r0, [sp, #32]
 8011198:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801119c:	f8ad 301c 	strh.w	r3, [sp, #28]
 80111a0:	4630      	mov	r0, r6
 80111a2:	9203      	str	r2, [sp, #12]
 80111a4:	f7ff ff5c 	bl	8011060 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80111a8:	2c0b      	cmp	r4, #11
 80111aa:	bf98      	it	ls
 80111ac:	4b1b      	ldrls	r3, [pc, #108]	; (801121c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80111ae:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80111b2:	bf98      	it	ls
 80111b4:	5d19      	ldrbls	r1, [r3, r4]
 80111b6:	f8ad 701e 	strh.w	r7, [sp, #30]
 80111ba:	bf88      	it	hi
 80111bc:	2100      	movhi	r1, #0
 80111be:	fb02 8307 	mla	r3, r2, r7, r8
 80111c2:	10c9      	asrs	r1, r1, #3
 80111c4:	fb01 0003 	mla	r0, r1, r3, r0
 80111c8:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80111cc:	9005      	str	r0, [sp, #20]
 80111ce:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80111d2:	6870      	ldr	r0, [r6, #4]
 80111d4:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80111d8:	2300      	movs	r3, #0
 80111da:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80111de:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80111e2:	6803      	ldr	r3, [r0, #0]
 80111e4:	a901      	add	r1, sp, #4
 80111e6:	685b      	ldr	r3, [r3, #4]
 80111e8:	4798      	blx	r3
 80111ea:	b00a      	add	sp, #40	; 0x28
 80111ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80111f0:	2d02      	cmp	r5, #2
 80111f2:	d109      	bne.n	8011208 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80111f4:	28ff      	cmp	r0, #255	; 0xff
 80111f6:	d105      	bne.n	8011204 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80111f8:	f1bc 0f00 	cmp.w	ip, #0
 80111fc:	bf14      	ite	ne
 80111fe:	2340      	movne	r3, #64	; 0x40
 8011200:	2320      	moveq	r3, #32
 8011202:	e7bd      	b.n	8011180 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011204:	2340      	movs	r3, #64	; 0x40
 8011206:	e7bb      	b.n	8011180 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011208:	28ff      	cmp	r0, #255	; 0xff
 801120a:	d105      	bne.n	8011218 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 801120c:	f1bc 0f00 	cmp.w	ip, #0
 8011210:	bf14      	ite	ne
 8011212:	2304      	movne	r3, #4
 8011214:	2301      	moveq	r3, #1
 8011216:	e7b3      	b.n	8011180 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011218:	2304      	movs	r3, #4
 801121a:	e7b1      	b.n	8011180 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801121c:	0802e8a0 	.word	0x0802e8a0

08011220 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011224:	b08b      	sub	sp, #44	; 0x2c
 8011226:	461d      	mov	r5, r3
 8011228:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 801122c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011230:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8011234:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011238:	bf14      	ite	ne
 801123a:	2308      	movne	r3, #8
 801123c:	2302      	moveq	r3, #2
 801123e:	2400      	movs	r4, #0
 8011240:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011244:	4688      	mov	r8, r1
 8011246:	4693      	mov	fp, r2
 8011248:	9404      	str	r4, [sp, #16]
 801124a:	4607      	mov	r7, r0
 801124c:	f7ff ff08 	bl	8011060 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011250:	2e0b      	cmp	r6, #11
 8011252:	bf98      	it	ls
 8011254:	4b15      	ldrls	r3, [pc, #84]	; (80112ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8011256:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801125a:	bf98      	it	ls
 801125c:	5d9c      	ldrbls	r4, [r3, r6]
 801125e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011262:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011266:	fb05 b50a 	mla	r5, r5, sl, fp
 801126a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801126e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011272:	10e4      	asrs	r4, r4, #3
 8011274:	fb04 0405 	mla	r4, r4, r5, r0
 8011278:	2300      	movs	r3, #0
 801127a:	6878      	ldr	r0, [r7, #4]
 801127c:	9405      	str	r4, [sp, #20]
 801127e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011282:	f8ad a01e 	strh.w	sl, [sp, #30]
 8011286:	f8cd 8010 	str.w	r8, [sp, #16]
 801128a:	f88d 9020 	strb.w	r9, [sp, #32]
 801128e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8011292:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011296:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801129a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 801129e:	6803      	ldr	r3, [r0, #0]
 80112a0:	a901      	add	r1, sp, #4
 80112a2:	685b      	ldr	r3, [r3, #4]
 80112a4:	4798      	blx	r3
 80112a6:	b00b      	add	sp, #44	; 0x2c
 80112a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112ac:	0802e8a0 	.word	0x0802e8a0

080112b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80112b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112b4:	461e      	mov	r6, r3
 80112b6:	4b0a      	ldr	r3, [pc, #40]	; (80112e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80112b8:	460f      	mov	r7, r1
 80112ba:	881d      	ldrh	r5, [r3, #0]
 80112bc:	4690      	mov	r8, r2
 80112be:	f7f2 fd93 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 80112c2:	6803      	ldr	r3, [r0, #0]
 80112c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112c6:	4798      	blx	r3
 80112c8:	280b      	cmp	r0, #11
 80112ca:	bf9a      	itte	ls
 80112cc:	4b05      	ldrls	r3, [pc, #20]	; (80112e4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80112ce:	5c1c      	ldrbls	r4, [r3, r0]
 80112d0:	2400      	movhi	r4, #0
 80112d2:	fb08 7005 	mla	r0, r8, r5, r7
 80112d6:	10e4      	asrs	r4, r4, #3
 80112d8:	fb04 6000 	mla	r0, r4, r0, r6
 80112dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80112e0:	200132b6 	.word	0x200132b6
 80112e4:	0802e8a0 	.word	0x0802e8a0

080112e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80112e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112ea:	b08b      	sub	sp, #44	; 0x2c
 80112ec:	461f      	mov	r7, r3
 80112ee:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80112f2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80112f6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80112fa:	f8ad 3018 	strh.w	r3, [sp, #24]
 80112fe:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011302:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011306:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801130a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801130e:	2500      	movs	r5, #0
 8011310:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011314:	f88d 3020 	strb.w	r3, [sp, #32]
 8011318:	4604      	mov	r4, r0
 801131a:	4616      	mov	r6, r2
 801131c:	9504      	str	r5, [sp, #16]
 801131e:	f7ff fe9f 	bl	8011060 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011322:	463a      	mov	r2, r7
 8011324:	4631      	mov	r1, r6
 8011326:	4603      	mov	r3, r0
 8011328:	4620      	mov	r0, r4
 801132a:	f7ff ffc1 	bl	80112b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801132e:	4b0e      	ldr	r3, [pc, #56]	; (8011368 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011330:	9005      	str	r0, [sp, #20]
 8011332:	881b      	ldrh	r3, [r3, #0]
 8011334:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011338:	f7f2 fd56 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 801133c:	6803      	ldr	r3, [r0, #0]
 801133e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011340:	4798      	blx	r3
 8011342:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011344:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8011348:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801134c:	9304      	str	r3, [sp, #16]
 801134e:	6860      	ldr	r0, [r4, #4]
 8011350:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011354:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011358:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 801135c:	6803      	ldr	r3, [r0, #0]
 801135e:	a901      	add	r1, sp, #4
 8011360:	685b      	ldr	r3, [r3, #4]
 8011362:	4798      	blx	r3
 8011364:	b00b      	add	sp, #44	; 0x2c
 8011366:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011368:	200132b6 	.word	0x200132b6

0801136c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801136c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801136e:	b08d      	sub	sp, #52	; 0x34
 8011370:	466b      	mov	r3, sp
 8011372:	e883 0006 	stmia.w	r3, {r1, r2}
 8011376:	2300      	movs	r3, #0
 8011378:	9306      	str	r3, [sp, #24]
 801137a:	6803      	ldr	r3, [r0, #0]
 801137c:	f8bd 6000 	ldrh.w	r6, [sp]
 8011380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011382:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8011386:	2501      	movs	r5, #1
 8011388:	9503      	str	r5, [sp, #12]
 801138a:	4604      	mov	r4, r0
 801138c:	4798      	blx	r3
 801138e:	463a      	mov	r2, r7
 8011390:	4631      	mov	r1, r6
 8011392:	4603      	mov	r3, r0
 8011394:	4620      	mov	r0, r4
 8011396:	f7ff ff8b 	bl	80112b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801139a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801139c:	9307      	str	r3, [sp, #28]
 801139e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80113a2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80113a6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80113aa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80113ae:	4b0f      	ldr	r3, [pc, #60]	; (80113ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80113b0:	9004      	str	r0, [sp, #16]
 80113b2:	881b      	ldrh	r3, [r3, #0]
 80113b4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80113b8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80113bc:	f7f2 fd14 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 80113c0:	6803      	ldr	r3, [r0, #0]
 80113c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80113c4:	4798      	blx	r3
 80113c6:	23ff      	movs	r3, #255	; 0xff
 80113c8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80113cc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80113d0:	6860      	ldr	r0, [r4, #4]
 80113d2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80113d6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80113da:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80113de:	6803      	ldr	r3, [r0, #0]
 80113e0:	a903      	add	r1, sp, #12
 80113e2:	685b      	ldr	r3, [r3, #4]
 80113e4:	4798      	blx	r3
 80113e6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80113e8:	b00d      	add	sp, #52	; 0x34
 80113ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80113ec:	200132b6 	.word	0x200132b6

080113f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80113f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113f4:	b08c      	sub	sp, #48	; 0x30
 80113f6:	461e      	mov	r6, r3
 80113f8:	466d      	mov	r5, sp
 80113fa:	2300      	movs	r3, #0
 80113fc:	e885 0006 	stmia.w	r5, {r1, r2}
 8011400:	9306      	str	r3, [sp, #24]
 8011402:	6803      	ldr	r3, [r0, #0]
 8011404:	f8bd 7000 	ldrh.w	r7, [sp]
 8011408:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801140a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801140e:	2501      	movs	r5, #1
 8011410:	9503      	str	r5, [sp, #12]
 8011412:	4604      	mov	r4, r0
 8011414:	4798      	blx	r3
 8011416:	4642      	mov	r2, r8
 8011418:	4639      	mov	r1, r7
 801141a:	4603      	mov	r3, r0
 801141c:	4620      	mov	r0, r4
 801141e:	f7ff ff47 	bl	80112b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011422:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011426:	f8ad 3020 	strh.w	r3, [sp, #32]
 801142a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801142e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011432:	4b11      	ldr	r3, [pc, #68]	; (8011478 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011434:	9004      	str	r0, [sp, #16]
 8011436:	881b      	ldrh	r3, [r3, #0]
 8011438:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801143c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801143e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011442:	9607      	str	r6, [sp, #28]
 8011444:	f7f2 fcd0 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 8011448:	6803      	ldr	r3, [r0, #0]
 801144a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801144c:	4798      	blx	r3
 801144e:	23ff      	movs	r3, #255	; 0xff
 8011450:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011454:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011458:	6860      	ldr	r0, [r4, #4]
 801145a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801145e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011462:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011466:	6803      	ldr	r3, [r0, #0]
 8011468:	a903      	add	r1, sp, #12
 801146a:	685b      	ldr	r3, [r3, #4]
 801146c:	4798      	blx	r3
 801146e:	4630      	mov	r0, r6
 8011470:	b00c      	add	sp, #48	; 0x30
 8011472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011476:	bf00      	nop
 8011478:	200132b6 	.word	0x200132b6

0801147c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 801147c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801147e:	b085      	sub	sp, #20
 8011480:	ac02      	add	r4, sp, #8
 8011482:	e884 0006 	stmia.w	r4, {r1, r2}
 8011486:	4605      	mov	r5, r0
 8011488:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801148c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011490:	f7ff fde6 	bl	8011060 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011494:	463a      	mov	r2, r7
 8011496:	4603      	mov	r3, r0
 8011498:	4631      	mov	r1, r6
 801149a:	4628      	mov	r0, r5
 801149c:	f7ff ff08 	bl	80112b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80114a0:	4a05      	ldr	r2, [pc, #20]	; (80114b8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80114a2:	682b      	ldr	r3, [r5, #0]
 80114a4:	8812      	ldrh	r2, [r2, #0]
 80114a6:	9200      	str	r2, [sp, #0]
 80114a8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80114aa:	e894 0006 	ldmia.w	r4, {r1, r2}
 80114ae:	4603      	mov	r3, r0
 80114b0:	4628      	mov	r0, r5
 80114b2:	47b0      	blx	r6
 80114b4:	b005      	add	sp, #20
 80114b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80114b8:	200132b6 	.word	0x200132b6

080114bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80114bc:	b570      	push	{r4, r5, r6, lr}
 80114be:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80114c2:	4604      	mov	r4, r0
 80114c4:	b19b      	cbz	r3, 80114ee <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80114c6:	2002      	movs	r0, #2
 80114c8:	f7f0 fc9a 	bl	8001e00 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80114cc:	2300      	movs	r3, #0
 80114ce:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80114d2:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80114d6:	6823      	ldr	r3, [r4, #0]
 80114d8:	4620      	mov	r0, r4
 80114da:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80114de:	f7ff fdbf 	bl	8011060 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80114e2:	462b      	mov	r3, r5
 80114e4:	4601      	mov	r1, r0
 80114e6:	4620      	mov	r0, r4
 80114e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114ec:	4718      	bx	r3
 80114ee:	bd70      	pop	{r4, r5, r6, pc}

080114f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80114f0:	b538      	push	{r3, r4, r5, lr}
 80114f2:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80114f6:	428b      	cmp	r3, r1
 80114f8:	4604      	mov	r4, r0
 80114fa:	460d      	mov	r5, r1
 80114fc:	d006      	beq.n	801150c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80114fe:	6803      	ldr	r3, [r0, #0]
 8011500:	b929      	cbnz	r1, 801150e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011502:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011506:	4798      	blx	r3
 8011508:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801150c:	bd38      	pop	{r3, r4, r5, pc}
 801150e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011512:	e7f8      	b.n	8011506 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011514 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011514:	b510      	push	{r4, lr}
 8011516:	4b0d      	ldr	r3, [pc, #52]	; (801154c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011518:	781b      	ldrb	r3, [r3, #0]
 801151a:	4604      	mov	r4, r0
 801151c:	b95b      	cbnz	r3, 8011536 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801151e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8011522:	2b02      	cmp	r3, #2
 8011524:	d007      	beq.n	8011536 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011526:	6840      	ldr	r0, [r0, #4]
 8011528:	f000 f92c 	bl	8011784 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801152c:	b118      	cbz	r0, 8011536 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801152e:	6862      	ldr	r2, [r4, #4]
 8011530:	7a53      	ldrb	r3, [r2, #9]
 8011532:	2b00      	cmp	r3, #0
 8011534:	d0fc      	beq.n	8011530 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8011536:	f7f0 fd9b 	bl	8002070 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801153a:	4620      	mov	r0, r4
 801153c:	2100      	movs	r1, #0
 801153e:	f7ff ffd7 	bl	80114f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011542:	4620      	mov	r0, r4
 8011544:	f7ff fd8c 	bl	8011060 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011548:	bd10      	pop	{r4, pc}
 801154a:	bf00      	nop
 801154c:	200132ba 	.word	0x200132ba

08011550 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8011550:	b570      	push	{r4, r5, r6, lr}
 8011552:	4604      	mov	r4, r0
 8011554:	6803      	ldr	r3, [r0, #0]
 8011556:	b919      	cbnz	r1, 8011560 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011558:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801155a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801155e:	4718      	bx	r3
 8011560:	2200      	movs	r2, #0
 8011562:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8011566:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 801156a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801156c:	4798      	blx	r3
 801156e:	6863      	ldr	r3, [r4, #4]
 8011570:	2101      	movs	r1, #1
 8011572:	4605      	mov	r5, r0
 8011574:	7299      	strb	r1, [r3, #10]
 8011576:	4620      	mov	r0, r4
 8011578:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 801157c:	f7ff ffb8 	bl	80114f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011580:	4628      	mov	r0, r5
 8011582:	bd70      	pop	{r4, r5, r6, pc}

08011584 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8011584:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011588:	1a13      	subs	r3, r2, r0
 801158a:	4258      	negs	r0, r3
 801158c:	4158      	adcs	r0, r3
 801158e:	4770      	bx	lr

08011590 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011590:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8011594:	1a9b      	subs	r3, r3, r2
 8011596:	2b00      	cmp	r3, #0
 8011598:	bfdc      	itt	le
 801159a:	6882      	ldrle	r2, [r0, #8]
 801159c:	189b      	addle	r3, r3, r2
 801159e:	2b01      	cmp	r3, #1
 80115a0:	bfcc      	ite	gt
 80115a2:	2000      	movgt	r0, #0
 80115a4:	2001      	movle	r0, #1
 80115a6:	4770      	bx	lr

080115a8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80115a8:	6902      	ldr	r2, [r0, #16]
 80115aa:	6843      	ldr	r3, [r0, #4]
 80115ac:	2024      	movs	r0, #36	; 0x24
 80115ae:	fb00 3002 	mla	r0, r0, r2, r3
 80115b2:	4770      	bx	lr

080115b4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80115b4:	6803      	ldr	r3, [r0, #0]
 80115b6:	691b      	ldr	r3, [r3, #16]
 80115b8:	4718      	bx	r3

080115ba <_ZN8touchgfx13DMA_Interface7executeEv>:
 80115ba:	b570      	push	{r4, r5, r6, lr}
 80115bc:	2301      	movs	r3, #1
 80115be:	7203      	strb	r3, [r0, #8]
 80115c0:	4604      	mov	r4, r0
 80115c2:	6840      	ldr	r0, [r0, #4]
 80115c4:	6803      	ldr	r3, [r0, #0]
 80115c6:	699b      	ldr	r3, [r3, #24]
 80115c8:	4798      	blx	r3
 80115ca:	6803      	ldr	r3, [r0, #0]
 80115cc:	2b40      	cmp	r3, #64	; 0x40
 80115ce:	4605      	mov	r5, r0
 80115d0:	d00c      	beq.n	80115ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80115d2:	d810      	bhi.n	80115f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80115d4:	2b04      	cmp	r3, #4
 80115d6:	d01d      	beq.n	8011614 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80115d8:	d804      	bhi.n	80115e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80115da:	2b01      	cmp	r3, #1
 80115dc:	d006      	beq.n	80115ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80115de:	2b02      	cmp	r3, #2
 80115e0:	d02c      	beq.n	801163c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80115e2:	bd70      	pop	{r4, r5, r6, pc}
 80115e4:	2b08      	cmp	r3, #8
 80115e6:	d01d      	beq.n	8011624 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80115e8:	2b20      	cmp	r3, #32
 80115ea:	d1fa      	bne.n	80115e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80115ec:	6823      	ldr	r3, [r4, #0]
 80115ee:	4620      	mov	r0, r4
 80115f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80115f2:	4798      	blx	r3
 80115f4:	e013      	b.n	801161e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80115f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80115fa:	d0f7      	beq.n	80115ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80115fc:	d804      	bhi.n	8011608 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80115fe:	2b80      	cmp	r3, #128	; 0x80
 8011600:	d0f4      	beq.n	80115ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011602:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011606:	e7f0      	b.n	80115ea <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011608:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801160c:	d0ee      	beq.n	80115ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801160e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8011612:	e7e5      	b.n	80115e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011614:	6823      	ldr	r3, [r4, #0]
 8011616:	7f01      	ldrb	r1, [r0, #28]
 8011618:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801161a:	4620      	mov	r0, r4
 801161c:	4798      	blx	r3
 801161e:	6823      	ldr	r3, [r4, #0]
 8011620:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011622:	e006      	b.n	8011632 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011624:	6823      	ldr	r3, [r4, #0]
 8011626:	7f01      	ldrb	r1, [r0, #28]
 8011628:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801162a:	4620      	mov	r0, r4
 801162c:	4798      	blx	r3
 801162e:	6823      	ldr	r3, [r4, #0]
 8011630:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011632:	4629      	mov	r1, r5
 8011634:	4620      	mov	r0, r4
 8011636:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801163a:	4718      	bx	r3
 801163c:	6823      	ldr	r3, [r4, #0]
 801163e:	4620      	mov	r0, r4
 8011640:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011642:	4798      	blx	r3
 8011644:	e7f3      	b.n	801162e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011646 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011646:	4770      	bx	lr

08011648 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011648:	4770      	bx	lr

0801164a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801164a:	4770      	bx	lr

0801164c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801164c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011650:	1ad2      	subs	r2, r2, r3
 8011652:	2a00      	cmp	r2, #0
 8011654:	b510      	push	{r4, lr}
 8011656:	bfdc      	itt	le
 8011658:	6884      	ldrle	r4, [r0, #8]
 801165a:	1912      	addle	r2, r2, r4
 801165c:	2a01      	cmp	r2, #1
 801165e:	dd16      	ble.n	801168e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011660:	6842      	ldr	r2, [r0, #4]
 8011662:	2424      	movs	r4, #36	; 0x24
 8011664:	fb04 2303 	mla	r3, r4, r3, r2
 8011668:	f101 0220 	add.w	r2, r1, #32
 801166c:	f851 4b04 	ldr.w	r4, [r1], #4
 8011670:	f843 4b04 	str.w	r4, [r3], #4
 8011674:	4291      	cmp	r1, r2
 8011676:	d1f9      	bne.n	801166c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011678:	780a      	ldrb	r2, [r1, #0]
 801167a:	701a      	strb	r2, [r3, #0]
 801167c:	68c3      	ldr	r3, [r0, #12]
 801167e:	6882      	ldr	r2, [r0, #8]
 8011680:	f3bf 8f5b 	dmb	ish
 8011684:	3301      	adds	r3, #1
 8011686:	429a      	cmp	r2, r3
 8011688:	bfd8      	it	le
 801168a:	1a9b      	suble	r3, r3, r2
 801168c:	60c3      	str	r3, [r0, #12]
 801168e:	bd10      	pop	{r4, pc}

08011690 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011690:	6903      	ldr	r3, [r0, #16]
 8011692:	6882      	ldr	r2, [r0, #8]
 8011694:	f3bf 8f5b 	dmb	ish
 8011698:	3301      	adds	r3, #1
 801169a:	429a      	cmp	r2, r3
 801169c:	bfd8      	it	le
 801169e:	1a9b      	suble	r3, r3, r2
 80116a0:	6103      	str	r3, [r0, #16]
 80116a2:	4770      	bx	lr

080116a4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80116a4:	b570      	push	{r4, r5, r6, lr}
 80116a6:	4604      	mov	r4, r0
 80116a8:	460e      	mov	r6, r1
 80116aa:	6860      	ldr	r0, [r4, #4]
 80116ac:	6803      	ldr	r3, [r0, #0]
 80116ae:	685b      	ldr	r3, [r3, #4]
 80116b0:	4798      	blx	r3
 80116b2:	2800      	cmp	r0, #0
 80116b4:	d1f9      	bne.n	80116aa <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80116b6:	4d0d      	ldr	r5, [pc, #52]	; (80116ec <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80116b8:	6828      	ldr	r0, [r5, #0]
 80116ba:	6803      	ldr	r3, [r0, #0]
 80116bc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80116be:	4798      	blx	r3
 80116c0:	f7f0 fce4 	bl	800208c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80116c4:	6828      	ldr	r0, [r5, #0]
 80116c6:	2101      	movs	r1, #1
 80116c8:	f7ff ff12 	bl	80114f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80116cc:	6860      	ldr	r0, [r4, #4]
 80116ce:	6803      	ldr	r3, [r0, #0]
 80116d0:	4631      	mov	r1, r6
 80116d2:	689b      	ldr	r3, [r3, #8]
 80116d4:	4798      	blx	r3
 80116d6:	6823      	ldr	r3, [r4, #0]
 80116d8:	4620      	mov	r0, r4
 80116da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116dc:	4798      	blx	r3
 80116de:	6828      	ldr	r0, [r5, #0]
 80116e0:	6803      	ldr	r3, [r0, #0]
 80116e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116e6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80116e8:	4718      	bx	r3
 80116ea:	bf00      	nop
 80116ec:	200132bc 	.word	0x200132bc

080116f0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80116f0:	b508      	push	{r3, lr}
 80116f2:	f7f0 fcbd 	bl	8002070 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80116f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80116fa:	f7f0 bcc1 	b.w	8002080 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080116fe <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80116fe:	b510      	push	{r4, lr}
 8011700:	2114      	movs	r1, #20
 8011702:	4604      	mov	r4, r0
 8011704:	f018 fbc9 	bl	8029e9a <_ZdlPvj>
 8011708:	4620      	mov	r0, r4
 801170a:	bd10      	pop	{r4, pc}

0801170c <_ZN8touchgfx13DMA_Interface5startEv>:
 801170c:	b510      	push	{r4, lr}
 801170e:	4604      	mov	r4, r0
 8011710:	6840      	ldr	r0, [r0, #4]
 8011712:	6803      	ldr	r3, [r0, #0]
 8011714:	681b      	ldr	r3, [r3, #0]
 8011716:	4798      	blx	r3
 8011718:	b948      	cbnz	r0, 801172e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801171a:	7a63      	ldrb	r3, [r4, #9]
 801171c:	b13b      	cbz	r3, 801172e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801171e:	7a23      	ldrb	r3, [r4, #8]
 8011720:	b92b      	cbnz	r3, 801172e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011722:	6823      	ldr	r3, [r4, #0]
 8011724:	4620      	mov	r0, r4
 8011726:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801172c:	4718      	bx	r3
 801172e:	bd10      	pop	{r4, pc}

08011730 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011730:	b570      	push	{r4, r5, r6, lr}
 8011732:	4604      	mov	r4, r0
 8011734:	6840      	ldr	r0, [r0, #4]
 8011736:	6803      	ldr	r3, [r0, #0]
 8011738:	681b      	ldr	r3, [r3, #0]
 801173a:	4798      	blx	r3
 801173c:	4605      	mov	r5, r0
 801173e:	b930      	cbnz	r0, 801174e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011740:	7a23      	ldrb	r3, [r4, #8]
 8011742:	b123      	cbz	r3, 801174e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011744:	6860      	ldr	r0, [r4, #4]
 8011746:	6803      	ldr	r3, [r0, #0]
 8011748:	695b      	ldr	r3, [r3, #20]
 801174a:	4798      	blx	r3
 801174c:	7225      	strb	r5, [r4, #8]
 801174e:	6860      	ldr	r0, [r4, #4]
 8011750:	6803      	ldr	r3, [r0, #0]
 8011752:	681b      	ldr	r3, [r3, #0]
 8011754:	4798      	blx	r3
 8011756:	b928      	cbnz	r0, 8011764 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011758:	6823      	ldr	r3, [r4, #0]
 801175a:	4620      	mov	r0, r4
 801175c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801175e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011762:	4718      	bx	r3
 8011764:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011768:	f7f0 bc98 	b.w	800209c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0801176c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801176c:	b510      	push	{r4, lr}
 801176e:	4c04      	ldr	r4, [pc, #16]	; (8011780 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011770:	6082      	str	r2, [r0, #8]
 8011772:	2200      	movs	r2, #0
 8011774:	e9c0 4100 	strd	r4, r1, [r0]
 8011778:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801177c:	bd10      	pop	{r4, pc}
 801177e:	bf00      	nop
 8011780:	0802e8b4 	.word	0x0802e8b4

08011784 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011784:	6840      	ldr	r0, [r0, #4]
 8011786:	6803      	ldr	r3, [r0, #0]
 8011788:	681b      	ldr	r3, [r3, #0]
 801178a:	4718      	bx	r3

0801178c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801178c:	4b06      	ldr	r3, [pc, #24]	; (80117a8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801178e:	60c1      	str	r1, [r0, #12]
 8011790:	094a      	lsrs	r2, r1, #5
 8011792:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8011796:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801179a:	4313      	orrs	r3, r2
 801179c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80117a0:	4319      	orrs	r1, r3
 80117a2:	8201      	strh	r1, [r0, #16]
 80117a4:	4770      	bx	lr
 80117a6:	bf00      	nop
 80117a8:	fffff800 	.word	0xfffff800

080117ac <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80117ac:	f1a0 0008 	sub.w	r0, r0, #8
 80117b0:	e7ec      	b.n	801178c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80117b2:	bf00      	nop

080117b4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80117b4:	b508      	push	{r3, lr}
 80117b6:	4b05      	ldr	r3, [pc, #20]	; (80117cc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80117b8:	6818      	ldr	r0, [r3, #0]
 80117ba:	6803      	ldr	r3, [r0, #0]
 80117bc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80117c0:	4798      	blx	r3
 80117c2:	1e43      	subs	r3, r0, #1
 80117c4:	4258      	negs	r0, r3
 80117c6:	4158      	adcs	r0, r3
 80117c8:	bd08      	pop	{r3, pc}
 80117ca:	bf00      	nop
 80117cc:	200132bc 	.word	0x200132bc

080117d0 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80117d0:	4770      	bx	lr

080117d2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80117d2:	3808      	subs	r0, #8
 80117d4:	4770      	bx	lr

080117d6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80117d6:	b430      	push	{r4, r5}
 80117d8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80117dc:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80117e0:	8a02      	ldrh	r2, [r0, #16]
 80117e2:	9202      	str	r2, [sp, #8]
 80117e4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80117e8:	68c2      	ldr	r2, [r0, #12]
 80117ea:	4629      	mov	r1, r5
 80117ec:	4620      	mov	r0, r4
 80117ee:	bc30      	pop	{r4, r5}
 80117f0:	f7f0 bf14 	b.w	800261c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080117f4 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80117f4:	f7f0 bf10 	b.w	8002618 <_ZN8touchgfx5paint8tearDownEv>

080117f8 <_ZN8touchgfx13PainterRGB565D0Ev>:
 80117f8:	b510      	push	{r4, lr}
 80117fa:	2114      	movs	r1, #20
 80117fc:	4604      	mov	r4, r0
 80117fe:	f018 fb4c 	bl	8029e9a <_ZdlPvj>
 8011802:	4620      	mov	r0, r4
 8011804:	bd10      	pop	{r4, pc}

08011806 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8011806:	f1a0 0008 	sub.w	r0, r0, #8
 801180a:	e7f5      	b.n	80117f8 <_ZN8touchgfx13PainterRGB565D0Ev>

0801180c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801180c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801180e:	6803      	ldr	r3, [r0, #0]
 8011810:	460d      	mov	r5, r1
 8011812:	4604      	mov	r4, r0
 8011814:	4601      	mov	r1, r0
 8011816:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011818:	a802      	add	r0, sp, #8
 801181a:	4798      	blx	r3
 801181c:	6828      	ldr	r0, [r5, #0]
 801181e:	6869      	ldr	r1, [r5, #4]
 8011820:	466b      	mov	r3, sp
 8011822:	c303      	stmia	r3!, {r0, r1}
 8011824:	4668      	mov	r0, sp
 8011826:	4619      	mov	r1, r3
 8011828:	f7fe fb30 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 801182c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801182e:	b188      	cbz	r0, 8011854 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011830:	6803      	ldr	r3, [r0, #0]
 8011832:	1d21      	adds	r1, r4, #4
 8011834:	68db      	ldr	r3, [r3, #12]
 8011836:	4798      	blx	r3
 8011838:	b160      	cbz	r0, 8011854 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801183a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801183e:	2b00      	cmp	r3, #0
 8011840:	dd08      	ble.n	8011854 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011842:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8011846:	2d00      	cmp	r5, #0
 8011848:	dd04      	ble.n	8011854 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801184a:	4a2b      	ldr	r2, [pc, #172]	; (80118f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 801184c:	7812      	ldrb	r2, [r2, #0]
 801184e:	b11a      	cbz	r2, 8011858 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011850:	2a01      	cmp	r2, #1
 8011852:	d029      	beq.n	80118a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8011854:	b004      	add	sp, #16
 8011856:	bd70      	pop	{r4, r5, r6, pc}
 8011858:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801185c:	441d      	add	r5, r3
 801185e:	b2ad      	uxth	r5, r5
 8011860:	b22e      	sxth	r6, r5
 8011862:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8011866:	42b3      	cmp	r3, r6
 8011868:	daf4      	bge.n	8011854 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801186a:	6823      	ldr	r3, [r4, #0]
 801186c:	4669      	mov	r1, sp
 801186e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011870:	4620      	mov	r0, r4
 8011872:	4798      	blx	r3
 8011874:	b940      	cbnz	r0, 8011888 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011876:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801187a:	2b01      	cmp	r3, #1
 801187c:	d004      	beq.n	8011888 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801187e:	3301      	adds	r3, #1
 8011880:	105b      	asrs	r3, r3, #1
 8011882:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011886:	e7f0      	b.n	801186a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011888:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801188c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011890:	4413      	add	r3, r2
 8011892:	b29b      	uxth	r3, r3
 8011894:	441a      	add	r2, r3
 8011896:	b212      	sxth	r2, r2
 8011898:	4296      	cmp	r6, r2
 801189a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801189e:	dae0      	bge.n	8011862 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80118a0:	1aeb      	subs	r3, r5, r3
 80118a2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80118a6:	e7dc      	b.n	8011862 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80118a8:	f8bd 5000 	ldrh.w	r5, [sp]
 80118ac:	441d      	add	r5, r3
 80118ae:	b2ad      	uxth	r5, r5
 80118b0:	b22e      	sxth	r6, r5
 80118b2:	f9bd 3000 	ldrsh.w	r3, [sp]
 80118b6:	42b3      	cmp	r3, r6
 80118b8:	dacc      	bge.n	8011854 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80118ba:	6823      	ldr	r3, [r4, #0]
 80118bc:	4669      	mov	r1, sp
 80118be:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80118c0:	4620      	mov	r0, r4
 80118c2:	4798      	blx	r3
 80118c4:	b940      	cbnz	r0, 80118d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80118c6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80118ca:	2b01      	cmp	r3, #1
 80118cc:	d004      	beq.n	80118d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80118ce:	3301      	adds	r3, #1
 80118d0:	105b      	asrs	r3, r3, #1
 80118d2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80118d6:	e7f0      	b.n	80118ba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80118d8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80118dc:	f8bd 3000 	ldrh.w	r3, [sp]
 80118e0:	4413      	add	r3, r2
 80118e2:	b29b      	uxth	r3, r3
 80118e4:	441a      	add	r2, r3
 80118e6:	b212      	sxth	r2, r2
 80118e8:	4296      	cmp	r6, r2
 80118ea:	f8ad 3000 	strh.w	r3, [sp]
 80118ee:	dae0      	bge.n	80118b2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80118f0:	1aeb      	subs	r3, r5, r3
 80118f2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80118f6:	e7dc      	b.n	80118b2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80118f8:	200132b4 	.word	0x200132b4

080118fc <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80118fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80118fe:	6803      	ldr	r3, [r0, #0]
 8011900:	4604      	mov	r4, r0
 8011902:	4601      	mov	r1, r0
 8011904:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011906:	4668      	mov	r0, sp
 8011908:	4798      	blx	r3
 801190a:	2100      	movs	r1, #0
 801190c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011910:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011914:	9102      	str	r1, [sp, #8]
 8011916:	4668      	mov	r0, sp
 8011918:	a902      	add	r1, sp, #8
 801191a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801191e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011922:	f7fe fab3 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 8011926:	6823      	ldr	r3, [r4, #0]
 8011928:	4669      	mov	r1, sp
 801192a:	691b      	ldr	r3, [r3, #16]
 801192c:	4620      	mov	r0, r4
 801192e:	4798      	blx	r3
 8011930:	b004      	add	sp, #16
 8011932:	bd10      	pop	{r4, pc}

08011934 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011934:	2101      	movs	r1, #1
 8011936:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801193a:	490b      	ldr	r1, [pc, #44]	; (8011968 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 801193c:	6001      	str	r1, [r0, #0]
 801193e:	2200      	movs	r2, #0
 8011940:	21ff      	movs	r1, #255	; 0xff
 8011942:	8082      	strh	r2, [r0, #4]
 8011944:	80c2      	strh	r2, [r0, #6]
 8011946:	8102      	strh	r2, [r0, #8]
 8011948:	8142      	strh	r2, [r0, #10]
 801194a:	8182      	strh	r2, [r0, #12]
 801194c:	81c2      	strh	r2, [r0, #14]
 801194e:	8202      	strh	r2, [r0, #16]
 8011950:	8242      	strh	r2, [r0, #18]
 8011952:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011956:	61c2      	str	r2, [r0, #28]
 8011958:	8402      	strh	r2, [r0, #32]
 801195a:	8442      	strh	r2, [r0, #34]	; 0x22
 801195c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011960:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011964:	6282      	str	r2, [r0, #40]	; 0x28
 8011966:	4770      	bx	lr
 8011968:	0802e910 	.word	0x0802e910

0801196c <_ZNK8touchgfx4Line14getMinimalRectEv>:
 801196c:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011970:	4602      	mov	r2, r0
 8011972:	cb03      	ldmia	r3!, {r0, r1}
 8011974:	6010      	str	r0, [r2, #0]
 8011976:	6051      	str	r1, [r2, #4]
 8011978:	4610      	mov	r0, r2
 801197a:	4770      	bx	lr

0801197c <_ZN8touchgfx4LineD1Ev>:
 801197c:	4770      	bx	lr

0801197e <_ZN8touchgfx4LineD0Ev>:
 801197e:	b510      	push	{r4, lr}
 8011980:	2170      	movs	r1, #112	; 0x70
 8011982:	4604      	mov	r4, r0
 8011984:	f018 fa89 	bl	8029e9a <_ZdlPvj>
 8011988:	4620      	mov	r0, r4
 801198a:	bd10      	pop	{r4, pc}

0801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 801198c:	b507      	push	{r0, r1, r2, lr}
 801198e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8011992:	ab01      	add	r3, sp, #4
 8011994:	6809      	ldr	r1, [r1, #0]
 8011996:	6800      	ldr	r0, [r0, #0]
 8011998:	f005 fc80 	bl	801729c <_ZN8touchgfx6muldivElllRl>
 801199c:	b003      	add	sp, #12
 801199e:	f85d fb04 	ldr.w	pc, [sp], #4

080119a2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 80119a2:	6800      	ldr	r0, [r0, #0]
 80119a4:	2800      	cmp	r0, #0
 80119a6:	bfb9      	ittee	lt
 80119a8:	2320      	movlt	r3, #32
 80119aa:	fb90 f0f3 	sdivlt	r0, r0, r3
 80119ae:	301f      	addge	r0, #31
 80119b0:	1140      	asrge	r0, r0, #5
 80119b2:	4770      	bx	lr

080119b4 <_ZNK8touchgfx4Line17invalidateContentEv>:
 80119b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119b8:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 80119bc:	b089      	sub	sp, #36	; 0x24
 80119be:	4604      	mov	r4, r0
 80119c0:	b353      	cbz	r3, 8011a18 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 80119c2:	6803      	ldr	r3, [r0, #0]
 80119c4:	4601      	mov	r1, r0
 80119c6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80119c8:	a802      	add	r0, sp, #8
 80119ca:	4798      	blx	r3
 80119cc:	2220      	movs	r2, #32
 80119ce:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 80119d2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80119d4:	fb9a f0f2 	sdiv	r0, sl, r2
 80119d8:	fb91 f5f2 	sdiv	r5, r1, r2
 80119dc:	1b40      	subs	r0, r0, r5
 80119de:	2800      	cmp	r0, #0
 80119e0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80119e2:	fb93 f6f2 	sdiv	r6, r3, r2
 80119e6:	bfb8      	it	lt
 80119e8:	4240      	neglt	r0, r0
 80119ea:	0076      	lsls	r6, r6, #1
 80119ec:	4286      	cmp	r6, r0
 80119ee:	f8d4 b000 	ldr.w	fp, [r4]
 80119f2:	dc0c      	bgt.n	8011a0e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 80119f4:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80119f6:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 80119fa:	fb95 f0f2 	sdiv	r0, r5, r2
 80119fe:	fb98 f7f2 	sdiv	r7, r8, r2
 8011a02:	1bc0      	subs	r0, r0, r7
 8011a04:	2800      	cmp	r0, #0
 8011a06:	bfb8      	it	lt
 8011a08:	4240      	neglt	r0, r0
 8011a0a:	4286      	cmp	r6, r0
 8011a0c:	dd07      	ble.n	8011a1e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011a0e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011a12:	a902      	add	r1, sp, #8
 8011a14:	4620      	mov	r0, r4
 8011a16:	4798      	blx	r3
 8011a18:	b009      	add	sp, #36	; 0x24
 8011a1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a1e:	3301      	adds	r3, #1
 8011a20:	2002      	movs	r0, #2
 8011a22:	f10d 0920 	add.w	r9, sp, #32
 8011a26:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011a2a:	4103      	asrs	r3, r0
 8011a2c:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011a30:	eb01 060a 	add.w	r6, r1, sl
 8011a34:	eb08 0705 	add.w	r7, r8, r5
 8011a38:	fb96 f6f0 	sdiv	r6, r6, r0
 8011a3c:	fb97 f7f0 	sdiv	r7, r7, r0
 8011a40:	4648      	mov	r0, r9
 8011a42:	9101      	str	r1, [sp, #4]
 8011a44:	b236      	sxth	r6, r6
 8011a46:	b23f      	sxth	r7, r7
 8011a48:	fb96 f6f2 	sdiv	r6, r6, r2
 8011a4c:	fb97 f7f2 	sdiv	r7, r7, r2
 8011a50:	f7ff ffa7 	bl	80119a2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011a54:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011a58:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011a5c:	9901      	ldr	r1, [sp, #4]
 8011a5e:	4293      	cmp	r3, r2
 8011a60:	fa1f fe87 	uxth.w	lr, r7
 8011a64:	fa1f fc86 	uxth.w	ip, r6
 8011a68:	eba1 0a0a 	sub.w	sl, r1, sl
 8011a6c:	b280      	uxth	r0, r0
 8011a6e:	da54      	bge.n	8011b1a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011a70:	ebac 0100 	sub.w	r1, ip, r0
 8011a74:	b289      	uxth	r1, r1
 8011a76:	4460      	add	r0, ip
 8011a78:	f1ba 0f00 	cmp.w	sl, #0
 8011a7c:	b20e      	sxth	r6, r1
 8011a7e:	b280      	uxth	r0, r0
 8011a80:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8011a84:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011a88:	da29      	bge.n	8011ade <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011a8a:	eba8 0505 	sub.w	r5, r8, r5
 8011a8e:	2d00      	cmp	r5, #0
 8011a90:	da2a      	bge.n	8011ae8 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011a92:	fa1f f88a 	uxth.w	r8, sl
 8011a96:	eba0 0008 	sub.w	r0, r0, r8
 8011a9a:	fa1f f58c 	uxth.w	r5, ip
 8011a9e:	4443      	add	r3, r8
 8011aa0:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011aa4:	1a59      	subs	r1, r3, r1
 8011aa6:	ebae 0005 	sub.w	r0, lr, r5
 8011aaa:	f8ad a010 	strh.w	sl, [sp, #16]
 8011aae:	f8ad c012 	strh.w	ip, [sp, #18]
 8011ab2:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011ab6:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011aba:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011abe:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011ac2:	442a      	add	r2, r5
 8011ac4:	eba2 0e0e 	sub.w	lr, r2, lr
 8011ac8:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011acc:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011ad0:	a904      	add	r1, sp, #16
 8011ad2:	4620      	mov	r0, r4
 8011ad4:	4798      	blx	r3
 8011ad6:	6823      	ldr	r3, [r4, #0]
 8011ad8:	4649      	mov	r1, r9
 8011ada:	691b      	ldr	r3, [r3, #16]
 8011adc:	e79a      	b.n	8011a14 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011ade:	d003      	beq.n	8011ae8 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011ae0:	eba8 0505 	sub.w	r5, r8, r5
 8011ae4:	2d00      	cmp	r5, #0
 8011ae6:	dcd4      	bgt.n	8011a92 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011ae8:	fa1f f88a 	uxth.w	r8, sl
 8011aec:	4443      	add	r3, r8
 8011aee:	fa1f f58c 	uxth.w	r5, ip
 8011af2:	1a59      	subs	r1, r3, r1
 8011af4:	eba0 0008 	sub.w	r0, r0, r8
 8011af8:	ebae 0305 	sub.w	r3, lr, r5
 8011afc:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011b00:	f8ad c012 	strh.w	ip, [sp, #18]
 8011b04:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011b08:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011b0c:	f8ad a018 	strh.w	sl, [sp, #24]
 8011b10:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011b14:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011b18:	e7d3      	b.n	8011ac2 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011b1a:	ebae 0100 	sub.w	r1, lr, r0
 8011b1e:	b289      	uxth	r1, r1
 8011b20:	4470      	add	r0, lr
 8011b22:	f1ba 0f00 	cmp.w	sl, #0
 8011b26:	b20f      	sxth	r7, r1
 8011b28:	b280      	uxth	r0, r0
 8011b2a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011b2e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8011b32:	da20      	bge.n	8011b76 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8011b34:	eba8 0505 	sub.w	r5, r8, r5
 8011b38:	2d00      	cmp	r5, #0
 8011b3a:	da21      	bge.n	8011b80 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011b3c:	fa1f f88e 	uxth.w	r8, lr
 8011b40:	fa1f f58a 	uxth.w	r5, sl
 8011b44:	4443      	add	r3, r8
 8011b46:	442a      	add	r2, r5
 8011b48:	f8ad e010 	strh.w	lr, [sp, #16]
 8011b4c:	1b40      	subs	r0, r0, r5
 8011b4e:	ebac 0e08 	sub.w	lr, ip, r8
 8011b52:	1a51      	subs	r1, r2, r1
 8011b54:	eba3 0c0c 	sub.w	ip, r3, ip
 8011b58:	f8ad a012 	strh.w	sl, [sp, #18]
 8011b5c:	f8ad e014 	strh.w	lr, [sp, #20]
 8011b60:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011b64:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011b68:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011b6c:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011b70:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011b74:	e7aa      	b.n	8011acc <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8011b76:	d003      	beq.n	8011b80 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011b78:	eba8 0505 	sub.w	r5, r8, r5
 8011b7c:	2d00      	cmp	r5, #0
 8011b7e:	dcdd      	bgt.n	8011b3c <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011b80:	fa1f f58e 	uxth.w	r5, lr
 8011b84:	fa1f f88a 	uxth.w	r8, sl
 8011b88:	4442      	add	r2, r8
 8011b8a:	442b      	add	r3, r5
 8011b8c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011b90:	1a51      	subs	r1, r2, r1
 8011b92:	ebac 0705 	sub.w	r7, ip, r5
 8011b96:	eba0 0008 	sub.w	r0, r0, r8
 8011b9a:	eba3 0c0c 	sub.w	ip, r3, ip
 8011b9e:	f8ad e010 	strh.w	lr, [sp, #16]
 8011ba2:	f8ad 7014 	strh.w	r7, [sp, #20]
 8011ba6:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011baa:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011bae:	f8ad a01a 	strh.w	sl, [sp, #26]
 8011bb2:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011bb6:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011bba:	e787      	b.n	8011acc <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011bbc <_ZN8touchgfx7CWRUtil4sineEi>:
 8011bbc:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011bc0:	fb90 f2f3 	sdiv	r2, r0, r3
 8011bc4:	fb02 0013 	mls	r0, r2, r3, r0
 8011bc8:	2800      	cmp	r0, #0
 8011bca:	bfb8      	it	lt
 8011bcc:	18c0      	addlt	r0, r0, r3
 8011bce:	285a      	cmp	r0, #90	; 0x5a
 8011bd0:	4b09      	ldr	r3, [pc, #36]	; (8011bf8 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8011bd2:	dc02      	bgt.n	8011bda <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8011bd4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011bd8:	4770      	bx	lr
 8011bda:	28b4      	cmp	r0, #180	; 0xb4
 8011bdc:	dc02      	bgt.n	8011be4 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011bde:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8011be2:	e7f7      	b.n	8011bd4 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8011be4:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011be8:	bfd4      	ite	le
 8011bea:	38b4      	suble	r0, #180	; 0xb4
 8011bec:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011bf0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011bf4:	4240      	negs	r0, r0
 8011bf6:	4770      	bx	lr
 8011bf8:	0802e9dc 	.word	0x0802e9dc

08011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011bfc:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8011c00:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011c02:	fb90 f2f3 	sdiv	r2, r0, r3
 8011c06:	fb02 0013 	mls	r0, r2, r3, r0
 8011c0a:	2800      	cmp	r0, #0
 8011c0c:	bfb8      	it	lt
 8011c0e:	18c0      	addlt	r0, r0, r3
 8011c10:	1144      	asrs	r4, r0, #5
 8011c12:	f000 061f 	and.w	r6, r0, #31
 8011c16:	4620      	mov	r0, r4
 8011c18:	f7ff ffd0 	bl	8011bbc <_ZN8touchgfx7CWRUtil4sineEi>
 8011c1c:	4605      	mov	r5, r0
 8011c1e:	b90e      	cbnz	r6, 8011c24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011c20:	b002      	add	sp, #8
 8011c22:	bd70      	pop	{r4, r5, r6, pc}
 8011c24:	1c60      	adds	r0, r4, #1
 8011c26:	f7ff ffc9 	bl	8011bbc <_ZN8touchgfx7CWRUtil4sineEi>
 8011c2a:	ab01      	add	r3, sp, #4
 8011c2c:	2220      	movs	r2, #32
 8011c2e:	4631      	mov	r1, r6
 8011c30:	1b40      	subs	r0, r0, r5
 8011c32:	f005 fb33 	bl	801729c <_ZN8touchgfx6muldivElllRl>
 8011c36:	4428      	add	r0, r5
 8011c38:	e7f2      	b.n	8011c20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011c3a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011c3a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011c3e:	bf2c      	ite	cs
 8011c40:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8011c44:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011c48:	2300      	movs	r3, #0
 8011c4a:	1899      	adds	r1, r3, r2
 8011c4c:	4288      	cmp	r0, r1
 8011c4e:	bf24      	itt	cs
 8011c50:	1853      	addcs	r3, r2, r1
 8011c52:	1a40      	subcs	r0, r0, r1
 8011c54:	0892      	lsrs	r2, r2, #2
 8011c56:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011c5a:	d1f6      	bne.n	8011c4a <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011c5c:	4618      	mov	r0, r3
 8011c5e:	4770      	bx	lr

08011c60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011c60:	b510      	push	{r4, lr}
 8011c62:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8011c66:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011c6a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011c6e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8011c72:	13a4      	asrs	r4, r4, #14
 8011c74:	139b      	asrs	r3, r3, #14
 8011c76:	429c      	cmp	r4, r3
 8011c78:	bfb8      	it	lt
 8011c7a:	461c      	movlt	r4, r3
 8011c7c:	2c01      	cmp	r4, #1
 8011c7e:	dd07      	ble.n	8011c90 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011c80:	fb91 f1f4 	sdiv	r1, r1, r4
 8011c84:	fb90 f0f4 	sdiv	r0, r0, r4
 8011c88:	f7ff ffea 	bl	8011c60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011c8c:	4360      	muls	r0, r4
 8011c8e:	bd10      	pop	{r4, pc}
 8011c90:	4340      	muls	r0, r0
 8011c92:	fb01 0001 	mla	r0, r1, r1, r0
 8011c96:	f7ff ffd0 	bl	8011c3a <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011c9a:	e7f8      	b.n	8011c8e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011c9c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011c9c:	2800      	cmp	r0, #0
 8011c9e:	b508      	push	{r3, lr}
 8011ca0:	da05      	bge.n	8011cae <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8011ca2:	4240      	negs	r0, r0
 8011ca4:	f7ff fffa 	bl	8011c9c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011ca8:	4240      	negs	r0, r0
 8011caa:	b240      	sxtb	r0, r0
 8011cac:	bd08      	pop	{r3, pc}
 8011cae:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8011cb2:	dc11      	bgt.n	8011cd8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8011cb4:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011cb8:	dd09      	ble.n	8011cce <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011cba:	4340      	muls	r0, r0
 8011cbc:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011cc0:	f7ff ffbb 	bl	8011c3a <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011cc4:	f7ff ffea 	bl	8011c9c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011cc8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011ccc:	e7ed      	b.n	8011caa <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8011cce:	3003      	adds	r0, #3
 8011cd0:	10c0      	asrs	r0, r0, #3
 8011cd2:	4b02      	ldr	r3, [pc, #8]	; (8011cdc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8011cd4:	5618      	ldrsb	r0, [r3, r0]
 8011cd6:	e7e9      	b.n	8011cac <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011cd8:	2000      	movs	r0, #0
 8011cda:	e7e7      	b.n	8011cac <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011cdc:	0802e980 	.word	0x0802e980

08011ce0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011ce0:	4281      	cmp	r1, r0
 8011ce2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011ce4:	460c      	mov	r4, r1
 8011ce6:	4615      	mov	r5, r2
 8011ce8:	dd07      	ble.n	8011cfa <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8011cea:	4601      	mov	r1, r0
 8011cec:	4620      	mov	r0, r4
 8011cee:	f7ff fff7 	bl	8011ce0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011cf2:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011cf6:	b003      	add	sp, #12
 8011cf8:	bd30      	pop	{r4, r5, pc}
 8011cfa:	f7ff ffb1 	bl	8011c60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011cfe:	6028      	str	r0, [r5, #0]
 8011d00:	2800      	cmp	r0, #0
 8011d02:	d0f8      	beq.n	8011cf6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8011d04:	4602      	mov	r2, r0
 8011d06:	ab01      	add	r3, sp, #4
 8011d08:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011d0c:	4620      	mov	r0, r4
 8011d0e:	f005 fac5 	bl	801729c <_ZN8touchgfx6muldivElllRl>
 8011d12:	f7ff ffc3 	bl	8011c9c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011d16:	e7ee      	b.n	8011cf6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011d18 <_ZN8touchgfx4LineC1Ev>:
 8011d18:	b510      	push	{r4, lr}
 8011d1a:	4604      	mov	r4, r0
 8011d1c:	f7ff fe0a 	bl	8011934 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011d20:	4b0c      	ldr	r3, [pc, #48]	; (8011d54 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8011d22:	6023      	str	r3, [r4, #0]
 8011d24:	2220      	movs	r2, #32
 8011d26:	2300      	movs	r3, #0
 8011d28:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011d2a:	2212      	movs	r2, #18
 8011d2c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8011d30:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8011d34:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011d38:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011d3c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8011d40:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8011d44:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011d48:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011d4c:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011d4e:	60a3      	str	r3, [r4, #8]
 8011d50:	4620      	mov	r0, r4
 8011d52:	bd10      	pop	{r4, pc}
 8011d54:	0802ea9c 	.word	0x0802ea9c

08011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011d58:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011d5c:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011d5e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011d60:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8011d62:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8011d64:	1aff      	subs	r7, r7, r3
 8011d66:	4604      	mov	r4, r0
 8011d68:	eba5 0502 	sub.w	r5, r5, r2
 8011d6c:	d142      	bne.n	8011df4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011d6e:	b955      	cbnz	r5, 8011d86 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011d70:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8011d74:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011d78:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011d7c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011d80:	b002      	add	sp, #8
 8011d82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011d86:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011d8a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011d8e:	4629      	mov	r1, r5
 8011d90:	4642      	mov	r2, r8
 8011d92:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011d94:	f005 faa1 	bl	80172da <_ZN8touchgfx6muldivElll>
 8011d98:	2502      	movs	r5, #2
 8011d9a:	4642      	mov	r2, r8
 8011d9c:	fb90 f6f5 	sdiv	r6, r0, r5
 8011da0:	4639      	mov	r1, r7
 8011da2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011da4:	f005 fa99 	bl	80172da <_ZN8touchgfx6muldivElll>
 8011da8:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011dac:	fb90 f5f5 	sdiv	r5, r0, r5
 8011db0:	f1b9 0f00 	cmp.w	r9, #0
 8011db4:	d067      	beq.n	8011e86 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8011db6:	f1b9 0f02 	cmp.w	r9, #2
 8011dba:	d878      	bhi.n	8011eae <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8011dbc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011dbe:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011dc0:	1b93      	subs	r3, r2, r6
 8011dc2:	1b5b      	subs	r3, r3, r5
 8011dc4:	6463      	str	r3, [r4, #68]	; 0x44
 8011dc6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011dc8:	18e9      	adds	r1, r5, r3
 8011dca:	1b89      	subs	r1, r1, r6
 8011dcc:	6561      	str	r1, [r4, #84]	; 0x54
 8011dce:	1b81      	subs	r1, r0, r6
 8011dd0:	4429      	add	r1, r5
 8011dd2:	64a1      	str	r1, [r4, #72]	; 0x48
 8011dd4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011dd6:	4430      	add	r0, r6
 8011dd8:	186f      	adds	r7, r5, r1
 8011dda:	4432      	add	r2, r6
 8011ddc:	1b49      	subs	r1, r1, r5
 8011dde:	4437      	add	r7, r6
 8011de0:	4428      	add	r0, r5
 8011de2:	4431      	add	r1, r6
 8011de4:	1b52      	subs	r2, r2, r5
 8011de6:	1b5b      	subs	r3, r3, r5
 8011de8:	65a7      	str	r7, [r4, #88]	; 0x58
 8011dea:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011dec:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011dee:	6522      	str	r2, [r4, #80]	; 0x50
 8011df0:	1b9b      	subs	r3, r3, r6
 8011df2:	e05b      	b.n	8011eac <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8011df4:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8011df8:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8011dfc:	2d00      	cmp	r5, #0
 8011dfe:	d0c6      	beq.n	8011d8e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011e00:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8011e04:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8011e08:	fb93 f2f8 	sdiv	r2, r3, r8
 8011e0c:	fb08 3312 	mls	r3, r8, r2, r3
 8011e10:	b353      	cbz	r3, 8011e68 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8011e12:	fb98 f2f3 	sdiv	r2, r8, r3
 8011e16:	fb03 8812 	mls	r8, r3, r2, r8
 8011e1a:	f1b8 0f00 	cmp.w	r8, #0
 8011e1e:	d1f3      	bne.n	8011e08 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8011e20:	2b01      	cmp	r3, #1
 8011e22:	bf1c      	itt	ne
 8011e24:	fb95 f5f3 	sdivne	r5, r5, r3
 8011e28:	fb97 f7f3 	sdivne	r7, r7, r3
 8011e2c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8011e30:	f24b 5104 	movw	r1, #46340	; 0xb504
 8011e34:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011e38:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011e3c:	428b      	cmp	r3, r1
 8011e3e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8011e42:	4608      	mov	r0, r1
 8011e44:	dd01      	ble.n	8011e4a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8011e46:	428a      	cmp	r2, r1
 8011e48:	dc10      	bgt.n	8011e6c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011e4a:	fb90 f3f3 	sdiv	r3, r0, r3
 8011e4e:	fb90 f2f2 	sdiv	r2, r0, r2
 8011e52:	4293      	cmp	r3, r2
 8011e54:	bfa8      	it	ge
 8011e56:	4613      	movge	r3, r2
 8011e58:	435f      	muls	r7, r3
 8011e5a:	435d      	muls	r5, r3
 8011e5c:	4629      	mov	r1, r5
 8011e5e:	4638      	mov	r0, r7
 8011e60:	f7ff fefe 	bl	8011c60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011e64:	4680      	mov	r8, r0
 8011e66:	e792      	b.n	8011d8e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011e68:	4643      	mov	r3, r8
 8011e6a:	e7d9      	b.n	8011e20 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011e6c:	fb93 f3f1 	sdiv	r3, r3, r1
 8011e70:	fb92 f2f1 	sdiv	r2, r2, r1
 8011e74:	4293      	cmp	r3, r2
 8011e76:	bfcc      	ite	gt
 8011e78:	3301      	addgt	r3, #1
 8011e7a:	1c53      	addle	r3, r2, #1
 8011e7c:	fb97 f7f3 	sdiv	r7, r7, r3
 8011e80:	fb95 f5f3 	sdiv	r5, r5, r3
 8011e84:	e7ea      	b.n	8011e5c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8011e86:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011e88:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011e8a:	1b93      	subs	r3, r2, r6
 8011e8c:	6463      	str	r3, [r4, #68]	; 0x44
 8011e8e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011e90:	18e9      	adds	r1, r5, r3
 8011e92:	6561      	str	r1, [r4, #84]	; 0x54
 8011e94:	1b81      	subs	r1, r0, r6
 8011e96:	64a1      	str	r1, [r4, #72]	; 0x48
 8011e98:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011e9a:	4430      	add	r0, r6
 8011e9c:	186f      	adds	r7, r5, r1
 8011e9e:	4432      	add	r2, r6
 8011ea0:	1b49      	subs	r1, r1, r5
 8011ea2:	65a7      	str	r7, [r4, #88]	; 0x58
 8011ea4:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011ea6:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011ea8:	6522      	str	r2, [r4, #80]	; 0x50
 8011eaa:	1b5b      	subs	r3, r3, r5
 8011eac:	6623      	str	r3, [r4, #96]	; 0x60
 8011eae:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8011eb0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8011eb2:	9200      	str	r2, [sp, #0]
 8011eb4:	9301      	str	r3, [sp, #4]
 8011eb6:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8011eba:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8011ebe:	680f      	ldr	r7, [r1, #0]
 8011ec0:	9800      	ldr	r0, [sp, #0]
 8011ec2:	42ba      	cmp	r2, r7
 8011ec4:	bfa8      	it	ge
 8011ec6:	463a      	movge	r2, r7
 8011ec8:	4287      	cmp	r7, r0
 8011eca:	bfc8      	it	gt
 8011ecc:	9700      	strgt	r7, [sp, #0]
 8011ece:	690f      	ldr	r7, [r1, #16]
 8011ed0:	9801      	ldr	r0, [sp, #4]
 8011ed2:	42bb      	cmp	r3, r7
 8011ed4:	bfa8      	it	ge
 8011ed6:	463b      	movge	r3, r7
 8011ed8:	3104      	adds	r1, #4
 8011eda:	4287      	cmp	r7, r0
 8011edc:	bfc8      	it	gt
 8011ede:	9701      	strgt	r7, [sp, #4]
 8011ee0:	458c      	cmp	ip, r1
 8011ee2:	d1ec      	bne.n	8011ebe <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8011ee4:	4668      	mov	r0, sp
 8011ee6:	2720      	movs	r7, #32
 8011ee8:	fb92 f8f7 	sdiv	r8, r2, r7
 8011eec:	fb93 f7f7 	sdiv	r7, r3, r7
 8011ef0:	f7ff fd57 	bl	80119a2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011ef4:	4682      	mov	sl, r0
 8011ef6:	a801      	add	r0, sp, #4
 8011ef8:	f7ff fd53 	bl	80119a2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011efc:	ebaa 0208 	sub.w	r2, sl, r8
 8011f00:	1bc0      	subs	r0, r0, r7
 8011f02:	f1b9 0f01 	cmp.w	r9, #1
 8011f06:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8011f0a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8011f0e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8011f12:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8011f16:	f47f af33 	bne.w	8011d80 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011f1a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011f1c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011f1e:	1b83      	subs	r3, r0, r6
 8011f20:	6463      	str	r3, [r4, #68]	; 0x44
 8011f22:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011f24:	18ea      	adds	r2, r5, r3
 8011f26:	6562      	str	r2, [r4, #84]	; 0x54
 8011f28:	1b8a      	subs	r2, r1, r6
 8011f2a:	64a2      	str	r2, [r4, #72]	; 0x48
 8011f2c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011f2e:	4431      	add	r1, r6
 8011f30:	18af      	adds	r7, r5, r2
 8011f32:	4406      	add	r6, r0
 8011f34:	1b52      	subs	r2, r2, r5
 8011f36:	1b5d      	subs	r5, r3, r5
 8011f38:	65a7      	str	r7, [r4, #88]	; 0x58
 8011f3a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011f3c:	65e2      	str	r2, [r4, #92]	; 0x5c
 8011f3e:	6526      	str	r6, [r4, #80]	; 0x50
 8011f40:	6625      	str	r5, [r4, #96]	; 0x60
 8011f42:	e71d      	b.n	8011d80 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08011f44 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8011f44:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011f46:	428b      	cmp	r3, r1
 8011f48:	d102      	bne.n	8011f50 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011f4a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011f4c:	4293      	cmp	r3, r2
 8011f4e:	d003      	beq.n	8011f58 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011f50:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8011f54:	f7ff bf00 	b.w	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011f58:	4770      	bx	lr

08011f5a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011f5a:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011f5c:	428b      	cmp	r3, r1
 8011f5e:	d102      	bne.n	8011f66 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011f60:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8011f62:	4293      	cmp	r3, r2
 8011f64:	d003      	beq.n	8011f6e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8011f66:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011f6a:	f7ff bef5 	b.w	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011f6e:	4770      	bx	lr

08011f70 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011f70:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8011f74:	f7ff bef0 	b.w	8011d58 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011f78 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011f78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f7c:	b0a0      	sub	sp, #128	; 0x80
 8011f7e:	4604      	mov	r4, r0
 8011f80:	460a      	mov	r2, r1
 8011f82:	4601      	mov	r1, r0
 8011f84:	a804      	add	r0, sp, #16
 8011f86:	f015 f845 	bl	8027014 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011f8a:	2300      	movs	r3, #0
 8011f8c:	9301      	str	r3, [sp, #4]
 8011f8e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8011f92:	2b01      	cmp	r3, #1
 8011f94:	d17c      	bne.n	8012090 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8011f96:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011f98:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011f9a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011f9c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011f9e:	1ac0      	subs	r0, r0, r3
 8011fa0:	eba1 0102 	sub.w	r1, r1, r2
 8011fa4:	d437      	bmi.n	8012016 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8011fa6:	2900      	cmp	r1, #0
 8011fa8:	aa01      	add	r2, sp, #4
 8011faa:	db2e      	blt.n	801200a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8011fac:	f7ff fe98 	bl	8011ce0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011fb0:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8011fb4:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8011fb6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011fb8:	a804      	add	r0, sp, #16
 8011fba:	f015 f9ab 	bl	8027314 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011fbe:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011fc0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011fc2:	a804      	add	r0, sp, #16
 8011fc4:	f015 f9f3 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011fc8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011fca:	2db3      	cmp	r5, #179	; 0xb3
 8011fcc:	dc33      	bgt.n	8012036 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8011fce:	eba6 0805 	sub.w	r8, r6, r5
 8011fd2:	4640      	mov	r0, r8
 8011fd4:	f7ff fdf2 	bl	8011bbc <_ZN8touchgfx7CWRUtil4sineEi>
 8011fd8:	a902      	add	r1, sp, #8
 8011fda:	9002      	str	r0, [sp, #8]
 8011fdc:	a801      	add	r0, sp, #4
 8011fde:	f7ff fcd5 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011fe2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011fe4:	1847      	adds	r7, r0, r1
 8011fe6:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011fea:	f7ff fde7 	bl	8011bbc <_ZN8touchgfx7CWRUtil4sineEi>
 8011fee:	a903      	add	r1, sp, #12
 8011ff0:	9003      	str	r0, [sp, #12]
 8011ff2:	a801      	add	r0, sp, #4
 8011ff4:	f7ff fcca 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011ff8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011ffa:	4639      	mov	r1, r7
 8011ffc:	1a12      	subs	r2, r2, r0
 8011ffe:	a804      	add	r0, sp, #16
 8012000:	f015 f9d5 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012004:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012006:	441d      	add	r5, r3
 8012008:	e7df      	b.n	8011fca <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 801200a:	4249      	negs	r1, r1
 801200c:	f7ff fe68 	bl	8011ce0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012010:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8012014:	e7ce      	b.n	8011fb4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012016:	2900      	cmp	r1, #0
 8012018:	f1c0 0000 	rsb	r0, r0, #0
 801201c:	aa01      	add	r2, sp, #4
 801201e:	db04      	blt.n	801202a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012020:	f7ff fe5e 	bl	8011ce0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012024:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012028:	e7c4      	b.n	8011fb4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801202a:	4249      	negs	r1, r1
 801202c:	f7ff fe58 	bl	8011ce0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012030:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8012034:	e7be      	b.n	8011fb4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012036:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012038:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 801203a:	a804      	add	r0, sp, #16
 801203c:	f015 f9b7 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012040:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012042:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012044:	a804      	add	r0, sp, #16
 8012046:	f015 f9b2 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801204a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 801204c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012050:	2d00      	cmp	r5, #0
 8012052:	dd31      	ble.n	80120b8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8012054:	eb05 0806 	add.w	r8, r5, r6
 8012058:	4640      	mov	r0, r8
 801205a:	f7ff fdaf 	bl	8011bbc <_ZN8touchgfx7CWRUtil4sineEi>
 801205e:	a902      	add	r1, sp, #8
 8012060:	9002      	str	r0, [sp, #8]
 8012062:	a801      	add	r0, sp, #4
 8012064:	f7ff fc92 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012068:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801206a:	1847      	adds	r7, r0, r1
 801206c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012070:	f7ff fda4 	bl	8011bbc <_ZN8touchgfx7CWRUtil4sineEi>
 8012074:	a903      	add	r1, sp, #12
 8012076:	9003      	str	r0, [sp, #12]
 8012078:	a801      	add	r0, sp, #4
 801207a:	f7ff fc87 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801207e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012080:	4639      	mov	r1, r7
 8012082:	1a12      	subs	r2, r2, r0
 8012084:	a804      	add	r0, sp, #16
 8012086:	f015 f992 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801208a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801208c:	1aed      	subs	r5, r5, r3
 801208e:	e7df      	b.n	8012050 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012090:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012092:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012094:	a804      	add	r0, sp, #16
 8012096:	f015 f93d 	bl	8027314 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801209a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801209c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801209e:	a804      	add	r0, sp, #16
 80120a0:	f015 f985 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80120a4:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80120a6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80120a8:	a804      	add	r0, sp, #16
 80120aa:	f015 f980 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80120ae:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80120b0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80120b2:	a804      	add	r0, sp, #16
 80120b4:	f015 f97b 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80120b8:	21ff      	movs	r1, #255	; 0xff
 80120ba:	a804      	add	r0, sp, #16
 80120bc:	f015 f866 	bl	802718c <_ZN8touchgfx6Canvas6renderEh>
 80120c0:	4b04      	ldr	r3, [pc, #16]	; (80120d4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80120c2:	9304      	str	r3, [sp, #16]
 80120c4:	4604      	mov	r4, r0
 80120c6:	a80c      	add	r0, sp, #48	; 0x30
 80120c8:	f001 fa98 	bl	80135fc <_ZN8touchgfx7OutlineD1Ev>
 80120cc:	4620      	mov	r0, r4
 80120ce:	b020      	add	sp, #128	; 0x80
 80120d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80120d4:	0802f348 	.word	0x0802f348

080120d8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80120d8:	2000      	movs	r0, #0
 80120da:	4770      	bx	lr

080120dc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80120dc:	4b07      	ldr	r3, [pc, #28]	; (80120fc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80120de:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80120e0:	881b      	ldrh	r3, [r3, #0]
 80120e2:	4293      	cmp	r3, r2
 80120e4:	bf81      	itttt	hi
 80120e6:	4b06      	ldrhi	r3, [pc, #24]	; (8012100 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80120e8:	681b      	ldrhi	r3, [r3, #0]
 80120ea:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80120ee:	7858      	ldrbhi	r0, [r3, #1]
 80120f0:	bf8c      	ite	hi
 80120f2:	f000 0003 	andhi.w	r0, r0, #3
 80120f6:	2000      	movls	r0, #0
 80120f8:	4770      	bx	lr
 80120fa:	bf00      	nop
 80120fc:	20013318 	.word	0x20013318
 8012100:	20013314 	.word	0x20013314

08012104 <_ZN8touchgfx8TextAreaD1Ev>:
 8012104:	4770      	bx	lr
	...

08012108 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012108:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801210c:	4b10      	ldr	r3, [pc, #64]	; (8012150 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801210e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012110:	881b      	ldrh	r3, [r3, #0]
 8012112:	428b      	cmp	r3, r1
 8012114:	4604      	mov	r4, r0
 8012116:	d918      	bls.n	801214a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012118:	6803      	ldr	r3, [r0, #0]
 801211a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 801211c:	4b0d      	ldr	r3, [pc, #52]	; (8012154 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801211e:	6818      	ldr	r0, [r3, #0]
 8012120:	f7f5 feea 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8012124:	6823      	ldr	r3, [r4, #0]
 8012126:	4606      	mov	r6, r0
 8012128:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801212a:	4620      	mov	r0, r4
 801212c:	4798      	blx	r3
 801212e:	6823      	ldr	r3, [r4, #0]
 8012130:	4607      	mov	r7, r0
 8012132:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012136:	4620      	mov	r0, r4
 8012138:	4798      	blx	r3
 801213a:	463a      	mov	r2, r7
 801213c:	4603      	mov	r3, r0
 801213e:	4631      	mov	r1, r6
 8012140:	4620      	mov	r0, r4
 8012142:	46ac      	mov	ip, r5
 8012144:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012148:	4760      	bx	ip
 801214a:	2000      	movs	r0, #0
 801214c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012150:	20013318 	.word	0x20013318
 8012154:	20013320 	.word	0x20013320

08012158 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012158:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801215c:	4b17      	ldr	r3, [pc, #92]	; (80121bc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801215e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012160:	881b      	ldrh	r3, [r3, #0]
 8012162:	428b      	cmp	r3, r1
 8012164:	4604      	mov	r4, r0
 8012166:	d926      	bls.n	80121b6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012168:	4b15      	ldr	r3, [pc, #84]	; (80121c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801216a:	681b      	ldr	r3, [r3, #0]
 801216c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012170:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8012174:	4b13      	ldr	r3, [pc, #76]	; (80121c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8012176:	7855      	ldrb	r5, [r2, #1]
 8012178:	681b      	ldr	r3, [r3, #0]
 801217a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801217e:	6833      	ldr	r3, [r6, #0]
 8012180:	69df      	ldr	r7, [r3, #28]
 8012182:	4b11      	ldr	r3, [pc, #68]	; (80121c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8012184:	6818      	ldr	r0, [r3, #0]
 8012186:	f7f5 feb7 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 801218a:	6823      	ldr	r3, [r4, #0]
 801218c:	4680      	mov	r8, r0
 801218e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012190:	4620      	mov	r0, r4
 8012192:	4798      	blx	r3
 8012194:	6823      	ldr	r3, [r4, #0]
 8012196:	4681      	mov	r9, r0
 8012198:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801219c:	4620      	mov	r0, r4
 801219e:	4798      	blx	r3
 80121a0:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80121a4:	9000      	str	r0, [sp, #0]
 80121a6:	464b      	mov	r3, r9
 80121a8:	4642      	mov	r2, r8
 80121aa:	4629      	mov	r1, r5
 80121ac:	4630      	mov	r0, r6
 80121ae:	47b8      	blx	r7
 80121b0:	b003      	add	sp, #12
 80121b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80121b6:	2000      	movs	r0, #0
 80121b8:	e7fa      	b.n	80121b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80121ba:	bf00      	nop
 80121bc:	20013318 	.word	0x20013318
 80121c0:	20013314 	.word	0x20013314
 80121c4:	2001331c 	.word	0x2001331c
 80121c8:	20013320 	.word	0x20013320

080121cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80121cc:	b40e      	push	{r1, r2, r3}
 80121ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80121d2:	4b2f      	ldr	r3, [pc, #188]	; (8012290 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80121d4:	881a      	ldrh	r2, [r3, #0]
 80121d6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80121d8:	429a      	cmp	r2, r3
 80121da:	b09d      	sub	sp, #116	; 0x74
 80121dc:	4604      	mov	r4, r0
 80121de:	d954      	bls.n	801228a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80121e0:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8012294 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80121e4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012298 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80121e8:	aa26      	add	r2, sp, #152	; 0x98
 80121ea:	9202      	str	r2, [sp, #8]
 80121ec:	f8d9 2000 	ldr.w	r2, [r9]
 80121f0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80121f4:	f8d8 3000 	ldr.w	r3, [r8]
 80121f8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80121fc:	682b      	ldr	r3, [r5, #0]
 80121fe:	4628      	mov	r0, r5
 8012200:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012202:	4798      	blx	r3
 8012204:	b207      	sxth	r7, r0
 8012206:	4606      	mov	r6, r0
 8012208:	a803      	add	r0, sp, #12
 801220a:	f005 fc61 	bl	8017ad0 <_ZN8touchgfx12TextProviderC1Ev>
 801220e:	682b      	ldr	r3, [r5, #0]
 8012210:	4628      	mov	r0, r5
 8012212:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012214:	4798      	blx	r3
 8012216:	682b      	ldr	r3, [r5, #0]
 8012218:	4682      	mov	sl, r0
 801221a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801221c:	4628      	mov	r0, r5
 801221e:	4798      	blx	r3
 8012220:	4653      	mov	r3, sl
 8012222:	9000      	str	r0, [sp, #0]
 8012224:	9a02      	ldr	r2, [sp, #8]
 8012226:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012228:	a803      	add	r0, sp, #12
 801222a:	f005 fcac 	bl	8017b86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801222e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012230:	f8d9 3000 	ldr.w	r3, [r9]
 8012234:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012238:	8925      	ldrh	r5, [r4, #8]
 801223a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801223e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8012242:	eba5 050c 	sub.w	r5, r5, ip
 8012246:	784a      	ldrb	r2, [r1, #1]
 8012248:	f8d8 3000 	ldr.w	r3, [r8]
 801224c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012250:	b22d      	sxth	r5, r5
 8012252:	9500      	str	r5, [sp, #0]
 8012254:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012258:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801225c:	a803      	add	r0, sp, #12
 801225e:	f003 f8b9 	bl	80153d4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8012262:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8012266:	18b9      	adds	r1, r7, r2
 8012268:	2900      	cmp	r1, #0
 801226a:	b203      	sxth	r3, r0
 801226c:	dd0b      	ble.n	8012286 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801226e:	3b01      	subs	r3, #1
 8012270:	fb13 f302 	smulbb	r3, r3, r2
 8012274:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012278:	b21f      	sxth	r7, r3
 801227a:	4638      	mov	r0, r7
 801227c:	b01d      	add	sp, #116	; 0x74
 801227e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012282:	b003      	add	sp, #12
 8012284:	4770      	bx	lr
 8012286:	2b00      	cmp	r3, #0
 8012288:	dcf7      	bgt.n	801227a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801228a:	2700      	movs	r7, #0
 801228c:	e7f5      	b.n	801227a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801228e:	bf00      	nop
 8012290:	20013318 	.word	0x20013318
 8012294:	20013314 	.word	0x20013314
 8012298:	2001331c 	.word	0x2001331c

0801229c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801229c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122a0:	4bbc      	ldr	r3, [pc, #752]	; (8012594 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80122a2:	460c      	mov	r4, r1
 80122a4:	881b      	ldrh	r3, [r3, #0]
 80122a6:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80122a8:	428b      	cmp	r3, r1
 80122aa:	b0a9      	sub	sp, #164	; 0xa4
 80122ac:	4680      	mov	r8, r0
 80122ae:	d809      	bhi.n	80122c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80122b0:	2300      	movs	r3, #0
 80122b2:	f04f 32ff 	mov.w	r2, #4294967295
 80122b6:	e9c0 3200 	strd	r3, r2, [r0]
 80122ba:	6083      	str	r3, [r0, #8]
 80122bc:	4640      	mov	r0, r8
 80122be:	b029      	add	sp, #164	; 0xa4
 80122c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122c4:	4eb4      	ldr	r6, [pc, #720]	; (8012598 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80122c6:	6833      	ldr	r3, [r6, #0]
 80122c8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80122cc:	4bb3      	ldr	r3, [pc, #716]	; (801259c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80122ce:	681b      	ldr	r3, [r3, #0]
 80122d0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80122d4:	4bb2      	ldr	r3, [pc, #712]	; (80125a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80122d6:	6818      	ldr	r0, [r3, #0]
 80122d8:	f7f5 fe0e 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 80122dc:	682b      	ldr	r3, [r5, #0]
 80122de:	4681      	mov	r9, r0
 80122e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80122e2:	4628      	mov	r0, r5
 80122e4:	4798      	blx	r3
 80122e6:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80122e8:	b203      	sxth	r3, r0
 80122ea:	4407      	add	r7, r0
 80122ec:	9304      	str	r3, [sp, #16]
 80122ee:	b2bb      	uxth	r3, r7
 80122f0:	9303      	str	r3, [sp, #12]
 80122f2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80122f6:	4682      	mov	sl, r0
 80122f8:	a80f      	add	r0, sp, #60	; 0x3c
 80122fa:	2b00      	cmp	r3, #0
 80122fc:	f040 80a6 	bne.w	801244c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012300:	f005 fbe6 	bl	8017ad0 <_ZN8touchgfx12TextProviderC1Ev>
 8012304:	682b      	ldr	r3, [r5, #0]
 8012306:	4628      	mov	r0, r5
 8012308:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801230a:	4798      	blx	r3
 801230c:	682b      	ldr	r3, [r5, #0]
 801230e:	4606      	mov	r6, r0
 8012310:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012312:	4628      	mov	r0, r5
 8012314:	4798      	blx	r3
 8012316:	6823      	ldr	r3, [r4, #0]
 8012318:	4607      	mov	r7, r0
 801231a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801231c:	4620      	mov	r0, r4
 801231e:	4798      	blx	r3
 8012320:	6823      	ldr	r3, [r4, #0]
 8012322:	4683      	mov	fp, r0
 8012324:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012328:	4620      	mov	r0, r4
 801232a:	4798      	blx	r3
 801232c:	463b      	mov	r3, r7
 801232e:	e9cd b000 	strd	fp, r0, [sp]
 8012332:	4649      	mov	r1, r9
 8012334:	4632      	mov	r2, r6
 8012336:	a80f      	add	r0, sp, #60	; 0x3c
 8012338:	f005 fc3a 	bl	8017bb0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801233c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012340:	f8df b254 	ldr.w	fp, [pc, #596]	; 8012598 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8012344:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012348:	f04f 0600 	mov.w	r6, #0
 801234c:	bf0c      	ite	eq
 801234e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8012352:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8012356:	4637      	mov	r7, r6
 8012358:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801235a:	f8db 3000 	ldr.w	r3, [fp]
 801235e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012362:	4629      	mov	r1, r5
 8012364:	785b      	ldrb	r3, [r3, #1]
 8012366:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801236a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801236e:	a80f      	add	r0, sp, #60	; 0x3c
 8012370:	f002 fd4b 	bl	8014e0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012374:	9b03      	ldr	r3, [sp, #12]
 8012376:	4286      	cmp	r6, r0
 8012378:	bfb8      	it	lt
 801237a:	4606      	movlt	r6, r0
 801237c:	3701      	adds	r7, #1
 801237e:	eba9 0903 	sub.w	r9, r9, r3
 8012382:	a80f      	add	r0, sp, #60	; 0x3c
 8012384:	b236      	sxth	r6, r6
 8012386:	b2bf      	uxth	r7, r7
 8012388:	fa0f f989 	sxth.w	r9, r9
 801238c:	f005 fbc7 	bl	8017b1e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012390:	b918      	cbnz	r0, 801239a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012392:	7a2b      	ldrb	r3, [r5, #8]
 8012394:	444b      	add	r3, r9
 8012396:	2b00      	cmp	r3, #0
 8012398:	dcde      	bgt.n	8012358 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801239a:	9b03      	ldr	r3, [sp, #12]
 801239c:	9a04      	ldr	r2, [sp, #16]
 801239e:	f895 9009 	ldrb.w	r9, [r5, #9]
 80123a2:	fb13 f707 	smulbb	r7, r3, r7
 80123a6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80123a8:	1aff      	subs	r7, r7, r3
 80123aa:	b2bf      	uxth	r7, r7
 80123ac:	b23b      	sxth	r3, r7
 80123ae:	429a      	cmp	r2, r3
 80123b0:	bfa8      	it	ge
 80123b2:	4657      	movge	r7, sl
 80123b4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80123b8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80123bc:	6823      	ldr	r3, [r4, #0]
 80123be:	bf08      	it	eq
 80123c0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80123c4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80123c6:	bf18      	it	ne
 80123c8:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80123cc:	4620      	mov	r0, r4
 80123ce:	4798      	blx	r3
 80123d0:	444f      	add	r7, r9
 80123d2:	fa1f f987 	uxth.w	r9, r7
 80123d6:	2801      	cmp	r0, #1
 80123d8:	fa0f f789 	sxth.w	r7, r9
 80123dc:	b2b3      	uxth	r3, r6
 80123de:	f000 80e1 	beq.w	80125a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80123e2:	2802      	cmp	r0, #2
 80123e4:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80123e8:	f000 80e2 	beq.w	80125b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80123ec:	7aea      	ldrb	r2, [r5, #11]
 80123ee:	7b2d      	ldrb	r5, [r5, #12]
 80123f0:	b236      	sxth	r6, r6
 80123f2:	1ab6      	subs	r6, r6, r2
 80123f4:	442a      	add	r2, r5
 80123f6:	4413      	add	r3, r2
 80123f8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80123fc:	fa1f fa86 	uxth.w	sl, r6
 8012400:	b29b      	uxth	r3, r3
 8012402:	2a02      	cmp	r2, #2
 8012404:	fa0f fb8a 	sxth.w	fp, sl
 8012408:	b21e      	sxth	r6, r3
 801240a:	f000 80d5 	beq.w	80125b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801240e:	2a03      	cmp	r2, #3
 8012410:	f000 80dd 	beq.w	80125ce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8012414:	2a01      	cmp	r2, #1
 8012416:	f040 80e5 	bne.w	80125e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801241a:	8925      	ldrh	r5, [r4, #8]
 801241c:	4633      	mov	r3, r6
 801241e:	eba5 0909 	sub.w	r9, r5, r9
 8012422:	463e      	mov	r6, r7
 8012424:	465d      	mov	r5, fp
 8012426:	461f      	mov	r7, r3
 8012428:	fa0f fb89 	sxth.w	fp, r9
 801242c:	4b5c      	ldr	r3, [pc, #368]	; (80125a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801242e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012430:	6818      	ldr	r0, [r3, #0]
 8012432:	f7f5 fd61 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8012436:	f8a8 b000 	strh.w	fp, [r8]
 801243a:	f8a8 5002 	strh.w	r5, [r8, #2]
 801243e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8012442:	f8a8 7006 	strh.w	r7, [r8, #6]
 8012446:	f8c8 0008 	str.w	r0, [r8, #8]
 801244a:	e737      	b.n	80122bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801244c:	f005 fb40 	bl	8017ad0 <_ZN8touchgfx12TextProviderC1Ev>
 8012450:	682b      	ldr	r3, [r5, #0]
 8012452:	4628      	mov	r0, r5
 8012454:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012456:	4798      	blx	r3
 8012458:	682b      	ldr	r3, [r5, #0]
 801245a:	4607      	mov	r7, r0
 801245c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801245e:	4628      	mov	r0, r5
 8012460:	4798      	blx	r3
 8012462:	6823      	ldr	r3, [r4, #0]
 8012464:	4683      	mov	fp, r0
 8012466:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012468:	4620      	mov	r0, r4
 801246a:	4798      	blx	r3
 801246c:	6822      	ldr	r2, [r4, #0]
 801246e:	9005      	str	r0, [sp, #20]
 8012470:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8012474:	4620      	mov	r0, r4
 8012476:	4790      	blx	r2
 8012478:	9b05      	ldr	r3, [sp, #20]
 801247a:	9001      	str	r0, [sp, #4]
 801247c:	463a      	mov	r2, r7
 801247e:	4649      	mov	r1, r9
 8012480:	9300      	str	r3, [sp, #0]
 8012482:	a80f      	add	r0, sp, #60	; 0x3c
 8012484:	465b      	mov	r3, fp
 8012486:	f005 fb93 	bl	8017bb0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801248a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801248e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8012492:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012494:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012498:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801249c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80124a0:	bf0a      	itet	eq
 80124a2:	464a      	moveq	r2, r9
 80124a4:	461a      	movne	r2, r3
 80124a6:	4699      	moveq	r9, r3
 80124a8:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80124ac:	1ad2      	subs	r2, r2, r3
 80124ae:	6833      	ldr	r3, [r6, #0]
 80124b0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80124b4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80124b8:	af0f      	add	r7, sp, #60	; 0x3c
 80124ba:	7859      	ldrb	r1, [r3, #1]
 80124bc:	9707      	str	r7, [sp, #28]
 80124be:	2300      	movs	r3, #0
 80124c0:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80124c4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80124c8:	f88d 1020 	strb.w	r1, [sp, #32]
 80124cc:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80124d0:	9509      	str	r5, [sp, #36]	; 0x24
 80124d2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80124d6:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80124da:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80124de:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80124e2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80124e6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80124ea:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80124ee:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80124f2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80124f6:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80124fa:	b350      	cbz	r0, 8012552 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80124fc:	682b      	ldr	r3, [r5, #0]
 80124fe:	4628      	mov	r0, r5
 8012500:	695b      	ldr	r3, [r3, #20]
 8012502:	4798      	blx	r3
 8012504:	4607      	mov	r7, r0
 8012506:	b320      	cbz	r0, 8012552 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012508:	9809      	ldr	r0, [sp, #36]	; 0x24
 801250a:	6803      	ldr	r3, [r0, #0]
 801250c:	4639      	mov	r1, r7
 801250e:	68db      	ldr	r3, [r3, #12]
 8012510:	4798      	blx	r3
 8012512:	4606      	mov	r6, r0
 8012514:	b1e8      	cbz	r0, 8012552 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012516:	7b43      	ldrb	r3, [r0, #13]
 8012518:	7a82      	ldrb	r2, [r0, #10]
 801251a:	005b      	lsls	r3, r3, #1
 801251c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012520:	4313      	orrs	r3, r2
 8012522:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012526:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801252a:	2b06      	cmp	r3, #6
 801252c:	d111      	bne.n	8012552 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801252e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012530:	6803      	ldr	r3, [r0, #0]
 8012532:	4632      	mov	r2, r6
 8012534:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012536:	4639      	mov	r1, r7
 8012538:	4798      	blx	r3
 801253a:	7b73      	ldrb	r3, [r6, #13]
 801253c:	005b      	lsls	r3, r3, #1
 801253e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012542:	7ab3      	ldrb	r3, [r6, #10]
 8012544:	4313      	orrs	r3, r2
 8012546:	4418      	add	r0, r3
 8012548:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801254c:	4418      	add	r0, r3
 801254e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8012552:	2600      	movs	r6, #0
 8012554:	4637      	mov	r7, r6
 8012556:	a806      	add	r0, sp, #24
 8012558:	f002 fe38 	bl	80151cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801255c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8012560:	9b03      	ldr	r3, [sp, #12]
 8012562:	4286      	cmp	r6, r0
 8012564:	eba9 0903 	sub.w	r9, r9, r3
 8012568:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801256c:	bfb8      	it	lt
 801256e:	4606      	movlt	r6, r0
 8012570:	3701      	adds	r7, #1
 8012572:	b236      	sxth	r6, r6
 8012574:	b2bf      	uxth	r7, r7
 8012576:	fa0f f989 	sxth.w	r9, r9
 801257a:	2b00      	cmp	r3, #0
 801257c:	f43f af0d 	beq.w	801239a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012580:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8012584:	2b00      	cmp	r3, #0
 8012586:	f47f af08 	bne.w	801239a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801258a:	7a2b      	ldrb	r3, [r5, #8]
 801258c:	444b      	add	r3, r9
 801258e:	2b00      	cmp	r3, #0
 8012590:	dce1      	bgt.n	8012556 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8012592:	e702      	b.n	801239a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012594:	20013318 	.word	0x20013318
 8012598:	20013314 	.word	0x20013314
 801259c:	2001331c 	.word	0x2001331c
 80125a0:	20013320 	.word	0x20013320
 80125a4:	ebaa 0606 	sub.w	r6, sl, r6
 80125a8:	2002      	movs	r0, #2
 80125aa:	fb96 f6f0 	sdiv	r6, r6, r0
 80125ae:	e71d      	b.n	80123ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80125b0:	441e      	add	r6, r3
 80125b2:	ebaa 0606 	sub.w	r6, sl, r6
 80125b6:	e719      	b.n	80123ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80125b8:	8925      	ldrh	r5, [r4, #8]
 80125ba:	1aed      	subs	r5, r5, r3
 80125bc:	eba5 050a 	sub.w	r5, r5, sl
 80125c0:	fa0f fb85 	sxth.w	fp, r5
 80125c4:	8965      	ldrh	r5, [r4, #10]
 80125c6:	eba5 0509 	sub.w	r5, r5, r9
 80125ca:	b22d      	sxth	r5, r5
 80125cc:	e72e      	b.n	801242c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80125ce:	8965      	ldrh	r5, [r4, #10]
 80125d0:	1aed      	subs	r5, r5, r3
 80125d2:	eba5 050a 	sub.w	r5, r5, sl
 80125d6:	4633      	mov	r3, r6
 80125d8:	b22d      	sxth	r5, r5
 80125da:	463e      	mov	r6, r7
 80125dc:	f04f 0b00 	mov.w	fp, #0
 80125e0:	461f      	mov	r7, r3
 80125e2:	e723      	b.n	801242c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80125e4:	2500      	movs	r5, #0
 80125e6:	e721      	b.n	801242c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080125e8 <_ZN8touchgfx8TextAreaD0Ev>:
 80125e8:	b510      	push	{r4, lr}
 80125ea:	2148      	movs	r1, #72	; 0x48
 80125ec:	4604      	mov	r4, r0
 80125ee:	f017 fc54 	bl	8029e9a <_ZdlPvj>
 80125f2:	4620      	mov	r0, r4
 80125f4:	bd10      	pop	{r4, pc}
	...

080125f8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80125f8:	b513      	push	{r0, r1, r4, lr}
 80125fa:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80125fe:	4604      	mov	r4, r0
 8012600:	b1fb      	cbz	r3, 8012642 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012602:	4b16      	ldr	r3, [pc, #88]	; (801265c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8012604:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012606:	881b      	ldrh	r3, [r3, #0]
 8012608:	428b      	cmp	r3, r1
 801260a:	d91a      	bls.n	8012642 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801260c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012610:	2b00      	cmp	r3, #0
 8012612:	dd16      	ble.n	8012642 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012614:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012618:	2b00      	cmp	r3, #0
 801261a:	dd12      	ble.n	8012642 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801261c:	4b10      	ldr	r3, [pc, #64]	; (8012660 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801261e:	6818      	ldr	r0, [r3, #0]
 8012620:	f7f5 fc6a 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8012624:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012628:	6822      	ldr	r2, [r4, #0]
 801262a:	2b00      	cmp	r3, #0
 801262c:	db06      	blt.n	801263c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801262e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012632:	2b00      	cmp	r3, #0
 8012634:	db02      	blt.n	801263c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012636:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012638:	4298      	cmp	r0, r3
 801263a:	d004      	beq.n	8012646 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801263c:	6953      	ldr	r3, [r2, #20]
 801263e:	4620      	mov	r0, r4
 8012640:	4798      	blx	r3
 8012642:	b002      	add	sp, #8
 8012644:	bd10      	pop	{r4, pc}
 8012646:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801264a:	c903      	ldmia	r1, {r0, r1}
 801264c:	466b      	mov	r3, sp
 801264e:	e883 0003 	stmia.w	r3, {r0, r1}
 8012652:	6912      	ldr	r2, [r2, #16]
 8012654:	4619      	mov	r1, r3
 8012656:	4620      	mov	r0, r4
 8012658:	4790      	blx	r2
 801265a:	e7f2      	b.n	8012642 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801265c:	20013318 	.word	0x20013318
 8012660:	20013320 	.word	0x20013320

08012664 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8012664:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012668:	4b44      	ldr	r3, [pc, #272]	; (801277c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801266a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801266c:	881b      	ldrh	r3, [r3, #0]
 801266e:	4293      	cmp	r3, r2
 8012670:	b08e      	sub	sp, #56	; 0x38
 8012672:	4604      	mov	r4, r0
 8012674:	d97e      	bls.n	8012774 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012676:	6808      	ldr	r0, [r1, #0]
 8012678:	4d41      	ldr	r5, [pc, #260]	; (8012780 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801267a:	6849      	ldr	r1, [r1, #4]
 801267c:	ab05      	add	r3, sp, #20
 801267e:	c303      	stmia	r3!, {r0, r1}
 8012680:	4611      	mov	r1, r2
 8012682:	6828      	ldr	r0, [r5, #0]
 8012684:	f7f5 fc38 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8012688:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801268c:	2b00      	cmp	r3, #0
 801268e:	db11      	blt.n	80126b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012690:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012694:	2b00      	cmp	r3, #0
 8012696:	db0d      	blt.n	80126b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012698:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801269a:	4298      	cmp	r0, r3
 801269c:	d10a      	bne.n	80126b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801269e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80126a2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80126a6:	ab09      	add	r3, sp, #36	; 0x24
 80126a8:	e883 0003 	stmia.w	r3, {r0, r1}
 80126ac:	4619      	mov	r1, r3
 80126ae:	a805      	add	r0, sp, #20
 80126b0:	f7fd fbec 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 80126b4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80126b8:	2b00      	cmp	r3, #0
 80126ba:	dd5b      	ble.n	8012774 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80126bc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80126c0:	2b00      	cmp	r3, #0
 80126c2:	dd57      	ble.n	8012774 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80126c4:	4f2f      	ldr	r7, [pc, #188]	; (8012784 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80126c6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80126c8:	683b      	ldr	r3, [r7, #0]
 80126ca:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80126ce:	4b2e      	ldr	r3, [pc, #184]	; (8012788 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80126d0:	681b      	ldr	r3, [r3, #0]
 80126d2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80126d6:	2e00      	cmp	r6, #0
 80126d8:	d04c      	beq.n	8012774 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80126da:	6823      	ldr	r3, [r4, #0]
 80126dc:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80126e0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80126e2:	4620      	mov	r0, r4
 80126e4:	4798      	blx	r3
 80126e6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80126e8:	683b      	ldr	r3, [r7, #0]
 80126ea:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80126ee:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80126f2:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80126f6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80126f8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80126fc:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012700:	785b      	ldrb	r3, [r3, #1]
 8012702:	9609      	str	r6, [sp, #36]	; 0x24
 8012704:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012708:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801270c:	4b1f      	ldr	r3, [pc, #124]	; (801278c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801270e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8012712:	681b      	ldr	r3, [r3, #0]
 8012714:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012718:	910b      	str	r1, [sp, #44]	; 0x2c
 801271a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801271e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8012722:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8012726:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801272a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801272e:	b10a      	cbz	r2, 8012734 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012730:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8012732:	b906      	cbnz	r6, 8012736 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012734:	689e      	ldr	r6, [r3, #8]
 8012736:	af07      	add	r7, sp, #28
 8012738:	4621      	mov	r1, r4
 801273a:	4638      	mov	r0, r7
 801273c:	f004 fc7c 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012740:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012742:	6828      	ldr	r0, [r5, #0]
 8012744:	f7f5 fbd8 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8012748:	6823      	ldr	r3, [r4, #0]
 801274a:	4605      	mov	r5, r0
 801274c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801274e:	4620      	mov	r0, r4
 8012750:	4798      	blx	r3
 8012752:	6823      	ldr	r3, [r4, #0]
 8012754:	4680      	mov	r8, r0
 8012756:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801275a:	4620      	mov	r0, r4
 801275c:	4798      	blx	r3
 801275e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8012762:	ab09      	add	r3, sp, #36	; 0x24
 8012764:	9300      	str	r3, [sp, #0]
 8012766:	9501      	str	r5, [sp, #4]
 8012768:	ab05      	add	r3, sp, #20
 801276a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801276e:	4630      	mov	r0, r6
 8012770:	f7f5 fb74 	bl	8007e5c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012774:	b00e      	add	sp, #56	; 0x38
 8012776:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801277a:	bf00      	nop
 801277c:	20013318 	.word	0x20013318
 8012780:	20013320 	.word	0x20013320
 8012784:	20013314 	.word	0x20013314
 8012788:	2001331c 	.word	0x2001331c
 801278c:	200132bc 	.word	0x200132bc

08012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012790:	b538      	push	{r3, r4, r5, lr}
 8012792:	4b0e      	ldr	r3, [pc, #56]	; (80127cc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012794:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012796:	881b      	ldrh	r3, [r3, #0]
 8012798:	429a      	cmp	r2, r3
 801279a:	4604      	mov	r4, r0
 801279c:	d214      	bcs.n	80127c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801279e:	6803      	ldr	r3, [r0, #0]
 80127a0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80127a2:	4798      	blx	r3
 80127a4:	6823      	ldr	r3, [r4, #0]
 80127a6:	4605      	mov	r5, r0
 80127a8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80127aa:	4620      	mov	r0, r4
 80127ac:	4798      	blx	r3
 80127ae:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80127b2:	b22d      	sxth	r5, r5
 80127b4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80127b8:	4601      	mov	r1, r0
 80127ba:	bf06      	itte	eq
 80127bc:	4602      	moveq	r2, r0
 80127be:	4629      	moveq	r1, r5
 80127c0:	462a      	movne	r2, r5
 80127c2:	4620      	mov	r0, r4
 80127c4:	f7fd f942 	bl	800fa4c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80127c8:	bd38      	pop	{r3, r4, r5, pc}
 80127ca:	bf00      	nop
 80127cc:	20013318 	.word	0x20013318

080127d0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80127d0:	b530      	push	{r4, r5, lr}
 80127d2:	888b      	ldrh	r3, [r1, #4]
 80127d4:	8583      	strh	r3, [r0, #44]	; 0x2c
 80127d6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80127da:	b085      	sub	sp, #20
 80127dc:	4604      	mov	r4, r0
 80127de:	b923      	cbnz	r3, 80127ea <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80127e0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80127e4:	b90b      	cbnz	r3, 80127ea <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80127e6:	f7ff ffd3 	bl	8012790 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80127ea:	6823      	ldr	r3, [r4, #0]
 80127ec:	466d      	mov	r5, sp
 80127ee:	4621      	mov	r1, r4
 80127f0:	4628      	mov	r0, r5
 80127f2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80127f6:	4798      	blx	r3
 80127f8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80127fc:	343c      	adds	r4, #60	; 0x3c
 80127fe:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012802:	b005      	add	sp, #20
 8012804:	bd30      	pop	{r4, r5, pc}

08012806 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012806:	2300      	movs	r3, #0
 8012808:	8083      	strh	r3, [r0, #4]
 801280a:	80c3      	strh	r3, [r0, #6]
 801280c:	8003      	strh	r3, [r0, #0]
 801280e:	8043      	strh	r3, [r0, #2]
 8012810:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012814:	2bff      	cmp	r3, #255	; 0xff
 8012816:	bf01      	itttt	eq
 8012818:	890b      	ldrheq	r3, [r1, #8]
 801281a:	8083      	strheq	r3, [r0, #4]
 801281c:	894b      	ldrheq	r3, [r1, #10]
 801281e:	80c3      	strheq	r3, [r0, #6]
 8012820:	4770      	bx	lr
	...

08012824 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012824:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012826:	4604      	mov	r4, r0
 8012828:	6808      	ldr	r0, [r1, #0]
 801282a:	6849      	ldr	r1, [r1, #4]
 801282c:	466b      	mov	r3, sp
 801282e:	c303      	stmia	r3!, {r0, r1}
 8012830:	6823      	ldr	r3, [r4, #0]
 8012832:	4669      	mov	r1, sp
 8012834:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012836:	4620      	mov	r0, r4
 8012838:	4798      	blx	r3
 801283a:	4b08      	ldr	r3, [pc, #32]	; (801285c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 801283c:	681b      	ldr	r3, [r3, #0]
 801283e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012842:	b10a      	cbz	r2, 8012848 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012844:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012846:	b900      	cbnz	r0, 801284a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012848:	6898      	ldr	r0, [r3, #8]
 801284a:	6803      	ldr	r3, [r0, #0]
 801284c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801284e:	6a1d      	ldr	r5, [r3, #32]
 8012850:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012854:	4669      	mov	r1, sp
 8012856:	47a8      	blx	r5
 8012858:	b003      	add	sp, #12
 801285a:	bd30      	pop	{r4, r5, pc}
 801285c:	200132bc 	.word	0x200132bc

08012860 <_ZN8touchgfx3BoxD1Ev>:
 8012860:	4770      	bx	lr

08012862 <_ZN8touchgfx3BoxD0Ev>:
 8012862:	b510      	push	{r4, lr}
 8012864:	212c      	movs	r1, #44	; 0x2c
 8012866:	4604      	mov	r4, r0
 8012868:	f017 fb17 	bl	8029e9a <_ZdlPvj>
 801286c:	4620      	mov	r0, r4
 801286e:	bd10      	pop	{r4, pc}

08012870 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012870:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8012874:	b12a      	cbz	r2, 8012882 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012876:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801287a:	b112      	cbz	r2, 8012882 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801287c:	6803      	ldr	r3, [r0, #0]
 801287e:	695b      	ldr	r3, [r3, #20]
 8012880:	4718      	bx	r3
 8012882:	4770      	bx	lr

08012884 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8012884:	b570      	push	{r4, r5, r6, lr}
 8012886:	6803      	ldr	r3, [r0, #0]
 8012888:	4604      	mov	r4, r0
 801288a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801288c:	4615      	mov	r5, r2
 801288e:	4798      	blx	r3
 8012890:	6823      	ldr	r3, [r4, #0]
 8012892:	4629      	mov	r1, r5
 8012894:	4620      	mov	r0, r4
 8012896:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012898:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801289c:	4718      	bx	r3

0801289e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801289e:	b570      	push	{r4, r5, r6, lr}
 80128a0:	6803      	ldr	r3, [r0, #0]
 80128a2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80128a4:	4604      	mov	r4, r0
 80128a6:	460e      	mov	r6, r1
 80128a8:	4615      	mov	r5, r2
 80128aa:	4798      	blx	r3
 80128ac:	8030      	strh	r0, [r6, #0]
 80128ae:	6823      	ldr	r3, [r4, #0]
 80128b0:	4620      	mov	r0, r4
 80128b2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80128b4:	4798      	blx	r3
 80128b6:	8028      	strh	r0, [r5, #0]
 80128b8:	bd70      	pop	{r4, r5, r6, pc}

080128ba <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 80128ba:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 80128be:	4770      	bx	lr

080128c0 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 80128c0:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 80128c4:	4770      	bx	lr

080128c6 <_ZN8touchgfx10TiledImageD1Ev>:
 80128c6:	4770      	bx	lr

080128c8 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 80128c8:	b510      	push	{r4, lr}
 80128ca:	4604      	mov	r4, r0
 80128cc:	f000 fd31 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80128d0:	6823      	ldr	r3, [r4, #0]
 80128d2:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80128d6:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 80128da:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80128dc:	4620      	mov	r0, r4
 80128de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80128e2:	4718      	bx	r3

080128e4 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 80128e4:	b538      	push	{r3, r4, r5, lr}
 80128e6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80128ea:	4604      	mov	r4, r0
 80128ec:	8541      	strh	r1, [r0, #42]	; 0x2a
 80128ee:	4628      	mov	r0, r5
 80128f0:	f006 fe6e 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80128f4:	b188      	cbz	r0, 801291a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 80128f6:	4628      	mov	r0, r5
 80128f8:	f006 fe6a 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80128fc:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8012900:	fb92 f3f0 	sdiv	r3, r2, r0
 8012904:	fb03 2010 	mls	r0, r3, r0, r2
 8012908:	2800      	cmp	r0, #0
 801290a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801290c:	da05      	bge.n	801291a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801290e:	4628      	mov	r0, r5
 8012910:	f006 fe5e 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012914:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8012916:	4418      	add	r0, r3
 8012918:	8560      	strh	r0, [r4, #42]	; 0x2a
 801291a:	bd38      	pop	{r3, r4, r5, pc}

0801291c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801291c:	b538      	push	{r3, r4, r5, lr}
 801291e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8012922:	4604      	mov	r4, r0
 8012924:	8581      	strh	r1, [r0, #44]	; 0x2c
 8012926:	4628      	mov	r0, r5
 8012928:	f006 fe86 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801292c:	b188      	cbz	r0, 8012952 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 801292e:	4628      	mov	r0, r5
 8012930:	f006 fe82 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012934:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8012938:	fb92 f3f0 	sdiv	r3, r2, r0
 801293c:	fb03 2010 	mls	r0, r3, r0, r2
 8012940:	2800      	cmp	r0, #0
 8012942:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8012944:	da05      	bge.n	8012952 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 8012946:	4628      	mov	r0, r5
 8012948:	f006 fe76 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801294c:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 801294e:	4418      	add	r0, r3
 8012950:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8012952:	bd38      	pop	{r3, r4, r5, pc}

08012954 <_ZN8touchgfx10TiledImageD0Ev>:
 8012954:	b510      	push	{r4, lr}
 8012956:	2130      	movs	r1, #48	; 0x30
 8012958:	4604      	mov	r4, r0
 801295a:	f017 fa9e 	bl	8029e9a <_ZdlPvj>
 801295e:	4620      	mov	r0, r4
 8012960:	bd10      	pop	{r4, pc}
	...

08012964 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 8012964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012968:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 801296c:	b093      	sub	sp, #76	; 0x4c
 801296e:	4607      	mov	r7, r0
 8012970:	4658      	mov	r0, fp
 8012972:	460e      	mov	r6, r1
 8012974:	f006 fe2c 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012978:	4681      	mov	r9, r0
 801297a:	4658      	mov	r0, fp
 801297c:	f006 fe5c 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012980:	4605      	mov	r5, r0
 8012982:	f1b9 0f00 	cmp.w	r9, #0
 8012986:	f000 80c4 	beq.w	8012b12 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 801298a:	2800      	cmp	r0, #0
 801298c:	f000 80c1 	beq.w	8012b12 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8012990:	2300      	movs	r3, #0
 8012992:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8012996:	683b      	ldr	r3, [r7, #0]
 8012998:	a90e      	add	r1, sp, #56	; 0x38
 801299a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801299c:	4638      	mov	r0, r7
 801299e:	4798      	blx	r3
 80129a0:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 80129a4:	f9b6 3000 	ldrsh.w	r3, [r6]
 80129a8:	88b1      	ldrh	r1, [r6, #4]
 80129aa:	fa1f f889 	uxth.w	r8, r9
 80129ae:	189c      	adds	r4, r3, r2
 80129b0:	440b      	add	r3, r1
 80129b2:	fa02 f383 	sxtah	r3, r2, r3
 80129b6:	fb94 f4f9 	sdiv	r4, r4, r9
 80129ba:	fb14 f408 	smulbb	r4, r4, r8
 80129be:	1aa4      	subs	r4, r4, r2
 80129c0:	3b01      	subs	r3, #1
 80129c2:	b2aa      	uxth	r2, r5
 80129c4:	fb93 f3f9 	sdiv	r3, r3, r9
 80129c8:	fb13 f308 	smulbb	r3, r3, r8
 80129cc:	b21b      	sxth	r3, r3
 80129ce:	9205      	str	r2, [sp, #20]
 80129d0:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 80129d4:	9805      	ldr	r0, [sp, #20]
 80129d6:	930b      	str	r3, [sp, #44]	; 0x2c
 80129d8:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80129dc:	185a      	adds	r2, r3, r1
 80129de:	fb92 f2f5 	sdiv	r2, r2, r5
 80129e2:	fb12 f200 	smulbb	r2, r2, r0
 80129e6:	1a52      	subs	r2, r2, r1
 80129e8:	b212      	sxth	r2, r2
 80129ea:	920c      	str	r2, [sp, #48]	; 0x30
 80129ec:	88f2      	ldrh	r2, [r6, #6]
 80129ee:	4413      	add	r3, r2
 80129f0:	fa01 f383 	sxtah	r3, r1, r3
 80129f4:	3b01      	subs	r3, #1
 80129f6:	fb93 f3f5 	sdiv	r3, r3, r5
 80129fa:	fb13 f300 	smulbb	r3, r3, r0
 80129fe:	b2a4      	uxth	r4, r4
 8012a00:	b21b      	sxth	r3, r3
 8012a02:	930d      	str	r3, [sp, #52]	; 0x34
 8012a04:	eb08 0504 	add.w	r5, r8, r4
 8012a08:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012a0a:	b223      	sxth	r3, r4
 8012a0c:	4293      	cmp	r3, r2
 8012a0e:	b2ad      	uxth	r5, r5
 8012a10:	9306      	str	r3, [sp, #24]
 8012a12:	dc7e      	bgt.n	8012b12 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8012a14:	b22b      	sxth	r3, r5
 8012a16:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8012a1a:	930a      	str	r3, [sp, #40]	; 0x28
 8012a1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012a1e:	4599      	cmp	r9, r3
 8012a20:	dd03      	ble.n	8012a2a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 8012a22:	4444      	add	r4, r8
 8012a24:	b2a4      	uxth	r4, r4
 8012a26:	4445      	add	r5, r8
 8012a28:	e7ee      	b.n	8012a08 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 8012a2a:	f9b6 c000 	ldrsh.w	ip, [r6]
 8012a2e:	88b2      	ldrh	r2, [r6, #4]
 8012a30:	9806      	ldr	r0, [sp, #24]
 8012a32:	9905      	ldr	r1, [sp, #20]
 8012a34:	4462      	add	r2, ip
 8012a36:	b292      	uxth	r2, r2
 8012a38:	b213      	sxth	r3, r2
 8012a3a:	9308      	str	r3, [sp, #32]
 8012a3c:	fa1f f389 	uxth.w	r3, r9
 8012a40:	4419      	add	r1, r3
 8012a42:	9307      	str	r3, [sp, #28]
 8012a44:	4603      	mov	r3, r0
 8012a46:	9808      	ldr	r0, [sp, #32]
 8012a48:	b289      	uxth	r1, r1
 8012a4a:	4283      	cmp	r3, r0
 8012a4c:	fa0f fa81 	sxth.w	sl, r1
 8012a50:	da5b      	bge.n	8012b0a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8012a52:	980a      	ldr	r0, [sp, #40]	; 0x28
 8012a54:	4584      	cmp	ip, r0
 8012a56:	da58      	bge.n	8012b0a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8012a58:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 8012a5c:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 8012a60:	4486      	add	lr, r0
 8012a62:	fa1f fe8e 	uxth.w	lr, lr
 8012a66:	fa0f f38e 	sxth.w	r3, lr
 8012a6a:	4599      	cmp	r9, r3
 8012a6c:	9309      	str	r3, [sp, #36]	; 0x24
 8012a6e:	da4c      	bge.n	8012b0a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8012a70:	4550      	cmp	r0, sl
 8012a72:	da4a      	bge.n	8012b0a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8012a74:	9b06      	ldr	r3, [sp, #24]
 8012a76:	459c      	cmp	ip, r3
 8012a78:	bfb8      	it	lt
 8012a7a:	469c      	movlt	ip, r3
 8012a7c:	9b08      	ldr	r3, [sp, #32]
 8012a7e:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8012a82:	4548      	cmp	r0, r9
 8012a84:	bfb8      	it	lt
 8012a86:	4648      	movlt	r0, r9
 8012a88:	4699      	mov	r9, r3
 8012a8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012a8c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8012a90:	4599      	cmp	r9, r3
 8012a92:	bfc8      	it	gt
 8012a94:	462a      	movgt	r2, r5
 8012a96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012a98:	4553      	cmp	r3, sl
 8012a9a:	bfd8      	it	le
 8012a9c:	4671      	movle	r1, lr
 8012a9e:	eba2 020c 	sub.w	r2, r2, ip
 8012aa2:	1a09      	subs	r1, r1, r0
 8012aa4:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8012aa8:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 8012aac:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8012ab0:	9b07      	ldr	r3, [sp, #28]
 8012ab2:	1b12      	subs	r2, r2, r4
 8012ab4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012ab8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012abc:	1ad2      	subs	r2, r2, r3
 8012abe:	4b16      	ldr	r3, [pc, #88]	; (8012b18 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8012ac0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8012ac4:	681a      	ldr	r2, [r3, #0]
 8012ac6:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 8012aca:	b109      	cbz	r1, 8012ad0 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 8012acc:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 8012ace:	b900      	cbnz	r0, 8012ad2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8012ad0:	6890      	ldr	r0, [r2, #8]
 8012ad2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012ad6:	9b07      	ldr	r3, [sp, #28]
 8012ad8:	6801      	ldr	r1, [r0, #0]
 8012ada:	f04f 0c01 	mov.w	ip, #1
 8012ade:	f8cd c008 	str.w	ip, [sp, #8]
 8012ae2:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8012ae6:	f8cd c004 	str.w	ip, [sp, #4]
 8012aea:	4413      	add	r3, r2
 8012aec:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8012af0:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8012af4:	f8cd c000 	str.w	ip, [sp]
 8012af8:	4422      	add	r2, r4
 8012afa:	f8d1 9008 	ldr.w	r9, [r1, #8]
 8012afe:	b21b      	sxth	r3, r3
 8012b00:	b212      	sxth	r2, r2
 8012b02:	4659      	mov	r1, fp
 8012b04:	47c8      	blx	r9
 8012b06:	46d1      	mov	r9, sl
 8012b08:	e788      	b.n	8012a1c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 8012b0a:	2300      	movs	r3, #0
 8012b0c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8012b10:	e7cc      	b.n	8012aac <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8012b12:	b013      	add	sp, #76	; 0x4c
 8012b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b18:	200132bc 	.word	0x200132bc

08012b1c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 8012b1c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b20:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8012b24:	2bff      	cmp	r3, #255	; 0xff
 8012b26:	4606      	mov	r6, r0
 8012b28:	4689      	mov	r9, r1
 8012b2a:	d008      	beq.n	8012b3e <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 8012b2c:	2300      	movs	r3, #0
 8012b2e:	8003      	strh	r3, [r0, #0]
 8012b30:	8043      	strh	r3, [r0, #2]
 8012b32:	8083      	strh	r3, [r0, #4]
 8012b34:	4630      	mov	r0, r6
 8012b36:	80f3      	strh	r3, [r6, #6]
 8012b38:	b003      	add	sp, #12
 8012b3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b3e:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8012b42:	4659      	mov	r1, fp
 8012b44:	4668      	mov	r0, sp
 8012b46:	f006 fdab 	bl	80196a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012b4a:	4658      	mov	r0, fp
 8012b4c:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8012b50:	f9bd 7000 	ldrsh.w	r7, [sp]
 8012b54:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8012b58:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 8012b5c:	f006 fd38 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012b60:	4284      	cmp	r4, r0
 8012b62:	d10d      	bne.n	8012b80 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8012b64:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8012b68:	4658      	mov	r0, fp
 8012b6a:	f006 fd65 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012b6e:	4580      	cmp	r8, r0
 8012b70:	d129      	bne.n	8012bc6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8012b72:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8012b76:	8037      	strh	r7, [r6, #0]
 8012b78:	f8a6 a002 	strh.w	sl, [r6, #2]
 8012b7c:	80b5      	strh	r5, [r6, #4]
 8012b7e:	e7d9      	b.n	8012b34 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8012b80:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8012b84:	4658      	mov	r0, fp
 8012b86:	f006 fd23 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012b8a:	1b7f      	subs	r7, r7, r5
 8012b8c:	b2bd      	uxth	r5, r7
 8012b8e:	b22f      	sxth	r7, r5
 8012b90:	4428      	add	r0, r5
 8012b92:	2f00      	cmp	r7, #0
 8012b94:	b2a3      	uxth	r3, r4
 8012b96:	b280      	uxth	r0, r0
 8012b98:	bfb8      	it	lt
 8012b9a:	18ed      	addlt	r5, r5, r3
 8012b9c:	4403      	add	r3, r0
 8012b9e:	b29b      	uxth	r3, r3
 8012ba0:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8012ba4:	bfb8      	it	lt
 8012ba6:	b22d      	sxthlt	r5, r5
 8012ba8:	b219      	sxth	r1, r3
 8012baa:	bfae      	itee	ge
 8012bac:	4625      	movge	r5, r4
 8012bae:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8012bb2:	2700      	movlt	r7, #0
 8012bb4:	4291      	cmp	r1, r2
 8012bb6:	bfc4      	itt	gt
 8012bb8:	1a9c      	subgt	r4, r3, r2
 8012bba:	b224      	sxthgt	r4, r4
 8012bbc:	42ac      	cmp	r4, r5
 8012bbe:	bfc4      	itt	gt
 8012bc0:	b207      	sxthgt	r7, r0
 8012bc2:	4625      	movgt	r5, r4
 8012bc4:	e7d0      	b.n	8012b68 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8012bc6:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 8012bca:	4658      	mov	r0, fp
 8012bcc:	f006 fd34 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012bd0:	ebaa 0404 	sub.w	r4, sl, r4
 8012bd4:	b2a4      	uxth	r4, r4
 8012bd6:	fa0f fa84 	sxth.w	sl, r4
 8012bda:	4420      	add	r0, r4
 8012bdc:	f1ba 0f00 	cmp.w	sl, #0
 8012be0:	fa1f f288 	uxth.w	r2, r8
 8012be4:	b280      	uxth	r0, r0
 8012be6:	bfb8      	it	lt
 8012be8:	18a3      	addlt	r3, r4, r2
 8012bea:	4402      	add	r2, r0
 8012bec:	b292      	uxth	r2, r2
 8012bee:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8012bf2:	bfb8      	it	lt
 8012bf4:	b21b      	sxthlt	r3, r3
 8012bf6:	b214      	sxth	r4, r2
 8012bf8:	bfae      	itee	ge
 8012bfa:	4643      	movge	r3, r8
 8012bfc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012c00:	f04f 0a00 	movlt.w	sl, #0
 8012c04:	428c      	cmp	r4, r1
 8012c06:	bfc4      	itt	gt
 8012c08:	eba2 0801 	subgt.w	r8, r2, r1
 8012c0c:	fa0f f888 	sxthgt.w	r8, r8
 8012c10:	4598      	cmp	r8, r3
 8012c12:	bfc4      	itt	gt
 8012c14:	fa0f fa80 	sxthgt.w	sl, r0
 8012c18:	4643      	movgt	r3, r8
 8012c1a:	e7ac      	b.n	8012b76 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

08012c1c <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012c1c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8012c20:	b12a      	cbz	r2, 8012c2e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012c22:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012c26:	b112      	cbz	r2, 8012c2e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012c28:	6803      	ldr	r3, [r0, #0]
 8012c2a:	695b      	ldr	r3, [r3, #20]
 8012c2c:	4718      	bx	r3
 8012c2e:	4770      	bx	lr

08012c30 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8012c30:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012c34:	600b      	str	r3, [r1, #0]
 8012c36:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012c3a:	6013      	str	r3, [r2, #0]
 8012c3c:	4770      	bx	lr

08012c3e <_ZN8touchgfx5Gauge8setWidthEs>:
 8012c3e:	8101      	strh	r1, [r0, #8]
 8012c40:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012c44:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012c48:	4770      	bx	lr

08012c4a <_ZN8touchgfx5Gauge9setHeightEs>:
 8012c4a:	8141      	strh	r1, [r0, #10]
 8012c4c:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8012c50:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012c54:	4770      	bx	lr

08012c56 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012c56:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012c5a:	4770      	bx	lr

08012c5c <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012c5c:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8012c60:	4770      	bx	lr

08012c62 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8012c62:	4770      	bx	lr

08012c64 <_ZN8touchgfx5GaugeD1Ev>:
 8012c64:	4770      	bx	lr

08012c66 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012c66:	b538      	push	{r3, r4, r5, lr}
 8012c68:	4604      	mov	r4, r0
 8012c6a:	460d      	mov	r5, r1
 8012c6c:	f7fc fe07 	bl	800f87e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012c70:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012c74:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012c78:	bd38      	pop	{r3, r4, r5, pc}

08012c7a <_ZN8touchgfx5GaugeD0Ev>:
 8012c7a:	b510      	push	{r4, lr}
 8012c7c:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8012c80:	4604      	mov	r4, r0
 8012c82:	f017 f90a 	bl	8029e9a <_ZdlPvj>
 8012c86:	4620      	mov	r0, r4
 8012c88:	bd10      	pop	{r4, pc}

08012c8a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012c8a:	b510      	push	{r4, lr}
 8012c8c:	6803      	ldr	r3, [r0, #0]
 8012c8e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012c92:	4604      	mov	r4, r0
 8012c94:	4798      	blx	r3
 8012c96:	b170      	cbz	r0, 8012cb6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012c98:	6823      	ldr	r3, [r4, #0]
 8012c9a:	4620      	mov	r0, r4
 8012c9c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012ca0:	4798      	blx	r3
 8012ca2:	b140      	cbz	r0, 8012cb6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012ca4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012ca8:	b12b      	cbz	r3, 8012cb6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012caa:	6823      	ldr	r3, [r4, #0]
 8012cac:	4620      	mov	r0, r4
 8012cae:	695b      	ldr	r3, [r3, #20]
 8012cb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012cb4:	4718      	bx	r3
 8012cb6:	bd10      	pop	{r4, pc}

08012cb8 <_ZN8touchgfx5GaugeC1Ev>:
 8012cb8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012cba:	4604      	mov	r4, r0
 8012cbc:	4626      	mov	r6, r4
 8012cbe:	f7fc feff 	bl	800fac0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012cc2:	4b18      	ldr	r3, [pc, #96]	; (8012d24 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012cc4:	f846 3bb4 	str.w	r3, [r6], #180
 8012cc8:	a902      	add	r1, sp, #8
 8012cca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012cce:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8012cd2:	4630      	mov	r0, r6
 8012cd4:	f015 f9a4 	bl	8028020 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012cd8:	2500      	movs	r5, #0
 8012cda:	2301      	movs	r3, #1
 8012cdc:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8012ce0:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012ce4:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012ce8:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012cec:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8012cf0:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012cf4:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012cf8:	4638      	mov	r0, r7
 8012cfa:	f014 fbd5 	bl	80274a8 <_ZN8touchgfx6CircleC1Ev>
 8012cfe:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8012d02:	4620      	mov	r0, r4
 8012d04:	f7fc ff7d 	bl	800fc02 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012d08:	4639      	mov	r1, r7
 8012d0a:	4620      	mov	r0, r4
 8012d0c:	f7fc ff38 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012d10:	4620      	mov	r0, r4
 8012d12:	4631      	mov	r1, r6
 8012d14:	f7fc ff34 	bl	800fb80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012d18:	4620      	mov	r0, r4
 8012d1a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8012d1e:	b003      	add	sp, #12
 8012d20:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012d22:	bf00      	nop
 8012d24:	0802ec90 	.word	0x0802ec90

08012d28 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012d28:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012d2c:	4770      	bx	lr

08012d2e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012d2e:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8012d32:	4770      	bx	lr

08012d34 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012d34:	b538      	push	{r3, r4, r5, lr}
 8012d36:	8902      	ldrh	r2, [r0, #8]
 8012d38:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012d3c:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8012d40:	4604      	mov	r4, r0
 8012d42:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012d46:	2200      	movs	r2, #0
 8012d48:	4611      	mov	r1, r2
 8012d4a:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8012d4e:	4628      	mov	r0, r5
 8012d50:	f7ef fe02 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8012d54:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012d58:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012d5c:	1a9b      	subs	r3, r3, r2
 8012d5e:	ee07 3a90 	vmov	s15, r3
 8012d62:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012d66:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012d6a:	1a9b      	subs	r3, r3, r2
 8012d6c:	ee07 3a10 	vmov	s14, r3
 8012d70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012d74:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d78:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012d7c:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8012d80:	4628      	mov	r0, r5
 8012d82:	f015 f999 	bl	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012d86:	4b16      	ldr	r3, [pc, #88]	; (8012de0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012d88:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012d8c:	4628      	mov	r0, r5
 8012d8e:	f015 f993 	bl	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012d92:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012d96:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012d9a:	ee07 3a90 	vmov	s15, r3
 8012d9e:	ee07 2a10 	vmov	s14, r2
 8012da2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012da6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012daa:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8012dae:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8012db2:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012db6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012dba:	4628      	mov	r0, r5
 8012dbc:	f015 f97c 	bl	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012dc0:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012dc4:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012dc8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012dcc:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8012dd0:	4628      	mov	r0, r5
 8012dd2:	f015 f971 	bl	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012dd6:	2301      	movs	r3, #1
 8012dd8:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012ddc:	bd38      	pop	{r3, r4, r5, pc}
 8012dde:	bf00      	nop
 8012de0:	43960000 	.word	0x43960000

08012de4 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012de4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012de6:	4604      	mov	r4, r0
 8012de8:	a802      	add	r0, sp, #8
 8012dea:	4616      	mov	r6, r2
 8012dec:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8012df0:	461d      	mov	r5, r3
 8012df2:	4601      	mov	r1, r0
 8012df4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012df8:	f015 fab4 	bl	8028364 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012dfc:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8012e00:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012e04:	4620      	mov	r0, r4
 8012e06:	f7ff ff95 	bl	8012d34 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012e0a:	b002      	add	sp, #8
 8012e0c:	bd70      	pop	{r4, r5, r6, pc}

08012e0e <_ZN8touchgfx5Gauge9setCenterEii>:
 8012e0e:	b570      	push	{r4, r5, r6, lr}
 8012e10:	4606      	mov	r6, r0
 8012e12:	460d      	mov	r5, r1
 8012e14:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012e18:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012e1c:	4614      	mov	r4, r2
 8012e1e:	f7ff ff89 	bl	8012d34 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012e22:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012e26:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012e2a:	1aa4      	subs	r4, r4, r2
 8012e2c:	1a6d      	subs	r5, r5, r1
 8012e2e:	0164      	lsls	r4, r4, #5
 8012e30:	016d      	lsls	r5, r5, #5
 8012e32:	3410      	adds	r4, #16
 8012e34:	3510      	adds	r5, #16
 8012e36:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012e3a:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8012e3e:	bd70      	pop	{r4, r5, r6, pc}

08012e40 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8012e40:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012e42:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012e44:	0149      	lsls	r1, r1, #5
 8012e46:	4299      	cmp	r1, r3
 8012e48:	4604      	mov	r4, r0
 8012e4a:	9101      	str	r1, [sp, #4]
 8012e4c:	d00b      	beq.n	8012e66 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8012e4e:	4601      	mov	r1, r0
 8012e50:	aa01      	add	r2, sp, #4
 8012e52:	a802      	add	r0, sp, #8
 8012e54:	f014 fd26 	bl	80278a4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012e58:	9b01      	ldr	r3, [sp, #4]
 8012e5a:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012e5c:	6823      	ldr	r3, [r4, #0]
 8012e5e:	a902      	add	r1, sp, #8
 8012e60:	691b      	ldr	r3, [r3, #16]
 8012e62:	4620      	mov	r0, r4
 8012e64:	4798      	blx	r3
 8012e66:	b004      	add	sp, #16
 8012e68:	bd10      	pop	{r4, pc}
	...

08012e6c <_ZN8touchgfx5Gauge8setValueEi>:
 8012e6c:	b570      	push	{r4, r5, r6, lr}
 8012e6e:	4604      	mov	r4, r0
 8012e70:	f7fc fd58 	bl	800f924 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012e74:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012e78:	429a      	cmp	r2, r3
 8012e7a:	bfac      	ite	ge
 8012e7c:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8012e80:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012e84:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012e88:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012e8c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012e90:	1ac9      	subs	r1, r1, r3
 8012e92:	2900      	cmp	r1, #0
 8012e94:	bfb8      	it	lt
 8012e96:	4249      	neglt	r1, r1
 8012e98:	b289      	uxth	r1, r1
 8012e9a:	4620      	mov	r0, r4
 8012e9c:	f7fc fd64 	bl	800f968 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012ea0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012ea4:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012ea8:	eddf 6a19 	vldr	s13, [pc, #100]	; 8012f10 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012eac:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012f14 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8012eb0:	429a      	cmp	r2, r3
 8012eb2:	4605      	mov	r5, r0
 8012eb4:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012eb8:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012ebc:	da15      	bge.n	8012eea <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8012ebe:	1b5b      	subs	r3, r3, r5
 8012ec0:	ee07 3a90 	vmov	s15, r3
 8012ec4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012ec8:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012ecc:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012ed0:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012ed4:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012ed8:	f015 f85d 	bl	8027f96 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012edc:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012ee0:	1b49      	subs	r1, r1, r5
 8012ee2:	4630      	mov	r0, r6
 8012ee4:	f7ff ffac 	bl	8012e40 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012ee8:	bd70      	pop	{r4, r5, r6, pc}
 8012eea:	442b      	add	r3, r5
 8012eec:	ee07 3a90 	vmov	s15, r3
 8012ef0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012ef4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012ef8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012efc:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012f00:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012f04:	f015 f847 	bl	8027f96 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012f08:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012f0c:	4429      	add	r1, r5
 8012f0e:	e7e8      	b.n	8012ee2 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8012f10:	43340000 	.word	0x43340000
 8012f14:	40490fdb 	.word	0x40490fdb

08012f18 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012f18:	b510      	push	{r4, lr}
 8012f1a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8012f1e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8012f22:	0149      	lsls	r1, r1, #5
 8012f24:	0152      	lsls	r2, r2, #5
 8012f26:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012f2a:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8012f2e:	4604      	mov	r4, r0
 8012f30:	f7fc fca2 	bl	800f878 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012f34:	4601      	mov	r1, r0
 8012f36:	4620      	mov	r0, r4
 8012f38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f3c:	f7ff bf96 	b.w	8012e6c <_ZN8touchgfx5Gauge8setValueEi>

08012f40 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8012f40:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012f44:	4770      	bx	lr

08012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012f46:	b570      	push	{r4, r5, r6, lr}
 8012f48:	880b      	ldrh	r3, [r1, #0]
 8012f4a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012f4c:	4605      	mov	r5, r0
 8012f4e:	8813      	ldrh	r3, [r2, #0]
 8012f50:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012f54:	4604      	mov	r4, r0
 8012f56:	4628      	mov	r0, r5
 8012f58:	f006 fb3a 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012f5c:	4606      	mov	r6, r0
 8012f5e:	4628      	mov	r0, r5
 8012f60:	f006 fb6a 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012f64:	6823      	ldr	r3, [r4, #0]
 8012f66:	4605      	mov	r5, r0
 8012f68:	4631      	mov	r1, r6
 8012f6a:	4620      	mov	r0, r4
 8012f6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012f6e:	4798      	blx	r3
 8012f70:	6823      	ldr	r3, [r4, #0]
 8012f72:	4629      	mov	r1, r5
 8012f74:	4620      	mov	r0, r4
 8012f76:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012f78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012f7c:	4718      	bx	r3

08012f7e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012f7e:	b510      	push	{r4, lr}
 8012f80:	4604      	mov	r4, r0
 8012f82:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012f84:	b150      	cbz	r0, 8012f9c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012f86:	6803      	ldr	r3, [r0, #0]
 8012f88:	68db      	ldr	r3, [r3, #12]
 8012f8a:	4798      	blx	r3
 8012f8c:	b130      	cbz	r0, 8012f9c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012f8e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012f90:	6803      	ldr	r3, [r0, #0]
 8012f92:	4621      	mov	r1, r4
 8012f94:	689b      	ldr	r3, [r3, #8]
 8012f96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f9a:	4718      	bx	r3
 8012f9c:	bd10      	pop	{r4, pc}

08012f9e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012f9e:	b510      	push	{r4, lr}
 8012fa0:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012fa4:	2bff      	cmp	r3, #255	; 0xff
 8012fa6:	4604      	mov	r4, r0
 8012fa8:	d006      	beq.n	8012fb8 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8012faa:	2300      	movs	r3, #0
 8012fac:	8003      	strh	r3, [r0, #0]
 8012fae:	8043      	strh	r3, [r0, #2]
 8012fb0:	8083      	strh	r3, [r0, #4]
 8012fb2:	80c3      	strh	r3, [r0, #6]
 8012fb4:	4620      	mov	r0, r4
 8012fb6:	bd10      	pop	{r4, pc}
 8012fb8:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012fbc:	b11b      	cbz	r3, 8012fc6 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012fbe:	3130      	adds	r1, #48	; 0x30
 8012fc0:	f006 fb6e 	bl	80196a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012fc4:	e7f6      	b.n	8012fb4 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012fc6:	312e      	adds	r1, #46	; 0x2e
 8012fc8:	e7fa      	b.n	8012fc0 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012fcc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012fcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012fd0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012fd4:	b08a      	sub	sp, #40	; 0x28
 8012fd6:	4604      	mov	r4, r0
 8012fd8:	4688      	mov	r8, r1
 8012fda:	2b00      	cmp	r3, #0
 8012fdc:	d066      	beq.n	80130ac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8012fde:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012fe0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012fe4:	a805      	add	r0, sp, #20
 8012fe6:	f006 faf3 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012fea:	4607      	mov	r7, r0
 8012fec:	a805      	add	r0, sp, #20
 8012fee:	f006 fb23 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012ff2:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012ff6:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012ffa:	4432      	add	r2, r6
 8012ffc:	b292      	uxth	r2, r2
 8012ffe:	2300      	movs	r3, #0
 8013000:	fa0f fc82 	sxth.w	ip, r2
 8013004:	459c      	cmp	ip, r3
 8013006:	9306      	str	r3, [sp, #24]
 8013008:	dd52      	ble.n	80130b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801300a:	42b7      	cmp	r7, r6
 801300c:	dd50      	ble.n	80130b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801300e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013012:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013016:	442b      	add	r3, r5
 8013018:	b29b      	uxth	r3, r3
 801301a:	b219      	sxth	r1, r3
 801301c:	2900      	cmp	r1, #0
 801301e:	dd47      	ble.n	80130b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013020:	42a8      	cmp	r0, r5
 8013022:	dd45      	ble.n	80130b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013024:	4567      	cmp	r7, ip
 8013026:	bfb8      	it	lt
 8013028:	b2ba      	uxthlt	r2, r7
 801302a:	4288      	cmp	r0, r1
 801302c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013030:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013034:	bfb8      	it	lt
 8013036:	b283      	uxthlt	r3, r0
 8013038:	1b92      	subs	r2, r2, r6
 801303a:	1b5b      	subs	r3, r3, r5
 801303c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013040:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013044:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013048:	f8ad 501a 	strh.w	r5, [sp, #26]
 801304c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013050:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013054:	429a      	cmp	r2, r3
 8013056:	d026      	beq.n	80130a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013058:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801305c:	2b00      	cmp	r3, #0
 801305e:	dd22      	ble.n	80130a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013060:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013064:	2b00      	cmp	r3, #0
 8013066:	dd1e      	ble.n	80130a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013068:	2300      	movs	r3, #0
 801306a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801306e:	6823      	ldr	r3, [r4, #0]
 8013070:	a908      	add	r1, sp, #32
 8013072:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013074:	4620      	mov	r0, r4
 8013076:	4798      	blx	r3
 8013078:	4b0f      	ldr	r3, [pc, #60]	; (80130b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801307a:	681b      	ldr	r3, [r3, #0]
 801307c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013080:	b10a      	cbz	r2, 8013086 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013082:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013084:	b900      	cbnz	r0, 8013088 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8013086:	6898      	ldr	r0, [r3, #8]
 8013088:	6801      	ldr	r1, [r0, #0]
 801308a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801308e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013092:	2501      	movs	r5, #1
 8013094:	9502      	str	r5, [sp, #8]
 8013096:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801309a:	9401      	str	r4, [sp, #4]
 801309c:	ac06      	add	r4, sp, #24
 801309e:	9400      	str	r4, [sp, #0]
 80130a0:	688c      	ldr	r4, [r1, #8]
 80130a2:	a905      	add	r1, sp, #20
 80130a4:	47a0      	blx	r4
 80130a6:	b00a      	add	sp, #40	; 0x28
 80130a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80130ac:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80130ae:	e797      	b.n	8012fe0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80130b0:	2300      	movs	r3, #0
 80130b2:	9307      	str	r3, [sp, #28]
 80130b4:	e7ca      	b.n	801304c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80130b6:	bf00      	nop
 80130b8:	200132bc 	.word	0x200132bc

080130bc <_ZNK8touchgfx6Button17invalidateContentEv>:
 80130bc:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80130c0:	b12a      	cbz	r2, 80130ce <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80130c2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80130c6:	b112      	cbz	r2, 80130ce <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80130c8:	6803      	ldr	r3, [r0, #0]
 80130ca:	695b      	ldr	r3, [r3, #20]
 80130cc:	4718      	bx	r3
 80130ce:	4770      	bx	lr

080130d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80130d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80130d4:	4b2f      	ldr	r3, [pc, #188]	; (8013194 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80130d6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80130d8:	881b      	ldrh	r3, [r3, #0]
 80130da:	4293      	cmp	r3, r2
 80130dc:	b08d      	sub	sp, #52	; 0x34
 80130de:	4604      	mov	r4, r0
 80130e0:	460f      	mov	r7, r1
 80130e2:	d954      	bls.n	801318e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80130e4:	4b2c      	ldr	r3, [pc, #176]	; (8013198 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80130e6:	6819      	ldr	r1, [r3, #0]
 80130e8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80130ec:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80130f0:	4a2a      	ldr	r2, [pc, #168]	; (801319c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80130f2:	6812      	ldr	r2, [r2, #0]
 80130f4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80130f8:	2900      	cmp	r1, #0
 80130fa:	d048      	beq.n	801318e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80130fc:	785a      	ldrb	r2, [r3, #1]
 80130fe:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013102:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013106:	4b26      	ldr	r3, [pc, #152]	; (80131a0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013108:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801310c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8013110:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013114:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8013116:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801311a:	9107      	str	r1, [sp, #28]
 801311c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8013120:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013124:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8013128:	681a      	ldr	r2, [r3, #0]
 801312a:	f88d 8020 	strb.w	r8, [sp, #32]
 801312e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8013132:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8013136:	9609      	str	r6, [sp, #36]	; 0x24
 8013138:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 801313c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8013140:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013144:	b10b      	cbz	r3, 801314a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8013146:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8013148:	b905      	cbnz	r5, 801314c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801314a:	6895      	ldr	r5, [r2, #8]
 801314c:	ae05      	add	r6, sp, #20
 801314e:	4621      	mov	r1, r4
 8013150:	4630      	mov	r0, r6
 8013152:	f003 ff71 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013156:	4b13      	ldr	r3, [pc, #76]	; (80131a4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013158:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801315a:	6818      	ldr	r0, [r3, #0]
 801315c:	f7f4 fecc 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8013160:	6823      	ldr	r3, [r4, #0]
 8013162:	4680      	mov	r8, r0
 8013164:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013166:	4620      	mov	r0, r4
 8013168:	4798      	blx	r3
 801316a:	6823      	ldr	r3, [r4, #0]
 801316c:	4681      	mov	r9, r0
 801316e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013172:	4620      	mov	r0, r4
 8013174:	4798      	blx	r3
 8013176:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801317a:	ab07      	add	r3, sp, #28
 801317c:	9300      	str	r3, [sp, #0]
 801317e:	f8cd 8004 	str.w	r8, [sp, #4]
 8013182:	463b      	mov	r3, r7
 8013184:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013188:	4628      	mov	r0, r5
 801318a:	f7f4 fe67 	bl	8007e5c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801318e:	b00d      	add	sp, #52	; 0x34
 8013190:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013194:	20013318 	.word	0x20013318
 8013198:	20013314 	.word	0x20013314
 801319c:	2001331c 	.word	0x2001331c
 80131a0:	200132bc 	.word	0x200132bc
 80131a4:	20013320 	.word	0x20013320

080131a8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80131a8:	4770      	bx	lr

080131aa <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80131aa:	4770      	bx	lr

080131ac <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80131ac:	b510      	push	{r4, lr}
 80131ae:	213c      	movs	r1, #60	; 0x3c
 80131b0:	4604      	mov	r4, r0
 80131b2:	f016 fe72 	bl	8029e9a <_ZdlPvj>
 80131b6:	4620      	mov	r0, r4
 80131b8:	bd10      	pop	{r4, pc}

080131ba <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80131ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80131be:	461c      	mov	r4, r3
 80131c0:	4606      	mov	r6, r0
 80131c2:	9f06      	ldr	r7, [sp, #24]
 80131c4:	f7ff febf 	bl	8012f46 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80131c8:	8823      	ldrh	r3, [r4, #0]
 80131ca:	86b3      	strh	r3, [r6, #52]	; 0x34
 80131cc:	883b      	ldrh	r3, [r7, #0]
 80131ce:	86f3      	strh	r3, [r6, #54]	; 0x36
 80131d0:	4638      	mov	r0, r7
 80131d2:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80131d6:	f006 f9fb 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80131da:	f04f 0802 	mov.w	r8, #2
 80131de:	fb95 f5f8 	sdiv	r5, r5, r8
 80131e2:	b2ad      	uxth	r5, r5
 80131e4:	fb90 f0f8 	sdiv	r0, r0, r8
 80131e8:	1a2d      	subs	r5, r5, r0
 80131ea:	8735      	strh	r5, [r6, #56]	; 0x38
 80131ec:	4638      	mov	r0, r7
 80131ee:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80131f2:	fb94 f4f8 	sdiv	r4, r4, r8
 80131f6:	f006 fa1f 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80131fa:	b2a4      	uxth	r4, r4
 80131fc:	fb90 f0f8 	sdiv	r0, r0, r8
 8013200:	1a24      	subs	r4, r4, r0
 8013202:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013204:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013208 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8013208:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801320c:	4604      	mov	r4, r0
 801320e:	b08c      	sub	sp, #48	; 0x30
 8013210:	460d      	mov	r5, r1
 8013212:	f7ff fedb 	bl	8012fcc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013216:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801321a:	2b00      	cmp	r3, #0
 801321c:	d05d      	beq.n	80132da <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801321e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013220:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013224:	a805      	add	r0, sp, #20
 8013226:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 801322a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801322e:	f006 f9cf 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013232:	4606      	mov	r6, r0
 8013234:	a805      	add	r0, sp, #20
 8013236:	f006 f9ff 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801323a:	6869      	ldr	r1, [r5, #4]
 801323c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013240:	6828      	ldr	r0, [r5, #0]
 8013242:	f8ad 8018 	strh.w	r8, [sp, #24]
 8013246:	ab08      	add	r3, sp, #32
 8013248:	ad08      	add	r5, sp, #32
 801324a:	c303      	stmia	r3!, {r0, r1}
 801324c:	a906      	add	r1, sp, #24
 801324e:	4628      	mov	r0, r5
 8013250:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013254:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013258:	f7fc fe18 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 801325c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013260:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013264:	429a      	cmp	r2, r3
 8013266:	d035      	beq.n	80132d4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013268:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801326c:	2b00      	cmp	r3, #0
 801326e:	dd31      	ble.n	80132d4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013270:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8013274:	2b00      	cmp	r3, #0
 8013276:	dd2d      	ble.n	80132d4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013278:	2300      	movs	r3, #0
 801327a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801327e:	6823      	ldr	r3, [r4, #0]
 8013280:	a90a      	add	r1, sp, #40	; 0x28
 8013282:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013284:	4620      	mov	r0, r4
 8013286:	4798      	blx	r3
 8013288:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801328c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801328e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8013292:	1a9b      	subs	r3, r3, r2
 8013294:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013298:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 801329a:	1ac9      	subs	r1, r1, r3
 801329c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80132a0:	490f      	ldr	r1, [pc, #60]	; (80132e0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80132a2:	6809      	ldr	r1, [r1, #0]
 80132a4:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80132a8:	b108      	cbz	r0, 80132ae <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80132aa:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80132ac:	b900      	cbnz	r0, 80132b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80132ae:	6888      	ldr	r0, [r1, #8]
 80132b0:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80132b4:	440b      	add	r3, r1
 80132b6:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80132ba:	2601      	movs	r6, #1
 80132bc:	440a      	add	r2, r1
 80132be:	6801      	ldr	r1, [r0, #0]
 80132c0:	9602      	str	r6, [sp, #8]
 80132c2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80132c6:	e9cd 5400 	strd	r5, r4, [sp]
 80132ca:	b21b      	sxth	r3, r3
 80132cc:	688c      	ldr	r4, [r1, #8]
 80132ce:	b212      	sxth	r2, r2
 80132d0:	a905      	add	r1, sp, #20
 80132d2:	47a0      	blx	r4
 80132d4:	b00c      	add	sp, #48	; 0x30
 80132d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80132da:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80132dc:	e7a0      	b.n	8013220 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80132de:	bf00      	nop
 80132e0:	200132bc 	.word	0x200132bc

080132e4 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80132e4:	b510      	push	{r4, lr}
 80132e6:	2101      	movs	r1, #1
 80132e8:	2200      	movs	r2, #0
 80132ea:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80132ee:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80132f2:	4c0e      	ldr	r4, [pc, #56]	; (801332c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80132f4:	8082      	strh	r2, [r0, #4]
 80132f6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80132fa:	80c2      	strh	r2, [r0, #6]
 80132fc:	8102      	strh	r2, [r0, #8]
 80132fe:	8142      	strh	r2, [r0, #10]
 8013300:	8182      	strh	r2, [r0, #12]
 8013302:	81c2      	strh	r2, [r0, #14]
 8013304:	8202      	strh	r2, [r0, #16]
 8013306:	8242      	strh	r2, [r0, #18]
 8013308:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801330c:	61c2      	str	r2, [r0, #28]
 801330e:	8402      	strh	r2, [r0, #32]
 8013310:	8442      	strh	r2, [r0, #34]	; 0x22
 8013312:	6282      	str	r2, [r0, #40]	; 0x28
 8013314:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013318:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801331a:	8601      	strh	r1, [r0, #48]	; 0x30
 801331c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013320:	6004      	str	r4, [r0, #0]
 8013322:	8681      	strh	r1, [r0, #52]	; 0x34
 8013324:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013326:	8702      	strh	r2, [r0, #56]	; 0x38
 8013328:	8742      	strh	r2, [r0, #58]	; 0x3a
 801332a:	bd10      	pop	{r4, pc}
 801332c:	0802ed78 	.word	0x0802ed78

08013330 <_ZN8touchgfx5ImageD1Ev>:
 8013330:	4770      	bx	lr

08013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013332:	b570      	push	{r4, r5, r6, lr}
 8013334:	880b      	ldrh	r3, [r1, #0]
 8013336:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013338:	4604      	mov	r4, r0
 801333a:	4608      	mov	r0, r1
 801333c:	460d      	mov	r5, r1
 801333e:	f006 f947 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013342:	4606      	mov	r6, r0
 8013344:	4628      	mov	r0, r5
 8013346:	f006 f977 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801334a:	6823      	ldr	r3, [r4, #0]
 801334c:	4605      	mov	r5, r0
 801334e:	4631      	mov	r1, r6
 8013350:	4620      	mov	r0, r4
 8013352:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013354:	4798      	blx	r3
 8013356:	6823      	ldr	r3, [r4, #0]
 8013358:	4629      	mov	r1, r5
 801335a:	4620      	mov	r0, r4
 801335c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801335e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013362:	4718      	bx	r3

08013364 <_ZN8touchgfx5ImageD0Ev>:
 8013364:	b510      	push	{r4, lr}
 8013366:	212c      	movs	r1, #44	; 0x2c
 8013368:	4604      	mov	r4, r0
 801336a:	f016 fd96 	bl	8029e9a <_ZdlPvj>
 801336e:	4620      	mov	r0, r4
 8013370:	bd10      	pop	{r4, pc}

08013372 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013372:	b510      	push	{r4, lr}
 8013374:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013378:	2bff      	cmp	r3, #255	; 0xff
 801337a:	4604      	mov	r4, r0
 801337c:	d006      	beq.n	801338c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801337e:	2300      	movs	r3, #0
 8013380:	8003      	strh	r3, [r0, #0]
 8013382:	8043      	strh	r3, [r0, #2]
 8013384:	8083      	strh	r3, [r0, #4]
 8013386:	80c3      	strh	r3, [r0, #6]
 8013388:	4620      	mov	r0, r4
 801338a:	bd10      	pop	{r4, pc}
 801338c:	3126      	adds	r1, #38	; 0x26
 801338e:	f006 f987 	bl	80196a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013392:	e7f9      	b.n	8013388 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013394 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013394:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013398:	4604      	mov	r4, r0
 801339a:	b088      	sub	sp, #32
 801339c:	f854 3b26 	ldr.w	r3, [r4], #38
 80133a0:	2500      	movs	r5, #0
 80133a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80133a4:	460f      	mov	r7, r1
 80133a6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80133aa:	a904      	add	r1, sp, #16
 80133ac:	4606      	mov	r6, r0
 80133ae:	4798      	blx	r3
 80133b0:	4620      	mov	r0, r4
 80133b2:	f006 f90d 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80133b6:	4680      	mov	r8, r0
 80133b8:	4620      	mov	r0, r4
 80133ba:	f006 f93d 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80133be:	9506      	str	r5, [sp, #24]
 80133c0:	ad06      	add	r5, sp, #24
 80133c2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80133c6:	4639      	mov	r1, r7
 80133c8:	4628      	mov	r0, r5
 80133ca:	f8ad 801c 	strh.w	r8, [sp, #28]
 80133ce:	f7fc fd5d 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 80133d2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80133d6:	2b00      	cmp	r3, #0
 80133d8:	dd19      	ble.n	801340e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80133da:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80133de:	2b00      	cmp	r3, #0
 80133e0:	dd15      	ble.n	801340e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80133e2:	4b0c      	ldr	r3, [pc, #48]	; (8013414 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80133e4:	681b      	ldr	r3, [r3, #0]
 80133e6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80133ea:	b10a      	cbz	r2, 80133f0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80133ec:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80133ee:	b900      	cbnz	r0, 80133f2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80133f0:	6898      	ldr	r0, [r3, #8]
 80133f2:	6801      	ldr	r1, [r0, #0]
 80133f4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80133f8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80133fc:	2701      	movs	r7, #1
 80133fe:	9702      	str	r7, [sp, #8]
 8013400:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013404:	e9cd 5600 	strd	r5, r6, [sp]
 8013408:	688d      	ldr	r5, [r1, #8]
 801340a:	4621      	mov	r1, r4
 801340c:	47a8      	blx	r5
 801340e:	b008      	add	sp, #32
 8013410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013414:	200132bc 	.word	0x200132bc

08013418 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013418:	4770      	bx	lr

0801341a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801341a:	b510      	push	{r4, lr}
 801341c:	2148      	movs	r1, #72	; 0x48
 801341e:	4604      	mov	r4, r0
 8013420:	f016 fd3b 	bl	8029e9a <_ZdlPvj>
 8013424:	4620      	mov	r0, r4
 8013426:	bd10      	pop	{r4, pc}

08013428 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013428:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801342c:	b08d      	sub	sp, #52	; 0x34
 801342e:	4604      	mov	r4, r0
 8013430:	460f      	mov	r7, r1
 8013432:	f7ff fdcb 	bl	8012fcc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013436:	4a55      	ldr	r2, [pc, #340]	; (801358c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013438:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801343a:	8812      	ldrh	r2, [r2, #0]
 801343c:	429a      	cmp	r2, r3
 801343e:	f240 8082 	bls.w	8013546 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013442:	4d53      	ldr	r5, [pc, #332]	; (8013590 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013444:	682a      	ldr	r2, [r5, #0]
 8013446:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801344a:	4b52      	ldr	r3, [pc, #328]	; (8013594 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801344c:	681b      	ldr	r3, [r3, #0]
 801344e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013452:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8013456:	2200      	movs	r2, #0
 8013458:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801345c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013460:	2a03      	cmp	r2, #3
 8013462:	d811      	bhi.n	8013488 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013464:	e8df f002 	tbb	[pc, r2]
 8013468:	89727902 	.word	0x89727902
 801346c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013470:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013474:	1ad2      	subs	r2, r2, r3
 8013476:	2002      	movs	r0, #2
 8013478:	f8ad 1010 	strh.w	r1, [sp, #16]
 801347c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013480:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013484:	f8ad 200e 	strh.w	r2, [sp, #14]
 8013488:	f10d 080c 	add.w	r8, sp, #12
 801348c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013490:	f10d 0914 	add.w	r9, sp, #20
 8013494:	e889 0003 	stmia.w	r9, {r0, r1}
 8013498:	4639      	mov	r1, r7
 801349a:	4648      	mov	r0, r9
 801349c:	f7fc fcf6 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 80134a0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80134a4:	2b00      	cmp	r3, #0
 80134a6:	dd4e      	ble.n	8013546 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80134a8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80134ac:	2b00      	cmp	r3, #0
 80134ae:	dd4a      	ble.n	8013546 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80134b0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80134b4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80134b8:	1a9b      	subs	r3, r3, r2
 80134ba:	f8ad 3014 	strh.w	r3, [sp, #20]
 80134be:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80134c2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80134c6:	1a9b      	subs	r3, r3, r2
 80134c8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80134cc:	6823      	ldr	r3, [r4, #0]
 80134ce:	4641      	mov	r1, r8
 80134d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80134d2:	4620      	mov	r0, r4
 80134d4:	4798      	blx	r3
 80134d6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80134da:	2b00      	cmp	r3, #0
 80134dc:	d053      	beq.n	8013586 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80134de:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80134e0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80134e2:	682b      	ldr	r3, [r5, #0]
 80134e4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80134e8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80134ec:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80134f0:	785b      	ldrb	r3, [r3, #1]
 80134f2:	9209      	str	r2, [sp, #36]	; 0x24
 80134f4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80134f8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80134fc:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013500:	2300      	movs	r3, #0
 8013502:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013506:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801350a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801350e:	4b22      	ldr	r3, [pc, #136]	; (8013598 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013510:	9607      	str	r6, [sp, #28]
 8013512:	681b      	ldr	r3, [r3, #0]
 8013514:	f88d 5020 	strb.w	r5, [sp, #32]
 8013518:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801351c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013520:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013524:	b10a      	cbz	r2, 801352a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013526:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013528:	b904      	cbnz	r4, 801352c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801352a:	689c      	ldr	r4, [r3, #8]
 801352c:	4b1b      	ldr	r3, [pc, #108]	; (801359c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801352e:	6818      	ldr	r0, [r3, #0]
 8013530:	f7f4 fce2 	bl	8007ef8 <_ZNK8touchgfx5Texts7getTextEt>
 8013534:	ab07      	add	r3, sp, #28
 8013536:	9001      	str	r0, [sp, #4]
 8013538:	9300      	str	r3, [sp, #0]
 801353a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801353e:	464b      	mov	r3, r9
 8013540:	4620      	mov	r0, r4
 8013542:	f7f4 fc8b 	bl	8007e5c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013546:	b00d      	add	sp, #52	; 0x34
 8013548:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801354c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013550:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013554:	1ad2      	subs	r2, r2, r3
 8013556:	3201      	adds	r2, #1
 8013558:	e78d      	b.n	8013476 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801355a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801355e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013562:	1ad2      	subs	r2, r2, r3
 8013564:	3201      	adds	r2, #1
 8013566:	2002      	movs	r0, #2
 8013568:	f8ad 3010 	strh.w	r3, [sp, #16]
 801356c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013570:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013574:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013578:	e786      	b.n	8013488 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801357a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801357e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013582:	1ad2      	subs	r2, r2, r3
 8013584:	e7ef      	b.n	8013566 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8013586:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013588:	e7aa      	b.n	80134e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801358a:	bf00      	nop
 801358c:	20013318 	.word	0x20013318
 8013590:	20013314 	.word	0x20013314
 8013594:	2001331c 	.word	0x2001331c
 8013598:	200132bc 	.word	0x200132bc
 801359c:	20013320 	.word	0x20013320

080135a0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80135a0:	b510      	push	{r4, lr}
 80135a2:	2101      	movs	r1, #1
 80135a4:	4c13      	ldr	r4, [pc, #76]	; (80135f4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80135a6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80135aa:	2200      	movs	r2, #0
 80135ac:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80135b0:	6004      	str	r4, [r0, #0]
 80135b2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80135b6:	4c10      	ldr	r4, [pc, #64]	; (80135f8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80135b8:	8082      	strh	r2, [r0, #4]
 80135ba:	80c2      	strh	r2, [r0, #6]
 80135bc:	8102      	strh	r2, [r0, #8]
 80135be:	8142      	strh	r2, [r0, #10]
 80135c0:	8182      	strh	r2, [r0, #12]
 80135c2:	81c2      	strh	r2, [r0, #14]
 80135c4:	8202      	strh	r2, [r0, #16]
 80135c6:	8242      	strh	r2, [r0, #18]
 80135c8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80135cc:	61c2      	str	r2, [r0, #28]
 80135ce:	8402      	strh	r2, [r0, #32]
 80135d0:	8442      	strh	r2, [r0, #34]	; 0x22
 80135d2:	6282      	str	r2, [r0, #40]	; 0x28
 80135d4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80135d8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80135da:	8601      	strh	r1, [r0, #48]	; 0x30
 80135dc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80135e0:	6344      	str	r4, [r0, #52]	; 0x34
 80135e2:	8701      	strh	r1, [r0, #56]	; 0x38
 80135e4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80135e8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80135ec:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80135f0:	bd10      	pop	{r4, pc}
 80135f2:	bf00      	nop
 80135f4:	0802ee5c 	.word	0x0802ee5c
 80135f8:	0802c650 	.word	0x0802c650

080135fc <_ZN8touchgfx7OutlineD1Ev>:
 80135fc:	4770      	bx	lr

080135fe <_ZN8touchgfx7OutlineD0Ev>:
 80135fe:	b510      	push	{r4, lr}
 8013600:	2130      	movs	r1, #48	; 0x30
 8013602:	4604      	mov	r4, r0
 8013604:	f016 fc49 	bl	8029e9a <_ZdlPvj>
 8013608:	4620      	mov	r0, r4
 801360a:	bd10      	pop	{r4, pc}

0801360c <_ZN8touchgfx7Outline5resetEv>:
 801360c:	b510      	push	{r4, lr}
 801360e:	4604      	mov	r4, r0
 8013610:	f000 fe96 	bl	8014340 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013614:	60e0      	str	r0, [r4, #12]
 8013616:	f000 fe99 	bl	801434c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801361a:	68e3      	ldr	r3, [r4, #12]
 801361c:	6123      	str	r3, [r4, #16]
 801361e:	08c0      	lsrs	r0, r0, #3
 8013620:	2200      	movs	r2, #0
 8013622:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013626:	3801      	subs	r0, #1
 8013628:	6060      	str	r0, [r4, #4]
 801362a:	60a2      	str	r2, [r4, #8]
 801362c:	8019      	strh	r1, [r3, #0]
 801362e:	8059      	strh	r1, [r3, #2]
 8013630:	809a      	strh	r2, [r3, #4]
 8013632:	80da      	strh	r2, [r3, #6]
 8013634:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013636:	f023 0301 	bic.w	r3, r3, #1
 801363a:	f043 0302 	orr.w	r3, r3, #2
 801363e:	6263      	str	r3, [r4, #36]	; 0x24
 8013640:	bd10      	pop	{r4, pc}
	...

08013644 <_ZN8touchgfx7OutlineC1Ev>:
 8013644:	b510      	push	{r4, lr}
 8013646:	4b0a      	ldr	r3, [pc, #40]	; (8013670 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013648:	6003      	str	r3, [r0, #0]
 801364a:	2300      	movs	r3, #0
 801364c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8013650:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8013654:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013658:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801365c:	6243      	str	r3, [r0, #36]	; 0x24
 801365e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8013662:	4604      	mov	r4, r0
 8013664:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8013668:	f7ff ffd0 	bl	801360c <_ZN8touchgfx7Outline5resetEv>
 801366c:	4620      	mov	r0, r4
 801366e:	bd10      	pop	{r4, pc}
 8013670:	0802eed0 	.word	0x0802eed0

08013674 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8013674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013678:	b093      	sub	sp, #76	; 0x4c
 801367a:	1156      	asrs	r6, r2, #5
 801367c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801367e:	9305      	str	r3, [sp, #20]
 8013680:	f004 051f 	and.w	r5, r4, #31
 8013684:	1153      	asrs	r3, r2, #5
 8013686:	9504      	str	r5, [sp, #16]
 8013688:	1165      	asrs	r5, r4, #5
 801368a:	9303      	str	r3, [sp, #12]
 801368c:	42ae      	cmp	r6, r5
 801368e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8013692:	9306      	str	r3, [sp, #24]
 8013694:	f002 031f 	and.w	r3, r2, #31
 8013698:	f040 80f8 	bne.w	801388c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801369c:	9c04      	ldr	r4, [sp, #16]
 801369e:	9a05      	ldr	r2, [sp, #20]
 80136a0:	42a3      	cmp	r3, r4
 80136a2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80136a6:	6902      	ldr	r2, [r0, #16]
 80136a8:	d125      	bne.n	80136f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80136aa:	f9b2 3000 	ldrsh.w	r3, [r2]
 80136ae:	459e      	cmp	lr, r3
 80136b0:	d103      	bne.n	80136ba <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 80136b2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80136b6:	429e      	cmp	r6, r3
 80136b8:	d035      	beq.n	8013726 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80136ba:	88d1      	ldrh	r1, [r2, #6]
 80136bc:	8893      	ldrh	r3, [r2, #4]
 80136be:	430b      	orrs	r3, r1
 80136c0:	d010      	beq.n	80136e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80136c2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80136c6:	2b00      	cmp	r3, #0
 80136c8:	db0c      	blt.n	80136e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80136ca:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80136cc:	428b      	cmp	r3, r1
 80136ce:	da09      	bge.n	80136e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80136d0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80136d4:	428b      	cmp	r3, r1
 80136d6:	bf38      	it	cc
 80136d8:	3208      	addcc	r2, #8
 80136da:	f103 0301 	add.w	r3, r3, #1
 80136de:	bf38      	it	cc
 80136e0:	6102      	strcc	r2, [r0, #16]
 80136e2:	6083      	str	r3, [r0, #8]
 80136e4:	6903      	ldr	r3, [r0, #16]
 80136e6:	9a03      	ldr	r2, [sp, #12]
 80136e8:	f8a3 e000 	strh.w	lr, [r3]
 80136ec:	805a      	strh	r2, [r3, #2]
 80136ee:	2200      	movs	r2, #0
 80136f0:	809a      	strh	r2, [r3, #4]
 80136f2:	80da      	strh	r2, [r3, #6]
 80136f4:	e017      	b.n	8013726 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80136f6:	9c05      	ldr	r4, [sp, #20]
 80136f8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80136fc:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8013700:	f004 041f 	and.w	r4, r4, #31
 8013704:	114e      	asrs	r6, r1, #5
 8013706:	9402      	str	r4, [sp, #8]
 8013708:	9c04      	ldr	r4, [sp, #16]
 801370a:	4576      	cmp	r6, lr
 801370c:	f001 0c1f 	and.w	ip, r1, #31
 8013710:	eba4 0403 	sub.w	r4, r4, r3
 8013714:	d10a      	bne.n	801372c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8013716:	9b02      	ldr	r3, [sp, #8]
 8013718:	449c      	add	ip, r3
 801371a:	44a0      	add	r8, r4
 801371c:	fb04 a40c 	mla	r4, r4, ip, sl
 8013720:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013724:	80d4      	strh	r4, [r2, #6]
 8013726:	b013      	add	sp, #76	; 0x4c
 8013728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801372c:	9d05      	ldr	r5, [sp, #20]
 801372e:	1a69      	subs	r1, r5, r1
 8013730:	bf5b      	ittet	pl
 8013732:	f1cc 0520 	rsbpl	r5, ip, #32
 8013736:	436c      	mulpl	r4, r5
 8013738:	2500      	movmi	r5, #0
 801373a:	2520      	movpl	r5, #32
 801373c:	bf44      	itt	mi
 801373e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013742:	4249      	negmi	r1, r1
 8013744:	9501      	str	r5, [sp, #4]
 8013746:	9f01      	ldr	r7, [sp, #4]
 8013748:	fb94 f5f1 	sdiv	r5, r4, r1
 801374c:	fb01 4415 	mls	r4, r1, r5, r4
 8013750:	bf54      	ite	pl
 8013752:	f04f 0901 	movpl.w	r9, #1
 8013756:	f04f 39ff 	movmi.w	r9, #4294967295
 801375a:	2c00      	cmp	r4, #0
 801375c:	bfb8      	it	lt
 801375e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013762:	44bc      	add	ip, r7
 8013764:	44a8      	add	r8, r5
 8013766:	fb05 ac0c 	mla	ip, r5, ip, sl
 801376a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801376e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013772:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013776:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801377a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801377e:	bfb8      	it	lt
 8013780:	1864      	addlt	r4, r4, r1
 8013782:	ea58 0202 	orrs.w	r2, r8, r2
 8013786:	444e      	add	r6, r9
 8013788:	d011      	beq.n	80137ae <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801378a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801378e:	f1b8 0f00 	cmp.w	r8, #0
 8013792:	db0c      	blt.n	80137ae <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013794:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013796:	4590      	cmp	r8, r2
 8013798:	da09      	bge.n	80137ae <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801379a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801379e:	4590      	cmp	r8, r2
 80137a0:	bf3c      	itt	cc
 80137a2:	f10c 0208 	addcc.w	r2, ip, #8
 80137a6:	6102      	strcc	r2, [r0, #16]
 80137a8:	f108 0201 	add.w	r2, r8, #1
 80137ac:	6082      	str	r2, [r0, #8]
 80137ae:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80137b2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80137b6:	f8ac 6000 	strh.w	r6, [ip]
 80137ba:	2700      	movs	r7, #0
 80137bc:	45b6      	cmp	lr, r6
 80137be:	f8ac 2002 	strh.w	r2, [ip, #2]
 80137c2:	f8ac 7004 	strh.w	r7, [ip, #4]
 80137c6:	f8ac 7006 	strh.w	r7, [ip, #6]
 80137ca:	442b      	add	r3, r5
 80137cc:	d04d      	beq.n	801386a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80137ce:	9f04      	ldr	r7, [sp, #16]
 80137d0:	1aff      	subs	r7, r7, r3
 80137d2:	443d      	add	r5, r7
 80137d4:	016d      	lsls	r5, r5, #5
 80137d6:	fb95 f8f1 	sdiv	r8, r5, r1
 80137da:	fb01 5518 	mls	r5, r1, r8, r5
 80137de:	2d00      	cmp	r5, #0
 80137e0:	bfb8      	it	lt
 80137e2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80137e6:	f108 0701 	add.w	r7, r8, #1
 80137ea:	bfb8      	it	lt
 80137ec:	186d      	addlt	r5, r5, r1
 80137ee:	1a64      	subs	r4, r4, r1
 80137f0:	9703      	str	r7, [sp, #12]
 80137f2:	f04f 0a00 	mov.w	sl, #0
 80137f6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80137fa:	1964      	adds	r4, r4, r5
 80137fc:	bf58      	it	pl
 80137fe:	9f03      	ldrpl	r7, [sp, #12]
 8013800:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013804:	bf48      	it	mi
 8013806:	4647      	movmi	r7, r8
 8013808:	44bb      	add	fp, r7
 801380a:	f8ac b004 	strh.w	fp, [ip, #4]
 801380e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013812:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013816:	f8ac b006 	strh.w	fp, [ip, #6]
 801381a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801381e:	443b      	add	r3, r7
 8013820:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013824:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013828:	bf58      	it	pl
 801382a:	1a64      	subpl	r4, r4, r1
 801382c:	ea5b 0707 	orrs.w	r7, fp, r7
 8013830:	444e      	add	r6, r9
 8013832:	d011      	beq.n	8013858 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013834:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013838:	f1bb 0f00 	cmp.w	fp, #0
 801383c:	db0c      	blt.n	8013858 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801383e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013840:	45bb      	cmp	fp, r7
 8013842:	da09      	bge.n	8013858 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013844:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013848:	45bb      	cmp	fp, r7
 801384a:	bf3c      	itt	cc
 801384c:	f10c 0708 	addcc.w	r7, ip, #8
 8013850:	6107      	strcc	r7, [r0, #16]
 8013852:	f10b 0701 	add.w	r7, fp, #1
 8013856:	6087      	str	r7, [r0, #8]
 8013858:	6907      	ldr	r7, [r0, #16]
 801385a:	45b6      	cmp	lr, r6
 801385c:	803e      	strh	r6, [r7, #0]
 801385e:	807a      	strh	r2, [r7, #2]
 8013860:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013864:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013868:	d1c5      	bne.n	80137f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801386a:	9a04      	ldr	r2, [sp, #16]
 801386c:	1ad3      	subs	r3, r2, r3
 801386e:	6902      	ldr	r2, [r0, #16]
 8013870:	8891      	ldrh	r1, [r2, #4]
 8013872:	88d6      	ldrh	r6, [r2, #6]
 8013874:	4419      	add	r1, r3
 8013876:	8091      	strh	r1, [r2, #4]
 8013878:	9902      	ldr	r1, [sp, #8]
 801387a:	f101 0c20 	add.w	ip, r1, #32
 801387e:	9901      	ldr	r1, [sp, #4]
 8013880:	ebac 0c01 	sub.w	ip, ip, r1
 8013884:	fb03 630c 	mla	r3, r3, ip, r6
 8013888:	80d3      	strh	r3, [r2, #6]
 801388a:	e74c      	b.n	8013726 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801388c:	9d05      	ldr	r5, [sp, #20]
 801388e:	1aa2      	subs	r2, r4, r2
 8013890:	eba5 0501 	sub.w	r5, r5, r1
 8013894:	9508      	str	r5, [sp, #32]
 8013896:	9202      	str	r2, [sp, #8]
 8013898:	f140 8128 	bpl.w	8013aec <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801389c:	9a03      	ldr	r2, [sp, #12]
 801389e:	2a00      	cmp	r2, #0
 80138a0:	f6ff af41 	blt.w	8013726 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80138a4:	9a02      	ldr	r2, [sp, #8]
 80138a6:	4252      	negs	r2, r2
 80138a8:	9202      	str	r2, [sp, #8]
 80138aa:	9a06      	ldr	r2, [sp, #24]
 80138ac:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 80138b0:	f04f 34ff 	mov.w	r4, #4294967295
 80138b4:	9206      	str	r2, [sp, #24]
 80138b6:	462a      	mov	r2, r5
 80138b8:	940b      	str	r4, [sp, #44]	; 0x2c
 80138ba:	435a      	muls	r2, r3
 80138bc:	2400      	movs	r4, #0
 80138be:	9d02      	ldr	r5, [sp, #8]
 80138c0:	9401      	str	r4, [sp, #4]
 80138c2:	9c02      	ldr	r4, [sp, #8]
 80138c4:	fb92 f4f4 	sdiv	r4, r2, r4
 80138c8:	fb05 2214 	mls	r2, r5, r4, r2
 80138cc:	2a00      	cmp	r2, #0
 80138ce:	9207      	str	r2, [sp, #28]
 80138d0:	bfbc      	itt	lt
 80138d2:	1952      	addlt	r2, r2, r5
 80138d4:	9207      	strlt	r2, [sp, #28]
 80138d6:	9a01      	ldr	r2, [sp, #4]
 80138d8:	6905      	ldr	r5, [r0, #16]
 80138da:	bfb8      	it	lt
 80138dc:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80138e0:	eb04 0901 	add.w	r9, r4, r1
 80138e4:	429a      	cmp	r2, r3
 80138e6:	ea4f 1669 	mov.w	r6, r9, asr #5
 80138ea:	f040 8112 	bne.w	8013b12 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80138ee:	f9b5 3000 	ldrsh.w	r3, [r5]
 80138f2:	429e      	cmp	r6, r3
 80138f4:	d104      	bne.n	8013900 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80138f6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80138fa:	9a03      	ldr	r2, [sp, #12]
 80138fc:	429a      	cmp	r2, r3
 80138fe:	d01b      	beq.n	8013938 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013900:	88ea      	ldrh	r2, [r5, #6]
 8013902:	88ab      	ldrh	r3, [r5, #4]
 8013904:	4313      	orrs	r3, r2
 8013906:	d010      	beq.n	801392a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013908:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801390c:	2a00      	cmp	r2, #0
 801390e:	db0c      	blt.n	801392a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013910:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013912:	429a      	cmp	r2, r3
 8013914:	da09      	bge.n	801392a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013916:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801391a:	429a      	cmp	r2, r3
 801391c:	bf38      	it	cc
 801391e:	3508      	addcc	r5, #8
 8013920:	f102 0201 	add.w	r2, r2, #1
 8013924:	bf38      	it	cc
 8013926:	6105      	strcc	r5, [r0, #16]
 8013928:	6082      	str	r2, [r0, #8]
 801392a:	6903      	ldr	r3, [r0, #16]
 801392c:	9a03      	ldr	r2, [sp, #12]
 801392e:	805a      	strh	r2, [r3, #2]
 8013930:	2200      	movs	r2, #0
 8013932:	801e      	strh	r6, [r3, #0]
 8013934:	809a      	strh	r2, [r3, #4]
 8013936:	80da      	strh	r2, [r3, #6]
 8013938:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801393a:	9a03      	ldr	r2, [sp, #12]
 801393c:	6901      	ldr	r1, [r0, #16]
 801393e:	441a      	add	r2, r3
 8013940:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013944:	42b3      	cmp	r3, r6
 8013946:	d103      	bne.n	8013950 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8013948:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801394c:	429a      	cmp	r2, r3
 801394e:	d01a      	beq.n	8013986 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8013950:	88cc      	ldrh	r4, [r1, #6]
 8013952:	888b      	ldrh	r3, [r1, #4]
 8013954:	4323      	orrs	r3, r4
 8013956:	d010      	beq.n	801397a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013958:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801395c:	2c00      	cmp	r4, #0
 801395e:	db0c      	blt.n	801397a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013960:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013962:	429c      	cmp	r4, r3
 8013964:	da09      	bge.n	801397a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013966:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801396a:	429c      	cmp	r4, r3
 801396c:	bf38      	it	cc
 801396e:	3108      	addcc	r1, #8
 8013970:	f104 0401 	add.w	r4, r4, #1
 8013974:	bf38      	it	cc
 8013976:	6101      	strcc	r1, [r0, #16]
 8013978:	6084      	str	r4, [r0, #8]
 801397a:	6903      	ldr	r3, [r0, #16]
 801397c:	2100      	movs	r1, #0
 801397e:	801e      	strh	r6, [r3, #0]
 8013980:	805a      	strh	r2, [r3, #2]
 8013982:	8099      	strh	r1, [r3, #4]
 8013984:	80d9      	strh	r1, [r3, #6]
 8013986:	9b06      	ldr	r3, [sp, #24]
 8013988:	4293      	cmp	r3, r2
 801398a:	f000 8082 	beq.w	8013a92 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801398e:	9b08      	ldr	r3, [sp, #32]
 8013990:	9c02      	ldr	r4, [sp, #8]
 8013992:	9902      	ldr	r1, [sp, #8]
 8013994:	015b      	lsls	r3, r3, #5
 8013996:	fb93 f1f1 	sdiv	r1, r3, r1
 801399a:	fb04 3311 	mls	r3, r4, r1, r3
 801399e:	2b00      	cmp	r3, #0
 80139a0:	9103      	str	r1, [sp, #12]
 80139a2:	9308      	str	r3, [sp, #32]
 80139a4:	da04      	bge.n	80139b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80139a6:	1e4b      	subs	r3, r1, #1
 80139a8:	9303      	str	r3, [sp, #12]
 80139aa:	9b08      	ldr	r3, [sp, #32]
 80139ac:	4423      	add	r3, r4
 80139ae:	9308      	str	r3, [sp, #32]
 80139b0:	9b07      	ldr	r3, [sp, #28]
 80139b2:	9902      	ldr	r1, [sp, #8]
 80139b4:	1a5b      	subs	r3, r3, r1
 80139b6:	9307      	str	r3, [sp, #28]
 80139b8:	9b01      	ldr	r3, [sp, #4]
 80139ba:	f1c3 0320 	rsb	r3, r3, #32
 80139be:	930e      	str	r3, [sp, #56]	; 0x38
 80139c0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80139c2:	9b01      	ldr	r3, [sp, #4]
 80139c4:	1a5b      	subs	r3, r3, r1
 80139c6:	464f      	mov	r7, r9
 80139c8:	930a      	str	r3, [sp, #40]	; 0x28
 80139ca:	2600      	movs	r6, #0
 80139cc:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80139d0:	185b      	adds	r3, r3, r1
 80139d2:	bf58      	it	pl
 80139d4:	9902      	ldrpl	r1, [sp, #8]
 80139d6:	9307      	str	r3, [sp, #28]
 80139d8:	bf5d      	ittte	pl
 80139da:	1a5b      	subpl	r3, r3, r1
 80139dc:	9307      	strpl	r3, [sp, #28]
 80139de:	9b03      	ldrpl	r3, [sp, #12]
 80139e0:	9903      	ldrmi	r1, [sp, #12]
 80139e2:	bf58      	it	pl
 80139e4:	1c59      	addpl	r1, r3, #1
 80139e6:	4489      	add	r9, r1
 80139e8:	2a00      	cmp	r2, #0
 80139ea:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80139ee:	db2e      	blt.n	8013a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80139f0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80139f2:	4293      	cmp	r3, r2
 80139f4:	dd2b      	ble.n	8013a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80139f6:	9c01      	ldr	r4, [sp, #4]
 80139f8:	6905      	ldr	r5, [r0, #16]
 80139fa:	46a0      	mov	r8, r4
 80139fc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80139fe:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013a02:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013a06:	45a0      	cmp	r8, r4
 8013a08:	f040 814f 	bne.w	8013caa <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8013a0c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013a10:	4551      	cmp	r1, sl
 8013a12:	d103      	bne.n	8013a1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013a14:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013a18:	4291      	cmp	r1, r2
 8013a1a:	d018      	beq.n	8013a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013a1c:	ea5c 010e 	orrs.w	r1, ip, lr
 8013a20:	d00f      	beq.n	8013a42 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013a22:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013a26:	2900      	cmp	r1, #0
 8013a28:	db0b      	blt.n	8013a42 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013a2a:	428b      	cmp	r3, r1
 8013a2c:	dd09      	ble.n	8013a42 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013a2e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013a32:	4299      	cmp	r1, r3
 8013a34:	bf38      	it	cc
 8013a36:	3508      	addcc	r5, #8
 8013a38:	f101 0101 	add.w	r1, r1, #1
 8013a3c:	bf38      	it	cc
 8013a3e:	6105      	strcc	r5, [r0, #16]
 8013a40:	6081      	str	r1, [r0, #8]
 8013a42:	6903      	ldr	r3, [r0, #16]
 8013a44:	f8a3 a000 	strh.w	sl, [r3]
 8013a48:	805a      	strh	r2, [r3, #2]
 8013a4a:	809e      	strh	r6, [r3, #4]
 8013a4c:	80de      	strh	r6, [r3, #6]
 8013a4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a50:	6901      	ldr	r1, [r0, #16]
 8013a52:	441a      	add	r2, r3
 8013a54:	88cc      	ldrh	r4, [r1, #6]
 8013a56:	888b      	ldrh	r3, [r1, #4]
 8013a58:	4323      	orrs	r3, r4
 8013a5a:	d010      	beq.n	8013a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013a5c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013a60:	2c00      	cmp	r4, #0
 8013a62:	db0c      	blt.n	8013a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013a64:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013a66:	429c      	cmp	r4, r3
 8013a68:	da09      	bge.n	8013a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013a6a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8013a6e:	429c      	cmp	r4, r3
 8013a70:	bf38      	it	cc
 8013a72:	3108      	addcc	r1, #8
 8013a74:	f104 0401 	add.w	r4, r4, #1
 8013a78:	bf38      	it	cc
 8013a7a:	6101      	strcc	r1, [r0, #16]
 8013a7c:	6084      	str	r4, [r0, #8]
 8013a7e:	6903      	ldr	r3, [r0, #16]
 8013a80:	f8a3 a000 	strh.w	sl, [r3]
 8013a84:	805a      	strh	r2, [r3, #2]
 8013a86:	809e      	strh	r6, [r3, #4]
 8013a88:	80de      	strh	r6, [r3, #6]
 8013a8a:	9b06      	ldr	r3, [sp, #24]
 8013a8c:	4293      	cmp	r3, r2
 8013a8e:	464f      	mov	r7, r9
 8013a90:	d19c      	bne.n	80139cc <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8013a92:	9b01      	ldr	r3, [sp, #4]
 8013a94:	6907      	ldr	r7, [r0, #16]
 8013a96:	f1c3 0620 	rsb	r6, r3, #32
 8013a9a:	9b05      	ldr	r3, [sp, #20]
 8013a9c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8013aa0:	9b04      	ldr	r3, [sp, #16]
 8013aa2:	429e      	cmp	r6, r3
 8013aa4:	f040 81cc 	bne.w	8013e40 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8013aa8:	f9b7 3000 	ldrsh.w	r3, [r7]
 8013aac:	459e      	cmp	lr, r3
 8013aae:	d104      	bne.n	8013aba <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013ab0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013ab4:	429a      	cmp	r2, r3
 8013ab6:	f43f ae36 	beq.w	8013726 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013aba:	88f9      	ldrh	r1, [r7, #6]
 8013abc:	88bb      	ldrh	r3, [r7, #4]
 8013abe:	430b      	orrs	r3, r1
 8013ac0:	d010      	beq.n	8013ae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013ac2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013ac6:	2b00      	cmp	r3, #0
 8013ac8:	db0c      	blt.n	8013ae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013aca:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8013acc:	428b      	cmp	r3, r1
 8013ace:	da09      	bge.n	8013ae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013ad0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013ad4:	428b      	cmp	r3, r1
 8013ad6:	bf38      	it	cc
 8013ad8:	3708      	addcc	r7, #8
 8013ada:	f103 0301 	add.w	r3, r3, #1
 8013ade:	bf38      	it	cc
 8013ae0:	6107      	strcc	r7, [r0, #16]
 8013ae2:	6083      	str	r3, [r0, #8]
 8013ae4:	6903      	ldr	r3, [r0, #16]
 8013ae6:	f8a3 e000 	strh.w	lr, [r3]
 8013aea:	e5ff      	b.n	80136ec <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8013aec:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013aee:	9c03      	ldr	r4, [sp, #12]
 8013af0:	42a2      	cmp	r2, r4
 8013af2:	f6ff ae18 	blt.w	8013726 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013af6:	9c06      	ldr	r4, [sp, #24]
 8013af8:	42a2      	cmp	r2, r4
 8013afa:	bfb8      	it	lt
 8013afc:	3201      	addlt	r2, #1
 8013afe:	9c08      	ldr	r4, [sp, #32]
 8013b00:	bfb8      	it	lt
 8013b02:	9206      	strlt	r2, [sp, #24]
 8013b04:	f1c3 0220 	rsb	r2, r3, #32
 8013b08:	4362      	muls	r2, r4
 8013b0a:	2401      	movs	r4, #1
 8013b0c:	940b      	str	r4, [sp, #44]	; 0x2c
 8013b0e:	2420      	movs	r4, #32
 8013b10:	e6d5      	b.n	80138be <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013b12:	f009 021f 	and.w	r2, r9, #31
 8013b16:	ea4f 1861 	mov.w	r8, r1, asr #5
 8013b1a:	920c      	str	r2, [sp, #48]	; 0x30
 8013b1c:	9a01      	ldr	r2, [sp, #4]
 8013b1e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013b22:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013b26:	45b0      	cmp	r8, r6
 8013b28:	f001 011f 	and.w	r1, r1, #31
 8013b2c:	eba2 0203 	sub.w	r2, r2, r3
 8013b30:	d108      	bne.n	8013b44 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013b32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013b34:	4419      	add	r1, r3
 8013b36:	4496      	add	lr, r2
 8013b38:	fb02 a101 	mla	r1, r2, r1, sl
 8013b3c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013b40:	80e9      	strh	r1, [r5, #6]
 8013b42:	e6f9      	b.n	8013938 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013b44:	2c00      	cmp	r4, #0
 8013b46:	f2c0 80a9 	blt.w	8013c9c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8013b4a:	2701      	movs	r7, #1
 8013b4c:	f1c1 0c20 	rsb	ip, r1, #32
 8013b50:	970a      	str	r7, [sp, #40]	; 0x28
 8013b52:	fb02 f20c 	mul.w	r2, r2, ip
 8013b56:	2720      	movs	r7, #32
 8013b58:	9709      	str	r7, [sp, #36]	; 0x24
 8013b5a:	fb92 fcf4 	sdiv	ip, r2, r4
 8013b5e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013b60:	fb04 221c 	mls	r2, r4, ip, r2
 8013b64:	2a00      	cmp	r2, #0
 8013b66:	bfb8      	it	lt
 8013b68:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8013b6c:	4439      	add	r1, r7
 8013b6e:	fb0c a101 	mla	r1, ip, r1, sl
 8013b72:	80e9      	strh	r1, [r5, #6]
 8013b74:	44e6      	add	lr, ip
 8013b76:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013b78:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013b7c:	eb08 0501 	add.w	r5, r8, r1
 8013b80:	6901      	ldr	r1, [r0, #16]
 8013b82:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013b86:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8013b8a:	bfb8      	it	lt
 8013b8c:	1912      	addlt	r2, r2, r4
 8013b8e:	ea58 070e 	orrs.w	r7, r8, lr
 8013b92:	d010      	beq.n	8013bb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013b94:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013b98:	f1be 0f00 	cmp.w	lr, #0
 8013b9c:	db0b      	blt.n	8013bb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013b9e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013ba0:	45be      	cmp	lr, r7
 8013ba2:	da08      	bge.n	8013bb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013ba4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013ba8:	45be      	cmp	lr, r7
 8013baa:	bf3c      	itt	cc
 8013bac:	3108      	addcc	r1, #8
 8013bae:	6101      	strcc	r1, [r0, #16]
 8013bb0:	f10e 0101 	add.w	r1, lr, #1
 8013bb4:	6081      	str	r1, [r0, #8]
 8013bb6:	6901      	ldr	r1, [r0, #16]
 8013bb8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013bbc:	800d      	strh	r5, [r1, #0]
 8013bbe:	f04f 0e00 	mov.w	lr, #0
 8013bc2:	42ae      	cmp	r6, r5
 8013bc4:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013bc8:	f8a1 e004 	strh.w	lr, [r1, #4]
 8013bcc:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013bd0:	4463      	add	r3, ip
 8013bd2:	d054      	beq.n	8013c7e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013bd4:	9901      	ldr	r1, [sp, #4]
 8013bd6:	1ac9      	subs	r1, r1, r3
 8013bd8:	4461      	add	r1, ip
 8013bda:	0149      	lsls	r1, r1, #5
 8013bdc:	fb91 fef4 	sdiv	lr, r1, r4
 8013be0:	fb04 111e 	mls	r1, r4, lr, r1
 8013be4:	2900      	cmp	r1, #0
 8013be6:	bfb8      	it	lt
 8013be8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8013bec:	f10e 0701 	add.w	r7, lr, #1
 8013bf0:	bfb8      	it	lt
 8013bf2:	1909      	addlt	r1, r1, r4
 8013bf4:	1b12      	subs	r2, r2, r4
 8013bf6:	970d      	str	r7, [sp, #52]	; 0x34
 8013bf8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8013bfc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013bfe:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013c02:	1852      	adds	r2, r2, r1
 8013c04:	bf54      	ite	pl
 8013c06:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8013c0a:	46f4      	movmi	ip, lr
 8013c0c:	44e3      	add	fp, ip
 8013c0e:	f8aa b004 	strh.w	fp, [sl, #4]
 8013c12:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013c16:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8013c1a:	f8aa b006 	strh.w	fp, [sl, #6]
 8013c1e:	4463      	add	r3, ip
 8013c20:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013c24:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013c28:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8013c2c:	bf58      	it	pl
 8013c2e:	1b12      	subpl	r2, r2, r4
 8013c30:	443d      	add	r5, r7
 8013c32:	ea5b 070a 	orrs.w	r7, fp, sl
 8013c36:	d014      	beq.n	8013c62 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013c38:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8013c3c:	f1ba 0f00 	cmp.w	sl, #0
 8013c40:	db0f      	blt.n	8013c62 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013c42:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013c44:	45ba      	cmp	sl, r7
 8013c46:	da0c      	bge.n	8013c62 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013c48:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8013c4c:	45ba      	cmp	sl, r7
 8013c4e:	bf38      	it	cc
 8013c50:	f10c 0c08 	addcc.w	ip, ip, #8
 8013c54:	f10a 0a01 	add.w	sl, sl, #1
 8013c58:	bf38      	it	cc
 8013c5a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8013c5e:	f8c0 a008 	str.w	sl, [r0, #8]
 8013c62:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013c66:	f04f 0700 	mov.w	r7, #0
 8013c6a:	42ae      	cmp	r6, r5
 8013c6c:	f8ac 5000 	strh.w	r5, [ip]
 8013c70:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013c74:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013c78:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013c7c:	d1bc      	bne.n	8013bf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8013c7e:	6904      	ldr	r4, [r0, #16]
 8013c80:	9a01      	ldr	r2, [sp, #4]
 8013c82:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013c84:	1ad3      	subs	r3, r2, r3
 8013c86:	88a2      	ldrh	r2, [r4, #4]
 8013c88:	441a      	add	r2, r3
 8013c8a:	80a2      	strh	r2, [r4, #4]
 8013c8c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013c8e:	3120      	adds	r1, #32
 8013c90:	1a89      	subs	r1, r1, r2
 8013c92:	88e2      	ldrh	r2, [r4, #6]
 8013c94:	fb03 2301 	mla	r3, r3, r1, r2
 8013c98:	80e3      	strh	r3, [r4, #6]
 8013c9a:	e64d      	b.n	8013938 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013c9c:	f04f 37ff 	mov.w	r7, #4294967295
 8013ca0:	970a      	str	r7, [sp, #40]	; 0x28
 8013ca2:	434a      	muls	r2, r1
 8013ca4:	4264      	negs	r4, r4
 8013ca6:	2700      	movs	r7, #0
 8013ca8:	e756      	b.n	8013b58 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8013caa:	ea4f 1867 	mov.w	r8, r7, asr #5
 8013cae:	f009 031f 	and.w	r3, r9, #31
 8013cb2:	45d0      	cmp	r8, sl
 8013cb4:	f007 071f 	and.w	r7, r7, #31
 8013cb8:	930f      	str	r3, [sp, #60]	; 0x3c
 8013cba:	fa1f fc8c 	uxth.w	ip, ip
 8013cbe:	fa1f fe8e 	uxth.w	lr, lr
 8013cc2:	d10a      	bne.n	8013cda <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013cc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013cc6:	449c      	add	ip, r3
 8013cc8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013cca:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013cce:	441f      	add	r7, r3
 8013cd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013cd2:	fb03 e707 	mla	r7, r3, r7, lr
 8013cd6:	80ef      	strh	r7, [r5, #6]
 8013cd8:	e6b9      	b.n	8013a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013cda:	2900      	cmp	r1, #0
 8013cdc:	f2c0 80a8 	blt.w	8013e30 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013ce0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013ce2:	f1c7 0320 	rsb	r3, r7, #32
 8013ce6:	4363      	muls	r3, r4
 8013ce8:	2401      	movs	r4, #1
 8013cea:	940d      	str	r4, [sp, #52]	; 0x34
 8013cec:	2420      	movs	r4, #32
 8013cee:	940c      	str	r4, [sp, #48]	; 0x30
 8013cf0:	fb93 f4f1 	sdiv	r4, r3, r1
 8013cf4:	fb01 3b14 	mls	fp, r1, r4, r3
 8013cf8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013cfa:	f1bb 0f00 	cmp.w	fp, #0
 8013cfe:	bfb8      	it	lt
 8013d00:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013d04:	441f      	add	r7, r3
 8013d06:	fb04 e707 	mla	r7, r4, r7, lr
 8013d0a:	44a4      	add	ip, r4
 8013d0c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013d10:	80ef      	strh	r7, [r5, #6]
 8013d12:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013d16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d18:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8013d1c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013d20:	bfb8      	it	lt
 8013d22:	448b      	addlt	fp, r1
 8013d24:	eb08 0503 	add.w	r5, r8, r3
 8013d28:	ea5e 0307 	orrs.w	r3, lr, r7
 8013d2c:	d011      	beq.n	8013d52 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013d2e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013d32:	f1be 0f00 	cmp.w	lr, #0
 8013d36:	db0c      	blt.n	8013d52 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013d38:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013d3a:	45be      	cmp	lr, r7
 8013d3c:	da09      	bge.n	8013d52 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013d3e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013d42:	45be      	cmp	lr, r7
 8013d44:	bf3c      	itt	cc
 8013d46:	f10c 0708 	addcc.w	r7, ip, #8
 8013d4a:	6107      	strcc	r7, [r0, #16]
 8013d4c:	f10e 0701 	add.w	r7, lr, #1
 8013d50:	6087      	str	r7, [r0, #8]
 8013d52:	6907      	ldr	r7, [r0, #16]
 8013d54:	b213      	sxth	r3, r2
 8013d56:	9310      	str	r3, [sp, #64]	; 0x40
 8013d58:	807b      	strh	r3, [r7, #2]
 8013d5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013d5c:	803d      	strh	r5, [r7, #0]
 8013d5e:	4555      	cmp	r5, sl
 8013d60:	80be      	strh	r6, [r7, #4]
 8013d62:	80fe      	strh	r6, [r7, #6]
 8013d64:	eb04 0c03 	add.w	ip, r4, r3
 8013d68:	d051      	beq.n	8013e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8013d6a:	9b01      	ldr	r3, [sp, #4]
 8013d6c:	eba3 070c 	sub.w	r7, r3, ip
 8013d70:	443c      	add	r4, r7
 8013d72:	0164      	lsls	r4, r4, #5
 8013d74:	fb94 f8f1 	sdiv	r8, r4, r1
 8013d78:	fb01 4418 	mls	r4, r1, r8, r4
 8013d7c:	2c00      	cmp	r4, #0
 8013d7e:	bfb8      	it	lt
 8013d80:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013d84:	ebab 0301 	sub.w	r3, fp, r1
 8013d88:	f108 0701 	add.w	r7, r8, #1
 8013d8c:	bfb8      	it	lt
 8013d8e:	1864      	addlt	r4, r4, r1
 8013d90:	9309      	str	r3, [sp, #36]	; 0x24
 8013d92:	9711      	str	r7, [sp, #68]	; 0x44
 8013d94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d96:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013d9a:	191b      	adds	r3, r3, r4
 8013d9c:	bf58      	it	pl
 8013d9e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013da0:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013da4:	9309      	str	r3, [sp, #36]	; 0x24
 8013da6:	bf48      	it	mi
 8013da8:	4647      	movmi	r7, r8
 8013daa:	44bb      	add	fp, r7
 8013dac:	f8ae b004 	strh.w	fp, [lr, #4]
 8013db0:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013db4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013db8:	f8ae b006 	strh.w	fp, [lr, #6]
 8013dbc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013dc0:	44bc      	add	ip, r7
 8013dc2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013dc4:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013dc8:	443d      	add	r5, r7
 8013dca:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8013dce:	bf5c      	itt	pl
 8013dd0:	1a5b      	subpl	r3, r3, r1
 8013dd2:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013dd4:	ea5b 0307 	orrs.w	r3, fp, r7
 8013dd8:	d011      	beq.n	8013dfe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013dda:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8013dde:	f1bb 0f00 	cmp.w	fp, #0
 8013de2:	db0c      	blt.n	8013dfe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013de4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013de6:	45bb      	cmp	fp, r7
 8013de8:	da09      	bge.n	8013dfe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013dea:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013dee:	45bb      	cmp	fp, r7
 8013df0:	bf3c      	itt	cc
 8013df2:	f10e 0708 	addcc.w	r7, lr, #8
 8013df6:	6107      	strcc	r7, [r0, #16]
 8013df8:	f10b 0701 	add.w	r7, fp, #1
 8013dfc:	6087      	str	r7, [r0, #8]
 8013dfe:	6907      	ldr	r7, [r0, #16]
 8013e00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e02:	803d      	strh	r5, [r7, #0]
 8013e04:	4555      	cmp	r5, sl
 8013e06:	807b      	strh	r3, [r7, #2]
 8013e08:	80be      	strh	r6, [r7, #4]
 8013e0a:	80fe      	strh	r6, [r7, #6]
 8013e0c:	d1c2      	bne.n	8013d94 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8013e0e:	9b01      	ldr	r3, [sp, #4]
 8013e10:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013e12:	eba3 0c0c 	sub.w	ip, r3, ip
 8013e16:	6903      	ldr	r3, [r0, #16]
 8013e18:	8899      	ldrh	r1, [r3, #4]
 8013e1a:	4461      	add	r1, ip
 8013e1c:	8099      	strh	r1, [r3, #4]
 8013e1e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013e20:	3720      	adds	r7, #32
 8013e22:	1a7f      	subs	r7, r7, r1
 8013e24:	88d9      	ldrh	r1, [r3, #6]
 8013e26:	fb0c 1c07 	mla	ip, ip, r7, r1
 8013e2a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8013e2e:	e60e      	b.n	8013a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013e30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013e32:	f04f 34ff 	mov.w	r4, #4294967295
 8013e36:	940d      	str	r4, [sp, #52]	; 0x34
 8013e38:	437b      	muls	r3, r7
 8013e3a:	4249      	negs	r1, r1
 8013e3c:	2400      	movs	r4, #0
 8013e3e:	e756      	b.n	8013cee <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013e40:	9905      	ldr	r1, [sp, #20]
 8013e42:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013e46:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8013e4a:	f001 011f 	and.w	r1, r1, #31
 8013e4e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013e52:	9102      	str	r1, [sp, #8]
 8013e54:	9904      	ldr	r1, [sp, #16]
 8013e56:	45f3      	cmp	fp, lr
 8013e58:	f009 0c1f 	and.w	ip, r9, #31
 8013e5c:	eba1 0406 	sub.w	r4, r1, r6
 8013e60:	d108      	bne.n	8013e74 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013e62:	9b02      	ldr	r3, [sp, #8]
 8013e64:	449c      	add	ip, r3
 8013e66:	44a0      	add	r8, r4
 8013e68:	fb04 a40c 	mla	r4, r4, ip, sl
 8013e6c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013e70:	80fc      	strh	r4, [r7, #6]
 8013e72:	e458      	b.n	8013726 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013e74:	9905      	ldr	r1, [sp, #20]
 8013e76:	ebb1 0109 	subs.w	r1, r1, r9
 8013e7a:	bf5b      	ittet	pl
 8013e7c:	f1cc 0520 	rsbpl	r5, ip, #32
 8013e80:	436c      	mulpl	r4, r5
 8013e82:	2500      	movmi	r5, #0
 8013e84:	2520      	movpl	r5, #32
 8013e86:	bf44      	itt	mi
 8013e88:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013e8c:	4249      	negmi	r1, r1
 8013e8e:	9501      	str	r5, [sp, #4]
 8013e90:	9b01      	ldr	r3, [sp, #4]
 8013e92:	fb94 f5f1 	sdiv	r5, r4, r1
 8013e96:	fb01 4415 	mls	r4, r1, r5, r4
 8013e9a:	bf54      	ite	pl
 8013e9c:	f04f 0901 	movpl.w	r9, #1
 8013ea0:	f04f 39ff 	movmi.w	r9, #4294967295
 8013ea4:	2c00      	cmp	r4, #0
 8013ea6:	bfb8      	it	lt
 8013ea8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013eac:	449c      	add	ip, r3
 8013eae:	44a8      	add	r8, r5
 8013eb0:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013eb4:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013eb8:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013ebc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013ec0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013ec4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013ec8:	bfb8      	it	lt
 8013eca:	1864      	addlt	r4, r4, r1
 8013ecc:	ea58 0707 	orrs.w	r7, r8, r7
 8013ed0:	eb0b 0309 	add.w	r3, fp, r9
 8013ed4:	d011      	beq.n	8013efa <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013ed6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013eda:	f1b8 0f00 	cmp.w	r8, #0
 8013ede:	db0c      	blt.n	8013efa <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013ee0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013ee2:	45b8      	cmp	r8, r7
 8013ee4:	da09      	bge.n	8013efa <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013ee6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013eea:	45b8      	cmp	r8, r7
 8013eec:	bf3c      	itt	cc
 8013eee:	f10c 0708 	addcc.w	r7, ip, #8
 8013ef2:	6107      	strcc	r7, [r0, #16]
 8013ef4:	f108 0701 	add.w	r7, r8, #1
 8013ef8:	6087      	str	r7, [r0, #8]
 8013efa:	6907      	ldr	r7, [r0, #16]
 8013efc:	f04f 0c00 	mov.w	ip, #0
 8013f00:	b212      	sxth	r2, r2
 8013f02:	459e      	cmp	lr, r3
 8013f04:	803b      	strh	r3, [r7, #0]
 8013f06:	807a      	strh	r2, [r7, #2]
 8013f08:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013f0c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013f10:	442e      	add	r6, r5
 8013f12:	d04d      	beq.n	8013fb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013f14:	9f04      	ldr	r7, [sp, #16]
 8013f16:	1bbf      	subs	r7, r7, r6
 8013f18:	443d      	add	r5, r7
 8013f1a:	016d      	lsls	r5, r5, #5
 8013f1c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013f20:	fb01 5518 	mls	r5, r1, r8, r5
 8013f24:	4565      	cmp	r5, ip
 8013f26:	bfb8      	it	lt
 8013f28:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013f2c:	f108 0701 	add.w	r7, r8, #1
 8013f30:	bfb8      	it	lt
 8013f32:	186d      	addlt	r5, r5, r1
 8013f34:	1a64      	subs	r4, r4, r1
 8013f36:	9703      	str	r7, [sp, #12]
 8013f38:	f04f 0a00 	mov.w	sl, #0
 8013f3c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013f40:	1964      	adds	r4, r4, r5
 8013f42:	bf58      	it	pl
 8013f44:	9f03      	ldrpl	r7, [sp, #12]
 8013f46:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013f4a:	bf48      	it	mi
 8013f4c:	4647      	movmi	r7, r8
 8013f4e:	44bb      	add	fp, r7
 8013f50:	f8ac b004 	strh.w	fp, [ip, #4]
 8013f54:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013f58:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013f5c:	f8ac b006 	strh.w	fp, [ip, #6]
 8013f60:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013f64:	443e      	add	r6, r7
 8013f66:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013f6a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013f6e:	bf58      	it	pl
 8013f70:	1a64      	subpl	r4, r4, r1
 8013f72:	ea5b 0707 	orrs.w	r7, fp, r7
 8013f76:	444b      	add	r3, r9
 8013f78:	d011      	beq.n	8013f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013f7a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013f7e:	f1bb 0f00 	cmp.w	fp, #0
 8013f82:	db0c      	blt.n	8013f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013f84:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013f86:	45bb      	cmp	fp, r7
 8013f88:	da09      	bge.n	8013f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013f8a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013f8e:	45bb      	cmp	fp, r7
 8013f90:	bf3c      	itt	cc
 8013f92:	f10c 0708 	addcc.w	r7, ip, #8
 8013f96:	6107      	strcc	r7, [r0, #16]
 8013f98:	f10b 0701 	add.w	r7, fp, #1
 8013f9c:	6087      	str	r7, [r0, #8]
 8013f9e:	6907      	ldr	r7, [r0, #16]
 8013fa0:	459e      	cmp	lr, r3
 8013fa2:	803b      	strh	r3, [r7, #0]
 8013fa4:	807a      	strh	r2, [r7, #2]
 8013fa6:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013faa:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013fae:	d1c5      	bne.n	8013f3c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013fb0:	9b04      	ldr	r3, [sp, #16]
 8013fb2:	1b9e      	subs	r6, r3, r6
 8013fb4:	6903      	ldr	r3, [r0, #16]
 8013fb6:	889a      	ldrh	r2, [r3, #4]
 8013fb8:	4432      	add	r2, r6
 8013fba:	809a      	strh	r2, [r3, #4]
 8013fbc:	9a02      	ldr	r2, [sp, #8]
 8013fbe:	f102 0c20 	add.w	ip, r2, #32
 8013fc2:	9a01      	ldr	r2, [sp, #4]
 8013fc4:	ebac 0c02 	sub.w	ip, ip, r2
 8013fc8:	88da      	ldrh	r2, [r3, #6]
 8013fca:	fb06 260c 	mla	r6, r6, ip, r2
 8013fce:	80de      	strh	r6, [r3, #6]
 8013fd0:	f7ff bba9 	b.w	8013726 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013fd4 <_ZN8touchgfx7Outline6lineToEii>:
 8013fd4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013fd6:	079b      	lsls	r3, r3, #30
 8013fd8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013fda:	460e      	mov	r6, r1
 8013fdc:	4615      	mov	r5, r2
 8013fde:	d511      	bpl.n	8014004 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013fe0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013fe4:	ea86 0701 	eor.w	r7, r6, r1
 8013fe8:	ea85 0302 	eor.w	r3, r5, r2
 8013fec:	433b      	orrs	r3, r7
 8013fee:	d009      	beq.n	8014004 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013ff0:	4633      	mov	r3, r6
 8013ff2:	9500      	str	r5, [sp, #0]
 8013ff4:	f7ff fb3e 	bl	8013674 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013ff8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013ffa:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8013ffe:	f043 0301 	orr.w	r3, r3, #1
 8014002:	6243      	str	r3, [r0, #36]	; 0x24
 8014004:	b003      	add	sp, #12
 8014006:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014008 <_ZN8touchgfx7Outline6moveToEii>:
 8014008:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801400a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801400c:	4615      	mov	r5, r2
 801400e:	079a      	lsls	r2, r3, #30
 8014010:	4604      	mov	r4, r0
 8014012:	460e      	mov	r6, r1
 8014014:	d401      	bmi.n	801401a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8014016:	f7ff faf9 	bl	801360c <_ZN8touchgfx7Outline5resetEv>
 801401a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801401c:	07db      	lsls	r3, r3, #31
 801401e:	d504      	bpl.n	801402a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014020:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014024:	4620      	mov	r0, r4
 8014026:	f7ff ffd5 	bl	8013fd4 <_ZN8touchgfx7Outline6lineToEii>
 801402a:	6923      	ldr	r3, [r4, #16]
 801402c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014030:	1170      	asrs	r0, r6, #5
 8014032:	4290      	cmp	r0, r2
 8014034:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014038:	d103      	bne.n	8014042 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801403a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801403e:	4291      	cmp	r1, r2
 8014040:	d01a      	beq.n	8014078 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014042:	88df      	ldrh	r7, [r3, #6]
 8014044:	889a      	ldrh	r2, [r3, #4]
 8014046:	433a      	orrs	r2, r7
 8014048:	d010      	beq.n	801406c <_ZN8touchgfx7Outline6moveToEii+0x64>
 801404a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801404e:	2a00      	cmp	r2, #0
 8014050:	db0c      	blt.n	801406c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014052:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014054:	42ba      	cmp	r2, r7
 8014056:	da09      	bge.n	801406c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014058:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801405c:	42ba      	cmp	r2, r7
 801405e:	bf38      	it	cc
 8014060:	3308      	addcc	r3, #8
 8014062:	f102 0201 	add.w	r2, r2, #1
 8014066:	bf38      	it	cc
 8014068:	6123      	strcc	r3, [r4, #16]
 801406a:	60a2      	str	r2, [r4, #8]
 801406c:	6923      	ldr	r3, [r4, #16]
 801406e:	2200      	movs	r2, #0
 8014070:	8018      	strh	r0, [r3, #0]
 8014072:	8059      	strh	r1, [r3, #2]
 8014074:	809a      	strh	r2, [r3, #4]
 8014076:	80da      	strh	r2, [r3, #6]
 8014078:	6166      	str	r6, [r4, #20]
 801407a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801407e:	6225      	str	r5, [r4, #32]
 8014080:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014082 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014082:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014086:	b0d0      	sub	sp, #320	; 0x140
 8014088:	466c      	mov	r4, sp
 801408a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801408e:	4627      	mov	r7, r4
 8014090:	1a0d      	subs	r5, r1, r0
 8014092:	2d48      	cmp	r5, #72	; 0x48
 8014094:	f100 0308 	add.w	r3, r0, #8
 8014098:	f340 80d5 	ble.w	8014246 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801409c:	112d      	asrs	r5, r5, #4
 801409e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80140a2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80140a6:	6816      	ldr	r6, [r2, #0]
 80140a8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80140ac:	6006      	str	r6, [r0, #0]
 80140ae:	6856      	ldr	r6, [r2, #4]
 80140b0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80140b4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80140b8:	6046      	str	r6, [r0, #4]
 80140ba:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80140be:	f8a2 8002 	strh.w	r8, [r2, #2]
 80140c2:	f8a2 e004 	strh.w	lr, [r2, #4]
 80140c6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80140ca:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80140ce:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80140d2:	4565      	cmp	r5, ip
 80140d4:	f1a1 0208 	sub.w	r2, r1, #8
 80140d8:	db06      	blt.n	80140e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80140da:	d119      	bne.n	8014110 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80140dc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80140e0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 80140e4:	42ae      	cmp	r6, r5
 80140e6:	dd13      	ble.n	8014110 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80140e8:	460e      	mov	r6, r1
 80140ea:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80140ee:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80140f2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 80140f6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 80140fa:	601d      	str	r5, [r3, #0]
 80140fc:	6875      	ldr	r5, [r6, #4]
 80140fe:	605d      	str	r5, [r3, #4]
 8014100:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014104:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014108:	f821 8c04 	strh.w	r8, [r1, #-4]
 801410c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014110:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014114:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014118:	42ae      	cmp	r6, r5
 801411a:	db06      	blt.n	801412a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801411c:	d116      	bne.n	801414c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801411e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014122:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014126:	45ac      	cmp	ip, r5
 8014128:	da10      	bge.n	801414c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801412a:	681d      	ldr	r5, [r3, #0]
 801412c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014130:	6005      	str	r5, [r0, #0]
 8014132:	685d      	ldr	r5, [r3, #4]
 8014134:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014138:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801413c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014140:	6045      	str	r5, [r0, #4]
 8014142:	8146      	strh	r6, [r0, #10]
 8014144:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014148:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801414c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014150:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014154:	4565      	cmp	r5, ip
 8014156:	db06      	blt.n	8014166 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8014158:	d119      	bne.n	801418e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801415a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801415e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014162:	42ae      	cmp	r6, r5
 8014164:	da13      	bge.n	801418e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014166:	460e      	mov	r6, r1
 8014168:	f9b0 9000 	ldrsh.w	r9, [r0]
 801416c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014170:	6005      	str	r5, [r0, #0]
 8014172:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8014176:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801417a:	6875      	ldr	r5, [r6, #4]
 801417c:	6045      	str	r5, [r0, #4]
 801417e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014182:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014186:	f821 8c04 	strh.w	r8, [r1, #-4]
 801418a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801418e:	3308      	adds	r3, #8
 8014190:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014194:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014198:	45e6      	cmp	lr, ip
 801419a:	dbf8      	blt.n	801418e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801419c:	d105      	bne.n	80141aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801419e:	f9b3 6000 	ldrsh.w	r6, [r3]
 80141a2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80141a6:	42ae      	cmp	r6, r5
 80141a8:	dbf1      	blt.n	801418e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80141aa:	4615      	mov	r5, r2
 80141ac:	3a08      	subs	r2, #8
 80141ae:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80141b2:	45b4      	cmp	ip, r6
 80141b4:	dbf9      	blt.n	80141aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80141b6:	d105      	bne.n	80141c4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80141b8:	f9b0 8000 	ldrsh.w	r8, [r0]
 80141bc:	f9b2 6000 	ldrsh.w	r6, [r2]
 80141c0:	45b0      	cmp	r8, r6
 80141c2:	dbf2      	blt.n	80141aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80141c4:	4293      	cmp	r3, r2
 80141c6:	f1a5 0608 	sub.w	r6, r5, #8
 80141ca:	d816      	bhi.n	80141fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80141cc:	f8d6 c000 	ldr.w	ip, [r6]
 80141d0:	f9b3 a000 	ldrsh.w	sl, [r3]
 80141d4:	f8c3 c000 	str.w	ip, [r3]
 80141d8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80141dc:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80141e0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80141e4:	f8c3 c004 	str.w	ip, [r3, #4]
 80141e8:	f825 ac08 	strh.w	sl, [r5, #-8]
 80141ec:	f825 ec06 	strh.w	lr, [r5, #-6]
 80141f0:	f825 9c04 	strh.w	r9, [r5, #-4]
 80141f4:	f825 8c02 	strh.w	r8, [r5, #-2]
 80141f8:	e7c9      	b.n	801418e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80141fa:	f8d6 e000 	ldr.w	lr, [r6]
 80141fe:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014202:	f8c0 e000 	str.w	lr, [r0]
 8014206:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801420a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801420e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014212:	f8c0 e004 	str.w	lr, [r0, #4]
 8014216:	f825 ac08 	strh.w	sl, [r5, #-8]
 801421a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801421e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014222:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014226:	1acd      	subs	r5, r1, r3
 8014228:	1a16      	subs	r6, r2, r0
 801422a:	10ed      	asrs	r5, r5, #3
 801422c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014230:	bfb5      	itete	lt
 8014232:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014236:	e9c4 3100 	strdge	r3, r1, [r4]
 801423a:	460a      	movlt	r2, r1
 801423c:	4603      	movge	r3, r0
 801423e:	3408      	adds	r4, #8
 8014240:	4618      	mov	r0, r3
 8014242:	4611      	mov	r1, r2
 8014244:	e724      	b.n	8014090 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014246:	4299      	cmp	r1, r3
 8014248:	d928      	bls.n	801429c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801424a:	f1a3 0210 	sub.w	r2, r3, #16
 801424e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014252:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014256:	45ac      	cmp	ip, r5
 8014258:	db06      	blt.n	8014268 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801425a:	d11d      	bne.n	8014298 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801425c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014260:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014264:	42ae      	cmp	r6, r5
 8014266:	da17      	bge.n	8014298 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014268:	4615      	mov	r5, r2
 801426a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801426e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014272:	6116      	str	r6, [r2, #16]
 8014274:	686e      	ldr	r6, [r5, #4]
 8014276:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801427a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801427e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014282:	42a8      	cmp	r0, r5
 8014284:	6156      	str	r6, [r2, #20]
 8014286:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801428a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801428e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014292:	f1a2 0208 	sub.w	r2, r2, #8
 8014296:	d1da      	bne.n	801424e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014298:	3308      	adds	r3, #8
 801429a:	e7d4      	b.n	8014246 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801429c:	42bc      	cmp	r4, r7
 801429e:	d903      	bls.n	80142a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80142a0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80142a4:	3c08      	subs	r4, #8
 80142a6:	e6f3      	b.n	8014090 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80142a8:	b050      	add	sp, #320	; 0x140
 80142aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080142ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80142ae:	b510      	push	{r4, lr}
 80142b0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80142b2:	07da      	lsls	r2, r3, #31
 80142b4:	4604      	mov	r4, r0
 80142b6:	d507      	bpl.n	80142c8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80142b8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80142bc:	f7ff fe8a 	bl	8013fd4 <_ZN8touchgfx7Outline6lineToEii>
 80142c0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80142c2:	f023 0301 	bic.w	r3, r3, #1
 80142c6:	6243      	str	r3, [r0, #36]	; 0x24
 80142c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80142ca:	079b      	lsls	r3, r3, #30
 80142cc:	d521      	bpl.n	8014312 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80142ce:	6923      	ldr	r3, [r4, #16]
 80142d0:	88d9      	ldrh	r1, [r3, #6]
 80142d2:	889a      	ldrh	r2, [r3, #4]
 80142d4:	430a      	orrs	r2, r1
 80142d6:	d010      	beq.n	80142fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80142d8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80142dc:	2a00      	cmp	r2, #0
 80142de:	db0c      	blt.n	80142fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80142e0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80142e2:	428a      	cmp	r2, r1
 80142e4:	da09      	bge.n	80142fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80142e6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80142ea:	4291      	cmp	r1, r2
 80142ec:	bf88      	it	hi
 80142ee:	3308      	addhi	r3, #8
 80142f0:	f102 0201 	add.w	r2, r2, #1
 80142f4:	bf88      	it	hi
 80142f6:	6123      	strhi	r3, [r4, #16]
 80142f8:	60a2      	str	r2, [r4, #8]
 80142fa:	68a1      	ldr	r1, [r4, #8]
 80142fc:	b129      	cbz	r1, 801430a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80142fe:	6863      	ldr	r3, [r4, #4]
 8014300:	4299      	cmp	r1, r3
 8014302:	d802      	bhi.n	801430a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014304:	68e0      	ldr	r0, [r4, #12]
 8014306:	f7ff febc 	bl	8014082 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801430a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801430c:	f023 0302 	bic.w	r3, r3, #2
 8014310:	6263      	str	r3, [r4, #36]	; 0x24
 8014312:	68e0      	ldr	r0, [r4, #12]
 8014314:	bd10      	pop	{r4, pc}
	...

08014318 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014318:	4b02      	ldr	r3, [pc, #8]	; (8014324 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801431a:	6018      	str	r0, [r3, #0]
 801431c:	4b02      	ldr	r3, [pc, #8]	; (8014328 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801431e:	6019      	str	r1, [r3, #0]
 8014320:	4770      	bx	lr
 8014322:	bf00      	nop
 8014324:	200132c4 	.word	0x200132c4
 8014328:	200132c8 	.word	0x200132c8

0801432c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801432c:	4a02      	ldr	r2, [pc, #8]	; (8014338 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801432e:	2300      	movs	r3, #0
 8014330:	6013      	str	r3, [r2, #0]
 8014332:	4a02      	ldr	r2, [pc, #8]	; (801433c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014334:	6013      	str	r3, [r2, #0]
 8014336:	4770      	bx	lr
 8014338:	200132c4 	.word	0x200132c4
 801433c:	200132c8 	.word	0x200132c8

08014340 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014340:	4b01      	ldr	r3, [pc, #4]	; (8014348 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014342:	6818      	ldr	r0, [r3, #0]
 8014344:	4770      	bx	lr
 8014346:	bf00      	nop
 8014348:	200132c4 	.word	0x200132c4

0801434c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801434c:	4b01      	ldr	r3, [pc, #4]	; (8014354 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801434e:	6818      	ldr	r0, [r3, #0]
 8014350:	4770      	bx	lr
 8014352:	bf00      	nop
 8014354:	200132c8 	.word	0x200132c8

08014358 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014358:	b510      	push	{r4, lr}
 801435a:	6803      	ldr	r3, [r0, #0]
 801435c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801435e:	460c      	mov	r4, r1
 8014360:	4798      	blx	r3
 8014362:	1b03      	subs	r3, r0, r4
 8014364:	4258      	negs	r0, r3
 8014366:	4158      	adcs	r0, r3
 8014368:	bd10      	pop	{r4, pc}
	...

0801436c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801436c:	4b01      	ldr	r3, [pc, #4]	; (8014374 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801436e:	6019      	str	r1, [r3, #0]
 8014370:	4770      	bx	lr
 8014372:	bf00      	nop
 8014374:	200132cc 	.word	0x200132cc

08014378 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801437c:	4696      	mov	lr, r2
 801437e:	4605      	mov	r5, r0
 8014380:	4614      	mov	r4, r2
 8014382:	460e      	mov	r6, r1
 8014384:	461f      	mov	r7, r3
 8014386:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801438a:	b097      	sub	sp, #92	; 0x5c
 801438c:	f10d 0c1c 	add.w	ip, sp, #28
 8014390:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014394:	f8de 3000 	ldr.w	r3, [lr]
 8014398:	f8cc 3000 	str.w	r3, [ip]
 801439c:	f104 0e14 	add.w	lr, r4, #20
 80143a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80143a4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80143a8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80143ac:	f8de 3000 	ldr.w	r3, [lr]
 80143b0:	f8cc 3000 	str.w	r3, [ip]
 80143b4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80143b8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80143bc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80143c0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80143c4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80143c8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80143cc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80143d0:	f8de 3000 	ldr.w	r3, [lr]
 80143d4:	f8cc 3000 	str.w	r3, [ip]
 80143d8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80143da:	682b      	ldr	r3, [r5, #0]
 80143dc:	9201      	str	r2, [sp, #4]
 80143de:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80143e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80143e4:	9200      	str	r2, [sp, #0]
 80143e6:	f8cd 8008 	str.w	r8, [sp, #8]
 80143ea:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80143ee:	aa07      	add	r2, sp, #28
 80143f0:	463b      	mov	r3, r7
 80143f2:	4631      	mov	r1, r6
 80143f4:	4628      	mov	r0, r5
 80143f6:	47d8      	blx	fp
 80143f8:	46a6      	mov	lr, r4
 80143fa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80143fe:	f10d 0c1c 	add.w	ip, sp, #28
 8014402:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014406:	f8de 3000 	ldr.w	r3, [lr]
 801440a:	f8cc 3000 	str.w	r3, [ip]
 801440e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014412:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014416:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801441a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801441e:	343c      	adds	r4, #60	; 0x3c
 8014420:	f8de 3000 	ldr.w	r3, [lr]
 8014424:	f8cc 3000 	str.w	r3, [ip]
 8014428:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801442a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801442e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014432:	6823      	ldr	r3, [r4, #0]
 8014434:	f8cc 3000 	str.w	r3, [ip]
 8014438:	682b      	ldr	r3, [r5, #0]
 801443a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801443e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014440:	9201      	str	r2, [sp, #4]
 8014442:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014444:	9200      	str	r2, [sp, #0]
 8014446:	f8cd 8008 	str.w	r8, [sp, #8]
 801444a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801444c:	aa07      	add	r2, sp, #28
 801444e:	463b      	mov	r3, r7
 8014450:	4631      	mov	r1, r6
 8014452:	4628      	mov	r0, r5
 8014454:	47a0      	blx	r4
 8014456:	b017      	add	sp, #92	; 0x5c
 8014458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801445c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801445c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014460:	b08d      	sub	sp, #52	; 0x34
 8014462:	4688      	mov	r8, r1
 8014464:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014466:	f8d3 c000 	ldr.w	ip, [r3]
 801446a:	680f      	ldr	r7, [r1, #0]
 801446c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014470:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014474:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014478:	edd3 6a07 	vldr	s13, [r3, #28]
 801447c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801447e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014482:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014486:	f9ba 1000 	ldrsh.w	r1, [sl]
 801448a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801448e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014492:	eba7 070c 	sub.w	r7, r7, ip
 8014496:	42bc      	cmp	r4, r7
 8014498:	bfa8      	it	ge
 801449a:	463c      	movge	r4, r7
 801449c:	ee07 4a90 	vmov	s15, r4
 80144a0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80144a4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80144a8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80144ac:	ee65 4a24 	vmul.f32	s9, s10, s9
 80144b0:	ee25 5a27 	vmul.f32	s10, s10, s15
 80144b4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80144b8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80144bc:	eb09 0e0c 	add.w	lr, r9, ip
 80144c0:	4571      	cmp	r1, lr
 80144c2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80144c6:	ee32 1a05 	vadd.f32	s2, s4, s10
 80144ca:	ee36 0a84 	vadd.f32	s0, s13, s8
 80144ce:	ee61 1a87 	vmul.f32	s3, s3, s14
 80144d2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80144d6:	f340 808d 	ble.w	80145f4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80144da:	eba1 060e 	sub.w	r6, r1, lr
 80144de:	fb96 f5f4 	sdiv	r5, r6, r4
 80144e2:	ee07 5a10 	vmov	s14, r5
 80144e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80144ea:	2d00      	cmp	r5, #0
 80144ec:	fb04 6615 	mls	r6, r4, r5, r6
 80144f0:	eea7 0a04 	vfma.f32	s0, s14, s8
 80144f4:	eee7 0a24 	vfma.f32	s1, s14, s9
 80144f8:	eea7 1a05 	vfma.f32	s2, s14, s10
 80144fc:	dd13      	ble.n	8014526 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80144fe:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014502:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014506:	eef5 6a40 	vcmp.f32	s13, #0.0
 801450a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801450e:	bf18      	it	ne
 8014510:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014514:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014518:	bf08      	it	eq
 801451a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801451e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014522:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014526:	fb05 f204 	mul.w	r2, r5, r4
 801452a:	1abf      	subs	r7, r7, r2
 801452c:	4494      	add	ip, r2
 801452e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014532:	4411      	add	r1, r2
 8014534:	eb09 020c 	add.w	r2, r9, ip
 8014538:	443a      	add	r2, r7
 801453a:	b209      	sxth	r1, r1
 801453c:	428a      	cmp	r2, r1
 801453e:	bfc4      	itt	gt
 8014540:	eba1 0209 	subgt.w	r2, r1, r9
 8014544:	eba2 070c 	subgt.w	r7, r2, ip
 8014548:	2f00      	cmp	r7, #0
 801454a:	dd50      	ble.n	80145ee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801454c:	fb97 f1f4 	sdiv	r1, r7, r4
 8014550:	fb04 7211 	mls	r2, r4, r1, r7
 8014554:	b90a      	cbnz	r2, 801455a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014556:	3901      	subs	r1, #1
 8014558:	4622      	mov	r2, r4
 801455a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801455e:	6840      	ldr	r0, [r0, #4]
 8014560:	900b      	str	r0, [sp, #44]	; 0x2c
 8014562:	f8d0 a000 	ldr.w	sl, [r0]
 8014566:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014568:	9008      	str	r0, [sp, #32]
 801456a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801456e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014570:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8014574:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014578:	695b      	ldr	r3, [r3, #20]
 801457a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801457c:	445b      	add	r3, fp
 801457e:	eef0 6a42 	vmov.f32	s13, s4
 8014582:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014586:	ee21 3a23 	vmul.f32	s6, s2, s7
 801458a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801458e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014592:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014596:	9307      	str	r3, [sp, #28]
 8014598:	ee17 7a90 	vmov	r7, s15
 801459c:	ee73 7a42 	vsub.f32	s15, s6, s4
 80145a0:	eeb0 7a61 	vmov.f32	s14, s3
 80145a4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80145a8:	ee16 3a90 	vmov	r3, s13
 80145ac:	fb97 f7f4 	sdiv	r7, r7, r4
 80145b0:	ee17 ca90 	vmov	ip, s15
 80145b4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80145b8:	fb9c fcf4 	sdiv	ip, ip, r4
 80145bc:	fb0c 3306 	mla	r3, ip, r6, r3
 80145c0:	9302      	str	r3, [sp, #8]
 80145c2:	ee17 3a10 	vmov	r3, s14
 80145c6:	44b6      	add	lr, r6
 80145c8:	fb04 e505 	mla	r5, r4, r5, lr
 80145cc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80145d0:	fb07 3706 	mla	r7, r7, r6, r3
 80145d4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80145d8:	e9cd 4700 	strd	r4, r7, [sp]
 80145dc:	2900      	cmp	r1, #0
 80145de:	bfcc      	ite	gt
 80145e0:	46a1      	movgt	r9, r4
 80145e2:	4691      	movle	r9, r2
 80145e4:	eba9 0306 	sub.w	r3, r9, r6
 80145e8:	f8da 4008 	ldr.w	r4, [sl, #8]
 80145ec:	47a0      	blx	r4
 80145ee:	b00d      	add	sp, #52	; 0x34
 80145f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145f4:	2500      	movs	r5, #0
 80145f6:	462e      	mov	r6, r5
 80145f8:	e799      	b.n	801452e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080145fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80145fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014600:	b0db      	sub	sp, #364	; 0x16c
 8014602:	461d      	mov	r5, r3
 8014604:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014608:	930a      	str	r3, [sp, #40]	; 0x28
 801460a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801460e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014610:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014614:	9310      	str	r3, [sp, #64]	; 0x40
 8014616:	6803      	ldr	r3, [r0, #0]
 8014618:	910f      	str	r1, [sp, #60]	; 0x3c
 801461a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801461c:	9009      	str	r0, [sp, #36]	; 0x24
 801461e:	4614      	mov	r4, r2
 8014620:	4629      	mov	r1, r5
 8014622:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014626:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801462a:	47b8      	blx	r7
 801462c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801462e:	6058      	str	r0, [r3, #4]
 8014630:	2800      	cmp	r0, #0
 8014632:	f000 83a1 	beq.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014636:	682b      	ldr	r3, [r5, #0]
 8014638:	9314      	str	r3, [sp, #80]	; 0x50
 801463a:	686b      	ldr	r3, [r5, #4]
 801463c:	9315      	str	r3, [sp, #84]	; 0x54
 801463e:	4bc4      	ldr	r3, [pc, #784]	; (8014950 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014640:	ed94 7a02 	vldr	s14, [r4, #8]
 8014644:	7819      	ldrb	r1, [r3, #0]
 8014646:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801464a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801464e:	2900      	cmp	r1, #0
 8014650:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014654:	bf16      	itet	ne
 8014656:	4619      	movne	r1, r3
 8014658:	4611      	moveq	r1, r2
 801465a:	4613      	movne	r3, r2
 801465c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014660:	9116      	str	r1, [sp, #88]	; 0x58
 8014662:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8014666:	f240 8387 	bls.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801466a:	ed94 7a07 	vldr	s14, [r4, #28]
 801466e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014672:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014676:	f240 837f 	bls.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801467a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801467e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014682:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014686:	f240 8377 	bls.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801468a:	6822      	ldr	r2, [r4, #0]
 801468c:	4bb1      	ldr	r3, [pc, #708]	; (8014954 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801468e:	429a      	cmp	r2, r3
 8014690:	f2c0 8372 	blt.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014694:	49b0      	ldr	r1, [pc, #704]	; (8014958 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8014696:	6963      	ldr	r3, [r4, #20]
 8014698:	428a      	cmp	r2, r1
 801469a:	f300 836d 	bgt.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801469e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80146a2:	48ae      	ldr	r0, [pc, #696]	; (801495c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80146a4:	33ff      	adds	r3, #255	; 0xff
 80146a6:	4283      	cmp	r3, r0
 80146a8:	f200 8366 	bhi.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146ac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80146ae:	4dac      	ldr	r5, [pc, #688]	; (8014960 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80146b0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80146b4:	33ff      	adds	r3, #255	; 0xff
 80146b6:	42ab      	cmp	r3, r5
 80146b8:	f200 835e 	bhi.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146bc:	6862      	ldr	r2, [r4, #4]
 80146be:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80146c2:	33ff      	adds	r3, #255	; 0xff
 80146c4:	4283      	cmp	r3, r0
 80146c6:	f200 8357 	bhi.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146ca:	69a1      	ldr	r1, [r4, #24]
 80146cc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80146d0:	33ff      	adds	r3, #255	; 0xff
 80146d2:	4283      	cmp	r3, r0
 80146d4:	f200 8350 	bhi.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146d8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80146da:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80146de:	30ff      	adds	r0, #255	; 0xff
 80146e0:	42a8      	cmp	r0, r5
 80146e2:	f200 8349 	bhi.w	8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146e6:	428a      	cmp	r2, r1
 80146e8:	f280 8110 	bge.w	801490c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80146ec:	429a      	cmp	r2, r3
 80146ee:	f300 8119 	bgt.w	8014924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80146f2:	4299      	cmp	r1, r3
 80146f4:	f280 811d 	bge.w	8014932 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80146f8:	2502      	movs	r5, #2
 80146fa:	2701      	movs	r7, #1
 80146fc:	46a9      	mov	r9, r5
 80146fe:	46b8      	mov	r8, r7
 8014700:	f04f 0a00 	mov.w	sl, #0
 8014704:	4621      	mov	r1, r4
 8014706:	a849      	add	r0, sp, #292	; 0x124
 8014708:	f003 ff2a 	bl	8018560 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801470c:	4622      	mov	r2, r4
 801470e:	4653      	mov	r3, sl
 8014710:	a949      	add	r1, sp, #292	; 0x124
 8014712:	f8cd 9000 	str.w	r9, [sp]
 8014716:	a819      	add	r0, sp, #100	; 0x64
 8014718:	f004 f852 	bl	80187c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801471c:	4622      	mov	r2, r4
 801471e:	4653      	mov	r3, sl
 8014720:	a949      	add	r1, sp, #292	; 0x124
 8014722:	f8cd 8000 	str.w	r8, [sp]
 8014726:	a829      	add	r0, sp, #164	; 0xa4
 8014728:	f004 f84a 	bl	80187c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801472c:	4643      	mov	r3, r8
 801472e:	4622      	mov	r2, r4
 8014730:	a949      	add	r1, sp, #292	; 0x124
 8014732:	f8cd 9000 	str.w	r9, [sp]
 8014736:	a839      	add	r0, sp, #228	; 0xe4
 8014738:	f004 f842 	bl	80187c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801473c:	42af      	cmp	r7, r5
 801473e:	bfb5      	itete	lt
 8014740:	2300      	movlt	r3, #0
 8014742:	2301      	movge	r3, #1
 8014744:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014746:	930e      	strge	r3, [sp, #56]	; 0x38
 8014748:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801474a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801474e:	af12      	add	r7, sp, #72	; 0x48
 8014750:	bfb9      	ittee	lt
 8014752:	ad29      	addlt	r5, sp, #164	; 0xa4
 8014754:	ac19      	addlt	r4, sp, #100	; 0x64
 8014756:	ad19      	addge	r5, sp, #100	; 0x64
 8014758:	ac29      	addge	r4, sp, #164	; 0xa4
 801475a:	e887 0003 	stmia.w	r7, {r0, r1}
 801475e:	b928      	cbnz	r0, 801476c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8014760:	4b80      	ldr	r3, [pc, #512]	; (8014964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8014762:	6818      	ldr	r0, [r3, #0]
 8014764:	6803      	ldr	r3, [r0, #0]
 8014766:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014768:	4798      	blx	r3
 801476a:	6038      	str	r0, [r7, #0]
 801476c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801476e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014772:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014776:	930c      	str	r3, [sp, #48]	; 0x30
 8014778:	990c      	ldr	r1, [sp, #48]	; 0x30
 801477a:	6963      	ldr	r3, [r4, #20]
 801477c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801477e:	440b      	add	r3, r1
 8014780:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014784:	4408      	add	r0, r1
 8014786:	b200      	sxth	r0, r0
 8014788:	4283      	cmp	r3, r0
 801478a:	900d      	str	r0, [sp, #52]	; 0x34
 801478c:	f280 80dd 	bge.w	801494a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8014790:	428b      	cmp	r3, r1
 8014792:	da08      	bge.n	80147a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014794:	2a00      	cmp	r2, #0
 8014796:	dd06      	ble.n	80147a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014798:	1acb      	subs	r3, r1, r3
 801479a:	429a      	cmp	r2, r3
 801479c:	f2c0 80e4 	blt.w	8014968 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80147a0:	2b00      	cmp	r3, #0
 80147a2:	f300 80e2 	bgt.w	801496a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80147a6:	6967      	ldr	r7, [r4, #20]
 80147a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80147aa:	443b      	add	r3, r7
 80147ac:	461f      	mov	r7, r3
 80147ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80147b0:	1bdf      	subs	r7, r3, r7
 80147b2:	4297      	cmp	r7, r2
 80147b4:	bfa8      	it	ge
 80147b6:	4617      	movge	r7, r2
 80147b8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80147bc:	2f00      	cmp	r7, #0
 80147be:	f340 8166 	ble.w	8014a8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80147c2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80147c4:	6829      	ldr	r1, [r5, #0]
 80147c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80147ca:	f9bb 3000 	ldrsh.w	r3, [fp]
 80147ce:	6820      	ldr	r0, [r4, #0]
 80147d0:	4411      	add	r1, r2
 80147d2:	4299      	cmp	r1, r3
 80147d4:	dd1a      	ble.n	801480c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80147d6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80147da:	440b      	add	r3, r1
 80147dc:	4402      	add	r2, r0
 80147de:	b21b      	sxth	r3, r3
 80147e0:	429a      	cmp	r2, r3
 80147e2:	dc13      	bgt.n	801480c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80147e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80147e8:	681b      	ldr	r3, [r3, #0]
 80147ea:	9206      	str	r2, [sp, #24]
 80147ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80147ee:	9205      	str	r2, [sp, #20]
 80147f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80147f2:	9500      	str	r5, [sp, #0]
 80147f4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80147f8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80147fa:	9809      	ldr	r0, [sp, #36]	; 0x24
 80147fc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014800:	a912      	add	r1, sp, #72	; 0x48
 8014802:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014806:	aa49      	add	r2, sp, #292	; 0x124
 8014808:	4623      	mov	r3, r4
 801480a:	47c8      	blx	r9
 801480c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014810:	441a      	add	r2, r3
 8014812:	6963      	ldr	r3, [r4, #20]
 8014814:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014818:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801481c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014820:	68a1      	ldr	r1, [r4, #8]
 8014822:	ed94 6a08 	vldr	s12, [r4, #32]
 8014826:	6022      	str	r2, [r4, #0]
 8014828:	3301      	adds	r3, #1
 801482a:	6163      	str	r3, [r4, #20]
 801482c:	69a3      	ldr	r3, [r4, #24]
 801482e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014832:	3b01      	subs	r3, #1
 8014834:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014838:	61a3      	str	r3, [r4, #24]
 801483a:	6923      	ldr	r3, [r4, #16]
 801483c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014840:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014844:	edd4 6a07 	vldr	s13, [r4, #28]
 8014848:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801484c:	440b      	add	r3, r1
 801484e:	68e1      	ldr	r1, [r4, #12]
 8014850:	6123      	str	r3, [r4, #16]
 8014852:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014856:	428b      	cmp	r3, r1
 8014858:	edc4 6a07 	vstr	s13, [r4, #28]
 801485c:	db15      	blt.n	801488a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801485e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014862:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014866:	3201      	adds	r2, #1
 8014868:	edc4 6a07 	vstr	s13, [r4, #28]
 801486c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014870:	6022      	str	r2, [r4, #0]
 8014872:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014876:	1a5b      	subs	r3, r3, r1
 8014878:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801487c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014880:	6123      	str	r3, [r4, #16]
 8014882:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014886:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801488a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801488e:	441a      	add	r2, r3
 8014890:	696b      	ldr	r3, [r5, #20]
 8014892:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014896:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801489a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801489e:	68a9      	ldr	r1, [r5, #8]
 80148a0:	ed95 6a08 	vldr	s12, [r5, #32]
 80148a4:	602a      	str	r2, [r5, #0]
 80148a6:	3301      	adds	r3, #1
 80148a8:	616b      	str	r3, [r5, #20]
 80148aa:	69ab      	ldr	r3, [r5, #24]
 80148ac:	ee37 7a27 	vadd.f32	s14, s14, s15
 80148b0:	3b01      	subs	r3, #1
 80148b2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80148b6:	61ab      	str	r3, [r5, #24]
 80148b8:	692b      	ldr	r3, [r5, #16]
 80148ba:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80148be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80148c2:	edd5 6a07 	vldr	s13, [r5, #28]
 80148c6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80148ca:	440b      	add	r3, r1
 80148cc:	68e9      	ldr	r1, [r5, #12]
 80148ce:	612b      	str	r3, [r5, #16]
 80148d0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80148d4:	428b      	cmp	r3, r1
 80148d6:	edc5 6a07 	vstr	s13, [r5, #28]
 80148da:	db15      	blt.n	8014908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80148dc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80148e0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80148e4:	3201      	adds	r2, #1
 80148e6:	edc5 6a07 	vstr	s13, [r5, #28]
 80148ea:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80148ee:	602a      	str	r2, [r5, #0]
 80148f0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80148f4:	1a5b      	subs	r3, r3, r1
 80148f6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80148fa:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80148fe:	612b      	str	r3, [r5, #16]
 8014900:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014904:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014908:	3f01      	subs	r7, #1
 801490a:	e757      	b.n	80147bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801490c:	4299      	cmp	r1, r3
 801490e:	dc13      	bgt.n	8014938 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8014910:	429a      	cmp	r2, r3
 8014912:	da14      	bge.n	801493e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8014914:	2502      	movs	r5, #2
 8014916:	2703      	movs	r7, #3
 8014918:	46a9      	mov	r9, r5
 801491a:	f04f 0800 	mov.w	r8, #0
 801491e:	f04f 0a01 	mov.w	sl, #1
 8014922:	e6ef      	b.n	8014704 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014924:	2501      	movs	r5, #1
 8014926:	2700      	movs	r7, #0
 8014928:	46a9      	mov	r9, r5
 801492a:	46b8      	mov	r8, r7
 801492c:	f04f 0a02 	mov.w	sl, #2
 8014930:	e6e8      	b.n	8014704 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014932:	2501      	movs	r5, #1
 8014934:	2702      	movs	r7, #2
 8014936:	e6e1      	b.n	80146fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8014938:	2500      	movs	r5, #0
 801493a:	2701      	movs	r7, #1
 801493c:	e7f4      	b.n	8014928 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801493e:	2702      	movs	r7, #2
 8014940:	2503      	movs	r5, #3
 8014942:	f04f 0900 	mov.w	r9, #0
 8014946:	46b8      	mov	r8, r7
 8014948:	e7e9      	b.n	801491e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801494a:	4613      	mov	r3, r2
 801494c:	e728      	b.n	80147a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801494e:	bf00      	nop
 8014950:	200132b4 	.word	0x200132b4
 8014954:	fffd8f01 	.word	0xfffd8f01
 8014958:	00027100 	.word	0x00027100
 801495c:	0004e1ff 	.word	0x0004e1ff
 8014960:	0004e1fe 	.word	0x0004e1fe
 8014964:	200132bc 	.word	0x200132bc
 8014968:	4613      	mov	r3, r2
 801496a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801496c:	9111      	str	r1, [sp, #68]	; 0x44
 801496e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8014972:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8014976:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8014978:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801497c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8014980:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8014984:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8014988:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801498c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8014990:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014994:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8014998:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801499c:	469e      	mov	lr, r3
 801499e:	469c      	mov	ip, r3
 80149a0:	f04f 0900 	mov.w	r9, #0
 80149a4:	f1bc 0f00 	cmp.w	ip, #0
 80149a8:	d147      	bne.n	8014a3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80149aa:	eb03 0c07 	add.w	ip, r3, r7
 80149ae:	1ad7      	subs	r7, r2, r3
 80149b0:	f1b9 0f00 	cmp.w	r9, #0
 80149b4:	d009      	beq.n	80149ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80149b6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80149ba:	9029      	str	r0, [sp, #164]	; 0xa4
 80149bc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80149c0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80149c4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80149c8:	912d      	str	r1, [sp, #180]	; 0xb4
 80149ca:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80149cc:	9111      	str	r1, [sp, #68]	; 0x44
 80149ce:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80149d2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80149d6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80149da:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80149de:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80149e2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80149e6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80149ea:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80149ee:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80149f2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80149f6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80149fa:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80149fe:	f04f 0800 	mov.w	r8, #0
 8014a02:	f1be 0f00 	cmp.w	lr, #0
 8014a06:	d031      	beq.n	8014a6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014a08:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014a0a:	4431      	add	r1, r6
 8014a0c:	4549      	cmp	r1, r9
 8014a0e:	4450      	add	r0, sl
 8014a10:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014a14:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014a18:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014a1c:	db08      	blt.n	8014a30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8014a1e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014a22:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014a26:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014a2a:	3001      	adds	r0, #1
 8014a2c:	eba1 0109 	sub.w	r1, r1, r9
 8014a30:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014a34:	f04f 0801 	mov.w	r8, #1
 8014a38:	e7e3      	b.n	8014a02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8014a3a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014a3c:	4431      	add	r1, r6
 8014a3e:	4541      	cmp	r1, r8
 8014a40:	4450      	add	r0, sl
 8014a42:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014a46:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014a4a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014a4e:	db08      	blt.n	8014a62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8014a50:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014a54:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014a58:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014a5c:	3001      	adds	r0, #1
 8014a5e:	eba1 0108 	sub.w	r1, r1, r8
 8014a62:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014a66:	f04f 0901 	mov.w	r9, #1
 8014a6a:	e79b      	b.n	80149a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8014a6c:	449c      	add	ip, r3
 8014a6e:	1aff      	subs	r7, r7, r3
 8014a70:	f1b8 0f00 	cmp.w	r8, #0
 8014a74:	d009      	beq.n	8014a8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014a76:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014a7a:	9019      	str	r0, [sp, #100]	; 0x64
 8014a7c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014a80:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014a84:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014a88:	911d      	str	r1, [sp, #116]	; 0x74
 8014a8a:	1ad2      	subs	r2, r2, r3
 8014a8c:	e68b      	b.n	80147a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014a8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a90:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8014a92:	2b00      	cmp	r3, #0
 8014a94:	f000 80d1 	beq.w	8014c3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014a98:	ad19      	add	r5, sp, #100	; 0x64
 8014a9a:	ac39      	add	r4, sp, #228	; 0xe4
 8014a9c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014a9e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014aa2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014aa6:	930c      	str	r3, [sp, #48]	; 0x30
 8014aa8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014aaa:	6963      	ldr	r3, [r4, #20]
 8014aac:	440b      	add	r3, r1
 8014aae:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014ab2:	4408      	add	r0, r1
 8014ab4:	b200      	sxth	r0, r0
 8014ab6:	4283      	cmp	r3, r0
 8014ab8:	900d      	str	r0, [sp, #52]	; 0x34
 8014aba:	f280 80c1 	bge.w	8014c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8014abe:	428b      	cmp	r3, r1
 8014ac0:	da08      	bge.n	8014ad4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014ac2:	2a00      	cmp	r2, #0
 8014ac4:	dd06      	ble.n	8014ad4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014ac6:	1acb      	subs	r3, r1, r3
 8014ac8:	429a      	cmp	r2, r3
 8014aca:	f2c0 80bb 	blt.w	8014c44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8014ace:	2b00      	cmp	r3, #0
 8014ad0:	f300 80b9 	bgt.w	8014c46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014ad4:	6967      	ldr	r7, [r4, #20]
 8014ad6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014ad8:	443b      	add	r3, r7
 8014ada:	461f      	mov	r7, r3
 8014adc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014ade:	1bdf      	subs	r7, r3, r7
 8014ae0:	4297      	cmp	r7, r2
 8014ae2:	bfa8      	it	ge
 8014ae4:	4617      	movge	r7, r2
 8014ae6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014aea:	2f00      	cmp	r7, #0
 8014aec:	f340 813c 	ble.w	8014d68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014af0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014af2:	6829      	ldr	r1, [r5, #0]
 8014af4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014af8:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014afc:	6820      	ldr	r0, [r4, #0]
 8014afe:	4411      	add	r1, r2
 8014b00:	4299      	cmp	r1, r3
 8014b02:	dd1a      	ble.n	8014b3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014b04:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014b08:	440b      	add	r3, r1
 8014b0a:	4402      	add	r2, r0
 8014b0c:	b21b      	sxth	r3, r3
 8014b0e:	429a      	cmp	r2, r3
 8014b10:	dc13      	bgt.n	8014b3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014b12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b14:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014b16:	681b      	ldr	r3, [r3, #0]
 8014b18:	9206      	str	r2, [sp, #24]
 8014b1a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014b1c:	9205      	str	r2, [sp, #20]
 8014b1e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014b20:	9500      	str	r5, [sp, #0]
 8014b22:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014b26:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014b28:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014b2a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014b2e:	a912      	add	r1, sp, #72	; 0x48
 8014b30:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014b34:	aa49      	add	r2, sp, #292	; 0x124
 8014b36:	4623      	mov	r3, r4
 8014b38:	47c8      	blx	r9
 8014b3a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014b3e:	441a      	add	r2, r3
 8014b40:	6963      	ldr	r3, [r4, #20]
 8014b42:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014b46:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014b4a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014b4e:	68a1      	ldr	r1, [r4, #8]
 8014b50:	ed94 6a08 	vldr	s12, [r4, #32]
 8014b54:	6022      	str	r2, [r4, #0]
 8014b56:	3301      	adds	r3, #1
 8014b58:	6163      	str	r3, [r4, #20]
 8014b5a:	69a3      	ldr	r3, [r4, #24]
 8014b5c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014b60:	3b01      	subs	r3, #1
 8014b62:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014b66:	61a3      	str	r3, [r4, #24]
 8014b68:	6923      	ldr	r3, [r4, #16]
 8014b6a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014b6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014b72:	edd4 6a07 	vldr	s13, [r4, #28]
 8014b76:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014b7a:	440b      	add	r3, r1
 8014b7c:	68e1      	ldr	r1, [r4, #12]
 8014b7e:	6123      	str	r3, [r4, #16]
 8014b80:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014b84:	428b      	cmp	r3, r1
 8014b86:	edc4 6a07 	vstr	s13, [r4, #28]
 8014b8a:	db15      	blt.n	8014bb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8014b8c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014b90:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014b94:	3201      	adds	r2, #1
 8014b96:	edc4 6a07 	vstr	s13, [r4, #28]
 8014b9a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014b9e:	6022      	str	r2, [r4, #0]
 8014ba0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014ba4:	1a5b      	subs	r3, r3, r1
 8014ba6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014baa:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014bae:	6123      	str	r3, [r4, #16]
 8014bb0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014bb4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014bb8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014bbc:	441a      	add	r2, r3
 8014bbe:	696b      	ldr	r3, [r5, #20]
 8014bc0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014bc4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014bc8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014bcc:	68a9      	ldr	r1, [r5, #8]
 8014bce:	ed95 6a08 	vldr	s12, [r5, #32]
 8014bd2:	602a      	str	r2, [r5, #0]
 8014bd4:	3301      	adds	r3, #1
 8014bd6:	616b      	str	r3, [r5, #20]
 8014bd8:	69ab      	ldr	r3, [r5, #24]
 8014bda:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014bde:	3b01      	subs	r3, #1
 8014be0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014be4:	61ab      	str	r3, [r5, #24]
 8014be6:	692b      	ldr	r3, [r5, #16]
 8014be8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014bec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014bf0:	edd5 6a07 	vldr	s13, [r5, #28]
 8014bf4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014bf8:	440b      	add	r3, r1
 8014bfa:	68e9      	ldr	r1, [r5, #12]
 8014bfc:	612b      	str	r3, [r5, #16]
 8014bfe:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014c02:	428b      	cmp	r3, r1
 8014c04:	edc5 6a07 	vstr	s13, [r5, #28]
 8014c08:	db15      	blt.n	8014c36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8014c0a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014c0e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014c12:	3201      	adds	r2, #1
 8014c14:	edc5 6a07 	vstr	s13, [r5, #28]
 8014c18:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014c1c:	602a      	str	r2, [r5, #0]
 8014c1e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014c22:	1a5b      	subs	r3, r3, r1
 8014c24:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014c28:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014c2c:	612b      	str	r3, [r5, #16]
 8014c2e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014c32:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014c36:	3f01      	subs	r7, #1
 8014c38:	e757      	b.n	8014aea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8014c3a:	ad39      	add	r5, sp, #228	; 0xe4
 8014c3c:	ac19      	add	r4, sp, #100	; 0x64
 8014c3e:	e72d      	b.n	8014a9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014c40:	4613      	mov	r3, r2
 8014c42:	e744      	b.n	8014ace <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014c44:	4613      	mov	r3, r2
 8014c46:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014c4a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014c4c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014c50:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014c54:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014c58:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014c5c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014c60:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014c64:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014c68:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8014c6a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014c6e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014c72:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014c76:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8014c7a:	960e      	str	r6, [sp, #56]	; 0x38
 8014c7c:	469e      	mov	lr, r3
 8014c7e:	461f      	mov	r7, r3
 8014c80:	f04f 0900 	mov.w	r9, #0
 8014c84:	2f00      	cmp	r7, #0
 8014c86:	d146      	bne.n	8014d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014c88:	449c      	add	ip, r3
 8014c8a:	1ad7      	subs	r7, r2, r3
 8014c8c:	f1b9 0f00 	cmp.w	r9, #0
 8014c90:	d009      	beq.n	8014ca6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014c92:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014c96:	9039      	str	r0, [sp, #228]	; 0xe4
 8014c98:	913d      	str	r1, [sp, #244]	; 0xf4
 8014c9a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014c9e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014ca2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014ca6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014ca8:	910e      	str	r1, [sp, #56]	; 0x38
 8014caa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014cae:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014cb2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014cb6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014cba:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014cbe:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014cc2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014cc6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014cca:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014cce:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014cd2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014cd6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014cda:	f04f 0800 	mov.w	r8, #0
 8014cde:	f1be 0f00 	cmp.w	lr, #0
 8014ce2:	d030      	beq.n	8014d46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014ce4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014ce6:	4431      	add	r1, r6
 8014ce8:	4549      	cmp	r1, r9
 8014cea:	4450      	add	r0, sl
 8014cec:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014cf0:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014cf4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014cf8:	db08      	blt.n	8014d0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014cfa:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014cfe:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014d02:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014d06:	3001      	adds	r0, #1
 8014d08:	eba1 0109 	sub.w	r1, r1, r9
 8014d0c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014d10:	f04f 0801 	mov.w	r8, #1
 8014d14:	e7e3      	b.n	8014cde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014d16:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014d18:	4431      	add	r1, r6
 8014d1a:	4541      	cmp	r1, r8
 8014d1c:	4450      	add	r0, sl
 8014d1e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014d22:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014d26:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014d2a:	db08      	blt.n	8014d3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014d2c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014d30:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014d34:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014d38:	3001      	adds	r0, #1
 8014d3a:	eba1 0108 	sub.w	r1, r1, r8
 8014d3e:	3f01      	subs	r7, #1
 8014d40:	f04f 0901 	mov.w	r9, #1
 8014d44:	e79e      	b.n	8014c84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014d46:	449c      	add	ip, r3
 8014d48:	1aff      	subs	r7, r7, r3
 8014d4a:	f1b8 0f00 	cmp.w	r8, #0
 8014d4e:	d009      	beq.n	8014d64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014d50:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014d54:	9019      	str	r0, [sp, #100]	; 0x64
 8014d56:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014d5a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014d5e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014d62:	911d      	str	r1, [sp, #116]	; 0x74
 8014d64:	1ad2      	subs	r2, r2, r3
 8014d66:	e6b5      	b.n	8014ad4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014d68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014d6a:	681b      	ldr	r3, [r3, #0]
 8014d6c:	b923      	cbnz	r3, 8014d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014d6e:	4b04      	ldr	r3, [pc, #16]	; (8014d80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014d70:	6818      	ldr	r0, [r3, #0]
 8014d72:	6803      	ldr	r3, [r0, #0]
 8014d74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014d76:	4798      	blx	r3
 8014d78:	b05b      	add	sp, #364	; 0x16c
 8014d7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d7e:	bf00      	nop
 8014d80:	200132bc 	.word	0x200132bc

08014d84 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014d84:	b570      	push	{r4, r5, r6, lr}
 8014d86:	4604      	mov	r4, r0
 8014d88:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8014d8c:	9805      	ldr	r0, [sp, #20]
 8014d8e:	6061      	str	r1, [r4, #4]
 8014d90:	2500      	movs	r5, #0
 8014d92:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014d96:	8263      	strh	r3, [r4, #18]
 8014d98:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014d9c:	8025      	strh	r5, [r4, #0]
 8014d9e:	7221      	strb	r1, [r4, #8]
 8014da0:	7266      	strb	r6, [r4, #9]
 8014da2:	60e0      	str	r0, [r4, #12]
 8014da4:	8222      	strh	r2, [r4, #16]
 8014da6:	82a3      	strh	r3, [r4, #20]
 8014da8:	82e5      	strh	r5, [r4, #22]
 8014daa:	8325      	strh	r5, [r4, #24]
 8014dac:	8365      	strh	r5, [r4, #26]
 8014dae:	83a5      	strh	r5, [r4, #28]
 8014db0:	83e5      	strh	r5, [r4, #30]
 8014db2:	8425      	strh	r5, [r4, #32]
 8014db4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014db8:	b32e      	cbz	r6, 8014e06 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014dba:	6803      	ldr	r3, [r0, #0]
 8014dbc:	695b      	ldr	r3, [r3, #20]
 8014dbe:	4798      	blx	r3
 8014dc0:	4606      	mov	r6, r0
 8014dc2:	b300      	cbz	r0, 8014e06 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014dc4:	68e0      	ldr	r0, [r4, #12]
 8014dc6:	6803      	ldr	r3, [r0, #0]
 8014dc8:	4631      	mov	r1, r6
 8014dca:	68db      	ldr	r3, [r3, #12]
 8014dcc:	4798      	blx	r3
 8014dce:	4605      	mov	r5, r0
 8014dd0:	b1c8      	cbz	r0, 8014e06 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014dd2:	7b43      	ldrb	r3, [r0, #13]
 8014dd4:	7a82      	ldrb	r2, [r0, #10]
 8014dd6:	005b      	lsls	r3, r3, #1
 8014dd8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014ddc:	4313      	orrs	r3, r2
 8014dde:	8423      	strh	r3, [r4, #32]
 8014de0:	7a63      	ldrb	r3, [r4, #9]
 8014de2:	2b06      	cmp	r3, #6
 8014de4:	d10f      	bne.n	8014e06 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014de6:	68e0      	ldr	r0, [r4, #12]
 8014de8:	6803      	ldr	r3, [r0, #0]
 8014dea:	462a      	mov	r2, r5
 8014dec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014dee:	4631      	mov	r1, r6
 8014df0:	4798      	blx	r3
 8014df2:	7b6b      	ldrb	r3, [r5, #13]
 8014df4:	005b      	lsls	r3, r3, #1
 8014df6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014dfa:	7aab      	ldrb	r3, [r5, #10]
 8014dfc:	4313      	orrs	r3, r2
 8014dfe:	4418      	add	r0, r3
 8014e00:	8c23      	ldrh	r3, [r4, #32]
 8014e02:	4418      	add	r0, r3
 8014e04:	8420      	strh	r0, [r4, #32]
 8014e06:	4620      	mov	r0, r4
 8014e08:	bd70      	pop	{r4, r5, r6, pc}

08014e0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8014e0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e0e:	2400      	movs	r4, #0
 8014e10:	b085      	sub	sp, #20
 8014e12:	4681      	mov	r9, r0
 8014e14:	4688      	mov	r8, r1
 8014e16:	4692      	mov	sl, r2
 8014e18:	469b      	mov	fp, r3
 8014e1a:	4627      	mov	r7, r4
 8014e1c:	4625      	mov	r5, r4
 8014e1e:	4626      	mov	r6, r4
 8014e20:	4554      	cmp	r4, sl
 8014e22:	da2a      	bge.n	8014e7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014e24:	2300      	movs	r3, #0
 8014e26:	9303      	str	r3, [sp, #12]
 8014e28:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014e2c:	429d      	cmp	r5, r3
 8014e2e:	d004      	beq.n	8014e3a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014e30:	f242 030b 	movw	r3, #8203	; 0x200b
 8014e34:	429d      	cmp	r5, r3
 8014e36:	bf18      	it	ne
 8014e38:	462f      	movne	r7, r5
 8014e3a:	ab03      	add	r3, sp, #12
 8014e3c:	4642      	mov	r2, r8
 8014e3e:	4659      	mov	r1, fp
 8014e40:	4648      	mov	r0, r9
 8014e42:	f003 f9a3 	bl	801818c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014e46:	4605      	mov	r5, r0
 8014e48:	b1b8      	cbz	r0, 8014e7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014e4a:	280a      	cmp	r0, #10
 8014e4c:	d015      	beq.n	8014e7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014e4e:	9a03      	ldr	r2, [sp, #12]
 8014e50:	b18a      	cbz	r2, 8014e76 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014e52:	7b50      	ldrb	r0, [r2, #13]
 8014e54:	7a93      	ldrb	r3, [r2, #10]
 8014e56:	8895      	ldrh	r5, [r2, #4]
 8014e58:	0040      	lsls	r0, r0, #1
 8014e5a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014e5e:	4303      	orrs	r3, r0
 8014e60:	9301      	str	r3, [sp, #4]
 8014e62:	f8d8 3000 	ldr.w	r3, [r8]
 8014e66:	4639      	mov	r1, r7
 8014e68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014e6a:	4640      	mov	r0, r8
 8014e6c:	4798      	blx	r3
 8014e6e:	9b01      	ldr	r3, [sp, #4]
 8014e70:	4418      	add	r0, r3
 8014e72:	4406      	add	r6, r0
 8014e74:	b2b6      	uxth	r6, r6
 8014e76:	3401      	adds	r4, #1
 8014e78:	e7d2      	b.n	8014e20 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8014e7a:	4630      	mov	r0, r6
 8014e7c:	b005      	add	sp, #20
 8014e7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e82 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014e82:	2a02      	cmp	r2, #2
 8014e84:	b530      	push	{r4, r5, lr}
 8014e86:	d011      	beq.n	8014eac <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014e88:	2a03      	cmp	r2, #3
 8014e8a:	d01c      	beq.n	8014ec6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014e8c:	2a01      	cmp	r2, #1
 8014e8e:	d10c      	bne.n	8014eaa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014e90:	888b      	ldrh	r3, [r1, #4]
 8014e92:	8801      	ldrh	r1, [r0, #0]
 8014e94:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014e98:	8844      	ldrh	r4, [r0, #2]
 8014e9a:	8004      	strh	r4, [r0, #0]
 8014e9c:	1a5b      	subs	r3, r3, r1
 8014e9e:	1a9b      	subs	r3, r3, r2
 8014ea0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014ea4:	8043      	strh	r3, [r0, #2]
 8014ea6:	8081      	strh	r1, [r0, #4]
 8014ea8:	80c2      	strh	r2, [r0, #6]
 8014eaa:	bd30      	pop	{r4, r5, pc}
 8014eac:	88cb      	ldrh	r3, [r1, #6]
 8014eae:	8842      	ldrh	r2, [r0, #2]
 8014eb0:	1a9b      	subs	r3, r3, r2
 8014eb2:	88c2      	ldrh	r2, [r0, #6]
 8014eb4:	1a9b      	subs	r3, r3, r2
 8014eb6:	888a      	ldrh	r2, [r1, #4]
 8014eb8:	8801      	ldrh	r1, [r0, #0]
 8014eba:	8043      	strh	r3, [r0, #2]
 8014ebc:	1a52      	subs	r2, r2, r1
 8014ebe:	8881      	ldrh	r1, [r0, #4]
 8014ec0:	1a52      	subs	r2, r2, r1
 8014ec2:	8002      	strh	r2, [r0, #0]
 8014ec4:	e7f1      	b.n	8014eaa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014ec6:	88cb      	ldrh	r3, [r1, #6]
 8014ec8:	8841      	ldrh	r1, [r0, #2]
 8014eca:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014ece:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014ed2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014ed6:	8045      	strh	r5, [r0, #2]
 8014ed8:	1a5b      	subs	r3, r3, r1
 8014eda:	1a9b      	subs	r3, r3, r2
 8014edc:	8003      	strh	r3, [r0, #0]
 8014ede:	8082      	strh	r2, [r0, #4]
 8014ee0:	80c4      	strh	r4, [r0, #6]
 8014ee2:	e7e2      	b.n	8014eaa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014ee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ee8:	b09f      	sub	sp, #124	; 0x7c
 8014eea:	9116      	str	r1, [sp, #88]	; 0x58
 8014eec:	9317      	str	r3, [sp, #92]	; 0x5c
 8014eee:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014ef0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ef2:	8809      	ldrh	r1, [r1, #0]
 8014ef4:	889b      	ldrh	r3, [r3, #4]
 8014ef6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014efa:	9212      	str	r2, [sp, #72]	; 0x48
 8014efc:	440b      	add	r3, r1
 8014efe:	b21b      	sxth	r3, r3
 8014f00:	9310      	str	r3, [sp, #64]	; 0x40
 8014f02:	f8d8 3000 	ldr.w	r3, [r8]
 8014f06:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014f0a:	7b19      	ldrb	r1, [r3, #12]
 8014f0c:	7adb      	ldrb	r3, [r3, #11]
 8014f0e:	9011      	str	r0, [sp, #68]	; 0x44
 8014f10:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014f14:	9114      	str	r1, [sp, #80]	; 0x50
 8014f16:	9315      	str	r3, [sp, #84]	; 0x54
 8014f18:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014f1c:	2a00      	cmp	r2, #0
 8014f1e:	d06a      	beq.n	8014ff6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014f20:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014f24:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014f26:	2b06      	cmp	r3, #6
 8014f28:	bf14      	ite	ne
 8014f2a:	2301      	movne	r3, #1
 8014f2c:	2302      	moveq	r3, #2
 8014f2e:	4413      	add	r3, r2
 8014f30:	f04f 0900 	mov.w	r9, #0
 8014f34:	930f      	str	r3, [sp, #60]	; 0x3c
 8014f36:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014f3a:	464c      	mov	r4, r9
 8014f3c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014f40:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014f44:	4293      	cmp	r3, r2
 8014f46:	f280 808f 	bge.w	8015068 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014f4a:	2300      	movs	r3, #0
 8014f4c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014f50:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014f54:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014f58:	429c      	cmp	r4, r3
 8014f5a:	d006      	beq.n	8014f6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8014f5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014f5e:	f242 020b 	movw	r2, #8203	; 0x200b
 8014f62:	4294      	cmp	r4, r2
 8014f64:	bf18      	it	ne
 8014f66:	4623      	movne	r3, r4
 8014f68:	930d      	str	r3, [sp, #52]	; 0x34
 8014f6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f6c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8014f6e:	f8d8 2000 	ldr.w	r2, [r8]
 8014f72:	428b      	cmp	r3, r1
 8014f74:	db41      	blt.n	8014ffa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014f76:	6813      	ldr	r3, [r2, #0]
 8014f78:	4610      	mov	r0, r2
 8014f7a:	695b      	ldr	r3, [r3, #20]
 8014f7c:	4798      	blx	r3
 8014f7e:	4604      	mov	r4, r0
 8014f80:	f8d8 0000 	ldr.w	r0, [r8]
 8014f84:	6803      	ldr	r3, [r0, #0]
 8014f86:	aa1d      	add	r2, sp, #116	; 0x74
 8014f88:	689d      	ldr	r5, [r3, #8]
 8014f8a:	4621      	mov	r1, r4
 8014f8c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014f90:	47a8      	blx	r5
 8014f92:	901c      	str	r0, [sp, #112]	; 0x70
 8014f94:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014f98:	429c      	cmp	r4, r3
 8014f9a:	f000 80eb 	beq.w	8015174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f9e:	f242 030b 	movw	r3, #8203	; 0x200b
 8014fa2:	429c      	cmp	r4, r3
 8014fa4:	f000 80e6 	beq.w	8015174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014fa8:	2c00      	cmp	r4, #0
 8014faa:	f000 80f8 	beq.w	801519e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014fae:	2c0a      	cmp	r4, #10
 8014fb0:	d060      	beq.n	8015074 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014fb2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014fb4:	b36a      	cbz	r2, 8015012 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014fb6:	8894      	ldrh	r4, [r2, #4]
 8014fb8:	f1bb 0f00 	cmp.w	fp, #0
 8014fbc:	d03b      	beq.n	8015036 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8014fbe:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014fc2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014fc6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014fca:	f892 900a 	ldrb.w	r9, [r2, #10]
 8014fce:	f1bb 0f01 	cmp.w	fp, #1
 8014fd2:	ea49 0903 	orr.w	r9, r9, r3
 8014fd6:	d134      	bne.n	8015042 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014fd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014fda:	eba6 0609 	sub.w	r6, r6, r9
 8014fde:	2b00      	cmp	r3, #0
 8014fe0:	d14f      	bne.n	8015082 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014fe2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014fe4:	eb09 0306 	add.w	r3, r9, r6
 8014fe8:	4413      	add	r3, r2
 8014fea:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014fec:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014ff0:	4293      	cmp	r3, r2
 8014ff2:	da51      	bge.n	8015098 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014ff4:	e038      	b.n	8015068 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014ff6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014ff8:	e79a      	b.n	8014f30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8014ffa:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014ffe:	9301      	str	r3, [sp, #4]
 8015000:	ab1d      	add	r3, sp, #116	; 0x74
 8015002:	9300      	str	r3, [sp, #0]
 8015004:	4659      	mov	r1, fp
 8015006:	ab1c      	add	r3, sp, #112	; 0x70
 8015008:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801500a:	f003 f908 	bl	801821e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801500e:	4604      	mov	r4, r0
 8015010:	e7c0      	b.n	8014f94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8015012:	f8d8 0000 	ldr.w	r0, [r8]
 8015016:	6803      	ldr	r3, [r0, #0]
 8015018:	691b      	ldr	r3, [r3, #16]
 801501a:	4798      	blx	r3
 801501c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015020:	4298      	cmp	r0, r3
 8015022:	f000 80a7 	beq.w	8015174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015026:	f242 030b 	movw	r3, #8203	; 0x200b
 801502a:	4298      	cmp	r0, r3
 801502c:	f000 80a2 	beq.w	8015174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015030:	f1bb 0f00 	cmp.w	fp, #0
 8015034:	d100      	bne.n	8015038 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8015036:	444e      	add	r6, r9
 8015038:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801503a:	2a00      	cmp	r2, #0
 801503c:	d1bf      	bne.n	8014fbe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801503e:	4691      	mov	r9, r2
 8015040:	e098      	b.n	8015174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015042:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015044:	2b00      	cmp	r3, #0
 8015046:	f000 80ac 	beq.w	80151a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801504a:	f1bb 0f00 	cmp.w	fp, #0
 801504e:	d118      	bne.n	8015082 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015050:	f8d8 0000 	ldr.w	r0, [r8]
 8015054:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015056:	6803      	ldr	r3, [r0, #0]
 8015058:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801505a:	4798      	blx	r3
 801505c:	4406      	add	r6, r0
 801505e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015060:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015062:	1af3      	subs	r3, r6, r3
 8015064:	4293      	cmp	r3, r2
 8015066:	dd17      	ble.n	8015098 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015068:	2c00      	cmp	r4, #0
 801506a:	f000 8098 	beq.w	801519e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801506e:	2c0a      	cmp	r4, #10
 8015070:	f040 8086 	bne.w	8015180 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8015074:	240a      	movs	r4, #10
 8015076:	fab4 f084 	clz	r0, r4
 801507a:	0940      	lsrs	r0, r0, #5
 801507c:	b01f      	add	sp, #124	; 0x7c
 801507e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015082:	f8d8 0000 	ldr.w	r0, [r8]
 8015086:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015088:	6803      	ldr	r3, [r0, #0]
 801508a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801508c:	4798      	blx	r3
 801508e:	f1bb 0f01 	cmp.w	fp, #1
 8015092:	eba6 0600 	sub.w	r6, r6, r0
 8015096:	d0a4      	beq.n	8014fe2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015098:	981c      	ldr	r0, [sp, #112]	; 0x70
 801509a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801509c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80150a0:	f9b3 7000 	ldrsh.w	r7, [r3]
 80150a4:	7b43      	ldrb	r3, [r0, #13]
 80150a6:	015b      	lsls	r3, r3, #5
 80150a8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80150ac:	7983      	ldrb	r3, [r0, #6]
 80150ae:	4431      	add	r1, r6
 80150b0:	4313      	orrs	r3, r2
 80150b2:	440b      	add	r3, r1
 80150b4:	42bb      	cmp	r3, r7
 80150b6:	db5d      	blt.n	8015174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80150b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80150ba:	4299      	cmp	r1, r3
 80150bc:	da5a      	bge.n	8015174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80150be:	f8d8 0000 	ldr.w	r0, [r8]
 80150c2:	6803      	ldr	r3, [r0, #0]
 80150c4:	42b7      	cmp	r7, r6
 80150c6:	bfc8      	it	gt
 80150c8:	1bbf      	subgt	r7, r7, r6
 80150ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80150cc:	bfcc      	ite	gt
 80150ce:	b2bf      	uxthgt	r7, r7
 80150d0:	2700      	movle	r7, #0
 80150d2:	4798      	blx	r3
 80150d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80150d6:	7b5a      	ldrb	r2, [r3, #13]
 80150d8:	00d1      	lsls	r1, r2, #3
 80150da:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80150de:	7a19      	ldrb	r1, [r3, #8]
 80150e0:	4329      	orrs	r1, r5
 80150e2:	0655      	lsls	r5, r2, #25
 80150e4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80150e6:	bf44      	itt	mi
 80150e8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80150ec:	b209      	sxthmi	r1, r1
 80150ee:	1945      	adds	r5, r0, r5
 80150f0:	1a6d      	subs	r5, r5, r1
 80150f2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80150f4:	b2ad      	uxth	r5, r5
 80150f6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80150fa:	fa0f fa85 	sxth.w	sl, r5
 80150fe:	4551      	cmp	r1, sl
 8015100:	dd3c      	ble.n	801517c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8015102:	0112      	lsls	r2, r2, #4
 8015104:	79d8      	ldrb	r0, [r3, #7]
 8015106:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801510a:	4302      	orrs	r2, r0
 801510c:	4492      	add	sl, r2
 801510e:	4551      	cmp	r1, sl
 8015110:	dc30      	bgt.n	8015174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015112:	1b4d      	subs	r5, r1, r5
 8015114:	b22d      	sxth	r5, r5
 8015116:	468a      	mov	sl, r1
 8015118:	9319      	str	r3, [sp, #100]	; 0x64
 801511a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801511c:	f8d8 0000 	ldr.w	r0, [r8]
 8015120:	681a      	ldr	r2, [r3, #0]
 8015122:	6801      	ldr	r1, [r0, #0]
 8015124:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015126:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015128:	9313      	str	r3, [sp, #76]	; 0x4c
 801512a:	9218      	str	r2, [sp, #96]	; 0x60
 801512c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801512e:	4788      	blx	r1
 8015130:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015134:	910b      	str	r1, [sp, #44]	; 0x2c
 8015136:	f898 100e 	ldrb.w	r1, [r8, #14]
 801513a:	910a      	str	r1, [sp, #40]	; 0x28
 801513c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015140:	9109      	str	r1, [sp, #36]	; 0x24
 8015142:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015146:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015148:	9305      	str	r3, [sp, #20]
 801514a:	b2ad      	uxth	r5, r5
 801514c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015150:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8015154:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015156:	9304      	str	r3, [sp, #16]
 8015158:	4437      	add	r7, r6
 801515a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801515c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801515e:	9206      	str	r2, [sp, #24]
 8015160:	b23f      	sxth	r7, r7
 8015162:	f8cd a004 	str.w	sl, [sp, #4]
 8015166:	9700      	str	r7, [sp, #0]
 8015168:	681a      	ldr	r2, [r3, #0]
 801516a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801516c:	685b      	ldr	r3, [r3, #4]
 801516e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015170:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015172:	47a8      	blx	r5
 8015174:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015176:	3301      	adds	r3, #1
 8015178:	930e      	str	r3, [sp, #56]	; 0x38
 801517a:	e6e1      	b.n	8014f40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801517c:	2500      	movs	r5, #0
 801517e:	e7cb      	b.n	8015118 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8015180:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015182:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015184:	3501      	adds	r5, #1
 8015186:	429d      	cmp	r5, r3
 8015188:	f6bf af75 	bge.w	8015076 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801518c:	4659      	mov	r1, fp
 801518e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015190:	f7f2 fe20 	bl	8007dd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015194:	4604      	mov	r4, r0
 8015196:	b110      	cbz	r0, 801519e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015198:	280a      	cmp	r0, #10
 801519a:	d1f2      	bne.n	8015182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801519c:	e76a      	b.n	8015074 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801519e:	2400      	movs	r4, #0
 80151a0:	e769      	b.n	8015076 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80151a2:	f1bb 0f00 	cmp.w	fp, #0
 80151a6:	f43f af5a 	beq.w	801505e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80151aa:	e775      	b.n	8015098 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080151ac <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80151ac:	b530      	push	{r4, r5, lr}
 80151ae:	8ac4      	ldrh	r4, [r0, #22]
 80151b0:	8b45      	ldrh	r5, [r0, #26]
 80151b2:	8343      	strh	r3, [r0, #26]
 80151b4:	442c      	add	r4, r5
 80151b6:	1ae4      	subs	r4, r4, r3
 80151b8:	82c4      	strh	r4, [r0, #22]
 80151ba:	8b83      	ldrh	r3, [r0, #28]
 80151bc:	8b04      	ldrh	r4, [r0, #24]
 80151be:	4422      	add	r2, r4
 80151c0:	440c      	add	r4, r1
 80151c2:	1a59      	subs	r1, r3, r1
 80151c4:	83c2      	strh	r2, [r0, #30]
 80151c6:	8304      	strh	r4, [r0, #24]
 80151c8:	8381      	strh	r1, [r0, #28]
 80151ca:	bd30      	pop	{r4, r5, pc}

080151cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80151cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151d0:	4604      	mov	r4, r0
 80151d2:	8a47      	ldrh	r7, [r0, #18]
 80151d4:	68c0      	ldr	r0, [r0, #12]
 80151d6:	6803      	ldr	r3, [r0, #0]
 80151d8:	b085      	sub	sp, #20
 80151da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80151dc:	4798      	blx	r3
 80151de:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80151e2:	7a63      	ldrb	r3, [r4, #9]
 80151e4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80151e8:	42b7      	cmp	r7, r6
 80151ea:	f103 33ff 	add.w	r3, r3, #4294967295
 80151ee:	bfac      	ite	ge
 80151f0:	f04f 0900 	movge.w	r9, #0
 80151f4:	f04f 0901 	movlt.w	r9, #1
 80151f8:	2b05      	cmp	r3, #5
 80151fa:	d804      	bhi.n	8015206 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80151fc:	e8df f003 	tbb	[pc, r3]
 8015200:	470e0854 	.word	0x470e0854
 8015204:	4c4c      	.short	0x4c4c
 8015206:	2500      	movs	r5, #0
 8015208:	46a9      	mov	r9, r5
 801520a:	462e      	mov	r6, r5
 801520c:	462f      	mov	r7, r5
 801520e:	e00d      	b.n	801522c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015210:	42b7      	cmp	r7, r6
 8015212:	bfb4      	ite	lt
 8015214:	2600      	movlt	r6, #0
 8015216:	2601      	movge	r6, #1
 8015218:	2500      	movs	r5, #0
 801521a:	e7f7      	b.n	801520c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801521c:	42b7      	cmp	r7, r6
 801521e:	464d      	mov	r5, r9
 8015220:	f04f 0900 	mov.w	r9, #0
 8015224:	bfb4      	ite	lt
 8015226:	2600      	movlt	r6, #0
 8015228:	2601      	movge	r6, #1
 801522a:	464f      	mov	r7, r9
 801522c:	f04f 0800 	mov.w	r8, #0
 8015230:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015234:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015238:	f8cd 8004 	str.w	r8, [sp, #4]
 801523c:	2300      	movs	r3, #0
 801523e:	9303      	str	r3, [sp, #12]
 8015240:	8823      	ldrh	r3, [r4, #0]
 8015242:	2b20      	cmp	r3, #32
 8015244:	d034      	beq.n	80152b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015246:	f242 010b 	movw	r1, #8203	; 0x200b
 801524a:	1a5a      	subs	r2, r3, r1
 801524c:	f1d2 0a00 	rsbs	sl, r2, #0
 8015250:	eb4a 0a02 	adc.w	sl, sl, r2
 8015254:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015258:	4293      	cmp	r3, r2
 801525a:	d009      	beq.n	8015270 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801525c:	428b      	cmp	r3, r1
 801525e:	9a01      	ldr	r2, [sp, #4]
 8015260:	bf18      	it	ne
 8015262:	461a      	movne	r2, r3
 8015264:	9201      	str	r2, [sp, #4]
 8015266:	bf0c      	ite	eq
 8015268:	f04f 0a01 	moveq.w	sl, #1
 801526c:	f04f 0a00 	movne.w	sl, #0
 8015270:	ab03      	add	r3, sp, #12
 8015272:	68e2      	ldr	r2, [r4, #12]
 8015274:	7a21      	ldrb	r1, [r4, #8]
 8015276:	6860      	ldr	r0, [r4, #4]
 8015278:	f002 ff88 	bl	801818c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801527c:	8020      	strh	r0, [r4, #0]
 801527e:	b9d8      	cbnz	r0, 80152b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015280:	8ba2      	ldrh	r2, [r4, #28]
 8015282:	2300      	movs	r3, #0
 8015284:	4611      	mov	r1, r2
 8015286:	4620      	mov	r0, r4
 8015288:	f7ff ff90 	bl	80151ac <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801528c:	e06e      	b.n	801536c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801528e:	2500      	movs	r5, #0
 8015290:	46a9      	mov	r9, r5
 8015292:	462e      	mov	r6, r5
 8015294:	2701      	movs	r7, #1
 8015296:	e7c9      	b.n	801522c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015298:	42b7      	cmp	r7, r6
 801529a:	f04f 0500 	mov.w	r5, #0
 801529e:	bfb4      	ite	lt
 80152a0:	2700      	movlt	r7, #0
 80152a2:	2701      	movge	r7, #1
 80152a4:	462e      	mov	r6, r5
 80152a6:	e7c1      	b.n	801522c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80152a8:	2500      	movs	r5, #0
 80152aa:	46a9      	mov	r9, r5
 80152ac:	2601      	movs	r6, #1
 80152ae:	e7ad      	b.n	801520c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80152b0:	9301      	str	r3, [sp, #4]
 80152b2:	f04f 0a01 	mov.w	sl, #1
 80152b6:	e7db      	b.n	8015270 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80152b8:	8b63      	ldrh	r3, [r4, #26]
 80152ba:	280a      	cmp	r0, #10
 80152bc:	f103 0301 	add.w	r3, r3, #1
 80152c0:	8363      	strh	r3, [r4, #26]
 80152c2:	d0dd      	beq.n	8015280 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80152c4:	9a03      	ldr	r2, [sp, #12]
 80152c6:	bb62      	cbnz	r2, 8015322 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80152c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80152cc:	4298      	cmp	r0, r3
 80152ce:	d003      	beq.n	80152d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80152d0:	f242 030b 	movw	r3, #8203	; 0x200b
 80152d4:	4298      	cmp	r0, r3
 80152d6:	d1b1      	bne.n	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80152d8:	8823      	ldrh	r3, [r4, #0]
 80152da:	8ba1      	ldrh	r1, [r4, #28]
 80152dc:	2b20      	cmp	r3, #32
 80152de:	d003      	beq.n	80152e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80152e0:	f242 000b 	movw	r0, #8203	; 0x200b
 80152e4:	4283      	cmp	r3, r0
 80152e6:	d131      	bne.n	801534c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80152e8:	f1ba 0f00 	cmp.w	sl, #0
 80152ec:	bf0a      	itet	eq
 80152ee:	4688      	moveq	r8, r1
 80152f0:	4650      	movne	r0, sl
 80152f2:	2001      	moveq	r0, #1
 80152f4:	440a      	add	r2, r1
 80152f6:	8b23      	ldrh	r3, [r4, #24]
 80152f8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80152fc:	b292      	uxth	r2, r2
 80152fe:	83a2      	strh	r2, [r4, #28]
 8015300:	4413      	add	r3, r2
 8015302:	f1b9 0f00 	cmp.w	r9, #0
 8015306:	d102      	bne.n	801530e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015308:	2d00      	cmp	r5, #0
 801530a:	d042      	beq.n	8015392 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801530c:	b300      	cbz	r0, 8015350 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801530e:	8c21      	ldrh	r1, [r4, #32]
 8015310:	4419      	add	r1, r3
 8015312:	458c      	cmp	ip, r1
 8015314:	da37      	bge.n	8015386 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015316:	8ae1      	ldrh	r1, [r4, #22]
 8015318:	2900      	cmp	r1, #0
 801531a:	d034      	beq.n	8015386 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801531c:	4563      	cmp	r3, ip
 801531e:	dd8d      	ble.n	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015320:	e01d      	b.n	801535e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015322:	8893      	ldrh	r3, [r2, #4]
 8015324:	8023      	strh	r3, [r4, #0]
 8015326:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801532a:	9901      	ldr	r1, [sp, #4]
 801532c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015330:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015334:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015338:	ea4b 0b00 	orr.w	fp, fp, r0
 801533c:	68e0      	ldr	r0, [r4, #12]
 801533e:	6803      	ldr	r3, [r0, #0]
 8015340:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015342:	4798      	blx	r3
 8015344:	eb0b 0200 	add.w	r2, fp, r0
 8015348:	b292      	uxth	r2, r2
 801534a:	e7c5      	b.n	80152d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801534c:	2000      	movs	r0, #0
 801534e:	e7d1      	b.n	80152f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015350:	4563      	cmp	r3, ip
 8015352:	f77f af73 	ble.w	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015356:	8ae3      	ldrh	r3, [r4, #22]
 8015358:	2b00      	cmp	r3, #0
 801535a:	f43f af6f 	beq.w	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801535e:	2301      	movs	r3, #1
 8015360:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8015364:	8c22      	ldrh	r2, [r4, #32]
 8015366:	8be3      	ldrh	r3, [r4, #30]
 8015368:	4413      	add	r3, r2
 801536a:	83e3      	strh	r3, [r4, #30]
 801536c:	68e0      	ldr	r0, [r4, #12]
 801536e:	6803      	ldr	r3, [r0, #0]
 8015370:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015372:	4798      	blx	r3
 8015374:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015378:	4418      	add	r0, r3
 801537a:	8a63      	ldrh	r3, [r4, #18]
 801537c:	1a18      	subs	r0, r3, r0
 801537e:	8260      	strh	r0, [r4, #18]
 8015380:	b005      	add	sp, #20
 8015382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015386:	2300      	movs	r3, #0
 8015388:	4611      	mov	r1, r2
 801538a:	4620      	mov	r0, r4
 801538c:	f7ff ff0e 	bl	80151ac <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015390:	e754      	b.n	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015392:	4563      	cmp	r3, ip
 8015394:	dd14      	ble.n	80153c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015396:	b117      	cbz	r7, 801539e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015398:	2301      	movs	r3, #1
 801539a:	460a      	mov	r2, r1
 801539c:	e772      	b.n	8015284 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801539e:	2e00      	cmp	r6, #0
 80153a0:	f43f af4c 	beq.w	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80153a4:	2800      	cmp	r0, #0
 80153a6:	f47f af49 	bne.w	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80153aa:	f1ba 0f00 	cmp.w	sl, #0
 80153ae:	d002      	beq.n	80153b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80153b0:	2301      	movs	r3, #1
 80153b2:	4642      	mov	r2, r8
 80153b4:	e767      	b.n	8015286 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80153b6:	8ae3      	ldrh	r3, [r4, #22]
 80153b8:	2b00      	cmp	r3, #0
 80153ba:	f43f af3f 	beq.w	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80153be:	e7d5      	b.n	801536c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80153c0:	2800      	cmp	r0, #0
 80153c2:	f47f af3b 	bne.w	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80153c6:	f1ba 0f00 	cmp.w	sl, #0
 80153ca:	f43f af37 	beq.w	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80153ce:	2301      	movs	r3, #1
 80153d0:	4642      	mov	r2, r8
 80153d2:	e7da      	b.n	801538a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080153d4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80153d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80153d6:	4605      	mov	r5, r0
 80153d8:	b08f      	sub	sp, #60	; 0x3c
 80153da:	4617      	mov	r7, r2
 80153dc:	461c      	mov	r4, r3
 80153de:	460e      	mov	r6, r1
 80153e0:	b1d1      	cbz	r1, 8015418 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80153e2:	681b      	ldr	r3, [r3, #0]
 80153e4:	4620      	mov	r0, r4
 80153e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80153e8:	4798      	blx	r3
 80153ea:	4240      	negs	r0, r0
 80153ec:	b200      	sxth	r0, r0
 80153ee:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80153f2:	9603      	str	r6, [sp, #12]
 80153f4:	9700      	str	r7, [sp, #0]
 80153f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80153fa:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80153fe:	4629      	mov	r1, r5
 8015400:	a805      	add	r0, sp, #20
 8015402:	f7ff fcbf 	bl	8014d84 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015406:	2401      	movs	r4, #1
 8015408:	a805      	add	r0, sp, #20
 801540a:	f7ff fedf 	bl	80151cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801540e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015412:	b163      	cbz	r3, 801542e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015414:	3401      	adds	r4, #1
 8015416:	e7f7      	b.n	8015408 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015418:	f002 ff86 	bl	8018328 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801541c:	2401      	movs	r4, #1
 801541e:	280a      	cmp	r0, #10
 8015420:	4628      	mov	r0, r5
 8015422:	bf08      	it	eq
 8015424:	3401      	addeq	r4, #1
 8015426:	f002 ff7f 	bl	8018328 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801542a:	2800      	cmp	r0, #0
 801542c:	d1f7      	bne.n	801541e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801542e:	b2a0      	uxth	r0, r4
 8015430:	b00f      	add	sp, #60	; 0x3c
 8015432:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015434 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015438:	b0e3      	sub	sp, #396	; 0x18c
 801543a:	461c      	mov	r4, r3
 801543c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801543e:	4683      	mov	fp, r0
 8015440:	4688      	mov	r8, r1
 8015442:	2b00      	cmp	r3, #0
 8015444:	f000 8112 	beq.w	801566c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015448:	6823      	ldr	r3, [r4, #0]
 801544a:	2b00      	cmp	r3, #0
 801544c:	f000 810e 	beq.w	801566c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015450:	7ba3      	ldrb	r3, [r4, #14]
 8015452:	2b00      	cmp	r3, #0
 8015454:	f000 810a 	beq.w	801566c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015458:	6810      	ldr	r0, [r2, #0]
 801545a:	6851      	ldr	r1, [r2, #4]
 801545c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015460:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015464:	ad0a      	add	r5, sp, #40	; 0x28
 8015466:	462b      	mov	r3, r5
 8015468:	c303      	stmia	r3!, {r0, r1}
 801546a:	2100      	movs	r1, #0
 801546c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015470:	910c      	str	r1, [sp, #48]	; 0x30
 8015472:	79a2      	ldrb	r2, [r4, #6]
 8015474:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015478:	a90c      	add	r1, sp, #48	; 0x30
 801547a:	4628      	mov	r0, r5
 801547c:	f7ff fd01 	bl	8014e82 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015480:	a90c      	add	r1, sp, #48	; 0x30
 8015482:	4608      	mov	r0, r1
 8015484:	79a2      	ldrb	r2, [r4, #6]
 8015486:	f7ff fcfc 	bl	8014e82 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801548a:	a817      	add	r0, sp, #92	; 0x5c
 801548c:	f002 fb20 	bl	8017ad0 <_ZN8touchgfx12TextProviderC1Ev>
 8015490:	6820      	ldr	r0, [r4, #0]
 8015492:	6803      	ldr	r3, [r0, #0]
 8015494:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015496:	4798      	blx	r3
 8015498:	4606      	mov	r6, r0
 801549a:	6820      	ldr	r0, [r4, #0]
 801549c:	6803      	ldr	r3, [r0, #0]
 801549e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80154a0:	4798      	blx	r3
 80154a2:	4633      	mov	r3, r6
 80154a4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80154a6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80154a8:	9000      	str	r0, [sp, #0]
 80154aa:	a817      	add	r0, sp, #92	; 0x5c
 80154ac:	f002 fb6b 	bl	8017b86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80154b0:	6820      	ldr	r0, [r4, #0]
 80154b2:	f894 a004 	ldrb.w	sl, [r4, #4]
 80154b6:	6803      	ldr	r3, [r0, #0]
 80154b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80154ba:	4798      	blx	r3
 80154bc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80154c0:	6823      	ldr	r3, [r4, #0]
 80154c2:	4607      	mov	r7, r0
 80154c4:	4406      	add	r6, r0
 80154c6:	a830      	add	r0, sp, #192	; 0xc0
 80154c8:	f893 9009 	ldrb.w	r9, [r3, #9]
 80154cc:	f002 fb00 	bl	8017ad0 <_ZN8touchgfx12TextProviderC1Ev>
 80154d0:	7c23      	ldrb	r3, [r4, #16]
 80154d2:	b17b      	cbz	r3, 80154f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80154d4:	6820      	ldr	r0, [r4, #0]
 80154d6:	6803      	ldr	r3, [r0, #0]
 80154d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80154da:	4798      	blx	r3
 80154dc:	9009      	str	r0, [sp, #36]	; 0x24
 80154de:	6820      	ldr	r0, [r4, #0]
 80154e0:	6802      	ldr	r2, [r0, #0]
 80154e2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80154e4:	4790      	blx	r2
 80154e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154e8:	9000      	str	r0, [sp, #0]
 80154ea:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80154ec:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80154ee:	a830      	add	r0, sp, #192	; 0xc0
 80154f0:	f002 fb49 	bl	8017b86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80154f4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80154f8:	7be2      	ldrb	r2, [r4, #15]
 80154fa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80154fe:	1a8a      	subs	r2, r1, r2
 8015500:	7c21      	ldrb	r1, [r4, #16]
 8015502:	9103      	str	r1, [sp, #12]
 8015504:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015508:	9102      	str	r1, [sp, #8]
 801550a:	6821      	ldr	r1, [r4, #0]
 801550c:	9101      	str	r1, [sp, #4]
 801550e:	7961      	ldrb	r1, [r4, #5]
 8015510:	9100      	str	r1, [sp, #0]
 8015512:	b292      	uxth	r2, r2
 8015514:	a930      	add	r1, sp, #192	; 0xc0
 8015516:	a80e      	add	r0, sp, #56	; 0x38
 8015518:	f7ff fc34 	bl	8014d84 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801551c:	2e00      	cmp	r6, #0
 801551e:	dc5b      	bgt.n	80155d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015520:	af17      	add	r7, sp, #92	; 0x5c
 8015522:	f04f 0900 	mov.w	r9, #0
 8015526:	7c23      	ldrb	r3, [r4, #16]
 8015528:	2b00      	cmp	r3, #0
 801552a:	f000 80b1 	beq.w	8015690 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801552e:	a80e      	add	r0, sp, #56	; 0x38
 8015530:	f7ff fe4c 	bl	80151cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015534:	f1ba 0f00 	cmp.w	sl, #0
 8015538:	f000 80a5 	beq.w	8015686 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801553c:	7c23      	ldrb	r3, [r4, #16]
 801553e:	9309      	str	r3, [sp, #36]	; 0x24
 8015540:	2264      	movs	r2, #100	; 0x64
 8015542:	4639      	mov	r1, r7
 8015544:	a849      	add	r0, sp, #292	; 0x124
 8015546:	f015 fde6 	bl	802b116 <memcpy>
 801554a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801554c:	2b00      	cmp	r3, #0
 801554e:	f000 80a7 	beq.w	80156a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8015552:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8015556:	7922      	ldrb	r2, [r4, #4]
 8015558:	2a01      	cmp	r2, #1
 801555a:	f040 808a 	bne.w	8015672 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801555e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8015562:	1ac0      	subs	r0, r0, r3
 8015564:	2302      	movs	r3, #2
 8015566:	fb90 f0f3 	sdiv	r0, r0, r3
 801556a:	b200      	sxth	r0, r0
 801556c:	7c23      	ldrb	r3, [r4, #16]
 801556e:	2b00      	cmp	r3, #0
 8015570:	f000 808b 	beq.w	801568a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015574:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8015578:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801557c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015580:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015584:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8015588:	4410      	add	r0, r2
 801558a:	b200      	sxth	r0, r0
 801558c:	9000      	str	r0, [sp, #0]
 801558e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8015592:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8015596:	4642      	mov	r2, r8
 8015598:	2100      	movs	r1, #0
 801559a:	4658      	mov	r0, fp
 801559c:	f7ff fca2 	bl	8014ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80155a0:	2800      	cmp	r0, #0
 80155a2:	d163      	bne.n	801566c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80155a4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80155a8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80155ac:	b2b2      	uxth	r2, r6
 80155ae:	4413      	add	r3, r2
 80155b0:	1a8a      	subs	r2, r1, r2
 80155b2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80155b6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80155ba:	b21b      	sxth	r3, r3
 80155bc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80155c0:	2a00      	cmp	r2, #0
 80155c2:	d153      	bne.n	801566c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80155c4:	6822      	ldr	r2, [r4, #0]
 80155c6:	8869      	ldrh	r1, [r5, #2]
 80155c8:	7a12      	ldrb	r2, [r2, #8]
 80155ca:	1a9b      	subs	r3, r3, r2
 80155cc:	88ea      	ldrh	r2, [r5, #6]
 80155ce:	440a      	add	r2, r1
 80155d0:	b212      	sxth	r2, r2
 80155d2:	4293      	cmp	r3, r2
 80155d4:	dda7      	ble.n	8015526 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80155d6:	e049      	b.n	801566c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80155d8:	7c23      	ldrb	r3, [r4, #16]
 80155da:	444f      	add	r7, r9
 80155dc:	b1c3      	cbz	r3, 8015610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80155de:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80155e2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80155e6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80155ea:	443b      	add	r3, r7
 80155ec:	4293      	cmp	r3, r2
 80155ee:	da97      	bge.n	8015520 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80155f0:	a80e      	add	r0, sp, #56	; 0x38
 80155f2:	f7ff fdeb 	bl	80151cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80155f6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80155fa:	3b01      	subs	r3, #1
 80155fc:	b29b      	uxth	r3, r3
 80155fe:	454b      	cmp	r3, r9
 8015600:	9309      	str	r3, [sp, #36]	; 0x24
 8015602:	d021      	beq.n	8015648 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8015604:	7961      	ldrb	r1, [r4, #5]
 8015606:	a817      	add	r0, sp, #92	; 0x5c
 8015608:	f7f2 fbe4 	bl	8007dd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801560c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801560e:	e7f4      	b.n	80155fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015610:	fa1f f986 	uxth.w	r9, r6
 8015614:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015618:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801561c:	443b      	add	r3, r7
 801561e:	4293      	cmp	r3, r2
 8015620:	f6bf af7e 	bge.w	8015520 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015624:	a817      	add	r0, sp, #92	; 0x5c
 8015626:	f002 fe7f 	bl	8018328 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801562a:	b1f8      	cbz	r0, 801566c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801562c:	280a      	cmp	r0, #10
 801562e:	d1f1      	bne.n	8015614 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015630:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015634:	444b      	add	r3, r9
 8015636:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801563a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801563e:	eba3 0309 	sub.w	r3, r3, r9
 8015642:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015646:	e7e5      	b.n	8015614 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015648:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801564c:	b2b3      	uxth	r3, r6
 801564e:	441a      	add	r2, r3
 8015650:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015654:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8015658:	1ad3      	subs	r3, r2, r3
 801565a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801565e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015662:	b11b      	cbz	r3, 801566c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015664:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8015668:	2b00      	cmp	r3, #0
 801566a:	d0ba      	beq.n	80155e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801566c:	b063      	add	sp, #396	; 0x18c
 801566e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015672:	2a02      	cmp	r2, #2
 8015674:	d105      	bne.n	8015682 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8015676:	7be2      	ldrb	r2, [r4, #15]
 8015678:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801567c:	1a80      	subs	r0, r0, r2
 801567e:	1ac0      	subs	r0, r0, r3
 8015680:	e773      	b.n	801556a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8015682:	2000      	movs	r0, #0
 8015684:	e772      	b.n	801556c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015686:	7be0      	ldrb	r0, [r4, #15]
 8015688:	e770      	b.n	801556c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801568a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801568e:	e773      	b.n	8015578 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8015690:	f1ba 0f00 	cmp.w	sl, #0
 8015694:	d0f7      	beq.n	8015686 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015696:	2264      	movs	r2, #100	; 0x64
 8015698:	4639      	mov	r1, r7
 801569a:	a849      	add	r0, sp, #292	; 0x124
 801569c:	f015 fd3b 	bl	802b116 <memcpy>
 80156a0:	2300      	movs	r3, #0
 80156a2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80156a6:	6821      	ldr	r1, [r4, #0]
 80156a8:	a849      	add	r0, sp, #292	; 0x124
 80156aa:	f7ff fbae 	bl	8014e0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80156ae:	b203      	sxth	r3, r0
 80156b0:	e751      	b.n	8015556 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080156b2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80156b2:	2b03      	cmp	r3, #3
 80156b4:	d818      	bhi.n	80156e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80156b6:	e8df f003 	tbb	[pc, r3]
 80156ba:	0602      	.short	0x0602
 80156bc:	130d      	.short	0x130d
 80156be:	f9b0 2000 	ldrsh.w	r2, [r0]
 80156c2:	1850      	adds	r0, r2, r1
 80156c4:	4770      	bx	lr
 80156c6:	8803      	ldrh	r3, [r0, #0]
 80156c8:	8880      	ldrh	r0, [r0, #4]
 80156ca:	4418      	add	r0, r3
 80156cc:	b200      	sxth	r0, r0
 80156ce:	1a80      	subs	r0, r0, r2
 80156d0:	3801      	subs	r0, #1
 80156d2:	4770      	bx	lr
 80156d4:	8803      	ldrh	r3, [r0, #0]
 80156d6:	8880      	ldrh	r0, [r0, #4]
 80156d8:	4418      	add	r0, r3
 80156da:	b200      	sxth	r0, r0
 80156dc:	1a40      	subs	r0, r0, r1
 80156de:	e7f7      	b.n	80156d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80156e0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80156e4:	4410      	add	r0, r2
 80156e6:	4770      	bx	lr
 80156e8:	2000      	movs	r0, #0
 80156ea:	4770      	bx	lr

080156ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80156ec:	2b03      	cmp	r3, #3
 80156ee:	d817      	bhi.n	8015720 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80156f0:	e8df f003 	tbb	[pc, r3]
 80156f4:	10090602 	.word	0x10090602
 80156f8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80156fc:	1850      	adds	r0, r2, r1
 80156fe:	4770      	bx	lr
 8015700:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015704:	e7fa      	b.n	80156fc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015706:	8843      	ldrh	r3, [r0, #2]
 8015708:	88c0      	ldrh	r0, [r0, #6]
 801570a:	4418      	add	r0, r3
 801570c:	b200      	sxth	r0, r0
 801570e:	1a80      	subs	r0, r0, r2
 8015710:	3801      	subs	r0, #1
 8015712:	4770      	bx	lr
 8015714:	8843      	ldrh	r3, [r0, #2]
 8015716:	88c0      	ldrh	r0, [r0, #6]
 8015718:	4418      	add	r0, r3
 801571a:	b200      	sxth	r0, r0
 801571c:	1a40      	subs	r0, r0, r1
 801571e:	e7f7      	b.n	8015710 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015720:	2000      	movs	r0, #0
 8015722:	4770      	bx	lr

08015724 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015724:	4b01      	ldr	r3, [pc, #4]	; (801572c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015726:	2200      	movs	r2, #0
 8015728:	601a      	str	r2, [r3, #0]
 801572a:	4770      	bx	lr
 801572c:	200132cc 	.word	0x200132cc

08015730 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015730:	4603      	mov	r3, r0
 8015732:	b1c8      	cbz	r0, 8015768 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015734:	0c02      	lsrs	r2, r0, #16
 8015736:	0412      	lsls	r2, r2, #16
 8015738:	b9a2      	cbnz	r2, 8015764 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801573a:	0403      	lsls	r3, r0, #16
 801573c:	2010      	movs	r0, #16
 801573e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015742:	bf04      	itt	eq
 8015744:	021b      	lsleq	r3, r3, #8
 8015746:	3008      	addeq	r0, #8
 8015748:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801574c:	bf04      	itt	eq
 801574e:	011b      	lsleq	r3, r3, #4
 8015750:	3004      	addeq	r0, #4
 8015752:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8015756:	bf04      	itt	eq
 8015758:	009b      	lsleq	r3, r3, #2
 801575a:	3002      	addeq	r0, #2
 801575c:	2b00      	cmp	r3, #0
 801575e:	db04      	blt.n	801576a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8015760:	3001      	adds	r0, #1
 8015762:	4770      	bx	lr
 8015764:	2000      	movs	r0, #0
 8015766:	e7ea      	b.n	801573e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8015768:	2020      	movs	r0, #32
 801576a:	4770      	bx	lr

0801576c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801576c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015770:	b087      	sub	sp, #28
 8015772:	460d      	mov	r5, r1
 8015774:	4616      	mov	r6, r2
 8015776:	4698      	mov	r8, r3
 8015778:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801577c:	4601      	mov	r1, r0
 801577e:	b120      	cbz	r0, 801578a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015780:	b11a      	cbz	r2, 801578a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015782:	2d1f      	cmp	r5, #31
 8015784:	d801      	bhi.n	801578a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015786:	2b1f      	cmp	r3, #31
 8015788:	d904      	bls.n	8015794 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801578a:	2000      	movs	r0, #0
 801578c:	6038      	str	r0, [r7, #0]
 801578e:	b007      	add	sp, #28
 8015790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015794:	b97d      	cbnz	r5, 80157b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8015796:	b143      	cbz	r3, 80157aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8015798:	4602      	mov	r2, r0
 801579a:	e9cd 4700 	strd	r4, r7, [sp]
 801579e:	462b      	mov	r3, r5
 80157a0:	4641      	mov	r1, r8
 80157a2:	4630      	mov	r0, r6
 80157a4:	f7ff ffe2 	bl	801576c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80157a8:	e7f1      	b.n	801578e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80157aa:	f04f 33ff 	mov.w	r3, #4294967295
 80157ae:	603b      	str	r3, [r7, #0]
 80157b0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80157b4:	e7eb      	b.n	801578e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80157b6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80157ba:	d106      	bne.n	80157ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80157bc:	4346      	muls	r6, r0
 80157be:	fbb6 f0f4 	udiv	r0, r6, r4
 80157c2:	fb04 6610 	mls	r6, r4, r0, r6
 80157c6:	603e      	str	r6, [r7, #0]
 80157c8:	e7e1      	b.n	801578e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80157ca:	2201      	movs	r2, #1
 80157cc:	40aa      	lsls	r2, r5
 80157ce:	3a01      	subs	r2, #1
 80157d0:	4016      	ands	r6, r2
 80157d2:	fa00 fb05 	lsl.w	fp, r0, r5
 80157d6:	4630      	mov	r0, r6
 80157d8:	fbbb f9f4 	udiv	r9, fp, r4
 80157dc:	fb0a f309 	mul.w	r3, sl, r9
 80157e0:	9303      	str	r3, [sp, #12]
 80157e2:	f7ff ffa5 	bl	8015730 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80157e6:	462b      	mov	r3, r5
 80157e8:	460a      	mov	r2, r1
 80157ea:	e9cd 4700 	strd	r4, r7, [sp]
 80157ee:	4601      	mov	r1, r0
 80157f0:	4630      	mov	r0, r6
 80157f2:	f7ff ffbb 	bl	801576c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80157f6:	fb04 b919 	mls	r9, r4, r9, fp
 80157fa:	4606      	mov	r6, r0
 80157fc:	4648      	mov	r0, r9
 80157fe:	eb05 0108 	add.w	r1, r5, r8
 8015802:	f7ff ff95 	bl	8015730 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015806:	ab05      	add	r3, sp, #20
 8015808:	e9cd 4300 	strd	r4, r3, [sp]
 801580c:	464a      	mov	r2, r9
 801580e:	4603      	mov	r3, r0
 8015810:	4650      	mov	r0, sl
 8015812:	f7ff ffab 	bl	801576c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015816:	6839      	ldr	r1, [r7, #0]
 8015818:	9a05      	ldr	r2, [sp, #20]
 801581a:	9b03      	ldr	r3, [sp, #12]
 801581c:	4411      	add	r1, r2
 801581e:	fbb1 f2f4 	udiv	r2, r1, r4
 8015822:	18d3      	adds	r3, r2, r3
 8015824:	441e      	add	r6, r3
 8015826:	fb04 1412 	mls	r4, r4, r2, r1
 801582a:	4430      	add	r0, r6
 801582c:	603c      	str	r4, [r7, #0]
 801582e:	e7ae      	b.n	801578e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015830 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015830:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015834:	b085      	sub	sp, #20
 8015836:	f1b0 0900 	subs.w	r9, r0, #0
 801583a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801583c:	461d      	mov	r5, r3
 801583e:	bfbf      	itttt	lt
 8015840:	6823      	ldrlt	r3, [r4, #0]
 8015842:	425b      	neglt	r3, r3
 8015844:	f1c9 0900 	rsblt	r9, r9, #0
 8015848:	6023      	strlt	r3, [r4, #0]
 801584a:	bfb4      	ite	lt
 801584c:	f04f 36ff 	movlt.w	r6, #4294967295
 8015850:	2601      	movge	r6, #1
 8015852:	2a00      	cmp	r2, #0
 8015854:	4617      	mov	r7, r2
 8015856:	da04      	bge.n	8015862 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015858:	6823      	ldr	r3, [r4, #0]
 801585a:	425b      	negs	r3, r3
 801585c:	4257      	negs	r7, r2
 801585e:	4276      	negs	r6, r6
 8015860:	6023      	str	r3, [r4, #0]
 8015862:	2d00      	cmp	r5, #0
 8015864:	4638      	mov	r0, r7
 8015866:	bfba      	itte	lt
 8015868:	426d      	neglt	r5, r5
 801586a:	f04f 38ff 	movlt.w	r8, #4294967295
 801586e:	f04f 0801 	movge.w	r8, #1
 8015872:	f7ff ff5d 	bl	8015730 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015876:	ab03      	add	r3, sp, #12
 8015878:	e9cd 5300 	strd	r5, r3, [sp]
 801587c:	463a      	mov	r2, r7
 801587e:	4603      	mov	r3, r0
 8015880:	4648      	mov	r0, r9
 8015882:	f7ff ff73 	bl	801576c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015886:	6823      	ldr	r3, [r4, #0]
 8015888:	9a03      	ldr	r2, [sp, #12]
 801588a:	4546      	cmp	r6, r8
 801588c:	441a      	add	r2, r3
 801588e:	fb92 f3f5 	sdiv	r3, r2, r5
 8015892:	4418      	add	r0, r3
 8015894:	bf18      	it	ne
 8015896:	4240      	negne	r0, r0
 8015898:	fb05 2313 	mls	r3, r5, r3, r2
 801589c:	1c72      	adds	r2, r6, #1
 801589e:	6023      	str	r3, [r4, #0]
 80158a0:	d105      	bne.n	80158ae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80158a2:	2b00      	cmp	r3, #0
 80158a4:	f1c3 0200 	rsb	r2, r3, #0
 80158a8:	db0b      	blt.n	80158c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80158aa:	6022      	str	r2, [r4, #0]
 80158ac:	e006      	b.n	80158bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80158ae:	2e01      	cmp	r6, #1
 80158b0:	d104      	bne.n	80158bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80158b2:	2b00      	cmp	r3, #0
 80158b4:	da02      	bge.n	80158bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80158b6:	442b      	add	r3, r5
 80158b8:	3801      	subs	r0, #1
 80158ba:	6023      	str	r3, [r4, #0]
 80158bc:	b005      	add	sp, #20
 80158be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80158c2:	3801      	subs	r0, #1
 80158c4:	1b52      	subs	r2, r2, r5
 80158c6:	e7f0      	b.n	80158aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080158c8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80158c8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80158cc:	4c1c      	ldr	r4, [pc, #112]	; (8015940 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80158ce:	6807      	ldr	r7, [r0, #0]
 80158d0:	69a3      	ldr	r3, [r4, #24]
 80158d2:	4605      	mov	r5, r0
 80158d4:	b92b      	cbnz	r3, 80158e2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80158d6:	6840      	ldr	r0, [r0, #4]
 80158d8:	e9c5 7000 	strd	r7, r0, [r5]
 80158dc:	b004      	add	sp, #16
 80158de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80158e2:	68a2      	ldr	r2, [r4, #8]
 80158e4:	6820      	ldr	r0, [r4, #0]
 80158e6:	ae04      	add	r6, sp, #16
 80158e8:	f04f 0802 	mov.w	r8, #2
 80158ec:	fb93 f1f8 	sdiv	r1, r3, r8
 80158f0:	440a      	add	r2, r1
 80158f2:	f846 2d04 	str.w	r2, [r6, #-4]!
 80158f6:	69e1      	ldr	r1, [r4, #28]
 80158f8:	9600      	str	r6, [sp, #0]
 80158fa:	463a      	mov	r2, r7
 80158fc:	f7ff ff98 	bl	8015830 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015900:	69a3      	ldr	r3, [r4, #24]
 8015902:	686a      	ldr	r2, [r5, #4]
 8015904:	6a21      	ldr	r1, [r4, #32]
 8015906:	9600      	str	r6, [sp, #0]
 8015908:	4607      	mov	r7, r0
 801590a:	6860      	ldr	r0, [r4, #4]
 801590c:	f7ff ff90 	bl	8015830 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015910:	6962      	ldr	r2, [r4, #20]
 8015912:	69a3      	ldr	r3, [r4, #24]
 8015914:	fb93 f8f8 	sdiv	r8, r3, r8
 8015918:	4442      	add	r2, r8
 801591a:	9203      	str	r2, [sp, #12]
 801591c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801591e:	682a      	ldr	r2, [r5, #0]
 8015920:	9600      	str	r6, [sp, #0]
 8015922:	4407      	add	r7, r0
 8015924:	68e0      	ldr	r0, [r4, #12]
 8015926:	f7ff ff83 	bl	8015830 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801592a:	9600      	str	r6, [sp, #0]
 801592c:	4680      	mov	r8, r0
 801592e:	69a3      	ldr	r3, [r4, #24]
 8015930:	686a      	ldr	r2, [r5, #4]
 8015932:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8015934:	6920      	ldr	r0, [r4, #16]
 8015936:	f7ff ff7b 	bl	8015830 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801593a:	4440      	add	r0, r8
 801593c:	e7cc      	b.n	80158d8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801593e:	bf00      	nop
 8015940:	200132d0 	.word	0x200132d0

08015944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015944:	4b07      	ldr	r3, [pc, #28]	; (8015964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015946:	781b      	ldrb	r3, [r3, #0]
 8015948:	2b01      	cmp	r3, #1
 801594a:	d109      	bne.n	8015960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801594c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015950:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015954:	8003      	strh	r3, [r0, #0]
 8015956:	4b04      	ldr	r3, [pc, #16]	; (8015968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8015958:	881b      	ldrh	r3, [r3, #0]
 801595a:	3b01      	subs	r3, #1
 801595c:	1a9b      	subs	r3, r3, r2
 801595e:	800b      	strh	r3, [r1, #0]
 8015960:	4770      	bx	lr
 8015962:	bf00      	nop
 8015964:	200132b4 	.word	0x200132b4
 8015968:	200132b0 	.word	0x200132b0

0801596c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801596c:	b510      	push	{r4, lr}
 801596e:	4b07      	ldr	r3, [pc, #28]	; (801598c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8015970:	781b      	ldrb	r3, [r3, #0]
 8015972:	2b01      	cmp	r3, #1
 8015974:	d108      	bne.n	8015988 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8015976:	4b06      	ldr	r3, [pc, #24]	; (8015990 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8015978:	880c      	ldrh	r4, [r1, #0]
 801597a:	881b      	ldrh	r3, [r3, #0]
 801597c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015980:	3b01      	subs	r3, #1
 8015982:	1b1b      	subs	r3, r3, r4
 8015984:	8003      	strh	r3, [r0, #0]
 8015986:	800a      	strh	r2, [r1, #0]
 8015988:	bd10      	pop	{r4, pc}
 801598a:	bf00      	nop
 801598c:	200132b4 	.word	0x200132b4
 8015990:	200132b0 	.word	0x200132b0

08015994 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015994:	b510      	push	{r4, lr}
 8015996:	4b0a      	ldr	r3, [pc, #40]	; (80159c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015998:	781b      	ldrb	r3, [r3, #0]
 801599a:	2b01      	cmp	r3, #1
 801599c:	d10e      	bne.n	80159bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801599e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80159a2:	8843      	ldrh	r3, [r0, #2]
 80159a4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80159a8:	8044      	strh	r4, [r0, #2]
 80159aa:	18ca      	adds	r2, r1, r3
 80159ac:	4b05      	ldr	r3, [pc, #20]	; (80159c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80159ae:	881b      	ldrh	r3, [r3, #0]
 80159b0:	1a9b      	subs	r3, r3, r2
 80159b2:	8003      	strh	r3, [r0, #0]
 80159b4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80159b8:	80c3      	strh	r3, [r0, #6]
 80159ba:	8081      	strh	r1, [r0, #4]
 80159bc:	bd10      	pop	{r4, pc}
 80159be:	bf00      	nop
 80159c0:	200132b4 	.word	0x200132b4
 80159c4:	200132b0 	.word	0x200132b0

080159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80159c8:	4b08      	ldr	r3, [pc, #32]	; (80159ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80159ca:	781b      	ldrb	r3, [r3, #0]
 80159cc:	2b01      	cmp	r3, #1
 80159ce:	d10c      	bne.n	80159ea <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80159d0:	8803      	ldrh	r3, [r0, #0]
 80159d2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80159d6:	8842      	ldrh	r2, [r0, #2]
 80159d8:	8002      	strh	r2, [r0, #0]
 80159da:	185a      	adds	r2, r3, r1
 80159dc:	4b04      	ldr	r3, [pc, #16]	; (80159f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80159de:	881b      	ldrh	r3, [r3, #0]
 80159e0:	1a9b      	subs	r3, r3, r2
 80159e2:	8043      	strh	r3, [r0, #2]
 80159e4:	88c3      	ldrh	r3, [r0, #6]
 80159e6:	8083      	strh	r3, [r0, #4]
 80159e8:	80c1      	strh	r1, [r0, #6]
 80159ea:	4770      	bx	lr
 80159ec:	200132b4 	.word	0x200132b4
 80159f0:	200132b0 	.word	0x200132b0

080159f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80159f4:	b510      	push	{r4, lr}
 80159f6:	4b07      	ldr	r3, [pc, #28]	; (8015a14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80159f8:	781b      	ldrb	r3, [r3, #0]
 80159fa:	2b01      	cmp	r3, #1
 80159fc:	d108      	bne.n	8015a10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80159fe:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015a02:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015a06:	8003      	strh	r3, [r0, #0]
 8015a08:	8893      	ldrh	r3, [r2, #4]
 8015a0a:	3b01      	subs	r3, #1
 8015a0c:	1b1b      	subs	r3, r3, r4
 8015a0e:	800b      	strh	r3, [r1, #0]
 8015a10:	bd10      	pop	{r4, pc}
 8015a12:	bf00      	nop
 8015a14:	200132b4 	.word	0x200132b4

08015a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015a18:	4b0b      	ldr	r3, [pc, #44]	; (8015a48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8015a1a:	781b      	ldrb	r3, [r3, #0]
 8015a1c:	2b01      	cmp	r3, #1
 8015a1e:	d111      	bne.n	8015a44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015a20:	680b      	ldr	r3, [r1, #0]
 8015a22:	ed90 7a00 	vldr	s14, [r0]
 8015a26:	6003      	str	r3, [r0, #0]
 8015a28:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8015a2c:	eddf 6a07 	vldr	s13, [pc, #28]	; 8015a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015a30:	ee07 3a90 	vmov	s15, r3
 8015a34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a38:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8015a3c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015a40:	edc1 7a00 	vstr	s15, [r1]
 8015a44:	4770      	bx	lr
 8015a46:	bf00      	nop
 8015a48:	200132b4 	.word	0x200132b4
 8015a4c:	38d1b717 	.word	0x38d1b717

08015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8015a50:	b510      	push	{r4, lr}
 8015a52:	4b0a      	ldr	r3, [pc, #40]	; (8015a7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8015a54:	781b      	ldrb	r3, [r3, #0]
 8015a56:	2b01      	cmp	r3, #1
 8015a58:	460a      	mov	r2, r1
 8015a5a:	d10d      	bne.n	8015a78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8015a5c:	8881      	ldrh	r1, [r0, #4]
 8015a5e:	8803      	ldrh	r3, [r0, #0]
 8015a60:	440b      	add	r3, r1
 8015a62:	4601      	mov	r1, r0
 8015a64:	3b01      	subs	r3, #1
 8015a66:	f821 3b02 	strh.w	r3, [r1], #2
 8015a6a:	f7ff ffc3 	bl	80159f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8015a6e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015a72:	88c2      	ldrh	r2, [r0, #6]
 8015a74:	8082      	strh	r2, [r0, #4]
 8015a76:	80c3      	strh	r3, [r0, #6]
 8015a78:	bd10      	pop	{r4, pc}
 8015a7a:	bf00      	nop
 8015a7c:	200132b4 	.word	0x200132b4

08015a80 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015a80:	4b06      	ldr	r3, [pc, #24]	; (8015a9c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8015a82:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a86:	4b06      	ldr	r3, [pc, #24]	; (8015aa0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015a88:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8015a8c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015a90:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8015a94:	2100      	movs	r1, #0
 8015a96:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8015a9a:	4770      	bx	lr
 8015a9c:	200132b0 	.word	0x200132b0
 8015aa0:	200132b2 	.word	0x200132b2

08015aa4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015aa4:	4b03      	ldr	r3, [pc, #12]	; (8015ab4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015aa6:	6818      	ldr	r0, [r3, #0]
 8015aa8:	b110      	cbz	r0, 8015ab0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8015aaa:	6803      	ldr	r3, [r0, #0]
 8015aac:	699b      	ldr	r3, [r3, #24]
 8015aae:	4718      	bx	r3
 8015ab0:	4770      	bx	lr
 8015ab2:	bf00      	nop
 8015ab4:	20013300 	.word	0x20013300

08015ab8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015ab8:	4770      	bx	lr
	...

08015abc <_ZN8touchgfx11Application4drawEv>:
 8015abc:	b507      	push	{r0, r1, r2, lr}
 8015abe:	4b09      	ldr	r3, [pc, #36]	; (8015ae4 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015ac0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015ac4:	4b08      	ldr	r3, [pc, #32]	; (8015ae8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015ac6:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015aca:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015ace:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015ad2:	6803      	ldr	r3, [r0, #0]
 8015ad4:	2100      	movs	r1, #0
 8015ad6:	9100      	str	r1, [sp, #0]
 8015ad8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015ada:	4669      	mov	r1, sp
 8015adc:	4798      	blx	r3
 8015ade:	b003      	add	sp, #12
 8015ae0:	f85d fb04 	ldr.w	pc, [sp], #4
 8015ae4:	200132b0 	.word	0x200132b0
 8015ae8:	200132b2 	.word	0x200132b2

08015aec <_ZN8touchgfx11Application10invalidateEv>:
 8015aec:	4b09      	ldr	r3, [pc, #36]	; (8015b14 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8015aee:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015af2:	4b09      	ldr	r3, [pc, #36]	; (8015b18 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015af4:	b082      	sub	sp, #8
 8015af6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015afa:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015afe:	2100      	movs	r1, #0
 8015b00:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015b04:	9100      	str	r1, [sp, #0]
 8015b06:	6803      	ldr	r3, [r0, #0]
 8015b08:	aa02      	add	r2, sp, #8
 8015b0a:	e912 0006 	ldmdb	r2, {r1, r2}
 8015b0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015b10:	b002      	add	sp, #8
 8015b12:	4718      	bx	r3
 8015b14:	200132b0 	.word	0x200132b0
 8015b18:	200132b2 	.word	0x200132b2

08015b1c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8015b1c:	4b03      	ldr	r3, [pc, #12]	; (8015b2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8015b1e:	6818      	ldr	r0, [r3, #0]
 8015b20:	b110      	cbz	r0, 8015b28 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015b22:	6803      	ldr	r3, [r0, #0]
 8015b24:	69db      	ldr	r3, [r3, #28]
 8015b26:	4718      	bx	r3
 8015b28:	4770      	bx	lr
 8015b2a:	bf00      	nop
 8015b2c:	20013300 	.word	0x20013300

08015b30 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015b30:	4b03      	ldr	r3, [pc, #12]	; (8015b40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015b32:	6818      	ldr	r0, [r3, #0]
 8015b34:	b110      	cbz	r0, 8015b3c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015b36:	6803      	ldr	r3, [r0, #0]
 8015b38:	6a1b      	ldr	r3, [r3, #32]
 8015b3a:	4718      	bx	r3
 8015b3c:	4770      	bx	lr
 8015b3e:	bf00      	nop
 8015b40:	20013300 	.word	0x20013300

08015b44 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015b44:	2300      	movs	r3, #0
 8015b46:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8015b4a:	4770      	bx	lr

08015b4c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8015b4c:	4b03      	ldr	r3, [pc, #12]	; (8015b5c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8015b4e:	6818      	ldr	r0, [r3, #0]
 8015b50:	b110      	cbz	r0, 8015b58 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015b52:	6803      	ldr	r3, [r0, #0]
 8015b54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015b56:	4718      	bx	r3
 8015b58:	4770      	bx	lr
 8015b5a:	bf00      	nop
 8015b5c:	20013300 	.word	0x20013300

08015b60 <_ZN8touchgfx11ApplicationD1Ev>:
 8015b60:	4770      	bx	lr

08015b62 <_ZN8touchgfx11ApplicationD0Ev>:
 8015b62:	b510      	push	{r4, lr}
 8015b64:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8015b68:	4604      	mov	r4, r0
 8015b6a:	f014 f996 	bl	8029e9a <_ZdlPvj>
 8015b6e:	4620      	mov	r0, r4
 8015b70:	bd10      	pop	{r4, pc}

08015b72 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015b72:	b510      	push	{r4, lr}
 8015b74:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015b78:	888a      	ldrh	r2, [r1, #4]
 8015b7a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015b7e:	4422      	add	r2, r4
 8015b80:	b212      	sxth	r2, r2
 8015b82:	4293      	cmp	r3, r2
 8015b84:	da15      	bge.n	8015bb2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015b86:	8882      	ldrh	r2, [r0, #4]
 8015b88:	4413      	add	r3, r2
 8015b8a:	b21b      	sxth	r3, r3
 8015b8c:	429c      	cmp	r4, r3
 8015b8e:	da10      	bge.n	8015bb2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015b90:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015b94:	88c9      	ldrh	r1, [r1, #6]
 8015b96:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015b9a:	4419      	add	r1, r3
 8015b9c:	b209      	sxth	r1, r1
 8015b9e:	428a      	cmp	r2, r1
 8015ba0:	da07      	bge.n	8015bb2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015ba2:	88c0      	ldrh	r0, [r0, #6]
 8015ba4:	4410      	add	r0, r2
 8015ba6:	b200      	sxth	r0, r0
 8015ba8:	4283      	cmp	r3, r0
 8015baa:	bfac      	ite	ge
 8015bac:	2000      	movge	r0, #0
 8015bae:	2001      	movlt	r0, #1
 8015bb0:	bd10      	pop	{r4, pc}
 8015bb2:	2000      	movs	r0, #0
 8015bb4:	e7fc      	b.n	8015bb0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015bb6 <_ZN8touchgfx4Rect10restrictToEss>:
 8015bb6:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015bba:	2b00      	cmp	r3, #0
 8015bbc:	b510      	push	{r4, lr}
 8015bbe:	da04      	bge.n	8015bca <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015bc0:	8884      	ldrh	r4, [r0, #4]
 8015bc2:	4423      	add	r3, r4
 8015bc4:	8083      	strh	r3, [r0, #4]
 8015bc6:	2300      	movs	r3, #0
 8015bc8:	8003      	strh	r3, [r0, #0]
 8015bca:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015bce:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015bd2:	1b09      	subs	r1, r1, r4
 8015bd4:	428b      	cmp	r3, r1
 8015bd6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015bda:	bfc8      	it	gt
 8015bdc:	8081      	strhgt	r1, [r0, #4]
 8015bde:	2b00      	cmp	r3, #0
 8015be0:	da04      	bge.n	8015bec <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015be2:	88c1      	ldrh	r1, [r0, #6]
 8015be4:	440b      	add	r3, r1
 8015be6:	80c3      	strh	r3, [r0, #6]
 8015be8:	2300      	movs	r3, #0
 8015bea:	8043      	strh	r3, [r0, #2]
 8015bec:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015bf0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015bf4:	1a52      	subs	r2, r2, r1
 8015bf6:	4293      	cmp	r3, r2
 8015bf8:	bfc8      	it	gt
 8015bfa:	80c2      	strhgt	r2, [r0, #6]
 8015bfc:	bd10      	pop	{r4, pc}
	...

08015c00 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015c00:	b510      	push	{r4, lr}
 8015c02:	4b10      	ldr	r3, [pc, #64]	; (8015c44 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015c04:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015c08:	4b0f      	ldr	r3, [pc, #60]	; (8015c48 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8015c0a:	460c      	mov	r4, r1
 8015c0c:	4620      	mov	r0, r4
 8015c0e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015c12:	f7ff ffd0 	bl	8015bb6 <_ZN8touchgfx4Rect10restrictToEss>
 8015c16:	4b0d      	ldr	r3, [pc, #52]	; (8015c4c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015c18:	6818      	ldr	r0, [r3, #0]
 8015c1a:	b190      	cbz	r0, 8015c42 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015c1c:	6803      	ldr	r3, [r0, #0]
 8015c1e:	4621      	mov	r1, r4
 8015c20:	689b      	ldr	r3, [r3, #8]
 8015c22:	4798      	blx	r3
 8015c24:	4b0a      	ldr	r3, [pc, #40]	; (8015c50 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015c26:	6818      	ldr	r0, [r3, #0]
 8015c28:	b118      	cbz	r0, 8015c32 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015c2a:	6803      	ldr	r3, [r0, #0]
 8015c2c:	4621      	mov	r1, r4
 8015c2e:	689b      	ldr	r3, [r3, #8]
 8015c30:	4798      	blx	r3
 8015c32:	4b08      	ldr	r3, [pc, #32]	; (8015c54 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015c34:	6818      	ldr	r0, [r3, #0]
 8015c36:	6803      	ldr	r3, [r0, #0]
 8015c38:	4621      	mov	r1, r4
 8015c3a:	69db      	ldr	r3, [r3, #28]
 8015c3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015c40:	4718      	bx	r3
 8015c42:	bd10      	pop	{r4, pc}
 8015c44:	200132b2 	.word	0x200132b2
 8015c48:	200132b0 	.word	0x200132b0
 8015c4c:	20013300 	.word	0x20013300
 8015c50:	200132fc 	.word	0x200132fc
 8015c54:	200132bc 	.word	0x200132bc

08015c58 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015c58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c5a:	4606      	mov	r6, r0
 8015c5c:	4608      	mov	r0, r1
 8015c5e:	460f      	mov	r7, r1
 8015c60:	f7fa f957 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c64:	b9e8      	cbnz	r0, 8015ca2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015c66:	f9b7 5000 	ldrsh.w	r5, [r7]
 8015c6a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015c6e:	42a5      	cmp	r5, r4
 8015c70:	db17      	blt.n	8015ca2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015c72:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015c76:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8015c7a:	429a      	cmp	r2, r3
 8015c7c:	db11      	blt.n	8015ca2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015c7e:	88b9      	ldrh	r1, [r7, #4]
 8015c80:	440d      	add	r5, r1
 8015c82:	88b1      	ldrh	r1, [r6, #4]
 8015c84:	440c      	add	r4, r1
 8015c86:	b22d      	sxth	r5, r5
 8015c88:	b224      	sxth	r4, r4
 8015c8a:	42a5      	cmp	r5, r4
 8015c8c:	dc09      	bgt.n	8015ca2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015c8e:	88f8      	ldrh	r0, [r7, #6]
 8015c90:	4410      	add	r0, r2
 8015c92:	88f2      	ldrh	r2, [r6, #6]
 8015c94:	4413      	add	r3, r2
 8015c96:	b200      	sxth	r0, r0
 8015c98:	b21b      	sxth	r3, r3
 8015c9a:	4298      	cmp	r0, r3
 8015c9c:	bfcc      	ite	gt
 8015c9e:	2000      	movgt	r0, #0
 8015ca0:	2001      	movle	r0, #1
 8015ca2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015ca4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015ca4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015ca6:	4604      	mov	r4, r0
 8015ca8:	4608      	mov	r0, r1
 8015caa:	460d      	mov	r5, r1
 8015cac:	f7fa f931 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015cb0:	b978      	cbnz	r0, 8015cd2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015cb2:	4620      	mov	r0, r4
 8015cb4:	f7fa f92d 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015cb8:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015cbc:	b150      	cbz	r0, 8015cd4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015cbe:	8026      	strh	r6, [r4, #0]
 8015cc0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015cc4:	8063      	strh	r3, [r4, #2]
 8015cc6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015cca:	80a3      	strh	r3, [r4, #4]
 8015ccc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015cd0:	80e3      	strh	r3, [r4, #6]
 8015cd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015cd4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015cd8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015cdc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015ce0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015ce4:	88ed      	ldrh	r5, [r5, #6]
 8015ce6:	42b1      	cmp	r1, r6
 8015ce8:	460f      	mov	r7, r1
 8015cea:	bfa8      	it	ge
 8015cec:	4637      	movge	r7, r6
 8015cee:	4293      	cmp	r3, r2
 8015cf0:	4618      	mov	r0, r3
 8015cf2:	4466      	add	r6, ip
 8015cf4:	bfa8      	it	ge
 8015cf6:	4610      	movge	r0, r2
 8015cf8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015cfc:	8027      	strh	r7, [r4, #0]
 8015cfe:	442a      	add	r2, r5
 8015d00:	88e5      	ldrh	r5, [r4, #6]
 8015d02:	8060      	strh	r0, [r4, #2]
 8015d04:	4461      	add	r1, ip
 8015d06:	442b      	add	r3, r5
 8015d08:	b236      	sxth	r6, r6
 8015d0a:	b209      	sxth	r1, r1
 8015d0c:	b212      	sxth	r2, r2
 8015d0e:	b21b      	sxth	r3, r3
 8015d10:	428e      	cmp	r6, r1
 8015d12:	bfac      	ite	ge
 8015d14:	ebc7 0106 	rsbge	r1, r7, r6
 8015d18:	ebc7 0101 	rsblt	r1, r7, r1
 8015d1c:	429a      	cmp	r2, r3
 8015d1e:	bfac      	ite	ge
 8015d20:	ebc0 0202 	rsbge	r2, r0, r2
 8015d24:	ebc0 0203 	rsblt	r2, r0, r3
 8015d28:	80a1      	strh	r1, [r4, #4]
 8015d2a:	80e2      	strh	r2, [r4, #6]
 8015d2c:	e7d1      	b.n	8015cd2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015d30 <_ZN8touchgfx11Application11getInstanceEv>:
 8015d30:	4b01      	ldr	r3, [pc, #4]	; (8015d38 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015d32:	6818      	ldr	r0, [r3, #0]
 8015d34:	4770      	bx	lr
 8015d36:	bf00      	nop
 8015d38:	20013310 	.word	0x20013310

08015d3c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8015d3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015d3e:	4b10      	ldr	r3, [pc, #64]	; (8015d80 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015d40:	781b      	ldrb	r3, [r3, #0]
 8015d42:	4605      	mov	r5, r0
 8015d44:	b1d3      	cbz	r3, 8015d7c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015d46:	4b0f      	ldr	r3, [pc, #60]	; (8015d84 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015d48:	4f0f      	ldr	r7, [pc, #60]	; (8015d88 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8015d4a:	881c      	ldrh	r4, [r3, #0]
 8015d4c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015d50:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015d54:	42a3      	cmp	r3, r4
 8015d56:	d90e      	bls.n	8015d76 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015d58:	683b      	ldr	r3, [r7, #0]
 8015d5a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015d5e:	b10a      	cbz	r2, 8015d64 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015d60:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015d62:	b900      	cbnz	r0, 8015d66 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015d64:	6898      	ldr	r0, [r3, #8]
 8015d66:	6803      	ldr	r3, [r0, #0]
 8015d68:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8015d6c:	69db      	ldr	r3, [r3, #28]
 8015d6e:	3401      	adds	r4, #1
 8015d70:	4798      	blx	r3
 8015d72:	b2a4      	uxth	r4, r4
 8015d74:	e7ec      	b.n	8015d50 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015d76:	2300      	movs	r3, #0
 8015d78:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8015d7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015d7e:	bf00      	nop
 8015d80:	200132ba 	.word	0x200132ba
 8015d84:	200000a4 	.word	0x200000a4
 8015d88:	200132bc 	.word	0x200132bc

08015d8c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015d8c:	b510      	push	{r4, lr}
 8015d8e:	2300      	movs	r3, #0
 8015d90:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015d94:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015d98:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015d9c:	4604      	mov	r4, r0
 8015d9e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015da2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015da6:	429a      	cmp	r2, r3
 8015da8:	d90e      	bls.n	8015dc8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8015daa:	18e2      	adds	r2, r4, r3
 8015dac:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015db0:	b122      	cbz	r2, 8015dbc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015db2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015db6:	6803      	ldr	r3, [r0, #0]
 8015db8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015dba:	4798      	blx	r3
 8015dbc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015dc0:	3301      	adds	r3, #1
 8015dc2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015dc6:	e7ea      	b.n	8015d9e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015dc8:	bd10      	pop	{r4, pc}

08015dca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8015dca:	b530      	push	{r4, r5, lr}
 8015dcc:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015dd0:	2200      	movs	r2, #0
 8015dd2:	b293      	uxth	r3, r2
 8015dd4:	429d      	cmp	r5, r3
 8015dd6:	d90e      	bls.n	8015df6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015dd8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8015ddc:	428b      	cmp	r3, r1
 8015dde:	d10b      	bne.n	8015df8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015de0:	1884      	adds	r4, r0, r2
 8015de2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015de6:	b13b      	cbz	r3, 8015df8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015de8:	3b01      	subs	r3, #1
 8015dea:	b2db      	uxtb	r3, r3
 8015dec:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015df0:	b90b      	cbnz	r3, 8015df6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015df2:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015df6:	bd30      	pop	{r4, r5, pc}
 8015df8:	3201      	adds	r2, #1
 8015dfa:	e7ea      	b.n	8015dd2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8015dfc:	2300      	movs	r3, #0
 8015dfe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015e02:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015e06:	30a4      	adds	r0, #164	; 0xa4
 8015e08:	f802 3b01 	strb.w	r3, [r2], #1
 8015e0c:	4282      	cmp	r2, r0
 8015e0e:	d1fb      	bne.n	8015e08 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015e10:	4770      	bx	lr
	...

08015e14 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015e14:	b570      	push	{r4, r5, r6, lr}
 8015e16:	4c0b      	ldr	r4, [pc, #44]	; (8015e44 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015e18:	4605      	mov	r5, r0
 8015e1a:	6820      	ldr	r0, [r4, #0]
 8015e1c:	460e      	mov	r6, r1
 8015e1e:	b110      	cbz	r0, 8015e26 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015e20:	6803      	ldr	r3, [r0, #0]
 8015e22:	695b      	ldr	r3, [r3, #20]
 8015e24:	4798      	blx	r3
 8015e26:	1d28      	adds	r0, r5, #4
 8015e28:	f7ff ffe8 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015e2c:	6026      	str	r6, [r4, #0]
 8015e2e:	6833      	ldr	r3, [r6, #0]
 8015e30:	4630      	mov	r0, r6
 8015e32:	68db      	ldr	r3, [r3, #12]
 8015e34:	4798      	blx	r3
 8015e36:	682b      	ldr	r3, [r5, #0]
 8015e38:	4628      	mov	r0, r5
 8015e3a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015e3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015e40:	4718      	bx	r3
 8015e42:	bf00      	nop
 8015e44:	20013300 	.word	0x20013300

08015e48 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015e48:	2300      	movs	r3, #0
 8015e4a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8015e4e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015e52:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015e54:	461a      	mov	r2, r3
 8015e56:	461c      	mov	r4, r3
 8015e58:	461d      	mov	r5, r3
 8015e5a:	459c      	cmp	ip, r3
 8015e5c:	dd1a      	ble.n	8015e94 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8015e5e:	18c6      	adds	r6, r0, r3
 8015e60:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015e64:	b16e      	cbz	r6, 8015e82 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015e66:	429a      	cmp	r2, r3
 8015e68:	d008      	beq.n	8015e7c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8015e6a:	fa1f fe82 	uxth.w	lr, r2
 8015e6e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015e72:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015e76:	1887      	adds	r7, r0, r2
 8015e78:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015e7c:	3201      	adds	r2, #1
 8015e7e:	3301      	adds	r3, #1
 8015e80:	e7eb      	b.n	8015e5a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015e82:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015e86:	4299      	cmp	r1, r3
 8015e88:	bfa8      	it	ge
 8015e8a:	3501      	addge	r5, #1
 8015e8c:	429e      	cmp	r6, r3
 8015e8e:	bfc8      	it	gt
 8015e90:	3401      	addgt	r4, #1
 8015e92:	e7f4      	b.n	8015e7e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015e94:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015e98:	1b49      	subs	r1, r1, r5
 8015e9a:	1b1b      	subs	r3, r3, r4
 8015e9c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015ea0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015ea4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015ea8:	4293      	cmp	r3, r2
 8015eaa:	dd03      	ble.n	8015eb4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015eac:	3b01      	subs	r3, #1
 8015eae:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015eb2:	e7f7      	b.n	8015ea4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015eb8 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015eb8:	b570      	push	{r4, r5, r6, lr}
 8015eba:	4d16      	ldr	r5, [pc, #88]	; (8015f14 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015ebc:	4604      	mov	r4, r0
 8015ebe:	6828      	ldr	r0, [r5, #0]
 8015ec0:	b140      	cbz	r0, 8015ed4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015ec2:	7a03      	ldrb	r3, [r0, #8]
 8015ec4:	b933      	cbnz	r3, 8015ed4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015ec6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015eca:	6803      	ldr	r3, [r0, #0]
 8015ecc:	689b      	ldr	r3, [r3, #8]
 8015ece:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015ed2:	4718      	bx	r3
 8015ed4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015ed8:	4e0f      	ldr	r6, [pc, #60]	; (8015f18 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015eda:	b973      	cbnz	r3, 8015efa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015edc:	b168      	cbz	r0, 8015efa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015ede:	7a03      	ldrb	r3, [r0, #8]
 8015ee0:	b15b      	cbz	r3, 8015efa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015ee2:	6830      	ldr	r0, [r6, #0]
 8015ee4:	b110      	cbz	r0, 8015eec <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015ee6:	6803      	ldr	r3, [r0, #0]
 8015ee8:	691b      	ldr	r3, [r3, #16]
 8015eea:	4798      	blx	r3
 8015eec:	6828      	ldr	r0, [r5, #0]
 8015eee:	6803      	ldr	r3, [r0, #0]
 8015ef0:	68db      	ldr	r3, [r3, #12]
 8015ef2:	4798      	blx	r3
 8015ef4:	2301      	movs	r3, #1
 8015ef6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015efa:	3404      	adds	r4, #4
 8015efc:	4620      	mov	r0, r4
 8015efe:	f7ff ff45 	bl	8015d8c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015f02:	4620      	mov	r0, r4
 8015f04:	f7ff ffa0 	bl	8015e48 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015f08:	6830      	ldr	r0, [r6, #0]
 8015f0a:	b110      	cbz	r0, 8015f12 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015f0c:	6803      	ldr	r3, [r0, #0]
 8015f0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015f10:	e7dd      	b.n	8015ece <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015f12:	bd70      	pop	{r4, r5, r6, pc}
 8015f14:	20013304 	.word	0x20013304
 8015f18:	20013300 	.word	0x20013300

08015f1c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8015f1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015f1e:	2300      	movs	r3, #0
 8015f20:	4604      	mov	r4, r0
 8015f22:	460d      	mov	r5, r1
 8015f24:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015f28:	4618      	mov	r0, r3
 8015f2a:	b29a      	uxth	r2, r3
 8015f2c:	4291      	cmp	r1, r2
 8015f2e:	d911      	bls.n	8015f54 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015f30:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015f34:	18e6      	adds	r6, r4, r3
 8015f36:	42af      	cmp	r7, r5
 8015f38:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8015f3c:	d105      	bne.n	8015f4a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8015f3e:	2aff      	cmp	r2, #255	; 0xff
 8015f40:	d002      	beq.n	8015f48 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015f42:	3201      	adds	r2, #1
 8015f44:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015f48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015f4a:	2a00      	cmp	r2, #0
 8015f4c:	bf08      	it	eq
 8015f4e:	2001      	moveq	r0, #1
 8015f50:	3301      	adds	r3, #1
 8015f52:	e7ea      	b.n	8015f2a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015f54:	b120      	cbz	r0, 8015f60 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015f56:	2920      	cmp	r1, #32
 8015f58:	d102      	bne.n	8015f60 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015f5a:	4620      	mov	r0, r4
 8015f5c:	f7ff ff74 	bl	8015e48 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015f60:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015f64:	2b1f      	cmp	r3, #31
 8015f66:	d8ef      	bhi.n	8015f48 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015f68:	18e2      	adds	r2, r4, r3
 8015f6a:	2101      	movs	r1, #1
 8015f6c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015f70:	185a      	adds	r2, r3, r1
 8015f72:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015f76:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8015f7a:	e7e5      	b.n	8015f48 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08015f7c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8015f7c:	4603      	mov	r3, r0
 8015f7e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015f82:	2200      	movs	r2, #0
 8015f84:	801a      	strh	r2, [r3, #0]
 8015f86:	805a      	strh	r2, [r3, #2]
 8015f88:	809a      	strh	r2, [r3, #4]
 8015f8a:	80da      	strh	r2, [r3, #6]
 8015f8c:	3308      	adds	r3, #8
 8015f8e:	428b      	cmp	r3, r1
 8015f90:	d1f8      	bne.n	8015f84 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015f92:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015f96:	4770      	bx	lr

08015f98 <_ZN8touchgfx11ApplicationC1Ev>:
 8015f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015f9a:	4606      	mov	r6, r0
 8015f9c:	4b1c      	ldr	r3, [pc, #112]	; (8016010 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015f9e:	f846 3b04 	str.w	r3, [r6], #4
 8015fa2:	4604      	mov	r4, r0
 8015fa4:	2500      	movs	r5, #0
 8015fa6:	22a8      	movs	r2, #168	; 0xa8
 8015fa8:	2100      	movs	r1, #0
 8015faa:	4630      	mov	r0, r6
 8015fac:	f014 ff8d 	bl	802aeca <memset>
 8015fb0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015fb4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015fb8:	f7ff ffe0 	bl	8015f7c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015fbc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015fc0:	f7ff ffdc 	bl	8015f7c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015fc4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015fc8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015fcc:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015fd0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015fd4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015fd8:	490e      	ldr	r1, [pc, #56]	; (8016014 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015fda:	480f      	ldr	r0, [pc, #60]	; (8016018 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015fdc:	4f0f      	ldr	r7, [pc, #60]	; (801601c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015fde:	f010 fe27 	bl	8026c30 <CRC_Lock>
 8015fe2:	4b0f      	ldr	r3, [pc, #60]	; (8016020 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015fe4:	b158      	cbz	r0, 8015ffe <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015fe6:	801d      	strh	r5, [r3, #0]
 8015fe8:	4a0e      	ldr	r2, [pc, #56]	; (8016024 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015fea:	2300      	movs	r3, #0
 8015fec:	6013      	str	r3, [r2, #0]
 8015fee:	4a0e      	ldr	r2, [pc, #56]	; (8016028 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015ff0:	603b      	str	r3, [r7, #0]
 8015ff2:	4630      	mov	r0, r6
 8015ff4:	6013      	str	r3, [r2, #0]
 8015ff6:	f7ff ff01 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015ffa:	4620      	mov	r0, r4
 8015ffc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015ffe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016002:	2002      	movs	r0, #2
 8016004:	801a      	strh	r2, [r3, #0]
 8016006:	6038      	str	r0, [r7, #0]
 8016008:	f001 fb4a 	bl	80176a0 <_ZN8touchgfx6Screen4drawEv>
 801600c:	e7ec      	b.n	8015fe8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801600e:	bf00      	nop
 8016010:	0802eee0 	.word	0x0802eee0
 8016014:	b5e8b5cd 	.word	0xb5e8b5cd
 8016018:	f407a5c2 	.word	0xf407a5c2
 801601c:	20013300 	.word	0x20013300
 8016020:	200000a4 	.word	0x200000a4
 8016024:	20013310 	.word	0x20013310
 8016028:	20013304 	.word	0x20013304

0801602c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801602c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016030:	3b01      	subs	r3, #1
 8016032:	b29b      	uxth	r3, r3
 8016034:	428b      	cmp	r3, r1
 8016036:	b510      	push	{r4, lr}
 8016038:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801603c:	d908      	bls.n	8016050 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801603e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016042:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016046:	681a      	ldr	r2, [r3, #0]
 8016048:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801604c:	685a      	ldr	r2, [r3, #4]
 801604e:	6062      	str	r2, [r4, #4]
 8016050:	bd10      	pop	{r4, pc}
	...

08016054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016058:	4b8f      	ldr	r3, [pc, #572]	; (8016298 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801605a:	b08f      	sub	sp, #60	; 0x3c
 801605c:	ac0a      	add	r4, sp, #40	; 0x28
 801605e:	e884 0006 	stmia.w	r4, {r1, r2}
 8016062:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016066:	4b8d      	ldr	r3, [pc, #564]	; (801629c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016068:	4683      	mov	fp, r0
 801606a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801606e:	4620      	mov	r0, r4
 8016070:	f7ff fda1 	bl	8015bb6 <_ZN8touchgfx4Rect10restrictToEss>
 8016074:	4620      	mov	r0, r4
 8016076:	f7f9 ff4c 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801607a:	2800      	cmp	r0, #0
 801607c:	d16a      	bne.n	8016154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801607e:	9403      	str	r4, [sp, #12]
 8016080:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016084:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016088:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801608c:	35a4      	adds	r5, #164	; 0xa4
 801608e:	9301      	str	r3, [sp, #4]
 8016090:	b15c      	cbz	r4, 80160aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8016092:	4629      	mov	r1, r5
 8016094:	9803      	ldr	r0, [sp, #12]
 8016096:	f7ff fddf 	bl	8015c58 <_ZNK8touchgfx4Rect8includesERKS0_>
 801609a:	3c01      	subs	r4, #1
 801609c:	b118      	cbz	r0, 80160a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801609e:	b2a1      	uxth	r1, r4
 80160a0:	9801      	ldr	r0, [sp, #4]
 80160a2:	f7ff ffc3 	bl	801602c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80160a6:	3d08      	subs	r5, #8
 80160a8:	e7f2      	b.n	8016090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80160aa:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80160ae:	f8cd a010 	str.w	sl, [sp, #16]
 80160b2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80160b6:	9302      	str	r3, [sp, #8]
 80160b8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80160bc:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80160c0:	9306      	str	r3, [sp, #24]
 80160c2:	445c      	add	r4, fp
 80160c4:	2500      	movs	r5, #0
 80160c6:	4626      	mov	r6, r4
 80160c8:	f8cd a014 	str.w	sl, [sp, #20]
 80160cc:	462f      	mov	r7, r5
 80160ce:	9b05      	ldr	r3, [sp, #20]
 80160d0:	2b00      	cmp	r3, #0
 80160d2:	d073      	beq.n	80161bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80160d4:	9903      	ldr	r1, [sp, #12]
 80160d6:	4630      	mov	r0, r6
 80160d8:	f7ff fd4b 	bl	8015b72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80160dc:	b350      	cbz	r0, 8016134 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80160de:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80160e2:	f9b6 c000 	ldrsh.w	ip, [r6]
 80160e6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80160ea:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80160ee:	45e6      	cmp	lr, ip
 80160f0:	db33      	blt.n	801615a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80160f2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80160f6:	88b3      	ldrh	r3, [r6, #4]
 80160f8:	4472      	add	r2, lr
 80160fa:	4463      	add	r3, ip
 80160fc:	b212      	sxth	r2, r2
 80160fe:	b21b      	sxth	r3, r3
 8016100:	429a      	cmp	r2, r3
 8016102:	dc2a      	bgt.n	801615a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016104:	88f3      	ldrh	r3, [r6, #6]
 8016106:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801610a:	fa1f f289 	uxth.w	r2, r9
 801610e:	4413      	add	r3, r2
 8016110:	b29b      	uxth	r3, r3
 8016112:	45c8      	cmp	r8, r9
 8016114:	fa1f fc88 	uxth.w	ip, r8
 8016118:	fa0f fe83 	sxth.w	lr, r3
 801611c:	db0f      	blt.n	801613e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801611e:	eba3 030c 	sub.w	r3, r3, ip
 8016122:	1ac9      	subs	r1, r1, r3
 8016124:	b209      	sxth	r1, r1
 8016126:	2900      	cmp	r1, #0
 8016128:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801612c:	dd12      	ble.n	8016154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801612e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8016132:	4605      	mov	r5, r0
 8016134:	9b05      	ldr	r3, [sp, #20]
 8016136:	3b01      	subs	r3, #1
 8016138:	9305      	str	r3, [sp, #20]
 801613a:	3e08      	subs	r6, #8
 801613c:	e7c7      	b.n	80160ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801613e:	4461      	add	r1, ip
 8016140:	b209      	sxth	r1, r1
 8016142:	4571      	cmp	r1, lr
 8016144:	dc38      	bgt.n	80161b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016146:	eba2 020c 	sub.w	r2, r2, ip
 801614a:	b212      	sxth	r2, r2
 801614c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016150:	2a00      	cmp	r2, #0
 8016152:	dcee      	bgt.n	8016132 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016154:	b00f      	add	sp, #60	; 0x3c
 8016156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801615a:	45c8      	cmp	r8, r9
 801615c:	db2c      	blt.n	80161b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801615e:	88f3      	ldrh	r3, [r6, #6]
 8016160:	4499      	add	r9, r3
 8016162:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8016166:	4498      	add	r8, r3
 8016168:	fa0f f989 	sxth.w	r9, r9
 801616c:	fa0f f888 	sxth.w	r8, r8
 8016170:	45c1      	cmp	r9, r8
 8016172:	db21      	blt.n	80161b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016174:	88b3      	ldrh	r3, [r6, #4]
 8016176:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801617a:	fa1f f28c 	uxth.w	r2, ip
 801617e:	4413      	add	r3, r2
 8016180:	b29b      	uxth	r3, r3
 8016182:	45e6      	cmp	lr, ip
 8016184:	fa1f f88e 	uxth.w	r8, lr
 8016188:	fa0f f983 	sxth.w	r9, r3
 801618c:	db0a      	blt.n	80161a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801618e:	eba3 0308 	sub.w	r3, r3, r8
 8016192:	1ac9      	subs	r1, r1, r3
 8016194:	b209      	sxth	r1, r1
 8016196:	2900      	cmp	r1, #0
 8016198:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801619c:	ddda      	ble.n	8016154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801619e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80161a2:	e7c6      	b.n	8016132 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80161a4:	4441      	add	r1, r8
 80161a6:	b209      	sxth	r1, r1
 80161a8:	4549      	cmp	r1, r9
 80161aa:	dc05      	bgt.n	80161b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80161ac:	eba2 0208 	sub.w	r2, r2, r8
 80161b0:	b212      	sxth	r2, r2
 80161b2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80161b6:	e7cb      	b.n	8016150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80161b8:	4607      	mov	r7, r0
 80161ba:	e7bb      	b.n	8016134 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80161bc:	2d00      	cmp	r5, #0
 80161be:	d181      	bne.n	80160c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80161c0:	2f00      	cmp	r7, #0
 80161c2:	f000 81dd 	beq.w	8016580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80161c6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80161ca:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80161ce:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80161d2:	b2b3      	uxth	r3, r6
 80161d4:	9305      	str	r3, [sp, #20]
 80161d6:	9a05      	ldr	r2, [sp, #20]
 80161d8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80161dc:	4413      	add	r3, r2
 80161de:	b2ba      	uxth	r2, r7
 80161e0:	4492      	add	sl, r2
 80161e2:	b29b      	uxth	r3, r3
 80161e4:	fa1f fa8a 	uxth.w	sl, sl
 80161e8:	fa0f f883 	sxth.w	r8, r3
 80161ec:	fa0f f98a 	sxth.w	r9, sl
 80161f0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80161f4:	9b04      	ldr	r3, [sp, #16]
 80161f6:	2b00      	cmp	r3, #0
 80161f8:	d052      	beq.n	80162a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80161fa:	9903      	ldr	r1, [sp, #12]
 80161fc:	4620      	mov	r0, r4
 80161fe:	f7ff fcb8 	bl	8015b72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016202:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016206:	b1c0      	cbz	r0, 801623a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016208:	f9b4 e000 	ldrsh.w	lr, [r4]
 801620c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016210:	4576      	cmp	r6, lr
 8016212:	dc22      	bgt.n	801625a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016214:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016218:	44f4      	add	ip, lr
 801621a:	fa0f fc8c 	sxth.w	ip, ip
 801621e:	45e0      	cmp	r8, ip
 8016220:	db1b      	blt.n	801625a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016222:	428f      	cmp	r7, r1
 8016224:	fa1f fc81 	uxth.w	ip, r1
 8016228:	88e1      	ldrh	r1, [r4, #6]
 801622a:	dc0d      	bgt.n	8016248 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801622c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016230:	eba1 010c 	sub.w	r1, r1, ip
 8016234:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016238:	80e1      	strh	r1, [r4, #6]
 801623a:	4628      	mov	r0, r5
 801623c:	9904      	ldr	r1, [sp, #16]
 801623e:	3901      	subs	r1, #1
 8016240:	9104      	str	r1, [sp, #16]
 8016242:	3c08      	subs	r4, #8
 8016244:	4605      	mov	r5, r0
 8016246:	e7d3      	b.n	80161f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016248:	4461      	add	r1, ip
 801624a:	b209      	sxth	r1, r1
 801624c:	4549      	cmp	r1, r9
 801624e:	dcf5      	bgt.n	801623c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016250:	eba2 0c0c 	sub.w	ip, r2, ip
 8016254:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016258:	e7ef      	b.n	801623a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801625a:	428f      	cmp	r7, r1
 801625c:	dcee      	bgt.n	801623c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801625e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016262:	4461      	add	r1, ip
 8016264:	b209      	sxth	r1, r1
 8016266:	4589      	cmp	r9, r1
 8016268:	dbe8      	blt.n	801623c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801626a:	4576      	cmp	r6, lr
 801626c:	fa1f fc8e 	uxth.w	ip, lr
 8016270:	88a1      	ldrh	r1, [r4, #4]
 8016272:	dc07      	bgt.n	8016284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8016274:	eba3 0c0c 	sub.w	ip, r3, ip
 8016278:	eba1 010c 	sub.w	r1, r1, ip
 801627c:	f8a4 8000 	strh.w	r8, [r4]
 8016280:	80a1      	strh	r1, [r4, #4]
 8016282:	e7da      	b.n	801623a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016284:	4461      	add	r1, ip
 8016286:	b209      	sxth	r1, r1
 8016288:	4588      	cmp	r8, r1
 801628a:	dbd7      	blt.n	801623c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801628c:	9905      	ldr	r1, [sp, #20]
 801628e:	eba1 0c0c 	sub.w	ip, r1, ip
 8016292:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016296:	e7d0      	b.n	801623a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016298:	200132b2 	.word	0x200132b2
 801629c:	200132b0 	.word	0x200132b0
 80162a0:	2d00      	cmp	r5, #0
 80162a2:	f000 816d 	beq.w	8016580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80162a6:	9b06      	ldr	r3, [sp, #24]
 80162a8:	445b      	add	r3, fp
 80162aa:	461c      	mov	r4, r3
 80162ac:	9b02      	ldr	r3, [sp, #8]
 80162ae:	3301      	adds	r3, #1
 80162b0:	f000 8166 	beq.w	8016580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80162b4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80162b8:	4629      	mov	r1, r5
 80162ba:	9803      	ldr	r0, [sp, #12]
 80162bc:	f7ff fccc 	bl	8015c58 <_ZNK8touchgfx4Rect8includesERKS0_>
 80162c0:	b120      	cbz	r0, 80162cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80162c2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80162c6:	9801      	ldr	r0, [sp, #4]
 80162c8:	f7ff feb0 	bl	801602c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80162cc:	9903      	ldr	r1, [sp, #12]
 80162ce:	4628      	mov	r0, r5
 80162d0:	f7ff fc4f 	bl	8015b72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80162d4:	2800      	cmp	r0, #0
 80162d6:	f000 809c 	beq.w	8016412 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80162da:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80162de:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80162e2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80162e6:	9309      	str	r3, [sp, #36]	; 0x24
 80162e8:	fa1f f189 	uxth.w	r1, r9
 80162ec:	eb01 0c03 	add.w	ip, r1, r3
 80162f0:	fa1f fa8c 	uxth.w	sl, ip
 80162f4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80162f8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80162fc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016300:	b283      	uxth	r3, r0
 8016302:	eb03 050c 	add.w	r5, r3, ip
 8016306:	b2ad      	uxth	r5, r5
 8016308:	9505      	str	r5, [sp, #20]
 801630a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801630e:	9504      	str	r5, [sp, #16]
 8016310:	4548      	cmp	r0, r9
 8016312:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016316:	f340 8099 	ble.w	801644c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801631a:	1a5b      	subs	r3, r3, r1
 801631c:	b29b      	uxth	r3, r3
 801631e:	4596      	cmp	lr, r2
 8016320:	fa0f f08a 	sxth.w	r0, sl
 8016324:	b21e      	sxth	r6, r3
 8016326:	dd2e      	ble.n	8016386 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016328:	9f02      	ldr	r7, [sp, #8]
 801632a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801632e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016332:	9f04      	ldr	r7, [sp, #16]
 8016334:	1a3f      	subs	r7, r7, r0
 8016336:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801633a:	fa1f fe8e 	uxth.w	lr, lr
 801633e:	b292      	uxth	r2, r2
 8016340:	ebae 0102 	sub.w	r1, lr, r2
 8016344:	44a6      	add	lr, r4
 8016346:	4402      	add	r2, r0
 8016348:	b289      	uxth	r1, r1
 801634a:	fa0f fe8e 	sxth.w	lr, lr
 801634e:	b212      	sxth	r2, r2
 8016350:	b20d      	sxth	r5, r1
 8016352:	ebae 0202 	sub.w	r2, lr, r2
 8016356:	436f      	muls	r7, r5
 8016358:	4372      	muls	r2, r6
 801635a:	4297      	cmp	r7, r2
 801635c:	db09      	blt.n	8016372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801635e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8016362:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8016366:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801636a:	449c      	add	ip, r3
 801636c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016370:	e686      	b.n	8016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016372:	4421      	add	r1, r4
 8016374:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016378:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801637c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016380:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016384:	e67c      	b.n	8016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016386:	9f04      	ldr	r7, [sp, #16]
 8016388:	42b8      	cmp	r0, r7
 801638a:	da27      	bge.n	80163dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801638c:	9902      	ldr	r1, [sp, #8]
 801638e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016392:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016396:	eb05 010e 	add.w	r1, r5, lr
 801639a:	fa1f f881 	uxth.w	r8, r1
 801639e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80163a2:	4411      	add	r1, r2
 80163a4:	eba1 0108 	sub.w	r1, r1, r8
 80163a8:	b289      	uxth	r1, r1
 80163aa:	fa0f f988 	sxth.w	r9, r8
 80163ae:	eba2 020e 	sub.w	r2, r2, lr
 80163b2:	fa0f f881 	sxth.w	r8, r1
 80163b6:	1a3f      	subs	r7, r7, r0
 80163b8:	4372      	muls	r2, r6
 80163ba:	fb08 f707 	mul.w	r7, r8, r7
 80163be:	42ba      	cmp	r2, r7
 80163c0:	dc06      	bgt.n	80163d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80163c2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80163c6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80163ca:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80163ce:	e7ca      	b.n	8016366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80163d0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80163d4:	4429      	add	r1, r5
 80163d6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80163da:	e651      	b.n	8016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80163dc:	9805      	ldr	r0, [sp, #20]
 80163de:	ebaa 0000 	sub.w	r0, sl, r0
 80163e2:	b280      	uxth	r0, r0
 80163e4:	2d06      	cmp	r5, #6
 80163e6:	fa0f fe80 	sxth.w	lr, r0
 80163ea:	d817      	bhi.n	801641c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80163ec:	9b04      	ldr	r3, [sp, #16]
 80163ee:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80163f2:	1c6b      	adds	r3, r5, #1
 80163f4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80163f8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80163fc:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016400:	9b01      	ldr	r3, [sp, #4]
 8016402:	9801      	ldr	r0, [sp, #4]
 8016404:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016408:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801640c:	805a      	strh	r2, [r3, #2]
 801640e:	809e      	strh	r6, [r3, #4]
 8016410:	80d9      	strh	r1, [r3, #6]
 8016412:	9b02      	ldr	r3, [sp, #8]
 8016414:	3b01      	subs	r3, #1
 8016416:	9302      	str	r3, [sp, #8]
 8016418:	3c08      	subs	r4, #8
 801641a:	e747      	b.n	80162ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801641c:	9a02      	ldr	r2, [sp, #8]
 801641e:	45b6      	cmp	lr, r6
 8016420:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016424:	db0d      	blt.n	8016442 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016426:	449c      	add	ip, r3
 8016428:	fa1f fc8c 	uxth.w	ip, ip
 801642c:	445a      	add	r2, fp
 801642e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016432:	448c      	add	ip, r1
 8016434:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016438:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801643c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016440:	e61e      	b.n	8016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016442:	445a      	add	r2, fp
 8016444:	4484      	add	ip, r0
 8016446:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801644a:	e78f      	b.n	801636c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801644c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016450:	fa1f f18e 	uxth.w	r1, lr
 8016454:	eb01 0806 	add.w	r8, r1, r6
 8016458:	b293      	uxth	r3, r2
 801645a:	fa1f f888 	uxth.w	r8, r8
 801645e:	9306      	str	r3, [sp, #24]
 8016460:	fa0f f388 	sxth.w	r3, r8
 8016464:	9307      	str	r3, [sp, #28]
 8016466:	9f06      	ldr	r7, [sp, #24]
 8016468:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801646c:	443b      	add	r3, r7
 801646e:	b29b      	uxth	r3, r3
 8016470:	4596      	cmp	lr, r2
 8016472:	9308      	str	r3, [sp, #32]
 8016474:	da24      	bge.n	80164c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016476:	9905      	ldr	r1, [sp, #20]
 8016478:	eba3 0308 	sub.w	r3, r3, r8
 801647c:	ebaa 0401 	sub.w	r4, sl, r1
 8016480:	b2a4      	uxth	r4, r4
 8016482:	b29b      	uxth	r3, r3
 8016484:	b225      	sxth	r5, r4
 8016486:	b219      	sxth	r1, r3
 8016488:	eba2 020e 	sub.w	r2, r2, lr
 801648c:	eba9 0000 	sub.w	r0, r9, r0
 8016490:	436a      	muls	r2, r5
 8016492:	4348      	muls	r0, r1
 8016494:	4282      	cmp	r2, r0
 8016496:	9a02      	ldr	r2, [sp, #8]
 8016498:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801649c:	445a      	add	r2, fp
 801649e:	dc06      	bgt.n	80164ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80164a0:	9b07      	ldr	r3, [sp, #28]
 80164a2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80164a6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80164aa:	44a4      	add	ip, r4
 80164ac:	e75e      	b.n	801636c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80164ae:	9904      	ldr	r1, [sp, #16]
 80164b0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80164b4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80164b8:	4433      	add	r3, r6
 80164ba:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80164be:	e5df      	b.n	8016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80164c0:	9f06      	ldr	r7, [sp, #24]
 80164c2:	9b04      	ldr	r3, [sp, #16]
 80164c4:	1bc9      	subs	r1, r1, r7
 80164c6:	fa0f f78a 	sxth.w	r7, sl
 80164ca:	b289      	uxth	r1, r1
 80164cc:	429f      	cmp	r7, r3
 80164ce:	fa0f fe81 	sxth.w	lr, r1
 80164d2:	dd23      	ble.n	801651c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80164d4:	9a05      	ldr	r2, [sp, #20]
 80164d6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80164da:	9d07      	ldr	r5, [sp, #28]
 80164dc:	ebaa 0202 	sub.w	r2, sl, r2
 80164e0:	b292      	uxth	r2, r2
 80164e2:	eba5 0a03 	sub.w	sl, r5, r3
 80164e6:	b214      	sxth	r4, r2
 80164e8:	eba9 0000 	sub.w	r0, r9, r0
 80164ec:	9b02      	ldr	r3, [sp, #8]
 80164ee:	fb0e f000 	mul.w	r0, lr, r0
 80164f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80164f6:	00db      	lsls	r3, r3, #3
 80164f8:	4550      	cmp	r0, sl
 80164fa:	445b      	add	r3, fp
 80164fc:	db03      	blt.n	8016506 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80164fe:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8016502:	4494      	add	ip, r2
 8016504:	e732      	b.n	801636c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016506:	9a04      	ldr	r2, [sp, #16]
 8016508:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801650c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016510:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016514:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016518:	4431      	add	r1, r6
 801651a:	e75c      	b.n	80163d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801651c:	9b08      	ldr	r3, [sp, #32]
 801651e:	eba3 0308 	sub.w	r3, r3, r8
 8016522:	b29b      	uxth	r3, r3
 8016524:	2d06      	cmp	r5, #6
 8016526:	b218      	sxth	r0, r3
 8016528:	d813      	bhi.n	8016552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801652a:	9b07      	ldr	r3, [sp, #28]
 801652c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016530:	1c6b      	adds	r3, r5, #1
 8016532:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016536:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801653a:	9b01      	ldr	r3, [sp, #4]
 801653c:	9901      	ldr	r1, [sp, #4]
 801653e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016542:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016546:	805a      	strh	r2, [r3, #2]
 8016548:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801654a:	809a      	strh	r2, [r3, #4]
 801654c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016550:	e75f      	b.n	8016412 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016552:	9c02      	ldr	r4, [sp, #8]
 8016554:	4570      	cmp	r0, lr
 8016556:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801655a:	db0d      	blt.n	8016578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801655c:	4431      	add	r1, r6
 801655e:	9b06      	ldr	r3, [sp, #24]
 8016560:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016564:	b289      	uxth	r1, r1
 8016566:	445c      	add	r4, fp
 8016568:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801656c:	4419      	add	r1, r3
 801656e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8016572:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8016576:	e583      	b.n	8016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016578:	445c      	add	r4, fp
 801657a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801657e:	e79b      	b.n	80164b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8016580:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016584:	1e65      	subs	r5, r4, #1
 8016586:	b2ad      	uxth	r5, r5
 8016588:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801658c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8016590:	42b5      	cmp	r5, r6
 8016592:	d044      	beq.n	801661e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8016594:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016598:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801659c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80165a0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80165a4:	4282      	cmp	r2, r0
 80165a6:	d11f      	bne.n	80165e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80165a8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80165ac:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80165b0:	459c      	cmp	ip, r3
 80165b2:	d119      	bne.n	80165e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80165b4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80165b8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80165bc:	19d8      	adds	r0, r3, r7
 80165be:	b200      	sxth	r0, r0
 80165c0:	4288      	cmp	r0, r1
 80165c2:	d109      	bne.n	80165d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80165c4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80165c8:	4413      	add	r3, r2
 80165ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80165ce:	4629      	mov	r1, r5
 80165d0:	9801      	ldr	r0, [sp, #4]
 80165d2:	f7ff fd2b 	bl	801602c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80165d6:	e003      	b.n	80165e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80165d8:	4411      	add	r1, r2
 80165da:	b209      	sxth	r1, r1
 80165dc:	42b9      	cmp	r1, r7
 80165de:	d0f3      	beq.n	80165c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80165e0:	3d01      	subs	r5, #1
 80165e2:	b2ad      	uxth	r5, r5
 80165e4:	3c08      	subs	r4, #8
 80165e6:	e7d3      	b.n	8016590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80165e8:	42b9      	cmp	r1, r7
 80165ea:	d1f9      	bne.n	80165e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80165ec:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80165f0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80165f4:	4299      	cmp	r1, r3
 80165f6:	d1f3      	bne.n	80165e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80165f8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80165fc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016600:	181f      	adds	r7, r3, r0
 8016602:	b23f      	sxth	r7, r7
 8016604:	42ba      	cmp	r2, r7
 8016606:	d105      	bne.n	8016614 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016608:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801660c:	440b      	add	r3, r1
 801660e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016612:	e7dc      	b.n	80165ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016614:	440a      	add	r2, r1
 8016616:	b212      	sxth	r2, r2
 8016618:	4290      	cmp	r0, r2
 801661a:	d1e1      	bne.n	80165e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801661c:	e7f6      	b.n	801660c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801661e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016622:	2e07      	cmp	r6, #7
 8016624:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016628:	d812      	bhi.n	8016650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801662a:	1c75      	adds	r5, r6, #1
 801662c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016630:	9d01      	ldr	r5, [sp, #4]
 8016632:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016636:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801663a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801663e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016642:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016646:	442c      	add	r4, r5
 8016648:	8061      	strh	r1, [r4, #2]
 801664a:	80a2      	strh	r2, [r4, #4]
 801664c:	80e3      	strh	r3, [r4, #6]
 801664e:	e581      	b.n	8016154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016650:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016654:	3e01      	subs	r6, #1
 8016656:	445c      	add	r4, fp
 8016658:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801665c:	f04f 37ff 	mov.w	r7, #4294967295
 8016660:	2500      	movs	r5, #0
 8016662:	9305      	str	r3, [sp, #20]
 8016664:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016668:	9302      	str	r3, [sp, #8]
 801666a:	1e72      	subs	r2, r6, #1
 801666c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016670:	9304      	str	r3, [sp, #16]
 8016672:	4691      	mov	r9, r2
 8016674:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8016678:	f1b9 3fff 	cmp.w	r9, #4294967295
 801667c:	bf14      	ite	ne
 801667e:	9905      	ldrne	r1, [sp, #20]
 8016680:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8016684:	6818      	ldr	r0, [r3, #0]
 8016686:	9207      	str	r2, [sp, #28]
 8016688:	bf18      	it	ne
 801668a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801668e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016692:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016696:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801669a:	9306      	str	r3, [sp, #24]
 801669c:	fb18 f801 	smulbb	r8, r8, r1
 80166a0:	6859      	ldr	r1, [r3, #4]
 80166a2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80166a6:	4671      	mov	r1, lr
 80166a8:	a80c      	add	r0, sp, #48	; 0x30
 80166aa:	f7ff fafb 	bl	8015ca4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80166ae:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80166b2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80166b6:	9b04      	ldr	r3, [sp, #16]
 80166b8:	9a02      	ldr	r2, [sp, #8]
 80166ba:	fb10 f001 	smulbb	r0, r0, r1
 80166be:	fb02 8803 	mla	r8, r2, r3, r8
 80166c2:	eba0 0108 	sub.w	r1, r0, r8
 80166c6:	f04f 0c08 	mov.w	ip, #8
 80166ca:	fb90 f0fc 	sdiv	r0, r0, ip
 80166ce:	4288      	cmp	r0, r1
 80166d0:	dc20      	bgt.n	8016714 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80166d2:	4551      	cmp	r1, sl
 80166d4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80166d8:	da03      	bge.n	80166e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80166da:	b1d9      	cbz	r1, 8016714 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80166dc:	468a      	mov	sl, r1
 80166de:	464f      	mov	r7, r9
 80166e0:	4635      	mov	r5, r6
 80166e2:	f109 39ff 	add.w	r9, r9, #4294967295
 80166e6:	f119 0f02 	cmn.w	r9, #2
 80166ea:	d1c5      	bne.n	8016678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80166ec:	4616      	mov	r6, r2
 80166ee:	3201      	adds	r2, #1
 80166f0:	f1a4 0408 	sub.w	r4, r4, #8
 80166f4:	d1b6      	bne.n	8016664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80166f6:	9b01      	ldr	r3, [sp, #4]
 80166f8:	b2ac      	uxth	r4, r5
 80166fa:	00ed      	lsls	r5, r5, #3
 80166fc:	1958      	adds	r0, r3, r5
 80166fe:	1c7b      	adds	r3, r7, #1
 8016700:	d10b      	bne.n	801671a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8016702:	4601      	mov	r1, r0
 8016704:	9803      	ldr	r0, [sp, #12]
 8016706:	f7ff facd 	bl	8015ca4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801670a:	4621      	mov	r1, r4
 801670c:	9801      	ldr	r0, [sp, #4]
 801670e:	f7ff fc8d 	bl	801602c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016712:	e4b5      	b.n	8016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016714:	464f      	mov	r7, r9
 8016716:	4635      	mov	r5, r6
 8016718:	e7ed      	b.n	80166f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801671a:	9b01      	ldr	r3, [sp, #4]
 801671c:	00ff      	lsls	r7, r7, #3
 801671e:	19d9      	adds	r1, r3, r7
 8016720:	f7ff fac0 	bl	8015ca4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016724:	9b03      	ldr	r3, [sp, #12]
 8016726:	cb03      	ldmia	r3!, {r0, r1}
 8016728:	445f      	add	r7, fp
 801672a:	445d      	add	r5, fp
 801672c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016730:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8016734:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016738:	9b03      	ldr	r3, [sp, #12]
 801673a:	6869      	ldr	r1, [r5, #4]
 801673c:	c303      	stmia	r3!, {r0, r1}
 801673e:	e7e4      	b.n	801670a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016740 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016744:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016748:	b09b      	sub	sp, #108	; 0x6c
 801674a:	4604      	mov	r4, r0
 801674c:	4630      	mov	r0, r6
 801674e:	f7f9 fbe0 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016752:	4605      	mov	r5, r0
 8016754:	b948      	cbnz	r0, 801676a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8016756:	6823      	ldr	r3, [r4, #0]
 8016758:	e896 0006 	ldmia.w	r6, {r1, r2}
 801675c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801675e:	4620      	mov	r0, r4
 8016760:	4798      	blx	r3
 8016762:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8016766:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801676a:	4bc6      	ldr	r3, [pc, #792]	; (8016a84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801676c:	681b      	ldr	r3, [r3, #0]
 801676e:	2b00      	cmp	r3, #0
 8016770:	d03f      	beq.n	80167f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016772:	4dc5      	ldr	r5, [pc, #788]	; (8016a88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8016774:	4628      	mov	r0, r5
 8016776:	f7f9 fbcc 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801677a:	4606      	mov	r6, r0
 801677c:	2800      	cmp	r0, #0
 801677e:	d138      	bne.n	80167f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016780:	4628      	mov	r0, r5
 8016782:	f7ff f907 	bl	8015994 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016786:	6823      	ldr	r3, [r4, #0]
 8016788:	6829      	ldr	r1, [r5, #0]
 801678a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801678c:	686a      	ldr	r2, [r5, #4]
 801678e:	4620      	mov	r0, r4
 8016790:	4798      	blx	r3
 8016792:	802e      	strh	r6, [r5, #0]
 8016794:	806e      	strh	r6, [r5, #2]
 8016796:	80ae      	strh	r6, [r5, #4]
 8016798:	80ee      	strh	r6, [r5, #6]
 801679a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801679e:	4dbb      	ldr	r5, [pc, #748]	; (8016a8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80167a0:	4640      	mov	r0, r8
 80167a2:	f7ff fbeb 	bl	8015f7c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80167a6:	882e      	ldrh	r6, [r5, #0]
 80167a8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80167ac:	4633      	mov	r3, r6
 80167ae:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80167b2:	42bb      	cmp	r3, r7
 80167b4:	d224      	bcs.n	8016800 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80167b6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80167ba:	2907      	cmp	r1, #7
 80167bc:	d816      	bhi.n	80167ec <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80167be:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80167c2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80167c6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80167ca:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80167ce:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80167d2:	1c4a      	adds	r2, r1, #1
 80167d4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80167d8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80167dc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80167e0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80167e4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80167e8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80167ec:	3301      	adds	r3, #1
 80167ee:	b29b      	uxth	r3, r3
 80167f0:	e7df      	b.n	80167b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80167f2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80167f6:	2b00      	cmp	r3, #0
 80167f8:	d1cf      	bne.n	801679a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80167fa:	b01b      	add	sp, #108	; 0x6c
 80167fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016800:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8016804:	42b3      	cmp	r3, r6
 8016806:	d90c      	bls.n	8016822 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8016808:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801680c:	6822      	ldr	r2, [r4, #0]
 801680e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8016812:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8016814:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8016818:	4620      	mov	r0, r4
 801681a:	3601      	adds	r6, #1
 801681c:	47b8      	blx	r7
 801681e:	b2b6      	uxth	r6, r6
 8016820:	e7ee      	b.n	8016800 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016822:	4a9b      	ldr	r2, [pc, #620]	; (8016a90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016824:	6813      	ldr	r3, [r2, #0]
 8016826:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801682a:	2b01      	cmp	r3, #1
 801682c:	4691      	mov	r9, r2
 801682e:	f040 80e2 	bne.w	80169f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8016832:	8829      	ldrh	r1, [r5, #0]
 8016834:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016838:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801683c:	33ae      	adds	r3, #174	; 0xae
 801683e:	2600      	movs	r6, #0
 8016840:	428f      	cmp	r7, r1
 8016842:	f103 0308 	add.w	r3, r3, #8
 8016846:	dd0a      	ble.n	801685e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016848:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801684c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8016850:	4402      	add	r2, r0
 8016852:	b212      	sxth	r2, r2
 8016854:	4296      	cmp	r6, r2
 8016856:	bfb8      	it	lt
 8016858:	4616      	movlt	r6, r2
 801685a:	3101      	adds	r1, #1
 801685c:	e7f0      	b.n	8016840 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801685e:	4b8d      	ldr	r3, [pc, #564]	; (8016a94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8016860:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8016a90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8016864:	881b      	ldrh	r3, [r3, #0]
 8016866:	2b0f      	cmp	r3, #15
 8016868:	bf88      	it	hi
 801686a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801686e:	f04f 0300 	mov.w	r3, #0
 8016872:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8016876:	bf98      	it	ls
 8016878:	f04f 0b01 	movls.w	fp, #1
 801687c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8016880:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8016884:	4b82      	ldr	r3, [pc, #520]	; (8016a90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016886:	4438      	add	r0, r7
 8016888:	b207      	sxth	r7, r0
 801688a:	6818      	ldr	r0, [r3, #0]
 801688c:	42b7      	cmp	r7, r6
 801688e:	6803      	ldr	r3, [r0, #0]
 8016890:	f280 8083 	bge.w	801699a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016894:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8016898:	4798      	blx	r3
 801689a:	eb07 030b 	add.w	r3, r7, fp
 801689e:	4298      	cmp	r0, r3
 80168a0:	da07      	bge.n	80168b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80168a2:	42b0      	cmp	r0, r6
 80168a4:	da05      	bge.n	80168b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80168a6:	4287      	cmp	r7, r0
 80168a8:	dd6c      	ble.n	8016984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80168aa:	2f00      	cmp	r7, #0
 80168ac:	dd6a      	ble.n	8016984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80168ae:	4630      	mov	r0, r6
 80168b0:	e004      	b.n	80168bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80168b2:	4287      	cmp	r7, r0
 80168b4:	dcfb      	bgt.n	80168ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80168b6:	42b0      	cmp	r0, r6
 80168b8:	bfa8      	it	ge
 80168ba:	4630      	movge	r0, r6
 80168bc:	4b76      	ldr	r3, [pc, #472]	; (8016a98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80168be:	f8ad 7016 	strh.w	r7, [sp, #22]
 80168c2:	1bc0      	subs	r0, r0, r7
 80168c4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80168c8:	882f      	ldrh	r7, [r5, #0]
 80168ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 80168ce:	2200      	movs	r2, #0
 80168d0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80168d4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80168d8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80168dc:	42bb      	cmp	r3, r7
 80168de:	d9cd      	bls.n	801687c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80168e0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80168e4:	ab07      	add	r3, sp, #28
 80168e6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80168ea:	6851      	ldr	r1, [r2, #4]
 80168ec:	c303      	stmia	r3!, {r0, r1}
 80168ee:	a905      	add	r1, sp, #20
 80168f0:	a807      	add	r0, sp, #28
 80168f2:	f7ff f93e 	bl	8015b72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80168f6:	2800      	cmp	r0, #0
 80168f8:	d04c      	beq.n	8016994 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80168fa:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80168fe:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016902:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8016906:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801690a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801690e:	9302      	str	r3, [sp, #8]
 8016910:	4686      	mov	lr, r0
 8016912:	4290      	cmp	r0, r2
 8016914:	4450      	add	r0, sl
 8016916:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801691a:	bfb8      	it	lt
 801691c:	4696      	movlt	lr, r2
 801691e:	4452      	add	r2, sl
 8016920:	4299      	cmp	r1, r3
 8016922:	b280      	uxth	r0, r0
 8016924:	b292      	uxth	r2, r2
 8016926:	468c      	mov	ip, r1
 8016928:	fa0f fa82 	sxth.w	sl, r2
 801692c:	bfb8      	it	lt
 801692e:	469c      	movlt	ip, r3
 8016930:	b203      	sxth	r3, r0
 8016932:	4553      	cmp	r3, sl
 8016934:	bfb8      	it	lt
 8016936:	4602      	movlt	r2, r0
 8016938:	eba2 020e 	sub.w	r2, r2, lr
 801693c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016940:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016944:	9b02      	ldr	r3, [sp, #8]
 8016946:	f8ad e01c 	strh.w	lr, [sp, #28]
 801694a:	4411      	add	r1, r2
 801694c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016950:	f8ad c01e 	strh.w	ip, [sp, #30]
 8016954:	4413      	add	r3, r2
 8016956:	b289      	uxth	r1, r1
 8016958:	b29b      	uxth	r3, r3
 801695a:	b208      	sxth	r0, r1
 801695c:	b21a      	sxth	r2, r3
 801695e:	4290      	cmp	r0, r2
 8016960:	bfb8      	it	lt
 8016962:	460b      	movlt	r3, r1
 8016964:	eba3 030c 	sub.w	r3, r3, ip
 8016968:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801696c:	a807      	add	r0, sp, #28
 801696e:	f7f9 fad0 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016972:	b920      	cbnz	r0, 801697e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8016974:	6823      	ldr	r3, [r4, #0]
 8016976:	a907      	add	r1, sp, #28
 8016978:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801697a:	4620      	mov	r0, r4
 801697c:	4798      	blx	r3
 801697e:	3701      	adds	r7, #1
 8016980:	b2bf      	uxth	r7, r7
 8016982:	e7a9      	b.n	80168d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8016984:	f8d9 0000 	ldr.w	r0, [r9]
 8016988:	6803      	ldr	r3, [r0, #0]
 801698a:	2101      	movs	r1, #1
 801698c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016990:	4798      	blx	r3
 8016992:	e773      	b.n	801687c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016994:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016998:	e7e8      	b.n	801696c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801699a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801699c:	4798      	blx	r3
 801699e:	4b3f      	ldr	r3, [pc, #252]	; (8016a9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80169a0:	781b      	ldrb	r3, [r3, #0]
 80169a2:	2b00      	cmp	r3, #0
 80169a4:	f43f af29 	beq.w	80167fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80169a8:	2300      	movs	r3, #0
 80169aa:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80169ae:	882b      	ldrh	r3, [r5, #0]
 80169b0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80169b4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80169b8:	42ab      	cmp	r3, r5
 80169ba:	f4bf af1e 	bcs.w	80167fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80169be:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80169c2:	2907      	cmp	r1, #7
 80169c4:	d814      	bhi.n	80169f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80169c6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80169ca:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80169ce:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80169d2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80169d6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80169da:	1c4a      	adds	r2, r1, #1
 80169dc:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80169e0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80169e4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80169e8:	f8a2 c002 	strh.w	ip, [r2, #2]
 80169ec:	8097      	strh	r7, [r2, #4]
 80169ee:	80d6      	strh	r6, [r2, #6]
 80169f0:	3301      	adds	r3, #1
 80169f2:	b29b      	uxth	r3, r3
 80169f4:	e7e0      	b.n	80169b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80169f6:	2b02      	cmp	r3, #2
 80169f8:	f040 8133 	bne.w	8016c62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80169fc:	4b28      	ldr	r3, [pc, #160]	; (8016aa0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80169fe:	781b      	ldrb	r3, [r3, #0]
 8016a00:	2b01      	cmp	r3, #1
 8016a02:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016a06:	f000 8098 	beq.w	8016b3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016a0a:	882a      	ldrh	r2, [r5, #0]
 8016a0c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016a10:	3201      	adds	r2, #1
 8016a12:	b292      	uxth	r2, r2
 8016a14:	2900      	cmp	r1, #0
 8016a16:	d0c2      	beq.n	801699e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016a18:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8016a1c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016a20:	441e      	add	r6, r3
 8016a22:	b236      	sxth	r6, r6
 8016a24:	4694      	mov	ip, r2
 8016a26:	f04f 0900 	mov.w	r9, #0
 8016a2a:	fa1f f38c 	uxth.w	r3, ip
 8016a2e:	4299      	cmp	r1, r3
 8016a30:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016a34:	f240 80bf 	bls.w	8016bb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016a38:	4427      	add	r7, r4
 8016a3a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8016a3e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016a42:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016a46:	4283      	cmp	r3, r0
 8016a48:	f340 80a1 	ble.w	8016b8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8016a4c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8016a50:	4406      	add	r6, r0
 8016a52:	b236      	sxth	r6, r6
 8016a54:	429e      	cmp	r6, r3
 8016a56:	bfa8      	it	ge
 8016a58:	461e      	movge	r6, r3
 8016a5a:	46e1      	mov	r9, ip
 8016a5c:	f10c 0c01 	add.w	ip, ip, #1
 8016a60:	e7e3      	b.n	8016a2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8016a62:	d10a      	bne.n	8016a7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8016a64:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8016a68:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8016a6c:	4562      	cmp	r2, ip
 8016a6e:	bfb8      	it	lt
 8016a70:	4662      	movlt	r2, ip
 8016a72:	4288      	cmp	r0, r1
 8016a74:	bfb8      	it	lt
 8016a76:	461f      	movlt	r7, r3
 8016a78:	e087      	b.n	8016b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016a7a:	428a      	cmp	r2, r1
 8016a7c:	bfb8      	it	lt
 8016a7e:	460a      	movlt	r2, r1
 8016a80:	e083      	b.n	8016b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016a82:	bf00      	nop
 8016a84:	200132fc 	.word	0x200132fc
 8016a88:	20013308 	.word	0x20013308
 8016a8c:	200000a4 	.word	0x200000a4
 8016a90:	200132bc 	.word	0x200132bc
 8016a94:	200132b2 	.word	0x200132b2
 8016a98:	200132b0 	.word	0x200132b0
 8016a9c:	200132ba 	.word	0x200132ba
 8016aa0:	200132b4 	.word	0x200132b4
 8016aa4:	19a1      	adds	r1, r4, r6
 8016aa6:	ab07      	add	r3, sp, #28
 8016aa8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8016aac:	6849      	ldr	r1, [r1, #4]
 8016aae:	c303      	stmia	r3!, {r0, r1}
 8016ab0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016ab4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016ab8:	2b13      	cmp	r3, #19
 8016aba:	bfd8      	it	le
 8016abc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016ac0:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016ac4:	440b      	add	r3, r1
 8016ac6:	1a9b      	subs	r3, r3, r2
 8016ac8:	a807      	add	r0, sp, #28
 8016aca:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016ace:	f7fe ff7b 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016ad2:	a807      	add	r0, sp, #28
 8016ad4:	f7f9 fa1d 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016ad8:	bb78      	cbnz	r0, 8016b3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016ada:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016ade:	f8d9 0000 	ldr.w	r0, [r9]
 8016ae2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016ae6:	f8d0 e000 	ldr.w	lr, [r0]
 8016aea:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016aee:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016af2:	f1bc 0f14 	cmp.w	ip, #20
 8016af6:	bfa8      	it	ge
 8016af8:	f04f 0c14 	movge.w	ip, #20
 8016afc:	fa1f fc8c 	uxth.w	ip, ip
 8016b00:	f8cd c000 	str.w	ip, [sp]
 8016b04:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016b08:	47d8      	blx	fp
 8016b0a:	4683      	mov	fp, r0
 8016b0c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016b10:	a807      	add	r0, sp, #28
 8016b12:	f7fe ff3f 	bl	8015994 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016b16:	6823      	ldr	r3, [r4, #0]
 8016b18:	4426      	add	r6, r4
 8016b1a:	4620      	mov	r0, r4
 8016b1c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016b1e:	a907      	add	r1, sp, #28
 8016b20:	4798      	blx	r3
 8016b22:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016b26:	eba0 000b 	sub.w	r0, r0, fp
 8016b2a:	b200      	sxth	r0, r0
 8016b2c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016b30:	b918      	cbnz	r0, 8016b3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016b32:	b2b9      	uxth	r1, r7
 8016b34:	4650      	mov	r0, sl
 8016b36:	f7ff fa79 	bl	801602c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016b3a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8016b3e:	f1bb 0f00 	cmp.w	fp, #0
 8016b42:	f43f af2c 	beq.w	801699e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016b46:	882b      	ldrh	r3, [r5, #0]
 8016b48:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8016b4c:	3301      	adds	r3, #1
 8016b4e:	b29b      	uxth	r3, r3
 8016b50:	2700      	movs	r7, #0
 8016b52:	b299      	uxth	r1, r3
 8016b54:	458b      	cmp	fp, r1
 8016b56:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8016b5a:	d9a3      	bls.n	8016aa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8016b5c:	4426      	add	r6, r4
 8016b5e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016b62:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8016b66:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016b6a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8016b6e:	4408      	add	r0, r1
 8016b70:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016b74:	4461      	add	r1, ip
 8016b76:	b200      	sxth	r0, r0
 8016b78:	b209      	sxth	r1, r1
 8016b7a:	4288      	cmp	r0, r1
 8016b7c:	f6bf af71 	bge.w	8016a62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016b80:	4584      	cmp	ip, r0
 8016b82:	4662      	mov	r2, ip
 8016b84:	461f      	mov	r7, r3
 8016b86:	bfb8      	it	lt
 8016b88:	4602      	movlt	r2, r0
 8016b8a:	3301      	adds	r3, #1
 8016b8c:	e7e1      	b.n	8016b52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8016b8e:	d10e      	bne.n	8016bae <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016b90:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016b94:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016b98:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8016b9c:	4473      	add	r3, lr
 8016b9e:	b21b      	sxth	r3, r3
 8016ba0:	429e      	cmp	r6, r3
 8016ba2:	bfa8      	it	ge
 8016ba4:	461e      	movge	r6, r3
 8016ba6:	4287      	cmp	r7, r0
 8016ba8:	bfb8      	it	lt
 8016baa:	46e1      	movlt	r9, ip
 8016bac:	e756      	b.n	8016a5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016bae:	4286      	cmp	r6, r0
 8016bb0:	bfa8      	it	ge
 8016bb2:	4606      	movge	r6, r0
 8016bb4:	e752      	b.n	8016a5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016bb6:	eb0a 0007 	add.w	r0, sl, r7
 8016bba:	4427      	add	r7, r4
 8016bbc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016bc0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016bc4:	f1bb 0f13 	cmp.w	fp, #19
 8016bc8:	bfde      	ittt	le
 8016bca:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016bce:	445e      	addle	r6, fp
 8016bd0:	b236      	sxthle	r6, r6
 8016bd2:	f7f9 f99e 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016bd6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8016bda:	2800      	cmp	r0, #0
 8016bdc:	f47f af1a 	bne.w	8016a14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016be0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016be4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016be8:	482a      	ldr	r0, [pc, #168]	; (8016c94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8016bea:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8016bee:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016bf2:	6800      	ldr	r0, [r0, #0]
 8016bf4:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016bf8:	1ab6      	subs	r6, r6, r2
 8016bfa:	2e14      	cmp	r6, #20
 8016bfc:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016c00:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016c04:	bfa8      	it	ge
 8016c06:	2614      	movge	r6, #20
 8016c08:	f8d0 c000 	ldr.w	ip, [r0]
 8016c0c:	b2b6      	uxth	r6, r6
 8016c0e:	fa1f fb8b 	uxth.w	fp, fp
 8016c12:	455e      	cmp	r6, fp
 8016c14:	bf94      	ite	ls
 8016c16:	9600      	strls	r6, [sp, #0]
 8016c18:	f8cd b000 	strhi.w	fp, [sp]
 8016c1c:	b292      	uxth	r2, r2
 8016c1e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016c22:	b29b      	uxth	r3, r3
 8016c24:	b289      	uxth	r1, r1
 8016c26:	47b0      	blx	r6
 8016c28:	6823      	ldr	r3, [r4, #0]
 8016c2a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016c2e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016c30:	a907      	add	r1, sp, #28
 8016c32:	4620      	mov	r0, r4
 8016c34:	4798      	blx	r3
 8016c36:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016c3a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016c3e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016c42:	1a5b      	subs	r3, r3, r1
 8016c44:	440a      	add	r2, r1
 8016c46:	b21b      	sxth	r3, r3
 8016c48:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8016c4c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016c50:	2b00      	cmp	r3, #0
 8016c52:	f47f aeda 	bne.w	8016a0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016c56:	fa1f f189 	uxth.w	r1, r9
 8016c5a:	4650      	mov	r0, sl
 8016c5c:	f7ff f9e6 	bl	801602c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016c60:	e6d3      	b.n	8016a0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016c62:	882e      	ldrh	r6, [r5, #0]
 8016c64:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016c68:	42b3      	cmp	r3, r6
 8016c6a:	f67f ae98 	bls.w	801699e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016c6e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016c72:	ab07      	add	r3, sp, #28
 8016c74:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016c78:	6851      	ldr	r1, [r2, #4]
 8016c7a:	c303      	stmia	r3!, {r0, r1}
 8016c7c:	a807      	add	r0, sp, #28
 8016c7e:	f7f9 f948 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016c82:	b920      	cbnz	r0, 8016c8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016c84:	6823      	ldr	r3, [r4, #0]
 8016c86:	a907      	add	r1, sp, #28
 8016c88:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016c8a:	4620      	mov	r0, r4
 8016c8c:	4798      	blx	r3
 8016c8e:	3601      	adds	r6, #1
 8016c90:	b2b6      	uxth	r6, r6
 8016c92:	e7e7      	b.n	8016c64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016c94:	200132bc 	.word	0x200132bc

08016c98 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016c98:	4b03      	ldr	r3, [pc, #12]	; (8016ca8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016c9a:	2200      	movs	r2, #0
 8016c9c:	801a      	strh	r2, [r3, #0]
 8016c9e:	805a      	strh	r2, [r3, #2]
 8016ca0:	809a      	strh	r2, [r3, #4]
 8016ca2:	80da      	strh	r2, [r3, #6]
 8016ca4:	4770      	bx	lr
 8016ca6:	bf00      	nop
 8016ca8:	20013308 	.word	0x20013308

08016cac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cb0:	4606      	mov	r6, r0
 8016cb2:	b09d      	sub	sp, #116	; 0x74
 8016cb4:	a803      	add	r0, sp, #12
 8016cb6:	4614      	mov	r4, r2
 8016cb8:	468a      	mov	sl, r1
 8016cba:	461d      	mov	r5, r3
 8016cbc:	f000 ff08 	bl	8017ad0 <_ZN8touchgfx12TextProviderC1Ev>
 8016cc0:	6833      	ldr	r3, [r6, #0]
 8016cc2:	4630      	mov	r0, r6
 8016cc4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016cc6:	4798      	blx	r3
 8016cc8:	6833      	ldr	r3, [r6, #0]
 8016cca:	4607      	mov	r7, r0
 8016ccc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016cce:	4630      	mov	r0, r6
 8016cd0:	4798      	blx	r3
 8016cd2:	462a      	mov	r2, r5
 8016cd4:	9000      	str	r0, [sp, #0]
 8016cd6:	4621      	mov	r1, r4
 8016cd8:	463b      	mov	r3, r7
 8016cda:	a803      	add	r0, sp, #12
 8016cdc:	f000 ff53 	bl	8017b86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016ce0:	2500      	movs	r5, #0
 8016ce2:	462c      	mov	r4, r5
 8016ce4:	46a9      	mov	r9, r5
 8016ce6:	46a8      	mov	r8, r5
 8016ce8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016cec:	2300      	movs	r3, #0
 8016cee:	9302      	str	r3, [sp, #8]
 8016cf0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016cf4:	429c      	cmp	r4, r3
 8016cf6:	d002      	beq.n	8016cfe <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016cf8:	455c      	cmp	r4, fp
 8016cfa:	bf18      	it	ne
 8016cfc:	4625      	movne	r5, r4
 8016cfe:	ab02      	add	r3, sp, #8
 8016d00:	4632      	mov	r2, r6
 8016d02:	4651      	mov	r1, sl
 8016d04:	a803      	add	r0, sp, #12
 8016d06:	f001 fa41 	bl	801818c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016d0a:	4604      	mov	r4, r0
 8016d0c:	b108      	cbz	r0, 8016d12 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016d0e:	280a      	cmp	r0, #10
 8016d10:	d10a      	bne.n	8016d28 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016d12:	45c1      	cmp	r9, r8
 8016d14:	bf38      	it	cc
 8016d16:	46c1      	movcc	r9, r8
 8016d18:	f04f 0800 	mov.w	r8, #0
 8016d1c:	2c00      	cmp	r4, #0
 8016d1e:	d1e5      	bne.n	8016cec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016d20:	4648      	mov	r0, r9
 8016d22:	b01d      	add	sp, #116	; 0x74
 8016d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d28:	9a02      	ldr	r2, [sp, #8]
 8016d2a:	2a00      	cmp	r2, #0
 8016d2c:	d0de      	beq.n	8016cec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016d2e:	7b57      	ldrb	r7, [r2, #13]
 8016d30:	6833      	ldr	r3, [r6, #0]
 8016d32:	8894      	ldrh	r4, [r2, #4]
 8016d34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016d36:	007f      	lsls	r7, r7, #1
 8016d38:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016d3c:	7a97      	ldrb	r7, [r2, #10]
 8016d3e:	4629      	mov	r1, r5
 8016d40:	4307      	orrs	r7, r0
 8016d42:	4630      	mov	r0, r6
 8016d44:	4798      	blx	r3
 8016d46:	4438      	add	r0, r7
 8016d48:	4480      	add	r8, r0
 8016d4a:	fa1f f888 	uxth.w	r8, r8
 8016d4e:	e7e5      	b.n	8016d1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016d50 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016d50:	b508      	push	{r3, lr}
 8016d52:	6803      	ldr	r3, [r0, #0]
 8016d54:	68db      	ldr	r3, [r3, #12]
 8016d56:	4798      	blx	r3
 8016d58:	b128      	cbz	r0, 8016d66 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016d5a:	7b43      	ldrb	r3, [r0, #13]
 8016d5c:	7a80      	ldrb	r0, [r0, #10]
 8016d5e:	005b      	lsls	r3, r3, #1
 8016d60:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016d64:	4318      	orrs	r0, r3
 8016d66:	bd08      	pop	{r3, pc}

08016d68 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016d68:	b40e      	push	{r1, r2, r3}
 8016d6a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016d6c:	b09e      	sub	sp, #120	; 0x78
 8016d6e:	ab23      	add	r3, sp, #140	; 0x8c
 8016d70:	4605      	mov	r5, r0
 8016d72:	f853 4b04 	ldr.w	r4, [r3], #4
 8016d76:	9303      	str	r3, [sp, #12]
 8016d78:	a805      	add	r0, sp, #20
 8016d7a:	f000 fea9 	bl	8017ad0 <_ZN8touchgfx12TextProviderC1Ev>
 8016d7e:	682b      	ldr	r3, [r5, #0]
 8016d80:	4628      	mov	r0, r5
 8016d82:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016d84:	4798      	blx	r3
 8016d86:	682b      	ldr	r3, [r5, #0]
 8016d88:	4606      	mov	r6, r0
 8016d8a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016d8c:	4628      	mov	r0, r5
 8016d8e:	4798      	blx	r3
 8016d90:	4633      	mov	r3, r6
 8016d92:	ae1e      	add	r6, sp, #120	; 0x78
 8016d94:	4621      	mov	r1, r4
 8016d96:	9000      	str	r0, [sp, #0]
 8016d98:	9a03      	ldr	r2, [sp, #12]
 8016d9a:	2400      	movs	r4, #0
 8016d9c:	a805      	add	r0, sp, #20
 8016d9e:	f000 fef2 	bl	8017b86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016da2:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016da6:	462a      	mov	r2, r5
 8016da8:	4633      	mov	r3, r6
 8016daa:	4621      	mov	r1, r4
 8016dac:	a805      	add	r0, sp, #20
 8016dae:	f001 f9ed 	bl	801818c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016db2:	b1f0      	cbz	r0, 8016df2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016db4:	280a      	cmp	r0, #10
 8016db6:	d018      	beq.n	8016dea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016db8:	9f04      	ldr	r7, [sp, #16]
 8016dba:	b1b7      	cbz	r7, 8016dea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016dbc:	7b78      	ldrb	r0, [r7, #13]
 8016dbe:	7a3b      	ldrb	r3, [r7, #8]
 8016dc0:	88ea      	ldrh	r2, [r5, #6]
 8016dc2:	00c1      	lsls	r1, r0, #3
 8016dc4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016dc8:	4319      	orrs	r1, r3
 8016dca:	0643      	lsls	r3, r0, #25
 8016dcc:	bf44      	itt	mi
 8016dce:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016dd2:	b219      	sxthmi	r1, r3
 8016dd4:	0100      	lsls	r0, r0, #4
 8016dd6:	79fb      	ldrb	r3, [r7, #7]
 8016dd8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016ddc:	4303      	orrs	r3, r0
 8016dde:	4413      	add	r3, r2
 8016de0:	1a5b      	subs	r3, r3, r1
 8016de2:	b21b      	sxth	r3, r3
 8016de4:	429c      	cmp	r4, r3
 8016de6:	bfb8      	it	lt
 8016de8:	461c      	movlt	r4, r3
 8016dea:	4633      	mov	r3, r6
 8016dec:	462a      	mov	r2, r5
 8016dee:	2100      	movs	r1, #0
 8016df0:	e7dc      	b.n	8016dac <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016df2:	b2a0      	uxth	r0, r4
 8016df4:	b01e      	add	sp, #120	; 0x78
 8016df6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016dfa:	b003      	add	sp, #12
 8016dfc:	4770      	bx	lr

08016dfe <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8016dfe:	7a43      	ldrb	r3, [r0, #9]
 8016e00:	8880      	ldrh	r0, [r0, #4]
 8016e02:	4418      	add	r0, r3
 8016e04:	b280      	uxth	r0, r0
 8016e06:	4770      	bx	lr

08016e08 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016e08:	6803      	ldr	r3, [r0, #0]
 8016e0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016e0c:	4718      	bx	r3

08016e0e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8016e0e:	b40e      	push	{r1, r2, r3}
 8016e10:	b570      	push	{r4, r5, r6, lr}
 8016e12:	b09d      	sub	sp, #116	; 0x74
 8016e14:	ab21      	add	r3, sp, #132	; 0x84
 8016e16:	4604      	mov	r4, r0
 8016e18:	f853 5b04 	ldr.w	r5, [r3], #4
 8016e1c:	9302      	str	r3, [sp, #8]
 8016e1e:	a803      	add	r0, sp, #12
 8016e20:	f000 fe56 	bl	8017ad0 <_ZN8touchgfx12TextProviderC1Ev>
 8016e24:	6823      	ldr	r3, [r4, #0]
 8016e26:	4620      	mov	r0, r4
 8016e28:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016e2a:	4798      	blx	r3
 8016e2c:	6823      	ldr	r3, [r4, #0]
 8016e2e:	4606      	mov	r6, r0
 8016e30:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016e32:	4620      	mov	r0, r4
 8016e34:	4798      	blx	r3
 8016e36:	4633      	mov	r3, r6
 8016e38:	9000      	str	r0, [sp, #0]
 8016e3a:	9a02      	ldr	r2, [sp, #8]
 8016e3c:	4629      	mov	r1, r5
 8016e3e:	a803      	add	r0, sp, #12
 8016e40:	f000 fea1 	bl	8017b86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016e44:	a803      	add	r0, sp, #12
 8016e46:	f001 fa6f 	bl	8018328 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016e4a:	2401      	movs	r4, #1
 8016e4c:	b2a3      	uxth	r3, r4
 8016e4e:	b140      	cbz	r0, 8016e62 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016e50:	280a      	cmp	r0, #10
 8016e52:	bf08      	it	eq
 8016e54:	3301      	addeq	r3, #1
 8016e56:	a803      	add	r0, sp, #12
 8016e58:	bf08      	it	eq
 8016e5a:	b21c      	sxtheq	r4, r3
 8016e5c:	f001 fa64 	bl	8018328 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016e60:	e7f4      	b.n	8016e4c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016e62:	4618      	mov	r0, r3
 8016e64:	b01d      	add	sp, #116	; 0x74
 8016e66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016e6a:	b003      	add	sp, #12
 8016e6c:	4770      	bx	lr

08016e6e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8016e6e:	b40e      	push	{r1, r2, r3}
 8016e70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016e72:	b09e      	sub	sp, #120	; 0x78
 8016e74:	ab23      	add	r3, sp, #140	; 0x8c
 8016e76:	4604      	mov	r4, r0
 8016e78:	f853 5b04 	ldr.w	r5, [r3], #4
 8016e7c:	9303      	str	r3, [sp, #12]
 8016e7e:	a805      	add	r0, sp, #20
 8016e80:	f000 fe26 	bl	8017ad0 <_ZN8touchgfx12TextProviderC1Ev>
 8016e84:	6823      	ldr	r3, [r4, #0]
 8016e86:	4620      	mov	r0, r4
 8016e88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016e8a:	4798      	blx	r3
 8016e8c:	6823      	ldr	r3, [r4, #0]
 8016e8e:	4606      	mov	r6, r0
 8016e90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016e92:	4620      	mov	r0, r4
 8016e94:	4798      	blx	r3
 8016e96:	4633      	mov	r3, r6
 8016e98:	4629      	mov	r1, r5
 8016e9a:	9000      	str	r0, [sp, #0]
 8016e9c:	9a03      	ldr	r2, [sp, #12]
 8016e9e:	a805      	add	r0, sp, #20
 8016ea0:	ad1e      	add	r5, sp, #120	; 0x78
 8016ea2:	f000 fe70 	bl	8017b86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016ea6:	2100      	movs	r1, #0
 8016ea8:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016eac:	4622      	mov	r2, r4
 8016eae:	462b      	mov	r3, r5
 8016eb0:	a805      	add	r0, sp, #20
 8016eb2:	f001 f96b 	bl	801818c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016eb6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016eba:	b1d8      	cbz	r0, 8016ef4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016ebc:	280a      	cmp	r0, #10
 8016ebe:	d012      	beq.n	8016ee6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016ec0:	9804      	ldr	r0, [sp, #16]
 8016ec2:	b180      	cbz	r0, 8016ee6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016ec4:	7b47      	ldrb	r7, [r0, #13]
 8016ec6:	88e2      	ldrh	r2, [r4, #6]
 8016ec8:	00fb      	lsls	r3, r7, #3
 8016eca:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016ece:	7a03      	ldrb	r3, [r0, #8]
 8016ed0:	430b      	orrs	r3, r1
 8016ed2:	0679      	lsls	r1, r7, #25
 8016ed4:	bf44      	itt	mi
 8016ed6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016eda:	b21b      	sxthmi	r3, r3
 8016edc:	1ad3      	subs	r3, r2, r3
 8016ede:	b21b      	sxth	r3, r3
 8016ee0:	429e      	cmp	r6, r3
 8016ee2:	bfa8      	it	ge
 8016ee4:	461e      	movge	r6, r3
 8016ee6:	462b      	mov	r3, r5
 8016ee8:	4622      	mov	r2, r4
 8016eea:	2100      	movs	r1, #0
 8016eec:	a805      	add	r0, sp, #20
 8016eee:	f001 f94d 	bl	801818c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016ef2:	e7e2      	b.n	8016eba <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016ef4:	4630      	mov	r0, r6
 8016ef6:	b01e      	add	sp, #120	; 0x78
 8016ef8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016efc:	b003      	add	sp, #12
 8016efe:	4770      	bx	lr

08016f00 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016f00:	b513      	push	{r0, r1, r4, lr}
 8016f02:	6803      	ldr	r3, [r0, #0]
 8016f04:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016f08:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016f0c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016f10:	2400      	movs	r4, #0
 8016f12:	9400      	str	r4, [sp, #0]
 8016f14:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016f18:	691b      	ldr	r3, [r3, #16]
 8016f1a:	4669      	mov	r1, sp
 8016f1c:	4798      	blx	r3
 8016f1e:	b002      	add	sp, #8
 8016f20:	bd10      	pop	{r4, pc}

08016f22 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016f22:	b538      	push	{r3, r4, r5, lr}
 8016f24:	680b      	ldr	r3, [r1, #0]
 8016f26:	460c      	mov	r4, r1
 8016f28:	68db      	ldr	r3, [r3, #12]
 8016f2a:	4605      	mov	r5, r0
 8016f2c:	4798      	blx	r3
 8016f2e:	6823      	ldr	r3, [r4, #0]
 8016f30:	4620      	mov	r0, r4
 8016f32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f34:	4629      	mov	r1, r5
 8016f36:	4798      	blx	r3
 8016f38:	4628      	mov	r0, r5
 8016f3a:	bd38      	pop	{r3, r4, r5, pc}

08016f3c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8016f3c:	b410      	push	{r4}
 8016f3e:	880a      	ldrh	r2, [r1, #0]
 8016f40:	8884      	ldrh	r4, [r0, #4]
 8016f42:	4422      	add	r2, r4
 8016f44:	800a      	strh	r2, [r1, #0]
 8016f46:	88c4      	ldrh	r4, [r0, #6]
 8016f48:	884a      	ldrh	r2, [r1, #2]
 8016f4a:	4422      	add	r2, r4
 8016f4c:	804a      	strh	r2, [r1, #2]
 8016f4e:	6940      	ldr	r0, [r0, #20]
 8016f50:	b120      	cbz	r0, 8016f5c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016f52:	6803      	ldr	r3, [r0, #0]
 8016f54:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016f58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f5a:	4718      	bx	r3
 8016f5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016f60:	4770      	bx	lr

08016f62 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016f62:	b570      	push	{r4, r5, r6, lr}
 8016f64:	8882      	ldrh	r2, [r0, #4]
 8016f66:	880b      	ldrh	r3, [r1, #0]
 8016f68:	4413      	add	r3, r2
 8016f6a:	800b      	strh	r3, [r1, #0]
 8016f6c:	88c2      	ldrh	r2, [r0, #6]
 8016f6e:	884b      	ldrh	r3, [r1, #2]
 8016f70:	460c      	mov	r4, r1
 8016f72:	4413      	add	r3, r2
 8016f74:	804b      	strh	r3, [r1, #2]
 8016f76:	4605      	mov	r5, r0
 8016f78:	1d01      	adds	r1, r0, #4
 8016f7a:	4620      	mov	r0, r4
 8016f7c:	f7f8 ff86 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 8016f80:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016f84:	2b00      	cmp	r3, #0
 8016f86:	dd0b      	ble.n	8016fa0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016f88:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016f8c:	2b00      	cmp	r3, #0
 8016f8e:	dd07      	ble.n	8016fa0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016f90:	6968      	ldr	r0, [r5, #20]
 8016f92:	b128      	cbz	r0, 8016fa0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016f94:	6803      	ldr	r3, [r0, #0]
 8016f96:	4621      	mov	r1, r4
 8016f98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016f9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016f9e:	4718      	bx	r3
 8016fa0:	bd70      	pop	{r4, r5, r6, pc}
	...

08016fa4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016fa4:	b570      	push	{r4, r5, r6, lr}
 8016fa6:	8882      	ldrh	r2, [r0, #4]
 8016fa8:	880b      	ldrh	r3, [r1, #0]
 8016faa:	4413      	add	r3, r2
 8016fac:	800b      	strh	r3, [r1, #0]
 8016fae:	88c2      	ldrh	r2, [r0, #6]
 8016fb0:	884b      	ldrh	r3, [r1, #2]
 8016fb2:	460c      	mov	r4, r1
 8016fb4:	4413      	add	r3, r2
 8016fb6:	804b      	strh	r3, [r1, #2]
 8016fb8:	4605      	mov	r5, r0
 8016fba:	1d01      	adds	r1, r0, #4
 8016fbc:	4620      	mov	r0, r4
 8016fbe:	f7f8 ff65 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 8016fc2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016fc6:	2b00      	cmp	r3, #0
 8016fc8:	dd19      	ble.n	8016ffe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016fca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016fce:	2b00      	cmp	r3, #0
 8016fd0:	dd15      	ble.n	8016ffe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016fd2:	6968      	ldr	r0, [r5, #20]
 8016fd4:	b128      	cbz	r0, 8016fe2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016fd6:	6803      	ldr	r3, [r0, #0]
 8016fd8:	4621      	mov	r1, r4
 8016fda:	691b      	ldr	r3, [r3, #16]
 8016fdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016fe0:	4718      	bx	r3
 8016fe2:	4b07      	ldr	r3, [pc, #28]	; (8017000 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016fe4:	681b      	ldr	r3, [r3, #0]
 8016fe6:	3304      	adds	r3, #4
 8016fe8:	429d      	cmp	r5, r3
 8016fea:	d108      	bne.n	8016ffe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016fec:	f7fe fea0 	bl	8015d30 <_ZN8touchgfx11Application11getInstanceEv>
 8016ff0:	6803      	ldr	r3, [r0, #0]
 8016ff2:	6821      	ldr	r1, [r4, #0]
 8016ff4:	6862      	ldr	r2, [r4, #4]
 8016ff6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016ff8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016ffc:	4718      	bx	r3
 8016ffe:	bd70      	pop	{r4, r5, r6, pc}
 8017000:	20013300 	.word	0x20013300

08017004 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017004:	b570      	push	{r4, r5, r6, lr}
 8017006:	4604      	mov	r4, r0
 8017008:	4616      	mov	r6, r2
 801700a:	460d      	mov	r5, r1
 801700c:	b901      	cbnz	r1, 8017010 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801700e:	b192      	cbz	r2, 8017036 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017010:	6823      	ldr	r3, [r4, #0]
 8017012:	4620      	mov	r0, r4
 8017014:	699b      	ldr	r3, [r3, #24]
 8017016:	4798      	blx	r3
 8017018:	88e2      	ldrh	r2, [r4, #6]
 801701a:	88a1      	ldrh	r1, [r4, #4]
 801701c:	4432      	add	r2, r6
 801701e:	4429      	add	r1, r5
 8017020:	4620      	mov	r0, r4
 8017022:	b212      	sxth	r2, r2
 8017024:	b209      	sxth	r1, r1
 8017026:	f7eb fc97 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 801702a:	6823      	ldr	r3, [r4, #0]
 801702c:	4620      	mov	r0, r4
 801702e:	699b      	ldr	r3, [r3, #24]
 8017030:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017034:	4718      	bx	r3
 8017036:	bd70      	pop	{r4, r5, r6, pc}

08017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017038:	b510      	push	{r4, lr}
 801703a:	4604      	mov	r4, r0
 801703c:	4608      	mov	r0, r1
 801703e:	2300      	movs	r3, #0
 8017040:	8023      	strh	r3, [r4, #0]
 8017042:	8063      	strh	r3, [r4, #2]
 8017044:	6803      	ldr	r3, [r0, #0]
 8017046:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801704a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801704e:	80a1      	strh	r1, [r4, #4]
 8017050:	80e2      	strh	r2, [r4, #6]
 8017052:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017054:	4621      	mov	r1, r4
 8017056:	4798      	blx	r3
 8017058:	4620      	mov	r0, r4
 801705a:	bd10      	pop	{r4, pc}

0801705c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801705c:	b530      	push	{r4, r5, lr}
 801705e:	8083      	strh	r3, [r0, #4]
 8017060:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017064:	80c3      	strh	r3, [r0, #6]
 8017066:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801706a:	7203      	strb	r3, [r0, #8]
 801706c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017070:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8017074:	7243      	strb	r3, [r0, #9]
 8017076:	7a83      	ldrb	r3, [r0, #10]
 8017078:	6141      	str	r1, [r0, #20]
 801707a:	f365 0306 	bfi	r3, r5, #0, #7
 801707e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8017082:	8302      	strh	r2, [r0, #24]
 8017084:	f365 13c7 	bfi	r3, r5, #7, #1
 8017088:	7283      	strb	r3, [r0, #10]
 801708a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801708e:	72c3      	strb	r3, [r0, #11]
 8017090:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8017094:	7303      	strb	r3, [r0, #12]
 8017096:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801709a:	81c3      	strh	r3, [r0, #14]
 801709c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80170a0:	8203      	strh	r3, [r0, #16]
 80170a2:	4b01      	ldr	r3, [pc, #4]	; (80170a8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80170a4:	6003      	str	r3, [r0, #0]
 80170a6:	bd30      	pop	{r4, r5, pc}
 80170a8:	0802ef9c 	.word	0x0802ef9c

080170ac <_ZNK8touchgfx9ConstFont4findEt>:
 80170ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80170ae:	6944      	ldr	r4, [r0, #20]
 80170b0:	b3bc      	cbz	r4, 8017122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170b2:	88a3      	ldrh	r3, [r4, #4]
 80170b4:	8b02      	ldrh	r2, [r0, #24]
 80170b6:	1acb      	subs	r3, r1, r3
 80170b8:	f102 32ff 	add.w	r2, r2, #4294967295
 80170bc:	d431      	bmi.n	8017122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170be:	4293      	cmp	r3, r2
 80170c0:	dd0c      	ble.n	80170dc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80170c2:	230e      	movs	r3, #14
 80170c4:	fb03 4302 	mla	r3, r3, r2, r4
 80170c8:	889b      	ldrh	r3, [r3, #4]
 80170ca:	1a5b      	subs	r3, r3, r1
 80170cc:	1ad3      	subs	r3, r2, r3
 80170ce:	429a      	cmp	r2, r3
 80170d0:	db27      	blt.n	8017122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170d2:	2b00      	cmp	r3, #0
 80170d4:	bfbc      	itt	lt
 80170d6:	2302      	movlt	r3, #2
 80170d8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80170dc:	2500      	movs	r5, #0
 80170de:	260e      	movs	r6, #14
 80170e0:	4295      	cmp	r5, r2
 80170e2:	dc1e      	bgt.n	8017122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170e4:	fb06 4003 	mla	r0, r6, r3, r4
 80170e8:	8887      	ldrh	r7, [r0, #4]
 80170ea:	42b9      	cmp	r1, r7
 80170ec:	d01a      	beq.n	8017124 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80170ee:	d20d      	bcs.n	801710c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80170f0:	1e5a      	subs	r2, r3, #1
 80170f2:	4295      	cmp	r5, r2
 80170f4:	dc15      	bgt.n	8017122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170f6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80170fa:	1a5b      	subs	r3, r3, r1
 80170fc:	1ad3      	subs	r3, r2, r3
 80170fe:	429a      	cmp	r2, r3
 8017100:	db0f      	blt.n	8017122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017102:	429d      	cmp	r5, r3
 8017104:	ddec      	ble.n	80170e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017106:	1953      	adds	r3, r2, r5
 8017108:	105b      	asrs	r3, r3, #1
 801710a:	e7e9      	b.n	80170e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801710c:	1c5d      	adds	r5, r3, #1
 801710e:	42aa      	cmp	r2, r5
 8017110:	db07      	blt.n	8017122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017112:	8a43      	ldrh	r3, [r0, #18]
 8017114:	1acb      	subs	r3, r1, r3
 8017116:	442b      	add	r3, r5
 8017118:	429d      	cmp	r5, r3
 801711a:	dc02      	bgt.n	8017122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801711c:	429a      	cmp	r2, r3
 801711e:	dadf      	bge.n	80170e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017120:	e7f1      	b.n	8017106 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017122:	2000      	movs	r0, #0
 8017124:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017126 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017126:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017128:	4604      	mov	r4, r0
 801712a:	4617      	mov	r7, r2
 801712c:	461e      	mov	r6, r3
 801712e:	b911      	cbnz	r1, 8017136 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017130:	2500      	movs	r5, #0
 8017132:	4628      	mov	r0, r5
 8017134:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017136:	290a      	cmp	r1, #10
 8017138:	d0fa      	beq.n	8017130 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801713a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801713e:	4291      	cmp	r1, r2
 8017140:	d0f6      	beq.n	8017130 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017142:	f242 020b 	movw	r2, #8203	; 0x200b
 8017146:	4291      	cmp	r1, r2
 8017148:	d0f2      	beq.n	8017130 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801714a:	f7ff ffaf 	bl	80170ac <_ZNK8touchgfx9ConstFont4findEt>
 801714e:	4605      	mov	r5, r0
 8017150:	b950      	cbnz	r0, 8017168 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8017152:	6823      	ldr	r3, [r4, #0]
 8017154:	4620      	mov	r0, r4
 8017156:	691b      	ldr	r3, [r3, #16]
 8017158:	4798      	blx	r3
 801715a:	4601      	mov	r1, r0
 801715c:	4620      	mov	r0, r4
 801715e:	f7ff ffa5 	bl	80170ac <_ZNK8touchgfx9ConstFont4findEt>
 8017162:	4605      	mov	r5, r0
 8017164:	2800      	cmp	r0, #0
 8017166:	d0e3      	beq.n	8017130 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017168:	6823      	ldr	r3, [r4, #0]
 801716a:	4629      	mov	r1, r5
 801716c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801716e:	4620      	mov	r0, r4
 8017170:	4798      	blx	r3
 8017172:	6038      	str	r0, [r7, #0]
 8017174:	6823      	ldr	r3, [r4, #0]
 8017176:	4620      	mov	r0, r4
 8017178:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801717a:	4798      	blx	r3
 801717c:	7030      	strb	r0, [r6, #0]
 801717e:	e7d8      	b.n	8017132 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017180 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8017180:	b538      	push	{r3, r4, r5, lr}
 8017182:	4605      	mov	r5, r0
 8017184:	f002 fb94 	bl	80198b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017188:	4604      	mov	r4, r0
 801718a:	4628      	mov	r0, r5
 801718c:	f002 fad4 	bl	8019738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017190:	2800      	cmp	r0, #0
 8017192:	bf14      	ite	ne
 8017194:	2002      	movne	r0, #2
 8017196:	2000      	moveq	r0, #0
 8017198:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801719c:	b280      	uxth	r0, r0
 801719e:	bd38      	pop	{r3, r4, r5, pc}

080171a0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80171a0:	b538      	push	{r3, r4, r5, lr}
 80171a2:	4605      	mov	r5, r0
 80171a4:	f002 fb84 	bl	80198b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80171a8:	4604      	mov	r4, r0
 80171aa:	4628      	mov	r0, r5
 80171ac:	f002 fac4 	bl	8019738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80171b0:	2800      	cmp	r0, #0
 80171b2:	bf14      	ite	ne
 80171b4:	2002      	movne	r0, #2
 80171b6:	2000      	moveq	r0, #0
 80171b8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80171bc:	f040 0001 	orr.w	r0, r0, #1
 80171c0:	b280      	uxth	r0, r0
 80171c2:	bd38      	pop	{r3, r4, r5, pc}

080171c4 <_ZN8touchgfx4clzuEm>:
 80171c4:	4603      	mov	r3, r0
 80171c6:	b1c8      	cbz	r0, 80171fc <_ZN8touchgfx4clzuEm+0x38>
 80171c8:	0c02      	lsrs	r2, r0, #16
 80171ca:	0412      	lsls	r2, r2, #16
 80171cc:	b9a2      	cbnz	r2, 80171f8 <_ZN8touchgfx4clzuEm+0x34>
 80171ce:	0403      	lsls	r3, r0, #16
 80171d0:	2010      	movs	r0, #16
 80171d2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80171d6:	bf04      	itt	eq
 80171d8:	021b      	lsleq	r3, r3, #8
 80171da:	3008      	addeq	r0, #8
 80171dc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80171e0:	bf04      	itt	eq
 80171e2:	011b      	lsleq	r3, r3, #4
 80171e4:	3004      	addeq	r0, #4
 80171e6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80171ea:	bf04      	itt	eq
 80171ec:	009b      	lsleq	r3, r3, #2
 80171ee:	3002      	addeq	r0, #2
 80171f0:	2b00      	cmp	r3, #0
 80171f2:	db04      	blt.n	80171fe <_ZN8touchgfx4clzuEm+0x3a>
 80171f4:	3001      	adds	r0, #1
 80171f6:	4770      	bx	lr
 80171f8:	2000      	movs	r0, #0
 80171fa:	e7ea      	b.n	80171d2 <_ZN8touchgfx4clzuEm+0xe>
 80171fc:	2020      	movs	r0, #32
 80171fe:	4770      	bx	lr

08017200 <_ZN8touchgfx7muldivuEmmmRm>:
 8017200:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017204:	460f      	mov	r7, r1
 8017206:	4615      	mov	r5, r2
 8017208:	461e      	mov	r6, r3
 801720a:	4601      	mov	r1, r0
 801720c:	b100      	cbz	r0, 8017210 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801720e:	b927      	cbnz	r7, 801721a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017210:	2000      	movs	r0, #0
 8017212:	6030      	str	r0, [r6, #0]
 8017214:	b002      	add	sp, #8
 8017216:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801721a:	f7ff ffd3 	bl	80171c4 <_ZN8touchgfx4clzuEm>
 801721e:	b980      	cbnz	r0, 8017242 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017220:	4638      	mov	r0, r7
 8017222:	f7ff ffcf 	bl	80171c4 <_ZN8touchgfx4clzuEm>
 8017226:	2800      	cmp	r0, #0
 8017228:	dd05      	ble.n	8017236 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801722a:	4633      	mov	r3, r6
 801722c:	462a      	mov	r2, r5
 801722e:	4638      	mov	r0, r7
 8017230:	f7ff ffe6 	bl	8017200 <_ZN8touchgfx7muldivuEmmmRm>
 8017234:	e7ee      	b.n	8017214 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017236:	f04f 33ff 	mov.w	r3, #4294967295
 801723a:	6033      	str	r3, [r6, #0]
 801723c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017240:	e7e8      	b.n	8017214 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017242:	fa37 f800 	lsrs.w	r8, r7, r0
 8017246:	fb07 f301 	mul.w	r3, r7, r1
 801724a:	d105      	bne.n	8017258 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801724c:	fbb3 f0f5 	udiv	r0, r3, r5
 8017250:	fb05 3510 	mls	r5, r5, r0, r3
 8017254:	6035      	str	r5, [r6, #0]
 8017256:	e7dd      	b.n	8017214 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017258:	2301      	movs	r3, #1
 801725a:	fa01 fa00 	lsl.w	sl, r1, r0
 801725e:	fa03 f000 	lsl.w	r0, r3, r0
 8017262:	3801      	subs	r0, #1
 8017264:	462a      	mov	r2, r5
 8017266:	4633      	mov	r3, r6
 8017268:	4038      	ands	r0, r7
 801726a:	f7ff ffc9 	bl	8017200 <_ZN8touchgfx7muldivuEmmmRm>
 801726e:	fbba f9f5 	udiv	r9, sl, r5
 8017272:	462a      	mov	r2, r5
 8017274:	4607      	mov	r7, r0
 8017276:	ab01      	add	r3, sp, #4
 8017278:	fb05 a119 	mls	r1, r5, r9, sl
 801727c:	4640      	mov	r0, r8
 801727e:	f7ff ffbf 	bl	8017200 <_ZN8touchgfx7muldivuEmmmRm>
 8017282:	9b01      	ldr	r3, [sp, #4]
 8017284:	6832      	ldr	r2, [r6, #0]
 8017286:	fb08 f409 	mul.w	r4, r8, r9
 801728a:	441a      	add	r2, r3
 801728c:	fbb2 f3f5 	udiv	r3, r2, r5
 8017290:	441c      	add	r4, r3
 8017292:	443c      	add	r4, r7
 8017294:	4420      	add	r0, r4
 8017296:	fb05 2513 	mls	r5, r5, r3, r2
 801729a:	e7db      	b.n	8017254 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801729c <_ZN8touchgfx6muldivElllRl>:
 801729c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801729e:	2800      	cmp	r0, #0
 80172a0:	bfba      	itte	lt
 80172a2:	4240      	neglt	r0, r0
 80172a4:	f04f 34ff 	movlt.w	r4, #4294967295
 80172a8:	2401      	movge	r4, #1
 80172aa:	2900      	cmp	r1, #0
 80172ac:	bfbc      	itt	lt
 80172ae:	4249      	neglt	r1, r1
 80172b0:	4264      	neglt	r4, r4
 80172b2:	2a00      	cmp	r2, #0
 80172b4:	bfb6      	itet	lt
 80172b6:	4265      	neglt	r5, r4
 80172b8:	4625      	movge	r5, r4
 80172ba:	4252      	neglt	r2, r2
 80172bc:	4288      	cmp	r0, r1
 80172be:	461e      	mov	r6, r3
 80172c0:	bfc2      	ittt	gt
 80172c2:	4603      	movgt	r3, r0
 80172c4:	4608      	movgt	r0, r1
 80172c6:	4619      	movgt	r1, r3
 80172c8:	ab01      	add	r3, sp, #4
 80172ca:	f7ff ff99 	bl	8017200 <_ZN8touchgfx7muldivuEmmmRm>
 80172ce:	9b01      	ldr	r3, [sp, #4]
 80172d0:	4368      	muls	r0, r5
 80172d2:	435c      	muls	r4, r3
 80172d4:	6034      	str	r4, [r6, #0]
 80172d6:	b002      	add	sp, #8
 80172d8:	bd70      	pop	{r4, r5, r6, pc}

080172da <_ZN8touchgfx6muldivElll>:
 80172da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80172dc:	4606      	mov	r6, r0
 80172de:	ab01      	add	r3, sp, #4
 80172e0:	460d      	mov	r5, r1
 80172e2:	4614      	mov	r4, r2
 80172e4:	f7ff ffda 	bl	801729c <_ZN8touchgfx6muldivElllRl>
 80172e8:	2e00      	cmp	r6, #0
 80172ea:	db20      	blt.n	801732e <_ZN8touchgfx6muldivElll+0x54>
 80172ec:	bf14      	ite	ne
 80172ee:	2301      	movne	r3, #1
 80172f0:	2300      	moveq	r3, #0
 80172f2:	2d00      	cmp	r5, #0
 80172f4:	db1e      	blt.n	8017334 <_ZN8touchgfx6muldivElll+0x5a>
 80172f6:	bf14      	ite	ne
 80172f8:	2201      	movne	r2, #1
 80172fa:	2200      	moveq	r2, #0
 80172fc:	2c00      	cmp	r4, #0
 80172fe:	fb03 f202 	mul.w	r2, r3, r2
 8017302:	db1a      	blt.n	801733a <_ZN8touchgfx6muldivElll+0x60>
 8017304:	bf14      	ite	ne
 8017306:	2301      	movne	r3, #1
 8017308:	2300      	moveq	r3, #0
 801730a:	4353      	muls	r3, r2
 801730c:	2b01      	cmp	r3, #1
 801730e:	d117      	bne.n	8017340 <_ZN8touchgfx6muldivElll+0x66>
 8017310:	9b01      	ldr	r3, [sp, #4]
 8017312:	2c00      	cmp	r4, #0
 8017314:	bfb8      	it	lt
 8017316:	4264      	neglt	r4, r4
 8017318:	2b00      	cmp	r3, #0
 801731a:	f104 0401 	add.w	r4, r4, #1
 801731e:	bfb8      	it	lt
 8017320:	425b      	neglt	r3, r3
 8017322:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017326:	db00      	blt.n	801732a <_ZN8touchgfx6muldivElll+0x50>
 8017328:	3001      	adds	r0, #1
 801732a:	b002      	add	sp, #8
 801732c:	bd70      	pop	{r4, r5, r6, pc}
 801732e:	f04f 33ff 	mov.w	r3, #4294967295
 8017332:	e7de      	b.n	80172f2 <_ZN8touchgfx6muldivElll+0x18>
 8017334:	f04f 32ff 	mov.w	r2, #4294967295
 8017338:	e7e0      	b.n	80172fc <_ZN8touchgfx6muldivElll+0x22>
 801733a:	f04f 33ff 	mov.w	r3, #4294967295
 801733e:	e7e4      	b.n	801730a <_ZN8touchgfx6muldivElll+0x30>
 8017340:	3301      	adds	r3, #1
 8017342:	d1f2      	bne.n	801732a <_ZN8touchgfx6muldivElll+0x50>
 8017344:	9b01      	ldr	r3, [sp, #4]
 8017346:	2c00      	cmp	r4, #0
 8017348:	bfb8      	it	lt
 801734a:	4264      	neglt	r4, r4
 801734c:	2b00      	cmp	r3, #0
 801734e:	bfb8      	it	lt
 8017350:	425b      	neglt	r3, r3
 8017352:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017356:	bfc8      	it	gt
 8017358:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801735c:	e7e5      	b.n	801732a <_ZN8touchgfx6muldivElll+0x50>

0801735e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801735e:	2000      	movs	r0, #0
 8017360:	4770      	bx	lr

08017362 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8017362:	2001      	movs	r0, #1
 8017364:	4770      	bx	lr

08017366 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017366:	2002      	movs	r0, #2
 8017368:	4770      	bx	lr

0801736a <_ZN8touchgfx6ScreenD1Ev>:
 801736a:	4770      	bx	lr

0801736c <_ZN8touchgfx12GestureEventD1Ev>:
 801736c:	4770      	bx	lr

0801736e <_ZN8touchgfx9DragEventD1Ev>:
 801736e:	4770      	bx	lr

08017370 <_ZN8touchgfx10ClickEventD1Ev>:
 8017370:	4770      	bx	lr

08017372 <_ZN8touchgfx10ClickEventD0Ev>:
 8017372:	b510      	push	{r4, lr}
 8017374:	210c      	movs	r1, #12
 8017376:	4604      	mov	r4, r0
 8017378:	f012 fd8f 	bl	8029e9a <_ZdlPvj>
 801737c:	4620      	mov	r0, r4
 801737e:	bd10      	pop	{r4, pc}

08017380 <_ZN8touchgfx9DragEventD0Ev>:
 8017380:	b510      	push	{r4, lr}
 8017382:	2110      	movs	r1, #16
 8017384:	4604      	mov	r4, r0
 8017386:	f012 fd88 	bl	8029e9a <_ZdlPvj>
 801738a:	4620      	mov	r0, r4
 801738c:	bd10      	pop	{r4, pc}

0801738e <_ZN8touchgfx12GestureEventD0Ev>:
 801738e:	b510      	push	{r4, lr}
 8017390:	210c      	movs	r1, #12
 8017392:	4604      	mov	r4, r0
 8017394:	f012 fd81 	bl	8029e9a <_ZdlPvj>
 8017398:	4620      	mov	r0, r4
 801739a:	bd10      	pop	{r4, pc}

0801739c <_ZN8touchgfx6ScreenD0Ev>:
 801739c:	b510      	push	{r4, lr}
 801739e:	213c      	movs	r1, #60	; 0x3c
 80173a0:	4604      	mov	r4, r0
 80173a2:	f012 fd7a 	bl	8029e9a <_ZdlPvj>
 80173a6:	4620      	mov	r0, r4
 80173a8:	bd10      	pop	{r4, pc}
	...

080173ac <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80173ac:	b530      	push	{r4, r5, lr}
 80173ae:	460d      	mov	r5, r1
 80173b0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80173b2:	b087      	sub	sp, #28
 80173b4:	4604      	mov	r4, r0
 80173b6:	b301      	cbz	r1, 80173fa <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80173b8:	a801      	add	r0, sp, #4
 80173ba:	f7ff fe3d 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80173be:	892a      	ldrh	r2, [r5, #8]
 80173c0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80173c4:	7928      	ldrb	r0, [r5, #4]
 80173c6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80173ca:	f88d 0010 	strb.w	r0, [sp, #16]
 80173ce:	1ad2      	subs	r2, r2, r3
 80173d0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80173d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80173d4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80173d8:	441a      	add	r2, r3
 80173da:	896b      	ldrh	r3, [r5, #10]
 80173dc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80173e0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80173e4:	1b5b      	subs	r3, r3, r5
 80173e6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80173e8:	442b      	add	r3, r5
 80173ea:	4d05      	ldr	r5, [pc, #20]	; (8017400 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80173ec:	9503      	str	r5, [sp, #12]
 80173ee:	f8ad 3016 	strh.w	r3, [sp, #22]
 80173f2:	6803      	ldr	r3, [r0, #0]
 80173f4:	a903      	add	r1, sp, #12
 80173f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80173f8:	4798      	blx	r3
 80173fa:	b007      	add	sp, #28
 80173fc:	bd30      	pop	{r4, r5, pc}
 80173fe:	bf00      	nop
 8017400:	0802f024 	.word	0x0802f024

08017404 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017408:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801740a:	b08a      	sub	sp, #40	; 0x28
 801740c:	4604      	mov	r4, r0
 801740e:	460d      	mov	r5, r1
 8017410:	b113      	cbz	r3, 8017418 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017412:	790b      	ldrb	r3, [r1, #4]
 8017414:	2b00      	cmp	r3, #0
 8017416:	d044      	beq.n	80174a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017418:	f104 0804 	add.w	r8, r4, #4
 801741c:	4641      	mov	r1, r8
 801741e:	a803      	add	r0, sp, #12
 8017420:	f7ff fe0a 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017424:	792b      	ldrb	r3, [r5, #4]
 8017426:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801742a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801742e:	b983      	cbnz	r3, 8017452 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017430:	892a      	ldrh	r2, [r5, #8]
 8017432:	88e9      	ldrh	r1, [r5, #6]
 8017434:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017438:	1b92      	subs	r2, r2, r6
 801743a:	1bc9      	subs	r1, r1, r7
 801743c:	9301      	str	r3, [sp, #4]
 801743e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017442:	9300      	str	r3, [sp, #0]
 8017444:	b212      	sxth	r2, r2
 8017446:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801744a:	b209      	sxth	r1, r1
 801744c:	4640      	mov	r0, r8
 801744e:	f7f8 fc39 	bl	800fcc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017452:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017454:	b329      	cbz	r1, 80174a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017456:	a805      	add	r0, sp, #20
 8017458:	f7ff fdee 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801745c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017460:	792b      	ldrb	r3, [r5, #4]
 8017462:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017464:	f88d 3020 	strb.w	r3, [sp, #32]
 8017468:	1abf      	subs	r7, r7, r2
 801746a:	88ea      	ldrh	r2, [r5, #6]
 801746c:	4417      	add	r7, r2
 801746e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017470:	4417      	add	r7, r2
 8017472:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017476:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801747a:	1ab6      	subs	r6, r6, r2
 801747c:	892a      	ldrh	r2, [r5, #8]
 801747e:	4416      	add	r6, r2
 8017480:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017482:	4416      	add	r6, r2
 8017484:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017488:	4a07      	ldr	r2, [pc, #28]	; (80174a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801748a:	9207      	str	r2, [sp, #28]
 801748c:	2600      	movs	r6, #0
 801748e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017492:	6803      	ldr	r3, [r0, #0]
 8017494:	a907      	add	r1, sp, #28
 8017496:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017498:	4798      	blx	r3
 801749a:	792b      	ldrb	r3, [r5, #4]
 801749c:	b10b      	cbz	r3, 80174a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801749e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80174a2:	b00a      	add	sp, #40	; 0x28
 80174a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80174a8:	0802effc 	.word	0x0802effc

080174ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80174ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80174b0:	460c      	mov	r4, r1
 80174b2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80174b4:	b088      	sub	sp, #32
 80174b6:	4605      	mov	r5, r0
 80174b8:	2900      	cmp	r1, #0
 80174ba:	d06d      	beq.n	8017598 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80174bc:	4668      	mov	r0, sp
 80174be:	f7ff fdbb 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80174c2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80174c4:	88e3      	ldrh	r3, [r4, #6]
 80174c6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80174ca:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80174ce:	440b      	add	r3, r1
 80174d0:	b21b      	sxth	r3, r3
 80174d2:	4543      	cmp	r3, r8
 80174d4:	db31      	blt.n	801753a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80174d6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80174da:	44c4      	add	ip, r8
 80174dc:	fa0f fc8c 	sxth.w	ip, ip
 80174e0:	4563      	cmp	r3, ip
 80174e2:	da2a      	bge.n	801753a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80174e4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80174e6:	8926      	ldrh	r6, [r4, #8]
 80174e8:	4416      	add	r6, r2
 80174ea:	b236      	sxth	r6, r6
 80174ec:	42be      	cmp	r6, r7
 80174ee:	db24      	blt.n	801753a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80174f0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80174f4:	4438      	add	r0, r7
 80174f6:	b200      	sxth	r0, r0
 80174f8:	4286      	cmp	r6, r0
 80174fa:	da1e      	bge.n	801753a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80174fc:	8963      	ldrh	r3, [r4, #10]
 80174fe:	4419      	add	r1, r3
 8017500:	b209      	sxth	r1, r1
 8017502:	4541      	cmp	r1, r8
 8017504:	db08      	blt.n	8017518 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017506:	4561      	cmp	r1, ip
 8017508:	da06      	bge.n	8017518 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801750a:	89a3      	ldrh	r3, [r4, #12]
 801750c:	441a      	add	r2, r3
 801750e:	b212      	sxth	r2, r2
 8017510:	42ba      	cmp	r2, r7
 8017512:	db01      	blt.n	8017518 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017514:	4282      	cmp	r2, r0
 8017516:	db10      	blt.n	801753a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017518:	4b21      	ldr	r3, [pc, #132]	; (80175a0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801751a:	9304      	str	r3, [sp, #16]
 801751c:	2302      	movs	r3, #2
 801751e:	f88d 3014 	strb.w	r3, [sp, #20]
 8017522:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017524:	2300      	movs	r3, #0
 8017526:	f8ad 3016 	strh.w	r3, [sp, #22]
 801752a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801752e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017532:	6803      	ldr	r3, [r0, #0]
 8017534:	a904      	add	r1, sp, #16
 8017536:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017538:	4798      	blx	r3
 801753a:	1d29      	adds	r1, r5, #4
 801753c:	a802      	add	r0, sp, #8
 801753e:	f7ff fd7b 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017542:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017546:	88e0      	ldrh	r0, [r4, #6]
 8017548:	7921      	ldrb	r1, [r4, #4]
 801754a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801754e:	8922      	ldrh	r2, [r4, #8]
 8017550:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017552:	f88d 1014 	strb.w	r1, [sp, #20]
 8017556:	eba3 0808 	sub.w	r8, r3, r8
 801755a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801755e:	1bdf      	subs	r7, r3, r7
 8017560:	b2bb      	uxth	r3, r7
 8017562:	fa1f f888 	uxth.w	r8, r8
 8017566:	8967      	ldrh	r7, [r4, #10]
 8017568:	89a4      	ldrh	r4, [r4, #12]
 801756a:	4440      	add	r0, r8
 801756c:	4460      	add	r0, ip
 801756e:	441a      	add	r2, r3
 8017570:	44b8      	add	r8, r7
 8017572:	4423      	add	r3, r4
 8017574:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017578:	4433      	add	r3, r6
 801757a:	4432      	add	r2, r6
 801757c:	44e0      	add	r8, ip
 801757e:	4c09      	ldr	r4, [pc, #36]	; (80175a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017580:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017582:	9404      	str	r4, [sp, #16]
 8017584:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017588:	f8ad 801a 	strh.w	r8, [sp, #26]
 801758c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017590:	6803      	ldr	r3, [r0, #0]
 8017592:	a904      	add	r1, sp, #16
 8017594:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017596:	4798      	blx	r3
 8017598:	b008      	add	sp, #32
 801759a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801759e:	bf00      	nop
 80175a0:	0802effc 	.word	0x0802effc
 80175a4:	0802f010 	.word	0x0802f010

080175a8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80175a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80175aa:	4604      	mov	r4, r0
 80175ac:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80175b0:	3201      	adds	r2, #1
 80175b2:	d112      	bne.n	80175da <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80175b4:	6803      	ldr	r3, [r0, #0]
 80175b6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80175ba:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80175be:	f8ad 1004 	strh.w	r1, [sp, #4]
 80175c2:	2500      	movs	r5, #0
 80175c4:	9500      	str	r5, [sp, #0]
 80175c6:	466d      	mov	r5, sp
 80175c8:	4629      	mov	r1, r5
 80175ca:	f8ad 2006 	strh.w	r2, [sp, #6]
 80175ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80175d0:	4798      	blx	r3
 80175d2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80175d6:	e884 0003 	stmia.w	r4, {r0, r1}
 80175da:	4620      	mov	r0, r4
 80175dc:	b003      	add	sp, #12
 80175de:	bd30      	pop	{r4, r5, pc}

080175e0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80175e0:	b513      	push	{r0, r1, r4, lr}
 80175e2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80175e6:	3301      	adds	r3, #1
 80175e8:	4604      	mov	r4, r0
 80175ea:	d109      	bne.n	8017600 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80175ec:	4601      	mov	r1, r0
 80175ee:	4668      	mov	r0, sp
 80175f0:	f7ff fd22 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80175f4:	f8bd 3000 	ldrh.w	r3, [sp]
 80175f8:	8423      	strh	r3, [r4, #32]
 80175fa:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80175fe:	8463      	strh	r3, [r4, #34]	; 0x22
 8017600:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017604:	b002      	add	sp, #8
 8017606:	bd10      	pop	{r4, pc}

08017608 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017608:	b513      	push	{r0, r1, r4, lr}
 801760a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801760e:	3301      	adds	r3, #1
 8017610:	4604      	mov	r4, r0
 8017612:	d109      	bne.n	8017628 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017614:	4601      	mov	r1, r0
 8017616:	4668      	mov	r0, sp
 8017618:	f7ff fd0e 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801761c:	f8bd 3000 	ldrh.w	r3, [sp]
 8017620:	8423      	strh	r3, [r4, #32]
 8017622:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017626:	8463      	strh	r3, [r4, #34]	; 0x22
 8017628:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801762c:	b002      	add	sp, #8
 801762e:	bd10      	pop	{r4, pc}

08017630 <_ZN8touchgfx6ScreenC1Ev>:
 8017630:	b570      	push	{r4, r5, r6, lr}
 8017632:	4605      	mov	r5, r0
 8017634:	4b16      	ldr	r3, [pc, #88]	; (8017690 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017636:	f845 3b04 	str.w	r3, [r5], #4
 801763a:	2300      	movs	r3, #0
 801763c:	8103      	strh	r3, [r0, #8]
 801763e:	8143      	strh	r3, [r0, #10]
 8017640:	8183      	strh	r3, [r0, #12]
 8017642:	81c3      	strh	r3, [r0, #14]
 8017644:	8203      	strh	r3, [r0, #16]
 8017646:	8243      	strh	r3, [r0, #18]
 8017648:	8283      	strh	r3, [r0, #20]
 801764a:	82c3      	strh	r3, [r0, #22]
 801764c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017650:	6203      	str	r3, [r0, #32]
 8017652:	8483      	strh	r3, [r0, #36]	; 0x24
 8017654:	84c3      	strh	r3, [r0, #38]	; 0x26
 8017656:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801765a:	4a0e      	ldr	r2, [pc, #56]	; (8017694 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801765c:	6343      	str	r3, [r0, #52]	; 0x34
 801765e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8017662:	4b0d      	ldr	r3, [pc, #52]	; (8017698 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8017664:	6042      	str	r2, [r0, #4]
 8017666:	f9b3 6000 	ldrsh.w	r6, [r3]
 801766a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801766c:	4a0b      	ldr	r2, [pc, #44]	; (801769c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801766e:	4604      	mov	r4, r0
 8017670:	2101      	movs	r1, #1
 8017672:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8017676:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801767a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801767e:	4628      	mov	r0, r5
 8017680:	4798      	blx	r3
 8017682:	6863      	ldr	r3, [r4, #4]
 8017684:	4628      	mov	r0, r5
 8017686:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017688:	4631      	mov	r1, r6
 801768a:	4798      	blx	r3
 801768c:	4620      	mov	r0, r4
 801768e:	bd70      	pop	{r4, r5, r6, pc}
 8017690:	0802f038 	.word	0x0802f038
 8017694:	0802e6bc 	.word	0x0802e6bc
 8017698:	200132b2 	.word	0x200132b2
 801769c:	200132b0 	.word	0x200132b0

080176a0 <_ZN8touchgfx6Screen4drawEv>:
 80176a0:	b507      	push	{r0, r1, r2, lr}
 80176a2:	4b09      	ldr	r3, [pc, #36]	; (80176c8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80176a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80176a8:	4b08      	ldr	r3, [pc, #32]	; (80176cc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80176aa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80176ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80176b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80176b6:	6803      	ldr	r3, [r0, #0]
 80176b8:	2100      	movs	r1, #0
 80176ba:	9100      	str	r1, [sp, #0]
 80176bc:	689b      	ldr	r3, [r3, #8]
 80176be:	4669      	mov	r1, sp
 80176c0:	4798      	blx	r3
 80176c2:	b003      	add	sp, #12
 80176c4:	f85d fb04 	ldr.w	pc, [sp], #4
 80176c8:	200132b0 	.word	0x200132b0
 80176cc:	200132b2 	.word	0x200132b2

080176d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80176d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176d4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80176d8:	2b00      	cmp	r3, #0
 80176da:	b089      	sub	sp, #36	; 0x24
 80176dc:	4680      	mov	r8, r0
 80176de:	460c      	mov	r4, r1
 80176e0:	4615      	mov	r5, r2
 80176e2:	dd0e      	ble.n	8017702 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80176e4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80176e8:	2b00      	cmp	r3, #0
 80176ea:	dd0a      	ble.n	8017702 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80176ec:	4628      	mov	r0, r5
 80176ee:	f7ff ff5b 	bl	80175a8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80176f2:	4621      	mov	r1, r4
 80176f4:	f7fe fa3d 	bl	8015b72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80176f8:	69eb      	ldr	r3, [r5, #28]
 80176fa:	b928      	cbnz	r0, 8017708 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80176fc:	461d      	mov	r5, r3
 80176fe:	2b00      	cmp	r3, #0
 8017700:	d1f4      	bne.n	80176ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017702:	b009      	add	sp, #36	; 0x24
 8017704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017708:	ae04      	add	r6, sp, #16
 801770a:	2b00      	cmp	r3, #0
 801770c:	f000 80b5 	beq.w	801787a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017710:	682b      	ldr	r3, [r5, #0]
 8017712:	4629      	mov	r1, r5
 8017714:	68db      	ldr	r3, [r3, #12]
 8017716:	a802      	add	r0, sp, #8
 8017718:	4798      	blx	r3
 801771a:	4628      	mov	r0, r5
 801771c:	f7ff ff60 	bl	80175e0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017720:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017724:	4407      	add	r7, r0
 8017726:	4628      	mov	r0, r5
 8017728:	f7ff ff6e 	bl	8017608 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801772c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017730:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017734:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017738:	4418      	add	r0, r3
 801773a:	4621      	mov	r1, r4
 801773c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017740:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017744:	b23f      	sxth	r7, r7
 8017746:	4630      	mov	r0, r6
 8017748:	f8ad 3016 	strh.w	r3, [sp, #22]
 801774c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017750:	f7f8 fb9c 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 8017754:	4628      	mov	r0, r5
 8017756:	f7ff ff27 	bl	80175a8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801775a:	4602      	mov	r2, r0
 801775c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017760:	ab06      	add	r3, sp, #24
 8017762:	e883 0003 	stmia.w	r3, {r0, r1}
 8017766:	4611      	mov	r1, r2
 8017768:	4618      	mov	r0, r3
 801776a:	f7f8 fb8f 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 801776e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017772:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017776:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801777a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801777e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8017782:	4299      	cmp	r1, r3
 8017784:	d10b      	bne.n	801779e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017786:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801778a:	4552      	cmp	r2, sl
 801778c:	d107      	bne.n	801779e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801778e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017792:	455a      	cmp	r2, fp
 8017794:	d103      	bne.n	801779e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017796:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801779a:	454a      	cmp	r2, r9
 801779c:	d06d      	beq.n	801787a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801779e:	f1bb 0f00 	cmp.w	fp, #0
 80177a2:	dd65      	ble.n	8017870 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80177a4:	f1b9 0f00 	cmp.w	r9, #0
 80177a8:	dd62      	ble.n	8017870 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80177aa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80177ae:	fa1f f08a 	uxth.w	r0, sl
 80177b2:	4552      	cmp	r2, sl
 80177b4:	9000      	str	r0, [sp, #0]
 80177b6:	da12      	bge.n	80177de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80177b8:	9301      	str	r3, [sp, #4]
 80177ba:	9b00      	ldr	r3, [sp, #0]
 80177bc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80177c0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80177c4:	1a9a      	subs	r2, r3, r2
 80177c6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80177ca:	f8ad 0014 	strh.w	r0, [sp, #20]
 80177ce:	f8ad 2016 	strh.w	r2, [sp, #22]
 80177d2:	69ea      	ldr	r2, [r5, #28]
 80177d4:	4631      	mov	r1, r6
 80177d6:	4640      	mov	r0, r8
 80177d8:	f7ff ff7a 	bl	80176d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80177dc:	9b01      	ldr	r3, [sp, #4]
 80177de:	f9b4 2000 	ldrsh.w	r2, [r4]
 80177e2:	429a      	cmp	r2, r3
 80177e4:	b29f      	uxth	r7, r3
 80177e6:	da0d      	bge.n	8017804 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80177e8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80177ec:	1aba      	subs	r2, r7, r2
 80177ee:	f8ad a012 	strh.w	sl, [sp, #18]
 80177f2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80177f6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80177fa:	69ea      	ldr	r2, [r5, #28]
 80177fc:	4631      	mov	r1, r6
 80177fe:	4640      	mov	r0, r8
 8017800:	f7ff ff66 	bl	80176d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017804:	8822      	ldrh	r2, [r4, #0]
 8017806:	88a3      	ldrh	r3, [r4, #4]
 8017808:	445f      	add	r7, fp
 801780a:	4413      	add	r3, r2
 801780c:	b29b      	uxth	r3, r3
 801780e:	b2bf      	uxth	r7, r7
 8017810:	b23a      	sxth	r2, r7
 8017812:	b219      	sxth	r1, r3
 8017814:	4291      	cmp	r1, r2
 8017816:	dd0d      	ble.n	8017834 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017818:	1bdb      	subs	r3, r3, r7
 801781a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801781e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017822:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017826:	f8ad 9016 	strh.w	r9, [sp, #22]
 801782a:	69ea      	ldr	r2, [r5, #28]
 801782c:	4631      	mov	r1, r6
 801782e:	4640      	mov	r0, r8
 8017830:	f7ff ff4e 	bl	80176d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017834:	88e2      	ldrh	r2, [r4, #6]
 8017836:	8863      	ldrh	r3, [r4, #2]
 8017838:	4413      	add	r3, r2
 801783a:	9a00      	ldr	r2, [sp, #0]
 801783c:	444a      	add	r2, r9
 801783e:	b29b      	uxth	r3, r3
 8017840:	fa1f f982 	uxth.w	r9, r2
 8017844:	fa0f f289 	sxth.w	r2, r9
 8017848:	b219      	sxth	r1, r3
 801784a:	428a      	cmp	r2, r1
 801784c:	da15      	bge.n	801787a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801784e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017852:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017856:	f8ad 1014 	strh.w	r1, [sp, #20]
 801785a:	eba3 0309 	sub.w	r3, r3, r9
 801785e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017862:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017866:	f8ad 3016 	strh.w	r3, [sp, #22]
 801786a:	69ea      	ldr	r2, [r5, #28]
 801786c:	4631      	mov	r1, r6
 801786e:	e001      	b.n	8017874 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017870:	69ea      	ldr	r2, [r5, #28]
 8017872:	4621      	mov	r1, r4
 8017874:	4640      	mov	r0, r8
 8017876:	f7ff ff2b 	bl	80176d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801787a:	4628      	mov	r0, r5
 801787c:	f7ff fe94 	bl	80175a8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017880:	6861      	ldr	r1, [r4, #4]
 8017882:	4602      	mov	r2, r0
 8017884:	6820      	ldr	r0, [r4, #0]
 8017886:	4633      	mov	r3, r6
 8017888:	c303      	stmia	r3!, {r0, r1}
 801788a:	4611      	mov	r1, r2
 801788c:	4630      	mov	r0, r6
 801788e:	f7f8 fafd 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 8017892:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017896:	2b00      	cmp	r3, #0
 8017898:	f77f af33 	ble.w	8017702 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801789c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80178a0:	2b00      	cmp	r3, #0
 80178a2:	f77f af2e 	ble.w	8017702 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80178a6:	4628      	mov	r0, r5
 80178a8:	f7ff fe9a 	bl	80175e0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80178ac:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80178b0:	1a18      	subs	r0, r3, r0
 80178b2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80178b6:	4628      	mov	r0, r5
 80178b8:	f7ff fea6 	bl	8017608 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80178bc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80178c0:	1a18      	subs	r0, r3, r0
 80178c2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80178c6:	682b      	ldr	r3, [r5, #0]
 80178c8:	4631      	mov	r1, r6
 80178ca:	689b      	ldr	r3, [r3, #8]
 80178cc:	4628      	mov	r0, r5
 80178ce:	4798      	blx	r3
 80178d0:	e717      	b.n	8017702 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080178d2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80178d2:	b570      	push	{r4, r5, r6, lr}
 80178d4:	460c      	mov	r4, r1
 80178d6:	b086      	sub	sp, #24
 80178d8:	1d06      	adds	r6, r0, #4
 80178da:	2300      	movs	r3, #0
 80178dc:	4631      	mov	r1, r6
 80178de:	4605      	mov	r5, r0
 80178e0:	a802      	add	r0, sp, #8
 80178e2:	9301      	str	r3, [sp, #4]
 80178e4:	f7ff fba8 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80178e8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80178ec:	8822      	ldrh	r2, [r4, #0]
 80178ee:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80178f2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80178f6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80178fa:	1ad2      	subs	r2, r2, r3
 80178fc:	8863      	ldrh	r3, [r4, #2]
 80178fe:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017902:	1a5b      	subs	r3, r3, r1
 8017904:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017908:	f8ad 1016 	strh.w	r1, [sp, #22]
 801790c:	aa01      	add	r2, sp, #4
 801790e:	a904      	add	r1, sp, #16
 8017910:	4630      	mov	r0, r6
 8017912:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017916:	f7f8 fb91 	bl	801003c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801791a:	9a01      	ldr	r2, [sp, #4]
 801791c:	b11a      	cbz	r2, 8017926 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801791e:	4621      	mov	r1, r4
 8017920:	4628      	mov	r0, r5
 8017922:	f7ff fed5 	bl	80176d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017926:	b006      	add	sp, #24
 8017928:	bd70      	pop	{r4, r5, r6, pc}

0801792a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801792a:	b530      	push	{r4, r5, lr}
 801792c:	4602      	mov	r2, r0
 801792e:	4604      	mov	r4, r0
 8017930:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017934:	b085      	sub	sp, #20
 8017936:	460d      	mov	r5, r1
 8017938:	6851      	ldr	r1, [r2, #4]
 801793a:	466b      	mov	r3, sp
 801793c:	c303      	stmia	r3!, {r0, r1}
 801793e:	4629      	mov	r1, r5
 8017940:	4668      	mov	r0, sp
 8017942:	f7f8 faa3 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 8017946:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801794a:	b12b      	cbz	r3, 8017958 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801794c:	4669      	mov	r1, sp
 801794e:	4620      	mov	r0, r4
 8017950:	f7ff ffbf 	bl	80178d2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8017954:	b005      	add	sp, #20
 8017956:	bd30      	pop	{r4, r5, pc}
 8017958:	3404      	adds	r4, #4
 801795a:	4621      	mov	r1, r4
 801795c:	a802      	add	r0, sp, #8
 801795e:	f7ff fb6b 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017962:	f8bd 3000 	ldrh.w	r3, [sp]
 8017966:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801796a:	1a9b      	subs	r3, r3, r2
 801796c:	f8ad 3000 	strh.w	r3, [sp]
 8017970:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017974:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017978:	4669      	mov	r1, sp
 801797a:	1a9b      	subs	r3, r3, r2
 801797c:	4620      	mov	r0, r4
 801797e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017982:	f7f8 fb22 	bl	800ffca <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017986:	e7e5      	b.n	8017954 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017988 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017988:	680a      	ldr	r2, [r1, #0]
 801798a:	460b      	mov	r3, r1
 801798c:	6992      	ldr	r2, [r2, #24]
 801798e:	1d01      	adds	r1, r0, #4
 8017990:	4618      	mov	r0, r3
 8017992:	4710      	bx	r2

08017994 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8017994:	4298      	cmp	r0, r3
 8017996:	d200      	bcs.n	801799a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8017998:	b913      	cbnz	r3, 80179a0 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801799a:	440a      	add	r2, r1
 801799c:	b210      	sxth	r0, r2
 801799e:	4770      	bx	lr
 80179a0:	ee07 0a90 	vmov	s15, r0
 80179a4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80179a8:	ee07 3a90 	vmov	s15, r3
 80179ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80179b0:	eddf 4a15 	vldr	s9, [pc, #84]	; 8017a08 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 80179b4:	eddf 5a15 	vldr	s11, [pc, #84]	; 8017a0c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 80179b8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80179bc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80179c0:	ee37 7a66 	vsub.f32	s14, s14, s13
 80179c4:	ee07 2a90 	vmov	s15, r2
 80179c8:	eee7 5a24 	vfma.f32	s11, s14, s9
 80179cc:	ee27 5a07 	vmul.f32	s10, s14, s14
 80179d0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80179d4:	eee5 6a25 	vfma.f32	s13, s10, s11
 80179d8:	ee07 1a90 	vmov	s15, r1
 80179dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80179e0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80179e4:	eee6 7a26 	vfma.f32	s15, s12, s13
 80179e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80179ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80179f0:	bfcc      	ite	gt
 80179f2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80179f6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80179fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80179fe:	ee17 3a90 	vmov	r3, s15
 8017a02:	b218      	sxth	r0, r3
 8017a04:	4770      	bx	lr
 8017a06:	bf00      	nop
 8017a08:	402ce6b0 	.word	0x402ce6b0
 8017a0c:	3fd9cd60 	.word	0x3fd9cd60

08017a10 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8017a10:	4298      	cmp	r0, r3
 8017a12:	d200      	bcs.n	8017a16 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8017a14:	b913      	cbnz	r3, 8017a1c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8017a16:	440a      	add	r2, r1
 8017a18:	b210      	sxth	r0, r2
 8017a1a:	4770      	bx	lr
 8017a1c:	ee07 0a90 	vmov	s15, r0
 8017a20:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017a24:	ee07 3a90 	vmov	s15, r3
 8017a28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a2c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017a30:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017a34:	ee37 7a66 	vsub.f32	s14, s14, s13
 8017a38:	ee07 2a90 	vmov	s15, r2
 8017a3c:	ee67 5a07 	vmul.f32	s11, s14, s14
 8017a40:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017a44:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017a48:	ee07 1a90 	vmov	s15, r1
 8017a4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a50:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017a54:	eee6 7a26 	vfma.f32	s15, s12, s13
 8017a58:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017a5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a60:	bfcc      	ite	gt
 8017a62:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017a66:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017a6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017a6e:	ee17 3a90 	vmov	r3, s15
 8017a72:	b218      	sxth	r0, r3
 8017a74:	4770      	bx	lr

08017a76 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8017a76:	4298      	cmp	r0, r3
 8017a78:	d200      	bcs.n	8017a7c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8017a7a:	b913      	cbnz	r3, 8017a82 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017a7c:	440a      	add	r2, r1
 8017a7e:	b210      	sxth	r0, r2
 8017a80:	4770      	bx	lr
 8017a82:	ee07 2a90 	vmov	s15, r2
 8017a86:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017a8a:	ee07 0a90 	vmov	s15, r0
 8017a8e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017a92:	ee67 7a27 	vmul.f32	s15, s14, s15
 8017a96:	ee07 3a10 	vmov	s14, r3
 8017a9a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017a9e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017aa2:	ee07 1a90 	vmov	s15, r1
 8017aa6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017aaa:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017aae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017ab2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017ab6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017aba:	bfcc      	ite	gt
 8017abc:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017ac0:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017ac4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017ac8:	ee17 3a90 	vmov	r3, s15
 8017acc:	b218      	sxth	r0, r3
 8017ace:	4770      	bx	lr

08017ad0 <_ZN8touchgfx12TextProviderC1Ev>:
 8017ad0:	b538      	push	{r3, r4, r5, lr}
 8017ad2:	2500      	movs	r5, #0
 8017ad4:	2302      	movs	r3, #2
 8017ad6:	4604      	mov	r4, r0
 8017ad8:	e9c0 5500 	strd	r5, r5, [r0]
 8017adc:	7403      	strb	r3, [r0, #16]
 8017ade:	6145      	str	r5, [r0, #20]
 8017ae0:	7605      	strb	r5, [r0, #24]
 8017ae2:	83c5      	strh	r5, [r0, #30]
 8017ae4:	8405      	strh	r5, [r0, #32]
 8017ae6:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017ae8:	8705      	strh	r5, [r0, #56]	; 0x38
 8017aea:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017aec:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017af0:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017af4:	220e      	movs	r2, #14
 8017af6:	4629      	mov	r1, r5
 8017af8:	304c      	adds	r0, #76	; 0x4c
 8017afa:	f013 f9e6 	bl	802aeca <memset>
 8017afe:	2301      	movs	r3, #1
 8017b00:	4620      	mov	r0, r4
 8017b02:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8017b06:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017b0a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017b0e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017b12:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8017b16:	f7f0 f99f 	bl	8007e58 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8017b1a:	4620      	mov	r0, r4
 8017b1c:	bd38      	pop	{r3, r4, r5, pc}

08017b1e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8017b1e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017b20:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017b24:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8017b26:	fab0 f080 	clz	r0, r0
 8017b2a:	0940      	lsrs	r0, r0, #5
 8017b2c:	4770      	bx	lr

08017b2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017b2e:	b530      	push	{r4, r5, lr}
 8017b30:	2500      	movs	r5, #0
 8017b32:	2401      	movs	r4, #1
 8017b34:	6843      	ldr	r3, [r0, #4]
 8017b36:	b913      	cbnz	r3, 8017b3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8017b38:	6803      	ldr	r3, [r0, #0]
 8017b3a:	b313      	cbz	r3, 8017b82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017b3c:	6043      	str	r3, [r0, #4]
 8017b3e:	7e03      	ldrb	r3, [r0, #24]
 8017b40:	b143      	cbz	r3, 8017b54 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017b42:	6943      	ldr	r3, [r0, #20]
 8017b44:	b12b      	cbz	r3, 8017b52 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017b46:	881a      	ldrh	r2, [r3, #0]
 8017b48:	b11a      	cbz	r2, 8017b52 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017b4a:	1c9a      	adds	r2, r3, #2
 8017b4c:	6142      	str	r2, [r0, #20]
 8017b4e:	8818      	ldrh	r0, [r3, #0]
 8017b50:	bd30      	pop	{r4, r5, pc}
 8017b52:	7605      	strb	r5, [r0, #24]
 8017b54:	6843      	ldr	r3, [r0, #4]
 8017b56:	8819      	ldrh	r1, [r3, #0]
 8017b58:	b199      	cbz	r1, 8017b82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017b5a:	1c9a      	adds	r2, r3, #2
 8017b5c:	2902      	cmp	r1, #2
 8017b5e:	6042      	str	r2, [r0, #4]
 8017b60:	d1f5      	bne.n	8017b4e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017b62:	7c03      	ldrb	r3, [r0, #16]
 8017b64:	2b01      	cmp	r3, #1
 8017b66:	d8e5      	bhi.n	8017b34 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017b68:	1c5a      	adds	r2, r3, #1
 8017b6a:	3302      	adds	r3, #2
 8017b6c:	7402      	strb	r2, [r0, #16]
 8017b6e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017b72:	6143      	str	r3, [r0, #20]
 8017b74:	2b00      	cmp	r3, #0
 8017b76:	d0dd      	beq.n	8017b34 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017b78:	881b      	ldrh	r3, [r3, #0]
 8017b7a:	2b00      	cmp	r3, #0
 8017b7c:	d0da      	beq.n	8017b34 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017b7e:	7604      	strb	r4, [r0, #24]
 8017b80:	e7d8      	b.n	8017b34 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017b82:	2000      	movs	r0, #0
 8017b84:	e7e4      	b.n	8017b50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08017b86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8017b86:	b430      	push	{r4, r5}
 8017b88:	6001      	str	r1, [r0, #0]
 8017b8a:	2100      	movs	r1, #0
 8017b8c:	6041      	str	r1, [r0, #4]
 8017b8e:	6815      	ldr	r5, [r2, #0]
 8017b90:	6085      	str	r5, [r0, #8]
 8017b92:	6852      	ldr	r2, [r2, #4]
 8017b94:	6443      	str	r3, [r0, #68]	; 0x44
 8017b96:	9b02      	ldr	r3, [sp, #8]
 8017b98:	60c2      	str	r2, [r0, #12]
 8017b9a:	7401      	strb	r1, [r0, #16]
 8017b9c:	6141      	str	r1, [r0, #20]
 8017b9e:	7601      	strb	r1, [r0, #24]
 8017ba0:	8701      	strh	r1, [r0, #56]	; 0x38
 8017ba2:	8401      	strh	r1, [r0, #32]
 8017ba4:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8017ba8:	6483      	str	r3, [r0, #72]	; 0x48
 8017baa:	bc30      	pop	{r4, r5}
 8017bac:	f7f0 b954 	b.w	8007e58 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017bb0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017bb0:	b408      	push	{r3}
 8017bb2:	b510      	push	{r4, lr}
 8017bb4:	b085      	sub	sp, #20
 8017bb6:	ac07      	add	r4, sp, #28
 8017bb8:	f854 3b04 	ldr.w	r3, [r4], #4
 8017bbc:	9300      	str	r3, [sp, #0]
 8017bbe:	4613      	mov	r3, r2
 8017bc0:	4622      	mov	r2, r4
 8017bc2:	9403      	str	r4, [sp, #12]
 8017bc4:	f7ff ffdf 	bl	8017b86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017bc8:	b005      	add	sp, #20
 8017bca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017bce:	b001      	add	sp, #4
 8017bd0:	4770      	bx	lr

08017bd2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017bd2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017bd4:	4605      	mov	r5, r0
 8017bd6:	4608      	mov	r0, r1
 8017bd8:	b1e9      	cbz	r1, 8017c16 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8017bda:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017bde:	460b      	mov	r3, r1
 8017be0:	f101 0708 	add.w	r7, r1, #8
 8017be4:	4622      	mov	r2, r4
 8017be6:	6818      	ldr	r0, [r3, #0]
 8017be8:	6859      	ldr	r1, [r3, #4]
 8017bea:	4626      	mov	r6, r4
 8017bec:	c603      	stmia	r6!, {r0, r1}
 8017bee:	3308      	adds	r3, #8
 8017bf0:	42bb      	cmp	r3, r7
 8017bf2:	4634      	mov	r4, r6
 8017bf4:	d1f7      	bne.n	8017be6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8017bf6:	6818      	ldr	r0, [r3, #0]
 8017bf8:	6030      	str	r0, [r6, #0]
 8017bfa:	889b      	ldrh	r3, [r3, #4]
 8017bfc:	80b3      	strh	r3, [r6, #4]
 8017bfe:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017c02:	015b      	lsls	r3, r3, #5
 8017c04:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017c08:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017c0c:	430b      	orrs	r3, r1
 8017c0e:	425b      	negs	r3, r3
 8017c10:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017c14:	4610      	mov	r0, r2
 8017c16:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017c18 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8017c18:	b538      	push	{r3, r4, r5, lr}
 8017c1a:	460c      	mov	r4, r1
 8017c1c:	6811      	ldr	r1, [r2, #0]
 8017c1e:	4610      	mov	r0, r2
 8017c20:	68cd      	ldr	r5, [r1, #12]
 8017c22:	4619      	mov	r1, r3
 8017c24:	47a8      	blx	r5
 8017c26:	2800      	cmp	r0, #0
 8017c28:	bf08      	it	eq
 8017c2a:	4620      	moveq	r0, r4
 8017c2c:	bd38      	pop	{r3, r4, r5, pc}
	...

08017c30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017c32:	4604      	mov	r4, r0
 8017c34:	4615      	mov	r5, r2
 8017c36:	4608      	mov	r0, r1
 8017c38:	b93a      	cbnz	r2, 8017c4a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8017c3a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017c3e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017c42:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8017c46:	4628      	mov	r0, r5
 8017c48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017c4a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017c4e:	8893      	ldrh	r3, [r2, #4]
 8017c50:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017c54:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017c58:	79ee      	ldrb	r6, [r5, #7]
 8017c5a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017c5e:	4316      	orrs	r6, r2
 8017c60:	19da      	adds	r2, r3, r7
 8017c62:	b291      	uxth	r1, r2
 8017c64:	291d      	cmp	r1, #29
 8017c66:	b2b7      	uxth	r7, r6
 8017c68:	d87a      	bhi.n	8017d60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017c6a:	2201      	movs	r2, #1
 8017c6c:	408a      	lsls	r2, r1
 8017c6e:	4975      	ldr	r1, [pc, #468]	; (8017e44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017c70:	420a      	tst	r2, r1
 8017c72:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8017c76:	d12d      	bne.n	8017cd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8017c78:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017c7c:	d070      	beq.n	8017d60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017c7e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017c82:	462b      	mov	r3, r5
 8017c84:	f105 0e08 	add.w	lr, r5, #8
 8017c88:	4615      	mov	r5, r2
 8017c8a:	6818      	ldr	r0, [r3, #0]
 8017c8c:	6859      	ldr	r1, [r3, #4]
 8017c8e:	4694      	mov	ip, r2
 8017c90:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017c94:	3308      	adds	r3, #8
 8017c96:	4573      	cmp	r3, lr
 8017c98:	4662      	mov	r2, ip
 8017c9a:	d1f6      	bne.n	8017c8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017c9c:	6818      	ldr	r0, [r3, #0]
 8017c9e:	f8cc 0000 	str.w	r0, [ip]
 8017ca2:	889b      	ldrh	r3, [r3, #4]
 8017ca4:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017ca8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017cac:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017cb0:	b2b3      	uxth	r3, r6
 8017cb2:	1aca      	subs	r2, r1, r3
 8017cb4:	b292      	uxth	r2, r2
 8017cb6:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017cba:	10d2      	asrs	r2, r2, #3
 8017cbc:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017cc0:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017cc4:	4302      	orrs	r2, r0
 8017cc6:	1bcf      	subs	r7, r1, r7
 8017cc8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017ccc:	1afb      	subs	r3, r7, r3
 8017cce:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017cd2:	e7b8      	b.n	8017c46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017cd4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017cd6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017cda:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017cdc:	f640 6333 	movw	r3, #3635	; 0xe33
 8017ce0:	4299      	cmp	r1, r3
 8017ce2:	d110      	bne.n	8017d06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017ce4:	6803      	ldr	r3, [r0, #0]
 8017ce6:	68db      	ldr	r3, [r3, #12]
 8017ce8:	4798      	blx	r3
 8017cea:	7b41      	ldrb	r1, [r0, #13]
 8017cec:	00cb      	lsls	r3, r1, #3
 8017cee:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017cf2:	7a03      	ldrb	r3, [r0, #8]
 8017cf4:	0648      	lsls	r0, r1, #25
 8017cf6:	ea43 0302 	orr.w	r3, r3, r2
 8017cfa:	bf44      	itt	mi
 8017cfc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017d00:	b21b      	sxthmi	r3, r3
 8017d02:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017d06:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8017d0a:	443b      	add	r3, r7
 8017d0c:	4433      	add	r3, r6
 8017d0e:	b29b      	uxth	r3, r3
 8017d10:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017d14:	462a      	mov	r2, r5
 8017d16:	f105 0c08 	add.w	ip, r5, #8
 8017d1a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017d1e:	4635      	mov	r5, r6
 8017d20:	6810      	ldr	r0, [r2, #0]
 8017d22:	6851      	ldr	r1, [r2, #4]
 8017d24:	4637      	mov	r7, r6
 8017d26:	c703      	stmia	r7!, {r0, r1}
 8017d28:	3208      	adds	r2, #8
 8017d2a:	4562      	cmp	r2, ip
 8017d2c:	463e      	mov	r6, r7
 8017d2e:	d1f7      	bne.n	8017d20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017d30:	6810      	ldr	r0, [r2, #0]
 8017d32:	6038      	str	r0, [r7, #0]
 8017d34:	8892      	ldrh	r2, [r2, #4]
 8017d36:	80ba      	strh	r2, [r7, #4]
 8017d38:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017d3c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017d40:	10db      	asrs	r3, r3, #3
 8017d42:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017d46:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017d4a:	4313      	orrs	r3, r2
 8017d4c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017d50:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017d54:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8017d58:	1a9b      	subs	r3, r3, r2
 8017d5a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017d5e:	e772      	b.n	8017c46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017d60:	f023 0204 	bic.w	r2, r3, #4
 8017d64:	f640 611b 	movw	r1, #3611	; 0xe1b
 8017d68:	428a      	cmp	r2, r1
 8017d6a:	d003      	beq.n	8017d74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017d6c:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017d70:	4293      	cmp	r3, r2
 8017d72:	d120      	bne.n	8017db6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017d74:	3b01      	subs	r3, #1
 8017d76:	4602      	mov	r2, r0
 8017d78:	b29b      	uxth	r3, r3
 8017d7a:	4629      	mov	r1, r5
 8017d7c:	4620      	mov	r0, r4
 8017d7e:	f7ff ff4b 	bl	8017c18 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017d82:	7b41      	ldrb	r1, [r0, #13]
 8017d84:	00cb      	lsls	r3, r1, #3
 8017d86:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017d8a:	7a03      	ldrb	r3, [r0, #8]
 8017d8c:	0649      	lsls	r1, r1, #25
 8017d8e:	ea43 0302 	orr.w	r3, r3, r2
 8017d92:	bf44      	itt	mi
 8017d94:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017d98:	b21b      	sxthmi	r3, r3
 8017d9a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017d9e:	7b6b      	ldrb	r3, [r5, #13]
 8017da0:	7aaa      	ldrb	r2, [r5, #10]
 8017da2:	005b      	lsls	r3, r3, #1
 8017da4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017da8:	4313      	orrs	r3, r2
 8017daa:	115a      	asrs	r2, r3, #5
 8017dac:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017db0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017db4:	e036      	b.n	8017e24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017db6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8017dba:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017dbe:	7a2a      	ldrb	r2, [r5, #8]
 8017dc0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017dc4:	ea42 0201 	orr.w	r2, r2, r1
 8017dc8:	bf1c      	itt	ne
 8017dca:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017dce:	b212      	sxthne	r2, r2
 8017dd0:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017dd4:	f640 6109 	movw	r1, #3593	; 0xe09
 8017dd8:	f023 0210 	bic.w	r2, r3, #16
 8017ddc:	428a      	cmp	r2, r1
 8017dde:	d003      	beq.n	8017de8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8017de0:	f640 6213 	movw	r2, #3603	; 0xe13
 8017de4:	4293      	cmp	r3, r2
 8017de6:	d12a      	bne.n	8017e3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8017de8:	7b6e      	ldrb	r6, [r5, #13]
 8017dea:	0076      	lsls	r6, r6, #1
 8017dec:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017df0:	7aae      	ldrb	r6, [r5, #10]
 8017df2:	4316      	orrs	r6, r2
 8017df4:	f640 6213 	movw	r2, #3603	; 0xe13
 8017df8:	4293      	cmp	r3, r2
 8017dfa:	bf18      	it	ne
 8017dfc:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017e00:	4602      	mov	r2, r0
 8017e02:	bf14      	ite	ne
 8017e04:	b29b      	uxthne	r3, r3
 8017e06:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8017e0a:	4629      	mov	r1, r5
 8017e0c:	4620      	mov	r0, r4
 8017e0e:	f7ff ff03 	bl	8017c18 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017e12:	7b43      	ldrb	r3, [r0, #13]
 8017e14:	7a82      	ldrb	r2, [r0, #10]
 8017e16:	005b      	lsls	r3, r3, #1
 8017e18:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017e1c:	4313      	orrs	r3, r2
 8017e1e:	1af6      	subs	r6, r6, r3
 8017e20:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017e24:	7b69      	ldrb	r1, [r5, #13]
 8017e26:	00cb      	lsls	r3, r1, #3
 8017e28:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017e2c:	7a2b      	ldrb	r3, [r5, #8]
 8017e2e:	4313      	orrs	r3, r2
 8017e30:	064a      	lsls	r2, r1, #25
 8017e32:	bf44      	itt	mi
 8017e34:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e38:	b21b      	sxthmi	r3, r3
 8017e3a:	1bdb      	subs	r3, r3, r7
 8017e3c:	e747      	b.n	8017cce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017e3e:	2300      	movs	r3, #0
 8017e40:	e7b6      	b.n	8017db0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017e42:	bf00      	nop
 8017e44:	3fc00079 	.word	0x3fc00079

08017e48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8017e48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017e4c:	4604      	mov	r4, r0
 8017e4e:	b942      	cbnz	r2, 8017e62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017e50:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017e54:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8017e58:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017e5c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017e60:	e047      	b.n	8017ef2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017e62:	7b51      	ldrb	r1, [r2, #13]
 8017e64:	8893      	ldrh	r3, [r2, #4]
 8017e66:	010d      	lsls	r5, r1, #4
 8017e68:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017e6c:	79d5      	ldrb	r5, [r2, #7]
 8017e6e:	4305      	orrs	r5, r0
 8017e70:	2d04      	cmp	r5, #4
 8017e72:	bfcc      	ite	gt
 8017e74:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017e78:	f04f 0e01 	movle.w	lr, #1
 8017e7c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017e80:	f200 80ab 	bhi.w	8017fda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017e84:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017e88:	4283      	cmp	r3, r0
 8017e8a:	d216      	bcs.n	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e8c:	f240 605b 	movw	r0, #1627	; 0x65b
 8017e90:	4283      	cmp	r3, r0
 8017e92:	d859      	bhi.n	8017f48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017e94:	f240 6057 	movw	r0, #1623	; 0x657
 8017e98:	4283      	cmp	r3, r0
 8017e9a:	d20e      	bcs.n	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e9c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017ea0:	d24a      	bcs.n	8017f38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017ea2:	f240 604e 	movw	r0, #1614	; 0x64e
 8017ea6:	4283      	cmp	r3, r0
 8017ea8:	d207      	bcs.n	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017eaa:	f240 601a 	movw	r0, #1562	; 0x61a
 8017eae:	4283      	cmp	r3, r0
 8017eb0:	d02a      	beq.n	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017eb2:	d821      	bhi.n	8017ef8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017eb4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017eb8:	d35b      	bcc.n	8017f72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017eba:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017ebe:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017ec2:	f040 80d0 	bne.w	8018066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017ec6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8017eca:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017ece:	f040 80ca 	bne.w	8018066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017ed2:	00cb      	lsls	r3, r1, #3
 8017ed4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017ed8:	7a13      	ldrb	r3, [r2, #8]
 8017eda:	0649      	lsls	r1, r1, #25
 8017edc:	ea43 0300 	orr.w	r3, r3, r0
 8017ee0:	bf44      	itt	mi
 8017ee2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017ee6:	b21b      	sxthmi	r3, r3
 8017ee8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017eec:	1b5d      	subs	r5, r3, r5
 8017eee:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017ef2:	4610      	mov	r0, r2
 8017ef4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017ef8:	f240 604b 	movw	r0, #1611	; 0x64b
 8017efc:	4283      	cmp	r3, r0
 8017efe:	d338      	bcc.n	8017f72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017f00:	f240 604c 	movw	r0, #1612	; 0x64c
 8017f04:	4283      	cmp	r3, r0
 8017f06:	d9d8      	bls.n	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f08:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017f0c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017f10:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017f14:	f040 80f2 	bne.w	80180fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017f18:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017f1c:	f040 80ee 	bne.w	80180fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017f20:	00cb      	lsls	r3, r1, #3
 8017f22:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017f26:	7a13      	ldrb	r3, [r2, #8]
 8017f28:	064e      	lsls	r6, r1, #25
 8017f2a:	ea43 0300 	orr.w	r3, r3, r0
 8017f2e:	bf44      	itt	mi
 8017f30:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017f34:	b21b      	sxthmi	r3, r3
 8017f36:	e7d9      	b.n	8017eec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8017f38:	f240 6054 	movw	r0, #1620	; 0x654
 8017f3c:	4283      	cmp	r3, r0
 8017f3e:	d8e3      	bhi.n	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f40:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017f44:	d9e0      	bls.n	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f46:	e7b8      	b.n	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f48:	f240 6074 	movw	r0, #1652	; 0x674
 8017f4c:	4283      	cmp	r3, r0
 8017f4e:	d0b4      	beq.n	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f50:	d82d      	bhi.n	8017fae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017f52:	f240 605e 	movw	r0, #1630	; 0x65e
 8017f56:	4283      	cmp	r3, r0
 8017f58:	d804      	bhi.n	8017f64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017f5a:	f240 605d 	movw	r0, #1629	; 0x65d
 8017f5e:	4283      	cmp	r3, r0
 8017f60:	d3d2      	bcc.n	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f62:	e7aa      	b.n	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f64:	f240 605f 	movw	r0, #1631	; 0x65f
 8017f68:	4283      	cmp	r3, r0
 8017f6a:	d0cd      	beq.n	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f6c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017f70:	d0a3      	beq.n	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f72:	00cb      	lsls	r3, r1, #3
 8017f74:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017f78:	7a13      	ldrb	r3, [r2, #8]
 8017f7a:	0649      	lsls	r1, r1, #25
 8017f7c:	ea43 0300 	orr.w	r3, r3, r0
 8017f80:	bf44      	itt	mi
 8017f82:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017f86:	b21b      	sxthmi	r3, r3
 8017f88:	1b5d      	subs	r5, r3, r5
 8017f8a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017f8e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017f92:	7b53      	ldrb	r3, [r2, #13]
 8017f94:	015b      	lsls	r3, r3, #5
 8017f96:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017f9a:	7993      	ldrb	r3, [r2, #6]
 8017f9c:	430b      	orrs	r3, r1
 8017f9e:	005b      	lsls	r3, r3, #1
 8017fa0:	2105      	movs	r1, #5
 8017fa2:	fb93 f3f1 	sdiv	r3, r3, r1
 8017fa6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8017faa:	440b      	add	r3, r1
 8017fac:	e756      	b.n	8017e5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017fae:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017fb2:	4283      	cmp	r3, r0
 8017fb4:	d809      	bhi.n	8017fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8017fb6:	f240 60df 	movw	r0, #1759	; 0x6df
 8017fba:	4283      	cmp	r3, r0
 8017fbc:	f4bf af7d 	bcs.w	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017fc0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017fc4:	2b05      	cmp	r3, #5
 8017fc6:	d8d4      	bhi.n	8017f72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017fc8:	e777      	b.n	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017fca:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017fce:	4283      	cmp	r3, r0
 8017fd0:	d09a      	beq.n	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017fd2:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017fd6:	4283      	cmp	r3, r0
 8017fd8:	e7ca      	b.n	8017f70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8017fda:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017fde:	d22b      	bcs.n	8018038 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017fe0:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017fe4:	4283      	cmp	r3, r0
 8017fe6:	d28f      	bcs.n	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017fe8:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017fec:	4283      	cmp	r3, r0
 8017fee:	d816      	bhi.n	801801e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017ff0:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017ff4:	4283      	cmp	r3, r0
 8017ff6:	f4bf af60 	bcs.w	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ffa:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017ffe:	4283      	cmp	r3, r0
 8018000:	d80a      	bhi.n	8018018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8018002:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8018006:	4283      	cmp	r3, r0
 8018008:	f4bf af57 	bcs.w	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801800c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018010:	4283      	cmp	r3, r0
 8018012:	f43f af79 	beq.w	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018016:	e7ac      	b.n	8017f72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018018:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801801c:	e7f8      	b.n	8018010 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801801e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8018022:	4283      	cmp	r3, r0
 8018024:	d802      	bhi.n	801802c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8018026:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801802a:	e798      	b.n	8017f5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801802c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018030:	4283      	cmp	r3, r0
 8018032:	f47f af42 	bne.w	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018036:	e767      	b.n	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018038:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801803c:	4283      	cmp	r3, r0
 801803e:	f43f af63 	beq.w	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018042:	d802      	bhi.n	801804a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018044:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018048:	e7f2      	b.n	8018030 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801804a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801804e:	4283      	cmp	r3, r0
 8018050:	d805      	bhi.n	801805e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018052:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8018056:	4283      	cmp	r3, r0
 8018058:	f4ff af2f 	bcc.w	8017eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801805c:	e754      	b.n	8017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801805e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018062:	4283      	cmp	r3, r0
 8018064:	e7af      	b.n	8017fc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8018066:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801806a:	4617      	mov	r7, r2
 801806c:	f102 0808 	add.w	r8, r2, #8
 8018070:	4666      	mov	r6, ip
 8018072:	6838      	ldr	r0, [r7, #0]
 8018074:	6879      	ldr	r1, [r7, #4]
 8018076:	46e6      	mov	lr, ip
 8018078:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801807c:	3708      	adds	r7, #8
 801807e:	4547      	cmp	r7, r8
 8018080:	46f4      	mov	ip, lr
 8018082:	d1f6      	bne.n	8018072 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8018084:	6838      	ldr	r0, [r7, #0]
 8018086:	f8ce 0000 	str.w	r0, [lr]
 801808a:	88b9      	ldrh	r1, [r7, #4]
 801808c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018090:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018094:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018098:	d009      	beq.n	80180ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801809a:	7b51      	ldrb	r1, [r2, #13]
 801809c:	7992      	ldrb	r2, [r2, #6]
 801809e:	0149      	lsls	r1, r1, #5
 80180a0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80180a4:	4311      	orrs	r1, r2
 80180a6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80180aa:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80180ae:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80180b2:	b2ad      	uxth	r5, r5
 80180b4:	d00d      	beq.n	80180d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80180b6:	442b      	add	r3, r5
 80180b8:	b29b      	uxth	r3, r3
 80180ba:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80180be:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80180c2:	10db      	asrs	r3, r3, #3
 80180c4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80180c8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80180cc:	4313      	orrs	r3, r2
 80180ce:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80180d2:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80180d6:	00cb      	lsls	r3, r1, #3
 80180d8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80180dc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80180e0:	064f      	lsls	r7, r1, #25
 80180e2:	ea43 0302 	orr.w	r3, r3, r2
 80180e6:	bf44      	itt	mi
 80180e8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80180ec:	b21b      	sxthmi	r3, r3
 80180ee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80180f2:	1b5b      	subs	r3, r3, r5
 80180f4:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80180f8:	4632      	mov	r2, r6
 80180fa:	e6fa      	b.n	8017ef2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80180fc:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018100:	4617      	mov	r7, r2
 8018102:	f102 0908 	add.w	r9, r2, #8
 8018106:	4666      	mov	r6, ip
 8018108:	6838      	ldr	r0, [r7, #0]
 801810a:	6879      	ldr	r1, [r7, #4]
 801810c:	46e0      	mov	r8, ip
 801810e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8018112:	3708      	adds	r7, #8
 8018114:	454f      	cmp	r7, r9
 8018116:	46c4      	mov	ip, r8
 8018118:	d1f6      	bne.n	8018108 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801811a:	6838      	ldr	r0, [r7, #0]
 801811c:	f8c8 0000 	str.w	r0, [r8]
 8018120:	88b9      	ldrh	r1, [r7, #4]
 8018122:	f8a8 1004 	strh.w	r1, [r8, #4]
 8018126:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801812a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801812e:	d009      	beq.n	8018144 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018130:	7b51      	ldrb	r1, [r2, #13]
 8018132:	7992      	ldrb	r2, [r2, #6]
 8018134:	0149      	lsls	r1, r1, #5
 8018136:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801813a:	4311      	orrs	r1, r2
 801813c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018140:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018144:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018148:	d00e      	beq.n	8018168 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801814a:	eba3 030e 	sub.w	r3, r3, lr
 801814e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018152:	b29b      	uxth	r3, r3
 8018154:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018158:	10db      	asrs	r3, r3, #3
 801815a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801815e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018162:	4313      	orrs	r3, r2
 8018164:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018168:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801816c:	00cb      	lsls	r3, r1, #3
 801816e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018172:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018176:	0648      	lsls	r0, r1, #25
 8018178:	ea43 0302 	orr.w	r3, r3, r2
 801817c:	bf44      	itt	mi
 801817e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018182:	b21b      	sxthmi	r3, r3
 8018184:	1b5d      	subs	r5, r3, r5
 8018186:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801818a:	e7b5      	b.n	80180f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801818c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801818c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018190:	461e      	mov	r6, r3
 8018192:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018194:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018198:	4604      	mov	r4, r0
 801819a:	4617      	mov	r7, r2
 801819c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80181a0:	f7ef fe18 	bl	8007dd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80181a4:	4605      	mov	r5, r0
 80181a6:	b918      	cbnz	r0, 80181b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80181a8:	6030      	str	r0, [r6, #0]
 80181aa:	4628      	mov	r0, r5
 80181ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80181b0:	683b      	ldr	r3, [r7, #0]
 80181b2:	4601      	mov	r1, r0
 80181b4:	68db      	ldr	r3, [r3, #12]
 80181b6:	4638      	mov	r0, r7
 80181b8:	4798      	blx	r3
 80181ba:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80181be:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80181c2:	4602      	mov	r2, r0
 80181c4:	6030      	str	r0, [r6, #0]
 80181c6:	d213      	bcs.n	80181f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80181c8:	4643      	mov	r3, r8
 80181ca:	4639      	mov	r1, r7
 80181cc:	4620      	mov	r0, r4
 80181ce:	f7ff fe3b 	bl	8017e48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80181d2:	6030      	str	r0, [r6, #0]
 80181d4:	6833      	ldr	r3, [r6, #0]
 80181d6:	b143      	cbz	r3, 80181ea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80181d8:	7b5a      	ldrb	r2, [r3, #13]
 80181da:	7a9b      	ldrb	r3, [r3, #10]
 80181dc:	0052      	lsls	r2, r2, #1
 80181de:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80181e2:	4313      	orrs	r3, r2
 80181e4:	bf0c      	ite	eq
 80181e6:	2301      	moveq	r3, #1
 80181e8:	2300      	movne	r3, #0
 80181ea:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80181ee:	e7dc      	b.n	80181aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80181f0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80181f4:	b29b      	uxth	r3, r3
 80181f6:	2b7f      	cmp	r3, #127	; 0x7f
 80181f8:	d804      	bhi.n	8018204 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80181fa:	4639      	mov	r1, r7
 80181fc:	4620      	mov	r0, r4
 80181fe:	f7ff fd17 	bl	8017c30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018202:	e7e6      	b.n	80181d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018204:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018208:	2b00      	cmp	r3, #0
 801820a:	d0e3      	beq.n	80181d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801820c:	f640 1302 	movw	r3, #2306	; 0x902
 8018210:	429d      	cmp	r5, r3
 8018212:	d1df      	bne.n	80181d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018214:	4601      	mov	r1, r0
 8018216:	4620      	mov	r0, r4
 8018218:	f7ff fcdb 	bl	8017bd2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801821c:	e7d9      	b.n	80181d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801821e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801821e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018222:	461e      	mov	r6, r3
 8018224:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018226:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801822a:	4604      	mov	r4, r0
 801822c:	4617      	mov	r7, r2
 801822e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018232:	f7ef fdcf 	bl	8007dd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018236:	4605      	mov	r5, r0
 8018238:	b918      	cbnz	r0, 8018242 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801823a:	6030      	str	r0, [r6, #0]
 801823c:	4628      	mov	r0, r5
 801823e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018242:	683b      	ldr	r3, [r7, #0]
 8018244:	4601      	mov	r1, r0
 8018246:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801824a:	4638      	mov	r0, r7
 801824c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018250:	47c8      	blx	r9
 8018252:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018256:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801825a:	4602      	mov	r2, r0
 801825c:	6030      	str	r0, [r6, #0]
 801825e:	d213      	bcs.n	8018288 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018260:	4643      	mov	r3, r8
 8018262:	4639      	mov	r1, r7
 8018264:	4620      	mov	r0, r4
 8018266:	f7ff fdef 	bl	8017e48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801826a:	6030      	str	r0, [r6, #0]
 801826c:	6833      	ldr	r3, [r6, #0]
 801826e:	b143      	cbz	r3, 8018282 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018270:	7b5a      	ldrb	r2, [r3, #13]
 8018272:	7a9b      	ldrb	r3, [r3, #10]
 8018274:	0052      	lsls	r2, r2, #1
 8018276:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801827a:	4313      	orrs	r3, r2
 801827c:	bf0c      	ite	eq
 801827e:	2301      	moveq	r3, #1
 8018280:	2300      	movne	r3, #0
 8018282:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018286:	e7d9      	b.n	801823c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8018288:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801828c:	b29b      	uxth	r3, r3
 801828e:	2b7f      	cmp	r3, #127	; 0x7f
 8018290:	d804      	bhi.n	801829c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8018292:	4639      	mov	r1, r7
 8018294:	4620      	mov	r0, r4
 8018296:	f7ff fccb 	bl	8017c30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801829a:	e7e6      	b.n	801826a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801829c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80182a0:	2b00      	cmp	r3, #0
 80182a2:	d0e3      	beq.n	801826c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80182a4:	f640 1302 	movw	r3, #2306	; 0x902
 80182a8:	429d      	cmp	r5, r3
 80182aa:	d1df      	bne.n	801826c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80182ac:	4601      	mov	r1, r0
 80182ae:	4620      	mov	r0, r4
 80182b0:	f7ff fc8f 	bl	8017bd2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80182b4:	e7d9      	b.n	801826a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080182b6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80182b6:	b510      	push	{r4, lr}
 80182b8:	4604      	mov	r4, r0
 80182ba:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80182be:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80182c0:	b1f1      	cbz	r1, 8018300 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80182c2:	2b0a      	cmp	r3, #10
 80182c4:	d02f      	beq.n	8018326 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80182c6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80182c8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80182cc:	3901      	subs	r1, #1
 80182ce:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80182d0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80182d4:	1c51      	adds	r1, r2, #1
 80182d6:	b289      	uxth	r1, r1
 80182d8:	2901      	cmp	r1, #1
 80182da:	bf84      	itt	hi
 80182dc:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80182e0:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80182e2:	f103 0201 	add.w	r2, r3, #1
 80182e6:	8722      	strh	r2, [r4, #56]	; 0x38
 80182e8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80182ea:	bf98      	it	ls
 80182ec:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80182ee:	4413      	add	r3, r2
 80182f0:	b29b      	uxth	r3, r3
 80182f2:	2b09      	cmp	r3, #9
 80182f4:	bf88      	it	hi
 80182f6:	3b0a      	subhi	r3, #10
 80182f8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80182fc:	8458      	strh	r0, [r3, #34]	; 0x22
 80182fe:	e7dc      	b.n	80182ba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018300:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018302:	2b0a      	cmp	r3, #10
 8018304:	d00f      	beq.n	8018326 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018306:	4620      	mov	r0, r4
 8018308:	f7ff fc11 	bl	8017b2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801830c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801830e:	1c5a      	adds	r2, r3, #1
 8018310:	8722      	strh	r2, [r4, #56]	; 0x38
 8018312:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018314:	4413      	add	r3, r2
 8018316:	b29b      	uxth	r3, r3
 8018318:	2b09      	cmp	r3, #9
 801831a:	bf88      	it	hi
 801831c:	3b0a      	subhi	r3, #10
 801831e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018322:	8458      	strh	r0, [r3, #34]	; 0x22
 8018324:	e7ec      	b.n	8018300 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018326:	bd10      	pop	{r4, pc}

08018328 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018328:	b538      	push	{r3, r4, r5, lr}
 801832a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801832c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018330:	4604      	mov	r4, r0
 8018332:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018334:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8018336:	3a01      	subs	r2, #1
 8018338:	8702      	strh	r2, [r0, #56]	; 0x38
 801833a:	1c5a      	adds	r2, r3, #1
 801833c:	b292      	uxth	r2, r2
 801833e:	2a09      	cmp	r2, #9
 8018340:	bf86      	itte	hi
 8018342:	3b09      	subhi	r3, #9
 8018344:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8018346:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018348:	f7ff ffb5 	bl	80182b6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801834c:	8c23      	ldrh	r3, [r4, #32]
 801834e:	2b01      	cmp	r3, #1
 8018350:	bf9c      	itt	ls
 8018352:	3301      	addls	r3, #1
 8018354:	8423      	strhls	r3, [r4, #32]
 8018356:	8be3      	ldrh	r3, [r4, #30]
 8018358:	b90b      	cbnz	r3, 801835e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801835a:	2302      	movs	r3, #2
 801835c:	83e3      	strh	r3, [r4, #30]
 801835e:	8be3      	ldrh	r3, [r4, #30]
 8018360:	3b01      	subs	r3, #1
 8018362:	b29b      	uxth	r3, r3
 8018364:	83e3      	strh	r3, [r4, #30]
 8018366:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801836a:	4628      	mov	r0, r5
 801836c:	8365      	strh	r5, [r4, #26]
 801836e:	bd38      	pop	{r3, r4, r5, pc}

08018370 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018370:	428a      	cmp	r2, r1
 8018372:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018376:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8018378:	d931      	bls.n	80183de <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801837a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801837c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018380:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8018384:	19ee      	adds	r6, r5, r7
 8018386:	1a54      	subs	r4, r2, r1
 8018388:	3e01      	subs	r6, #1
 801838a:	fa1f fe84 	uxth.w	lr, r4
 801838e:	b2b4      	uxth	r4, r6
 8018390:	eba4 090e 	sub.w	r9, r4, lr
 8018394:	fa1f f989 	uxth.w	r9, r9
 8018398:	2c09      	cmp	r4, #9
 801839a:	4626      	mov	r6, r4
 801839c:	bf88      	it	hi
 801839e:	f1a4 060a 	subhi.w	r6, r4, #10
 80183a2:	f1bc 0f00 	cmp.w	ip, #0
 80183a6:	bf08      	it	eq
 80183a8:	f04f 0c02 	moveq.w	ip, #2
 80183ac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80183b0:	f10c 3cff 	add.w	ip, ip, #4294967295
 80183b4:	fa1f fc8c 	uxth.w	ip, ip
 80183b8:	3c01      	subs	r4, #1
 80183ba:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80183be:	b2a4      	uxth	r4, r4
 80183c0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80183c4:	454c      	cmp	r4, r9
 80183c6:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80183ca:	d1e5      	bne.n	8018398 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80183cc:	eba5 050e 	sub.w	r5, r5, lr
 80183d0:	eb0e 0408 	add.w	r4, lr, r8
 80183d4:	8705      	strh	r5, [r0, #56]	; 0x38
 80183d6:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80183da:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80183de:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80183e0:	1a64      	subs	r4, r4, r1
 80183e2:	4439      	add	r1, r7
 80183e4:	b289      	uxth	r1, r1
 80183e6:	2909      	cmp	r1, #9
 80183e8:	bf88      	it	hi
 80183ea:	390a      	subhi	r1, #10
 80183ec:	8704      	strh	r4, [r0, #56]	; 0x38
 80183ee:	86c1      	strh	r1, [r0, #54]	; 0x36
 80183f0:	250a      	movs	r5, #10
 80183f2:	b18a      	cbz	r2, 8018418 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80183f4:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80183f6:	3a01      	subs	r2, #1
 80183f8:	b292      	uxth	r2, r2
 80183fa:	3101      	adds	r1, #1
 80183fc:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018400:	8701      	strh	r1, [r0, #56]	; 0x38
 8018402:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018404:	b901      	cbnz	r1, 8018408 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8018406:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018408:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801840a:	3901      	subs	r1, #1
 801840c:	b289      	uxth	r1, r1
 801840e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018410:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018414:	844c      	strh	r4, [r1, #34]	; 0x22
 8018416:	e7ec      	b.n	80183f2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8018418:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801841c:	f7ff bf4b 	b.w	80182b6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018420 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018420:	b570      	push	{r4, r5, r6, lr}
 8018422:	2500      	movs	r5, #0
 8018424:	4295      	cmp	r5, r2
 8018426:	d011      	beq.n	801844c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018428:	8bc4      	ldrh	r4, [r0, #30]
 801842a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801842e:	4414      	add	r4, r2
 8018430:	3c01      	subs	r4, #1
 8018432:	1b64      	subs	r4, r4, r5
 8018434:	b2a4      	uxth	r4, r4
 8018436:	2c01      	cmp	r4, #1
 8018438:	bf88      	it	hi
 801843a:	3c02      	subhi	r4, #2
 801843c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018440:	8b64      	ldrh	r4, [r4, #26]
 8018442:	42b4      	cmp	r4, r6
 8018444:	d117      	bne.n	8018476 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8018446:	3501      	adds	r5, #1
 8018448:	b2ad      	uxth	r5, r5
 801844a:	e7eb      	b.n	8018424 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801844c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018450:	2400      	movs	r4, #0
 8018452:	4413      	add	r3, r2
 8018454:	b2a2      	uxth	r2, r4
 8018456:	429a      	cmp	r2, r3
 8018458:	da0f      	bge.n	801847a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801845a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801845c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018460:	4432      	add	r2, r6
 8018462:	b292      	uxth	r2, r2
 8018464:	2a09      	cmp	r2, #9
 8018466:	bf88      	it	hi
 8018468:	3a0a      	subhi	r2, #10
 801846a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801846e:	3401      	adds	r4, #1
 8018470:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018472:	42aa      	cmp	r2, r5
 8018474:	d0ee      	beq.n	8018454 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8018476:	2000      	movs	r0, #0
 8018478:	bd70      	pop	{r4, r5, r6, pc}
 801847a:	2001      	movs	r0, #1
 801847c:	e7fc      	b.n	8018478 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801847e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801847e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018482:	4605      	mov	r5, r0
 8018484:	4616      	mov	r6, r2
 8018486:	1c8c      	adds	r4, r1, #2
 8018488:	8809      	ldrh	r1, [r1, #0]
 801848a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801848e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018492:	42b3      	cmp	r3, r6
 8018494:	d124      	bne.n	80184e0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8018496:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801849a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801849e:	f001 070f 	and.w	r7, r1, #15
 80184a2:	f8cd 8000 	str.w	r8, [sp]
 80184a6:	464b      	mov	r3, r9
 80184a8:	4652      	mov	r2, sl
 80184aa:	4621      	mov	r1, r4
 80184ac:	4628      	mov	r0, r5
 80184ae:	f7ff ffb7 	bl	8018420 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80184b2:	4683      	mov	fp, r0
 80184b4:	b168      	cbz	r0, 80184d2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80184b6:	eb0a 0109 	add.w	r1, sl, r9
 80184ba:	4441      	add	r1, r8
 80184bc:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80184c0:	463a      	mov	r2, r7
 80184c2:	4649      	mov	r1, r9
 80184c4:	4628      	mov	r0, r5
 80184c6:	f7ff ff53 	bl	8018370 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80184ca:	4658      	mov	r0, fp
 80184cc:	b003      	add	sp, #12
 80184ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184d2:	eb07 010a 	add.w	r1, r7, sl
 80184d6:	4449      	add	r1, r9
 80184d8:	4441      	add	r1, r8
 80184da:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80184de:	e7d2      	b.n	8018486 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80184e0:	f04f 0b00 	mov.w	fp, #0
 80184e4:	e7f1      	b.n	80184ca <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080184e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80184e6:	b570      	push	{r4, r5, r6, lr}
 80184e8:	8810      	ldrh	r0, [r2, #0]
 80184ea:	4298      	cmp	r0, r3
 80184ec:	d817      	bhi.n	801851e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80184ee:	1e48      	subs	r0, r1, #1
 80184f0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80184f4:	4298      	cmp	r0, r3
 80184f6:	d312      	bcc.n	801851e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80184f8:	2400      	movs	r4, #0
 80184fa:	428c      	cmp	r4, r1
 80184fc:	d20f      	bcs.n	801851e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80184fe:	1860      	adds	r0, r4, r1
 8018500:	1040      	asrs	r0, r0, #1
 8018502:	0085      	lsls	r5, r0, #2
 8018504:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018508:	42b3      	cmp	r3, r6
 801850a:	d902      	bls.n	8018512 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801850c:	3001      	adds	r0, #1
 801850e:	b284      	uxth	r4, r0
 8018510:	e7f3      	b.n	80184fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018512:	d201      	bcs.n	8018518 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018514:	b281      	uxth	r1, r0
 8018516:	e7f0      	b.n	80184fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018518:	442a      	add	r2, r5
 801851a:	8850      	ldrh	r0, [r2, #2]
 801851c:	bd70      	pop	{r4, r5, r6, pc}
 801851e:	2000      	movs	r0, #0
 8018520:	e7fc      	b.n	801851c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018522 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018522:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018526:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018528:	886f      	ldrh	r7, [r5, #2]
 801852a:	4604      	mov	r4, r0
 801852c:	087f      	lsrs	r7, r7, #1
 801852e:	260b      	movs	r6, #11
 8018530:	3e01      	subs	r6, #1
 8018532:	d013      	beq.n	801855c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018534:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018536:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801853a:	462a      	mov	r2, r5
 801853c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018540:	4639      	mov	r1, r7
 8018542:	4643      	mov	r3, r8
 8018544:	4620      	mov	r0, r4
 8018546:	f7ff ffce 	bl	80184e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801854a:	b138      	cbz	r0, 801855c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801854c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018550:	4642      	mov	r2, r8
 8018552:	4620      	mov	r0, r4
 8018554:	f7ff ff93 	bl	801847e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018558:	2800      	cmp	r0, #0
 801855a:	d1e9      	bne.n	8018530 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801855c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018560 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018560:	b570      	push	{r4, r5, r6, lr}
 8018562:	694a      	ldr	r2, [r1, #20]
 8018564:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8018566:	684b      	ldr	r3, [r1, #4]
 8018568:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801856a:	1b54      	subs	r4, r2, r5
 801856c:	f000 8106 	beq.w	801877c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018570:	1b9b      	subs	r3, r3, r6
 8018572:	d003      	beq.n	801857c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018574:	4363      	muls	r3, r4
 8018576:	2210      	movs	r2, #16
 8018578:	fb93 f3f2 	sdiv	r3, r3, r2
 801857c:	680c      	ldr	r4, [r1, #0]
 801857e:	698a      	ldr	r2, [r1, #24]
 8018580:	1b65      	subs	r5, r4, r5
 8018582:	f000 80fd 	beq.w	8018780 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8018586:	1b92      	subs	r2, r2, r6
 8018588:	d003      	beq.n	8018592 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801858a:	436a      	muls	r2, r5
 801858c:	2410      	movs	r4, #16
 801858e:	fb92 f2f4 	sdiv	r2, r2, r4
 8018592:	1a9b      	subs	r3, r3, r2
 8018594:	ee07 3a90 	vmov	s15, r3
 8018598:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80187bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801859c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80185a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80185a4:	ee67 7a84 	vmul.f32	s15, s15, s8
 80185a8:	460a      	mov	r2, r1
 80185aa:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80185ae:	4603      	mov	r3, r0
 80185b0:	f100 040c 	add.w	r4, r0, #12
 80185b4:	eeb1 6a43 	vneg.f32	s12, s6
 80185b8:	edd2 7a02 	vldr	s15, [r2, #8]
 80185bc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80185c0:	3214      	adds	r2, #20
 80185c2:	ece3 6a01 	vstmia	r3!, {s13}
 80185c6:	ed52 7a02 	vldr	s15, [r2, #-8]
 80185ca:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80185ce:	429c      	cmp	r4, r3
 80185d0:	edc3 7a02 	vstr	s15, [r3, #8]
 80185d4:	ed52 7a01 	vldr	s15, [r2, #-4]
 80185d8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80185dc:	edc3 7a05 	vstr	s15, [r3, #20]
 80185e0:	d1ea      	bne.n	80185b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80185e2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80185e4:	698b      	ldr	r3, [r1, #24]
 80185e6:	edd0 4a02 	vldr	s9, [r0, #8]
 80185ea:	edd0 3a00 	vldr	s7, [r0]
 80185ee:	edd0 6a01 	vldr	s13, [r0, #4]
 80185f2:	ed90 5a05 	vldr	s10, [r0, #20]
 80185f6:	ed90 2a03 	vldr	s4, [r0, #12]
 80185fa:	edd0 5a04 	vldr	s11, [r0, #16]
 80185fe:	ed90 1a07 	vldr	s2, [r0, #28]
 8018602:	edd0 2a06 	vldr	s5, [r0, #24]
 8018606:	1a9b      	subs	r3, r3, r2
 8018608:	ee07 3a90 	vmov	s15, r3
 801860c:	684b      	ldr	r3, [r1, #4]
 801860e:	1a9b      	subs	r3, r3, r2
 8018610:	ee07 3a10 	vmov	s14, r3
 8018614:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018618:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801861c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018620:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018624:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018628:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801862c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018630:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018634:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018638:	ee32 5a45 	vsub.f32	s10, s4, s10
 801863c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018640:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018644:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018646:	694a      	ldr	r2, [r1, #20]
 8018648:	1b13      	subs	r3, r2, r4
 801864a:	ee07 3a10 	vmov	s14, r3
 801864e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018652:	680b      	ldr	r3, [r1, #0]
 8018654:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018658:	1b1b      	subs	r3, r3, r4
 801865a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801865e:	ee07 3a10 	vmov	s14, r3
 8018662:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018666:	ee27 7a04 	vmul.f32	s14, s14, s8
 801866a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801866e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018672:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8018676:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018678:	698b      	ldr	r3, [r1, #24]
 801867a:	1a9b      	subs	r3, r3, r2
 801867c:	ee06 3a90 	vmov	s13, r3
 8018680:	684b      	ldr	r3, [r1, #4]
 8018682:	1a9b      	subs	r3, r3, r2
 8018684:	ee07 3a10 	vmov	s14, r3
 8018688:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801868c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018690:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018694:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018698:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801869c:	eee5 6a87 	vfma.f32	s13, s11, s14
 80186a0:	ee66 6a83 	vmul.f32	s13, s13, s6
 80186a4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80186a8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80186aa:	694a      	ldr	r2, [r1, #20]
 80186ac:	1b13      	subs	r3, r2, r4
 80186ae:	ee07 3a10 	vmov	s14, r3
 80186b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80186b6:	680b      	ldr	r3, [r1, #0]
 80186b8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80186bc:	1b1b      	subs	r3, r3, r4
 80186be:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80186c2:	ee07 3a10 	vmov	s14, r3
 80186c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80186ca:	ee27 7a04 	vmul.f32	s14, s14, s8
 80186ce:	eea5 5a87 	vfma.f32	s10, s11, s14
 80186d2:	edd0 5a08 	vldr	s11, [r0, #32]
 80186d6:	ee25 5a06 	vmul.f32	s10, s10, s12
 80186da:	ee31 1a65 	vsub.f32	s2, s2, s11
 80186de:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80186e2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80186e4:	698b      	ldr	r3, [r1, #24]
 80186e6:	1a9b      	subs	r3, r3, r2
 80186e8:	ee07 3a10 	vmov	s14, r3
 80186ec:	684b      	ldr	r3, [r1, #4]
 80186ee:	1a9b      	subs	r3, r3, r2
 80186f0:	ee01 3a90 	vmov	s3, r3
 80186f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80186f8:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80186fc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018700:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018704:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8018708:	ee61 1a84 	vmul.f32	s3, s3, s8
 801870c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018710:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018714:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018718:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801871a:	694a      	ldr	r2, [r1, #20]
 801871c:	1b13      	subs	r3, r2, r4
 801871e:	ee03 3a10 	vmov	s6, r3
 8018722:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018726:	680b      	ldr	r3, [r1, #0]
 8018728:	ee23 3a04 	vmul.f32	s6, s6, s8
 801872c:	1b1b      	subs	r3, r3, r4
 801872e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018732:	ee03 3a10 	vmov	s6, r3
 8018736:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801873a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801873e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018742:	ee25 6a86 	vmul.f32	s12, s11, s12
 8018746:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801874a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801874e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018752:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018756:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801875a:	dd13      	ble.n	8018784 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801875c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018760:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8018764:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018766:	eee3 7a87 	vfma.f32	s15, s7, s14
 801876a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801876e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018772:	dd15      	ble.n	80187a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8018774:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018778:	6403      	str	r3, [r0, #64]	; 0x40
 801877a:	bd70      	pop	{r4, r5, r6, pc}
 801877c:	4623      	mov	r3, r4
 801877e:	e6fd      	b.n	801857c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018780:	462a      	mov	r2, r5
 8018782:	e706      	b.n	8018592 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018784:	d502      	bpl.n	801878c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8018786:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801878a:	e7e9      	b.n	8018760 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801878c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018790:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018794:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018798:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801879c:	dade      	bge.n	801875c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801879e:	e7f2      	b.n	8018786 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80187a0:	d502      	bpl.n	80187a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80187a2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80187a6:	e7e7      	b.n	8018778 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80187a8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80187ac:	eee3 4a86 	vfma.f32	s9, s7, s12
 80187b0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80187b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80187b8:	dadc      	bge.n	8018774 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80187ba:	e7f2      	b.n	80187a2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80187bc:	3d800000 	.word	0x3d800000

080187c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80187c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80187c4:	2714      	movs	r7, #20
 80187c6:	435f      	muls	r7, r3
 80187c8:	eb02 0c07 	add.w	ip, r2, r7
 80187cc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80187d0:	f115 0e0f 	adds.w	lr, r5, #15
 80187d4:	f100 80a2 	bmi.w	801891c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80187d8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80187dc:	9c08      	ldr	r4, [sp, #32]
 80187de:	f8c0 e014 	str.w	lr, [r0, #20]
 80187e2:	2614      	movs	r6, #20
 80187e4:	4366      	muls	r6, r4
 80187e6:	eb02 0806 	add.w	r8, r2, r6
 80187ea:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80187ee:	f115 040f 	adds.w	r4, r5, #15
 80187f2:	f100 809f 	bmi.w	8018934 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80187f6:	1124      	asrs	r4, r4, #4
 80187f8:	eba4 040e 	sub.w	r4, r4, lr
 80187fc:	6184      	str	r4, [r0, #24]
 80187fe:	2c00      	cmp	r4, #0
 8018800:	f000 808a 	beq.w	8018918 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8018804:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8018808:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801880c:	5995      	ldr	r5, [r2, r6]
 801880e:	eba4 0809 	sub.w	r8, r4, r9
 8018812:	59d4      	ldr	r4, [r2, r7]
 8018814:	eba5 0a04 	sub.w	sl, r5, r4
 8018818:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801881c:	fb0e fe05 	mul.w	lr, lr, r5
 8018820:	fb0a ee19 	mls	lr, sl, r9, lr
 8018824:	fb08 e404 	mla	r4, r8, r4, lr
 8018828:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801882c:	3c01      	subs	r4, #1
 801882e:	19a4      	adds	r4, r4, r6
 8018830:	f100 808c 	bmi.w	801894c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018834:	fb94 fef6 	sdiv	lr, r4, r6
 8018838:	f8c0 e000 	str.w	lr, [r0]
 801883c:	fb06 441e 	mls	r4, r6, lr, r4
 8018840:	6104      	str	r4, [r0, #16]
 8018842:	2d00      	cmp	r5, #0
 8018844:	f2c0 8095 	blt.w	8018972 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8018848:	fb95 f4f6 	sdiv	r4, r5, r6
 801884c:	6044      	str	r4, [r0, #4]
 801884e:	fb06 5514 	mls	r5, r6, r4, r5
 8018852:	6085      	str	r5, [r0, #8]
 8018854:	60c6      	str	r6, [r0, #12]
 8018856:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801885a:	6945      	ldr	r5, [r0, #20]
 801885c:	59d2      	ldr	r2, [r2, r7]
 801885e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8018994 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8018862:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018866:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801886a:	ee07 4a10 	vmov	s14, r4
 801886e:	6804      	ldr	r4, [r0, #0]
 8018870:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8018874:	ee07 2a90 	vmov	s15, r2
 8018878:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801887c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018880:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018884:	ee27 7a26 	vmul.f32	s14, s14, s13
 8018888:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801888c:	edd3 6a00 	vldr	s13, [r3]
 8018890:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018894:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8018898:	eee6 6a27 	vfma.f32	s13, s12, s15
 801889c:	edc0 6a07 	vstr	s13, [r0, #28]
 80188a0:	edd0 6a01 	vldr	s13, [r0, #4]
 80188a4:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80188a8:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80188ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80188b0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80188b4:	ed80 6a08 	vstr	s12, [r0, #32]
 80188b8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80188ba:	6242      	str	r2, [r0, #36]	; 0x24
 80188bc:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80188c0:	ed93 6a03 	vldr	s12, [r3, #12]
 80188c4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80188c8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80188cc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80188d0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80188d4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80188d8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80188dc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80188e0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80188e4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80188e6:	6302      	str	r2, [r0, #48]	; 0x30
 80188e8:	ed93 6a06 	vldr	s12, [r3, #24]
 80188ec:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80188f0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80188f4:	eeb0 7a46 	vmov.f32	s14, s12
 80188f8:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80188fc:	eea6 7a27 	vfma.f32	s14, s12, s15
 8018900:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018904:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8018908:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801890c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018910:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8018914:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8018916:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018918:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801891c:	f1c5 0501 	rsb	r5, r5, #1
 8018920:	f015 050f 	ands.w	r5, r5, #15
 8018924:	bf18      	it	ne
 8018926:	2501      	movne	r5, #1
 8018928:	2410      	movs	r4, #16
 801892a:	fb9e fef4 	sdiv	lr, lr, r4
 801892e:	ebae 0e05 	sub.w	lr, lr, r5
 8018932:	e753      	b.n	80187dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018934:	f1c5 0501 	rsb	r5, r5, #1
 8018938:	f015 050f 	ands.w	r5, r5, #15
 801893c:	bf18      	it	ne
 801893e:	2501      	movne	r5, #1
 8018940:	f04f 0910 	mov.w	r9, #16
 8018944:	fb94 f4f9 	sdiv	r4, r4, r9
 8018948:	1b64      	subs	r4, r4, r5
 801894a:	e755      	b.n	80187f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801894c:	4264      	negs	r4, r4
 801894e:	fb94 fef6 	sdiv	lr, r4, r6
 8018952:	f1ce 0800 	rsb	r8, lr, #0
 8018956:	fb06 441e 	mls	r4, r6, lr, r4
 801895a:	f8c0 8000 	str.w	r8, [r0]
 801895e:	6104      	str	r4, [r0, #16]
 8018960:	2c00      	cmp	r4, #0
 8018962:	f43f af6e 	beq.w	8018842 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8018966:	ea6f 0e0e 	mvn.w	lr, lr
 801896a:	f8c0 e000 	str.w	lr, [r0]
 801896e:	1b34      	subs	r4, r6, r4
 8018970:	e766      	b.n	8018840 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8018972:	426d      	negs	r5, r5
 8018974:	fb95 f4f6 	sdiv	r4, r5, r6
 8018978:	f1c4 0e00 	rsb	lr, r4, #0
 801897c:	fb06 5514 	mls	r5, r6, r4, r5
 8018980:	f8c0 e004 	str.w	lr, [r0, #4]
 8018984:	6085      	str	r5, [r0, #8]
 8018986:	2d00      	cmp	r5, #0
 8018988:	f43f af64 	beq.w	8018854 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801898c:	43e4      	mvns	r4, r4
 801898e:	6044      	str	r4, [r0, #4]
 8018990:	1b75      	subs	r5, r6, r5
 8018992:	e75e      	b.n	8018852 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018994:	3d800000 	.word	0x3d800000

08018998 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8018998:	4602      	mov	r2, r0
 801899a:	b148      	cbz	r0, 80189b0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801899c:	2300      	movs	r3, #0
 801899e:	b298      	uxth	r0, r3
 80189a0:	3301      	adds	r3, #1
 80189a2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80189a6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80189aa:	2900      	cmp	r1, #0
 80189ac:	d1f7      	bne.n	801899e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80189ae:	4770      	bx	lr
 80189b0:	4770      	bx	lr

080189b2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80189b2:	b530      	push	{r4, r5, lr}
 80189b4:	4604      	mov	r4, r0
 80189b6:	b159      	cbz	r1, 80189d0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80189b8:	b148      	cbz	r0, 80189ce <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80189ba:	2300      	movs	r3, #0
 80189bc:	b298      	uxth	r0, r3
 80189be:	4282      	cmp	r2, r0
 80189c0:	d905      	bls.n	80189ce <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80189c2:	5ccd      	ldrb	r5, [r1, r3]
 80189c4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80189c8:	3301      	adds	r3, #1
 80189ca:	2d00      	cmp	r5, #0
 80189cc:	d1f6      	bne.n	80189bc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80189ce:	bd30      	pop	{r4, r5, pc}
 80189d0:	4608      	mov	r0, r1
 80189d2:	e7fc      	b.n	80189ce <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080189d4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80189d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80189d6:	b08b      	sub	sp, #44	; 0x2c
 80189d8:	468c      	mov	ip, r1
 80189da:	2100      	movs	r1, #0
 80189dc:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80189e0:	4604      	mov	r4, r0
 80189e2:	261f      	movs	r6, #31
 80189e4:	af01      	add	r7, sp, #4
 80189e6:	fb94 fef3 	sdiv	lr, r4, r3
 80189ea:	fb03 441e 	mls	r4, r3, lr, r4
 80189ee:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80189f2:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80189f6:	b2ec      	uxtb	r4, r5
 80189f8:	2d09      	cmp	r5, #9
 80189fa:	bfd4      	ite	le
 80189fc:	3430      	addle	r4, #48	; 0x30
 80189fe:	3457      	addgt	r4, #87	; 0x57
 8018a00:	b2e4      	uxtb	r4, r4
 8018a02:	55bc      	strb	r4, [r7, r6]
 8018a04:	4674      	mov	r4, lr
 8018a06:	1e71      	subs	r1, r6, #1
 8018a08:	b974      	cbnz	r4, 8018a28 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8018a0a:	2800      	cmp	r0, #0
 8018a0c:	da05      	bge.n	8018a1a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8018a0e:	ab0a      	add	r3, sp, #40	; 0x28
 8018a10:	4419      	add	r1, r3
 8018a12:	232d      	movs	r3, #45	; 0x2d
 8018a14:	f801 3c24 	strb.w	r3, [r1, #-36]
 8018a18:	1eb1      	subs	r1, r6, #2
 8018a1a:	3101      	adds	r1, #1
 8018a1c:	4439      	add	r1, r7
 8018a1e:	4660      	mov	r0, ip
 8018a20:	f7ff ffc7 	bl	80189b2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018a24:	b00b      	add	sp, #44	; 0x2c
 8018a26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018a28:	460e      	mov	r6, r1
 8018a2a:	e7dc      	b.n	80189e6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08018a2c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8018a2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018a2e:	b08b      	sub	sp, #44	; 0x2c
 8018a30:	468c      	mov	ip, r1
 8018a32:	2100      	movs	r1, #0
 8018a34:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018a38:	ae01      	add	r6, sp, #4
 8018a3a:	211f      	movs	r1, #31
 8018a3c:	fbb0 f7f3 	udiv	r7, r0, r3
 8018a40:	fb03 0517 	mls	r5, r3, r7, r0
 8018a44:	b2ec      	uxtb	r4, r5
 8018a46:	2d09      	cmp	r5, #9
 8018a48:	bfd4      	ite	le
 8018a4a:	3430      	addle	r4, #48	; 0x30
 8018a4c:	3457      	addgt	r4, #87	; 0x57
 8018a4e:	b2e4      	uxtb	r4, r4
 8018a50:	558c      	strb	r4, [r1, r6]
 8018a52:	4638      	mov	r0, r7
 8018a54:	1e4c      	subs	r4, r1, #1
 8018a56:	b92f      	cbnz	r7, 8018a64 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8018a58:	4431      	add	r1, r6
 8018a5a:	4660      	mov	r0, ip
 8018a5c:	f7ff ffa9 	bl	80189b2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018a60:	b00b      	add	sp, #44	; 0x2c
 8018a62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018a64:	4621      	mov	r1, r4
 8018a66:	e7e9      	b.n	8018a3c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08018a68 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8018a68:	b410      	push	{r4}
 8018a6a:	b131      	cbz	r1, 8018a7a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018a6c:	1e9c      	subs	r4, r3, #2
 8018a6e:	2c22      	cmp	r4, #34	; 0x22
 8018a70:	d803      	bhi.n	8018a7a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018a72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018a76:	f7ff bfad 	b.w	80189d4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018a7a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018a7e:	4770      	bx	lr

08018a80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a84:	4691      	mov	r9, r2
 8018a86:	b085      	sub	sp, #20
 8018a88:	6802      	ldr	r2, [r0, #0]
 8018a8a:	9201      	str	r2, [sp, #4]
 8018a8c:	4688      	mov	r8, r1
 8018a8e:	4683      	mov	fp, r0
 8018a90:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018a94:	9103      	str	r1, [sp, #12]
 8018a96:	4610      	mov	r0, r2
 8018a98:	461c      	mov	r4, r3
 8018a9a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018a9e:	9302      	str	r3, [sp, #8]
 8018aa0:	f7ff ff7a 	bl	8018998 <_ZN8touchgfx7Unicode6strlenEPKt>
 8018aa4:	f1b8 0f00 	cmp.w	r8, #0
 8018aa8:	bf0c      	ite	eq
 8018aaa:	4684      	moveq	ip, r0
 8018aac:	f100 0c01 	addne.w	ip, r0, #1
 8018ab0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018ab4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8018ab8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8018aba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018abc:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018ac0:	9903      	ldr	r1, [sp, #12]
 8018ac2:	fa1f fc8c 	uxth.w	ip, ip
 8018ac6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8018aca:	d041      	beq.n	8018b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018acc:	d834      	bhi.n	8018b38 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018ace:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018ad2:	d059      	beq.n	8018b88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018ad4:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8018ad8:	d03a      	beq.n	8018b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018ada:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8018ade:	d034      	beq.n	8018b4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018ae0:	2400      	movs	r4, #0
 8018ae2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8018ae6:	3a01      	subs	r2, #1
 8018ae8:	b169      	cbz	r1, 8018b06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018aea:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018aec:	458c      	cmp	ip, r1
 8018aee:	da09      	bge.n	8018b04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018af0:	eba1 010c 	sub.w	r1, r1, ip
 8018af4:	b289      	uxth	r1, r1
 8018af6:	b933      	cbnz	r3, 8018b06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018af8:	2e00      	cmp	r6, #0
 8018afa:	d051      	beq.n	8018ba0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018afc:	2800      	cmp	r0, #0
 8018afe:	d04f      	beq.n	8018ba0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018b00:	440c      	add	r4, r1
 8018b02:	b2a4      	uxth	r4, r4
 8018b04:	2100      	movs	r1, #0
 8018b06:	682b      	ldr	r3, [r5, #0]
 8018b08:	4293      	cmp	r3, r2
 8018b0a:	da07      	bge.n	8018b1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018b0c:	f1b8 0f00 	cmp.w	r8, #0
 8018b10:	d004      	beq.n	8018b1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018b12:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8018b16:	682b      	ldr	r3, [r5, #0]
 8018b18:	3301      	adds	r3, #1
 8018b1a:	602b      	str	r3, [r5, #0]
 8018b1c:	2730      	movs	r7, #48	; 0x30
 8018b1e:	2c00      	cmp	r4, #0
 8018b20:	d04e      	beq.n	8018bc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018b22:	682e      	ldr	r6, [r5, #0]
 8018b24:	3c01      	subs	r4, #1
 8018b26:	42b2      	cmp	r2, r6
 8018b28:	b2a4      	uxth	r4, r4
 8018b2a:	dd49      	ble.n	8018bc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018b2c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018b30:	682b      	ldr	r3, [r5, #0]
 8018b32:	3301      	adds	r3, #1
 8018b34:	602b      	str	r3, [r5, #0]
 8018b36:	e7f2      	b.n	8018b1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8018b38:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018b3c:	d01d      	beq.n	8018b7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018b3e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018b42:	d002      	beq.n	8018b4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018b44:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8018b48:	e7c9      	b.n	8018ade <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8018b4a:	4684      	mov	ip, r0
 8018b4c:	f04f 0800 	mov.w	r8, #0
 8018b50:	2c00      	cmp	r4, #0
 8018b52:	d0c6      	beq.n	8018ae2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018b54:	b947      	cbnz	r7, 8018b68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018b56:	2801      	cmp	r0, #1
 8018b58:	d106      	bne.n	8018b68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018b5a:	8814      	ldrh	r4, [r2, #0]
 8018b5c:	2c30      	cmp	r4, #48	; 0x30
 8018b5e:	bf02      	ittt	eq
 8018b60:	3202      	addeq	r2, #2
 8018b62:	f8cb 2000 	streq.w	r2, [fp]
 8018b66:	4638      	moveq	r0, r7
 8018b68:	45bc      	cmp	ip, r7
 8018b6a:	da14      	bge.n	8018b96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018b6c:	b2bf      	uxth	r7, r7
 8018b6e:	eba7 040c 	sub.w	r4, r7, ip
 8018b72:	b2a4      	uxth	r4, r4
 8018b74:	46bc      	mov	ip, r7
 8018b76:	2600      	movs	r6, #0
 8018b78:	e7b3      	b.n	8018ae2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018b7a:	4684      	mov	ip, r0
 8018b7c:	b16c      	cbz	r4, 8018b9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018b7e:	42b8      	cmp	r0, r7
 8018b80:	dd00      	ble.n	8018b84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018b82:	b2b8      	uxth	r0, r7
 8018b84:	2400      	movs	r4, #0
 8018b86:	e003      	b.n	8018b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8018b88:	f04f 0c01 	mov.w	ip, #1
 8018b8c:	2400      	movs	r4, #0
 8018b8e:	4660      	mov	r0, ip
 8018b90:	4626      	mov	r6, r4
 8018b92:	46a0      	mov	r8, r4
 8018b94:	e7a5      	b.n	8018ae2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018b96:	2400      	movs	r4, #0
 8018b98:	e7ed      	b.n	8018b76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8018b9a:	4626      	mov	r6, r4
 8018b9c:	46a0      	mov	r8, r4
 8018b9e:	e7a0      	b.n	8018ae2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018ba0:	2900      	cmp	r1, #0
 8018ba2:	d0b0      	beq.n	8018b06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018ba4:	2720      	movs	r7, #32
 8018ba6:	682e      	ldr	r6, [r5, #0]
 8018ba8:	2900      	cmp	r1, #0
 8018baa:	d0ac      	beq.n	8018b06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018bac:	3901      	subs	r1, #1
 8018bae:	4296      	cmp	r6, r2
 8018bb0:	b289      	uxth	r1, r1
 8018bb2:	daa7      	bge.n	8018b04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018bb4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018bb8:	682b      	ldr	r3, [r5, #0]
 8018bba:	3301      	adds	r3, #1
 8018bbc:	602b      	str	r3, [r5, #0]
 8018bbe:	e7f2      	b.n	8018ba6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018bc0:	b188      	cbz	r0, 8018be6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018bc2:	682b      	ldr	r3, [r5, #0]
 8018bc4:	3801      	subs	r0, #1
 8018bc6:	429a      	cmp	r2, r3
 8018bc8:	b280      	uxth	r0, r0
 8018bca:	dd0c      	ble.n	8018be6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018bcc:	f8db 3000 	ldr.w	r3, [fp]
 8018bd0:	1c9c      	adds	r4, r3, #2
 8018bd2:	f8cb 4000 	str.w	r4, [fp]
 8018bd6:	881c      	ldrh	r4, [r3, #0]
 8018bd8:	682b      	ldr	r3, [r5, #0]
 8018bda:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8018bde:	682b      	ldr	r3, [r5, #0]
 8018be0:	3301      	adds	r3, #1
 8018be2:	602b      	str	r3, [r5, #0]
 8018be4:	e7ec      	b.n	8018bc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018be6:	2620      	movs	r6, #32
 8018be8:	b151      	cbz	r1, 8018c00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018bea:	6828      	ldr	r0, [r5, #0]
 8018bec:	3901      	subs	r1, #1
 8018bee:	4282      	cmp	r2, r0
 8018bf0:	b289      	uxth	r1, r1
 8018bf2:	dd05      	ble.n	8018c00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018bf4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8018bf8:	682b      	ldr	r3, [r5, #0]
 8018bfa:	3301      	adds	r3, #1
 8018bfc:	602b      	str	r3, [r5, #0]
 8018bfe:	e7f3      	b.n	8018be8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018c00:	b005      	add	sp, #20
 8018c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018c06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8018c06:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018c0a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018c0e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018c12:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8018c16:	2400      	movs	r4, #0
 8018c18:	8014      	strh	r4, [r2, #0]
 8018c1a:	701c      	strb	r4, [r3, #0]
 8018c1c:	f888 4000 	strb.w	r4, [r8]
 8018c20:	f88c 4000 	strb.w	r4, [ip]
 8018c24:	f88e 4000 	strb.w	r4, [lr]
 8018c28:	703c      	strb	r4, [r7, #0]
 8018c2a:	6804      	ldr	r4, [r0, #0]
 8018c2c:	b1a4      	cbz	r4, 8018c58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018c2e:	8824      	ldrh	r4, [r4, #0]
 8018c30:	f04f 0901 	mov.w	r9, #1
 8018c34:	b314      	cbz	r4, 8018c7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018c36:	2c2b      	cmp	r4, #43	; 0x2b
 8018c38:	d001      	beq.n	8018c3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8018c3a:	2c20      	cmp	r4, #32
 8018c3c:	d110      	bne.n	8018c60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018c3e:	8014      	strh	r4, [r2, #0]
 8018c40:	6804      	ldr	r4, [r0, #0]
 8018c42:	b10c      	cbz	r4, 8018c48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018c44:	3402      	adds	r4, #2
 8018c46:	6004      	str	r4, [r0, #0]
 8018c48:	680c      	ldr	r4, [r1, #0]
 8018c4a:	b10c      	cbz	r4, 8018c50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018c4c:	3401      	adds	r4, #1
 8018c4e:	600c      	str	r4, [r1, #0]
 8018c50:	6804      	ldr	r4, [r0, #0]
 8018c52:	b17c      	cbz	r4, 8018c74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018c54:	8824      	ldrh	r4, [r4, #0]
 8018c56:	e7ed      	b.n	8018c34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018c58:	680c      	ldr	r4, [r1, #0]
 8018c5a:	b17c      	cbz	r4, 8018c7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018c5c:	7824      	ldrb	r4, [r4, #0]
 8018c5e:	e7e7      	b.n	8018c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018c60:	2c2d      	cmp	r4, #45	; 0x2d
 8018c62:	d102      	bne.n	8018c6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018c64:	f883 9000 	strb.w	r9, [r3]
 8018c68:	e7ea      	b.n	8018c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018c6a:	2c23      	cmp	r4, #35	; 0x23
 8018c6c:	d107      	bne.n	8018c7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018c6e:	f888 9000 	strb.w	r9, [r8]
 8018c72:	e7e5      	b.n	8018c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018c74:	680c      	ldr	r4, [r1, #0]
 8018c76:	b10c      	cbz	r4, 8018c7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018c78:	7824      	ldrb	r4, [r4, #0]
 8018c7a:	e7db      	b.n	8018c34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018c7c:	2400      	movs	r4, #0
 8018c7e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018c82:	2b09      	cmp	r3, #9
 8018c84:	d901      	bls.n	8018c8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018c86:	2c2a      	cmp	r4, #42	; 0x2a
 8018c88:	d122      	bne.n	8018cd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018c8a:	2301      	movs	r3, #1
 8018c8c:	2c30      	cmp	r4, #48	; 0x30
 8018c8e:	f88e 3000 	strb.w	r3, [lr]
 8018c92:	d10d      	bne.n	8018cb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018c94:	f88c 3000 	strb.w	r3, [ip]
 8018c98:	6803      	ldr	r3, [r0, #0]
 8018c9a:	b10b      	cbz	r3, 8018ca0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018c9c:	3302      	adds	r3, #2
 8018c9e:	6003      	str	r3, [r0, #0]
 8018ca0:	680b      	ldr	r3, [r1, #0]
 8018ca2:	b10b      	cbz	r3, 8018ca8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018ca4:	3301      	adds	r3, #1
 8018ca6:	600b      	str	r3, [r1, #0]
 8018ca8:	6803      	ldr	r3, [r0, #0]
 8018caa:	2b00      	cmp	r3, #0
 8018cac:	d02f      	beq.n	8018d0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018cae:	881c      	ldrh	r4, [r3, #0]
 8018cb0:	2c2a      	cmp	r4, #42	; 0x2a
 8018cb2:	d135      	bne.n	8018d20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018cb4:	f04f 33ff 	mov.w	r3, #4294967295
 8018cb8:	6033      	str	r3, [r6, #0]
 8018cba:	6803      	ldr	r3, [r0, #0]
 8018cbc:	b10b      	cbz	r3, 8018cc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018cbe:	3302      	adds	r3, #2
 8018cc0:	6003      	str	r3, [r0, #0]
 8018cc2:	680b      	ldr	r3, [r1, #0]
 8018cc4:	b10b      	cbz	r3, 8018cca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018cc6:	3301      	adds	r3, #1
 8018cc8:	600b      	str	r3, [r1, #0]
 8018cca:	6803      	ldr	r3, [r0, #0]
 8018ccc:	b31b      	cbz	r3, 8018d16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018cce:	881c      	ldrh	r4, [r3, #0]
 8018cd0:	2c2e      	cmp	r4, #46	; 0x2e
 8018cd2:	d11a      	bne.n	8018d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018cd4:	2301      	movs	r3, #1
 8018cd6:	703b      	strb	r3, [r7, #0]
 8018cd8:	6803      	ldr	r3, [r0, #0]
 8018cda:	b10b      	cbz	r3, 8018ce0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018cdc:	3302      	adds	r3, #2
 8018cde:	6003      	str	r3, [r0, #0]
 8018ce0:	680b      	ldr	r3, [r1, #0]
 8018ce2:	b10b      	cbz	r3, 8018ce8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018ce4:	3301      	adds	r3, #1
 8018ce6:	600b      	str	r3, [r1, #0]
 8018ce8:	6803      	ldr	r3, [r0, #0]
 8018cea:	2b00      	cmp	r3, #0
 8018cec:	d036      	beq.n	8018d5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018cee:	881b      	ldrh	r3, [r3, #0]
 8018cf0:	2b2a      	cmp	r3, #42	; 0x2a
 8018cf2:	d137      	bne.n	8018d64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018cf4:	f04f 33ff 	mov.w	r3, #4294967295
 8018cf8:	602b      	str	r3, [r5, #0]
 8018cfa:	6803      	ldr	r3, [r0, #0]
 8018cfc:	b10b      	cbz	r3, 8018d02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018cfe:	3302      	adds	r3, #2
 8018d00:	6003      	str	r3, [r0, #0]
 8018d02:	680b      	ldr	r3, [r1, #0]
 8018d04:	b10b      	cbz	r3, 8018d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018d06:	3301      	adds	r3, #1
 8018d08:	600b      	str	r3, [r1, #0]
 8018d0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018d0e:	680c      	ldr	r4, [r1, #0]
 8018d10:	b134      	cbz	r4, 8018d20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018d12:	7824      	ldrb	r4, [r4, #0]
 8018d14:	e7cc      	b.n	8018cb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018d16:	680b      	ldr	r3, [r1, #0]
 8018d18:	2b00      	cmp	r3, #0
 8018d1a:	d0f6      	beq.n	8018d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018d1c:	781c      	ldrb	r4, [r3, #0]
 8018d1e:	e7d7      	b.n	8018cd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018d20:	2300      	movs	r3, #0
 8018d22:	6033      	str	r3, [r6, #0]
 8018d24:	220a      	movs	r2, #10
 8018d26:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018d2a:	fa1f f38c 	uxth.w	r3, ip
 8018d2e:	2b09      	cmp	r3, #9
 8018d30:	d8ce      	bhi.n	8018cd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018d32:	6833      	ldr	r3, [r6, #0]
 8018d34:	fb02 c303 	mla	r3, r2, r3, ip
 8018d38:	6033      	str	r3, [r6, #0]
 8018d3a:	6803      	ldr	r3, [r0, #0]
 8018d3c:	b10b      	cbz	r3, 8018d42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018d3e:	3302      	adds	r3, #2
 8018d40:	6003      	str	r3, [r0, #0]
 8018d42:	680b      	ldr	r3, [r1, #0]
 8018d44:	b10b      	cbz	r3, 8018d4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018d46:	3301      	adds	r3, #1
 8018d48:	600b      	str	r3, [r1, #0]
 8018d4a:	6803      	ldr	r3, [r0, #0]
 8018d4c:	b10b      	cbz	r3, 8018d52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018d4e:	881c      	ldrh	r4, [r3, #0]
 8018d50:	e7e9      	b.n	8018d26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018d52:	680c      	ldr	r4, [r1, #0]
 8018d54:	2c00      	cmp	r4, #0
 8018d56:	d0e6      	beq.n	8018d26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018d58:	7824      	ldrb	r4, [r4, #0]
 8018d5a:	e7e4      	b.n	8018d26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018d5c:	680b      	ldr	r3, [r1, #0]
 8018d5e:	b10b      	cbz	r3, 8018d64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018d60:	781b      	ldrb	r3, [r3, #0]
 8018d62:	e7c5      	b.n	8018cf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018d64:	2200      	movs	r2, #0
 8018d66:	602a      	str	r2, [r5, #0]
 8018d68:	240a      	movs	r4, #10
 8018d6a:	3b30      	subs	r3, #48	; 0x30
 8018d6c:	b29e      	uxth	r6, r3
 8018d6e:	2e09      	cmp	r6, #9
 8018d70:	682a      	ldr	r2, [r5, #0]
 8018d72:	d813      	bhi.n	8018d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018d74:	fb04 3302 	mla	r3, r4, r2, r3
 8018d78:	602b      	str	r3, [r5, #0]
 8018d7a:	6803      	ldr	r3, [r0, #0]
 8018d7c:	b10b      	cbz	r3, 8018d82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018d7e:	3302      	adds	r3, #2
 8018d80:	6003      	str	r3, [r0, #0]
 8018d82:	680b      	ldr	r3, [r1, #0]
 8018d84:	b10b      	cbz	r3, 8018d8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018d86:	3301      	adds	r3, #1
 8018d88:	600b      	str	r3, [r1, #0]
 8018d8a:	6803      	ldr	r3, [r0, #0]
 8018d8c:	b10b      	cbz	r3, 8018d92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018d8e:	881b      	ldrh	r3, [r3, #0]
 8018d90:	e7eb      	b.n	8018d6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018d92:	680b      	ldr	r3, [r1, #0]
 8018d94:	2b00      	cmp	r3, #0
 8018d96:	d0e8      	beq.n	8018d6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018d98:	781b      	ldrb	r3, [r3, #0]
 8018d9a:	e7e6      	b.n	8018d6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018d9c:	2a06      	cmp	r2, #6
 8018d9e:	bfa8      	it	ge
 8018da0:	2206      	movge	r2, #6
 8018da2:	602a      	str	r2, [r5, #0]
 8018da4:	e7b1      	b.n	8018d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018da6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018daa:	b0a3      	sub	sp, #140	; 0x8c
 8018dac:	2600      	movs	r6, #0
 8018dae:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018db2:	4607      	mov	r7, r0
 8018db4:	4688      	mov	r8, r1
 8018db6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018dba:	4631      	mov	r1, r6
 8018dbc:	2242      	movs	r2, #66	; 0x42
 8018dbe:	4648      	mov	r0, r9
 8018dc0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018dc2:	960d      	str	r6, [sp, #52]	; 0x34
 8018dc4:	f012 f881 	bl	802aeca <memset>
 8018dc8:	b15f      	cbz	r7, 8018de2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018dca:	f108 3aff 	add.w	sl, r8, #4294967295
 8018dce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018dd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018dd2:	b152      	cbz	r2, 8018dea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018dd4:	8812      	ldrh	r2, [r2, #0]
 8018dd6:	b10a      	cbz	r2, 8018ddc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018dd8:	459a      	cmp	sl, r3
 8018dda:	dc2e      	bgt.n	8018e3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018ddc:	2200      	movs	r2, #0
 8018dde:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018de2:	4638      	mov	r0, r7
 8018de4:	b023      	add	sp, #140	; 0x8c
 8018de6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dea:	9a08      	ldr	r2, [sp, #32]
 8018dec:	2a00      	cmp	r2, #0
 8018dee:	d0f5      	beq.n	8018ddc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018df0:	7812      	ldrb	r2, [r2, #0]
 8018df2:	e7f0      	b.n	8018dd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018df4:	2d00      	cmp	r5, #0
 8018df6:	d0ea      	beq.n	8018dce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018df8:	782a      	ldrb	r2, [r5, #0]
 8018dfa:	b142      	cbz	r2, 8018e0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018dfc:	2a25      	cmp	r2, #37	; 0x25
 8018dfe:	d001      	beq.n	8018e04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018e00:	459a      	cmp	sl, r3
 8018e02:	dc08      	bgt.n	8018e16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018e04:	f1bb 0f00 	cmp.w	fp, #0
 8018e08:	d121      	bne.n	8018e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018e0a:	2d00      	cmp	r5, #0
 8018e0c:	d0df      	beq.n	8018dce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018e0e:	782a      	ldrb	r2, [r5, #0]
 8018e10:	f04f 0b00 	mov.w	fp, #0
 8018e14:	e01d      	b.n	8018e52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018e16:	f1bb 0f00 	cmp.w	fp, #0
 8018e1a:	d078      	beq.n	8018f0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018e1c:	f8bb 2000 	ldrh.w	r2, [fp]
 8018e20:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018e24:	f1bb 0f00 	cmp.w	fp, #0
 8018e28:	d002      	beq.n	8018e30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8018e2a:	f10b 0202 	add.w	r2, fp, #2
 8018e2e:	9209      	str	r2, [sp, #36]	; 0x24
 8018e30:	b10d      	cbz	r5, 8018e36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018e32:	3501      	adds	r5, #1
 8018e34:	9508      	str	r5, [sp, #32]
 8018e36:	3301      	adds	r3, #1
 8018e38:	930d      	str	r3, [sp, #52]	; 0x34
 8018e3a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018e3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018e40:	f1bb 0f00 	cmp.w	fp, #0
 8018e44:	d0d6      	beq.n	8018df4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018e46:	f8bb 2000 	ldrh.w	r2, [fp]
 8018e4a:	2a00      	cmp	r2, #0
 8018e4c:	d1d6      	bne.n	8018dfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018e4e:	f8bb 2000 	ldrh.w	r2, [fp]
 8018e52:	2a00      	cmp	r2, #0
 8018e54:	d0bb      	beq.n	8018dce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018e56:	459a      	cmp	sl, r3
 8018e58:	ddb9      	ble.n	8018dce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018e5a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018e5e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018e62:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8018e66:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8018e6a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018e6e:	960e      	str	r6, [sp, #56]	; 0x38
 8018e70:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018e74:	960f      	str	r6, [sp, #60]	; 0x3c
 8018e76:	f1bb 0f00 	cmp.w	fp, #0
 8018e7a:	d002      	beq.n	8018e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018e7c:	f10b 0302 	add.w	r3, fp, #2
 8018e80:	9309      	str	r3, [sp, #36]	; 0x24
 8018e82:	b10d      	cbz	r5, 8018e88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018e84:	1c6b      	adds	r3, r5, #1
 8018e86:	9308      	str	r3, [sp, #32]
 8018e88:	ab0f      	add	r3, sp, #60	; 0x3c
 8018e8a:	9305      	str	r3, [sp, #20]
 8018e8c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018e90:	9304      	str	r3, [sp, #16]
 8018e92:	ab0e      	add	r3, sp, #56	; 0x38
 8018e94:	9303      	str	r3, [sp, #12]
 8018e96:	ab0c      	add	r3, sp, #48	; 0x30
 8018e98:	9302      	str	r3, [sp, #8]
 8018e9a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018e9e:	9301      	str	r3, [sp, #4]
 8018ea0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018ea4:	9300      	str	r3, [sp, #0]
 8018ea6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018eaa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018eae:	a908      	add	r1, sp, #32
 8018eb0:	a809      	add	r0, sp, #36	; 0x24
 8018eb2:	f7ff fea8 	bl	8018c06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018eb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018eb8:	2b00      	cmp	r3, #0
 8018eba:	bfbe      	ittt	lt
 8018ebc:	6823      	ldrlt	r3, [r4, #0]
 8018ebe:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018ec2:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018ec4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018ec6:	bfb8      	it	lt
 8018ec8:	3404      	addlt	r4, #4
 8018eca:	2b00      	cmp	r3, #0
 8018ecc:	bfb8      	it	lt
 8018ece:	6823      	ldrlt	r3, [r4, #0]
 8018ed0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018ed4:	bfbe      	ittt	lt
 8018ed6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018eda:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018edc:	3404      	addlt	r4, #4
 8018ede:	b1d9      	cbz	r1, 8018f18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018ee0:	880b      	ldrh	r3, [r1, #0]
 8018ee2:	2b69      	cmp	r3, #105	; 0x69
 8018ee4:	d01f      	beq.n	8018f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018ee6:	d82f      	bhi.n	8018f48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018ee8:	2b58      	cmp	r3, #88	; 0x58
 8018eea:	d01c      	beq.n	8018f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018eec:	d818      	bhi.n	8018f20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018eee:	2b25      	cmp	r3, #37	; 0x25
 8018ef0:	d034      	beq.n	8018f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018ef2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018ef6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ef8:	f1bb 0f00 	cmp.w	fp, #0
 8018efc:	f000 80b8 	beq.w	8019070 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018f00:	f8bb 5000 	ldrh.w	r5, [fp]
 8018f04:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018f08:	3301      	adds	r3, #1
 8018f0a:	930d      	str	r3, [sp, #52]	; 0x34
 8018f0c:	e029      	b.n	8018f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018f0e:	b10d      	cbz	r5, 8018f14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018f10:	782a      	ldrb	r2, [r5, #0]
 8018f12:	e785      	b.n	8018e20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018f14:	462a      	mov	r2, r5
 8018f16:	e783      	b.n	8018e20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018f18:	2a00      	cmp	r2, #0
 8018f1a:	d0ea      	beq.n	8018ef2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018f1c:	7813      	ldrb	r3, [r2, #0]
 8018f1e:	e7e0      	b.n	8018ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8018f20:	3b63      	subs	r3, #99	; 0x63
 8018f22:	2b01      	cmp	r3, #1
 8018f24:	d8e5      	bhi.n	8018ef2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018f26:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018f2a:	b329      	cbz	r1, 8018f78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018f2c:	880b      	ldrh	r3, [r1, #0]
 8018f2e:	2b69      	cmp	r3, #105	; 0x69
 8018f30:	d063      	beq.n	8018ffa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018f32:	d825      	bhi.n	8018f80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018f34:	2b63      	cmp	r3, #99	; 0x63
 8018f36:	d038      	beq.n	8018faa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018f38:	2b64      	cmp	r3, #100	; 0x64
 8018f3a:	d05e      	beq.n	8018ffa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018f3c:	2b58      	cmp	r3, #88	; 0x58
 8018f3e:	d07b      	beq.n	8019038 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018f40:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018f44:	4625      	mov	r5, r4
 8018f46:	e036      	b.n	8018fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018f48:	2b73      	cmp	r3, #115	; 0x73
 8018f4a:	d0ec      	beq.n	8018f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018f4c:	d802      	bhi.n	8018f54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018f4e:	2b6f      	cmp	r3, #111	; 0x6f
 8018f50:	d1cf      	bne.n	8018ef2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018f52:	e7e8      	b.n	8018f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018f54:	2b75      	cmp	r3, #117	; 0x75
 8018f56:	d0e6      	beq.n	8018f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018f58:	2b78      	cmp	r3, #120	; 0x78
 8018f5a:	e7f9      	b.n	8018f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018f5c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f5e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018f62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f64:	b10b      	cbz	r3, 8018f6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018f66:	3302      	adds	r3, #2
 8018f68:	9309      	str	r3, [sp, #36]	; 0x24
 8018f6a:	9b08      	ldr	r3, [sp, #32]
 8018f6c:	2b00      	cmp	r3, #0
 8018f6e:	f43f af2e 	beq.w	8018dce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018f72:	3301      	adds	r3, #1
 8018f74:	9308      	str	r3, [sp, #32]
 8018f76:	e72a      	b.n	8018dce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018f78:	2a00      	cmp	r2, #0
 8018f7a:	d0e1      	beq.n	8018f40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018f7c:	7813      	ldrb	r3, [r2, #0]
 8018f7e:	e7d6      	b.n	8018f2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018f80:	2b73      	cmp	r3, #115	; 0x73
 8018f82:	d036      	beq.n	8018ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018f84:	d807      	bhi.n	8018f96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018f86:	2b6f      	cmp	r3, #111	; 0x6f
 8018f88:	d1da      	bne.n	8018f40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018f8a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f8c:	1d25      	adds	r5, r4, #4
 8018f8e:	eba8 0202 	sub.w	r2, r8, r2
 8018f92:	2308      	movs	r3, #8
 8018f94:	e04a      	b.n	801902c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018f96:	2b75      	cmp	r3, #117	; 0x75
 8018f98:	d043      	beq.n	8019022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018f9a:	2b78      	cmp	r3, #120	; 0x78
 8018f9c:	d1d0      	bne.n	8018f40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018f9e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018fa0:	1d25      	adds	r5, r4, #4
 8018fa2:	eba8 0202 	sub.w	r2, r8, r2
 8018fa6:	2310      	movs	r3, #16
 8018fa8:	e040      	b.n	801902c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018faa:	6823      	ldr	r3, [r4, #0]
 8018fac:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018fb0:	1d25      	adds	r5, r4, #4
 8018fb2:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018fb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018fb8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018fbc:	2b00      	cmp	r3, #0
 8018fbe:	d052      	beq.n	8019066 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018fc0:	881a      	ldrh	r2, [r3, #0]
 8018fc2:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018fc6:	a80d      	add	r0, sp, #52	; 0x34
 8018fc8:	9005      	str	r0, [sp, #20]
 8018fca:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018fce:	9004      	str	r0, [sp, #16]
 8018fd0:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018fd2:	9003      	str	r0, [sp, #12]
 8018fd4:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018fd8:	9002      	str	r0, [sp, #8]
 8018fda:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018fdc:	9001      	str	r0, [sp, #4]
 8018fde:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018fe2:	9000      	str	r0, [sp, #0]
 8018fe4:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018fe8:	a810      	add	r0, sp, #64	; 0x40
 8018fea:	f7ff fd49 	bl	8018a80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018fee:	462c      	mov	r4, r5
 8018ff0:	e7b7      	b.n	8018f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018ff2:	6823      	ldr	r3, [r4, #0]
 8018ff4:	1d25      	adds	r5, r4, #4
 8018ff6:	9310      	str	r3, [sp, #64]	; 0x40
 8018ff8:	e7dd      	b.n	8018fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018ffa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018ffc:	6820      	ldr	r0, [r4, #0]
 8018ffe:	eba8 0202 	sub.w	r2, r8, r2
 8019002:	230a      	movs	r3, #10
 8019004:	b292      	uxth	r2, r2
 8019006:	4649      	mov	r1, r9
 8019008:	f7ff fce4 	bl	80189d4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801900c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019010:	2b2d      	cmp	r3, #45	; 0x2d
 8019012:	f104 0504 	add.w	r5, r4, #4
 8019016:	d1ce      	bne.n	8018fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019018:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801901c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801901e:	3302      	adds	r3, #2
 8019020:	e7e9      	b.n	8018ff6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8019022:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019024:	1d25      	adds	r5, r4, #4
 8019026:	eba8 0202 	sub.w	r2, r8, r2
 801902a:	230a      	movs	r3, #10
 801902c:	b292      	uxth	r2, r2
 801902e:	4649      	mov	r1, r9
 8019030:	6820      	ldr	r0, [r4, #0]
 8019032:	f7ff fcfb 	bl	8018a2c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019036:	e7be      	b.n	8018fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019038:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801903a:	6820      	ldr	r0, [r4, #0]
 801903c:	eba8 0202 	sub.w	r2, r8, r2
 8019040:	b292      	uxth	r2, r2
 8019042:	2310      	movs	r3, #16
 8019044:	4649      	mov	r1, r9
 8019046:	f7ff fcf1 	bl	8018a2c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801904a:	1d25      	adds	r5, r4, #4
 801904c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019050:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019054:	2b00      	cmp	r3, #0
 8019056:	d0ae      	beq.n	8018fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019058:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801905c:	2919      	cmp	r1, #25
 801905e:	d8f7      	bhi.n	8019050 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019060:	3b20      	subs	r3, #32
 8019062:	8013      	strh	r3, [r2, #0]
 8019064:	e7f4      	b.n	8019050 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019066:	9a08      	ldr	r2, [sp, #32]
 8019068:	2a00      	cmp	r2, #0
 801906a:	d0aa      	beq.n	8018fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801906c:	7812      	ldrb	r2, [r2, #0]
 801906e:	e7a8      	b.n	8018fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019070:	2d00      	cmp	r5, #0
 8019072:	f43f af47 	beq.w	8018f04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8019076:	782d      	ldrb	r5, [r5, #0]
 8019078:	e744      	b.n	8018f04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801907a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801907a:	b507      	push	{r0, r1, r2, lr}
 801907c:	9300      	str	r3, [sp, #0]
 801907e:	4613      	mov	r3, r2
 8019080:	2200      	movs	r2, #0
 8019082:	f7ff fe90 	bl	8018da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8019086:	b003      	add	sp, #12
 8019088:	f85d fb04 	ldr.w	pc, [sp], #4

0801908c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801908c:	b40c      	push	{r2, r3}
 801908e:	b507      	push	{r0, r1, r2, lr}
 8019090:	ab04      	add	r3, sp, #16
 8019092:	f853 2b04 	ldr.w	r2, [r3], #4
 8019096:	9301      	str	r3, [sp, #4]
 8019098:	f7ff ffef 	bl	801907a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801909c:	b003      	add	sp, #12
 801909e:	f85d eb04 	ldr.w	lr, [sp], #4
 80190a2:	b002      	add	sp, #8
 80190a4:	4770      	bx	lr
	...

080190a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 80190a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190ac:	b0c5      	sub	sp, #276	; 0x114
 80190ae:	2400      	movs	r4, #0
 80190b0:	af11      	add	r7, sp, #68	; 0x44
 80190b2:	4606      	mov	r6, r0
 80190b4:	468a      	mov	sl, r1
 80190b6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80190ba:	4621      	mov	r1, r4
 80190bc:	22c8      	movs	r2, #200	; 0xc8
 80190be:	4638      	mov	r0, r7
 80190c0:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 80190c4:	940d      	str	r4, [sp, #52]	; 0x34
 80190c6:	f011 ff00 	bl	802aeca <memset>
 80190ca:	b16e      	cbz	r6, 80190e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80190cc:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8019370 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80190d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80190d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80190d4:	b162      	cbz	r2, 80190f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 80190d6:	8812      	ldrh	r2, [r2, #0]
 80190d8:	b11a      	cbz	r2, 80190e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80190da:	f10a 31ff 	add.w	r1, sl, #4294967295
 80190de:	4299      	cmp	r1, r3
 80190e0:	dc2e      	bgt.n	8019140 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 80190e2:	2200      	movs	r2, #0
 80190e4:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80190e8:	4630      	mov	r0, r6
 80190ea:	b045      	add	sp, #276	; 0x114
 80190ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190f0:	9a08      	ldr	r2, [sp, #32]
 80190f2:	2a00      	cmp	r2, #0
 80190f4:	d0f5      	beq.n	80190e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80190f6:	7812      	ldrb	r2, [r2, #0]
 80190f8:	e7ee      	b.n	80190d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 80190fa:	2d00      	cmp	r5, #0
 80190fc:	d0e8      	beq.n	80190d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80190fe:	782a      	ldrb	r2, [r5, #0]
 8019100:	b142      	cbz	r2, 8019114 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8019102:	2a25      	cmp	r2, #37	; 0x25
 8019104:	d001      	beq.n	801910a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8019106:	4299      	cmp	r1, r3
 8019108:	dc08      	bgt.n	801911c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801910a:	f1b8 0f00 	cmp.w	r8, #0
 801910e:	d121      	bne.n	8019154 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8019110:	2d00      	cmp	r5, #0
 8019112:	d0dd      	beq.n	80190d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019114:	782a      	ldrb	r2, [r5, #0]
 8019116:	f04f 0800 	mov.w	r8, #0
 801911a:	e01d      	b.n	8019158 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801911c:	f1b8 0f00 	cmp.w	r8, #0
 8019120:	d07f      	beq.n	8019222 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8019122:	f8b8 2000 	ldrh.w	r2, [r8]
 8019126:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801912a:	f1b8 0f00 	cmp.w	r8, #0
 801912e:	d002      	beq.n	8019136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019130:	f108 0202 	add.w	r2, r8, #2
 8019134:	9209      	str	r2, [sp, #36]	; 0x24
 8019136:	b10d      	cbz	r5, 801913c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8019138:	3501      	adds	r5, #1
 801913a:	9508      	str	r5, [sp, #32]
 801913c:	3301      	adds	r3, #1
 801913e:	930d      	str	r3, [sp, #52]	; 0x34
 8019140:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8019144:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019146:	f1b8 0f00 	cmp.w	r8, #0
 801914a:	d0d6      	beq.n	80190fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801914c:	f8b8 2000 	ldrh.w	r2, [r8]
 8019150:	2a00      	cmp	r2, #0
 8019152:	d1d6      	bne.n	8019102 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8019154:	f8b8 2000 	ldrh.w	r2, [r8]
 8019158:	2a00      	cmp	r2, #0
 801915a:	d0b9      	beq.n	80190d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801915c:	4299      	cmp	r1, r3
 801915e:	ddb7      	ble.n	80190d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019160:	2300      	movs	r3, #0
 8019162:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019166:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801916a:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801916e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8019172:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8019176:	930e      	str	r3, [sp, #56]	; 0x38
 8019178:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801917c:	930f      	str	r3, [sp, #60]	; 0x3c
 801917e:	f1b8 0f00 	cmp.w	r8, #0
 8019182:	d002      	beq.n	801918a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8019184:	f108 0302 	add.w	r3, r8, #2
 8019188:	9309      	str	r3, [sp, #36]	; 0x24
 801918a:	b10d      	cbz	r5, 8019190 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801918c:	1c6b      	adds	r3, r5, #1
 801918e:	9308      	str	r3, [sp, #32]
 8019190:	ab0f      	add	r3, sp, #60	; 0x3c
 8019192:	9305      	str	r3, [sp, #20]
 8019194:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019198:	9304      	str	r3, [sp, #16]
 801919a:	ab0e      	add	r3, sp, #56	; 0x38
 801919c:	9303      	str	r3, [sp, #12]
 801919e:	ab0c      	add	r3, sp, #48	; 0x30
 80191a0:	9302      	str	r3, [sp, #8]
 80191a2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80191a6:	9301      	str	r3, [sp, #4]
 80191a8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80191ac:	9300      	str	r3, [sp, #0]
 80191ae:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80191b2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80191b6:	a908      	add	r1, sp, #32
 80191b8:	a809      	add	r0, sp, #36	; 0x24
 80191ba:	f7ff fd24 	bl	8018c06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80191be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80191c0:	2b00      	cmp	r3, #0
 80191c2:	da0b      	bge.n	80191dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 80191c4:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80191c8:	edd3 7a00 	vldr	s15, [r3]
 80191cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80191d0:	3401      	adds	r4, #1
 80191d2:	ee17 3a90 	vmov	r3, s15
 80191d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80191da:	930e      	str	r3, [sp, #56]	; 0x38
 80191dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80191de:	2b00      	cmp	r3, #0
 80191e0:	da0b      	bge.n	80191fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 80191e2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80191e6:	edd3 7a00 	vldr	s15, [r3]
 80191ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80191ee:	3401      	adds	r4, #1
 80191f0:	ee17 3a90 	vmov	r3, s15
 80191f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80191f8:	930f      	str	r3, [sp, #60]	; 0x3c
 80191fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191fc:	b1b3      	cbz	r3, 801922c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 80191fe:	881a      	ldrh	r2, [r3, #0]
 8019200:	2a25      	cmp	r2, #37	; 0x25
 8019202:	d018      	beq.n	8019236 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8019204:	2a66      	cmp	r2, #102	; 0x66
 8019206:	d01c      	beq.n	8019242 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8019208:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801920c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801920e:	f1b8 0f00 	cmp.w	r8, #0
 8019212:	f000 8121 	beq.w	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8019216:	f8b8 5000 	ldrh.w	r5, [r8]
 801921a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801921e:	3301      	adds	r3, #1
 8019220:	e00d      	b.n	801923e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8019222:	b10d      	cbz	r5, 8019228 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8019224:	782a      	ldrb	r2, [r5, #0]
 8019226:	e77e      	b.n	8019126 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019228:	462a      	mov	r2, r5
 801922a:	e77c      	b.n	8019126 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801922c:	9b08      	ldr	r3, [sp, #32]
 801922e:	2b00      	cmp	r3, #0
 8019230:	d0ea      	beq.n	8019208 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019232:	781a      	ldrb	r2, [r3, #0]
 8019234:	e7e4      	b.n	8019200 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8019236:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019238:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801923c:	3302      	adds	r3, #2
 801923e:	930d      	str	r3, [sp, #52]	; 0x34
 8019240:	e041      	b.n	80192c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8019242:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019246:	edd3 7a00 	vldr	s15, [r3]
 801924a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801924e:	9710      	str	r7, [sp, #64]	; 0x40
 8019250:	3401      	adds	r4, #1
 8019252:	b923      	cbnz	r3, 801925e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8019254:	2301      	movs	r3, #1
 8019256:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801925a:	2306      	movs	r3, #6
 801925c:	930f      	str	r3, [sp, #60]	; 0x3c
 801925e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019262:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019266:	bf48      	it	mi
 8019268:	eef1 7a67 	vnegmi.f32	s15, s15
 801926c:	eeb0 7ae7 	vabs.f32	s14, s15
 8019270:	bf48      	it	mi
 8019272:	232d      	movmi	r3, #45	; 0x2d
 8019274:	eeb4 7a45 	vcmp.f32	s14, s10
 8019278:	bf48      	it	mi
 801927a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801927e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019282:	dd2b      	ble.n	80192dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8019284:	4b3b      	ldr	r3, [pc, #236]	; (8019374 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 8019286:	9311      	str	r3, [sp, #68]	; 0x44
 8019288:	2366      	movs	r3, #102	; 0x66
 801928a:	9312      	str	r3, [sp, #72]	; 0x48
 801928c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801928e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019292:	2b00      	cmp	r3, #0
 8019294:	f000 80da 	beq.w	801944c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8019298:	881a      	ldrh	r2, [r3, #0]
 801929a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801929e:	a80d      	add	r0, sp, #52	; 0x34
 80192a0:	9005      	str	r0, [sp, #20]
 80192a2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80192a6:	9004      	str	r0, [sp, #16]
 80192a8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80192aa:	9003      	str	r0, [sp, #12]
 80192ac:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80192b0:	9002      	str	r0, [sp, #8]
 80192b2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80192b4:	9001      	str	r0, [sp, #4]
 80192b6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80192ba:	9000      	str	r0, [sp, #0]
 80192bc:	e9cd a606 	strd	sl, r6, [sp, #24]
 80192c0:	a810      	add	r0, sp, #64	; 0x40
 80192c2:	f7ff fbdd 	bl	8018a80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80192c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80192c8:	b10b      	cbz	r3, 80192ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 80192ca:	3302      	adds	r3, #2
 80192cc:	9309      	str	r3, [sp, #36]	; 0x24
 80192ce:	9b08      	ldr	r3, [sp, #32]
 80192d0:	2b00      	cmp	r3, #0
 80192d2:	f43f aefd 	beq.w	80190d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80192d6:	3301      	adds	r3, #1
 80192d8:	9308      	str	r3, [sp, #32]
 80192da:	e6f9      	b.n	80190d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80192dc:	eef4 7a67 	vcmp.f32	s15, s15
 80192e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192e4:	d63a      	bvs.n	801935c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80192e6:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80192ea:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80192ee:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80192f2:	eeb0 6a67 	vmov.f32	s12, s15
 80192f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80192fa:	eef0 5a47 	vmov.f32	s11, s14
 80192fe:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019302:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019306:	da2d      	bge.n	8019364 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8019308:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801930a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801930e:	2100      	movs	r1, #0
 8019310:	eef0 4a46 	vmov.f32	s9, s12
 8019314:	ebaa 0202 	sub.w	r2, sl, r2
 8019318:	eef4 6ac6 	vcmpe.f32	s13, s12
 801931c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019320:	b28d      	uxth	r5, r1
 8019322:	db2c      	blt.n	801937e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019324:	1a53      	subs	r3, r2, r1
 8019326:	2b00      	cmp	r3, #0
 8019328:	dd29      	ble.n	801937e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801932a:	3101      	adds	r1, #1
 801932c:	2964      	cmp	r1, #100	; 0x64
 801932e:	d025      	beq.n	801937c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019330:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019334:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8019338:	ee17 3a10 	vmov	r3, s14
 801933c:	2b09      	cmp	r3, #9
 801933e:	bfa8      	it	ge
 8019340:	2309      	movge	r3, #9
 8019342:	ee07 3a10 	vmov	s14, r3
 8019346:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801934a:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801934e:	eee7 7a66 	vfms.f32	s15, s14, s13
 8019352:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8019356:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801935a:	e7dd      	b.n	8019318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801935c:	4b06      	ldr	r3, [pc, #24]	; (8019378 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801935e:	9311      	str	r3, [sp, #68]	; 0x44
 8019360:	236e      	movs	r3, #110	; 0x6e
 8019362:	e792      	b.n	801928a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8019364:	ee66 6a87 	vmul.f32	s13, s13, s14
 8019368:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801936c:	e7c7      	b.n	80192fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801936e:	bf00      	nop
 8019370:	7f7fffff 	.word	0x7f7fffff
 8019374:	006e0069 	.word	0x006e0069
 8019378:	0061006e 	.word	0x0061006e
 801937c:	2563      	movs	r5, #99	; 0x63
 801937e:	2a63      	cmp	r2, #99	; 0x63
 8019380:	bfd4      	ite	le
 8019382:	ebc5 0202 	rsble	r2, r5, r2
 8019386:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801938a:	2a00      	cmp	r2, #0
 801938c:	dd43      	ble.n	8019416 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801938e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019390:	2b00      	cmp	r3, #0
 8019392:	dd40      	ble.n	8019416 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019394:	f04f 0901 	mov.w	r9, #1
 8019398:	210a      	movs	r1, #10
 801939a:	f113 33ff 	adds.w	r3, r3, #4294967295
 801939e:	d30c      	bcc.n	80193ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 80193a0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80193a4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80193a8:	ee17 0a10 	vmov	r0, s14
 80193ac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80193b0:	fb01 0909 	mla	r9, r1, r9, r0
 80193b4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80193b8:	e7ef      	b.n	801939a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 80193ba:	3501      	adds	r5, #1
 80193bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80193be:	b292      	uxth	r2, r2
 80193c0:	230a      	movs	r3, #10
 80193c2:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 80193c6:	4648      	mov	r0, r9
 80193c8:	f7ff fb4e 	bl	8018a68 <_ZN8touchgfx7Unicode4itoaElPtti>
 80193cc:	f1b9 0f01 	cmp.w	r9, #1
 80193d0:	dc1f      	bgt.n	8019412 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 80193d2:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 80193d6:	2b00      	cmp	r3, #0
 80193d8:	bf0c      	ite	eq
 80193da:	2300      	moveq	r3, #0
 80193dc:	232e      	movne	r3, #46	; 0x2e
 80193de:	aa44      	add	r2, sp, #272	; 0x110
 80193e0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80193e4:	eef4 7ae4 	vcmpe.f32	s15, s9
 80193e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193ec:	f825 3ccc 	strh.w	r3, [r5, #-204]
 80193f0:	f6ff af4c 	blt.w	801928c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80193f4:	2300      	movs	r3, #0
 80193f6:	f838 2b02 	ldrh.w	r2, [r8], #2
 80193fa:	1c59      	adds	r1, r3, #1
 80193fc:	b98a      	cbnz	r2, 8019422 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 80193fe:	b29b      	uxth	r3, r3
 8019400:	2130      	movs	r1, #48	; 0x30
 8019402:	b983      	cbnz	r3, 8019426 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8019404:	2331      	movs	r3, #49	; 0x31
 8019406:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801940a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801940c:	3b02      	subs	r3, #2
 801940e:	9310      	str	r3, [sp, #64]	; 0x40
 8019410:	e73c      	b.n	801928c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019412:	232e      	movs	r3, #46	; 0x2e
 8019414:	e7e3      	b.n	80193de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8019416:	ab44      	add	r3, sp, #272	; 0x110
 8019418:	3501      	adds	r5, #1
 801941a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801941e:	2300      	movs	r3, #0
 8019420:	e7e0      	b.n	80193e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019422:	460b      	mov	r3, r1
 8019424:	e7e7      	b.n	80193f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8019426:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801942a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801942e:	2808      	cmp	r0, #8
 8019430:	d806      	bhi.n	8019440 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019432:	a944      	add	r1, sp, #272	; 0x110
 8019434:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8019438:	3201      	adds	r2, #1
 801943a:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801943e:	e725      	b.n	801928c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019440:	2a39      	cmp	r2, #57	; 0x39
 8019442:	bf08      	it	eq
 8019444:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8019448:	3b01      	subs	r3, #1
 801944a:	e7da      	b.n	8019402 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801944c:	9a08      	ldr	r2, [sp, #32]
 801944e:	2a00      	cmp	r2, #0
 8019450:	f43f af23 	beq.w	801929a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019454:	7812      	ldrb	r2, [r2, #0]
 8019456:	e720      	b.n	801929a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019458:	2d00      	cmp	r5, #0
 801945a:	f43f aede 	beq.w	801921a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801945e:	782d      	ldrb	r5, [r5, #0]
 8019460:	e6db      	b.n	801921a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019462:	bf00      	nop

08019464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8019464:	b507      	push	{r0, r1, r2, lr}
 8019466:	9300      	str	r3, [sp, #0]
 8019468:	4613      	mov	r3, r2
 801946a:	2200      	movs	r2, #0
 801946c:	f7ff fe1c 	bl	80190a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8019470:	b003      	add	sp, #12
 8019472:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08019478 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019478:	4b01      	ldr	r3, [pc, #4]	; (8019480 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801947a:	6018      	str	r0, [r3, #0]
 801947c:	4770      	bx	lr
 801947e:	bf00      	nop
 8019480:	20013324 	.word	0x20013324

08019484 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019484:	4b06      	ldr	r3, [pc, #24]	; (80194a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8019486:	881a      	ldrh	r2, [r3, #0]
 8019488:	4282      	cmp	r2, r0
 801948a:	d807      	bhi.n	801949c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801948c:	4b05      	ldr	r3, [pc, #20]	; (80194a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801948e:	881b      	ldrh	r3, [r3, #0]
 8019490:	4413      	add	r3, r2
 8019492:	4298      	cmp	r0, r3
 8019494:	bfac      	ite	ge
 8019496:	2000      	movge	r0, #0
 8019498:	2001      	movlt	r0, #1
 801949a:	4770      	bx	lr
 801949c:	2000      	movs	r0, #0
 801949e:	4770      	bx	lr
 80194a0:	20013344 	.word	0x20013344
 80194a4:	20013348 	.word	0x20013348

080194a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80194a8:	b508      	push	{r3, lr}
 80194aa:	4601      	mov	r1, r0
 80194ac:	f7ff ffea 	bl	8019484 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80194b0:	b118      	cbz	r0, 80194ba <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80194b2:	4b02      	ldr	r3, [pc, #8]	; (80194bc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80194b4:	681b      	ldr	r3, [r3, #0]
 80194b6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80194ba:	bd08      	pop	{r3, pc}
 80194bc:	20013328 	.word	0x20013328

080194c0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80194c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80194c2:	4c24      	ldr	r4, [pc, #144]	; (8019554 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80194c4:	6823      	ldr	r3, [r4, #0]
 80194c6:	2b00      	cmp	r3, #0
 80194c8:	d042      	beq.n	8019550 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80194ca:	4a23      	ldr	r2, [pc, #140]	; (8019558 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80194cc:	4d23      	ldr	r5, [pc, #140]	; (801955c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80194ce:	8811      	ldrh	r1, [r2, #0]
 80194d0:	f8b5 c000 	ldrh.w	ip, [r5]
 80194d4:	4822      	ldr	r0, [pc, #136]	; (8019560 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80194d6:	4461      	add	r1, ip
 80194d8:	1c4a      	adds	r2, r1, #1
 80194da:	f022 0201 	bic.w	r2, r2, #1
 80194de:	008f      	lsls	r7, r1, #2
 80194e0:	0412      	lsls	r2, r2, #16
 80194e2:	19de      	adds	r6, r3, r7
 80194e4:	0c12      	lsrs	r2, r2, #16
 80194e6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80194ea:	6006      	str	r6, [r0, #0]
 80194ec:	4e1d      	ldr	r6, [pc, #116]	; (8019564 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80194ee:	19da      	adds	r2, r3, r7
 80194f0:	6032      	str	r2, [r6, #0]
 80194f2:	220e      	movs	r2, #14
 80194f4:	fb02 f20c 	mul.w	r2, r2, ip
 80194f8:	3203      	adds	r2, #3
 80194fa:	f022 0203 	bic.w	r2, r2, #3
 80194fe:	443a      	add	r2, r7
 8019500:	4f19      	ldr	r7, [pc, #100]	; (8019568 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019502:	4413      	add	r3, r2
 8019504:	603b      	str	r3, [r7, #0]
 8019506:	4f19      	ldr	r7, [pc, #100]	; (801956c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8019508:	2300      	movs	r3, #0
 801950a:	803b      	strh	r3, [r7, #0]
 801950c:	4f18      	ldr	r7, [pc, #96]	; (8019570 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801950e:	683f      	ldr	r7, [r7, #0]
 8019510:	1aba      	subs	r2, r7, r2
 8019512:	4f18      	ldr	r7, [pc, #96]	; (8019574 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019514:	603a      	str	r2, [r7, #0]
 8019516:	4a18      	ldr	r2, [pc, #96]	; (8019578 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019518:	469c      	mov	ip, r3
 801951a:	8013      	strh	r3, [r2, #0]
 801951c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019520:	428b      	cmp	r3, r1
 8019522:	d10d      	bne.n	8019540 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019524:	882d      	ldrh	r5, [r5, #0]
 8019526:	6830      	ldr	r0, [r6, #0]
 8019528:	2300      	movs	r3, #0
 801952a:	240e      	movs	r4, #14
 801952c:	429d      	cmp	r5, r3
 801952e:	d90f      	bls.n	8019550 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019530:	fb04 0203 	mla	r2, r4, r3, r0
 8019534:	3301      	adds	r3, #1
 8019536:	7b11      	ldrb	r1, [r2, #12]
 8019538:	f36f 1145 	bfc	r1, #5, #1
 801953c:	7311      	strb	r1, [r2, #12]
 801953e:	e7f5      	b.n	801952c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019540:	6822      	ldr	r2, [r4, #0]
 8019542:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8019546:	6802      	ldr	r2, [r0, #0]
 8019548:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801954c:	3301      	adds	r3, #1
 801954e:	e7e7      	b.n	8019520 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019550:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019552:	bf00      	nop
 8019554:	20013328 	.word	0x20013328
 8019558:	20013344 	.word	0x20013344
 801955c:	20013348 	.word	0x20013348
 8019560:	2001333c 	.word	0x2001333c
 8019564:	2001332c 	.word	0x2001332c
 8019568:	20013334 	.word	0x20013334
 801956c:	20013346 	.word	0x20013346
 8019570:	20013330 	.word	0x20013330
 8019574:	20013340 	.word	0x20013340
 8019578:	20013338 	.word	0x20013338

0801957c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801957c:	4b06      	ldr	r3, [pc, #24]	; (8019598 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801957e:	681b      	ldr	r3, [r3, #0]
 8019580:	b943      	cbnz	r3, 8019594 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019582:	b139      	cbz	r1, 8019594 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019584:	4b05      	ldr	r3, [pc, #20]	; (801959c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8019586:	801a      	strh	r2, [r3, #0]
 8019588:	4b05      	ldr	r3, [pc, #20]	; (80195a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801958a:	6019      	str	r1, [r3, #0]
 801958c:	4b05      	ldr	r3, [pc, #20]	; (80195a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801958e:	6018      	str	r0, [r3, #0]
 8019590:	f7ff bf96 	b.w	80194c0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019594:	4770      	bx	lr
 8019596:	bf00      	nop
 8019598:	20013334 	.word	0x20013334
 801959c:	20013348 	.word	0x20013348
 80195a0:	20013330 	.word	0x20013330
 80195a4:	20013328 	.word	0x20013328

080195a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80195a8:	b470      	push	{r4, r5, r6}
 80195aa:	4c07      	ldr	r4, [pc, #28]	; (80195c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80195ac:	6826      	ldr	r6, [r4, #0]
 80195ae:	4605      	mov	r5, r0
 80195b0:	4610      	mov	r0, r2
 80195b2:	9a03      	ldr	r2, [sp, #12]
 80195b4:	b936      	cbnz	r6, 80195c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80195b6:	6025      	str	r5, [r4, #0]
 80195b8:	4c04      	ldr	r4, [pc, #16]	; (80195cc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80195ba:	8021      	strh	r1, [r4, #0]
 80195bc:	bc70      	pop	{r4, r5, r6}
 80195be:	4619      	mov	r1, r3
 80195c0:	f7ff bfdc 	b.w	801957c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80195c4:	bc70      	pop	{r4, r5, r6}
 80195c6:	4770      	bx	lr
 80195c8:	2001334c 	.word	0x2001334c
 80195cc:	20013344 	.word	0x20013344

080195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80195d0:	4a12      	ldr	r2, [pc, #72]	; (801961c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80195d2:	8803      	ldrh	r3, [r0, #0]
 80195d4:	8812      	ldrh	r2, [r2, #0]
 80195d6:	4293      	cmp	r3, r2
 80195d8:	d207      	bcs.n	80195ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80195da:	4a11      	ldr	r2, [pc, #68]	; (8019620 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80195dc:	6812      	ldr	r2, [r2, #0]
 80195de:	2114      	movs	r1, #20
 80195e0:	fb01 2303 	mla	r3, r1, r3, r2
 80195e4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80195e8:	4770      	bx	lr
 80195ea:	490e      	ldr	r1, [pc, #56]	; (8019624 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80195ec:	8809      	ldrh	r1, [r1, #0]
 80195ee:	4411      	add	r1, r2
 80195f0:	428b      	cmp	r3, r1
 80195f2:	da04      	bge.n	80195fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80195f4:	1a9b      	subs	r3, r3, r2
 80195f6:	4a0c      	ldr	r2, [pc, #48]	; (8019628 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80195f8:	210e      	movs	r1, #14
 80195fa:	6812      	ldr	r2, [r2, #0]
 80195fc:	e7f0      	b.n	80195e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80195fe:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019602:	4293      	cmp	r3, r2
 8019604:	d108      	bne.n	8019618 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8019606:	4b09      	ldr	r3, [pc, #36]	; (801962c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8019608:	781b      	ldrb	r3, [r3, #0]
 801960a:	b91b      	cbnz	r3, 8019614 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801960c:	4b08      	ldr	r3, [pc, #32]	; (8019630 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801960e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019612:	4770      	bx	lr
 8019614:	4b07      	ldr	r3, [pc, #28]	; (8019634 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8019616:	e7fa      	b.n	801960e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8019618:	2000      	movs	r0, #0
 801961a:	4770      	bx	lr
 801961c:	20013344 	.word	0x20013344
 8019620:	2001334c 	.word	0x2001334c
 8019624:	20013348 	.word	0x20013348
 8019628:	2001332c 	.word	0x2001332c
 801962c:	200132b4 	.word	0x200132b4
 8019630:	200132b6 	.word	0x200132b6
 8019634:	200132b8 	.word	0x200132b8

08019638 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019638:	4a12      	ldr	r2, [pc, #72]	; (8019684 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801963a:	8803      	ldrh	r3, [r0, #0]
 801963c:	8812      	ldrh	r2, [r2, #0]
 801963e:	4293      	cmp	r3, r2
 8019640:	d207      	bcs.n	8019652 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8019642:	4a11      	ldr	r2, [pc, #68]	; (8019688 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8019644:	6812      	ldr	r2, [r2, #0]
 8019646:	2114      	movs	r1, #20
 8019648:	fb01 2303 	mla	r3, r1, r3, r2
 801964c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019650:	4770      	bx	lr
 8019652:	490e      	ldr	r1, [pc, #56]	; (801968c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8019654:	8809      	ldrh	r1, [r1, #0]
 8019656:	4411      	add	r1, r2
 8019658:	428b      	cmp	r3, r1
 801965a:	da04      	bge.n	8019666 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801965c:	1a9b      	subs	r3, r3, r2
 801965e:	4a0c      	ldr	r2, [pc, #48]	; (8019690 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8019660:	210e      	movs	r1, #14
 8019662:	6812      	ldr	r2, [r2, #0]
 8019664:	e7f0      	b.n	8019648 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8019666:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801966a:	4293      	cmp	r3, r2
 801966c:	d108      	bne.n	8019680 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801966e:	4b09      	ldr	r3, [pc, #36]	; (8019694 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8019670:	781b      	ldrb	r3, [r3, #0]
 8019672:	b91b      	cbnz	r3, 801967c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8019674:	4b08      	ldr	r3, [pc, #32]	; (8019698 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8019676:	f9b3 0000 	ldrsh.w	r0, [r3]
 801967a:	4770      	bx	lr
 801967c:	4b07      	ldr	r3, [pc, #28]	; (801969c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801967e:	e7fa      	b.n	8019676 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8019680:	2000      	movs	r0, #0
 8019682:	4770      	bx	lr
 8019684:	20013344 	.word	0x20013344
 8019688:	2001334c 	.word	0x2001334c
 801968c:	20013348 	.word	0x20013348
 8019690:	2001332c 	.word	0x2001332c
 8019694:	200132b4 	.word	0x200132b4
 8019698:	200132b8 	.word	0x200132b8
 801969c:	200132b6 	.word	0x200132b6

080196a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80196a0:	b510      	push	{r4, lr}
 80196a2:	4a1f      	ldr	r2, [pc, #124]	; (8019720 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80196a4:	880b      	ldrh	r3, [r1, #0]
 80196a6:	8812      	ldrh	r2, [r2, #0]
 80196a8:	4293      	cmp	r3, r2
 80196aa:	d213      	bcs.n	80196d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80196ac:	4a1d      	ldr	r2, [pc, #116]	; (8019724 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80196ae:	6812      	ldr	r2, [r2, #0]
 80196b0:	2114      	movs	r1, #20
 80196b2:	fb01 2303 	mla	r3, r1, r3, r2
 80196b6:	8a1a      	ldrh	r2, [r3, #16]
 80196b8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80196bc:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80196c0:	8a5b      	ldrh	r3, [r3, #18]
 80196c2:	8004      	strh	r4, [r0, #0]
 80196c4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80196c8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80196cc:	8041      	strh	r1, [r0, #2]
 80196ce:	8082      	strh	r2, [r0, #4]
 80196d0:	80c3      	strh	r3, [r0, #6]
 80196d2:	e00e      	b.n	80196f2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80196d4:	4914      	ldr	r1, [pc, #80]	; (8019728 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80196d6:	8809      	ldrh	r1, [r1, #0]
 80196d8:	4411      	add	r1, r2
 80196da:	428b      	cmp	r3, r1
 80196dc:	da0a      	bge.n	80196f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80196de:	1a9b      	subs	r3, r3, r2
 80196e0:	4a12      	ldr	r2, [pc, #72]	; (801972c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80196e2:	6812      	ldr	r2, [r2, #0]
 80196e4:	210e      	movs	r1, #14
 80196e6:	fb01 2303 	mla	r3, r1, r3, r2
 80196ea:	681a      	ldr	r2, [r3, #0]
 80196ec:	6002      	str	r2, [r0, #0]
 80196ee:	685a      	ldr	r2, [r3, #4]
 80196f0:	6042      	str	r2, [r0, #4]
 80196f2:	bd10      	pop	{r4, pc}
 80196f4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80196f8:	4293      	cmp	r3, r2
 80196fa:	d10b      	bne.n	8019714 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80196fc:	4b0c      	ldr	r3, [pc, #48]	; (8019730 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80196fe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019702:	4b0c      	ldr	r3, [pc, #48]	; (8019734 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8019704:	8081      	strh	r1, [r0, #4]
 8019706:	f9b3 2000 	ldrsh.w	r2, [r3]
 801970a:	80c2      	strh	r2, [r0, #6]
 801970c:	2300      	movs	r3, #0
 801970e:	8003      	strh	r3, [r0, #0]
 8019710:	8043      	strh	r3, [r0, #2]
 8019712:	e7ee      	b.n	80196f2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019714:	2300      	movs	r3, #0
 8019716:	8003      	strh	r3, [r0, #0]
 8019718:	8043      	strh	r3, [r0, #2]
 801971a:	8083      	strh	r3, [r0, #4]
 801971c:	e7d8      	b.n	80196d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801971e:	bf00      	nop
 8019720:	20013344 	.word	0x20013344
 8019724:	2001334c 	.word	0x2001334c
 8019728:	20013348 	.word	0x20013348
 801972c:	2001332c 	.word	0x2001332c
 8019730:	200132b0 	.word	0x200132b0
 8019734:	200132b2 	.word	0x200132b2

08019738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019738:	4a17      	ldr	r2, [pc, #92]	; (8019798 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801973a:	8803      	ldrh	r3, [r0, #0]
 801973c:	8812      	ldrh	r2, [r2, #0]
 801973e:	4293      	cmp	r3, r2
 8019740:	d213      	bcs.n	801976a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8019742:	4a16      	ldr	r2, [pc, #88]	; (801979c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019744:	6812      	ldr	r2, [r2, #0]
 8019746:	2114      	movs	r1, #20
 8019748:	fb01 2303 	mla	r3, r1, r3, r2
 801974c:	8a1a      	ldrh	r2, [r3, #16]
 801974e:	8919      	ldrh	r1, [r3, #8]
 8019750:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019754:	428a      	cmp	r2, r1
 8019756:	db1d      	blt.n	8019794 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019758:	8a58      	ldrh	r0, [r3, #18]
 801975a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801975e:	895b      	ldrh	r3, [r3, #10]
 8019760:	4298      	cmp	r0, r3
 8019762:	bfac      	ite	ge
 8019764:	2000      	movge	r0, #0
 8019766:	2001      	movlt	r0, #1
 8019768:	4770      	bx	lr
 801976a:	490d      	ldr	r1, [pc, #52]	; (80197a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801976c:	8809      	ldrh	r1, [r1, #0]
 801976e:	4411      	add	r1, r2
 8019770:	428b      	cmp	r3, r1
 8019772:	da0d      	bge.n	8019790 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8019774:	1a9b      	subs	r3, r3, r2
 8019776:	4a0b      	ldr	r2, [pc, #44]	; (80197a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8019778:	6812      	ldr	r2, [r2, #0]
 801977a:	210e      	movs	r1, #14
 801977c:	fb01 2303 	mla	r3, r1, r3, r2
 8019780:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8019784:	891a      	ldrh	r2, [r3, #8]
 8019786:	4291      	cmp	r1, r2
 8019788:	db04      	blt.n	8019794 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801978a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801978e:	e7e6      	b.n	801975e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8019790:	2000      	movs	r0, #0
 8019792:	4770      	bx	lr
 8019794:	2001      	movs	r0, #1
 8019796:	4770      	bx	lr
 8019798:	20013344 	.word	0x20013344
 801979c:	2001334c 	.word	0x2001334c
 80197a0:	20013348 	.word	0x20013348
 80197a4:	2001332c 	.word	0x2001332c

080197a8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80197a8:	4a12      	ldr	r2, [pc, #72]	; (80197f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80197aa:	8803      	ldrh	r3, [r0, #0]
 80197ac:	8811      	ldrh	r1, [r2, #0]
 80197ae:	428b      	cmp	r3, r1
 80197b0:	d20b      	bcs.n	80197ca <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80197b2:	4a11      	ldr	r2, [pc, #68]	; (80197f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80197b4:	6812      	ldr	r2, [r2, #0]
 80197b6:	b112      	cbz	r2, 80197be <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80197b8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80197bc:	b9c0      	cbnz	r0, 80197f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80197be:	4a0f      	ldr	r2, [pc, #60]	; (80197fc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80197c0:	6811      	ldr	r1, [r2, #0]
 80197c2:	2214      	movs	r2, #20
 80197c4:	4353      	muls	r3, r2
 80197c6:	58c8      	ldr	r0, [r1, r3]
 80197c8:	4770      	bx	lr
 80197ca:	4a0d      	ldr	r2, [pc, #52]	; (8019800 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80197cc:	8812      	ldrh	r2, [r2, #0]
 80197ce:	440a      	add	r2, r1
 80197d0:	4293      	cmp	r3, r2
 80197d2:	da04      	bge.n	80197de <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80197d4:	4a08      	ldr	r2, [pc, #32]	; (80197f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80197d6:	6812      	ldr	r2, [r2, #0]
 80197d8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80197dc:	4770      	bx	lr
 80197de:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80197e2:	4293      	cmp	r3, r2
 80197e4:	d103      	bne.n	80197ee <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80197e6:	4b07      	ldr	r3, [pc, #28]	; (8019804 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80197e8:	681b      	ldr	r3, [r3, #0]
 80197ea:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80197ec:	4770      	bx	lr
 80197ee:	2000      	movs	r0, #0
 80197f0:	4770      	bx	lr
 80197f2:	bf00      	nop
 80197f4:	20013344 	.word	0x20013344
 80197f8:	20013328 	.word	0x20013328
 80197fc:	2001334c 	.word	0x2001334c
 8019800:	20013348 	.word	0x20013348
 8019804:	200132bc 	.word	0x200132bc

08019808 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8019808:	4b24      	ldr	r3, [pc, #144]	; (801989c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801980a:	8802      	ldrh	r2, [r0, #0]
 801980c:	8818      	ldrh	r0, [r3, #0]
 801980e:	4282      	cmp	r2, r0
 8019810:	d221      	bcs.n	8019856 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8019812:	4b23      	ldr	r3, [pc, #140]	; (80198a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019814:	6819      	ldr	r1, [r3, #0]
 8019816:	2314      	movs	r3, #20
 8019818:	fb03 1302 	mla	r3, r3, r2, r1
 801981c:	6858      	ldr	r0, [r3, #4]
 801981e:	2800      	cmp	r0, #0
 8019820:	d03a      	beq.n	8019898 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019822:	4920      	ldr	r1, [pc, #128]	; (80198a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019824:	6809      	ldr	r1, [r1, #0]
 8019826:	2900      	cmp	r1, #0
 8019828:	d036      	beq.n	8019898 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801982a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801982e:	2900      	cmp	r1, #0
 8019830:	d032      	beq.n	8019898 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019832:	891a      	ldrh	r2, [r3, #8]
 8019834:	8958      	ldrh	r0, [r3, #10]
 8019836:	4350      	muls	r0, r2
 8019838:	7c5a      	ldrb	r2, [r3, #17]
 801983a:	7cdb      	ldrb	r3, [r3, #19]
 801983c:	0952      	lsrs	r2, r2, #5
 801983e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019842:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8019846:	2b0b      	cmp	r3, #11
 8019848:	bf18      	it	ne
 801984a:	0040      	lslne	r0, r0, #1
 801984c:	3003      	adds	r0, #3
 801984e:	f020 0003 	bic.w	r0, r0, #3
 8019852:	4408      	add	r0, r1
 8019854:	4770      	bx	lr
 8019856:	4b14      	ldr	r3, [pc, #80]	; (80198a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8019858:	881b      	ldrh	r3, [r3, #0]
 801985a:	4403      	add	r3, r0
 801985c:	429a      	cmp	r2, r3
 801985e:	da1a      	bge.n	8019896 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019860:	4b12      	ldr	r3, [pc, #72]	; (80198ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019862:	681b      	ldr	r3, [r3, #0]
 8019864:	1a10      	subs	r0, r2, r0
 8019866:	210e      	movs	r1, #14
 8019868:	fb01 3000 	mla	r0, r1, r0, r3
 801986c:	7b03      	ldrb	r3, [r0, #12]
 801986e:	f003 031f 	and.w	r3, r3, #31
 8019872:	2b0b      	cmp	r3, #11
 8019874:	d10b      	bne.n	801988e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8019876:	8903      	ldrh	r3, [r0, #8]
 8019878:	8940      	ldrh	r0, [r0, #10]
 801987a:	4358      	muls	r0, r3
 801987c:	4b09      	ldr	r3, [pc, #36]	; (80198a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801987e:	6819      	ldr	r1, [r3, #0]
 8019880:	3003      	adds	r0, #3
 8019882:	f020 0303 	bic.w	r3, r0, #3
 8019886:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801988a:	4418      	add	r0, r3
 801988c:	4770      	bx	lr
 801988e:	2b0d      	cmp	r3, #13
 8019890:	d101      	bne.n	8019896 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019892:	300d      	adds	r0, #13
 8019894:	4770      	bx	lr
 8019896:	2000      	movs	r0, #0
 8019898:	4770      	bx	lr
 801989a:	bf00      	nop
 801989c:	20013344 	.word	0x20013344
 80198a0:	2001334c 	.word	0x2001334c
 80198a4:	20013328 	.word	0x20013328
 80198a8:	20013348 	.word	0x20013348
 80198ac:	2001332c 	.word	0x2001332c

080198b0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80198b0:	b510      	push	{r4, lr}
 80198b2:	4a17      	ldr	r2, [pc, #92]	; (8019910 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80198b4:	8803      	ldrh	r3, [r0, #0]
 80198b6:	8812      	ldrh	r2, [r2, #0]
 80198b8:	4293      	cmp	r3, r2
 80198ba:	d20c      	bcs.n	80198d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80198bc:	4a15      	ldr	r2, [pc, #84]	; (8019914 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80198be:	6812      	ldr	r2, [r2, #0]
 80198c0:	2114      	movs	r1, #20
 80198c2:	fb01 2303 	mla	r3, r1, r3, r2
 80198c6:	7c58      	ldrb	r0, [r3, #17]
 80198c8:	0942      	lsrs	r2, r0, #5
 80198ca:	7cd8      	ldrb	r0, [r3, #19]
 80198cc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80198d0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80198d4:	bd10      	pop	{r4, pc}
 80198d6:	4910      	ldr	r1, [pc, #64]	; (8019918 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80198d8:	8809      	ldrh	r1, [r1, #0]
 80198da:	4411      	add	r1, r2
 80198dc:	428b      	cmp	r3, r1
 80198de:	da09      	bge.n	80198f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80198e0:	1a9b      	subs	r3, r3, r2
 80198e2:	4a0e      	ldr	r2, [pc, #56]	; (801991c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80198e4:	6812      	ldr	r2, [r2, #0]
 80198e6:	210e      	movs	r1, #14
 80198e8:	fb01 2303 	mla	r3, r1, r3, r2
 80198ec:	7b18      	ldrb	r0, [r3, #12]
 80198ee:	f000 001f 	and.w	r0, r0, #31
 80198f2:	e7ef      	b.n	80198d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80198f4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80198f8:	4293      	cmp	r3, r2
 80198fa:	d106      	bne.n	801990a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80198fc:	f7ea fa74 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 8019900:	6803      	ldr	r3, [r0, #0]
 8019902:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019906:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019908:	4718      	bx	r3
 801990a:	2000      	movs	r0, #0
 801990c:	e7e2      	b.n	80198d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801990e:	bf00      	nop
 8019910:	20013344 	.word	0x20013344
 8019914:	2001334c 	.word	0x2001334c
 8019918:	20013348 	.word	0x20013348
 801991c:	2001332c 	.word	0x2001332c

08019920 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019920:	2010      	movs	r0, #16
 8019922:	4770      	bx	lr

08019924 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019924:	2000      	movs	r0, #0
 8019926:	4770      	bx	lr

08019928 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8019928:	4b02      	ldr	r3, [pc, #8]	; (8019934 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801992a:	8818      	ldrh	r0, [r3, #0]
 801992c:	0040      	lsls	r0, r0, #1
 801992e:	b280      	uxth	r0, r0
 8019930:	4770      	bx	lr
 8019932:	bf00      	nop
 8019934:	200132b6 	.word	0x200132b6

08019938 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019938:	2bff      	cmp	r3, #255	; 0xff
 801993a:	d050      	beq.n	80199de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801993c:	2a0b      	cmp	r2, #11
 801993e:	d04a      	beq.n	80199d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019940:	d80e      	bhi.n	8019960 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019942:	2a03      	cmp	r2, #3
 8019944:	d03f      	beq.n	80199c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8019946:	d804      	bhi.n	8019952 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8019948:	2a01      	cmp	r2, #1
 801994a:	d03e      	beq.n	80199ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801994c:	d93f      	bls.n	80199ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801994e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019950:	4770      	bx	lr
 8019952:	2a09      	cmp	r2, #9
 8019954:	d03f      	beq.n	80199d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019956:	d83c      	bhi.n	80199d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019958:	2a08      	cmp	r2, #8
 801995a:	d03a      	beq.n	80199d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801995c:	2000      	movs	r0, #0
 801995e:	4770      	bx	lr
 8019960:	2a2f      	cmp	r2, #47	; 0x2f
 8019962:	d024      	beq.n	80199ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019964:	d80d      	bhi.n	8019982 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8019966:	2a2d      	cmp	r2, #45	; 0x2d
 8019968:	d014      	beq.n	8019994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801996a:	d826      	bhi.n	80199ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801996c:	2a2c      	cmp	r2, #44	; 0x2c
 801996e:	d1f5      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019970:	684b      	ldr	r3, [r1, #4]
 8019972:	781b      	ldrb	r3, [r3, #0]
 8019974:	2b01      	cmp	r3, #1
 8019976:	d018      	beq.n	80199aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8019978:	d323      	bcc.n	80199c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801997a:	2b02      	cmp	r3, #2
 801997c:	d1ee      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801997e:	6880      	ldr	r0, [r0, #8]
 8019980:	4770      	bx	lr
 8019982:	2a31      	cmp	r2, #49	; 0x31
 8019984:	d004      	beq.n	8019990 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8019986:	d328      	bcc.n	80199da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019988:	2a32      	cmp	r2, #50	; 0x32
 801998a:	d026      	beq.n	80199da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801998c:	2a33      	cmp	r2, #51	; 0x33
 801998e:	d1e5      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019990:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019992:	4770      	bx	lr
 8019994:	684b      	ldr	r3, [r1, #4]
 8019996:	781b      	ldrb	r3, [r3, #0]
 8019998:	2b01      	cmp	r3, #1
 801999a:	d004      	beq.n	80199a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801999c:	d30b      	bcc.n	80199b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801999e:	2b02      	cmp	r3, #2
 80199a0:	d1dc      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199a2:	6900      	ldr	r0, [r0, #16]
 80199a4:	4770      	bx	lr
 80199a6:	6a00      	ldr	r0, [r0, #32]
 80199a8:	4770      	bx	lr
 80199aa:	6980      	ldr	r0, [r0, #24]
 80199ac:	4770      	bx	lr
 80199ae:	684b      	ldr	r3, [r1, #4]
 80199b0:	781b      	ldrb	r3, [r3, #0]
 80199b2:	2b00      	cmp	r3, #0
 80199b4:	d1d2      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199b6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80199b8:	4770      	bx	lr
 80199ba:	684b      	ldr	r3, [r1, #4]
 80199bc:	781b      	ldrb	r3, [r3, #0]
 80199be:	2b00      	cmp	r3, #0
 80199c0:	d1cc      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199c2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80199c4:	4770      	bx	lr
 80199c6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80199c8:	4770      	bx	lr
 80199ca:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80199cc:	4770      	bx	lr
 80199ce:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80199d0:	4770      	bx	lr
 80199d2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80199d4:	4770      	bx	lr
 80199d6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80199d8:	4770      	bx	lr
 80199da:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80199dc:	4770      	bx	lr
 80199de:	2a0b      	cmp	r2, #11
 80199e0:	d049      	beq.n	8019a76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80199e2:	d80e      	bhi.n	8019a02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80199e4:	2a03      	cmp	r2, #3
 80199e6:	d040      	beq.n	8019a6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80199e8:	d804      	bhi.n	80199f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80199ea:	2a01      	cmp	r2, #1
 80199ec:	d03f      	beq.n	8019a6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80199ee:	d940      	bls.n	8019a72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80199f0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80199f2:	4770      	bx	lr
 80199f4:	2a09      	cmp	r2, #9
 80199f6:	d03e      	beq.n	8019a76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80199f8:	d801      	bhi.n	80199fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80199fa:	2a08      	cmp	r2, #8
 80199fc:	d1ae      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199fe:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019a00:	4770      	bx	lr
 8019a02:	2a2f      	cmp	r2, #47	; 0x2f
 8019a04:	d024      	beq.n	8019a50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8019a06:	d80d      	bhi.n	8019a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8019a08:	2a2d      	cmp	r2, #45	; 0x2d
 8019a0a:	d014      	beq.n	8019a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019a0c:	d826      	bhi.n	8019a5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019a0e:	2a2c      	cmp	r2, #44	; 0x2c
 8019a10:	d1a4      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a12:	684b      	ldr	r3, [r1, #4]
 8019a14:	781b      	ldrb	r3, [r3, #0]
 8019a16:	2b01      	cmp	r3, #1
 8019a18:	d018      	beq.n	8019a4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8019a1a:	d324      	bcc.n	8019a66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019a1c:	2b02      	cmp	r3, #2
 8019a1e:	d19d      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a20:	68c0      	ldr	r0, [r0, #12]
 8019a22:	4770      	bx	lr
 8019a24:	2a31      	cmp	r2, #49	; 0x31
 8019a26:	d004      	beq.n	8019a32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8019a28:	d327      	bcc.n	8019a7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019a2a:	2a32      	cmp	r2, #50	; 0x32
 8019a2c:	d025      	beq.n	8019a7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019a2e:	2a33      	cmp	r2, #51	; 0x33
 8019a30:	d194      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a32:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019a34:	4770      	bx	lr
 8019a36:	684b      	ldr	r3, [r1, #4]
 8019a38:	781b      	ldrb	r3, [r3, #0]
 8019a3a:	2b01      	cmp	r3, #1
 8019a3c:	d004      	beq.n	8019a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019a3e:	d30b      	bcc.n	8019a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019a40:	2b02      	cmp	r3, #2
 8019a42:	d18b      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a44:	6940      	ldr	r0, [r0, #20]
 8019a46:	4770      	bx	lr
 8019a48:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8019a4a:	4770      	bx	lr
 8019a4c:	69c0      	ldr	r0, [r0, #28]
 8019a4e:	4770      	bx	lr
 8019a50:	684b      	ldr	r3, [r1, #4]
 8019a52:	781b      	ldrb	r3, [r3, #0]
 8019a54:	2b00      	cmp	r3, #0
 8019a56:	d181      	bne.n	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a58:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8019a5a:	4770      	bx	lr
 8019a5c:	684b      	ldr	r3, [r1, #4]
 8019a5e:	781b      	ldrb	r3, [r3, #0]
 8019a60:	2b00      	cmp	r3, #0
 8019a62:	f47f af7b 	bne.w	801995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a66:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8019a68:	4770      	bx	lr
 8019a6a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019a6c:	4770      	bx	lr
 8019a6e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019a70:	4770      	bx	lr
 8019a72:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019a74:	4770      	bx	lr
 8019a76:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8019a78:	4770      	bx	lr
 8019a7a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019a7c:	4770      	bx	lr

08019a7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a82:	b087      	sub	sp, #28
 8019a84:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019a86:	9205      	str	r2, [sp, #20]
 8019a88:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019a8c:	9202      	str	r2, [sp, #8]
 8019a8e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019a92:	9101      	str	r1, [sp, #4]
 8019a94:	6841      	ldr	r1, [r0, #4]
 8019a96:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019a9a:	fb01 2404 	mla	r4, r1, r4, r2
 8019a9e:	6802      	ldr	r2, [r0, #0]
 8019aa0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019aa4:	f8de 2000 	ldr.w	r2, [lr]
 8019aa8:	9203      	str	r2, [sp, #12]
 8019aaa:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019aae:	3204      	adds	r2, #4
 8019ab0:	9204      	str	r2, [sp, #16]
 8019ab2:	9a02      	ldr	r2, [sp, #8]
 8019ab4:	43d6      	mvns	r6, r2
 8019ab6:	b2f6      	uxtb	r6, r6
 8019ab8:	9a01      	ldr	r2, [sp, #4]
 8019aba:	2a00      	cmp	r2, #0
 8019abc:	dc03      	bgt.n	8019ac6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019abe:	9a05      	ldr	r2, [sp, #20]
 8019ac0:	2a00      	cmp	r2, #0
 8019ac2:	f340 8129 	ble.w	8019d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019ac6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019ac8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019acc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019ad0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019ad4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019ad6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ada:	2b00      	cmp	r3, #0
 8019adc:	dd0e      	ble.n	8019afc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019ade:	1408      	asrs	r0, r1, #16
 8019ae0:	d405      	bmi.n	8019aee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019ae2:	4560      	cmp	r0, ip
 8019ae4:	da03      	bge.n	8019aee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019ae6:	1410      	asrs	r0, r2, #16
 8019ae8:	d401      	bmi.n	8019aee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019aea:	42b8      	cmp	r0, r7
 8019aec:	db07      	blt.n	8019afe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019aee:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019af0:	4401      	add	r1, r0
 8019af2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019af4:	3b01      	subs	r3, #1
 8019af6:	4402      	add	r2, r0
 8019af8:	3402      	adds	r4, #2
 8019afa:	e7ee      	b.n	8019ada <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019afc:	d071      	beq.n	8019be2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019afe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019b00:	1e58      	subs	r0, r3, #1
 8019b02:	fb05 1500 	mla	r5, r5, r0, r1
 8019b06:	142d      	asrs	r5, r5, #16
 8019b08:	d45f      	bmi.n	8019bca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019b0a:	4565      	cmp	r5, ip
 8019b0c:	da5d      	bge.n	8019bca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019b0e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019b10:	fb05 2000 	mla	r0, r5, r0, r2
 8019b14:	1400      	asrs	r0, r0, #16
 8019b16:	d458      	bmi.n	8019bca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019b18:	42b8      	cmp	r0, r7
 8019b1a:	da56      	bge.n	8019bca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019b1c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019b20:	4699      	mov	r9, r3
 8019b22:	46a2      	mov	sl, r4
 8019b24:	f1b9 0f00 	cmp.w	r9, #0
 8019b28:	dd57      	ble.n	8019bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019b2a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019b2e:	9803      	ldr	r0, [sp, #12]
 8019b30:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019b34:	140d      	asrs	r5, r1, #16
 8019b36:	fb07 000c 	mla	r0, r7, ip, r0
 8019b3a:	f109 39ff 	add.w	r9, r9, #4294967295
 8019b3e:	5d40      	ldrb	r0, [r0, r5]
 8019b40:	9d04      	ldr	r5, [sp, #16]
 8019b42:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019b46:	f8ba 5000 	ldrh.w	r5, [sl]
 8019b4a:	122f      	asrs	r7, r5, #8
 8019b4c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019b50:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019b54:	fb17 f706 	smulbb	r7, r7, r6
 8019b58:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019b5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b60:	00ed      	lsls	r5, r5, #3
 8019b62:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019b66:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019b6a:	10c7      	asrs	r7, r0, #3
 8019b6c:	b2ed      	uxtb	r5, r5
 8019b6e:	00c0      	lsls	r0, r0, #3
 8019b70:	fb18 f806 	smulbb	r8, r8, r6
 8019b74:	fb15 f506 	smulbb	r5, r5, r6
 8019b78:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019b7c:	b2c0      	uxtb	r0, r0
 8019b7e:	fa1f fc8c 	uxth.w	ip, ip
 8019b82:	fb07 870b 	mla	r7, r7, fp, r8
 8019b86:	fb00 500b 	mla	r0, r0, fp, r5
 8019b8a:	b280      	uxth	r0, r0
 8019b8c:	b2bf      	uxth	r7, r7
 8019b8e:	f10c 0501 	add.w	r5, ip, #1
 8019b92:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019b96:	f107 0801 	add.w	r8, r7, #1
 8019b9a:	1c45      	adds	r5, r0, #1
 8019b9c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019ba0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019ba4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019ba6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019baa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019bae:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019bb2:	ea45 0c0c 	orr.w	ip, r5, ip
 8019bb6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019bba:	4401      	add	r1, r0
 8019bbc:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019bbe:	ea4c 0c08 	orr.w	ip, ip, r8
 8019bc2:	f82a cb02 	strh.w	ip, [sl], #2
 8019bc6:	4402      	add	r2, r0
 8019bc8:	e7ac      	b.n	8019b24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019bca:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019bce:	f04f 0800 	mov.w	r8, #0
 8019bd2:	eb03 0008 	add.w	r0, r3, r8
 8019bd6:	2800      	cmp	r0, #0
 8019bd8:	dc41      	bgt.n	8019c5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019bda:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019bde:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019be2:	9b01      	ldr	r3, [sp, #4]
 8019be4:	2b00      	cmp	r3, #0
 8019be6:	f340 8097 	ble.w	8019d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019bea:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019bee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019bf2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019bf6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019bf8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019bfc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019c04:	eef0 6a62 	vmov.f32	s13, s5
 8019c08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c10:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c14:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019c18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c1c:	eef0 6a43 	vmov.f32	s13, s6
 8019c20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c24:	ee12 2a90 	vmov	r2, s5
 8019c28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c30:	ee13 2a10 	vmov	r2, s6
 8019c34:	9313      	str	r3, [sp, #76]	; 0x4c
 8019c36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c38:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c3c:	9314      	str	r3, [sp, #80]	; 0x50
 8019c3e:	9b01      	ldr	r3, [sp, #4]
 8019c40:	9a05      	ldr	r2, [sp, #20]
 8019c42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c46:	3b01      	subs	r3, #1
 8019c48:	9301      	str	r3, [sp, #4]
 8019c4a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019c4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c50:	eeb0 3a67 	vmov.f32	s6, s15
 8019c54:	bf08      	it	eq
 8019c56:	4613      	moveq	r3, r2
 8019c58:	eef0 2a47 	vmov.f32	s5, s14
 8019c5c:	e72c      	b.n	8019ab8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019c5e:	140f      	asrs	r7, r1, #16
 8019c60:	d453      	bmi.n	8019d0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019c62:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019c66:	42bd      	cmp	r5, r7
 8019c68:	dd4f      	ble.n	8019d0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019c6a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019c6e:	d44c      	bmi.n	8019d0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019c70:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019c74:	4560      	cmp	r0, ip
 8019c76:	dd48      	ble.n	8019d0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019c78:	9803      	ldr	r0, [sp, #12]
 8019c7a:	b22d      	sxth	r5, r5
 8019c7c:	fb0c 0505 	mla	r5, ip, r5, r0
 8019c80:	5de8      	ldrb	r0, [r5, r7]
 8019c82:	9d04      	ldr	r5, [sp, #16]
 8019c84:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019c88:	f06f 0501 	mvn.w	r5, #1
 8019c8c:	fb05 fb08 	mul.w	fp, r5, r8
 8019c90:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019c94:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019c98:	122f      	asrs	r7, r5, #8
 8019c9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019c9e:	fb17 f706 	smulbb	r7, r7, r6
 8019ca2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019ca6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019caa:	00ed      	lsls	r5, r5, #3
 8019cac:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019cb0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019cb4:	10c7      	asrs	r7, r0, #3
 8019cb6:	b2ed      	uxtb	r5, r5
 8019cb8:	00c0      	lsls	r0, r0, #3
 8019cba:	fb19 f906 	smulbb	r9, r9, r6
 8019cbe:	fb15 f506 	smulbb	r5, r5, r6
 8019cc2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019cc6:	b2c0      	uxtb	r0, r0
 8019cc8:	fa1f fc8c 	uxth.w	ip, ip
 8019ccc:	fb07 970a 	mla	r7, r7, sl, r9
 8019cd0:	fb00 500a 	mla	r0, r0, sl, r5
 8019cd4:	b2bf      	uxth	r7, r7
 8019cd6:	b280      	uxth	r0, r0
 8019cd8:	f10c 0501 	add.w	r5, ip, #1
 8019cdc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019ce0:	f107 0901 	add.w	r9, r7, #1
 8019ce4:	1c45      	adds	r5, r0, #1
 8019ce6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019cea:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019cee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019cf2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019cf6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019cfa:	ea45 0c0c 	orr.w	ip, r5, ip
 8019cfe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019d02:	ea4c 0c09 	orr.w	ip, ip, r9
 8019d06:	f824 c00b 	strh.w	ip, [r4, fp]
 8019d0a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019d0c:	4401      	add	r1, r0
 8019d0e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019d10:	f108 38ff 	add.w	r8, r8, #4294967295
 8019d14:	4402      	add	r2, r0
 8019d16:	e75c      	b.n	8019bd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019d18:	b007      	add	sp, #28
 8019d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d22:	b085      	sub	sp, #20
 8019d24:	4693      	mov	fp, r2
 8019d26:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019d28:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019d2a:	6870      	ldr	r0, [r6, #4]
 8019d2c:	9100      	str	r1, [sp, #0]
 8019d2e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019d32:	fb00 2404 	mla	r4, r0, r4, r2
 8019d36:	6832      	ldr	r2, [r6, #0]
 8019d38:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019d3c:	682a      	ldr	r2, [r5, #0]
 8019d3e:	9201      	str	r2, [sp, #4]
 8019d40:	686a      	ldr	r2, [r5, #4]
 8019d42:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019d46:	3204      	adds	r2, #4
 8019d48:	9202      	str	r2, [sp, #8]
 8019d4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019d4e:	9a00      	ldr	r2, [sp, #0]
 8019d50:	2a00      	cmp	r2, #0
 8019d52:	dc03      	bgt.n	8019d5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019d54:	f1bb 0f00 	cmp.w	fp, #0
 8019d58:	f340 80a0 	ble.w	8019e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019d5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019d5e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019d62:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019d66:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019d6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019d6c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019d70:	2b00      	cmp	r3, #0
 8019d72:	dd0c      	ble.n	8019d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019d74:	1406      	asrs	r6, r0, #16
 8019d76:	d405      	bmi.n	8019d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d78:	454e      	cmp	r6, r9
 8019d7a:	da03      	bge.n	8019d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d7c:	1416      	asrs	r6, r2, #16
 8019d7e:	d401      	bmi.n	8019d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d80:	4546      	cmp	r6, r8
 8019d82:	db05      	blt.n	8019d90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019d84:	4470      	add	r0, lr
 8019d86:	4462      	add	r2, ip
 8019d88:	3b01      	subs	r3, #1
 8019d8a:	3402      	adds	r4, #2
 8019d8c:	e7f0      	b.n	8019d70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019d8e:	d00f      	beq.n	8019db0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019d90:	1e5e      	subs	r6, r3, #1
 8019d92:	fb0e 0706 	mla	r7, lr, r6, r0
 8019d96:	143f      	asrs	r7, r7, #16
 8019d98:	d541      	bpl.n	8019e1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019d9a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019d9e:	4698      	mov	r8, r3
 8019da0:	9603      	str	r6, [sp, #12]
 8019da2:	f1b8 0f00 	cmp.w	r8, #0
 8019da6:	dc59      	bgt.n	8019e5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019da8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019dac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019db0:	9b00      	ldr	r3, [sp, #0]
 8019db2:	2b00      	cmp	r3, #0
 8019db4:	dd72      	ble.n	8019e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019db6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019dba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019dbe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019dc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019dc4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019dc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019dcc:	eeb0 6a62 	vmov.f32	s12, s5
 8019dd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019dd4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019dd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ddc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019de0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019de4:	eeb0 6a43 	vmov.f32	s12, s6
 8019de8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019dec:	ee12 2a90 	vmov	r2, s5
 8019df0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019df4:	fb92 fef3 	sdiv	lr, r2, r3
 8019df8:	ee13 2a10 	vmov	r2, s6
 8019dfc:	fb92 fcf3 	sdiv	ip, r2, r3
 8019e00:	9b00      	ldr	r3, [sp, #0]
 8019e02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019e06:	3b01      	subs	r3, #1
 8019e08:	9300      	str	r3, [sp, #0]
 8019e0a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019e0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e10:	eeb0 3a67 	vmov.f32	s6, s15
 8019e14:	bf08      	it	eq
 8019e16:	465b      	moveq	r3, fp
 8019e18:	eef0 2a47 	vmov.f32	s5, s14
 8019e1c:	e797      	b.n	8019d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019e1e:	454f      	cmp	r7, r9
 8019e20:	dabb      	bge.n	8019d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019e22:	fb0c 2606 	mla	r6, ip, r6, r2
 8019e26:	1436      	asrs	r6, r6, #16
 8019e28:	d4b7      	bmi.n	8019d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019e2a:	4546      	cmp	r6, r8
 8019e2c:	dab5      	bge.n	8019d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019e2e:	461e      	mov	r6, r3
 8019e30:	46a0      	mov	r8, r4
 8019e32:	2e00      	cmp	r6, #0
 8019e34:	ddb8      	ble.n	8019da8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019e36:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019e3a:	9901      	ldr	r1, [sp, #4]
 8019e3c:	1417      	asrs	r7, r2, #16
 8019e3e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019e42:	fb0a 1707 	mla	r7, sl, r7, r1
 8019e46:	9902      	ldr	r1, [sp, #8]
 8019e48:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019e4c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019e50:	f828 7b02 	strh.w	r7, [r8], #2
 8019e54:	4470      	add	r0, lr
 8019e56:	4462      	add	r2, ip
 8019e58:	3e01      	subs	r6, #1
 8019e5a:	e7ea      	b.n	8019e32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019e5c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019e60:	d417      	bmi.n	8019e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019e62:	68ae      	ldr	r6, [r5, #8]
 8019e64:	454e      	cmp	r6, r9
 8019e66:	dd14      	ble.n	8019e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019e68:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019e6c:	d411      	bmi.n	8019e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019e6e:	68ef      	ldr	r7, [r5, #12]
 8019e70:	4557      	cmp	r7, sl
 8019e72:	dd0e      	ble.n	8019e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019e74:	9f01      	ldr	r7, [sp, #4]
 8019e76:	b236      	sxth	r6, r6
 8019e78:	fb0a 7606 	mla	r6, sl, r6, r7
 8019e7c:	9f02      	ldr	r7, [sp, #8]
 8019e7e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019e82:	f06f 0101 	mvn.w	r1, #1
 8019e86:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019e8a:	fb01 f608 	mul.w	r6, r1, r8
 8019e8e:	9903      	ldr	r1, [sp, #12]
 8019e90:	538f      	strh	r7, [r1, r6]
 8019e92:	4470      	add	r0, lr
 8019e94:	4462      	add	r2, ip
 8019e96:	f108 38ff 	add.w	r8, r8, #4294967295
 8019e9a:	e782      	b.n	8019da2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019e9c:	b005      	add	sp, #20
 8019e9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ea2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ea2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ea6:	b087      	sub	sp, #28
 8019ea8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019eaa:	9205      	str	r2, [sp, #20]
 8019eac:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019eb0:	9203      	str	r2, [sp, #12]
 8019eb2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019eb6:	9102      	str	r1, [sp, #8]
 8019eb8:	6861      	ldr	r1, [r4, #4]
 8019eba:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019ebe:	fb01 2000 	mla	r0, r1, r0, r2
 8019ec2:	6822      	ldr	r2, [r4, #0]
 8019ec4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019ec8:	9200      	str	r2, [sp, #0]
 8019eca:	f8dc 2000 	ldr.w	r2, [ip]
 8019ece:	9204      	str	r2, [sp, #16]
 8019ed0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019ed4:	3204      	adds	r2, #4
 8019ed6:	9201      	str	r2, [sp, #4]
 8019ed8:	9a03      	ldr	r2, [sp, #12]
 8019eda:	43d5      	mvns	r5, r2
 8019edc:	b2ed      	uxtb	r5, r5
 8019ede:	9a02      	ldr	r2, [sp, #8]
 8019ee0:	2a00      	cmp	r2, #0
 8019ee2:	dc03      	bgt.n	8019eec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019ee4:	9a05      	ldr	r2, [sp, #20]
 8019ee6:	2a00      	cmp	r2, #0
 8019ee8:	f340 812c 	ble.w	801a144 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019eec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019eee:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019ef2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8019ef6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019efa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019efc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019f00:	2b00      	cmp	r3, #0
 8019f02:	dd10      	ble.n	8019f26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019f04:	140c      	asrs	r4, r1, #16
 8019f06:	d405      	bmi.n	8019f14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f08:	4574      	cmp	r4, lr
 8019f0a:	da03      	bge.n	8019f14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f0c:	1414      	asrs	r4, r2, #16
 8019f0e:	d401      	bmi.n	8019f14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f10:	42bc      	cmp	r4, r7
 8019f12:	db09      	blt.n	8019f28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019f14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f16:	9800      	ldr	r0, [sp, #0]
 8019f18:	4421      	add	r1, r4
 8019f1a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019f1c:	3002      	adds	r0, #2
 8019f1e:	4422      	add	r2, r4
 8019f20:	3b01      	subs	r3, #1
 8019f22:	9000      	str	r0, [sp, #0]
 8019f24:	e7ec      	b.n	8019f00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019f26:	d071      	beq.n	801a00c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019f28:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019f2a:	1e5c      	subs	r4, r3, #1
 8019f2c:	fb06 1604 	mla	r6, r6, r4, r1
 8019f30:	1436      	asrs	r6, r6, #16
 8019f32:	d45d      	bmi.n	8019ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019f34:	4576      	cmp	r6, lr
 8019f36:	da5b      	bge.n	8019ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019f38:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019f3a:	fb06 2404 	mla	r4, r6, r4, r2
 8019f3e:	1424      	asrs	r4, r4, #16
 8019f40:	d456      	bmi.n	8019ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019f42:	42bc      	cmp	r4, r7
 8019f44:	da54      	bge.n	8019ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019f46:	f8dd 9000 	ldr.w	r9, [sp]
 8019f4a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019f4e:	4698      	mov	r8, r3
 8019f50:	f1b8 0f00 	cmp.w	r8, #0
 8019f54:	dd54      	ble.n	801a000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019f56:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019f5a:	9804      	ldr	r0, [sp, #16]
 8019f5c:	1414      	asrs	r4, r2, #16
 8019f5e:	fb07 0404 	mla	r4, r7, r4, r0
 8019f62:	140e      	asrs	r6, r1, #16
 8019f64:	9801      	ldr	r0, [sp, #4]
 8019f66:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019f6a:	f8b9 4000 	ldrh.w	r4, [r9]
 8019f6e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019f72:	eb00 0b0e 	add.w	fp, r0, lr
 8019f76:	1227      	asrs	r7, r4, #8
 8019f78:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019f7c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019f80:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019f84:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f86:	fb16 f60a 	smulbb	r6, r6, sl
 8019f8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019f8e:	fb07 6705 	mla	r7, r7, r5, r6
 8019f92:	10e6      	asrs	r6, r4, #3
 8019f94:	00e4      	lsls	r4, r4, #3
 8019f96:	b2e4      	uxtb	r4, r4
 8019f98:	fb1b fb0a 	smulbb	fp, fp, sl
 8019f9c:	fb14 f405 	smulbb	r4, r4, r5
 8019fa0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019fa4:	b2bf      	uxth	r7, r7
 8019fa6:	fb06 b605 	mla	r6, r6, r5, fp
 8019faa:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019fae:	b2b6      	uxth	r6, r6
 8019fb0:	fa1f fe8e 	uxth.w	lr, lr
 8019fb4:	1c7c      	adds	r4, r7, #1
 8019fb6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019fba:	f106 0b01 	add.w	fp, r6, #1
 8019fbe:	f10e 0401 	add.w	r4, lr, #1
 8019fc2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8019fc6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019fca:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019fce:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019fd2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019fd6:	4327      	orrs	r7, r4
 8019fd8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019fdc:	4401      	add	r1, r0
 8019fde:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019fe0:	ea47 070b 	orr.w	r7, r7, fp
 8019fe4:	f829 7b02 	strh.w	r7, [r9], #2
 8019fe8:	4402      	add	r2, r0
 8019fea:	f108 38ff 	add.w	r8, r8, #4294967295
 8019fee:	e7af      	b.n	8019f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019ff0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019ff4:	f04f 0e00 	mov.w	lr, #0
 8019ff8:	eb03 040e 	add.w	r4, r3, lr
 8019ffc:	2c00      	cmp	r4, #0
 8019ffe:	dc43      	bgt.n	801a088 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a000:	9a00      	ldr	r2, [sp, #0]
 801a002:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a006:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a00a:	9300      	str	r3, [sp, #0]
 801a00c:	9b02      	ldr	r3, [sp, #8]
 801a00e:	2b00      	cmp	r3, #0
 801a010:	f340 8098 	ble.w	801a144 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a014:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a018:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a01c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a020:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a022:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a026:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a02a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a02e:	eef0 6a62 	vmov.f32	s13, s5
 801a032:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a036:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a03a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a03e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a042:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a046:	eef0 6a43 	vmov.f32	s13, s6
 801a04a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a04e:	ee12 2a90 	vmov	r2, s5
 801a052:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a056:	fb92 f3f3 	sdiv	r3, r2, r3
 801a05a:	ee13 2a10 	vmov	r2, s6
 801a05e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a060:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a062:	fb92 f3f3 	sdiv	r3, r2, r3
 801a066:	9314      	str	r3, [sp, #80]	; 0x50
 801a068:	9b02      	ldr	r3, [sp, #8]
 801a06a:	9a05      	ldr	r2, [sp, #20]
 801a06c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a070:	3b01      	subs	r3, #1
 801a072:	9302      	str	r3, [sp, #8]
 801a074:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a078:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a07a:	eeb0 3a67 	vmov.f32	s6, s15
 801a07e:	bf08      	it	eq
 801a080:	4613      	moveq	r3, r2
 801a082:	eef0 2a47 	vmov.f32	s5, s14
 801a086:	e72a      	b.n	8019ede <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a088:	140f      	asrs	r7, r1, #16
 801a08a:	d454      	bmi.n	801a136 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a08c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a090:	42be      	cmp	r6, r7
 801a092:	dd50      	ble.n	801a136 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a094:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a098:	d44d      	bmi.n	801a136 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a09a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a09e:	4544      	cmp	r4, r8
 801a0a0:	dd49      	ble.n	801a136 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a0a2:	9c04      	ldr	r4, [sp, #16]
 801a0a4:	b236      	sxth	r6, r6
 801a0a6:	fb08 4606 	mla	r6, r8, r6, r4
 801a0aa:	f06f 0001 	mvn.w	r0, #1
 801a0ae:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a0b2:	9c01      	ldr	r4, [sp, #4]
 801a0b4:	fb00 fa0e 	mul.w	sl, r0, lr
 801a0b8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a0bc:	9800      	ldr	r0, [sp, #0]
 801a0be:	eb04 0b08 	add.w	fp, r4, r8
 801a0c2:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a0c6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a0ca:	9801      	ldr	r0, [sp, #4]
 801a0cc:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a0d0:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a0d4:	9800      	ldr	r0, [sp, #0]
 801a0d6:	1227      	asrs	r7, r4, #8
 801a0d8:	fb16 f609 	smulbb	r6, r6, r9
 801a0dc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a0e0:	fb07 6705 	mla	r7, r7, r5, r6
 801a0e4:	10e6      	asrs	r6, r4, #3
 801a0e6:	00e4      	lsls	r4, r4, #3
 801a0e8:	b2e4      	uxtb	r4, r4
 801a0ea:	fb1b fb09 	smulbb	fp, fp, r9
 801a0ee:	fb14 f405 	smulbb	r4, r4, r5
 801a0f2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a0f6:	b2bf      	uxth	r7, r7
 801a0f8:	fb06 b605 	mla	r6, r6, r5, fp
 801a0fc:	fb08 4809 	mla	r8, r8, r9, r4
 801a100:	b2b6      	uxth	r6, r6
 801a102:	fa1f f888 	uxth.w	r8, r8
 801a106:	1c7c      	adds	r4, r7, #1
 801a108:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a10c:	f106 0b01 	add.w	fp, r6, #1
 801a110:	f108 0401 	add.w	r4, r8, #1
 801a114:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a118:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a11c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a120:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a124:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a128:	4327      	orrs	r7, r4
 801a12a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a12e:	ea47 070b 	orr.w	r7, r7, fp
 801a132:	f820 700a 	strh.w	r7, [r0, sl]
 801a136:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a138:	4401      	add	r1, r0
 801a13a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a13c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a140:	4402      	add	r2, r0
 801a142:	e759      	b.n	8019ff8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a144:	b007      	add	sp, #28
 801a146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a14c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a14c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a150:	b085      	sub	sp, #20
 801a152:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a156:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a158:	9203      	str	r2, [sp, #12]
 801a15a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a15e:	6870      	ldr	r0, [r6, #4]
 801a160:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a162:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a166:	686f      	ldr	r7, [r5, #4]
 801a168:	9101      	str	r1, [sp, #4]
 801a16a:	fb00 2404 	mla	r4, r0, r4, r2
 801a16e:	6832      	ldr	r2, [r6, #0]
 801a170:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a174:	682a      	ldr	r2, [r5, #0]
 801a176:	9202      	str	r2, [sp, #8]
 801a178:	3704      	adds	r7, #4
 801a17a:	9a01      	ldr	r2, [sp, #4]
 801a17c:	2a00      	cmp	r2, #0
 801a17e:	dc03      	bgt.n	801a188 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a180:	9a03      	ldr	r2, [sp, #12]
 801a182:	2a00      	cmp	r2, #0
 801a184:	f340 80cc 	ble.w	801a320 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a188:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a18a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a18e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a192:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a196:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a198:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a19c:	2b00      	cmp	r3, #0
 801a19e:	dd0d      	ble.n	801a1bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a1a0:	1406      	asrs	r6, r0, #16
 801a1a2:	d405      	bmi.n	801a1b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a1a4:	454e      	cmp	r6, r9
 801a1a6:	da03      	bge.n	801a1b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a1a8:	1416      	asrs	r6, r2, #16
 801a1aa:	d401      	bmi.n	801a1b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a1ac:	4546      	cmp	r6, r8
 801a1ae:	db06      	blt.n	801a1be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1b0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a1b2:	4460      	add	r0, ip
 801a1b4:	4432      	add	r2, r6
 801a1b6:	3b01      	subs	r3, #1
 801a1b8:	3402      	adds	r4, #2
 801a1ba:	e7ef      	b.n	801a19c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a1bc:	d00f      	beq.n	801a1de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a1be:	1e5e      	subs	r6, r3, #1
 801a1c0:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a1c4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a1c8:	d543      	bpl.n	801a252 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a1ca:	4698      	mov	r8, r3
 801a1cc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a1d0:	f1b8 0f00 	cmp.w	r8, #0
 801a1d4:	dc71      	bgt.n	801a2ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a1d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a1da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a1de:	9b01      	ldr	r3, [sp, #4]
 801a1e0:	2b00      	cmp	r3, #0
 801a1e2:	f340 809d 	ble.w	801a320 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a1e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a1ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a1ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a1f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a1f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a1f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a1fc:	eeb0 6a62 	vmov.f32	s12, s5
 801a200:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a204:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a208:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a20c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a210:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a214:	eeb0 6a43 	vmov.f32	s12, s6
 801a218:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a21c:	ee12 2a90 	vmov	r2, s5
 801a220:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a224:	fb92 fcf3 	sdiv	ip, r2, r3
 801a228:	ee13 2a10 	vmov	r2, s6
 801a22c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a230:	9312      	str	r3, [sp, #72]	; 0x48
 801a232:	9b01      	ldr	r3, [sp, #4]
 801a234:	9a03      	ldr	r2, [sp, #12]
 801a236:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a23a:	3b01      	subs	r3, #1
 801a23c:	9301      	str	r3, [sp, #4]
 801a23e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a242:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a244:	eeb0 3a67 	vmov.f32	s6, s15
 801a248:	bf08      	it	eq
 801a24a:	4613      	moveq	r3, r2
 801a24c:	eef0 2a47 	vmov.f32	s5, s14
 801a250:	e793      	b.n	801a17a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a252:	45ce      	cmp	lr, r9
 801a254:	dab9      	bge.n	801a1ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a256:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a258:	fb01 2606 	mla	r6, r1, r6, r2
 801a25c:	1436      	asrs	r6, r6, #16
 801a25e:	d4b4      	bmi.n	801a1ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a260:	4546      	cmp	r6, r8
 801a262:	dab2      	bge.n	801a1ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a264:	4698      	mov	r8, r3
 801a266:	46a2      	mov	sl, r4
 801a268:	f1b8 0f00 	cmp.w	r8, #0
 801a26c:	ddb3      	ble.n	801a1d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a26e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a272:	9902      	ldr	r1, [sp, #8]
 801a274:	1416      	asrs	r6, r2, #16
 801a276:	fb09 1606 	mla	r6, r9, r6, r1
 801a27a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a27e:	492a      	ldr	r1, [pc, #168]	; (801a328 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a280:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a284:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a288:	eb07 0b0e 	add.w	fp, r7, lr
 801a28c:	4460      	add	r0, ip
 801a28e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a292:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a296:	00f6      	lsls	r6, r6, #3
 801a298:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a29c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a2a0:	ea49 0606 	orr.w	r6, r9, r6
 801a2a4:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a2a8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a2aa:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a2ae:	f82a 6b02 	strh.w	r6, [sl], #2
 801a2b2:	440a      	add	r2, r1
 801a2b4:	f108 38ff 	add.w	r8, r8, #4294967295
 801a2b8:	e7d6      	b.n	801a268 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a2ba:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a2be:	d429      	bmi.n	801a314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a2c0:	68ae      	ldr	r6, [r5, #8]
 801a2c2:	454e      	cmp	r6, r9
 801a2c4:	dd26      	ble.n	801a314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a2c6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a2ca:	d423      	bmi.n	801a314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a2cc:	68e9      	ldr	r1, [r5, #12]
 801a2ce:	4559      	cmp	r1, fp
 801a2d0:	dd20      	ble.n	801a314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a2d2:	9902      	ldr	r1, [sp, #8]
 801a2d4:	fa0f fe86 	sxth.w	lr, r6
 801a2d8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a2dc:	f06f 0101 	mvn.w	r1, #1
 801a2e0:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a2e4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a2e8:	eb07 060e 	add.w	r6, r7, lr
 801a2ec:	fb01 f908 	mul.w	r9, r1, r8
 801a2f0:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a2f4:	7876      	ldrb	r6, [r6, #1]
 801a2f6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a2fa:	00f6      	lsls	r6, r6, #3
 801a2fc:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a300:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a304:	ea4b 0606 	orr.w	r6, fp, r6
 801a308:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a30c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a310:	f82a 6009 	strh.w	r6, [sl, r9]
 801a314:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a316:	4460      	add	r0, ip
 801a318:	440a      	add	r2, r1
 801a31a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a31e:	e757      	b.n	801a1d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a320:	b005      	add	sp, #20
 801a322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a326:	bf00      	nop
 801a328:	fffff800 	.word	0xfffff800

0801a32c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a32c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a330:	b087      	sub	sp, #28
 801a332:	468b      	mov	fp, r1
 801a334:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a336:	9204      	str	r2, [sp, #16]
 801a338:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a33c:	9205      	str	r2, [sp, #20]
 801a33e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a342:	6841      	ldr	r1, [r0, #4]
 801a344:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a348:	fb01 2404 	mla	r4, r1, r4, r2
 801a34c:	6802      	ldr	r2, [r0, #0]
 801a34e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a352:	f8dc 2000 	ldr.w	r2, [ip]
 801a356:	9201      	str	r2, [sp, #4]
 801a358:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a35c:	3204      	adds	r2, #4
 801a35e:	9202      	str	r2, [sp, #8]
 801a360:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a364:	f1bb 0f00 	cmp.w	fp, #0
 801a368:	dc03      	bgt.n	801a372 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a36a:	9a04      	ldr	r2, [sp, #16]
 801a36c:	2a00      	cmp	r2, #0
 801a36e:	f340 8138 	ble.w	801a5e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a372:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a374:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a378:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a37c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a380:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a382:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a386:	2b00      	cmp	r3, #0
 801a388:	dd0e      	ble.n	801a3a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a38a:	1402      	asrs	r2, r0, #16
 801a38c:	d405      	bmi.n	801a39a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a38e:	42ba      	cmp	r2, r7
 801a390:	da03      	bge.n	801a39a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a392:	140a      	asrs	r2, r1, #16
 801a394:	d401      	bmi.n	801a39a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a396:	42b2      	cmp	r2, r6
 801a398:	db07      	blt.n	801a3aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a39a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a39c:	4410      	add	r0, r2
 801a39e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a3a0:	3b01      	subs	r3, #1
 801a3a2:	4411      	add	r1, r2
 801a3a4:	3402      	adds	r4, #2
 801a3a6:	e7ee      	b.n	801a386 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a3a8:	d019      	beq.n	801a3de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a3aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a3ac:	1e5a      	subs	r2, r3, #1
 801a3ae:	fb05 0502 	mla	r5, r5, r2, r0
 801a3b2:	142d      	asrs	r5, r5, #16
 801a3b4:	d409      	bmi.n	801a3ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a3b6:	42bd      	cmp	r5, r7
 801a3b8:	da07      	bge.n	801a3ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a3ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a3bc:	fb05 1202 	mla	r2, r5, r2, r1
 801a3c0:	1412      	asrs	r2, r2, #16
 801a3c2:	d402      	bmi.n	801a3ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a3c4:	42b2      	cmp	r2, r6
 801a3c6:	f2c0 80ac 	blt.w	801a522 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a3ca:	f04f 0e00 	mov.w	lr, #0
 801a3ce:	eb03 020e 	add.w	r2, r3, lr
 801a3d2:	2a00      	cmp	r2, #0
 801a3d4:	dc3e      	bgt.n	801a454 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a3d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a3da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a3de:	f1bb 0f00 	cmp.w	fp, #0
 801a3e2:	f340 80fe 	ble.w	801a5e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a3e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a3ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a3ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a3f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3f4:	f1bb 0b01 	subs.w	fp, fp, #1
 801a3f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a3fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a400:	eeb0 6a62 	vmov.f32	s12, s5
 801a404:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a408:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a40c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a410:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a414:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a418:	eeb0 6a43 	vmov.f32	s12, s6
 801a41c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a420:	ee12 2a90 	vmov	r2, s5
 801a424:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a428:	fb92 f3f3 	sdiv	r3, r2, r3
 801a42c:	ee13 2a10 	vmov	r2, s6
 801a430:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a434:	9313      	str	r3, [sp, #76]	; 0x4c
 801a436:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a438:	fb92 f3f3 	sdiv	r3, r2, r3
 801a43c:	9a04      	ldr	r2, [sp, #16]
 801a43e:	9314      	str	r3, [sp, #80]	; 0x50
 801a440:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a444:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a446:	eeb0 3a67 	vmov.f32	s6, s15
 801a44a:	bf08      	it	eq
 801a44c:	4613      	moveq	r3, r2
 801a44e:	eef0 2a47 	vmov.f32	s5, s14
 801a452:	e787      	b.n	801a364 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a454:	1406      	asrs	r6, r0, #16
 801a456:	d45d      	bmi.n	801a514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a458:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a45c:	42b5      	cmp	r5, r6
 801a45e:	dd59      	ble.n	801a514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a460:	140f      	asrs	r7, r1, #16
 801a462:	d457      	bmi.n	801a514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a464:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a468:	42ba      	cmp	r2, r7
 801a46a:	dd53      	ble.n	801a514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a46c:	9a01      	ldr	r2, [sp, #4]
 801a46e:	b22d      	sxth	r5, r5
 801a470:	fb07 2505 	mla	r5, r7, r5, r2
 801a474:	5daa      	ldrb	r2, [r5, r6]
 801a476:	9d02      	ldr	r5, [sp, #8]
 801a478:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a47c:	0e2e      	lsrs	r6, r5, #24
 801a47e:	d049      	beq.n	801a514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a480:	f06f 0201 	mvn.w	r2, #1
 801a484:	fb02 f20e 	mul.w	r2, r2, lr
 801a488:	9203      	str	r2, [sp, #12]
 801a48a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a48e:	9a05      	ldr	r2, [sp, #20]
 801a490:	4356      	muls	r6, r2
 801a492:	1c72      	adds	r2, r6, #1
 801a494:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a498:	1212      	asrs	r2, r2, #8
 801a49a:	fa1f f982 	uxth.w	r9, r2
 801a49e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a4a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a4a6:	43d2      	mvns	r2, r2
 801a4a8:	b2d2      	uxtb	r2, r2
 801a4aa:	fb16 f609 	smulbb	r6, r6, r9
 801a4ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a4b2:	fb07 6702 	mla	r7, r7, r2, r6
 801a4b6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a4ba:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a4be:	b2ed      	uxtb	r5, r5
 801a4c0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a4c4:	fa5f f888 	uxtb.w	r8, r8
 801a4c8:	fb15 f509 	smulbb	r5, r5, r9
 801a4cc:	fb08 5502 	mla	r5, r8, r2, r5
 801a4d0:	b2bf      	uxth	r7, r7
 801a4d2:	fb1a fa09 	smulbb	sl, sl, r9
 801a4d6:	b2ad      	uxth	r5, r5
 801a4d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a4dc:	fb06 a602 	mla	r6, r6, r2, sl
 801a4e0:	1c7a      	adds	r2, r7, #1
 801a4e2:	f105 0a01 	add.w	sl, r5, #1
 801a4e6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a4ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a4ee:	b2b6      	uxth	r6, r6
 801a4f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a4f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a4f8:	ea4a 0707 	orr.w	r7, sl, r7
 801a4fc:	f106 0a01 	add.w	sl, r6, #1
 801a500:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a504:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a508:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a50c:	9a03      	ldr	r2, [sp, #12]
 801a50e:	ea47 070a 	orr.w	r7, r7, sl
 801a512:	52a7      	strh	r7, [r4, r2]
 801a514:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a516:	4410      	add	r0, r2
 801a518:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a51a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a51e:	4411      	add	r1, r2
 801a520:	e755      	b.n	801a3ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a522:	f04f 0800 	mov.w	r8, #0
 801a526:	eba3 0208 	sub.w	r2, r3, r8
 801a52a:	2a00      	cmp	r2, #0
 801a52c:	f77f af53 	ble.w	801a3d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a530:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a534:	9f01      	ldr	r7, [sp, #4]
 801a536:	140a      	asrs	r2, r1, #16
 801a538:	1405      	asrs	r5, r0, #16
 801a53a:	fb06 7202 	mla	r2, r6, r2, r7
 801a53e:	5d52      	ldrb	r2, [r2, r5]
 801a540:	9d02      	ldr	r5, [sp, #8]
 801a542:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a546:	0e2e      	lsrs	r6, r5, #24
 801a548:	d044      	beq.n	801a5d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a54a:	9a05      	ldr	r2, [sp, #20]
 801a54c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a550:	4356      	muls	r6, r2
 801a552:	1c72      	adds	r2, r6, #1
 801a554:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a558:	1212      	asrs	r2, r2, #8
 801a55a:	fa1f f982 	uxth.w	r9, r2
 801a55e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a562:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a566:	43d2      	mvns	r2, r2
 801a568:	b2d2      	uxtb	r2, r2
 801a56a:	fb16 f609 	smulbb	r6, r6, r9
 801a56e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a572:	fb07 6702 	mla	r7, r7, r2, r6
 801a576:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a57a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a57e:	b2ed      	uxtb	r5, r5
 801a580:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a584:	fa5f fe8e 	uxtb.w	lr, lr
 801a588:	fb15 f509 	smulbb	r5, r5, r9
 801a58c:	fb0e 5502 	mla	r5, lr, r2, r5
 801a590:	b2bf      	uxth	r7, r7
 801a592:	fb1a fa09 	smulbb	sl, sl, r9
 801a596:	b2ad      	uxth	r5, r5
 801a598:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a59c:	fb06 a602 	mla	r6, r6, r2, sl
 801a5a0:	1c7a      	adds	r2, r7, #1
 801a5a2:	f105 0a01 	add.w	sl, r5, #1
 801a5a6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a5aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a5ae:	b2b6      	uxth	r6, r6
 801a5b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a5b4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a5b8:	ea4a 0707 	orr.w	r7, sl, r7
 801a5bc:	f106 0a01 	add.w	sl, r6, #1
 801a5c0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a5c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a5c8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a5cc:	ea47 070a 	orr.w	r7, r7, sl
 801a5d0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a5d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a5d6:	4410      	add	r0, r2
 801a5d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a5da:	f108 0801 	add.w	r8, r8, #1
 801a5de:	4411      	add	r1, r2
 801a5e0:	e7a1      	b.n	801a526 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a5e2:	b007      	add	sp, #28
 801a5e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a5e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5ec:	b085      	sub	sp, #20
 801a5ee:	468b      	mov	fp, r1
 801a5f0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a5f2:	9203      	str	r2, [sp, #12]
 801a5f4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a5f8:	6841      	ldr	r1, [r0, #4]
 801a5fa:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a5fe:	fb01 2404 	mla	r4, r1, r4, r2
 801a602:	6802      	ldr	r2, [r0, #0]
 801a604:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a608:	f8de 2000 	ldr.w	r2, [lr]
 801a60c:	9200      	str	r2, [sp, #0]
 801a60e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a612:	3204      	adds	r2, #4
 801a614:	9201      	str	r2, [sp, #4]
 801a616:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a61a:	f1bb 0f00 	cmp.w	fp, #0
 801a61e:	dc03      	bgt.n	801a628 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a620:	9a03      	ldr	r2, [sp, #12]
 801a622:	2a00      	cmp	r2, #0
 801a624:	f340 8153 	ble.w	801a8ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a628:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a62a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a62e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a632:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a636:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a638:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a63c:	2b00      	cmp	r3, #0
 801a63e:	dd0e      	ble.n	801a65e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a640:	1408      	asrs	r0, r1, #16
 801a642:	d405      	bmi.n	801a650 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a644:	42b8      	cmp	r0, r7
 801a646:	da03      	bge.n	801a650 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a648:	1410      	asrs	r0, r2, #16
 801a64a:	d401      	bmi.n	801a650 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a64c:	42b0      	cmp	r0, r6
 801a64e:	db07      	blt.n	801a660 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a650:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a652:	4401      	add	r1, r0
 801a654:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a656:	3b01      	subs	r3, #1
 801a658:	4402      	add	r2, r0
 801a65a:	3402      	adds	r4, #2
 801a65c:	e7ee      	b.n	801a63c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a65e:	d017      	beq.n	801a690 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a660:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a662:	1e58      	subs	r0, r3, #1
 801a664:	fb05 1500 	mla	r5, r5, r0, r1
 801a668:	142d      	asrs	r5, r5, #16
 801a66a:	d409      	bmi.n	801a680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a66c:	42bd      	cmp	r5, r7
 801a66e:	da07      	bge.n	801a680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a670:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a672:	fb05 2000 	mla	r0, r5, r0, r2
 801a676:	1400      	asrs	r0, r0, #16
 801a678:	d402      	bmi.n	801a680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a67a:	42b0      	cmp	r0, r6
 801a67c:	f2c0 80bc 	blt.w	801a7f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a680:	2600      	movs	r6, #0
 801a682:	1998      	adds	r0, r3, r6
 801a684:	2800      	cmp	r0, #0
 801a686:	dc3e      	bgt.n	801a706 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a688:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a68c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a690:	f1bb 0f00 	cmp.w	fp, #0
 801a694:	f340 811b 	ble.w	801a8ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a698:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a69c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a6a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a6a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6a6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a6aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a6b2:	eeb0 6a62 	vmov.f32	s12, s5
 801a6b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a6ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6c2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a6c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6ca:	eeb0 6a43 	vmov.f32	s12, s6
 801a6ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a6d2:	ee12 2a90 	vmov	r2, s5
 801a6d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a6da:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6de:	ee13 2a10 	vmov	r2, s6
 801a6e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6e6:	9311      	str	r3, [sp, #68]	; 0x44
 801a6e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6ee:	9a03      	ldr	r2, [sp, #12]
 801a6f0:	9312      	str	r3, [sp, #72]	; 0x48
 801a6f2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a6f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6f8:	eeb0 3a67 	vmov.f32	s6, s15
 801a6fc:	bf08      	it	eq
 801a6fe:	4613      	moveq	r3, r2
 801a700:	eef0 2a47 	vmov.f32	s5, s14
 801a704:	e789      	b.n	801a61a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a706:	140f      	asrs	r7, r1, #16
 801a708:	d426      	bmi.n	801a758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a70a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a70e:	42bd      	cmp	r5, r7
 801a710:	dd22      	ble.n	801a758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a712:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a716:	d41f      	bmi.n	801a758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a718:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a71c:	4560      	cmp	r0, ip
 801a71e:	dd1b      	ble.n	801a758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a720:	9800      	ldr	r0, [sp, #0]
 801a722:	b22d      	sxth	r5, r5
 801a724:	fb0c 0505 	mla	r5, ip, r5, r0
 801a728:	5de8      	ldrb	r0, [r5, r7]
 801a72a:	9d01      	ldr	r5, [sp, #4]
 801a72c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a730:	0e07      	lsrs	r7, r0, #24
 801a732:	2fff      	cmp	r7, #255	; 0xff
 801a734:	d116      	bne.n	801a764 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a736:	f06f 0501 	mvn.w	r5, #1
 801a73a:	fb05 f706 	mul.w	r7, r5, r6
 801a73e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a742:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a746:	0945      	lsrs	r5, r0, #5
 801a748:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a74c:	ea4c 0505 	orr.w	r5, ip, r5
 801a750:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a754:	4305      	orrs	r5, r0
 801a756:	53e5      	strh	r5, [r4, r7]
 801a758:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a75a:	4401      	add	r1, r0
 801a75c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a75e:	3e01      	subs	r6, #1
 801a760:	4402      	add	r2, r0
 801a762:	e78e      	b.n	801a682 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a764:	b2fd      	uxtb	r5, r7
 801a766:	2f00      	cmp	r7, #0
 801a768:	d0f6      	beq.n	801a758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a76a:	f06f 0701 	mvn.w	r7, #1
 801a76e:	4377      	muls	r7, r6
 801a770:	fa1f f985 	uxth.w	r9, r5
 801a774:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a778:	9702      	str	r7, [sp, #8]
 801a77a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a77e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a782:	43ed      	mvns	r5, r5
 801a784:	b2ed      	uxtb	r5, r5
 801a786:	fb17 f709 	smulbb	r7, r7, r9
 801a78a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a78e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a792:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a796:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a79a:	b2c0      	uxtb	r0, r0
 801a79c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a7a0:	fa5f f888 	uxtb.w	r8, r8
 801a7a4:	fb10 f009 	smulbb	r0, r0, r9
 801a7a8:	fb08 0005 	mla	r0, r8, r5, r0
 801a7ac:	b280      	uxth	r0, r0
 801a7ae:	fa1f fc8c 	uxth.w	ip, ip
 801a7b2:	fb1a fa09 	smulbb	sl, sl, r9
 801a7b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a7ba:	fb07 a705 	mla	r7, r7, r5, sl
 801a7be:	f100 0a01 	add.w	sl, r0, #1
 801a7c2:	f10c 0501 	add.w	r5, ip, #1
 801a7c6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a7ca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a7ce:	b2bf      	uxth	r7, r7
 801a7d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a7d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a7d8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a7dc:	f107 0a01 	add.w	sl, r7, #1
 801a7e0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a7e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a7e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a7ec:	9802      	ldr	r0, [sp, #8]
 801a7ee:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a7f2:	f824 c000 	strh.w	ip, [r4, r0]
 801a7f6:	e7af      	b.n	801a758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a7f8:	f04f 0800 	mov.w	r8, #0
 801a7fc:	eba3 0008 	sub.w	r0, r3, r8
 801a800:	2800      	cmp	r0, #0
 801a802:	f77f af41 	ble.w	801a688 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a806:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a80a:	9f00      	ldr	r7, [sp, #0]
 801a80c:	1410      	asrs	r0, r2, #16
 801a80e:	140d      	asrs	r5, r1, #16
 801a810:	fb06 7000 	mla	r0, r6, r0, r7
 801a814:	5d40      	ldrb	r0, [r0, r5]
 801a816:	9d01      	ldr	r5, [sp, #4]
 801a818:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a81c:	0e2e      	lsrs	r6, r5, #24
 801a81e:	2eff      	cmp	r6, #255	; 0xff
 801a820:	d112      	bne.n	801a848 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a822:	482c      	ldr	r0, [pc, #176]	; (801a8d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a824:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a828:	0968      	lsrs	r0, r5, #5
 801a82a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a82e:	4330      	orrs	r0, r6
 801a830:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a834:	4328      	orrs	r0, r5
 801a836:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a83a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a83c:	4401      	add	r1, r0
 801a83e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a840:	f108 0801 	add.w	r8, r8, #1
 801a844:	4402      	add	r2, r0
 801a846:	e7d9      	b.n	801a7fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a848:	b2f0      	uxtb	r0, r6
 801a84a:	2e00      	cmp	r6, #0
 801a84c:	d0f5      	beq.n	801a83a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a84e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a852:	fa1f f980 	uxth.w	r9, r0
 801a856:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a85a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a85e:	43c0      	mvns	r0, r0
 801a860:	b2c0      	uxtb	r0, r0
 801a862:	fb16 f609 	smulbb	r6, r6, r9
 801a866:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a86a:	fb07 6700 	mla	r7, r7, r0, r6
 801a86e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a872:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a876:	b2ed      	uxtb	r5, r5
 801a878:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a87c:	fa5f fc8c 	uxtb.w	ip, ip
 801a880:	fb15 f509 	smulbb	r5, r5, r9
 801a884:	fb0c 5500 	mla	r5, ip, r0, r5
 801a888:	b2bf      	uxth	r7, r7
 801a88a:	fb1a fa09 	smulbb	sl, sl, r9
 801a88e:	b2ad      	uxth	r5, r5
 801a890:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a894:	fb06 a600 	mla	r6, r6, r0, sl
 801a898:	1c78      	adds	r0, r7, #1
 801a89a:	f105 0a01 	add.w	sl, r5, #1
 801a89e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a8a2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a8a6:	b2b6      	uxth	r6, r6
 801a8a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a8ac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a8b0:	ea4a 0707 	orr.w	r7, sl, r7
 801a8b4:	f106 0a01 	add.w	sl, r6, #1
 801a8b8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a8bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a8c0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a8c4:	ea47 070a 	orr.w	r7, r7, sl
 801a8c8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a8cc:	e7b5      	b.n	801a83a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a8ce:	b005      	add	sp, #20
 801a8d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8d4:	fffff800 	.word	0xfffff800

0801a8d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a8d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8dc:	b087      	sub	sp, #28
 801a8de:	468b      	mov	fp, r1
 801a8e0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a8e2:	9204      	str	r2, [sp, #16]
 801a8e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a8e8:	9205      	str	r2, [sp, #20]
 801a8ea:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a8ee:	6861      	ldr	r1, [r4, #4]
 801a8f0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a8f4:	fb01 2000 	mla	r0, r1, r0, r2
 801a8f8:	6822      	ldr	r2, [r4, #0]
 801a8fa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a8fe:	f8de 2000 	ldr.w	r2, [lr]
 801a902:	9201      	str	r2, [sp, #4]
 801a904:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a908:	9202      	str	r2, [sp, #8]
 801a90a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a90e:	f1bb 0f00 	cmp.w	fp, #0
 801a912:	dc03      	bgt.n	801a91c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a914:	9a04      	ldr	r2, [sp, #16]
 801a916:	2a00      	cmp	r2, #0
 801a918:	f340 8142 	ble.w	801aba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a91c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a91e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a922:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a926:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a92a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a92c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a930:	2b00      	cmp	r3, #0
 801a932:	dd0e      	ble.n	801a952 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a934:	140c      	asrs	r4, r1, #16
 801a936:	d405      	bmi.n	801a944 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a938:	42bc      	cmp	r4, r7
 801a93a:	da03      	bge.n	801a944 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a93c:	1414      	asrs	r4, r2, #16
 801a93e:	d401      	bmi.n	801a944 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a940:	42b4      	cmp	r4, r6
 801a942:	db07      	blt.n	801a954 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a944:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a946:	4421      	add	r1, r4
 801a948:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a94a:	3b01      	subs	r3, #1
 801a94c:	4422      	add	r2, r4
 801a94e:	3002      	adds	r0, #2
 801a950:	e7ee      	b.n	801a930 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a952:	d019      	beq.n	801a988 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a954:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a956:	1e5c      	subs	r4, r3, #1
 801a958:	fb05 1504 	mla	r5, r5, r4, r1
 801a95c:	142d      	asrs	r5, r5, #16
 801a95e:	d409      	bmi.n	801a974 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a960:	42bd      	cmp	r5, r7
 801a962:	da07      	bge.n	801a974 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a964:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a966:	fb05 2404 	mla	r4, r5, r4, r2
 801a96a:	1424      	asrs	r4, r4, #16
 801a96c:	d402      	bmi.n	801a974 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a96e:	42b4      	cmp	r4, r6
 801a970:	f2c0 80b1 	blt.w	801aad6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a974:	f04f 0800 	mov.w	r8, #0
 801a978:	eb03 0408 	add.w	r4, r3, r8
 801a97c:	2c00      	cmp	r4, #0
 801a97e:	dc3e      	bgt.n	801a9fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a980:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a984:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a988:	f1bb 0f00 	cmp.w	fp, #0
 801a98c:	f340 8108 	ble.w	801aba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a990:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a994:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a998:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a99c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a99e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a9a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a9a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a9aa:	eeb0 6a62 	vmov.f32	s12, s5
 801a9ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a9b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a9b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a9ba:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a9be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a9c2:	eeb0 6a43 	vmov.f32	s12, s6
 801a9c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a9ca:	ee12 2a90 	vmov	r2, s5
 801a9ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a9d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9d6:	ee13 2a10 	vmov	r2, s6
 801a9da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a9de:	9313      	str	r3, [sp, #76]	; 0x4c
 801a9e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9e6:	9a04      	ldr	r2, [sp, #16]
 801a9e8:	9314      	str	r3, [sp, #80]	; 0x50
 801a9ea:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a9ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9f0:	eeb0 3a67 	vmov.f32	s6, s15
 801a9f4:	bf08      	it	eq
 801a9f6:	4613      	moveq	r3, r2
 801a9f8:	eef0 2a47 	vmov.f32	s5, s14
 801a9fc:	e787      	b.n	801a90e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a9fe:	140e      	asrs	r6, r1, #16
 801aa00:	d462      	bmi.n	801aac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aa02:	f8de 5008 	ldr.w	r5, [lr, #8]
 801aa06:	42b5      	cmp	r5, r6
 801aa08:	dd5e      	ble.n	801aac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aa0a:	1417      	asrs	r7, r2, #16
 801aa0c:	d45c      	bmi.n	801aac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aa0e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801aa12:	42bc      	cmp	r4, r7
 801aa14:	dd58      	ble.n	801aac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aa16:	b22d      	sxth	r5, r5
 801aa18:	fb07 6505 	mla	r5, r7, r5, r6
 801aa1c:	9c02      	ldr	r4, [sp, #8]
 801aa1e:	5d66      	ldrb	r6, [r4, r5]
 801aa20:	2e00      	cmp	r6, #0
 801aa22:	d051      	beq.n	801aac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aa24:	9c01      	ldr	r4, [sp, #4]
 801aa26:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801aa2a:	f06f 0401 	mvn.w	r4, #1
 801aa2e:	fb04 f408 	mul.w	r4, r4, r8
 801aa32:	9403      	str	r4, [sp, #12]
 801aa34:	5b05      	ldrh	r5, [r0, r4]
 801aa36:	9c05      	ldr	r4, [sp, #20]
 801aa38:	4366      	muls	r6, r4
 801aa3a:	1c74      	adds	r4, r6, #1
 801aa3c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801aa40:	1224      	asrs	r4, r4, #8
 801aa42:	b2a7      	uxth	r7, r4
 801aa44:	122e      	asrs	r6, r5, #8
 801aa46:	43e4      	mvns	r4, r4
 801aa48:	b2e4      	uxtb	r4, r4
 801aa4a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801aa4e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aa52:	fb16 f604 	smulbb	r6, r6, r4
 801aa56:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aa5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aa5e:	00ed      	lsls	r5, r5, #3
 801aa60:	fb0c 6c07 	mla	ip, ip, r7, r6
 801aa64:	b2ed      	uxtb	r5, r5
 801aa66:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801aa6a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801aa6e:	fb15 f504 	smulbb	r5, r5, r4
 801aa72:	fa5f f989 	uxtb.w	r9, r9
 801aa76:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801aa7a:	fb09 5507 	mla	r5, r9, r7, r5
 801aa7e:	fb1a fa04 	smulbb	sl, sl, r4
 801aa82:	fa1f fc8c 	uxth.w	ip, ip
 801aa86:	b2ad      	uxth	r5, r5
 801aa88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aa8c:	fb06 a607 	mla	r6, r6, r7, sl
 801aa90:	f10c 0401 	add.w	r4, ip, #1
 801aa94:	f105 0a01 	add.w	sl, r5, #1
 801aa98:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801aa9c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aaa0:	b2b6      	uxth	r6, r6
 801aaa2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aaa6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aaaa:	ea4a 0c0c 	orr.w	ip, sl, ip
 801aaae:	f106 0a01 	add.w	sl, r6, #1
 801aab2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aab6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aaba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aabe:	9c03      	ldr	r4, [sp, #12]
 801aac0:	ea4c 0c0a 	orr.w	ip, ip, sl
 801aac4:	f820 c004 	strh.w	ip, [r0, r4]
 801aac8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aaca:	4421      	add	r1, r4
 801aacc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aace:	f108 38ff 	add.w	r8, r8, #4294967295
 801aad2:	4422      	add	r2, r4
 801aad4:	e750      	b.n	801a978 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aad6:	f04f 0900 	mov.w	r9, #0
 801aada:	eba3 0409 	sub.w	r4, r3, r9
 801aade:	2c00      	cmp	r4, #0
 801aae0:	f77f af4e 	ble.w	801a980 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801aae4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801aae8:	140d      	asrs	r5, r1, #16
 801aaea:	1414      	asrs	r4, r2, #16
 801aaec:	fb06 5404 	mla	r4, r6, r4, r5
 801aaf0:	9d02      	ldr	r5, [sp, #8]
 801aaf2:	5d2e      	ldrb	r6, [r5, r4]
 801aaf4:	2e00      	cmp	r6, #0
 801aaf6:	d04c      	beq.n	801ab92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801aaf8:	9d01      	ldr	r5, [sp, #4]
 801aafa:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801aafe:	9c05      	ldr	r4, [sp, #20]
 801ab00:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ab04:	4366      	muls	r6, r4
 801ab06:	1c74      	adds	r4, r6, #1
 801ab08:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ab0c:	1224      	asrs	r4, r4, #8
 801ab0e:	b2a7      	uxth	r7, r4
 801ab10:	122e      	asrs	r6, r5, #8
 801ab12:	43e4      	mvns	r4, r4
 801ab14:	b2e4      	uxtb	r4, r4
 801ab16:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801ab1a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ab1e:	fb16 f604 	smulbb	r6, r6, r4
 801ab22:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ab26:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab2a:	00ed      	lsls	r5, r5, #3
 801ab2c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ab30:	b2ed      	uxtb	r5, r5
 801ab32:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801ab36:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ab3a:	fb15 f504 	smulbb	r5, r5, r4
 801ab3e:	fa5f f888 	uxtb.w	r8, r8
 801ab42:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ab46:	fb08 5507 	mla	r5, r8, r7, r5
 801ab4a:	fb1a fa04 	smulbb	sl, sl, r4
 801ab4e:	fa1f fc8c 	uxth.w	ip, ip
 801ab52:	b2ad      	uxth	r5, r5
 801ab54:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ab58:	fb06 a607 	mla	r6, r6, r7, sl
 801ab5c:	f10c 0401 	add.w	r4, ip, #1
 801ab60:	f105 0a01 	add.w	sl, r5, #1
 801ab64:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ab68:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ab6c:	b2b6      	uxth	r6, r6
 801ab6e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab72:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ab76:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ab7a:	f106 0a01 	add.w	sl, r6, #1
 801ab7e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ab82:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab86:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ab8a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ab8e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801ab92:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab94:	4421      	add	r1, r4
 801ab96:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ab98:	f109 0901 	add.w	r9, r9, #1
 801ab9c:	4422      	add	r2, r4
 801ab9e:	e79c      	b.n	801aada <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801aba0:	b007      	add	sp, #28
 801aba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aba6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abaa:	b085      	sub	sp, #20
 801abac:	468b      	mov	fp, r1
 801abae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801abb0:	9203      	str	r2, [sp, #12]
 801abb2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801abb6:	6861      	ldr	r1, [r4, #4]
 801abb8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801abbc:	fb01 2000 	mla	r0, r1, r0, r2
 801abc0:	6822      	ldr	r2, [r4, #0]
 801abc2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801abc6:	f8d8 2000 	ldr.w	r2, [r8]
 801abca:	9200      	str	r2, [sp, #0]
 801abcc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801abd0:	9201      	str	r2, [sp, #4]
 801abd2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801abd6:	f1bb 0f00 	cmp.w	fp, #0
 801abda:	dc03      	bgt.n	801abe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801abdc:	9a03      	ldr	r2, [sp, #12]
 801abde:	2a00      	cmp	r2, #0
 801abe0:	f340 8146 	ble.w	801ae70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801abe4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801abe6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801abea:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801abee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801abf2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801abf4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801abf8:	2b00      	cmp	r3, #0
 801abfa:	dd0e      	ble.n	801ac1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801abfc:	140c      	asrs	r4, r1, #16
 801abfe:	d405      	bmi.n	801ac0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ac00:	42bc      	cmp	r4, r7
 801ac02:	da03      	bge.n	801ac0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ac04:	1414      	asrs	r4, r2, #16
 801ac06:	d401      	bmi.n	801ac0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ac08:	42b4      	cmp	r4, r6
 801ac0a:	db07      	blt.n	801ac1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ac0c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ac0e:	4421      	add	r1, r4
 801ac10:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ac12:	3b01      	subs	r3, #1
 801ac14:	4422      	add	r2, r4
 801ac16:	3002      	adds	r0, #2
 801ac18:	e7ee      	b.n	801abf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ac1a:	d017      	beq.n	801ac4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ac1c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac1e:	1e5c      	subs	r4, r3, #1
 801ac20:	fb05 1504 	mla	r5, r5, r4, r1
 801ac24:	142d      	asrs	r5, r5, #16
 801ac26:	d409      	bmi.n	801ac3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ac28:	42bd      	cmp	r5, r7
 801ac2a:	da07      	bge.n	801ac3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ac2c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ac2e:	fb05 2404 	mla	r4, r5, r4, r2
 801ac32:	1424      	asrs	r4, r4, #16
 801ac34:	d402      	bmi.n	801ac3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ac36:	42b4      	cmp	r4, r6
 801ac38:	f2c0 80b3 	blt.w	801ada2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ac3c:	2600      	movs	r6, #0
 801ac3e:	199c      	adds	r4, r3, r6
 801ac40:	2c00      	cmp	r4, #0
 801ac42:	dc3e      	bgt.n	801acc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ac44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac48:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ac4c:	f1bb 0f00 	cmp.w	fp, #0
 801ac50:	f340 810e 	ble.w	801ae70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ac54:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ac60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac62:	f1bb 0b01 	subs.w	fp, fp, #1
 801ac66:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac6e:	eeb0 6a62 	vmov.f32	s12, s5
 801ac72:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ac76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ac7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac7e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ac82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac86:	eeb0 6a43 	vmov.f32	s12, s6
 801ac8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac8e:	ee12 2a90 	vmov	r2, s5
 801ac92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ac96:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac9a:	ee13 2a10 	vmov	r2, s6
 801ac9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aca2:	9311      	str	r3, [sp, #68]	; 0x44
 801aca4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aca6:	fb92 f3f3 	sdiv	r3, r2, r3
 801acaa:	9a03      	ldr	r2, [sp, #12]
 801acac:	9312      	str	r3, [sp, #72]	; 0x48
 801acae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801acb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801acb4:	eeb0 3a67 	vmov.f32	s6, s15
 801acb8:	bf08      	it	eq
 801acba:	4613      	moveq	r3, r2
 801acbc:	eef0 2a47 	vmov.f32	s5, s14
 801acc0:	e789      	b.n	801abd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801acc2:	140f      	asrs	r7, r1, #16
 801acc4:	d418      	bmi.n	801acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801acc6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801acca:	42bd      	cmp	r5, r7
 801accc:	dd14      	ble.n	801acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801acce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801acd2:	d411      	bmi.n	801acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801acd4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801acd8:	4564      	cmp	r4, ip
 801acda:	dd0d      	ble.n	801acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801acdc:	b22d      	sxth	r5, r5
 801acde:	fb0c 7505 	mla	r5, ip, r5, r7
 801ace2:	9c01      	ldr	r4, [sp, #4]
 801ace4:	5d64      	ldrb	r4, [r4, r5]
 801ace6:	2cff      	cmp	r4, #255	; 0xff
 801ace8:	d10c      	bne.n	801ad04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801acea:	9c00      	ldr	r4, [sp, #0]
 801acec:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801acf0:	f06f 0401 	mvn.w	r4, #1
 801acf4:	4374      	muls	r4, r6
 801acf6:	5305      	strh	r5, [r0, r4]
 801acf8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801acfa:	4421      	add	r1, r4
 801acfc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801acfe:	3e01      	subs	r6, #1
 801ad00:	4422      	add	r2, r4
 801ad02:	e79c      	b.n	801ac3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ad04:	2c00      	cmp	r4, #0
 801ad06:	d0f7      	beq.n	801acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ad08:	9f00      	ldr	r7, [sp, #0]
 801ad0a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801ad0e:	f06f 0501 	mvn.w	r5, #1
 801ad12:	4375      	muls	r5, r6
 801ad14:	9502      	str	r5, [sp, #8]
 801ad16:	5b45      	ldrh	r5, [r0, r5]
 801ad18:	fa1f fc84 	uxth.w	ip, r4
 801ad1c:	122f      	asrs	r7, r5, #8
 801ad1e:	43e4      	mvns	r4, r4
 801ad20:	b2e4      	uxtb	r4, r4
 801ad22:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ad26:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ad2a:	fb17 f704 	smulbb	r7, r7, r4
 801ad2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ad32:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ad36:	00ed      	lsls	r5, r5, #3
 801ad38:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ad3c:	b2ed      	uxtb	r5, r5
 801ad3e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ad42:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ad46:	fb15 f504 	smulbb	r5, r5, r4
 801ad4a:	fa5f f989 	uxtb.w	r9, r9
 801ad4e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ad52:	fb09 550c 	mla	r5, r9, ip, r5
 801ad56:	fb1a fa04 	smulbb	sl, sl, r4
 801ad5a:	fa1f fe8e 	uxth.w	lr, lr
 801ad5e:	b2ad      	uxth	r5, r5
 801ad60:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ad64:	fb07 a70c 	mla	r7, r7, ip, sl
 801ad68:	f10e 0401 	add.w	r4, lr, #1
 801ad6c:	f105 0a01 	add.w	sl, r5, #1
 801ad70:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801ad74:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ad78:	b2bf      	uxth	r7, r7
 801ad7a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ad7e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ad82:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ad86:	f107 0a01 	add.w	sl, r7, #1
 801ad8a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ad8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ad96:	9c02      	ldr	r4, [sp, #8]
 801ad98:	ea4e 0e0a 	orr.w	lr, lr, sl
 801ad9c:	f820 e004 	strh.w	lr, [r0, r4]
 801ada0:	e7aa      	b.n	801acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ada2:	f04f 0900 	mov.w	r9, #0
 801ada6:	eba3 0409 	sub.w	r4, r3, r9
 801adaa:	2c00      	cmp	r4, #0
 801adac:	f77f af4a 	ble.w	801ac44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801adb0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801adb4:	1414      	asrs	r4, r2, #16
 801adb6:	140d      	asrs	r5, r1, #16
 801adb8:	fb06 5504 	mla	r5, r6, r4, r5
 801adbc:	9c01      	ldr	r4, [sp, #4]
 801adbe:	5d64      	ldrb	r4, [r4, r5]
 801adc0:	2cff      	cmp	r4, #255	; 0xff
 801adc2:	d10b      	bne.n	801addc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801adc4:	9c00      	ldr	r4, [sp, #0]
 801adc6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801adca:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801adce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801add0:	4421      	add	r1, r4
 801add2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801add4:	f109 0901 	add.w	r9, r9, #1
 801add8:	4422      	add	r2, r4
 801adda:	e7e4      	b.n	801ada6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801addc:	2c00      	cmp	r4, #0
 801adde:	d0f6      	beq.n	801adce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ade0:	9e00      	ldr	r6, [sp, #0]
 801ade2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801ade6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801adea:	b2a7      	uxth	r7, r4
 801adec:	122e      	asrs	r6, r5, #8
 801adee:	43e4      	mvns	r4, r4
 801adf0:	b2e4      	uxtb	r4, r4
 801adf2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801adf6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801adfa:	fb16 f604 	smulbb	r6, r6, r4
 801adfe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ae02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ae06:	00ed      	lsls	r5, r5, #3
 801ae08:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ae0c:	b2ed      	uxtb	r5, r5
 801ae0e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ae12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ae16:	fb15 f504 	smulbb	r5, r5, r4
 801ae1a:	fa5f fe8e 	uxtb.w	lr, lr
 801ae1e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ae22:	fb0e 5507 	mla	r5, lr, r7, r5
 801ae26:	fb1a fa04 	smulbb	sl, sl, r4
 801ae2a:	fa1f fc8c 	uxth.w	ip, ip
 801ae2e:	b2ad      	uxth	r5, r5
 801ae30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ae34:	fb06 a607 	mla	r6, r6, r7, sl
 801ae38:	f10c 0401 	add.w	r4, ip, #1
 801ae3c:	f105 0a01 	add.w	sl, r5, #1
 801ae40:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ae44:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ae48:	b2b6      	uxth	r6, r6
 801ae4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ae52:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ae56:	f106 0a01 	add.w	sl, r6, #1
 801ae5a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ae5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae62:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae66:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ae6a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801ae6e:	e7ae      	b.n	801adce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ae70:	b005      	add	sp, #20
 801ae72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae76 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae7a:	b085      	sub	sp, #20
 801ae7c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ae7e:	9203      	str	r2, [sp, #12]
 801ae80:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801ae84:	9201      	str	r2, [sp, #4]
 801ae86:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ae8a:	9100      	str	r1, [sp, #0]
 801ae8c:	6841      	ldr	r1, [r0, #4]
 801ae8e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801ae92:	fb01 2404 	mla	r4, r1, r4, r2
 801ae96:	6802      	ldr	r2, [r0, #0]
 801ae98:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ae9c:	f8de 2000 	ldr.w	r2, [lr]
 801aea0:	9202      	str	r2, [sp, #8]
 801aea2:	9a01      	ldr	r2, [sp, #4]
 801aea4:	43d6      	mvns	r6, r2
 801aea6:	b2f6      	uxtb	r6, r6
 801aea8:	9a00      	ldr	r2, [sp, #0]
 801aeaa:	2a00      	cmp	r2, #0
 801aeac:	dc03      	bgt.n	801aeb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801aeae:	9a03      	ldr	r2, [sp, #12]
 801aeb0:	2a00      	cmp	r2, #0
 801aeb2:	f340 8124 	ble.w	801b0fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801aeb6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aeb8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801aebc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801aec0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aec4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aec6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aeca:	2b00      	cmp	r3, #0
 801aecc:	dd0e      	ble.n	801aeec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801aece:	1408      	asrs	r0, r1, #16
 801aed0:	d405      	bmi.n	801aede <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aed2:	4560      	cmp	r0, ip
 801aed4:	da03      	bge.n	801aede <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aed6:	1410      	asrs	r0, r2, #16
 801aed8:	d401      	bmi.n	801aede <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aeda:	42b8      	cmp	r0, r7
 801aedc:	db07      	blt.n	801aeee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aede:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aee0:	4401      	add	r1, r0
 801aee2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801aee4:	3b01      	subs	r3, #1
 801aee6:	4402      	add	r2, r0
 801aee8:	3402      	adds	r4, #2
 801aeea:	e7ee      	b.n	801aeca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801aeec:	d06e      	beq.n	801afcc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801aeee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aef0:	1e58      	subs	r0, r3, #1
 801aef2:	fb05 1500 	mla	r5, r5, r0, r1
 801aef6:	142d      	asrs	r5, r5, #16
 801aef8:	d45c      	bmi.n	801afb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801aefa:	4565      	cmp	r5, ip
 801aefc:	da5a      	bge.n	801afb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801aefe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801af00:	fb05 2000 	mla	r0, r5, r0, r2
 801af04:	1400      	asrs	r0, r0, #16
 801af06:	d455      	bmi.n	801afb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801af08:	42b8      	cmp	r0, r7
 801af0a:	da53      	bge.n	801afb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801af0c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801af10:	4699      	mov	r9, r3
 801af12:	46a2      	mov	sl, r4
 801af14:	f1b9 0f00 	cmp.w	r9, #0
 801af18:	dd54      	ble.n	801afc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801af1a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801af1e:	140d      	asrs	r5, r1, #16
 801af20:	1410      	asrs	r0, r2, #16
 801af22:	fb07 5000 	mla	r0, r7, r0, r5
 801af26:	9d02      	ldr	r5, [sp, #8]
 801af28:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801af2c:	f8ba 5000 	ldrh.w	r5, [sl]
 801af30:	122f      	asrs	r7, r5, #8
 801af32:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801af36:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801af3a:	fb17 f706 	smulbb	r7, r7, r6
 801af3e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801af42:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801af46:	00ed      	lsls	r5, r5, #3
 801af48:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801af4c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801af50:	10c7      	asrs	r7, r0, #3
 801af52:	b2ed      	uxtb	r5, r5
 801af54:	00c0      	lsls	r0, r0, #3
 801af56:	fb18 f806 	smulbb	r8, r8, r6
 801af5a:	fb15 f506 	smulbb	r5, r5, r6
 801af5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801af62:	b2c0      	uxtb	r0, r0
 801af64:	fa1f fc8c 	uxth.w	ip, ip
 801af68:	fb07 870b 	mla	r7, r7, fp, r8
 801af6c:	fb00 500b 	mla	r0, r0, fp, r5
 801af70:	b280      	uxth	r0, r0
 801af72:	b2bf      	uxth	r7, r7
 801af74:	f10c 0501 	add.w	r5, ip, #1
 801af78:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801af7c:	f107 0801 	add.w	r8, r7, #1
 801af80:	1c45      	adds	r5, r0, #1
 801af82:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801af86:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801af8a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801af8c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801af90:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801af94:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801af98:	ea45 0c0c 	orr.w	ip, r5, ip
 801af9c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801afa0:	4401      	add	r1, r0
 801afa2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801afa4:	ea4c 0c08 	orr.w	ip, ip, r8
 801afa8:	f82a cb02 	strh.w	ip, [sl], #2
 801afac:	4402      	add	r2, r0
 801afae:	f109 39ff 	add.w	r9, r9, #4294967295
 801afb2:	e7af      	b.n	801af14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801afb4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801afb8:	f04f 0800 	mov.w	r8, #0
 801afbc:	eb03 0008 	add.w	r0, r3, r8
 801afc0:	2800      	cmp	r0, #0
 801afc2:	dc41      	bgt.n	801b048 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801afc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801afc8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afcc:	9b00      	ldr	r3, [sp, #0]
 801afce:	2b00      	cmp	r3, #0
 801afd0:	f340 8095 	ble.w	801b0fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801afd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801afdc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801afe0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801afe2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afe6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801afea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801afee:	eef0 6a62 	vmov.f32	s13, s5
 801aff2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aff6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801affa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801affe:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801b002:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b006:	eef0 6a43 	vmov.f32	s13, s6
 801b00a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b00e:	ee12 2a90 	vmov	r2, s5
 801b012:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b016:	fb92 f3f3 	sdiv	r3, r2, r3
 801b01a:	ee13 2a10 	vmov	r2, s6
 801b01e:	9311      	str	r3, [sp, #68]	; 0x44
 801b020:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b022:	fb92 f3f3 	sdiv	r3, r2, r3
 801b026:	9312      	str	r3, [sp, #72]	; 0x48
 801b028:	9b00      	ldr	r3, [sp, #0]
 801b02a:	9a03      	ldr	r2, [sp, #12]
 801b02c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b030:	3b01      	subs	r3, #1
 801b032:	9300      	str	r3, [sp, #0]
 801b034:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801b038:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b03a:	eeb0 3a67 	vmov.f32	s6, s15
 801b03e:	bf08      	it	eq
 801b040:	4613      	moveq	r3, r2
 801b042:	eef0 2a47 	vmov.f32	s5, s14
 801b046:	e72f      	b.n	801aea8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b048:	140f      	asrs	r7, r1, #16
 801b04a:	d451      	bmi.n	801b0f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b04c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b050:	42bd      	cmp	r5, r7
 801b052:	dd4d      	ble.n	801b0f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b054:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b058:	d44a      	bmi.n	801b0f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b05a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b05e:	4560      	cmp	r0, ip
 801b060:	dd46      	ble.n	801b0f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b062:	b22d      	sxth	r5, r5
 801b064:	fb0c 7505 	mla	r5, ip, r5, r7
 801b068:	9802      	ldr	r0, [sp, #8]
 801b06a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b06e:	f06f 0501 	mvn.w	r5, #1
 801b072:	fb05 fb08 	mul.w	fp, r5, r8
 801b076:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b07a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b07e:	122f      	asrs	r7, r5, #8
 801b080:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b084:	fb17 f706 	smulbb	r7, r7, r6
 801b088:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b08c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b090:	00ed      	lsls	r5, r5, #3
 801b092:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b096:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b09a:	10c7      	asrs	r7, r0, #3
 801b09c:	b2ed      	uxtb	r5, r5
 801b09e:	00c0      	lsls	r0, r0, #3
 801b0a0:	fb19 f906 	smulbb	r9, r9, r6
 801b0a4:	fb15 f506 	smulbb	r5, r5, r6
 801b0a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b0ac:	b2c0      	uxtb	r0, r0
 801b0ae:	fa1f fc8c 	uxth.w	ip, ip
 801b0b2:	fb07 970a 	mla	r7, r7, sl, r9
 801b0b6:	fb00 500a 	mla	r0, r0, sl, r5
 801b0ba:	b2bf      	uxth	r7, r7
 801b0bc:	b280      	uxth	r0, r0
 801b0be:	f10c 0501 	add.w	r5, ip, #1
 801b0c2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b0c6:	f107 0901 	add.w	r9, r7, #1
 801b0ca:	1c45      	adds	r5, r0, #1
 801b0cc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b0d0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b0d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b0d8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b0dc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b0e0:	ea45 0c0c 	orr.w	ip, r5, ip
 801b0e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b0e8:	ea4c 0c09 	orr.w	ip, ip, r9
 801b0ec:	f824 c00b 	strh.w	ip, [r4, fp]
 801b0f0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b0f2:	4401      	add	r1, r0
 801b0f4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b0f6:	f108 38ff 	add.w	r8, r8, #4294967295
 801b0fa:	4402      	add	r2, r0
 801b0fc:	e75e      	b.n	801afbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b0fe:	b005      	add	sp, #20
 801b100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b104 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b108:	b085      	sub	sp, #20
 801b10a:	4693      	mov	fp, r2
 801b10c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b10e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b110:	6870      	ldr	r0, [r6, #4]
 801b112:	9101      	str	r1, [sp, #4]
 801b114:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b118:	fb00 2404 	mla	r4, r0, r4, r2
 801b11c:	6832      	ldr	r2, [r6, #0]
 801b11e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b122:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b126:	682a      	ldr	r2, [r5, #0]
 801b128:	9202      	str	r2, [sp, #8]
 801b12a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b12e:	9a01      	ldr	r2, [sp, #4]
 801b130:	2a00      	cmp	r2, #0
 801b132:	dc03      	bgt.n	801b13c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b134:	f1bb 0f00 	cmp.w	fp, #0
 801b138:	f340 809a 	ble.w	801b270 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b13c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b13e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b142:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b146:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b14a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b14c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b150:	2b00      	cmp	r3, #0
 801b152:	dd0c      	ble.n	801b16e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b154:	1406      	asrs	r6, r0, #16
 801b156:	d405      	bmi.n	801b164 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b158:	454e      	cmp	r6, r9
 801b15a:	da03      	bge.n	801b164 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b15c:	1416      	asrs	r6, r2, #16
 801b15e:	d401      	bmi.n	801b164 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b160:	4546      	cmp	r6, r8
 801b162:	db05      	blt.n	801b170 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b164:	4470      	add	r0, lr
 801b166:	4462      	add	r2, ip
 801b168:	3b01      	subs	r3, #1
 801b16a:	3402      	adds	r4, #2
 801b16c:	e7f0      	b.n	801b150 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b16e:	d00f      	beq.n	801b190 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b170:	1e5e      	subs	r6, r3, #1
 801b172:	fb0e 0706 	mla	r7, lr, r6, r0
 801b176:	143f      	asrs	r7, r7, #16
 801b178:	d541      	bpl.n	801b1fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b17a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b17e:	4698      	mov	r8, r3
 801b180:	9603      	str	r6, [sp, #12]
 801b182:	f1b8 0f00 	cmp.w	r8, #0
 801b186:	dc56      	bgt.n	801b236 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b188:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b18c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b190:	9b01      	ldr	r3, [sp, #4]
 801b192:	2b00      	cmp	r3, #0
 801b194:	dd6c      	ble.n	801b270 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b196:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b19a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b19e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b1a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b1a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b1a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b1ac:	eeb0 6a62 	vmov.f32	s12, s5
 801b1b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b1b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b1bc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b1c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b1c4:	eeb0 6a43 	vmov.f32	s12, s6
 801b1c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b1cc:	ee12 2a90 	vmov	r2, s5
 801b1d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b1d4:	fb92 fef3 	sdiv	lr, r2, r3
 801b1d8:	ee13 2a10 	vmov	r2, s6
 801b1dc:	fb92 fcf3 	sdiv	ip, r2, r3
 801b1e0:	9b01      	ldr	r3, [sp, #4]
 801b1e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1e6:	3b01      	subs	r3, #1
 801b1e8:	9301      	str	r3, [sp, #4]
 801b1ea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b1ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b1f0:	eeb0 3a67 	vmov.f32	s6, s15
 801b1f4:	bf08      	it	eq
 801b1f6:	465b      	moveq	r3, fp
 801b1f8:	eef0 2a47 	vmov.f32	s5, s14
 801b1fc:	e797      	b.n	801b12e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b1fe:	454f      	cmp	r7, r9
 801b200:	dabb      	bge.n	801b17a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b202:	fb0c 2606 	mla	r6, ip, r6, r2
 801b206:	1436      	asrs	r6, r6, #16
 801b208:	d4b7      	bmi.n	801b17a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b20a:	4546      	cmp	r6, r8
 801b20c:	dab5      	bge.n	801b17a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b20e:	461e      	mov	r6, r3
 801b210:	46a0      	mov	r8, r4
 801b212:	2e00      	cmp	r6, #0
 801b214:	ddb8      	ble.n	801b188 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b216:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b21a:	9902      	ldr	r1, [sp, #8]
 801b21c:	1417      	asrs	r7, r2, #16
 801b21e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b222:	fb0a 9707 	mla	r7, sl, r7, r9
 801b226:	4470      	add	r0, lr
 801b228:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b22c:	f828 7b02 	strh.w	r7, [r8], #2
 801b230:	4462      	add	r2, ip
 801b232:	3e01      	subs	r6, #1
 801b234:	e7ed      	b.n	801b212 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b236:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b23a:	d414      	bmi.n	801b266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b23c:	68ae      	ldr	r6, [r5, #8]
 801b23e:	454e      	cmp	r6, r9
 801b240:	dd11      	ble.n	801b266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b242:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b246:	d40e      	bmi.n	801b266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b248:	68ef      	ldr	r7, [r5, #12]
 801b24a:	4557      	cmp	r7, sl
 801b24c:	dd0b      	ble.n	801b266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b24e:	b236      	sxth	r6, r6
 801b250:	fb0a 9606 	mla	r6, sl, r6, r9
 801b254:	9f02      	ldr	r7, [sp, #8]
 801b256:	f06f 0101 	mvn.w	r1, #1
 801b25a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b25e:	fb01 f608 	mul.w	r6, r1, r8
 801b262:	9903      	ldr	r1, [sp, #12]
 801b264:	538f      	strh	r7, [r1, r6]
 801b266:	4470      	add	r0, lr
 801b268:	4462      	add	r2, ip
 801b26a:	f108 38ff 	add.w	r8, r8, #4294967295
 801b26e:	e788      	b.n	801b182 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b270:	b005      	add	sp, #20
 801b272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b276 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b276:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b27a:	b087      	sub	sp, #28
 801b27c:	468b      	mov	fp, r1
 801b27e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b280:	9203      	str	r2, [sp, #12]
 801b282:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b286:	9204      	str	r2, [sp, #16]
 801b288:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b28c:	6841      	ldr	r1, [r0, #4]
 801b28e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b292:	fb01 2505 	mla	r5, r1, r5, r2
 801b296:	6802      	ldr	r2, [r0, #0]
 801b298:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b29c:	f8d9 2000 	ldr.w	r2, [r9]
 801b2a0:	9201      	str	r2, [sp, #4]
 801b2a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b2a6:	f1bb 0f00 	cmp.w	fp, #0
 801b2aa:	dc03      	bgt.n	801b2b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b2ac:	9a03      	ldr	r2, [sp, #12]
 801b2ae:	2a00      	cmp	r2, #0
 801b2b0:	f340 8159 	ble.w	801b566 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b2b4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b2b6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b2ba:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b2be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b2c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b2c4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b2c8:	2b00      	cmp	r3, #0
 801b2ca:	dd0e      	ble.n	801b2ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b2cc:	1402      	asrs	r2, r0, #16
 801b2ce:	d405      	bmi.n	801b2dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b2d0:	42ba      	cmp	r2, r7
 801b2d2:	da03      	bge.n	801b2dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b2d4:	140a      	asrs	r2, r1, #16
 801b2d6:	d401      	bmi.n	801b2dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b2d8:	42b2      	cmp	r2, r6
 801b2da:	db07      	blt.n	801b2ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b2dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b2de:	4410      	add	r0, r2
 801b2e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b2e2:	3b01      	subs	r3, #1
 801b2e4:	4411      	add	r1, r2
 801b2e6:	3502      	adds	r5, #2
 801b2e8:	e7ee      	b.n	801b2c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b2ea:	d017      	beq.n	801b31c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b2ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b2ee:	1e5a      	subs	r2, r3, #1
 801b2f0:	fb04 0402 	mla	r4, r4, r2, r0
 801b2f4:	1424      	asrs	r4, r4, #16
 801b2f6:	d409      	bmi.n	801b30c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b2f8:	42bc      	cmp	r4, r7
 801b2fa:	da07      	bge.n	801b30c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b2fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b2fe:	fb04 1202 	mla	r2, r4, r2, r1
 801b302:	1412      	asrs	r2, r2, #16
 801b304:	d402      	bmi.n	801b30c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b306:	42b2      	cmp	r2, r6
 801b308:	f2c0 80bf 	blt.w	801b48a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b30c:	2700      	movs	r7, #0
 801b30e:	19da      	adds	r2, r3, r7
 801b310:	2a00      	cmp	r2, #0
 801b312:	dc3e      	bgt.n	801b392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b314:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b318:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b31c:	f1bb 0f00 	cmp.w	fp, #0
 801b320:	f340 8121 	ble.w	801b566 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b324:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b328:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b32c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b330:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b332:	f1bb 0b01 	subs.w	fp, fp, #1
 801b336:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b33a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b33e:	eeb0 6a62 	vmov.f32	s12, s5
 801b342:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b346:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b34a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b34e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b352:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b356:	eeb0 6a43 	vmov.f32	s12, s6
 801b35a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b35e:	ee12 2a90 	vmov	r2, s5
 801b362:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b366:	fb92 f3f3 	sdiv	r3, r2, r3
 801b36a:	ee13 2a10 	vmov	r2, s6
 801b36e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b372:	9313      	str	r3, [sp, #76]	; 0x4c
 801b374:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b376:	fb92 f3f3 	sdiv	r3, r2, r3
 801b37a:	9a03      	ldr	r2, [sp, #12]
 801b37c:	9314      	str	r3, [sp, #80]	; 0x50
 801b37e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b382:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b384:	eeb0 3a67 	vmov.f32	s6, s15
 801b388:	bf08      	it	eq
 801b38a:	4613      	moveq	r3, r2
 801b38c:	eef0 2a47 	vmov.f32	s5, s14
 801b390:	e789      	b.n	801b2a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b392:	1406      	asrs	r6, r0, #16
 801b394:	d42d      	bmi.n	801b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b396:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b39a:	42b4      	cmp	r4, r6
 801b39c:	dd29      	ble.n	801b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b39e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b3a2:	d426      	bmi.n	801b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b3a4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b3a8:	4562      	cmp	r2, ip
 801b3aa:	dd22      	ble.n	801b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b3ac:	b224      	sxth	r4, r4
 801b3ae:	9a01      	ldr	r2, [sp, #4]
 801b3b0:	fb0c 6404 	mla	r4, ip, r4, r6
 801b3b4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b3b8:	0e22      	lsrs	r2, r4, #24
 801b3ba:	d01a      	beq.n	801b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b3bc:	9e04      	ldr	r6, [sp, #16]
 801b3be:	4372      	muls	r2, r6
 801b3c0:	1c56      	adds	r6, r2, #1
 801b3c2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b3c6:	1212      	asrs	r2, r2, #8
 801b3c8:	0a26      	lsrs	r6, r4, #8
 801b3ca:	2aff      	cmp	r2, #255	; 0xff
 801b3cc:	9605      	str	r6, [sp, #20]
 801b3ce:	d116      	bne.n	801b3fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b3d0:	f06f 0201 	mvn.w	r2, #1
 801b3d4:	fb02 fc07 	mul.w	ip, r2, r7
 801b3d8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b3dc:	0962      	lsrs	r2, r4, #5
 801b3de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b3e2:	f026 0607 	bic.w	r6, r6, #7
 801b3e6:	4316      	orrs	r6, r2
 801b3e8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b3ec:	4326      	orrs	r6, r4
 801b3ee:	f825 600c 	strh.w	r6, [r5, ip]
 801b3f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b3f4:	4410      	add	r0, r2
 801b3f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b3f8:	3f01      	subs	r7, #1
 801b3fa:	4411      	add	r1, r2
 801b3fc:	e787      	b.n	801b30e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b3fe:	f06f 0601 	mvn.w	r6, #1
 801b402:	437e      	muls	r6, r7
 801b404:	fa1f fa82 	uxth.w	sl, r2
 801b408:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b40c:	9602      	str	r6, [sp, #8]
 801b40e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b412:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b416:	43d2      	mvns	r2, r2
 801b418:	b2d2      	uxtb	r2, r2
 801b41a:	fb1c fc0a 	smulbb	ip, ip, sl
 801b41e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b422:	fb0e ce02 	mla	lr, lr, r2, ip
 801b426:	b2e4      	uxtb	r4, r4
 801b428:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b42c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b430:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b434:	fa5f f888 	uxtb.w	r8, r8
 801b438:	fb14 f40a 	smulbb	r4, r4, sl
 801b43c:	fb08 4402 	mla	r4, r8, r2, r4
 801b440:	fa1f fe8e 	uxth.w	lr, lr
 801b444:	fb16 f60a 	smulbb	r6, r6, sl
 801b448:	b2a4      	uxth	r4, r4
 801b44a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b44e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b452:	f10e 0201 	add.w	r2, lr, #1
 801b456:	1c66      	adds	r6, r4, #1
 801b458:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b45c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b460:	fa1f fc8c 	uxth.w	ip, ip
 801b464:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b468:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b46c:	ea46 0e0e 	orr.w	lr, r6, lr
 801b470:	f10c 0601 	add.w	r6, ip, #1
 801b474:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b478:	0976      	lsrs	r6, r6, #5
 801b47a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b47e:	9a02      	ldr	r2, [sp, #8]
 801b480:	ea4e 0e06 	orr.w	lr, lr, r6
 801b484:	f825 e002 	strh.w	lr, [r5, r2]
 801b488:	e7b3      	b.n	801b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b48a:	f04f 0800 	mov.w	r8, #0
 801b48e:	eba3 0208 	sub.w	r2, r3, r8
 801b492:	2a00      	cmp	r2, #0
 801b494:	f77f af3e 	ble.w	801b314 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b498:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b49c:	1404      	asrs	r4, r0, #16
 801b49e:	140a      	asrs	r2, r1, #16
 801b4a0:	fb06 4202 	mla	r2, r6, r2, r4
 801b4a4:	9c01      	ldr	r4, [sp, #4]
 801b4a6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b4aa:	0e22      	lsrs	r2, r4, #24
 801b4ac:	d016      	beq.n	801b4dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b4ae:	9e04      	ldr	r6, [sp, #16]
 801b4b0:	4372      	muls	r2, r6
 801b4b2:	1c56      	adds	r6, r2, #1
 801b4b4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b4b8:	1212      	asrs	r2, r2, #8
 801b4ba:	2aff      	cmp	r2, #255	; 0xff
 801b4bc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b4c0:	d113      	bne.n	801b4ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b4c2:	0962      	lsrs	r2, r4, #5
 801b4c4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b4c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b4cc:	f026 0607 	bic.w	r6, r6, #7
 801b4d0:	4316      	orrs	r6, r2
 801b4d2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b4d6:	4326      	orrs	r6, r4
 801b4d8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b4dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b4de:	4410      	add	r0, r2
 801b4e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b4e2:	f108 0801 	add.w	r8, r8, #1
 801b4e6:	4411      	add	r1, r2
 801b4e8:	e7d1      	b.n	801b48e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b4ea:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b4ee:	fa1f fa82 	uxth.w	sl, r2
 801b4f2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b4f6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b4fa:	43d2      	mvns	r2, r2
 801b4fc:	b2d2      	uxtb	r2, r2
 801b4fe:	fb17 f70a 	smulbb	r7, r7, sl
 801b502:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b506:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b50a:	b2e4      	uxtb	r4, r4
 801b50c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b510:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b514:	fa5f fe8e 	uxtb.w	lr, lr
 801b518:	fb14 f40a 	smulbb	r4, r4, sl
 801b51c:	fb0e 4402 	mla	r4, lr, r2, r4
 801b520:	b2f6      	uxtb	r6, r6
 801b522:	fa1f fc8c 	uxth.w	ip, ip
 801b526:	fb16 f60a 	smulbb	r6, r6, sl
 801b52a:	b2a4      	uxth	r4, r4
 801b52c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b530:	fb07 6702 	mla	r7, r7, r2, r6
 801b534:	f10c 0201 	add.w	r2, ip, #1
 801b538:	1c66      	adds	r6, r4, #1
 801b53a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b53e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b542:	b2bf      	uxth	r7, r7
 801b544:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b548:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b54c:	ea46 0c0c 	orr.w	ip, r6, ip
 801b550:	1c7e      	adds	r6, r7, #1
 801b552:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b556:	0976      	lsrs	r6, r6, #5
 801b558:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b55c:	ea4c 0c06 	orr.w	ip, ip, r6
 801b560:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b564:	e7ba      	b.n	801b4dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b566:	b007      	add	sp, #28
 801b568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b56c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b570:	b085      	sub	sp, #20
 801b572:	468b      	mov	fp, r1
 801b574:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b576:	9203      	str	r2, [sp, #12]
 801b578:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b57c:	6841      	ldr	r1, [r0, #4]
 801b57e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b582:	fb01 2404 	mla	r4, r1, r4, r2
 801b586:	6802      	ldr	r2, [r0, #0]
 801b588:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b58c:	f8d8 2000 	ldr.w	r2, [r8]
 801b590:	9201      	str	r2, [sp, #4]
 801b592:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b596:	f1bb 0f00 	cmp.w	fp, #0
 801b59a:	dc03      	bgt.n	801b5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b59c:	9a03      	ldr	r2, [sp, #12]
 801b59e:	2a00      	cmp	r2, #0
 801b5a0:	f340 814f 	ble.w	801b842 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b5a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b5a6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b5aa:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b5ae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b5b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b5b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b5b8:	2b00      	cmp	r3, #0
 801b5ba:	dd0e      	ble.n	801b5da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b5bc:	1408      	asrs	r0, r1, #16
 801b5be:	d405      	bmi.n	801b5cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b5c0:	42b8      	cmp	r0, r7
 801b5c2:	da03      	bge.n	801b5cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b5c4:	1410      	asrs	r0, r2, #16
 801b5c6:	d401      	bmi.n	801b5cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b5c8:	42b0      	cmp	r0, r6
 801b5ca:	db07      	blt.n	801b5dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b5cc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b5ce:	4401      	add	r1, r0
 801b5d0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b5d2:	3b01      	subs	r3, #1
 801b5d4:	4402      	add	r2, r0
 801b5d6:	3402      	adds	r4, #2
 801b5d8:	e7ee      	b.n	801b5b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b5da:	d017      	beq.n	801b60c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b5dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b5de:	1e58      	subs	r0, r3, #1
 801b5e0:	fb05 1500 	mla	r5, r5, r0, r1
 801b5e4:	142d      	asrs	r5, r5, #16
 801b5e6:	d409      	bmi.n	801b5fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b5e8:	42bd      	cmp	r5, r7
 801b5ea:	da07      	bge.n	801b5fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b5ec:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b5ee:	fb05 2000 	mla	r0, r5, r0, r2
 801b5f2:	1400      	asrs	r0, r0, #16
 801b5f4:	d402      	bmi.n	801b5fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b5f6:	42b0      	cmp	r0, r6
 801b5f8:	f2c0 80ba 	blt.w	801b770 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b5fc:	2600      	movs	r6, #0
 801b5fe:	1998      	adds	r0, r3, r6
 801b600:	2800      	cmp	r0, #0
 801b602:	dc3e      	bgt.n	801b682 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b604:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b608:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b60c:	f1bb 0f00 	cmp.w	fp, #0
 801b610:	f340 8117 	ble.w	801b842 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b614:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b618:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b61c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b620:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b622:	f1bb 0b01 	subs.w	fp, fp, #1
 801b626:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b62a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b62e:	eeb0 6a62 	vmov.f32	s12, s5
 801b632:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b636:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b63a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b63e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b642:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b646:	eeb0 6a43 	vmov.f32	s12, s6
 801b64a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b64e:	ee12 2a90 	vmov	r2, s5
 801b652:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b656:	fb92 f3f3 	sdiv	r3, r2, r3
 801b65a:	ee13 2a10 	vmov	r2, s6
 801b65e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b662:	9311      	str	r3, [sp, #68]	; 0x44
 801b664:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b666:	fb92 f3f3 	sdiv	r3, r2, r3
 801b66a:	9a03      	ldr	r2, [sp, #12]
 801b66c:	9312      	str	r3, [sp, #72]	; 0x48
 801b66e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b672:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b674:	eeb0 3a67 	vmov.f32	s6, s15
 801b678:	bf08      	it	eq
 801b67a:	4613      	moveq	r3, r2
 801b67c:	eef0 2a47 	vmov.f32	s5, s14
 801b680:	e789      	b.n	801b596 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b682:	140f      	asrs	r7, r1, #16
 801b684:	d424      	bmi.n	801b6d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b686:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b68a:	42bd      	cmp	r5, r7
 801b68c:	dd20      	ble.n	801b6d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b68e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b692:	d41d      	bmi.n	801b6d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b694:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b698:	4560      	cmp	r0, ip
 801b69a:	dd19      	ble.n	801b6d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b69c:	b22d      	sxth	r5, r5
 801b69e:	fb0c 7505 	mla	r5, ip, r5, r7
 801b6a2:	9801      	ldr	r0, [sp, #4]
 801b6a4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b6a8:	0e07      	lsrs	r7, r0, #24
 801b6aa:	2fff      	cmp	r7, #255	; 0xff
 801b6ac:	d116      	bne.n	801b6dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6ae:	f06f 0501 	mvn.w	r5, #1
 801b6b2:	fb05 f706 	mul.w	r7, r5, r6
 801b6b6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b6ba:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b6be:	0945      	lsrs	r5, r0, #5
 801b6c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6c4:	ea4c 0505 	orr.w	r5, ip, r5
 801b6c8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b6cc:	4305      	orrs	r5, r0
 801b6ce:	53e5      	strh	r5, [r4, r7]
 801b6d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b6d2:	4401      	add	r1, r0
 801b6d4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b6d6:	3e01      	subs	r6, #1
 801b6d8:	4402      	add	r2, r0
 801b6da:	e790      	b.n	801b5fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b6dc:	b2fd      	uxtb	r5, r7
 801b6de:	2f00      	cmp	r7, #0
 801b6e0:	d0f6      	beq.n	801b6d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b6e2:	f06f 0701 	mvn.w	r7, #1
 801b6e6:	4377      	muls	r7, r6
 801b6e8:	fa1f f985 	uxth.w	r9, r5
 801b6ec:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b6f0:	9702      	str	r7, [sp, #8]
 801b6f2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b6f6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b6fa:	43ed      	mvns	r5, r5
 801b6fc:	b2ed      	uxtb	r5, r5
 801b6fe:	fb17 f709 	smulbb	r7, r7, r9
 801b702:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b706:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b70a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b70e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b712:	b2c0      	uxtb	r0, r0
 801b714:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b718:	fa5f fe8e 	uxtb.w	lr, lr
 801b71c:	fb10 f009 	smulbb	r0, r0, r9
 801b720:	fb0e 0005 	mla	r0, lr, r5, r0
 801b724:	b280      	uxth	r0, r0
 801b726:	fa1f fc8c 	uxth.w	ip, ip
 801b72a:	fb1a fa09 	smulbb	sl, sl, r9
 801b72e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b732:	fb07 a705 	mla	r7, r7, r5, sl
 801b736:	f100 0a01 	add.w	sl, r0, #1
 801b73a:	f10c 0501 	add.w	r5, ip, #1
 801b73e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b742:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b746:	b2bf      	uxth	r7, r7
 801b748:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b74c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b750:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b754:	f107 0a01 	add.w	sl, r7, #1
 801b758:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b75c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b760:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b764:	9802      	ldr	r0, [sp, #8]
 801b766:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b76a:	f824 c000 	strh.w	ip, [r4, r0]
 801b76e:	e7af      	b.n	801b6d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b770:	f04f 0e00 	mov.w	lr, #0
 801b774:	eba3 000e 	sub.w	r0, r3, lr
 801b778:	2800      	cmp	r0, #0
 801b77a:	f77f af43 	ble.w	801b604 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b77e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b782:	140d      	asrs	r5, r1, #16
 801b784:	1410      	asrs	r0, r2, #16
 801b786:	fb06 5000 	mla	r0, r6, r0, r5
 801b78a:	9d01      	ldr	r5, [sp, #4]
 801b78c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b790:	0e2e      	lsrs	r6, r5, #24
 801b792:	2eff      	cmp	r6, #255	; 0xff
 801b794:	d112      	bne.n	801b7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b796:	482c      	ldr	r0, [pc, #176]	; (801b848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b798:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b79c:	0968      	lsrs	r0, r5, #5
 801b79e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b7a2:	4330      	orrs	r0, r6
 801b7a4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b7a8:	4328      	orrs	r0, r5
 801b7aa:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b7ae:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b7b0:	4401      	add	r1, r0
 801b7b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b7b4:	f10e 0e01 	add.w	lr, lr, #1
 801b7b8:	4402      	add	r2, r0
 801b7ba:	e7db      	b.n	801b774 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b7bc:	b2f0      	uxtb	r0, r6
 801b7be:	2e00      	cmp	r6, #0
 801b7c0:	d0f5      	beq.n	801b7ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b7c2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b7c6:	fa1f f980 	uxth.w	r9, r0
 801b7ca:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b7ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b7d2:	43c0      	mvns	r0, r0
 801b7d4:	b2c0      	uxtb	r0, r0
 801b7d6:	fb16 f609 	smulbb	r6, r6, r9
 801b7da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b7de:	fb07 6700 	mla	r7, r7, r0, r6
 801b7e2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b7e6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b7ea:	b2ed      	uxtb	r5, r5
 801b7ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b7f0:	fa5f fc8c 	uxtb.w	ip, ip
 801b7f4:	fb15 f509 	smulbb	r5, r5, r9
 801b7f8:	fb0c 5500 	mla	r5, ip, r0, r5
 801b7fc:	b2bf      	uxth	r7, r7
 801b7fe:	fb1a fa09 	smulbb	sl, sl, r9
 801b802:	b2ad      	uxth	r5, r5
 801b804:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b808:	fb06 a600 	mla	r6, r6, r0, sl
 801b80c:	1c78      	adds	r0, r7, #1
 801b80e:	f105 0a01 	add.w	sl, r5, #1
 801b812:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b816:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b81a:	b2b6      	uxth	r6, r6
 801b81c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b820:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b824:	ea4a 0707 	orr.w	r7, sl, r7
 801b828:	f106 0a01 	add.w	sl, r6, #1
 801b82c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b830:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b834:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b838:	ea47 070a 	orr.w	r7, r7, sl
 801b83c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b840:	e7b5      	b.n	801b7ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b842:	b005      	add	sp, #20
 801b844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b848:	fffff800 	.word	0xfffff800

0801b84c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b84c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b850:	b087      	sub	sp, #28
 801b852:	468b      	mov	fp, r1
 801b854:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b856:	9203      	str	r2, [sp, #12]
 801b858:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b85c:	9204      	str	r2, [sp, #16]
 801b85e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b862:	6841      	ldr	r1, [r0, #4]
 801b864:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b868:	fb01 2404 	mla	r4, r1, r4, r2
 801b86c:	6802      	ldr	r2, [r0, #0]
 801b86e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b872:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b876:	3201      	adds	r2, #1
 801b878:	f022 0201 	bic.w	r2, r2, #1
 801b87c:	9200      	str	r2, [sp, #0]
 801b87e:	f8d9 2000 	ldr.w	r2, [r9]
 801b882:	9201      	str	r2, [sp, #4]
 801b884:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b888:	f1bb 0f00 	cmp.w	fp, #0
 801b88c:	dc03      	bgt.n	801b896 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b88e:	9a03      	ldr	r2, [sp, #12]
 801b890:	2a00      	cmp	r2, #0
 801b892:	f340 8169 	ble.w	801bb68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b896:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b898:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b89c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b8a0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b8a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b8a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b8aa:	2b00      	cmp	r3, #0
 801b8ac:	dd0e      	ble.n	801b8cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b8ae:	1402      	asrs	r2, r0, #16
 801b8b0:	d405      	bmi.n	801b8be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b8b2:	42ba      	cmp	r2, r7
 801b8b4:	da03      	bge.n	801b8be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b8b6:	140a      	asrs	r2, r1, #16
 801b8b8:	d401      	bmi.n	801b8be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b8ba:	42b2      	cmp	r2, r6
 801b8bc:	db07      	blt.n	801b8ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b8be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b8c0:	4410      	add	r0, r2
 801b8c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b8c4:	3b01      	subs	r3, #1
 801b8c6:	4411      	add	r1, r2
 801b8c8:	3402      	adds	r4, #2
 801b8ca:	e7ee      	b.n	801b8aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b8cc:	d017      	beq.n	801b8fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b8ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b8d0:	1e5a      	subs	r2, r3, #1
 801b8d2:	fb05 0502 	mla	r5, r5, r2, r0
 801b8d6:	142d      	asrs	r5, r5, #16
 801b8d8:	d409      	bmi.n	801b8ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b8da:	42bd      	cmp	r5, r7
 801b8dc:	da07      	bge.n	801b8ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b8de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b8e0:	fb05 1202 	mla	r2, r5, r2, r1
 801b8e4:	1412      	asrs	r2, r2, #16
 801b8e6:	d402      	bmi.n	801b8ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b8e8:	42b2      	cmp	r2, r6
 801b8ea:	f2c0 80c7 	blt.w	801ba7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801b8ee:	2700      	movs	r7, #0
 801b8f0:	19da      	adds	r2, r3, r7
 801b8f2:	2a00      	cmp	r2, #0
 801b8f4:	dc3e      	bgt.n	801b974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b8f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b8fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b8fe:	f1bb 0f00 	cmp.w	fp, #0
 801b902:	f340 8131 	ble.w	801bb68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b906:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b90a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b90e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b912:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b914:	f1bb 0b01 	subs.w	fp, fp, #1
 801b918:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b91c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b920:	eeb0 6a62 	vmov.f32	s12, s5
 801b924:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b928:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b92c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b930:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b934:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b938:	eeb0 6a43 	vmov.f32	s12, s6
 801b93c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b940:	ee12 2a90 	vmov	r2, s5
 801b944:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b948:	fb92 f3f3 	sdiv	r3, r2, r3
 801b94c:	ee13 2a10 	vmov	r2, s6
 801b950:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b954:	9313      	str	r3, [sp, #76]	; 0x4c
 801b956:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b958:	fb92 f3f3 	sdiv	r3, r2, r3
 801b95c:	9a03      	ldr	r2, [sp, #12]
 801b95e:	9314      	str	r3, [sp, #80]	; 0x50
 801b960:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b964:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b966:	eeb0 3a67 	vmov.f32	s6, s15
 801b96a:	bf08      	it	eq
 801b96c:	4613      	moveq	r3, r2
 801b96e:	eef0 2a47 	vmov.f32	s5, s14
 801b972:	e789      	b.n	801b888 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b974:	1405      	asrs	r5, r0, #16
 801b976:	d435      	bmi.n	801b9e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b978:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b97c:	42aa      	cmp	r2, r5
 801b97e:	dd31      	ble.n	801b9e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b980:	140e      	asrs	r6, r1, #16
 801b982:	d42f      	bmi.n	801b9e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b984:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b988:	42b2      	cmp	r2, r6
 801b98a:	dd2b      	ble.n	801b9e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b98c:	9a00      	ldr	r2, [sp, #0]
 801b98e:	fb06 5502 	mla	r5, r6, r2, r5
 801b992:	086a      	lsrs	r2, r5, #1
 801b994:	9e01      	ldr	r6, [sp, #4]
 801b996:	5cb2      	ldrb	r2, [r6, r2]
 801b998:	07ee      	lsls	r6, r5, #31
 801b99a:	bf54      	ite	pl
 801b99c:	f002 020f 	andpl.w	r2, r2, #15
 801b9a0:	1112      	asrmi	r2, r2, #4
 801b9a2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b9a6:	b2d2      	uxtb	r2, r2
 801b9a8:	b1e2      	cbz	r2, 801b9e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9aa:	9d04      	ldr	r5, [sp, #16]
 801b9ac:	436a      	muls	r2, r5
 801b9ae:	1c55      	adds	r5, r2, #1
 801b9b0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b9b4:	4d6e      	ldr	r5, [pc, #440]	; (801bb70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b9b6:	682d      	ldr	r5, [r5, #0]
 801b9b8:	1212      	asrs	r2, r2, #8
 801b9ba:	0a2e      	lsrs	r6, r5, #8
 801b9bc:	2aff      	cmp	r2, #255	; 0xff
 801b9be:	9605      	str	r6, [sp, #20]
 801b9c0:	d116      	bne.n	801b9f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b9c2:	f06f 0201 	mvn.w	r2, #1
 801b9c6:	fb02 fc07 	mul.w	ip, r2, r7
 801b9ca:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b9ce:	096a      	lsrs	r2, r5, #5
 801b9d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b9d4:	f026 0607 	bic.w	r6, r6, #7
 801b9d8:	4316      	orrs	r6, r2
 801b9da:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b9de:	432e      	orrs	r6, r5
 801b9e0:	f824 600c 	strh.w	r6, [r4, ip]
 801b9e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b9e6:	4410      	add	r0, r2
 801b9e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b9ea:	3f01      	subs	r7, #1
 801b9ec:	4411      	add	r1, r2
 801b9ee:	e77f      	b.n	801b8f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b9f0:	f06f 0601 	mvn.w	r6, #1
 801b9f4:	437e      	muls	r6, r7
 801b9f6:	fa1f fa82 	uxth.w	sl, r2
 801b9fa:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b9fe:	9602      	str	r6, [sp, #8]
 801ba00:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801ba04:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801ba08:	43d2      	mvns	r2, r2
 801ba0a:	b2d2      	uxtb	r2, r2
 801ba0c:	fb1c fc0a 	smulbb	ip, ip, sl
 801ba10:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ba14:	fb0e ce02 	mla	lr, lr, r2, ip
 801ba18:	b2ed      	uxtb	r5, r5
 801ba1a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ba1e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ba22:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ba26:	fa5f f888 	uxtb.w	r8, r8
 801ba2a:	fb15 f50a 	smulbb	r5, r5, sl
 801ba2e:	fb08 5502 	mla	r5, r8, r2, r5
 801ba32:	fa1f fe8e 	uxth.w	lr, lr
 801ba36:	fb16 f60a 	smulbb	r6, r6, sl
 801ba3a:	b2ad      	uxth	r5, r5
 801ba3c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ba40:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ba44:	f10e 0201 	add.w	r2, lr, #1
 801ba48:	1c6e      	adds	r6, r5, #1
 801ba4a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801ba4e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801ba52:	fa1f fc8c 	uxth.w	ip, ip
 801ba56:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ba5a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ba5e:	ea46 0e0e 	orr.w	lr, r6, lr
 801ba62:	f10c 0601 	add.w	r6, ip, #1
 801ba66:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ba6a:	0976      	lsrs	r6, r6, #5
 801ba6c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ba70:	9a02      	ldr	r2, [sp, #8]
 801ba72:	ea4e 0e06 	orr.w	lr, lr, r6
 801ba76:	f824 e002 	strh.w	lr, [r4, r2]
 801ba7a:	e7b3      	b.n	801b9e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba7c:	f04f 0800 	mov.w	r8, #0
 801ba80:	eba3 0208 	sub.w	r2, r3, r8
 801ba84:	2a00      	cmp	r2, #0
 801ba86:	f77f af36 	ble.w	801b8f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ba8a:	9e00      	ldr	r6, [sp, #0]
 801ba8c:	1402      	asrs	r2, r0, #16
 801ba8e:	140d      	asrs	r5, r1, #16
 801ba90:	fb06 2505 	mla	r5, r6, r5, r2
 801ba94:	086a      	lsrs	r2, r5, #1
 801ba96:	9e01      	ldr	r6, [sp, #4]
 801ba98:	5cb2      	ldrb	r2, [r6, r2]
 801ba9a:	07ed      	lsls	r5, r5, #31
 801ba9c:	bf54      	ite	pl
 801ba9e:	f002 020f 	andpl.w	r2, r2, #15
 801baa2:	1112      	asrmi	r2, r2, #4
 801baa4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801baa8:	b2d2      	uxtb	r2, r2
 801baaa:	b1c2      	cbz	r2, 801bade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801baac:	9d04      	ldr	r5, [sp, #16]
 801baae:	436a      	muls	r2, r5
 801bab0:	1c55      	adds	r5, r2, #1
 801bab2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bab6:	4d2e      	ldr	r5, [pc, #184]	; (801bb70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bab8:	1212      	asrs	r2, r2, #8
 801baba:	682e      	ldr	r6, [r5, #0]
 801babc:	2aff      	cmp	r2, #255	; 0xff
 801babe:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801bac2:	d113      	bne.n	801baec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801bac4:	0972      	lsrs	r2, r6, #5
 801bac6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801baca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bace:	f025 0507 	bic.w	r5, r5, #7
 801bad2:	4315      	orrs	r5, r2
 801bad4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801bad8:	4335      	orrs	r5, r6
 801bada:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801bade:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bae0:	4410      	add	r0, r2
 801bae2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bae4:	f108 0801 	add.w	r8, r8, #1
 801bae8:	4411      	add	r1, r2
 801baea:	e7c9      	b.n	801ba80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801baec:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801baf0:	fa1f fa82 	uxth.w	sl, r2
 801baf4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801baf8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801bafc:	43d2      	mvns	r2, r2
 801bafe:	b2d2      	uxtb	r2, r2
 801bb00:	fb17 f70a 	smulbb	r7, r7, sl
 801bb04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bb08:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bb0c:	b2f6      	uxtb	r6, r6
 801bb0e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bb12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bb16:	fa5f fe8e 	uxtb.w	lr, lr
 801bb1a:	fb16 f60a 	smulbb	r6, r6, sl
 801bb1e:	fb0e 6602 	mla	r6, lr, r2, r6
 801bb22:	b2ed      	uxtb	r5, r5
 801bb24:	fa1f fc8c 	uxth.w	ip, ip
 801bb28:	fb15 f50a 	smulbb	r5, r5, sl
 801bb2c:	b2b6      	uxth	r6, r6
 801bb2e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bb32:	fb07 5702 	mla	r7, r7, r2, r5
 801bb36:	f10c 0201 	add.w	r2, ip, #1
 801bb3a:	1c75      	adds	r5, r6, #1
 801bb3c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bb40:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bb44:	b2bf      	uxth	r7, r7
 801bb46:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bb4a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bb4e:	ea45 0c0c 	orr.w	ip, r5, ip
 801bb52:	1c7d      	adds	r5, r7, #1
 801bb54:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801bb58:	096d      	lsrs	r5, r5, #5
 801bb5a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bb5e:	ea4c 0c05 	orr.w	ip, ip, r5
 801bb62:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801bb66:	e7ba      	b.n	801bade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bb68:	b007      	add	sp, #28
 801bb6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb6e:	bf00      	nop
 801bb70:	200132cc 	.word	0x200132cc

0801bb74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb78:	b087      	sub	sp, #28
 801bb7a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801be88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bb7e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bb80:	9205      	str	r2, [sp, #20]
 801bb82:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bb86:	9101      	str	r1, [sp, #4]
 801bb88:	6841      	ldr	r1, [r0, #4]
 801bb8a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801bb8e:	fb01 2404 	mla	r4, r1, r4, r2
 801bb92:	6802      	ldr	r2, [r0, #0]
 801bb94:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bb98:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bb9c:	3201      	adds	r2, #1
 801bb9e:	f022 0201 	bic.w	r2, r2, #1
 801bba2:	9202      	str	r2, [sp, #8]
 801bba4:	f8db 2000 	ldr.w	r2, [fp]
 801bba8:	9203      	str	r2, [sp, #12]
 801bbaa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bbae:	9a01      	ldr	r2, [sp, #4]
 801bbb0:	2a00      	cmp	r2, #0
 801bbb2:	dc03      	bgt.n	801bbbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bbb4:	9a05      	ldr	r2, [sp, #20]
 801bbb6:	2a00      	cmp	r2, #0
 801bbb8:	f340 8162 	ble.w	801be80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bbbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bbbe:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801bbc2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801bbc6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bbca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bbcc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bbd0:	2b00      	cmp	r3, #0
 801bbd2:	dd0e      	ble.n	801bbf2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bbd4:	1402      	asrs	r2, r0, #16
 801bbd6:	d405      	bmi.n	801bbe4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bbd8:	42ba      	cmp	r2, r7
 801bbda:	da03      	bge.n	801bbe4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bbdc:	140a      	asrs	r2, r1, #16
 801bbde:	d401      	bmi.n	801bbe4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bbe0:	42b2      	cmp	r2, r6
 801bbe2:	db07      	blt.n	801bbf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bbe4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bbe6:	4410      	add	r0, r2
 801bbe8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bbea:	3b01      	subs	r3, #1
 801bbec:	4411      	add	r1, r2
 801bbee:	3402      	adds	r4, #2
 801bbf0:	e7ee      	b.n	801bbd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bbf2:	d017      	beq.n	801bc24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801bbf4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bbf6:	1e5a      	subs	r2, r3, #1
 801bbf8:	fb05 0502 	mla	r5, r5, r2, r0
 801bbfc:	142d      	asrs	r5, r5, #16
 801bbfe:	d409      	bmi.n	801bc14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bc00:	42bd      	cmp	r5, r7
 801bc02:	da07      	bge.n	801bc14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bc04:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bc06:	fb05 1202 	mla	r2, r5, r2, r1
 801bc0a:	1412      	asrs	r2, r2, #16
 801bc0c:	d402      	bmi.n	801bc14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bc0e:	42b2      	cmp	r2, r6
 801bc10:	f2c0 80c3 	blt.w	801bd9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801bc14:	2500      	movs	r5, #0
 801bc16:	195a      	adds	r2, r3, r5
 801bc18:	2a00      	cmp	r2, #0
 801bc1a:	dc3f      	bgt.n	801bc9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bc1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bc20:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bc24:	9b01      	ldr	r3, [sp, #4]
 801bc26:	2b00      	cmp	r3, #0
 801bc28:	f340 812a 	ble.w	801be80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bc2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bc30:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bc34:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bc38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bc3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bc42:	eeb0 6a62 	vmov.f32	s12, s5
 801bc46:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bc4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bc52:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bc56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bc5a:	eeb0 6a43 	vmov.f32	s12, s6
 801bc5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bc62:	ee12 2a90 	vmov	r2, s5
 801bc66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc6e:	ee13 2a10 	vmov	r2, s6
 801bc72:	9313      	str	r3, [sp, #76]	; 0x4c
 801bc74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc76:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc7a:	9314      	str	r3, [sp, #80]	; 0x50
 801bc7c:	9b01      	ldr	r3, [sp, #4]
 801bc7e:	9a05      	ldr	r2, [sp, #20]
 801bc80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc84:	3b01      	subs	r3, #1
 801bc86:	9301      	str	r3, [sp, #4]
 801bc88:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bc8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc8e:	eeb0 3a67 	vmov.f32	s6, s15
 801bc92:	bf08      	it	eq
 801bc94:	4613      	moveq	r3, r2
 801bc96:	eef0 2a47 	vmov.f32	s5, s14
 801bc9a:	e788      	b.n	801bbae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bc9c:	1406      	asrs	r6, r0, #16
 801bc9e:	d42c      	bmi.n	801bcfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bca0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bca4:	42b2      	cmp	r2, r6
 801bca6:	dd28      	ble.n	801bcfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bca8:	140f      	asrs	r7, r1, #16
 801bcaa:	d426      	bmi.n	801bcfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bcac:	f8db 200c 	ldr.w	r2, [fp, #12]
 801bcb0:	42ba      	cmp	r2, r7
 801bcb2:	dd22      	ble.n	801bcfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bcb4:	9a02      	ldr	r2, [sp, #8]
 801bcb6:	fb07 6602 	mla	r6, r7, r2, r6
 801bcba:	0872      	lsrs	r2, r6, #1
 801bcbc:	9f03      	ldr	r7, [sp, #12]
 801bcbe:	5cba      	ldrb	r2, [r7, r2]
 801bcc0:	07f6      	lsls	r6, r6, #31
 801bcc2:	bf54      	ite	pl
 801bcc4:	f002 020f 	andpl.w	r2, r2, #15
 801bcc8:	1112      	asrmi	r2, r2, #4
 801bcca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bcce:	b2d2      	uxtb	r2, r2
 801bcd0:	2aff      	cmp	r2, #255	; 0xff
 801bcd2:	d118      	bne.n	801bd06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801bcd4:	f8d8 2000 	ldr.w	r2, [r8]
 801bcd8:	f06f 0601 	mvn.w	r6, #1
 801bcdc:	fb06 f705 	mul.w	r7, r6, r5
 801bce0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bce4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801bce8:	0956      	lsrs	r6, r2, #5
 801bcea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bcee:	ea4c 0606 	orr.w	r6, ip, r6
 801bcf2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bcf6:	4316      	orrs	r6, r2
 801bcf8:	53e6      	strh	r6, [r4, r7]
 801bcfa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bcfc:	4410      	add	r0, r2
 801bcfe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bd00:	3d01      	subs	r5, #1
 801bd02:	4411      	add	r1, r2
 801bd04:	e787      	b.n	801bc16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bd06:	2a00      	cmp	r2, #0
 801bd08:	d0f7      	beq.n	801bcfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bd0a:	f06f 0601 	mvn.w	r6, #1
 801bd0e:	436e      	muls	r6, r5
 801bd10:	f8d8 c000 	ldr.w	ip, [r8]
 801bd14:	f834 e006 	ldrh.w	lr, [r4, r6]
 801bd18:	9604      	str	r6, [sp, #16]
 801bd1a:	fa1f f982 	uxth.w	r9, r2
 801bd1e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801bd22:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801bd26:	43d2      	mvns	r2, r2
 801bd28:	b2d2      	uxtb	r2, r2
 801bd2a:	fb16 f609 	smulbb	r6, r6, r9
 801bd2e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bd32:	fb07 6702 	mla	r7, r7, r2, r6
 801bd36:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801bd3a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bd3e:	fa5f fc8c 	uxtb.w	ip, ip
 801bd42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bd46:	fa5f fe8e 	uxtb.w	lr, lr
 801bd4a:	fb1c fc09 	smulbb	ip, ip, r9
 801bd4e:	fb0e cc02 	mla	ip, lr, r2, ip
 801bd52:	b2bf      	uxth	r7, r7
 801bd54:	fb1a fa09 	smulbb	sl, sl, r9
 801bd58:	fa1f fc8c 	uxth.w	ip, ip
 801bd5c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bd60:	fb06 a602 	mla	r6, r6, r2, sl
 801bd64:	1c7a      	adds	r2, r7, #1
 801bd66:	f10c 0a01 	add.w	sl, ip, #1
 801bd6a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bd6e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801bd72:	b2b6      	uxth	r6, r6
 801bd74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bd78:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bd7c:	ea4a 0707 	orr.w	r7, sl, r7
 801bd80:	f106 0a01 	add.w	sl, r6, #1
 801bd84:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bd88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bd8c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bd90:	9a04      	ldr	r2, [sp, #16]
 801bd92:	ea47 070a 	orr.w	r7, r7, sl
 801bd96:	52a7      	strh	r7, [r4, r2]
 801bd98:	e7af      	b.n	801bcfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bd9a:	f04f 0e00 	mov.w	lr, #0
 801bd9e:	eba3 020e 	sub.w	r2, r3, lr
 801bda2:	2a00      	cmp	r2, #0
 801bda4:	f77f af3a 	ble.w	801bc1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bda8:	9e02      	ldr	r6, [sp, #8]
 801bdaa:	1402      	asrs	r2, r0, #16
 801bdac:	140d      	asrs	r5, r1, #16
 801bdae:	fb06 2505 	mla	r5, r6, r5, r2
 801bdb2:	086a      	lsrs	r2, r5, #1
 801bdb4:	9e03      	ldr	r6, [sp, #12]
 801bdb6:	5cb2      	ldrb	r2, [r6, r2]
 801bdb8:	07ed      	lsls	r5, r5, #31
 801bdba:	bf54      	ite	pl
 801bdbc:	f002 020f 	andpl.w	r2, r2, #15
 801bdc0:	1112      	asrmi	r2, r2, #4
 801bdc2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bdc6:	b2d2      	uxtb	r2, r2
 801bdc8:	2aff      	cmp	r2, #255	; 0xff
 801bdca:	d115      	bne.n	801bdf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bdcc:	f8d8 5000 	ldr.w	r5, [r8]
 801bdd0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bdd4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bdd8:	096a      	lsrs	r2, r5, #5
 801bdda:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bdde:	4332      	orrs	r2, r6
 801bde0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bde4:	432a      	orrs	r2, r5
 801bde6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bdea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bdec:	4410      	add	r0, r2
 801bdee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bdf0:	f10e 0e01 	add.w	lr, lr, #1
 801bdf4:	4411      	add	r1, r2
 801bdf6:	e7d2      	b.n	801bd9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bdf8:	2a00      	cmp	r2, #0
 801bdfa:	d0f6      	beq.n	801bdea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bdfc:	f8d8 7000 	ldr.w	r7, [r8]
 801be00:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801be04:	fa1f f982 	uxth.w	r9, r2
 801be08:	ea4f 262c 	mov.w	r6, ip, asr #8
 801be0c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801be10:	43d2      	mvns	r2, r2
 801be12:	b2d2      	uxtb	r2, r2
 801be14:	fb15 f509 	smulbb	r5, r5, r9
 801be18:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801be1c:	fb06 5602 	mla	r6, r6, r2, r5
 801be20:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801be24:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801be28:	b2ff      	uxtb	r7, r7
 801be2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801be2e:	fa5f fc8c 	uxtb.w	ip, ip
 801be32:	fb17 f709 	smulbb	r7, r7, r9
 801be36:	fb0c 7702 	mla	r7, ip, r2, r7
 801be3a:	b2b6      	uxth	r6, r6
 801be3c:	fb1a fa09 	smulbb	sl, sl, r9
 801be40:	b2bf      	uxth	r7, r7
 801be42:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801be46:	fb05 a502 	mla	r5, r5, r2, sl
 801be4a:	1c72      	adds	r2, r6, #1
 801be4c:	f107 0a01 	add.w	sl, r7, #1
 801be50:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801be54:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801be58:	b2ad      	uxth	r5, r5
 801be5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801be5e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801be62:	ea4a 0606 	orr.w	r6, sl, r6
 801be66:	f105 0a01 	add.w	sl, r5, #1
 801be6a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801be6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801be72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801be76:	ea46 060a 	orr.w	r6, r6, sl
 801be7a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801be7e:	e7b4      	b.n	801bdea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801be80:	b007      	add	sp, #28
 801be82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be86:	bf00      	nop
 801be88:	200132cc 	.word	0x200132cc

0801be8c <_ZN8touchgfx8LCD16bppD1Ev>:
 801be8c:	4770      	bx	lr

0801be8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801be8e:	4770      	bx	lr

0801be90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801be90:	4770      	bx	lr

0801be92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801be92:	4770      	bx	lr

0801be94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801be94:	4770      	bx	lr

0801be96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801be96:	4770      	bx	lr

0801be98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801be98:	4770      	bx	lr

0801be9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801be9a:	4770      	bx	lr

0801be9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801be9c:	4770      	bx	lr

0801be9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801be9e:	4770      	bx	lr

0801bea0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bea0:	4770      	bx	lr

0801bea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bea2:	4770      	bx	lr

0801bea4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bea4:	4770      	bx	lr

0801bea6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bea6:	4770      	bx	lr

0801bea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bea8:	4770      	bx	lr

0801beaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801beaa:	4770      	bx	lr

0801beac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801beac:	4770      	bx	lr

0801beae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801beae:	4770      	bx	lr

0801beb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801beb0:	4770      	bx	lr

0801beb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801beb2:	4770      	bx	lr

0801beb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801beb4:	4770      	bx	lr

0801beb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801beb6:	4770      	bx	lr

0801beb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801beb8:	4770      	bx	lr

0801beba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801beba:	4770      	bx	lr

0801bebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bebc:	4770      	bx	lr

0801bebe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801bebe:	4770      	bx	lr

0801bec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bec0:	4770      	bx	lr

0801bec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801bec2:	4770      	bx	lr

0801bec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bec4:	4770      	bx	lr

0801bec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bec6:	4770      	bx	lr

0801bec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bec8:	4770      	bx	lr

0801beca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801beca:	4770      	bx	lr

0801becc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801becc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bed0:	b088      	sub	sp, #32
 801bed2:	ac08      	add	r4, sp, #32
 801bed4:	4606      	mov	r6, r0
 801bed6:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801beda:	4620      	mov	r0, r4
 801bedc:	4688      	mov	r8, r1
 801bede:	4691      	mov	r9, r2
 801bee0:	f7fd fc62 	bl	80197a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801bee4:	6833      	ldr	r3, [r6, #0]
 801bee6:	4605      	mov	r5, r0
 801bee8:	4620      	mov	r0, r4
 801beea:	699f      	ldr	r7, [r3, #24]
 801beec:	f7fd fb70 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801bef0:	4682      	mov	sl, r0
 801bef2:	4620      	mov	r0, r4
 801bef4:	f7fd fba0 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801bef8:	9500      	str	r5, [sp, #0]
 801befa:	e9cd a001 	strd	sl, r0, [sp, #4]
 801befe:	464b      	mov	r3, r9
 801bf00:	a806      	add	r0, sp, #24
 801bf02:	4642      	mov	r2, r8
 801bf04:	4631      	mov	r1, r6
 801bf06:	47b8      	blx	r7
 801bf08:	4628      	mov	r0, r5
 801bf0a:	b008      	add	sp, #32
 801bf0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801bf10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801bf10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bf14:	2300      	movs	r3, #0
 801bf16:	9300      	str	r3, [sp, #0]
 801bf18:	4b3d      	ldr	r3, [pc, #244]	; (801c010 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801bf1a:	781b      	ldrb	r3, [r3, #0]
 801bf1c:	2b00      	cmp	r3, #0
 801bf1e:	d137      	bne.n	801bf90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801bf20:	4a3c      	ldr	r2, [pc, #240]	; (801c014 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bf22:	f9b2 2000 	ldrsh.w	r2, [r2]
 801bf26:	f8ad 2004 	strh.w	r2, [sp, #4]
 801bf2a:	2b00      	cmp	r3, #0
 801bf2c:	d132      	bne.n	801bf94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801bf2e:	4b3a      	ldr	r3, [pc, #232]	; (801c018 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bf30:	f9b3 3000 	ldrsh.w	r3, [r3]
 801bf34:	6808      	ldr	r0, [r1, #0]
 801bf36:	6849      	ldr	r1, [r1, #4]
 801bf38:	f8ad 3006 	strh.w	r3, [sp, #6]
 801bf3c:	ac02      	add	r4, sp, #8
 801bf3e:	ab02      	add	r3, sp, #8
 801bf40:	c303      	stmia	r3!, {r0, r1}
 801bf42:	4669      	mov	r1, sp
 801bf44:	4620      	mov	r0, r4
 801bf46:	f7f9 fd83 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bf4a:	4668      	mov	r0, sp
 801bf4c:	f7f9 fd3c 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bf50:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801bf54:	f8bd 2000 	ldrh.w	r2, [sp]
 801bf58:	4d30      	ldr	r5, [pc, #192]	; (801c01c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801bf5a:	4413      	add	r3, r2
 801bf5c:	f8ad 3008 	strh.w	r3, [sp, #8]
 801bf60:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801bf64:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801bf68:	6828      	ldr	r0, [r5, #0]
 801bf6a:	4413      	add	r3, r2
 801bf6c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801bf70:	6803      	ldr	r3, [r0, #0]
 801bf72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bf74:	4798      	blx	r3
 801bf76:	f010 0f01 	tst.w	r0, #1
 801bf7a:	462f      	mov	r7, r5
 801bf7c:	d00c      	beq.n	801bf98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801bf7e:	6828      	ldr	r0, [r5, #0]
 801bf80:	6803      	ldr	r3, [r0, #0]
 801bf82:	e894 0006 	ldmia.w	r4, {r1, r2}
 801bf86:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801bf88:	4798      	blx	r3
 801bf8a:	b004      	add	sp, #16
 801bf8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bf90:	4a21      	ldr	r2, [pc, #132]	; (801c018 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bf92:	e7c6      	b.n	801bf22 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801bf94:	4b1f      	ldr	r3, [pc, #124]	; (801c014 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bf96:	e7cb      	b.n	801bf30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801bf98:	6838      	ldr	r0, [r7, #0]
 801bf9a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801bf9e:	6803      	ldr	r3, [r0, #0]
 801bfa0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801bfa4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801bfa6:	4798      	blx	r3
 801bfa8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801bfac:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bfb0:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801bfb4:	fb16 3602 	smlabb	r6, r6, r2, r3
 801bfb8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801bfbc:	6838      	ldr	r0, [r7, #0]
 801bfbe:	6803      	ldr	r3, [r0, #0]
 801bfc0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bfc2:	4798      	blx	r3
 801bfc4:	4a13      	ldr	r2, [pc, #76]	; (801c014 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bfc6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801bfca:	8813      	ldrh	r3, [r2, #0]
 801bfcc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801bfd0:	fb03 1404 	mla	r4, r3, r4, r1
 801bfd4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801bfd8:	435d      	muls	r5, r3
 801bfda:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bfde:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801bfe2:	4691      	mov	r9, r2
 801bfe4:	6838      	ldr	r0, [r7, #0]
 801bfe6:	42ac      	cmp	r4, r5
 801bfe8:	6803      	ldr	r3, [r0, #0]
 801bfea:	d20e      	bcs.n	801c00a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801bfec:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801bff0:	4632      	mov	r2, r6
 801bff2:	4643      	mov	r3, r8
 801bff4:	4621      	mov	r1, r4
 801bff6:	47d0      	blx	sl
 801bff8:	f8b9 3000 	ldrh.w	r3, [r9]
 801bffc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c000:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801c004:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c008:	e7ec      	b.n	801bfe4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801c00a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c00c:	4798      	blx	r3
 801c00e:	e7bc      	b.n	801bf8a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c010:	200132b4 	.word	0x200132b4
 801c014:	200132b6 	.word	0x200132b6
 801c018:	200132b8 	.word	0x200132b8
 801c01c:	200132bc 	.word	0x200132bc

0801c020 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c024:	b08b      	sub	sp, #44	; 0x2c
 801c026:	460f      	mov	r7, r1
 801c028:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801c02c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801c030:	4616      	mov	r6, r2
 801c032:	f1bb 0f00 	cmp.w	fp, #0
 801c036:	d04a      	beq.n	801c0ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c038:	6810      	ldr	r0, [r2, #0]
 801c03a:	6851      	ldr	r1, [r2, #4]
 801c03c:	ad06      	add	r5, sp, #24
 801c03e:	c503      	stmia	r5!, {r0, r1}
 801c040:	6818      	ldr	r0, [r3, #0]
 801c042:	6859      	ldr	r1, [r3, #4]
 801c044:	ad08      	add	r5, sp, #32
 801c046:	c503      	stmia	r5!, {r0, r1}
 801c048:	a806      	add	r0, sp, #24
 801c04a:	f7f9 fcbd 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c04e:	4631      	mov	r1, r6
 801c050:	a808      	add	r0, sp, #32
 801c052:	f7f9 fcfd 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c056:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c05a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801c05e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c062:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801c066:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c06a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c06e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c072:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c076:	4f5f      	ldr	r7, [pc, #380]	; (801c1f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c078:	440a      	add	r2, r1
 801c07a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c07e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c082:	6838      	ldr	r0, [r7, #0]
 801c084:	4413      	add	r3, r2
 801c086:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801c08a:	6803      	ldr	r3, [r0, #0]
 801c08c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c08e:	4798      	blx	r3
 801c090:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c094:	46b9      	mov	r9, r7
 801c096:	d11d      	bne.n	801c0d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801c098:	b9fc      	cbnz	r4, 801c0da <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c09a:	f010 0f01 	tst.w	r0, #1
 801c09e:	d01c      	beq.n	801c0da <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c0a0:	f8d9 0000 	ldr.w	r0, [r9]
 801c0a4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c0a8:	6801      	ldr	r1, [r0, #0]
 801c0aa:	f8cd b00c 	str.w	fp, [sp, #12]
 801c0ae:	2700      	movs	r7, #0
 801c0b0:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c0b4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c0b8:	9402      	str	r4, [sp, #8]
 801c0ba:	b2ad      	uxth	r5, r5
 801c0bc:	fa1f f488 	uxth.w	r4, r8
 801c0c0:	9501      	str	r5, [sp, #4]
 801c0c2:	9400      	str	r4, [sp, #0]
 801c0c4:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c0c6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c0ca:	4631      	mov	r1, r6
 801c0cc:	47a0      	blx	r4
 801c0ce:	b00b      	add	sp, #44	; 0x2c
 801c0d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0d4:	f010 0f04 	tst.w	r0, #4
 801c0d8:	e7e1      	b.n	801c09e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801c0da:	f8d9 0000 	ldr.w	r0, [r9]
 801c0de:	6803      	ldr	r3, [r0, #0]
 801c0e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c0e2:	4798      	blx	r3
 801c0e4:	4b44      	ldr	r3, [pc, #272]	; (801c1f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c0e6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c0ea:	881a      	ldrh	r2, [r3, #0]
 801c0ec:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c0f0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c0f4:	fb02 1404 	mla	r4, r2, r4, r1
 801c0f8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c0fc:	469a      	mov	sl, r3
 801c0fe:	fb05 f502 	mul.w	r5, r5, r2
 801c102:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c106:	d059      	beq.n	801c1bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c108:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c10c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c110:	fa1f f28b 	uxth.w	r2, fp
 801c114:	fa1f f989 	uxth.w	r9, r9
 801c118:	469e      	mov	lr, r3
 801c11a:	42ac      	cmp	r4, r5
 801c11c:	d264      	bcs.n	801c1e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c11e:	eb04 0a07 	add.w	sl, r4, r7
 801c122:	4554      	cmp	r4, sl
 801c124:	d23d      	bcs.n	801c1a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c126:	8821      	ldrh	r1, [r4, #0]
 801c128:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c12c:	1208      	asrs	r0, r1, #8
 801c12e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c132:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c136:	fb10 f009 	smulbb	r0, r0, r9
 801c13a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c13e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c142:	00c9      	lsls	r1, r1, #3
 801c144:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c148:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c14c:	10d8      	asrs	r0, r3, #3
 801c14e:	b2c9      	uxtb	r1, r1
 801c150:	00db      	lsls	r3, r3, #3
 801c152:	fa1f fc8c 	uxth.w	ip, ip
 801c156:	fb1b fb09 	smulbb	fp, fp, r9
 801c15a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c15e:	b2db      	uxtb	r3, r3
 801c160:	fb11 f109 	smulbb	r1, r1, r9
 801c164:	fb00 b002 	mla	r0, r0, r2, fp
 801c168:	fb03 1302 	mla	r3, r3, r2, r1
 801c16c:	f10c 0b01 	add.w	fp, ip, #1
 801c170:	b29b      	uxth	r3, r3
 801c172:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c176:	b280      	uxth	r0, r0
 801c178:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c17c:	f103 0c01 	add.w	ip, r3, #1
 801c180:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c184:	1c43      	adds	r3, r0, #1
 801c186:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c18a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c18e:	0940      	lsrs	r0, r0, #5
 801c190:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c194:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c198:	ea4c 0c00 	orr.w	ip, ip, r0
 801c19c:	f824 cb02 	strh.w	ip, [r4], #2
 801c1a0:	e7bf      	b.n	801c122 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c1a2:	f8be 3000 	ldrh.w	r3, [lr]
 801c1a6:	eba3 0308 	sub.w	r3, r3, r8
 801c1aa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c1ae:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c1b2:	eba3 0308 	sub.w	r3, r3, r8
 801c1b6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c1ba:	e7ae      	b.n	801c11a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c1bc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c1c0:	f8d9 0000 	ldr.w	r0, [r9]
 801c1c4:	42ac      	cmp	r4, r5
 801c1c6:	6803      	ldr	r3, [r0, #0]
 801c1c8:	d20e      	bcs.n	801c1e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c1ca:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c1ce:	4632      	mov	r2, r6
 801c1d0:	463b      	mov	r3, r7
 801c1d2:	4621      	mov	r1, r4
 801c1d4:	47c0      	blx	r8
 801c1d6:	f8ba 3000 	ldrh.w	r3, [sl]
 801c1da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c1de:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c1e2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c1e6:	e7eb      	b.n	801c1c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c1e8:	4b02      	ldr	r3, [pc, #8]	; (801c1f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c1ea:	6818      	ldr	r0, [r3, #0]
 801c1ec:	6803      	ldr	r3, [r0, #0]
 801c1ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c1f0:	4798      	blx	r3
 801c1f2:	e76c      	b.n	801c0ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c1f4:	200132bc 	.word	0x200132bc
 801c1f8:	200132b6 	.word	0x200132b6

0801c1fc <_ZN8touchgfx8LCD16bppD0Ev>:
 801c1fc:	b510      	push	{r4, lr}
 801c1fe:	2184      	movs	r1, #132	; 0x84
 801c200:	4604      	mov	r4, r0
 801c202:	f00d fe4a 	bl	8029e9a <_ZdlPvj>
 801c206:	4620      	mov	r0, r4
 801c208:	bd10      	pop	{r4, pc}

0801c20a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c20a:	b510      	push	{r4, lr}
 801c20c:	2104      	movs	r1, #4
 801c20e:	4604      	mov	r4, r0
 801c210:	f00d fe43 	bl	8029e9a <_ZdlPvj>
 801c214:	4620      	mov	r0, r4
 801c216:	bd10      	pop	{r4, pc}

0801c218 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c218:	b510      	push	{r4, lr}
 801c21a:	2104      	movs	r1, #4
 801c21c:	4604      	mov	r4, r0
 801c21e:	f00d fe3c 	bl	8029e9a <_ZdlPvj>
 801c222:	4620      	mov	r0, r4
 801c224:	bd10      	pop	{r4, pc}

0801c226 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c226:	b510      	push	{r4, lr}
 801c228:	f640 0144 	movw	r1, #2116	; 0x844
 801c22c:	4604      	mov	r4, r0
 801c22e:	f00d fe34 	bl	8029e9a <_ZdlPvj>
 801c232:	4620      	mov	r0, r4
 801c234:	bd10      	pop	{r4, pc}

0801c236 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c236:	b510      	push	{r4, lr}
 801c238:	2104      	movs	r1, #4
 801c23a:	4604      	mov	r4, r0
 801c23c:	f00d fe2d 	bl	8029e9a <_ZdlPvj>
 801c240:	4620      	mov	r0, r4
 801c242:	bd10      	pop	{r4, pc}

0801c244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c244:	b510      	push	{r4, lr}
 801c246:	2104      	movs	r1, #4
 801c248:	4604      	mov	r4, r0
 801c24a:	f00d fe26 	bl	8029e9a <_ZdlPvj>
 801c24e:	4620      	mov	r0, r4
 801c250:	bd10      	pop	{r4, pc}

0801c252 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c252:	b510      	push	{r4, lr}
 801c254:	2104      	movs	r1, #4
 801c256:	4604      	mov	r4, r0
 801c258:	f00d fe1f 	bl	8029e9a <_ZdlPvj>
 801c25c:	4620      	mov	r0, r4
 801c25e:	bd10      	pop	{r4, pc}

0801c260 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c260:	b510      	push	{r4, lr}
 801c262:	2104      	movs	r1, #4
 801c264:	4604      	mov	r4, r0
 801c266:	f00d fe18 	bl	8029e9a <_ZdlPvj>
 801c26a:	4620      	mov	r0, r4
 801c26c:	bd10      	pop	{r4, pc}

0801c26e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c26e:	b510      	push	{r4, lr}
 801c270:	2104      	movs	r1, #4
 801c272:	4604      	mov	r4, r0
 801c274:	f00d fe11 	bl	8029e9a <_ZdlPvj>
 801c278:	4620      	mov	r0, r4
 801c27a:	bd10      	pop	{r4, pc}

0801c27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c27c:	b510      	push	{r4, lr}
 801c27e:	2104      	movs	r1, #4
 801c280:	4604      	mov	r4, r0
 801c282:	f00d fe0a 	bl	8029e9a <_ZdlPvj>
 801c286:	4620      	mov	r0, r4
 801c288:	bd10      	pop	{r4, pc}

0801c28a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c28a:	b510      	push	{r4, lr}
 801c28c:	2104      	movs	r1, #4
 801c28e:	4604      	mov	r4, r0
 801c290:	f00d fe03 	bl	8029e9a <_ZdlPvj>
 801c294:	4620      	mov	r0, r4
 801c296:	bd10      	pop	{r4, pc}

0801c298 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c298:	b510      	push	{r4, lr}
 801c29a:	2104      	movs	r1, #4
 801c29c:	4604      	mov	r4, r0
 801c29e:	f00d fdfc 	bl	8029e9a <_ZdlPvj>
 801c2a2:	4620      	mov	r0, r4
 801c2a4:	bd10      	pop	{r4, pc}

0801c2a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c2a6:	b510      	push	{r4, lr}
 801c2a8:	2104      	movs	r1, #4
 801c2aa:	4604      	mov	r4, r0
 801c2ac:	f00d fdf5 	bl	8029e9a <_ZdlPvj>
 801c2b0:	4620      	mov	r0, r4
 801c2b2:	bd10      	pop	{r4, pc}

0801c2b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c2b4:	b510      	push	{r4, lr}
 801c2b6:	2104      	movs	r1, #4
 801c2b8:	4604      	mov	r4, r0
 801c2ba:	f00d fdee 	bl	8029e9a <_ZdlPvj>
 801c2be:	4620      	mov	r0, r4
 801c2c0:	bd10      	pop	{r4, pc}

0801c2c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c2c2:	b510      	push	{r4, lr}
 801c2c4:	2104      	movs	r1, #4
 801c2c6:	4604      	mov	r4, r0
 801c2c8:	f00d fde7 	bl	8029e9a <_ZdlPvj>
 801c2cc:	4620      	mov	r0, r4
 801c2ce:	bd10      	pop	{r4, pc}

0801c2d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c2d0:	b510      	push	{r4, lr}
 801c2d2:	2104      	movs	r1, #4
 801c2d4:	4604      	mov	r4, r0
 801c2d6:	f00d fde0 	bl	8029e9a <_ZdlPvj>
 801c2da:	4620      	mov	r0, r4
 801c2dc:	bd10      	pop	{r4, pc}

0801c2de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c2de:	b510      	push	{r4, lr}
 801c2e0:	2104      	movs	r1, #4
 801c2e2:	4604      	mov	r4, r0
 801c2e4:	f00d fdd9 	bl	8029e9a <_ZdlPvj>
 801c2e8:	4620      	mov	r0, r4
 801c2ea:	bd10      	pop	{r4, pc}

0801c2ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c2ec:	b510      	push	{r4, lr}
 801c2ee:	2104      	movs	r1, #4
 801c2f0:	4604      	mov	r4, r0
 801c2f2:	f00d fdd2 	bl	8029e9a <_ZdlPvj>
 801c2f6:	4620      	mov	r0, r4
 801c2f8:	bd10      	pop	{r4, pc}

0801c2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c2fa:	b510      	push	{r4, lr}
 801c2fc:	2104      	movs	r1, #4
 801c2fe:	4604      	mov	r4, r0
 801c300:	f00d fdcb 	bl	8029e9a <_ZdlPvj>
 801c304:	4620      	mov	r0, r4
 801c306:	bd10      	pop	{r4, pc}

0801c308 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c308:	b510      	push	{r4, lr}
 801c30a:	2104      	movs	r1, #4
 801c30c:	4604      	mov	r4, r0
 801c30e:	f00d fdc4 	bl	8029e9a <_ZdlPvj>
 801c312:	4620      	mov	r0, r4
 801c314:	bd10      	pop	{r4, pc}

0801c316 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c316:	b510      	push	{r4, lr}
 801c318:	2104      	movs	r1, #4
 801c31a:	4604      	mov	r4, r0
 801c31c:	f00d fdbd 	bl	8029e9a <_ZdlPvj>
 801c320:	4620      	mov	r0, r4
 801c322:	bd10      	pop	{r4, pc}

0801c324 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c324:	b510      	push	{r4, lr}
 801c326:	2104      	movs	r1, #4
 801c328:	4604      	mov	r4, r0
 801c32a:	f00d fdb6 	bl	8029e9a <_ZdlPvj>
 801c32e:	4620      	mov	r0, r4
 801c330:	bd10      	pop	{r4, pc}

0801c332 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c332:	b510      	push	{r4, lr}
 801c334:	2104      	movs	r1, #4
 801c336:	4604      	mov	r4, r0
 801c338:	f00d fdaf 	bl	8029e9a <_ZdlPvj>
 801c33c:	4620      	mov	r0, r4
 801c33e:	bd10      	pop	{r4, pc}

0801c340 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c340:	b510      	push	{r4, lr}
 801c342:	2104      	movs	r1, #4
 801c344:	4604      	mov	r4, r0
 801c346:	f00d fda8 	bl	8029e9a <_ZdlPvj>
 801c34a:	4620      	mov	r0, r4
 801c34c:	bd10      	pop	{r4, pc}

0801c34e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c34e:	b510      	push	{r4, lr}
 801c350:	2104      	movs	r1, #4
 801c352:	4604      	mov	r4, r0
 801c354:	f00d fda1 	bl	8029e9a <_ZdlPvj>
 801c358:	4620      	mov	r0, r4
 801c35a:	bd10      	pop	{r4, pc}

0801c35c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c35c:	b510      	push	{r4, lr}
 801c35e:	2104      	movs	r1, #4
 801c360:	4604      	mov	r4, r0
 801c362:	f00d fd9a 	bl	8029e9a <_ZdlPvj>
 801c366:	4620      	mov	r0, r4
 801c368:	bd10      	pop	{r4, pc}

0801c36a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c36a:	b510      	push	{r4, lr}
 801c36c:	2104      	movs	r1, #4
 801c36e:	4604      	mov	r4, r0
 801c370:	f00d fd93 	bl	8029e9a <_ZdlPvj>
 801c374:	4620      	mov	r0, r4
 801c376:	bd10      	pop	{r4, pc}

0801c378 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c378:	b510      	push	{r4, lr}
 801c37a:	2104      	movs	r1, #4
 801c37c:	4604      	mov	r4, r0
 801c37e:	f00d fd8c 	bl	8029e9a <_ZdlPvj>
 801c382:	4620      	mov	r0, r4
 801c384:	bd10      	pop	{r4, pc}

0801c386 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c386:	b510      	push	{r4, lr}
 801c388:	2104      	movs	r1, #4
 801c38a:	4604      	mov	r4, r0
 801c38c:	f00d fd85 	bl	8029e9a <_ZdlPvj>
 801c390:	4620      	mov	r0, r4
 801c392:	bd10      	pop	{r4, pc}

0801c394 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c394:	b510      	push	{r4, lr}
 801c396:	2104      	movs	r1, #4
 801c398:	4604      	mov	r4, r0
 801c39a:	f00d fd7e 	bl	8029e9a <_ZdlPvj>
 801c39e:	4620      	mov	r0, r4
 801c3a0:	bd10      	pop	{r4, pc}

0801c3a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c3a2:	b510      	push	{r4, lr}
 801c3a4:	2104      	movs	r1, #4
 801c3a6:	4604      	mov	r4, r0
 801c3a8:	f00d fd77 	bl	8029e9a <_ZdlPvj>
 801c3ac:	4620      	mov	r0, r4
 801c3ae:	bd10      	pop	{r4, pc}

0801c3b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c3b0:	b510      	push	{r4, lr}
 801c3b2:	2104      	movs	r1, #4
 801c3b4:	4604      	mov	r4, r0
 801c3b6:	f00d fd70 	bl	8029e9a <_ZdlPvj>
 801c3ba:	4620      	mov	r0, r4
 801c3bc:	bd10      	pop	{r4, pc}
	...

0801c3c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c3c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3c4:	b08f      	sub	sp, #60	; 0x3c
 801c3c6:	461c      	mov	r4, r3
 801c3c8:	9205      	str	r2, [sp, #20]
 801c3ca:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c3ce:	9100      	str	r1, [sp, #0]
 801c3d0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c3d2:	9201      	str	r2, [sp, #4]
 801c3d4:	2a00      	cmp	r2, #0
 801c3d6:	f000 8115 	beq.w	801c604 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c3da:	6820      	ldr	r0, [r4, #0]
 801c3dc:	6861      	ldr	r1, [r4, #4]
 801c3de:	aa0a      	add	r2, sp, #40	; 0x28
 801c3e0:	c203      	stmia	r2!, {r0, r1}
 801c3e2:	6818      	ldr	r0, [r3, #0]
 801c3e4:	6859      	ldr	r1, [r3, #4]
 801c3e6:	aa0c      	add	r2, sp, #48	; 0x30
 801c3e8:	c203      	stmia	r2!, {r0, r1}
 801c3ea:	a80a      	add	r0, sp, #40	; 0x28
 801c3ec:	f7f9 faec 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c3f0:	4621      	mov	r1, r4
 801c3f2:	a80c      	add	r0, sp, #48	; 0x30
 801c3f4:	f7f9 fb2c 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c3f8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c3fc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c400:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c404:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c408:	bfde      	ittt	le
 801c40a:	b2b3      	uxthle	r3, r6
 801c40c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c410:	fb92 f3f3 	sdivle	r3, r2, r3
 801c414:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c418:	bfc8      	it	gt
 801c41a:	2301      	movgt	r3, #1
 801c41c:	fb92 f1f3 	sdiv	r1, r2, r3
 801c420:	fa1f fc81 	uxth.w	ip, r1
 801c424:	fb0c 2413 	mls	r4, ip, r3, r2
 801c428:	fb14 f406 	smulbb	r4, r4, r6
 801c42c:	441d      	add	r5, r3
 801c42e:	4404      	add	r4, r0
 801c430:	4661      	mov	r1, ip
 801c432:	3d01      	subs	r5, #1
 801c434:	b2a4      	uxth	r4, r4
 801c436:	fb95 f5f3 	sdiv	r5, r5, r3
 801c43a:	b131      	cbz	r1, 801c44a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c43c:	9b05      	ldr	r3, [sp, #20]
 801c43e:	9900      	ldr	r1, [sp, #0]
 801c440:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c444:	ba1b      	rev	r3, r3
 801c446:	4419      	add	r1, r3
 801c448:	9100      	str	r1, [sp, #0]
 801c44a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c44e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c452:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c456:	4418      	add	r0, r3
 801c458:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c45c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c460:	441a      	add	r2, r3
 801c462:	4b6a      	ldr	r3, [pc, #424]	; (801c60c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c464:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c468:	6818      	ldr	r0, [r3, #0]
 801c46a:	6803      	ldr	r3, [r0, #0]
 801c46c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c46e:	4798      	blx	r3
 801c470:	4967      	ldr	r1, [pc, #412]	; (801c610 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c472:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c476:	880b      	ldrh	r3, [r1, #0]
 801c478:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c47c:	9109      	str	r1, [sp, #36]	; 0x24
 801c47e:	fb03 c202 	mla	r2, r3, r2, ip
 801c482:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c486:	4373      	muls	r3, r6
 801c488:	b2ad      	uxth	r5, r5
 801c48a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c48e:	00ad      	lsls	r5, r5, #2
 801c490:	9306      	str	r3, [sp, #24]
 801c492:	1d2b      	adds	r3, r5, #4
 801c494:	9307      	str	r3, [sp, #28]
 801c496:	9b01      	ldr	r3, [sp, #4]
 801c498:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c49c:	9103      	str	r1, [sp, #12]
 801c49e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c4a2:	2c00      	cmp	r4, #0
 801c4a4:	bf0c      	ite	eq
 801c4a6:	46c6      	moveq	lr, r8
 801c4a8:	f04f 0e00 	movne.w	lr, #0
 801c4ac:	2300      	movs	r3, #0
 801c4ae:	b292      	uxth	r2, r2
 801c4b0:	fa1f fe8e 	uxth.w	lr, lr
 801c4b4:	9302      	str	r3, [sp, #8]
 801c4b6:	9204      	str	r2, [sp, #16]
 801c4b8:	9a06      	ldr	r2, [sp, #24]
 801c4ba:	4282      	cmp	r2, r0
 801c4bc:	f240 809d 	bls.w	801c5fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c4c0:	b963      	cbnz	r3, 801c4dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c4c2:	9b00      	ldr	r3, [sp, #0]
 801c4c4:	781a      	ldrb	r2, [r3, #0]
 801c4c6:	0993      	lsrs	r3, r2, #6
 801c4c8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c4cc:	9202      	str	r2, [sp, #8]
 801c4ce:	1e5a      	subs	r2, r3, #1
 801c4d0:	2a02      	cmp	r2, #2
 801c4d2:	d815      	bhi.n	801c500 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c4d4:	9a00      	ldr	r2, [sp, #0]
 801c4d6:	3201      	adds	r2, #1
 801c4d8:	9200      	str	r2, [sp, #0]
 801c4da:	b29b      	uxth	r3, r3
 801c4dc:	b1b4      	cbz	r4, 801c50c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c4de:	429c      	cmp	r4, r3
 801c4e0:	bf95      	itete	ls
 801c4e2:	1b1c      	subls	r4, r3, r4
 801c4e4:	1ae4      	subhi	r4, r4, r3
 801c4e6:	fa1f fa84 	uxthls.w	sl, r4
 801c4ea:	b2a4      	uxthhi	r4, r4
 801c4ec:	bf87      	ittee	hi
 801c4ee:	4671      	movhi	r1, lr
 801c4f0:	f04f 0a00 	movhi.w	sl, #0
 801c4f4:	fa1f f188 	uxthls.w	r1, r8
 801c4f8:	2400      	movls	r4, #0
 801c4fa:	4653      	mov	r3, sl
 801c4fc:	468e      	mov	lr, r1
 801c4fe:	e7db      	b.n	801c4b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c500:	9a00      	ldr	r2, [sp, #0]
 801c502:	9b00      	ldr	r3, [sp, #0]
 801c504:	3202      	adds	r2, #2
 801c506:	785b      	ldrb	r3, [r3, #1]
 801c508:	9200      	str	r2, [sp, #0]
 801c50a:	e7e7      	b.n	801c4dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c50c:	2202      	movs	r2, #2
 801c50e:	4615      	mov	r5, r2
 801c510:	9907      	ldr	r1, [sp, #28]
 801c512:	9a02      	ldr	r2, [sp, #8]
 801c514:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c518:	9905      	ldr	r1, [sp, #20]
 801c51a:	4573      	cmp	r3, lr
 801c51c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c520:	9a01      	ldr	r2, [sp, #4]
 801c522:	bf2b      	itete	cs
 801c524:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c528:	ebae 0103 	subcc.w	r1, lr, r3
 801c52c:	46f1      	movcs	r9, lr
 801c52e:	4699      	movcc	r9, r3
 801c530:	bf27      	ittee	cs
 801c532:	fa1f fa8a 	uxthcs.w	sl, sl
 801c536:	4621      	movcs	r1, r4
 801c538:	b289      	uxthcc	r1, r1
 801c53a:	46a2      	movcc	sl, r4
 801c53c:	2aff      	cmp	r2, #255	; 0xff
 801c53e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c542:	d105      	bne.n	801c550 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c544:	4481      	add	r9, r0
 801c546:	4581      	cmp	r9, r0
 801c548:	d045      	beq.n	801c5d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c54a:	f820 cb02 	strh.w	ip, [r0], #2
 801c54e:	e7fa      	b.n	801c546 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c550:	9d03      	ldr	r5, [sp, #12]
 801c552:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c556:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c55a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c55e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c562:	436a      	muls	r2, r5
 801c564:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c568:	fa5f fc8c 	uxtb.w	ip, ip
 801c56c:	9208      	str	r2, [sp, #32]
 801c56e:	fb0b fb05 	mul.w	fp, fp, r5
 801c572:	fb0c fc05 	mul.w	ip, ip, r5
 801c576:	4481      	add	r9, r0
 801c578:	4581      	cmp	r9, r0
 801c57a:	d02c      	beq.n	801c5d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c57c:	8802      	ldrh	r2, [r0, #0]
 801c57e:	9d04      	ldr	r5, [sp, #16]
 801c580:	9f04      	ldr	r7, [sp, #16]
 801c582:	1216      	asrs	r6, r2, #8
 801c584:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c588:	fb16 f605 	smulbb	r6, r6, r5
 801c58c:	9d08      	ldr	r5, [sp, #32]
 801c58e:	442e      	add	r6, r5
 801c590:	10d5      	asrs	r5, r2, #3
 801c592:	00d2      	lsls	r2, r2, #3
 801c594:	b2d2      	uxtb	r2, r2
 801c596:	fb12 f207 	smulbb	r2, r2, r7
 801c59a:	b2b6      	uxth	r6, r6
 801c59c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c5a0:	4462      	add	r2, ip
 801c5a2:	fb15 f507 	smulbb	r5, r5, r7
 801c5a6:	b292      	uxth	r2, r2
 801c5a8:	1c77      	adds	r7, r6, #1
 801c5aa:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c5ae:	1c57      	adds	r7, r2, #1
 801c5b0:	445d      	add	r5, fp
 801c5b2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c5b6:	b2ad      	uxth	r5, r5
 801c5b8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c5bc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c5c0:	4316      	orrs	r6, r2
 801c5c2:	1c6a      	adds	r2, r5, #1
 801c5c4:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c5c8:	096d      	lsrs	r5, r5, #5
 801c5ca:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c5ce:	432e      	orrs	r6, r5
 801c5d0:	f820 6b02 	strh.w	r6, [r0], #2
 801c5d4:	e7d0      	b.n	801c578 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c5d6:	4573      	cmp	r3, lr
 801c5d8:	d38f      	bcc.n	801c4fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c5da:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c5de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c5e0:	fa1f f188 	uxth.w	r1, r8
 801c5e4:	1a64      	subs	r4, r4, r1
 801c5e6:	881b      	ldrh	r3, [r3, #0]
 801c5e8:	b2a4      	uxth	r4, r4
 801c5ea:	2c00      	cmp	r4, #0
 801c5ec:	eba3 0308 	sub.w	r3, r3, r8
 801c5f0:	bf18      	it	ne
 801c5f2:	2100      	movne	r1, #0
 801c5f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c5f8:	e77f      	b.n	801c4fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c5fa:	4b04      	ldr	r3, [pc, #16]	; (801c60c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c5fc:	6818      	ldr	r0, [r3, #0]
 801c5fe:	6803      	ldr	r3, [r0, #0]
 801c600:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c602:	4798      	blx	r3
 801c604:	b00f      	add	sp, #60	; 0x3c
 801c606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c60a:	bf00      	nop
 801c60c:	200132bc 	.word	0x200132bc
 801c610:	200132b6 	.word	0x200132b6

0801c614 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c618:	b09f      	sub	sp, #124	; 0x7c
 801c61a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c61e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c622:	9209      	str	r2, [sp, #36]	; 0x24
 801c624:	461d      	mov	r5, r3
 801c626:	4604      	mov	r4, r0
 801c628:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c62a:	2a00      	cmp	r2, #0
 801c62c:	f000 81eb 	beq.w	801ca06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c630:	6828      	ldr	r0, [r5, #0]
 801c632:	6869      	ldr	r1, [r5, #4]
 801c634:	aa1a      	add	r2, sp, #104	; 0x68
 801c636:	c203      	stmia	r2!, {r0, r1}
 801c638:	6818      	ldr	r0, [r3, #0]
 801c63a:	6859      	ldr	r1, [r3, #4]
 801c63c:	aa1c      	add	r2, sp, #112	; 0x70
 801c63e:	c203      	stmia	r2!, {r0, r1}
 801c640:	a81a      	add	r0, sp, #104	; 0x68
 801c642:	f7f9 f9c1 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c646:	4629      	mov	r1, r5
 801c648:	a81c      	add	r0, sp, #112	; 0x70
 801c64a:	f7f9 fa01 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c64e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c652:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c656:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c65a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c65e:	bfd7      	itett	le
 801c660:	b29a      	uxthle	r2, r3
 801c662:	2201      	movgt	r2, #1
 801c664:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c668:	fb91 f2f2 	sdivle	r2, r1, r2
 801c66c:	9202      	str	r2, [sp, #8]
 801c66e:	9802      	ldr	r0, [sp, #8]
 801c670:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c674:	fb92 f0f0 	sdiv	r0, r2, r0
 801c678:	b280      	uxth	r0, r0
 801c67a:	9010      	str	r0, [sp, #64]	; 0x40
 801c67c:	9902      	ldr	r1, [sp, #8]
 801c67e:	9802      	ldr	r0, [sp, #8]
 801c680:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c682:	4488      	add	r8, r1
 801c684:	fb05 2510 	mls	r5, r5, r0, r2
 801c688:	fb15 f503 	smulbb	r5, r5, r3
 801c68c:	f108 38ff 	add.w	r8, r8, #4294967295
 801c690:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c694:	fb98 f8f1 	sdiv	r8, r8, r1
 801c698:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c69c:	440d      	add	r5, r1
 801c69e:	4419      	add	r1, r3
 801c6a0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c6a4:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c6a8:	441a      	add	r2, r3
 801c6aa:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c6ae:	9304      	str	r3, [sp, #16]
 801c6b0:	4b95      	ldr	r3, [pc, #596]	; (801c908 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c6b2:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c6b6:	6818      	ldr	r0, [r3, #0]
 801c6b8:	6803      	ldr	r3, [r0, #0]
 801c6ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c6bc:	4798      	blx	r3
 801c6be:	4b93      	ldr	r3, [pc, #588]	; (801c90c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c6c0:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c6c4:	881a      	ldrh	r2, [r3, #0]
 801c6c6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c6ca:	9318      	str	r3, [sp, #96]	; 0x60
 801c6cc:	fb02 7101 	mla	r1, r2, r1, r7
 801c6d0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c6d4:	4356      	muls	r6, r2
 801c6d6:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c6da:	f108 0801 	add.w	r8, r8, #1
 801c6de:	920a      	str	r2, [sp, #40]	; 0x28
 801c6e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c6e2:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c6e6:	930f      	str	r3, [sp, #60]	; 0x3c
 801c6e8:	fa1f f888 	uxth.w	r8, r8
 801c6ec:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c6f0:	f108 0204 	add.w	r2, r8, #4
 801c6f4:	9211      	str	r2, [sp, #68]	; 0x44
 801c6f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c6f8:	4b85      	ldr	r3, [pc, #532]	; (801c910 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c6fa:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c6fe:	b2ad      	uxth	r5, r5
 801c700:	9215      	str	r2, [sp, #84]	; 0x54
 801c702:	2d00      	cmp	r5, #0
 801c704:	9a04      	ldr	r2, [sp, #16]
 801c706:	f04f 0100 	mov.w	r1, #0
 801c70a:	bf18      	it	ne
 801c70c:	2200      	movne	r2, #0
 801c70e:	1b1b      	subs	r3, r3, r4
 801c710:	b292      	uxth	r2, r2
 801c712:	910d      	str	r1, [sp, #52]	; 0x34
 801c714:	9319      	str	r3, [sp, #100]	; 0x64
 801c716:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c718:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c71a:	fa11 f383 	uxtah	r3, r1, r3
 801c71e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c720:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c724:	3304      	adds	r3, #4
 801c726:	9306      	str	r3, [sp, #24]
 801c728:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c72a:	4283      	cmp	r3, r0
 801c72c:	f240 8166 	bls.w	801c9fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c730:	9902      	ldr	r1, [sp, #8]
 801c732:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c736:	fbb5 f3f3 	udiv	r3, r5, r3
 801c73a:	1acb      	subs	r3, r1, r3
 801c73c:	b29b      	uxth	r3, r3
 801c73e:	9316      	str	r3, [sp, #88]	; 0x58
 801c740:	9b06      	ldr	r3, [sp, #24]
 801c742:	9e06      	ldr	r6, [sp, #24]
 801c744:	7859      	ldrb	r1, [r3, #1]
 801c746:	789b      	ldrb	r3, [r3, #2]
 801c748:	7836      	ldrb	r6, [r6, #0]
 801c74a:	9612      	str	r6, [sp, #72]	; 0x48
 801c74c:	021b      	lsls	r3, r3, #8
 801c74e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c752:	9906      	ldr	r1, [sp, #24]
 801c754:	78c9      	ldrb	r1, [r1, #3]
 801c756:	430b      	orrs	r3, r1
 801c758:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c75a:	3601      	adds	r6, #1
 801c75c:	4419      	add	r1, r3
 801c75e:	9605      	str	r6, [sp, #20]
 801c760:	1c4e      	adds	r6, r1, #1
 801c762:	9603      	str	r6, [sp, #12]
 801c764:	7849      	ldrb	r1, [r1, #1]
 801c766:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c768:	0209      	lsls	r1, r1, #8
 801c76a:	5cf3      	ldrb	r3, [r6, r3]
 801c76c:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c770:	4319      	orrs	r1, r3
 801c772:	b28b      	uxth	r3, r1
 801c774:	930c      	str	r3, [sp, #48]	; 0x30
 801c776:	2300      	movs	r3, #0
 801c778:	f04f 0a01 	mov.w	sl, #1
 801c77c:	9307      	str	r3, [sp, #28]
 801c77e:	469c      	mov	ip, r3
 801c780:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c784:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c788:	46d3      	mov	fp, sl
 801c78a:	4657      	mov	r7, sl
 801c78c:	930e      	str	r3, [sp, #56]	; 0x38
 801c78e:	2d00      	cmp	r5, #0
 801c790:	d07e      	beq.n	801c890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c792:	42af      	cmp	r7, r5
 801c794:	d26e      	bcs.n	801c874 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c796:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c798:	9201      	str	r2, [sp, #4]
 801c79a:	1bed      	subs	r5, r5, r7
 801c79c:	4283      	cmp	r3, r0
 801c79e:	b2ad      	uxth	r5, r5
 801c7a0:	d802      	bhi.n	801c7a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c7a2:	e073      	b.n	801c88c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c7a4:	2b00      	cmp	r3, #0
 801c7a6:	d15f      	bne.n	801c868 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c7a8:	9b03      	ldr	r3, [sp, #12]
 801c7aa:	785b      	ldrb	r3, [r3, #1]
 801c7ac:	f1cb 0207 	rsb	r2, fp, #7
 801c7b0:	4093      	lsls	r3, r2
 801c7b2:	005b      	lsls	r3, r3, #1
 801c7b4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c7b8:	9b03      	ldr	r3, [sp, #12]
 801c7ba:	781b      	ldrb	r3, [r3, #0]
 801c7bc:	fa43 f30b 	asr.w	r3, r3, fp
 801c7c0:	b2db      	uxtb	r3, r3
 801c7c2:	4313      	orrs	r3, r2
 801c7c4:	f10b 0201 	add.w	r2, fp, #1
 801c7c8:	fa5f fb82 	uxtb.w	fp, r2
 801c7cc:	9a03      	ldr	r2, [sp, #12]
 801c7ce:	f1bb 0f08 	cmp.w	fp, #8
 801c7d2:	bf15      	itete	ne
 801c7d4:	3201      	addne	r2, #1
 801c7d6:	3202      	addeq	r2, #2
 801c7d8:	9203      	strne	r2, [sp, #12]
 801c7da:	9203      	streq	r2, [sp, #12]
 801c7dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c7de:	b29f      	uxth	r7, r3
 801c7e0:	bf08      	it	eq
 801c7e2:	f04f 0b00 	moveq.w	fp, #0
 801c7e6:	42ba      	cmp	r2, r7
 801c7e8:	d309      	bcc.n	801c7fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c7ea:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c7ee:	2301      	movs	r3, #1
 801c7f0:	9a05      	ldr	r2, [sp, #20]
 801c7f2:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801c7f6:	d30e      	bcc.n	801c816 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801c7f8:	469a      	mov	sl, r3
 801c7fa:	2600      	movs	r6, #0
 801c7fc:	e035      	b.n	801c86a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801c7fe:	9b05      	ldr	r3, [sp, #20]
 801c800:	429f      	cmp	r7, r3
 801c802:	d318      	bcc.n	801c836 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801c804:	eb04 030a 	add.w	r3, r4, sl
 801c808:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801c80c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801c810:	f10a 0301 	add.w	r3, sl, #1
 801c814:	b29b      	uxth	r3, r3
 801c816:	9a05      	ldr	r2, [sp, #20]
 801c818:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c81c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c81e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c822:	7116      	strb	r6, [r2, #4]
 801c824:	f10a 0601 	add.w	r6, sl, #1
 801c828:	80d1      	strh	r1, [r2, #6]
 801c82a:	7156      	strb	r6, [r2, #5]
 801c82c:	9a05      	ldr	r2, [sp, #20]
 801c82e:	3201      	adds	r2, #1
 801c830:	b292      	uxth	r2, r2
 801c832:	9205      	str	r2, [sp, #20]
 801c834:	e7e0      	b.n	801c7f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801c836:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801c83a:	463a      	mov	r2, r7
 801c83c:	795b      	ldrb	r3, [r3, #5]
 801c83e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c842:	4426      	add	r6, r4
 801c844:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c846:	eb01 0c06 	add.w	ip, r1, r6
 801c84a:	f1bc 0f00 	cmp.w	ip, #0
 801c84e:	dd07      	ble.n	801c860 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801c850:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c854:	f892 c004 	ldrb.w	ip, [r2, #4]
 801c858:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801c85c:	88d2      	ldrh	r2, [r2, #6]
 801c85e:	e7f1      	b.n	801c844 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801c860:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c864:	b29b      	uxth	r3, r3
 801c866:	e7c3      	b.n	801c7f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801c868:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c86a:	970c      	str	r7, [sp, #48]	; 0x30
 801c86c:	9a01      	ldr	r2, [sp, #4]
 801c86e:	46b4      	mov	ip, r6
 801c870:	461f      	mov	r7, r3
 801c872:	e78c      	b.n	801c78e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801c874:	1b7b      	subs	r3, r7, r5
 801c876:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c87a:	9201      	str	r2, [sp, #4]
 801c87c:	eb0c 0605 	add.w	r6, ip, r5
 801c880:	b29b      	uxth	r3, r3
 801c882:	b2b6      	uxth	r6, r6
 801c884:	2500      	movs	r5, #0
 801c886:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c888:	4282      	cmp	r2, r0
 801c88a:	d88b      	bhi.n	801c7a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c88c:	9a01      	ldr	r2, [sp, #4]
 801c88e:	e74b      	b.n	801c728 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801c890:	4297      	cmp	r7, r2
 801c892:	d332      	bcc.n	801c8fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801c894:	1abb      	subs	r3, r7, r2
 801c896:	b29b      	uxth	r3, r3
 801c898:	9208      	str	r2, [sp, #32]
 801c89a:	9501      	str	r5, [sp, #4]
 801c89c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c89e:	29ff      	cmp	r1, #255	; 0xff
 801c8a0:	9908      	ldr	r1, [sp, #32]
 801c8a2:	eb0c 0601 	add.w	r6, ip, r1
 801c8a6:	d135      	bne.n	801c914 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801c8a8:	f1a0 0e02 	sub.w	lr, r0, #2
 801c8ac:	b2b6      	uxth	r6, r6
 801c8ae:	45b4      	cmp	ip, r6
 801c8b0:	f040 808c 	bne.w	801c9cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801c8b4:	9908      	ldr	r1, [sp, #32]
 801c8b6:	4297      	cmp	r7, r2
 801c8b8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c8bc:	d3e2      	bcc.n	801c884 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801c8be:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c8c0:	9904      	ldr	r1, [sp, #16]
 801c8c2:	8812      	ldrh	r2, [r2, #0]
 801c8c4:	1a52      	subs	r2, r2, r1
 801c8c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c8ca:	9a07      	ldr	r2, [sp, #28]
 801c8cc:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c8ce:	3201      	adds	r2, #1
 801c8d0:	428a      	cmp	r2, r1
 801c8d2:	9207      	str	r2, [sp, #28]
 801c8d4:	f040 8087 	bne.w	801c9e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c8d8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c8dc:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801c8e0:	9b04      	ldr	r3, [sp, #16]
 801c8e2:	1bed      	subs	r5, r5, r7
 801c8e4:	b2ad      	uxth	r5, r5
 801c8e6:	2d00      	cmp	r5, #0
 801c8e8:	bf08      	it	eq
 801c8ea:	461a      	moveq	r2, r3
 801c8ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c8ee:	bf18      	it	ne
 801c8f0:	2200      	movne	r2, #0
 801c8f2:	3301      	adds	r3, #1
 801c8f4:	930d      	str	r3, [sp, #52]	; 0x34
 801c8f6:	b292      	uxth	r2, r2
 801c8f8:	e70d      	b.n	801c716 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801c8fa:	1bd1      	subs	r1, r2, r7
 801c8fc:	b28b      	uxth	r3, r1
 801c8fe:	9301      	str	r3, [sp, #4]
 801c900:	9708      	str	r7, [sp, #32]
 801c902:	462b      	mov	r3, r5
 801c904:	e7ca      	b.n	801c89c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801c906:	bf00      	nop
 801c908:	200132bc 	.word	0x200132bc
 801c90c:	200132b6 	.word	0x200132b6
 801c910:	fffff7fb 	.word	0xfffff7fb
 801c914:	b2b6      	uxth	r6, r6
 801c916:	900b      	str	r0, [sp, #44]	; 0x2c
 801c918:	45b4      	cmp	ip, r6
 801c91a:	d0cb      	beq.n	801c8b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801c91c:	f10c 0101 	add.w	r1, ip, #1
 801c920:	44a4      	add	ip, r4
 801c922:	9117      	str	r1, [sp, #92]	; 0x5c
 801c924:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c928:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c92a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c92e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c930:	f8b1 c000 	ldrh.w	ip, [r1]
 801c934:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c936:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801c93a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c93e:	fb1e fe01 	smulbb	lr, lr, r1
 801c942:	ea4f 2825 	mov.w	r8, r5, asr #8
 801c946:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c948:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c94c:	fb08 e801 	mla	r8, r8, r1, lr
 801c950:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801c954:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c956:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c95a:	fb19 f901 	smulbb	r9, r9, r1
 801c95e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801c962:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c964:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c968:	fb0e 9e01 	mla	lr, lr, r1, r9
 801c96c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c970:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c972:	fa5f fc8c 	uxtb.w	ip, ip
 801c976:	fb1c fc01 	smulbb	ip, ip, r1
 801c97a:	00ed      	lsls	r5, r5, #3
 801c97c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c97e:	b2ed      	uxtb	r5, r5
 801c980:	fb05 c501 	mla	r5, r5, r1, ip
 801c984:	fa1f f888 	uxth.w	r8, r8
 801c988:	fa1f fe8e 	uxth.w	lr, lr
 801c98c:	b2ad      	uxth	r5, r5
 801c98e:	f108 0c01 	add.w	ip, r8, #1
 801c992:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801c996:	f10e 0901 	add.w	r9, lr, #1
 801c99a:	f105 0c01 	add.w	ip, r5, #1
 801c99e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801c9a2:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801c9a6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c9aa:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c9ae:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c9b2:	ea4c 0808 	orr.w	r8, ip, r8
 801c9b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c9b8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801c9bc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c9c0:	ea48 0809 	orr.w	r8, r8, r9
 801c9c4:	f821 8b02 	strh.w	r8, [r1], #2
 801c9c8:	910b      	str	r1, [sp, #44]	; 0x2c
 801c9ca:	e7a5      	b.n	801c918 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801c9cc:	f10c 0801 	add.w	r8, ip, #1
 801c9d0:	44a4      	add	ip, r4
 801c9d2:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c9d4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c9d8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c9dc:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801c9e0:	fa1f fc88 	uxth.w	ip, r8
 801c9e4:	e763      	b.n	801c8ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801c9e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c9ea:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c9ee:	1aad      	subs	r5, r5, r2
 801c9f0:	b2ad      	uxth	r5, r5
 801c9f2:	2d00      	cmp	r5, #0
 801c9f4:	bf18      	it	ne
 801c9f6:	2200      	movne	r2, #0
 801c9f8:	9201      	str	r2, [sp, #4]
 801c9fa:	e744      	b.n	801c886 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801c9fc:	4b03      	ldr	r3, [pc, #12]	; (801ca0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801c9fe:	6818      	ldr	r0, [r3, #0]
 801ca00:	6803      	ldr	r3, [r0, #0]
 801ca02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ca04:	4798      	blx	r3
 801ca06:	b01f      	add	sp, #124	; 0x7c
 801ca08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca0c:	200132bc 	.word	0x200132bc

0801ca10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801ca10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca14:	b08f      	sub	sp, #60	; 0x3c
 801ca16:	461c      	mov	r4, r3
 801ca18:	9203      	str	r2, [sp, #12]
 801ca1a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ca1e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ca20:	9202      	str	r2, [sp, #8]
 801ca22:	460f      	mov	r7, r1
 801ca24:	2a00      	cmp	r2, #0
 801ca26:	f000 8128 	beq.w	801cc7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801ca2a:	6820      	ldr	r0, [r4, #0]
 801ca2c:	6861      	ldr	r1, [r4, #4]
 801ca2e:	aa0a      	add	r2, sp, #40	; 0x28
 801ca30:	c203      	stmia	r2!, {r0, r1}
 801ca32:	6818      	ldr	r0, [r3, #0]
 801ca34:	6859      	ldr	r1, [r3, #4]
 801ca36:	aa0c      	add	r2, sp, #48	; 0x30
 801ca38:	c203      	stmia	r2!, {r0, r1}
 801ca3a:	a80a      	add	r0, sp, #40	; 0x28
 801ca3c:	f7f8 ffc4 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca40:	4621      	mov	r1, r4
 801ca42:	a80c      	add	r0, sp, #48	; 0x30
 801ca44:	f7f9 f804 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca48:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801ca4c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801ca50:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801ca54:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ca58:	bfde      	ittt	le
 801ca5a:	b2b3      	uxthle	r3, r6
 801ca5c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ca60:	fb92 f3f3 	sdivle	r3, r2, r3
 801ca64:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ca68:	bfc8      	it	gt
 801ca6a:	2301      	movgt	r3, #1
 801ca6c:	fb92 f1f3 	sdiv	r1, r2, r3
 801ca70:	fa1f fc81 	uxth.w	ip, r1
 801ca74:	fb0c 2413 	mls	r4, ip, r3, r2
 801ca78:	fb14 f406 	smulbb	r4, r4, r6
 801ca7c:	441d      	add	r5, r3
 801ca7e:	4404      	add	r4, r0
 801ca80:	4661      	mov	r1, ip
 801ca82:	3d01      	subs	r5, #1
 801ca84:	b2a4      	uxth	r4, r4
 801ca86:	fb95 f5f3 	sdiv	r5, r5, r3
 801ca8a:	b121      	cbz	r1, 801ca96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801ca8c:	9b03      	ldr	r3, [sp, #12]
 801ca8e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ca92:	ba1b      	rev	r3, r3
 801ca94:	441f      	add	r7, r3
 801ca96:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ca9a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801ca9e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801caa2:	4418      	add	r0, r3
 801caa4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801caa8:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801caac:	441a      	add	r2, r3
 801caae:	4b74      	ldr	r3, [pc, #464]	; (801cc80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cab0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801cab4:	6818      	ldr	r0, [r3, #0]
 801cab6:	6803      	ldr	r3, [r0, #0]
 801cab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801caba:	4798      	blx	r3
 801cabc:	4a71      	ldr	r2, [pc, #452]	; (801cc84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801cabe:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801cac2:	8813      	ldrh	r3, [r2, #0]
 801cac4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801cac8:	9209      	str	r2, [sp, #36]	; 0x24
 801caca:	fb03 c101 	mla	r1, r3, r1, ip
 801cace:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cad2:	4373      	muls	r3, r6
 801cad4:	b2ad      	uxth	r5, r5
 801cad6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cada:	00ad      	lsls	r5, r5, #2
 801cadc:	2c00      	cmp	r4, #0
 801cade:	9304      	str	r3, [sp, #16]
 801cae0:	f105 0304 	add.w	r3, r5, #4
 801cae4:	9305      	str	r3, [sp, #20]
 801cae6:	bf0c      	ite	eq
 801cae8:	46c8      	moveq	r8, r9
 801caea:	f04f 0800 	movne.w	r8, #0
 801caee:	2300      	movs	r3, #0
 801caf0:	fa1f f888 	uxth.w	r8, r8
 801caf4:	9301      	str	r3, [sp, #4]
 801caf6:	9a04      	ldr	r2, [sp, #16]
 801caf8:	4282      	cmp	r2, r0
 801cafa:	f240 80b9 	bls.w	801cc70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801cafe:	b95b      	cbnz	r3, 801cb18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801cb00:	783a      	ldrb	r2, [r7, #0]
 801cb02:	0993      	lsrs	r3, r2, #6
 801cb04:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cb08:	9201      	str	r2, [sp, #4]
 801cb0a:	1e5a      	subs	r2, r3, #1
 801cb0c:	2a02      	cmp	r2, #2
 801cb0e:	bf8d      	iteet	hi
 801cb10:	787b      	ldrbhi	r3, [r7, #1]
 801cb12:	3701      	addls	r7, #1
 801cb14:	b29b      	uxthls	r3, r3
 801cb16:	3702      	addhi	r7, #2
 801cb18:	b184      	cbz	r4, 801cb3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801cb1a:	429c      	cmp	r4, r3
 801cb1c:	bf95      	itete	ls
 801cb1e:	1b1c      	subls	r4, r3, r4
 801cb20:	1ae4      	subhi	r4, r4, r3
 801cb22:	fa1f fa84 	uxthls.w	sl, r4
 801cb26:	b2a4      	uxthhi	r4, r4
 801cb28:	bf87      	ittee	hi
 801cb2a:	46c4      	movhi	ip, r8
 801cb2c:	f04f 0a00 	movhi.w	sl, #0
 801cb30:	fa1f fc89 	uxthls.w	ip, r9
 801cb34:	2400      	movls	r4, #0
 801cb36:	4653      	mov	r3, sl
 801cb38:	46e0      	mov	r8, ip
 801cb3a:	e7dc      	b.n	801caf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801cb3c:	2204      	movs	r2, #4
 801cb3e:	4615      	mov	r5, r2
 801cb40:	9905      	ldr	r1, [sp, #20]
 801cb42:	9a01      	ldr	r2, [sp, #4]
 801cb44:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cb48:	9903      	ldr	r1, [sp, #12]
 801cb4a:	588a      	ldr	r2, [r1, r2]
 801cb4c:	4543      	cmp	r3, r8
 801cb4e:	bf27      	ittee	cs
 801cb50:	eba3 0a08 	subcs.w	sl, r3, r8
 801cb54:	46c6      	movcs	lr, r8
 801cb56:	eba8 0c03 	subcc.w	ip, r8, r3
 801cb5a:	469e      	movcc	lr, r3
 801cb5c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801cb60:	bf27      	ittee	cs
 801cb62:	fa1f fa8a 	uxthcs.w	sl, sl
 801cb66:	46a4      	movcs	ip, r4
 801cb68:	fa1f fc8c 	uxthcc.w	ip, ip
 801cb6c:	46a2      	movcc	sl, r4
 801cb6e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801cb72:	2900      	cmp	r1, #0
 801cb74:	d066      	beq.n	801cc44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801cb76:	29ff      	cmp	r1, #255	; 0xff
 801cb78:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801cb7c:	d114      	bne.n	801cba8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cb7e:	9d02      	ldr	r5, [sp, #8]
 801cb80:	2dff      	cmp	r5, #255	; 0xff
 801cb82:	d111      	bne.n	801cba8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cb84:	0951      	lsrs	r1, r2, #5
 801cb86:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801cb8a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cb8e:	f026 0607 	bic.w	r6, r6, #7
 801cb92:	430e      	orrs	r6, r1
 801cb94:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cb98:	4316      	orrs	r6, r2
 801cb9a:	b2b6      	uxth	r6, r6
 801cb9c:	4486      	add	lr, r0
 801cb9e:	4586      	cmp	lr, r0
 801cba0:	d051      	beq.n	801cc46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cba2:	f820 6b02 	strh.w	r6, [r0], #2
 801cba6:	e7fa      	b.n	801cb9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801cba8:	9d02      	ldr	r5, [sp, #8]
 801cbaa:	4369      	muls	r1, r5
 801cbac:	1c4d      	adds	r5, r1, #1
 801cbae:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801cbb2:	122d      	asrs	r5, r5, #8
 801cbb4:	ea6f 0b05 	mvn.w	fp, r5
 801cbb8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801cbbc:	b2ad      	uxth	r5, r5
 801cbbe:	b2f6      	uxtb	r6, r6
 801cbc0:	b2d2      	uxtb	r2, r2
 801cbc2:	fb11 f105 	smulbb	r1, r1, r5
 801cbc6:	fb16 f605 	smulbb	r6, r6, r5
 801cbca:	fb12 f205 	smulbb	r2, r2, r5
 801cbce:	b289      	uxth	r1, r1
 801cbd0:	b2b6      	uxth	r6, r6
 801cbd2:	b292      	uxth	r2, r2
 801cbd4:	9106      	str	r1, [sp, #24]
 801cbd6:	9607      	str	r6, [sp, #28]
 801cbd8:	9208      	str	r2, [sp, #32]
 801cbda:	4486      	add	lr, r0
 801cbdc:	fa5f fb8b 	uxtb.w	fp, fp
 801cbe0:	4586      	cmp	lr, r0
 801cbe2:	d030      	beq.n	801cc46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cbe4:	8802      	ldrh	r2, [r0, #0]
 801cbe6:	9906      	ldr	r1, [sp, #24]
 801cbe8:	1216      	asrs	r6, r2, #8
 801cbea:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cbee:	10d5      	asrs	r5, r2, #3
 801cbf0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cbf4:	fb06 160b 	mla	r6, r6, fp, r1
 801cbf8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cbfc:	9907      	ldr	r1, [sp, #28]
 801cbfe:	00d2      	lsls	r2, r2, #3
 801cc00:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cc04:	fb05 150b 	mla	r5, r5, fp, r1
 801cc08:	b2d2      	uxtb	r2, r2
 801cc0a:	9908      	ldr	r1, [sp, #32]
 801cc0c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cc10:	b2b6      	uxth	r6, r6
 801cc12:	fb02 120b 	mla	r2, r2, fp, r1
 801cc16:	b292      	uxth	r2, r2
 801cc18:	1c71      	adds	r1, r6, #1
 801cc1a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801cc1e:	1c51      	adds	r1, r2, #1
 801cc20:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cc24:	b2ad      	uxth	r5, r5
 801cc26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cc2a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cc2e:	4316      	orrs	r6, r2
 801cc30:	1c6a      	adds	r2, r5, #1
 801cc32:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801cc36:	096d      	lsrs	r5, r5, #5
 801cc38:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cc3c:	432e      	orrs	r6, r5
 801cc3e:	f820 6b02 	strh.w	r6, [r0], #2
 801cc42:	e7cd      	b.n	801cbe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801cc44:	4470      	add	r0, lr
 801cc46:	4543      	cmp	r3, r8
 801cc48:	f4ff af75 	bcc.w	801cb36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cc4c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801cc50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc52:	fa1f fc89 	uxth.w	ip, r9
 801cc56:	eba4 040c 	sub.w	r4, r4, ip
 801cc5a:	881b      	ldrh	r3, [r3, #0]
 801cc5c:	b2a4      	uxth	r4, r4
 801cc5e:	2c00      	cmp	r4, #0
 801cc60:	eba3 0309 	sub.w	r3, r3, r9
 801cc64:	bf18      	it	ne
 801cc66:	f04f 0c00 	movne.w	ip, #0
 801cc6a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cc6e:	e762      	b.n	801cb36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cc70:	4b03      	ldr	r3, [pc, #12]	; (801cc80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cc72:	6818      	ldr	r0, [r3, #0]
 801cc74:	6803      	ldr	r3, [r0, #0]
 801cc76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc78:	4798      	blx	r3
 801cc7a:	b00f      	add	sp, #60	; 0x3c
 801cc7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc80:	200132bc 	.word	0x200132bc
 801cc84:	200132b6 	.word	0x200132b6

0801cc88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801cc88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc8c:	b093      	sub	sp, #76	; 0x4c
 801cc8e:	461c      	mov	r4, r3
 801cc90:	9205      	str	r2, [sp, #20]
 801cc92:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801cc96:	9101      	str	r1, [sp, #4]
 801cc98:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cc9a:	9202      	str	r2, [sp, #8]
 801cc9c:	2a00      	cmp	r2, #0
 801cc9e:	f000 812c 	beq.w	801cefa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801cca2:	6820      	ldr	r0, [r4, #0]
 801cca4:	6861      	ldr	r1, [r4, #4]
 801cca6:	aa0e      	add	r2, sp, #56	; 0x38
 801cca8:	c203      	stmia	r2!, {r0, r1}
 801ccaa:	6818      	ldr	r0, [r3, #0]
 801ccac:	6859      	ldr	r1, [r3, #4]
 801ccae:	aa10      	add	r2, sp, #64	; 0x40
 801ccb0:	c203      	stmia	r2!, {r0, r1}
 801ccb2:	a80e      	add	r0, sp, #56	; 0x38
 801ccb4:	f7f8 fe88 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ccb8:	4621      	mov	r1, r4
 801ccba:	a810      	add	r0, sp, #64	; 0x40
 801ccbc:	f7f8 fec8 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ccc0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801ccc4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801ccc8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801cccc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ccd0:	bfde      	ittt	le
 801ccd2:	b2b3      	uxthle	r3, r6
 801ccd4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ccd8:	fb92 f3f3 	sdivle	r3, r2, r3
 801ccdc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cce0:	bfc8      	it	gt
 801cce2:	2301      	movgt	r3, #1
 801cce4:	fb92 f1f3 	sdiv	r1, r2, r3
 801cce8:	fa1f fc81 	uxth.w	ip, r1
 801ccec:	fb0c 2413 	mls	r4, ip, r3, r2
 801ccf0:	fb14 f406 	smulbb	r4, r4, r6
 801ccf4:	441d      	add	r5, r3
 801ccf6:	4404      	add	r4, r0
 801ccf8:	4661      	mov	r1, ip
 801ccfa:	3d01      	subs	r5, #1
 801ccfc:	b2a4      	uxth	r4, r4
 801ccfe:	fb95 f5f3 	sdiv	r5, r5, r3
 801cd02:	b131      	cbz	r1, 801cd12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801cd04:	9b05      	ldr	r3, [sp, #20]
 801cd06:	9901      	ldr	r1, [sp, #4]
 801cd08:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cd0c:	ba1b      	rev	r3, r3
 801cd0e:	4419      	add	r1, r3
 801cd10:	9101      	str	r1, [sp, #4]
 801cd12:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cd16:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801cd1a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801cd1e:	4418      	add	r0, r3
 801cd20:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801cd24:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801cd28:	441a      	add	r2, r3
 801cd2a:	4b75      	ldr	r3, [pc, #468]	; (801cf00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cd2c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801cd30:	6818      	ldr	r0, [r3, #0]
 801cd32:	6803      	ldr	r3, [r0, #0]
 801cd34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd36:	4798      	blx	r3
 801cd38:	4972      	ldr	r1, [pc, #456]	; (801cf04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801cd3a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801cd3e:	880b      	ldrh	r3, [r1, #0]
 801cd40:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cd44:	910d      	str	r1, [sp, #52]	; 0x34
 801cd46:	fb03 c202 	mla	r2, r3, r2, ip
 801cd4a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cd4e:	4373      	muls	r3, r6
 801cd50:	b2ad      	uxth	r5, r5
 801cd52:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cd56:	00ad      	lsls	r5, r5, #2
 801cd58:	9308      	str	r3, [sp, #32]
 801cd5a:	1d2b      	adds	r3, r5, #4
 801cd5c:	9309      	str	r3, [sp, #36]	; 0x24
 801cd5e:	9b02      	ldr	r3, [sp, #8]
 801cd60:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cd64:	9106      	str	r1, [sp, #24]
 801cd66:	43da      	mvns	r2, r3
 801cd68:	2c00      	cmp	r4, #0
 801cd6a:	bf0c      	ite	eq
 801cd6c:	46dc      	moveq	ip, fp
 801cd6e:	f04f 0c00 	movne.w	ip, #0
 801cd72:	2300      	movs	r3, #0
 801cd74:	b2d2      	uxtb	r2, r2
 801cd76:	fa1f fc8c 	uxth.w	ip, ip
 801cd7a:	9303      	str	r3, [sp, #12]
 801cd7c:	9207      	str	r2, [sp, #28]
 801cd7e:	9a08      	ldr	r2, [sp, #32]
 801cd80:	4282      	cmp	r2, r0
 801cd82:	f240 80b5 	bls.w	801cef0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cd86:	b963      	cbnz	r3, 801cda2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cd88:	9b01      	ldr	r3, [sp, #4]
 801cd8a:	781a      	ldrb	r2, [r3, #0]
 801cd8c:	0993      	lsrs	r3, r2, #6
 801cd8e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cd92:	9203      	str	r2, [sp, #12]
 801cd94:	1e5a      	subs	r2, r3, #1
 801cd96:	2a02      	cmp	r2, #2
 801cd98:	d815      	bhi.n	801cdc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801cd9a:	9a01      	ldr	r2, [sp, #4]
 801cd9c:	3201      	adds	r2, #1
 801cd9e:	9201      	str	r2, [sp, #4]
 801cda0:	b29b      	uxth	r3, r3
 801cda2:	b1b4      	cbz	r4, 801cdd2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801cda4:	429c      	cmp	r4, r3
 801cda6:	bf95      	itete	ls
 801cda8:	1b1c      	subls	r4, r3, r4
 801cdaa:	1ae4      	subhi	r4, r4, r3
 801cdac:	fa1f f884 	uxthls.w	r8, r4
 801cdb0:	b2a4      	uxthhi	r4, r4
 801cdb2:	bf87      	ittee	hi
 801cdb4:	4666      	movhi	r6, ip
 801cdb6:	f04f 0800 	movhi.w	r8, #0
 801cdba:	fa1f f68b 	uxthls.w	r6, fp
 801cdbe:	2400      	movls	r4, #0
 801cdc0:	4643      	mov	r3, r8
 801cdc2:	46b4      	mov	ip, r6
 801cdc4:	e7db      	b.n	801cd7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801cdc6:	9a01      	ldr	r2, [sp, #4]
 801cdc8:	9b01      	ldr	r3, [sp, #4]
 801cdca:	3202      	adds	r2, #2
 801cdcc:	785b      	ldrb	r3, [r3, #1]
 801cdce:	9201      	str	r2, [sp, #4]
 801cdd0:	e7e7      	b.n	801cda2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cdd2:	2203      	movs	r2, #3
 801cdd4:	4615      	mov	r5, r2
 801cdd6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cdd8:	9a03      	ldr	r2, [sp, #12]
 801cdda:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cdde:	9905      	ldr	r1, [sp, #20]
 801cde0:	4563      	cmp	r3, ip
 801cde2:	eb01 0502 	add.w	r5, r1, r2
 801cde6:	9902      	ldr	r1, [sp, #8]
 801cde8:	bf29      	itett	cs
 801cdea:	eba3 080c 	subcs.w	r8, r3, ip
 801cdee:	ebac 0603 	subcc.w	r6, ip, r3
 801cdf2:	fa1f f888 	uxthcs.w	r8, r8
 801cdf6:	46e1      	movcs	r9, ip
 801cdf8:	bf2f      	iteee	cs
 801cdfa:	4626      	movcs	r6, r4
 801cdfc:	b2b6      	uxthcc	r6, r6
 801cdfe:	4699      	movcc	r9, r3
 801ce00:	46a0      	movcc	r8, r4
 801ce02:	29ff      	cmp	r1, #255	; 0xff
 801ce04:	d04a      	beq.n	801ce9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801ce06:	9f06      	ldr	r7, [sp, #24]
 801ce08:	78a9      	ldrb	r1, [r5, #2]
 801ce0a:	9004      	str	r0, [sp, #16]
 801ce0c:	4379      	muls	r1, r7
 801ce0e:	910a      	str	r1, [sp, #40]	; 0x28
 801ce10:	7869      	ldrb	r1, [r5, #1]
 801ce12:	4379      	muls	r1, r7
 801ce14:	910b      	str	r1, [sp, #44]	; 0x2c
 801ce16:	9905      	ldr	r1, [sp, #20]
 801ce18:	5c8a      	ldrb	r2, [r1, r2]
 801ce1a:	437a      	muls	r2, r7
 801ce1c:	920c      	str	r2, [sp, #48]	; 0x30
 801ce1e:	46ca      	mov	sl, r9
 801ce20:	f1ba 0f00 	cmp.w	sl, #0
 801ce24:	d03d      	beq.n	801cea2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801ce26:	9a04      	ldr	r2, [sp, #16]
 801ce28:	9f07      	ldr	r7, [sp, #28]
 801ce2a:	8812      	ldrh	r2, [r2, #0]
 801ce2c:	1215      	asrs	r5, r2, #8
 801ce2e:	46be      	mov	lr, r7
 801ce30:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ce34:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ce36:	10d1      	asrs	r1, r2, #3
 801ce38:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ce3c:	fb05 750e 	mla	r5, r5, lr, r7
 801ce40:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ce44:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801ce46:	00d2      	lsls	r2, r2, #3
 801ce48:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ce4c:	fb01 710e 	mla	r1, r1, lr, r7
 801ce50:	b2d2      	uxtb	r2, r2
 801ce52:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ce54:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ce58:	b2ad      	uxth	r5, r5
 801ce5a:	fb02 720e 	mla	r2, r2, lr, r7
 801ce5e:	b292      	uxth	r2, r2
 801ce60:	f105 0e01 	add.w	lr, r5, #1
 801ce64:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ce68:	f102 0e01 	add.w	lr, r2, #1
 801ce6c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801ce70:	b289      	uxth	r1, r1
 801ce72:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce76:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ce7a:	4315      	orrs	r5, r2
 801ce7c:	1c4a      	adds	r2, r1, #1
 801ce7e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ce82:	0949      	lsrs	r1, r1, #5
 801ce84:	9a04      	ldr	r2, [sp, #16]
 801ce86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ce8a:	430d      	orrs	r5, r1
 801ce8c:	f822 5b02 	strh.w	r5, [r2], #2
 801ce90:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ce94:	9204      	str	r2, [sp, #16]
 801ce96:	fa1f fa8a 	uxth.w	sl, sl
 801ce9a:	e7c1      	b.n	801ce20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801ce9c:	4649      	mov	r1, r9
 801ce9e:	4686      	mov	lr, r0
 801cea0:	b999      	cbnz	r1, 801ceca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801cea2:	4563      	cmp	r3, ip
 801cea4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801cea8:	d38a      	bcc.n	801cdc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ceaa:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801ceae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ceb0:	fa1f f68b 	uxth.w	r6, fp
 801ceb4:	1ba4      	subs	r4, r4, r6
 801ceb6:	881b      	ldrh	r3, [r3, #0]
 801ceb8:	b2a4      	uxth	r4, r4
 801ceba:	2c00      	cmp	r4, #0
 801cebc:	eba3 030b 	sub.w	r3, r3, fp
 801cec0:	bf18      	it	ne
 801cec2:	2600      	movne	r6, #0
 801cec4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cec8:	e77a      	b.n	801cdc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ceca:	78aa      	ldrb	r2, [r5, #2]
 801cecc:	4f0e      	ldr	r7, [pc, #56]	; (801cf08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801cece:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801ced2:	786a      	ldrb	r2, [r5, #1]
 801ced4:	00d2      	lsls	r2, r2, #3
 801ced6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ceda:	ea4a 0202 	orr.w	r2, sl, r2
 801cede:	f895 a000 	ldrb.w	sl, [r5]
 801cee2:	3901      	subs	r1, #1
 801cee4:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801cee8:	f82e 2b02 	strh.w	r2, [lr], #2
 801ceec:	b289      	uxth	r1, r1
 801ceee:	e7d7      	b.n	801cea0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801cef0:	4b03      	ldr	r3, [pc, #12]	; (801cf00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cef2:	6818      	ldr	r0, [r3, #0]
 801cef4:	6803      	ldr	r3, [r0, #0]
 801cef6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cef8:	4798      	blx	r3
 801cefa:	b013      	add	sp, #76	; 0x4c
 801cefc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf00:	200132bc 	.word	0x200132bc
 801cf04:	200132b6 	.word	0x200132b6
 801cf08:	fffff800 	.word	0xfffff800

0801cf0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cf0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf10:	b09d      	sub	sp, #116	; 0x74
 801cf12:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801cf16:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801cf1a:	920e      	str	r2, [sp, #56]	; 0x38
 801cf1c:	461c      	mov	r4, r3
 801cf1e:	4683      	mov	fp, r0
 801cf20:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cf22:	2a00      	cmp	r2, #0
 801cf24:	f000 81e0 	beq.w	801d2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801cf28:	6820      	ldr	r0, [r4, #0]
 801cf2a:	6861      	ldr	r1, [r4, #4]
 801cf2c:	aa18      	add	r2, sp, #96	; 0x60
 801cf2e:	c203      	stmia	r2!, {r0, r1}
 801cf30:	6818      	ldr	r0, [r3, #0]
 801cf32:	6859      	ldr	r1, [r3, #4]
 801cf34:	aa1a      	add	r2, sp, #104	; 0x68
 801cf36:	c203      	stmia	r2!, {r0, r1}
 801cf38:	a818      	add	r0, sp, #96	; 0x60
 801cf3a:	f7f8 fd45 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf3e:	4621      	mov	r1, r4
 801cf40:	a81a      	add	r0, sp, #104	; 0x68
 801cf42:	f7f8 fd85 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf46:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801cf4a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801cf4e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801cf52:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801cf56:	bfd7      	itett	le
 801cf58:	b29a      	uxthle	r2, r3
 801cf5a:	2201      	movgt	r2, #1
 801cf5c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801cf60:	fb91 f2f2 	sdivle	r2, r1, r2
 801cf64:	9202      	str	r2, [sp, #8]
 801cf66:	9802      	ldr	r0, [sp, #8]
 801cf68:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801cf6c:	fb92 f0f0 	sdiv	r0, r2, r0
 801cf70:	b280      	uxth	r0, r0
 801cf72:	900f      	str	r0, [sp, #60]	; 0x3c
 801cf74:	9902      	ldr	r1, [sp, #8]
 801cf76:	9802      	ldr	r0, [sp, #8]
 801cf78:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801cf7a:	440c      	add	r4, r1
 801cf7c:	fb05 2510 	mls	r5, r5, r0, r2
 801cf80:	fb15 f503 	smulbb	r5, r5, r3
 801cf84:	3c01      	subs	r4, #1
 801cf86:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801cf8a:	fb94 f4f1 	sdiv	r4, r4, r1
 801cf8e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801cf92:	440d      	add	r5, r1
 801cf94:	4419      	add	r1, r3
 801cf96:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801cf9a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801cf9e:	441a      	add	r2, r3
 801cfa0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801cfa4:	9306      	str	r3, [sp, #24]
 801cfa6:	4bb3      	ldr	r3, [pc, #716]	; (801d274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801cfa8:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801cfac:	6818      	ldr	r0, [r3, #0]
 801cfae:	6803      	ldr	r3, [r0, #0]
 801cfb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cfb2:	4798      	blx	r3
 801cfb4:	4bb0      	ldr	r3, [pc, #704]	; (801d278 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801cfb6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801cfba:	881a      	ldrh	r2, [r3, #0]
 801cfbc:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801cfc0:	9316      	str	r3, [sp, #88]	; 0x58
 801cfc2:	fb02 7101 	mla	r1, r2, r1, r7
 801cfc6:	3401      	adds	r4, #1
 801cfc8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801cfcc:	b2a4      	uxth	r4, r4
 801cfce:	4356      	muls	r6, r2
 801cfd0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801cfd4:	00a4      	lsls	r4, r4, #2
 801cfd6:	920a      	str	r2, [sp, #40]	; 0x28
 801cfd8:	1d22      	adds	r2, r4, #4
 801cfda:	b2ad      	uxth	r5, r5
 801cfdc:	9213      	str	r2, [sp, #76]	; 0x4c
 801cfde:	4ba7      	ldr	r3, [pc, #668]	; (801d27c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801cfe0:	9a06      	ldr	r2, [sp, #24]
 801cfe2:	2d00      	cmp	r5, #0
 801cfe4:	bf0c      	ite	eq
 801cfe6:	4611      	moveq	r1, r2
 801cfe8:	2100      	movne	r1, #0
 801cfea:	2200      	movs	r2, #0
 801cfec:	eba3 030b 	sub.w	r3, r3, fp
 801cff0:	b289      	uxth	r1, r1
 801cff2:	920d      	str	r2, [sp, #52]	; 0x34
 801cff4:	9317      	str	r3, [sp, #92]	; 0x5c
 801cff6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cff8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cffa:	fa12 f383 	uxtah	r3, r2, r3
 801cffe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d000:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d004:	3304      	adds	r3, #4
 801d006:	9308      	str	r3, [sp, #32]
 801d008:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d00a:	4543      	cmp	r3, r8
 801d00c:	f240 8167 	bls.w	801d2de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d010:	9a02      	ldr	r2, [sp, #8]
 801d012:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801d016:	fbb5 f3f3 	udiv	r3, r5, r3
 801d01a:	1ad3      	subs	r3, r2, r3
 801d01c:	b29b      	uxth	r3, r3
 801d01e:	9314      	str	r3, [sp, #80]	; 0x50
 801d020:	9b08      	ldr	r3, [sp, #32]
 801d022:	9808      	ldr	r0, [sp, #32]
 801d024:	785a      	ldrb	r2, [r3, #1]
 801d026:	789b      	ldrb	r3, [r3, #2]
 801d028:	7800      	ldrb	r0, [r0, #0]
 801d02a:	9010      	str	r0, [sp, #64]	; 0x40
 801d02c:	021b      	lsls	r3, r3, #8
 801d02e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d032:	9a08      	ldr	r2, [sp, #32]
 801d034:	78d2      	ldrb	r2, [r2, #3]
 801d036:	4313      	orrs	r3, r2
 801d038:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d03a:	3001      	adds	r0, #1
 801d03c:	441a      	add	r2, r3
 801d03e:	9007      	str	r0, [sp, #28]
 801d040:	1c50      	adds	r0, r2, #1
 801d042:	9005      	str	r0, [sp, #20]
 801d044:	7852      	ldrb	r2, [r2, #1]
 801d046:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d048:	0212      	lsls	r2, r2, #8
 801d04a:	5cc3      	ldrb	r3, [r0, r3]
 801d04c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d050:	431a      	orrs	r2, r3
 801d052:	b293      	uxth	r3, r2
 801d054:	930b      	str	r3, [sp, #44]	; 0x2c
 801d056:	2300      	movs	r3, #0
 801d058:	9309      	str	r3, [sp, #36]	; 0x24
 801d05a:	2301      	movs	r3, #1
 801d05c:	9301      	str	r3, [sp, #4]
 801d05e:	9304      	str	r3, [sp, #16]
 801d060:	2300      	movs	r3, #0
 801d062:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801d066:	9303      	str	r3, [sp, #12]
 801d068:	f04f 0e01 	mov.w	lr, #1
 801d06c:	2d00      	cmp	r5, #0
 801d06e:	d07c      	beq.n	801d16a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801d070:	45ae      	cmp	lr, r5
 801d072:	d26b      	bcs.n	801d14c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801d074:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d076:	eba5 050e 	sub.w	r5, r5, lr
 801d07a:	4543      	cmp	r3, r8
 801d07c:	b2ad      	uxth	r5, r5
 801d07e:	460c      	mov	r4, r1
 801d080:	d802      	bhi.n	801d088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801d082:	e070      	b.n	801d166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801d084:	2b00      	cmp	r3, #0
 801d086:	d15c      	bne.n	801d142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d088:	9b05      	ldr	r3, [sp, #20]
 801d08a:	9a04      	ldr	r2, [sp, #16]
 801d08c:	785b      	ldrb	r3, [r3, #1]
 801d08e:	9904      	ldr	r1, [sp, #16]
 801d090:	f1c2 0207 	rsb	r2, r2, #7
 801d094:	4093      	lsls	r3, r2
 801d096:	005b      	lsls	r3, r3, #1
 801d098:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d09c:	9b05      	ldr	r3, [sp, #20]
 801d09e:	781b      	ldrb	r3, [r3, #0]
 801d0a0:	410b      	asrs	r3, r1
 801d0a2:	3101      	adds	r1, #1
 801d0a4:	b2c9      	uxtb	r1, r1
 801d0a6:	2908      	cmp	r1, #8
 801d0a8:	9104      	str	r1, [sp, #16]
 801d0aa:	9905      	ldr	r1, [sp, #20]
 801d0ac:	bf0a      	itet	eq
 801d0ae:	3102      	addeq	r1, #2
 801d0b0:	3101      	addne	r1, #1
 801d0b2:	9105      	streq	r1, [sp, #20]
 801d0b4:	b2db      	uxtb	r3, r3
 801d0b6:	bf0a      	itet	eq
 801d0b8:	2100      	moveq	r1, #0
 801d0ba:	9105      	strne	r1, [sp, #20]
 801d0bc:	9104      	streq	r1, [sp, #16]
 801d0be:	4313      	orrs	r3, r2
 801d0c0:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d0c2:	b29a      	uxth	r2, r3
 801d0c4:	4291      	cmp	r1, r2
 801d0c6:	d30a      	bcc.n	801d0de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d0c8:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801d0cc:	2301      	movs	r3, #1
 801d0ce:	9907      	ldr	r1, [sp, #28]
 801d0d0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d0d4:	d30f      	bcc.n	801d0f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d0d6:	2100      	movs	r1, #0
 801d0d8:	9301      	str	r3, [sp, #4]
 801d0da:	9103      	str	r1, [sp, #12]
 801d0dc:	e032      	b.n	801d144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801d0de:	9b07      	ldr	r3, [sp, #28]
 801d0e0:	429a      	cmp	r2, r3
 801d0e2:	d318      	bcc.n	801d116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801d0e4:	9b01      	ldr	r3, [sp, #4]
 801d0e6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801d0ea:	445b      	add	r3, fp
 801d0ec:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d0f0:	9b01      	ldr	r3, [sp, #4]
 801d0f2:	3301      	adds	r3, #1
 801d0f4:	b29b      	uxth	r3, r3
 801d0f6:	9907      	ldr	r1, [sp, #28]
 801d0f8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801d0fc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d100:	7108      	strb	r0, [r1, #4]
 801d102:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d104:	80c8      	strh	r0, [r1, #6]
 801d106:	9801      	ldr	r0, [sp, #4]
 801d108:	3001      	adds	r0, #1
 801d10a:	7148      	strb	r0, [r1, #5]
 801d10c:	9907      	ldr	r1, [sp, #28]
 801d10e:	3101      	adds	r1, #1
 801d110:	b289      	uxth	r1, r1
 801d112:	9107      	str	r1, [sp, #28]
 801d114:	e7df      	b.n	801d0d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801d116:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801d11a:	4611      	mov	r1, r2
 801d11c:	795b      	ldrb	r3, [r3, #5]
 801d11e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801d122:	4458      	add	r0, fp
 801d124:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801d126:	4406      	add	r6, r0
 801d128:	2e00      	cmp	r6, #0
 801d12a:	dd06      	ble.n	801d13a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801d12c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d130:	790e      	ldrb	r6, [r1, #4]
 801d132:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d136:	88c9      	ldrh	r1, [r1, #6]
 801d138:	e7f4      	b.n	801d124 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801d13a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801d13e:	b29b      	uxth	r3, r3
 801d140:	e7c5      	b.n	801d0ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801d142:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d144:	920b      	str	r2, [sp, #44]	; 0x2c
 801d146:	4621      	mov	r1, r4
 801d148:	469e      	mov	lr, r3
 801d14a:	e78f      	b.n	801d06c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801d14c:	9a03      	ldr	r2, [sp, #12]
 801d14e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d152:	442a      	add	r2, r5
 801d154:	ebae 0305 	sub.w	r3, lr, r5
 801d158:	b292      	uxth	r2, r2
 801d15a:	b29b      	uxth	r3, r3
 801d15c:	9203      	str	r2, [sp, #12]
 801d15e:	2500      	movs	r5, #0
 801d160:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d162:	4542      	cmp	r2, r8
 801d164:	d88e      	bhi.n	801d084 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801d166:	4621      	mov	r1, r4
 801d168:	e74e      	b.n	801d008 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801d16a:	458e      	cmp	lr, r1
 801d16c:	bf29      	itett	cs
 801d16e:	ebae 0301 	subcs.w	r3, lr, r1
 801d172:	eba1 040e 	subcc.w	r4, r1, lr
 801d176:	b29b      	uxthcs	r3, r3
 801d178:	910c      	strcs	r1, [sp, #48]	; 0x30
 801d17a:	bf2f      	iteee	cs
 801d17c:	462c      	movcs	r4, r5
 801d17e:	b2a4      	uxthcc	r4, r4
 801d180:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801d184:	462b      	movcc	r3, r5
 801d186:	f04f 0900 	mov.w	r9, #0
 801d18a:	9a03      	ldr	r2, [sp, #12]
 801d18c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d18e:	444a      	add	r2, r9
 801d190:	4548      	cmp	r0, r9
 801d192:	b292      	uxth	r2, r2
 801d194:	d074      	beq.n	801d280 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801d196:	445a      	add	r2, fp
 801d198:	2004      	movs	r0, #4
 801d19a:	4605      	mov	r5, r0
 801d19c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801d1a0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d1a2:	fb15 0202 	smlabb	r2, r5, r2, r0
 801d1a6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d1a8:	5880      	ldr	r0, [r0, r2]
 801d1aa:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801d1ae:	d014      	beq.n	801d1da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d1b0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d1b4:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801d1b8:	d112      	bne.n	801d1e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d1ba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d1bc:	2aff      	cmp	r2, #255	; 0xff
 801d1be:	d10f      	bne.n	801d1e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d1c0:	0942      	lsrs	r2, r0, #5
 801d1c2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d1c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d1ca:	f025 0507 	bic.w	r5, r5, #7
 801d1ce:	4315      	orrs	r5, r2
 801d1d0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d1d4:	4305      	orrs	r5, r0
 801d1d6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d1da:	f109 0901 	add.w	r9, r9, #1
 801d1de:	e7d4      	b.n	801d18a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d1e0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d1e4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d1e8:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801d1ec:	9215      	str	r2, [sp, #84]	; 0x54
 801d1ee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d1f0:	fb02 fa0a 	mul.w	sl, r2, sl
 801d1f4:	f10a 0201 	add.w	r2, sl, #1
 801d1f8:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d1fc:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d200:	1212      	asrs	r2, r2, #8
 801d202:	fa1f fa82 	uxth.w	sl, r2
 801d206:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d20a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d20e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d212:	43d2      	mvns	r2, r2
 801d214:	b2d2      	uxtb	r2, r2
 801d216:	fb16 f60a 	smulbb	r6, r6, sl
 801d21a:	fa5f fc8c 	uxtb.w	ip, ip
 801d21e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d222:	b2c0      	uxtb	r0, r0
 801d224:	fb07 6702 	mla	r7, r7, r2, r6
 801d228:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d22c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d22e:	fb10 f00a 	smulbb	r0, r0, sl
 801d232:	fb0c 0002 	mla	r0, ip, r2, r0
 801d236:	b2ed      	uxtb	r5, r5
 801d238:	b2bf      	uxth	r7, r7
 801d23a:	fb15 f50a 	smulbb	r5, r5, sl
 801d23e:	b280      	uxth	r0, r0
 801d240:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d244:	fb06 5602 	mla	r6, r6, r2, r5
 801d248:	1c7a      	adds	r2, r7, #1
 801d24a:	1c45      	adds	r5, r0, #1
 801d24c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d250:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d254:	b2b6      	uxth	r6, r6
 801d256:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d25a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d25e:	432f      	orrs	r7, r5
 801d260:	1c75      	adds	r5, r6, #1
 801d262:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d266:	096d      	lsrs	r5, r5, #5
 801d268:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d26c:	432f      	orrs	r7, r5
 801d26e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d272:	e7b2      	b.n	801d1da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d274:	200132bc 	.word	0x200132bc
 801d278:	200132b6 	.word	0x200132b6
 801d27c:	fffff7fb 	.word	0xfffff7fb
 801d280:	9203      	str	r2, [sp, #12]
 801d282:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d284:	458e      	cmp	lr, r1
 801d286:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d28a:	f4ff af68 	bcc.w	801d15e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d28e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d290:	9906      	ldr	r1, [sp, #24]
 801d292:	8812      	ldrh	r2, [r2, #0]
 801d294:	1a52      	subs	r2, r2, r1
 801d296:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d29a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d29c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d29e:	3201      	adds	r2, #1
 801d2a0:	428a      	cmp	r2, r1
 801d2a2:	9209      	str	r2, [sp, #36]	; 0x24
 801d2a4:	d111      	bne.n	801d2ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d2a6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d2aa:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d2ae:	9b06      	ldr	r3, [sp, #24]
 801d2b0:	eba5 0509 	sub.w	r5, r5, r9
 801d2b4:	b2ad      	uxth	r5, r5
 801d2b6:	2d00      	cmp	r5, #0
 801d2b8:	bf08      	it	eq
 801d2ba:	4619      	moveq	r1, r3
 801d2bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d2be:	bf18      	it	ne
 801d2c0:	2100      	movne	r1, #0
 801d2c2:	3301      	adds	r3, #1
 801d2c4:	930d      	str	r3, [sp, #52]	; 0x34
 801d2c6:	b289      	uxth	r1, r1
 801d2c8:	e695      	b.n	801cff6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d2ca:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d2ce:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d2d2:	1b2d      	subs	r5, r5, r4
 801d2d4:	b2ad      	uxth	r5, r5
 801d2d6:	2d00      	cmp	r5, #0
 801d2d8:	bf18      	it	ne
 801d2da:	2400      	movne	r4, #0
 801d2dc:	e740      	b.n	801d160 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d2de:	4b04      	ldr	r3, [pc, #16]	; (801d2f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d2e0:	6818      	ldr	r0, [r3, #0]
 801d2e2:	6803      	ldr	r3, [r0, #0]
 801d2e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d2e6:	4798      	blx	r3
 801d2e8:	b01d      	add	sp, #116	; 0x74
 801d2ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2ee:	bf00      	nop
 801d2f0:	200132bc 	.word	0x200132bc

0801d2f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d2f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d2f8:	b09f      	sub	sp, #124	; 0x7c
 801d2fa:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d2fe:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d302:	920a      	str	r2, [sp, #40]	; 0x28
 801d304:	461d      	mov	r5, r3
 801d306:	4604      	mov	r4, r0
 801d308:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d30a:	2a00      	cmp	r2, #0
 801d30c:	f000 81fa 	beq.w	801d704 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d310:	6828      	ldr	r0, [r5, #0]
 801d312:	6869      	ldr	r1, [r5, #4]
 801d314:	aa1a      	add	r2, sp, #104	; 0x68
 801d316:	c203      	stmia	r2!, {r0, r1}
 801d318:	6818      	ldr	r0, [r3, #0]
 801d31a:	6859      	ldr	r1, [r3, #4]
 801d31c:	aa1c      	add	r2, sp, #112	; 0x70
 801d31e:	c203      	stmia	r2!, {r0, r1}
 801d320:	a81a      	add	r0, sp, #104	; 0x68
 801d322:	f7f8 fb51 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d326:	4629      	mov	r1, r5
 801d328:	a81c      	add	r0, sp, #112	; 0x70
 801d32a:	f7f8 fb91 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d32e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d332:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d336:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d33a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d33e:	bfd7      	itett	le
 801d340:	b29a      	uxthle	r2, r3
 801d342:	2201      	movgt	r2, #1
 801d344:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d348:	fb91 f2f2 	sdivle	r2, r1, r2
 801d34c:	9201      	str	r2, [sp, #4]
 801d34e:	9801      	ldr	r0, [sp, #4]
 801d350:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d354:	fb92 f0f0 	sdiv	r0, r2, r0
 801d358:	b280      	uxth	r0, r0
 801d35a:	9010      	str	r0, [sp, #64]	; 0x40
 801d35c:	9901      	ldr	r1, [sp, #4]
 801d35e:	9801      	ldr	r0, [sp, #4]
 801d360:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d362:	440e      	add	r6, r1
 801d364:	fb05 2510 	mls	r5, r5, r0, r2
 801d368:	fb15 f503 	smulbb	r5, r5, r3
 801d36c:	3e01      	subs	r6, #1
 801d36e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d372:	fb96 f6f1 	sdiv	r6, r6, r1
 801d376:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d37a:	440d      	add	r5, r1
 801d37c:	4419      	add	r1, r3
 801d37e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d382:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d386:	441a      	add	r2, r3
 801d388:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d38c:	9304      	str	r3, [sp, #16]
 801d38e:	4b96      	ldr	r3, [pc, #600]	; (801d5e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d390:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d394:	6818      	ldr	r0, [r3, #0]
 801d396:	6803      	ldr	r3, [r0, #0]
 801d398:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d39a:	4798      	blx	r3
 801d39c:	4b93      	ldr	r3, [pc, #588]	; (801d5ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d39e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d3a2:	881a      	ldrh	r2, [r3, #0]
 801d3a4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d3a8:	9318      	str	r3, [sp, #96]	; 0x60
 801d3aa:	fb02 c101 	mla	r1, r2, r1, ip
 801d3ae:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d3b2:	4357      	muls	r7, r2
 801d3b4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d3b8:	3601      	adds	r6, #1
 801d3ba:	920b      	str	r2, [sp, #44]	; 0x2c
 801d3bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d3be:	4b8c      	ldr	r3, [pc, #560]	; (801d5f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d3c0:	b2b6      	uxth	r6, r6
 801d3c2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d3c6:	1d32      	adds	r2, r6, #4
 801d3c8:	9206      	str	r2, [sp, #24]
 801d3ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d3cc:	43d2      	mvns	r2, r2
 801d3ce:	b2d2      	uxtb	r2, r2
 801d3d0:	b2ad      	uxth	r5, r5
 801d3d2:	9215      	str	r2, [sp, #84]	; 0x54
 801d3d4:	9a04      	ldr	r2, [sp, #16]
 801d3d6:	2d00      	cmp	r5, #0
 801d3d8:	bf0c      	ite	eq
 801d3da:	4611      	moveq	r1, r2
 801d3dc:	2100      	movne	r1, #0
 801d3de:	2200      	movs	r2, #0
 801d3e0:	1b1b      	subs	r3, r3, r4
 801d3e2:	b289      	uxth	r1, r1
 801d3e4:	920d      	str	r2, [sp, #52]	; 0x34
 801d3e6:	9319      	str	r3, [sp, #100]	; 0x64
 801d3e8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d3ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d3ec:	fa12 f383 	uxtah	r3, r2, r3
 801d3f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d3f2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d3f6:	3304      	adds	r3, #4
 801d3f8:	9307      	str	r3, [sp, #28]
 801d3fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3fc:	455b      	cmp	r3, fp
 801d3fe:	f240 817c 	bls.w	801d6fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d402:	9a01      	ldr	r2, [sp, #4]
 801d404:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d408:	fbb5 f3f3 	udiv	r3, r5, r3
 801d40c:	1ad3      	subs	r3, r2, r3
 801d40e:	b29b      	uxth	r3, r3
 801d410:	9316      	str	r3, [sp, #88]	; 0x58
 801d412:	9b07      	ldr	r3, [sp, #28]
 801d414:	9807      	ldr	r0, [sp, #28]
 801d416:	785a      	ldrb	r2, [r3, #1]
 801d418:	789b      	ldrb	r3, [r3, #2]
 801d41a:	7800      	ldrb	r0, [r0, #0]
 801d41c:	9011      	str	r0, [sp, #68]	; 0x44
 801d41e:	021b      	lsls	r3, r3, #8
 801d420:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d424:	9a07      	ldr	r2, [sp, #28]
 801d426:	78d2      	ldrb	r2, [r2, #3]
 801d428:	4313      	orrs	r3, r2
 801d42a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d42c:	3001      	adds	r0, #1
 801d42e:	441a      	add	r2, r3
 801d430:	9005      	str	r0, [sp, #20]
 801d432:	1c50      	adds	r0, r2, #1
 801d434:	9003      	str	r0, [sp, #12]
 801d436:	7852      	ldrb	r2, [r2, #1]
 801d438:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d43a:	0212      	lsls	r2, r2, #8
 801d43c:	5cc3      	ldrb	r3, [r0, r3]
 801d43e:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d442:	431a      	orrs	r2, r3
 801d444:	b293      	uxth	r3, r2
 801d446:	930c      	str	r3, [sp, #48]	; 0x30
 801d448:	2300      	movs	r3, #0
 801d44a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d44e:	9308      	str	r3, [sp, #32]
 801d450:	461a      	mov	r2, r3
 801d452:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d456:	930e      	str	r3, [sp, #56]	; 0x38
 801d458:	f04f 0801 	mov.w	r8, #1
 801d45c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d460:	f8cd 8008 	str.w	r8, [sp, #8]
 801d464:	46c4      	mov	ip, r8
 801d466:	930f      	str	r3, [sp, #60]	; 0x3c
 801d468:	2d00      	cmp	r5, #0
 801d46a:	d07c      	beq.n	801d566 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d46c:	45ac      	cmp	ip, r5
 801d46e:	d26c      	bcs.n	801d54a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d470:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d472:	eba5 050c 	sub.w	r5, r5, ip
 801d476:	455b      	cmp	r3, fp
 801d478:	b2ad      	uxth	r5, r5
 801d47a:	4608      	mov	r0, r1
 801d47c:	d802      	bhi.n	801d484 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d47e:	e070      	b.n	801d562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d480:	2b00      	cmp	r3, #0
 801d482:	d15c      	bne.n	801d53e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d484:	9b03      	ldr	r3, [sp, #12]
 801d486:	9a02      	ldr	r2, [sp, #8]
 801d488:	785b      	ldrb	r3, [r3, #1]
 801d48a:	9902      	ldr	r1, [sp, #8]
 801d48c:	f1c2 0207 	rsb	r2, r2, #7
 801d490:	4093      	lsls	r3, r2
 801d492:	005b      	lsls	r3, r3, #1
 801d494:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d498:	9b03      	ldr	r3, [sp, #12]
 801d49a:	781b      	ldrb	r3, [r3, #0]
 801d49c:	410b      	asrs	r3, r1
 801d49e:	3101      	adds	r1, #1
 801d4a0:	b2c9      	uxtb	r1, r1
 801d4a2:	2908      	cmp	r1, #8
 801d4a4:	9102      	str	r1, [sp, #8]
 801d4a6:	9903      	ldr	r1, [sp, #12]
 801d4a8:	bf0a      	itet	eq
 801d4aa:	3102      	addeq	r1, #2
 801d4ac:	3101      	addne	r1, #1
 801d4ae:	9103      	streq	r1, [sp, #12]
 801d4b0:	b2db      	uxtb	r3, r3
 801d4b2:	bf0a      	itet	eq
 801d4b4:	2100      	moveq	r1, #0
 801d4b6:	9103      	strne	r1, [sp, #12]
 801d4b8:	9102      	streq	r1, [sp, #8]
 801d4ba:	4313      	orrs	r3, r2
 801d4bc:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d4be:	b29a      	uxth	r2, r3
 801d4c0:	4291      	cmp	r1, r2
 801d4c2:	d30a      	bcc.n	801d4da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d4c4:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d4c8:	2301      	movs	r3, #1
 801d4ca:	9905      	ldr	r1, [sp, #20]
 801d4cc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d4d0:	d30f      	bcc.n	801d4f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d4d2:	2100      	movs	r1, #0
 801d4d4:	4698      	mov	r8, r3
 801d4d6:	9100      	str	r1, [sp, #0]
 801d4d8:	e032      	b.n	801d540 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d4da:	9b05      	ldr	r3, [sp, #20]
 801d4dc:	429a      	cmp	r2, r3
 801d4de:	d318      	bcc.n	801d512 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d4e0:	eb04 0308 	add.w	r3, r4, r8
 801d4e4:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d4e8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d4ec:	f108 0301 	add.w	r3, r8, #1
 801d4f0:	b29b      	uxth	r3, r3
 801d4f2:	9905      	ldr	r1, [sp, #20]
 801d4f4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d4f8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d4fc:	710e      	strb	r6, [r1, #4]
 801d4fe:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d500:	80ce      	strh	r6, [r1, #6]
 801d502:	f108 0601 	add.w	r6, r8, #1
 801d506:	714e      	strb	r6, [r1, #5]
 801d508:	9905      	ldr	r1, [sp, #20]
 801d50a:	3101      	adds	r1, #1
 801d50c:	b289      	uxth	r1, r1
 801d50e:	9105      	str	r1, [sp, #20]
 801d510:	e7df      	b.n	801d4d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d512:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d516:	4611      	mov	r1, r2
 801d518:	795b      	ldrb	r3, [r3, #5]
 801d51a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d51e:	4426      	add	r6, r4
 801d520:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d522:	4437      	add	r7, r6
 801d524:	2f00      	cmp	r7, #0
 801d526:	dd06      	ble.n	801d536 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d528:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d52c:	790f      	ldrb	r7, [r1, #4]
 801d52e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d532:	88c9      	ldrh	r1, [r1, #6]
 801d534:	e7f4      	b.n	801d520 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d536:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d53a:	b29b      	uxth	r3, r3
 801d53c:	e7c5      	b.n	801d4ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d53e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d540:	920c      	str	r2, [sp, #48]	; 0x30
 801d542:	4601      	mov	r1, r0
 801d544:	9a00      	ldr	r2, [sp, #0]
 801d546:	469c      	mov	ip, r3
 801d548:	e78e      	b.n	801d468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d54a:	1957      	adds	r7, r2, r5
 801d54c:	ebac 0305 	sub.w	r3, ip, r5
 801d550:	b2ba      	uxth	r2, r7
 801d552:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d556:	9200      	str	r2, [sp, #0]
 801d558:	b29b      	uxth	r3, r3
 801d55a:	2500      	movs	r5, #0
 801d55c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d55e:	455a      	cmp	r2, fp
 801d560:	d88e      	bhi.n	801d480 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d562:	4601      	mov	r1, r0
 801d564:	e749      	b.n	801d3fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d566:	458c      	cmp	ip, r1
 801d568:	bf2c      	ite	cs
 801d56a:	4628      	movcs	r0, r5
 801d56c:	462b      	movcc	r3, r5
 801d56e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d570:	bf27      	ittee	cs
 801d572:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d574:	ebac 0301 	subcs.w	r3, ip, r1
 801d578:	eba1 000c 	subcc.w	r0, r1, ip
 801d57c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d580:	bf2c      	ite	cs
 801d582:	b29b      	uxthcs	r3, r3
 801d584:	b280      	uxthcc	r0, r0
 801d586:	2dff      	cmp	r5, #255	; 0xff
 801d588:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d58a:	eb02 0705 	add.w	r7, r2, r5
 801d58e:	b2bd      	uxth	r5, r7
 801d590:	9500      	str	r5, [sp, #0]
 801d592:	d12f      	bne.n	801d5f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d594:	465e      	mov	r6, fp
 801d596:	9d00      	ldr	r5, [sp, #0]
 801d598:	42aa      	cmp	r2, r5
 801d59a:	f040 8084 	bne.w	801d6a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d59e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d5a0:	458c      	cmp	ip, r1
 801d5a2:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d5a6:	d3d8      	bcc.n	801d55a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d5a8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d5aa:	9904      	ldr	r1, [sp, #16]
 801d5ac:	8812      	ldrh	r2, [r2, #0]
 801d5ae:	1a52      	subs	r2, r2, r1
 801d5b0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d5b4:	9a08      	ldr	r2, [sp, #32]
 801d5b6:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d5b8:	3201      	adds	r2, #1
 801d5ba:	428a      	cmp	r2, r1
 801d5bc:	9208      	str	r2, [sp, #32]
 801d5be:	f040 8092 	bne.w	801d6e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d5c2:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d5c6:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d5ca:	9b04      	ldr	r3, [sp, #16]
 801d5cc:	eba5 050c 	sub.w	r5, r5, ip
 801d5d0:	b2ad      	uxth	r5, r5
 801d5d2:	2d00      	cmp	r5, #0
 801d5d4:	bf08      	it	eq
 801d5d6:	4619      	moveq	r1, r3
 801d5d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d5da:	bf18      	it	ne
 801d5dc:	2100      	movne	r1, #0
 801d5de:	3301      	adds	r3, #1
 801d5e0:	930d      	str	r3, [sp, #52]	; 0x34
 801d5e2:	b289      	uxth	r1, r1
 801d5e4:	e700      	b.n	801d3e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d5e6:	bf00      	nop
 801d5e8:	200132bc 	.word	0x200132bc
 801d5ec:	200132b6 	.word	0x200132b6
 801d5f0:	fffff7fb 	.word	0xfffff7fb
 801d5f4:	46d9      	mov	r9, fp
 801d5f6:	9d00      	ldr	r5, [sp, #0]
 801d5f8:	42aa      	cmp	r2, r5
 801d5fa:	d0d0      	beq.n	801d59e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d5fc:	1c55      	adds	r5, r2, #1
 801d5fe:	4422      	add	r2, r4
 801d600:	9517      	str	r5, [sp, #92]	; 0x5c
 801d602:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d606:	9a06      	ldr	r2, [sp, #24]
 801d608:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d60c:	4472      	add	r2, lr
 801d60e:	9212      	str	r2, [sp, #72]	; 0x48
 801d610:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d612:	f8b9 2000 	ldrh.w	r2, [r9]
 801d616:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d61a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d61c:	1216      	asrs	r6, r2, #8
 801d61e:	fb1a fa07 	smulbb	sl, sl, r7
 801d622:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d626:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d628:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d62c:	fb06 a607 	mla	r6, r6, r7, sl
 801d630:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d632:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d636:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d638:	10d5      	asrs	r5, r2, #3
 801d63a:	fb1a fa07 	smulbb	sl, sl, r7
 801d63e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d642:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d644:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d648:	fb05 a507 	mla	r5, r5, r7, sl
 801d64c:	9f06      	ldr	r7, [sp, #24]
 801d64e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d652:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d654:	00d2      	lsls	r2, r2, #3
 801d656:	fb1e fe07 	smulbb	lr, lr, r7
 801d65a:	b2d2      	uxtb	r2, r2
 801d65c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d65e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d662:	b2b6      	uxth	r6, r6
 801d664:	fb02 e207 	mla	r2, r2, r7, lr
 801d668:	b292      	uxth	r2, r2
 801d66a:	b2ad      	uxth	r5, r5
 801d66c:	f106 0a01 	add.w	sl, r6, #1
 801d670:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d674:	f102 0e01 	add.w	lr, r2, #1
 801d678:	f105 0a01 	add.w	sl, r5, #1
 801d67c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d680:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d684:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d688:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d68c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d690:	ea4e 0606 	orr.w	r6, lr, r6
 801d694:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d698:	ea46 060a 	orr.w	r6, r6, sl
 801d69c:	f829 6b02 	strh.w	r6, [r9], #2
 801d6a0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d6a4:	e7a7      	b.n	801d5f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d6a6:	f102 0e01 	add.w	lr, r2, #1
 801d6aa:	4422      	add	r2, r4
 801d6ac:	9f06      	ldr	r7, [sp, #24]
 801d6ae:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d6b2:	9a06      	ldr	r2, [sp, #24]
 801d6b4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d6b8:	eb02 0a05 	add.w	sl, r2, r5
 801d6bc:	4a13      	ldr	r2, [pc, #76]	; (801d70c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d6be:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d6c2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d6c6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d6ca:	00d2      	lsls	r2, r2, #3
 801d6cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d6d0:	ea49 0202 	orr.w	r2, r9, r2
 801d6d4:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d6d8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d6dc:	f826 2b02 	strh.w	r2, [r6], #2
 801d6e0:	fa1f f28e 	uxth.w	r2, lr
 801d6e4:	e757      	b.n	801d596 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d6e6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d6ea:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d6ee:	1a2d      	subs	r5, r5, r0
 801d6f0:	b2ad      	uxth	r5, r5
 801d6f2:	2d00      	cmp	r5, #0
 801d6f4:	bf18      	it	ne
 801d6f6:	2000      	movne	r0, #0
 801d6f8:	e730      	b.n	801d55c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d6fa:	4b05      	ldr	r3, [pc, #20]	; (801d710 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d6fc:	6818      	ldr	r0, [r3, #0]
 801d6fe:	6803      	ldr	r3, [r0, #0]
 801d700:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d702:	4798      	blx	r3
 801d704:	b01f      	add	sp, #124	; 0x7c
 801d706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d70a:	bf00      	nop
 801d70c:	fffff800 	.word	0xfffff800
 801d710:	200132bc 	.word	0x200132bc

0801d714 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d718:	b091      	sub	sp, #68	; 0x44
 801d71a:	469b      	mov	fp, r3
 801d71c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d720:	4616      	mov	r6, r2
 801d722:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d726:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d72a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d72e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d732:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d736:	4604      	mov	r4, r0
 801d738:	460d      	mov	r5, r1
 801d73a:	4640      	mov	r0, r8
 801d73c:	4659      	mov	r1, fp
 801d73e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d742:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d746:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d74a:	f7f2 fb9f 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 801d74e:	4631      	mov	r1, r6
 801d750:	4640      	mov	r0, r8
 801d752:	f7f2 fb9b 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 801d756:	4b74      	ldr	r3, [pc, #464]	; (801d928 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d758:	8818      	ldrh	r0, [r3, #0]
 801d75a:	4b74      	ldr	r3, [pc, #464]	; (801d92c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d75c:	8819      	ldrh	r1, [r3, #0]
 801d75e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d762:	2b00      	cmp	r3, #0
 801d764:	b202      	sxth	r2, r0
 801d766:	b20e      	sxth	r6, r1
 801d768:	da07      	bge.n	801d77a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d76a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d76e:	4463      	add	r3, ip
 801d770:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d774:	2300      	movs	r3, #0
 801d776:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d77a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d77e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d782:	1ad2      	subs	r2, r2, r3
 801d784:	4594      	cmp	ip, r2
 801d786:	bfc4      	itt	gt
 801d788:	1ac2      	subgt	r2, r0, r3
 801d78a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d78e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d792:	2a00      	cmp	r2, #0
 801d794:	da07      	bge.n	801d7a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d796:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d79a:	4462      	add	r2, ip
 801d79c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d7a0:	2200      	movs	r2, #0
 801d7a2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d7a6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d7aa:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d7ae:	eba6 060a 	sub.w	r6, r6, sl
 801d7b2:	42b2      	cmp	r2, r6
 801d7b4:	bfc4      	itt	gt
 801d7b6:	eba1 020a 	subgt.w	r2, r1, sl
 801d7ba:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801d7be:	4a5c      	ldr	r2, [pc, #368]	; (801d930 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801d7c0:	7812      	ldrb	r2, [r2, #0]
 801d7c2:	b9a2      	cbnz	r2, 801d7ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801d7c4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d7c8:	4286      	cmp	r6, r0
 801d7ca:	4640      	mov	r0, r8
 801d7cc:	9303      	str	r3, [sp, #12]
 801d7ce:	bf14      	ite	ne
 801d7d0:	2600      	movne	r6, #0
 801d7d2:	2601      	moveq	r6, #1
 801d7d4:	f7f2 fb9d 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d7d8:	9b03      	ldr	r3, [sp, #12]
 801d7da:	b160      	cbz	r0, 801d7f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801d7dc:	2300      	movs	r3, #0
 801d7de:	8023      	strh	r3, [r4, #0]
 801d7e0:	8063      	strh	r3, [r4, #2]
 801d7e2:	80a3      	strh	r3, [r4, #4]
 801d7e4:	4620      	mov	r0, r4
 801d7e6:	80e3      	strh	r3, [r4, #6]
 801d7e8:	b011      	add	sp, #68	; 0x44
 801d7ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7ee:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d7f2:	428e      	cmp	r6, r1
 801d7f4:	e7e9      	b.n	801d7ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801d7f6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d7fa:	9205      	str	r2, [sp, #20]
 801d7fc:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d800:	9206      	str	r2, [sp, #24]
 801d802:	f8bb 2000 	ldrh.w	r2, [fp]
 801d806:	900e      	str	r0, [sp, #56]	; 0x38
 801d808:	1a9b      	subs	r3, r3, r2
 801d80a:	b21b      	sxth	r3, r3
 801d80c:	9303      	str	r3, [sp, #12]
 801d80e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d812:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801d816:	ebaa 0a03 	sub.w	sl, sl, r3
 801d81a:	fa0f f38a 	sxth.w	r3, sl
 801d81e:	9304      	str	r3, [sp, #16]
 801d820:	9b03      	ldr	r3, [sp, #12]
 801d822:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801d826:	9b04      	ldr	r3, [sp, #16]
 801d828:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d82c:	9b05      	ldr	r3, [sp, #20]
 801d82e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801d832:	a90e      	add	r1, sp, #56	; 0x38
 801d834:	9b06      	ldr	r3, [sp, #24]
 801d836:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801d83a:	a80c      	add	r0, sp, #48	; 0x30
 801d83c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801d840:	f7f8 f906 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d844:	4640      	mov	r0, r8
 801d846:	f7f8 f8bf 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d84a:	a80e      	add	r0, sp, #56	; 0x38
 801d84c:	f7f8 f8bc 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d850:	4b38      	ldr	r3, [pc, #224]	; (801d934 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801d852:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801d856:	881b      	ldrh	r3, [r3, #0]
 801d858:	9307      	str	r3, [sp, #28]
 801d85a:	682b      	ldr	r3, [r5, #0]
 801d85c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801d938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d860:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d862:	4628      	mov	r0, r5
 801d864:	4798      	blx	r3
 801d866:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801d86a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801d86e:	4681      	mov	r9, r0
 801d870:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801d874:	f8db 0000 	ldr.w	r0, [fp]
 801d878:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d87a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d87e:	6803      	ldr	r3, [r0, #0]
 801d880:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d882:	4798      	blx	r3
 801d884:	4607      	mov	r7, r0
 801d886:	f8db 0000 	ldr.w	r0, [fp]
 801d88a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801d88e:	6803      	ldr	r3, [r0, #0]
 801d890:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d894:	9109      	str	r1, [sp, #36]	; 0x24
 801d896:	9208      	str	r2, [sp, #32]
 801d898:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d89a:	4798      	blx	r3
 801d89c:	f010 0f01 	tst.w	r0, #1
 801d8a0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d8a4:	d012      	beq.n	801d8cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801d8a6:	f8db 0000 	ldr.w	r0, [fp]
 801d8aa:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801d8ae:	6803      	ldr	r3, [r0, #0]
 801d8b0:	9200      	str	r2, [sp, #0]
 801d8b2:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801d8b4:	e898 0006 	ldmia.w	r8, {r1, r2}
 801d8b8:	462b      	mov	r3, r5
 801d8ba:	47b0      	blx	r6
 801d8bc:	9b03      	ldr	r3, [sp, #12]
 801d8be:	8023      	strh	r3, [r4, #0]
 801d8c0:	9b04      	ldr	r3, [sp, #16]
 801d8c2:	8063      	strh	r3, [r4, #2]
 801d8c4:	9b05      	ldr	r3, [sp, #20]
 801d8c6:	80a3      	strh	r3, [r4, #4]
 801d8c8:	9b06      	ldr	r3, [sp, #24]
 801d8ca:	e78b      	b.n	801d7e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801d8cc:	fb09 f202 	mul.w	r2, r9, r2
 801d8d0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801d8d4:	440f      	add	r7, r1
 801d8d6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801d8da:	b166      	cbz	r6, 801d8f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d8dc:	9a07      	ldr	r2, [sp, #28]
 801d8de:	4592      	cmp	sl, r2
 801d8e0:	d109      	bne.n	801d8f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d8e2:	f8db 0000 	ldr.w	r0, [fp]
 801d8e6:	6802      	ldr	r2, [r0, #0]
 801d8e8:	fb09 f303 	mul.w	r3, r9, r3
 801d8ec:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801d8ee:	4629      	mov	r1, r5
 801d8f0:	463a      	mov	r2, r7
 801d8f2:	47b0      	blx	r6
 801d8f4:	e7e2      	b.n	801d8bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d8f6:	fb0a f303 	mul.w	r3, sl, r3
 801d8fa:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801d938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d8fe:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801d902:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801d906:	4545      	cmp	r5, r8
 801d908:	d2d8      	bcs.n	801d8bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d90a:	f8db 0000 	ldr.w	r0, [fp]
 801d90e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d912:	6802      	ldr	r2, [r0, #0]
 801d914:	4629      	mov	r1, r5
 801d916:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801d91a:	005b      	lsls	r3, r3, #1
 801d91c:	463a      	mov	r2, r7
 801d91e:	47d0      	blx	sl
 801d920:	444f      	add	r7, r9
 801d922:	4435      	add	r5, r6
 801d924:	e7ef      	b.n	801d906 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801d926:	bf00      	nop
 801d928:	200132b0 	.word	0x200132b0
 801d92c:	200132b2 	.word	0x200132b2
 801d930:	200132b4 	.word	0x200132b4
 801d934:	200132b6 	.word	0x200132b6
 801d938:	200132bc 	.word	0x200132bc

0801d93c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801d93c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d93e:	4606      	mov	r6, r0
 801d940:	b087      	sub	sp, #28
 801d942:	460c      	mov	r4, r1
 801d944:	4617      	mov	r7, r2
 801d946:	461d      	mov	r5, r3
 801d948:	b333      	cbz	r3, 801d998 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d94a:	4608      	mov	r0, r1
 801d94c:	f7f2 fae1 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d950:	bb10      	cbnz	r0, 801d998 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d952:	6820      	ldr	r0, [r4, #0]
 801d954:	6861      	ldr	r1, [r4, #4]
 801d956:	4c1c      	ldr	r4, [pc, #112]	; (801d9c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801d958:	ab04      	add	r3, sp, #16
 801d95a:	c303      	stmia	r3!, {r0, r1}
 801d95c:	a804      	add	r0, sp, #16
 801d95e:	f7f8 f833 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d962:	6820      	ldr	r0, [r4, #0]
 801d964:	6803      	ldr	r3, [r0, #0]
 801d966:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d968:	4798      	blx	r3
 801d96a:	2dff      	cmp	r5, #255	; 0xff
 801d96c:	d016      	beq.n	801d99c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801d96e:	f010 0f08 	tst.w	r0, #8
 801d972:	6820      	ldr	r0, [r4, #0]
 801d974:	d015      	beq.n	801d9a2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801d976:	2400      	movs	r4, #0
 801d978:	6801      	ldr	r1, [r0, #0]
 801d97a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801d97e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d982:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801d986:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801d98a:	9401      	str	r4, [sp, #4]
 801d98c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801d990:	9400      	str	r4, [sp, #0]
 801d992:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801d994:	4639      	mov	r1, r7
 801d996:	47a0      	blx	r4
 801d998:	b007      	add	sp, #28
 801d99a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d99c:	f010 0f02 	tst.w	r0, #2
 801d9a0:	e7e7      	b.n	801d972 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801d9a2:	6803      	ldr	r3, [r0, #0]
 801d9a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d9a6:	4798      	blx	r3
 801d9a8:	4b08      	ldr	r3, [pc, #32]	; (801d9cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801d9aa:	881a      	ldrh	r2, [r3, #0]
 801d9ac:	6833      	ldr	r3, [r6, #0]
 801d9ae:	e9cd 7500 	strd	r7, r5, [sp]
 801d9b2:	4601      	mov	r1, r0
 801d9b4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801d9b6:	4630      	mov	r0, r6
 801d9b8:	ab04      	add	r3, sp, #16
 801d9ba:	47a8      	blx	r5
 801d9bc:	6820      	ldr	r0, [r4, #0]
 801d9be:	6803      	ldr	r3, [r0, #0]
 801d9c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d9c2:	4798      	blx	r3
 801d9c4:	e7e8      	b.n	801d998 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d9c6:	bf00      	nop
 801d9c8:	200132bc 	.word	0x200132bc
 801d9cc:	200132b6 	.word	0x200132b6

0801d9d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801d9d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d9d4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801d9d8:	9e08      	ldr	r6, [sp, #32]
 801d9da:	4688      	mov	r8, r1
 801d9dc:	4614      	mov	r4, r2
 801d9de:	461d      	mov	r5, r3
 801d9e0:	2f00      	cmp	r7, #0
 801d9e2:	f000 80a9 	beq.w	801db38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d9e6:	4618      	mov	r0, r3
 801d9e8:	f7f2 fa93 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d9ec:	2800      	cmp	r0, #0
 801d9ee:	f040 80a3 	bne.w	801db38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d9f2:	f9b5 1000 	ldrsh.w	r1, [r5]
 801d9f6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801d9fa:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801d9fe:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801da02:	fb04 1303 	mla	r3, r4, r3, r1
 801da06:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801da0a:	4365      	muls	r5, r4
 801da0c:	2fff      	cmp	r7, #255	; 0xff
 801da0e:	eba4 0200 	sub.w	r2, r4, r0
 801da12:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801da16:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801da1a:	d04a      	beq.n	801dab2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801da1c:	b2bc      	uxth	r4, r7
 801da1e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801da22:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801da26:	fa5f f788 	uxtb.w	r7, r8
 801da2a:	b2f3      	uxtb	r3, r6
 801da2c:	0040      	lsls	r0, r0, #1
 801da2e:	fb0e fe04 	mul.w	lr, lr, r4
 801da32:	4367      	muls	r7, r4
 801da34:	4363      	muls	r3, r4
 801da36:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801da3a:	fa1f fc8c 	uxth.w	ip, ip
 801da3e:	42a9      	cmp	r1, r5
 801da40:	d27a      	bcs.n	801db38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801da42:	eb01 0900 	add.w	r9, r1, r0
 801da46:	4549      	cmp	r1, r9
 801da48:	d231      	bcs.n	801daae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801da4a:	880a      	ldrh	r2, [r1, #0]
 801da4c:	1214      	asrs	r4, r2, #8
 801da4e:	10d6      	asrs	r6, r2, #3
 801da50:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801da54:	00d2      	lsls	r2, r2, #3
 801da56:	b2d2      	uxtb	r2, r2
 801da58:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801da5c:	fb14 f40c 	smulbb	r4, r4, ip
 801da60:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801da64:	4474      	add	r4, lr
 801da66:	fb12 f20c 	smulbb	r2, r2, ip
 801da6a:	b2a4      	uxth	r4, r4
 801da6c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801da70:	441a      	add	r2, r3
 801da72:	b292      	uxth	r2, r2
 801da74:	f104 0a01 	add.w	sl, r4, #1
 801da78:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801da7c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801da80:	fb16 f60c 	smulbb	r6, r6, ip
 801da84:	f102 0a01 	add.w	sl, r2, #1
 801da88:	443e      	add	r6, r7
 801da8a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801da8e:	b2b6      	uxth	r6, r6
 801da90:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801da94:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801da98:	4322      	orrs	r2, r4
 801da9a:	1c74      	adds	r4, r6, #1
 801da9c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801daa0:	0976      	lsrs	r6, r6, #5
 801daa2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801daa6:	4332      	orrs	r2, r6
 801daa8:	f821 2b02 	strh.w	r2, [r1], #2
 801daac:	e7cb      	b.n	801da46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801daae:	4441      	add	r1, r8
 801dab0:	e7c5      	b.n	801da3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801dab2:	4f22      	ldr	r7, [pc, #136]	; (801db3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801dab4:	0973      	lsrs	r3, r6, #5
 801dab6:	ea08 0707 	and.w	r7, r8, r7
 801daba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dabe:	433b      	orrs	r3, r7
 801dac0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801dac4:	4333      	orrs	r3, r6
 801dac6:	07e7      	lsls	r7, r4, #31
 801dac8:	b29b      	uxth	r3, r3
 801daca:	d50b      	bpl.n	801dae4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801dacc:	0040      	lsls	r0, r0, #1
 801dace:	0052      	lsls	r2, r2, #1
 801dad0:	42a9      	cmp	r1, r5
 801dad2:	d231      	bcs.n	801db38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dad4:	180c      	adds	r4, r1, r0
 801dad6:	42a1      	cmp	r1, r4
 801dad8:	d202      	bcs.n	801dae0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801dada:	f821 3b02 	strh.w	r3, [r1], #2
 801dade:	e7fa      	b.n	801dad6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801dae0:	4411      	add	r1, r2
 801dae2:	e7f5      	b.n	801dad0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801dae4:	078e      	lsls	r6, r1, #30
 801dae6:	d008      	beq.n	801dafa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801dae8:	0066      	lsls	r6, r4, #1
 801daea:	460a      	mov	r2, r1
 801daec:	42aa      	cmp	r2, r5
 801daee:	d202      	bcs.n	801daf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801daf0:	8013      	strh	r3, [r2, #0]
 801daf2:	4432      	add	r2, r6
 801daf4:	e7fa      	b.n	801daec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801daf6:	3102      	adds	r1, #2
 801daf8:	3801      	subs	r0, #1
 801dafa:	07c2      	lsls	r2, r0, #31
 801dafc:	d50b      	bpl.n	801db16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801dafe:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801db02:	3a01      	subs	r2, #1
 801db04:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801db08:	0066      	lsls	r6, r4, #1
 801db0a:	42aa      	cmp	r2, r5
 801db0c:	d202      	bcs.n	801db14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801db0e:	8013      	strh	r3, [r2, #0]
 801db10:	4432      	add	r2, r6
 801db12:	e7fa      	b.n	801db0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801db14:	3801      	subs	r0, #1
 801db16:	b178      	cbz	r0, 801db38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801db18:	1040      	asrs	r0, r0, #1
 801db1a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801db1e:	0080      	lsls	r0, r0, #2
 801db20:	0064      	lsls	r4, r4, #1
 801db22:	42a9      	cmp	r1, r5
 801db24:	d208      	bcs.n	801db38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801db26:	180e      	adds	r6, r1, r0
 801db28:	460a      	mov	r2, r1
 801db2a:	42b2      	cmp	r2, r6
 801db2c:	d202      	bcs.n	801db34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801db2e:	f842 3b04 	str.w	r3, [r2], #4
 801db32:	e7fa      	b.n	801db2a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801db34:	4421      	add	r1, r4
 801db36:	e7f4      	b.n	801db22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801db38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801db3c:	00fff800 	.word	0x00fff800

0801db40 <_ZN8touchgfx8LCD16bppC1Ev>:
 801db40:	2200      	movs	r2, #0
 801db42:	4912      	ldr	r1, [pc, #72]	; (801db8c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801db44:	6042      	str	r2, [r0, #4]
 801db46:	6001      	str	r1, [r0, #0]
 801db48:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801db4c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801db50:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801db54:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801db58:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801db5c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801db60:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801db64:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801db68:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801db6c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801db70:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801db74:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801db78:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801db7c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801db80:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801db84:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801db88:	4770      	bx	lr
 801db8a:	bf00      	nop
 801db8c:	0802f2f0 	.word	0x0802f2f0

0801db90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801db90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db94:	460d      	mov	r5, r1
 801db96:	b08d      	sub	sp, #52	; 0x34
 801db98:	4604      	mov	r4, r0
 801db9a:	6808      	ldr	r0, [r1, #0]
 801db9c:	6849      	ldr	r1, [r1, #4]
 801db9e:	4699      	mov	r9, r3
 801dba0:	ab08      	add	r3, sp, #32
 801dba2:	c303      	stmia	r3!, {r0, r1}
 801dba4:	6810      	ldr	r0, [r2, #0]
 801dba6:	6851      	ldr	r1, [r2, #4]
 801dba8:	ab0a      	add	r3, sp, #40	; 0x28
 801dbaa:	c303      	stmia	r3!, {r0, r1}
 801dbac:	a808      	add	r0, sp, #32
 801dbae:	f7f7 ff0b 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dbb2:	4629      	mov	r1, r5
 801dbb4:	a80a      	add	r0, sp, #40	; 0x28
 801dbb6:	f7f7 ff4b 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dbba:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801dbbe:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801dbc2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801dbc6:	4d63      	ldr	r5, [pc, #396]	; (801dd54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801dbc8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801dbcc:	6828      	ldr	r0, [r5, #0]
 801dbce:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801dbd2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dbd6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801dbda:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801dbde:	440a      	add	r2, r1
 801dbe0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801dbe4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801dbe8:	4413      	add	r3, r2
 801dbea:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801dbee:	6803      	ldr	r3, [r0, #0]
 801dbf0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dbf2:	4798      	blx	r3
 801dbf4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dbf8:	d119      	bne.n	801dc2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801dbfa:	f010 0f20 	tst.w	r0, #32
 801dbfe:	6828      	ldr	r0, [r5, #0]
 801dc00:	d018      	beq.n	801dc34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801dc02:	2500      	movs	r5, #0
 801dc04:	6801      	ldr	r1, [r0, #0]
 801dc06:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801dc0a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801dc0e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801dc12:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801dc16:	9502      	str	r5, [sp, #8]
 801dc18:	b2b6      	uxth	r6, r6
 801dc1a:	fa1f f588 	uxth.w	r5, r8
 801dc1e:	9601      	str	r6, [sp, #4]
 801dc20:	9500      	str	r5, [sp, #0]
 801dc22:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801dc24:	4621      	mov	r1, r4
 801dc26:	47a8      	blx	r5
 801dc28:	b00d      	add	sp, #52	; 0x34
 801dc2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc2e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801dc32:	e7e4      	b.n	801dbfe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801dc34:	6803      	ldr	r3, [r0, #0]
 801dc36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dc38:	4798      	blx	r3
 801dc3a:	4947      	ldr	r1, [pc, #284]	; (801dd58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801dc3c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801dc40:	880b      	ldrh	r3, [r1, #0]
 801dc42:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801dc46:	fb03 5202 	mla	r2, r3, r2, r5
 801dc4a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dc4e:	4373      	muls	r3, r6
 801dc50:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dc54:	9307      	str	r3, [sp, #28]
 801dc56:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801dc5a:	9306      	str	r3, [sp, #24]
 801dc5c:	468a      	mov	sl, r1
 801dc5e:	9b07      	ldr	r3, [sp, #28]
 801dc60:	4298      	cmp	r0, r3
 801dc62:	d270      	bcs.n	801dd46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801dc64:	9b06      	ldr	r3, [sp, #24]
 801dc66:	4621      	mov	r1, r4
 801dc68:	eb00 0b03 	add.w	fp, r0, r3
 801dc6c:	4558      	cmp	r0, fp
 801dc6e:	d25d      	bcs.n	801dd2c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801dc70:	f851 4b04 	ldr.w	r4, [r1], #4
 801dc74:	0e23      	lsrs	r3, r4, #24
 801dc76:	d014      	beq.n	801dca2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dc78:	2bff      	cmp	r3, #255	; 0xff
 801dc7a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801dc7e:	d112      	bne.n	801dca6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dc80:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dc84:	d10f      	bne.n	801dca6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dc86:	0963      	lsrs	r3, r4, #5
 801dc88:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801dc8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dc90:	f02c 0c07 	bic.w	ip, ip, #7
 801dc94:	ea43 0c0c 	orr.w	ip, r3, ip
 801dc98:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801dc9c:	ea4c 0404 	orr.w	r4, ip, r4
 801dca0:	8004      	strh	r4, [r0, #0]
 801dca2:	3002      	adds	r0, #2
 801dca4:	e7e2      	b.n	801dc6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801dca6:	fb09 f303 	mul.w	r3, r9, r3
 801dcaa:	8807      	ldrh	r7, [r0, #0]
 801dcac:	1c5a      	adds	r2, r3, #1
 801dcae:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801dcb2:	1212      	asrs	r2, r2, #8
 801dcb4:	123e      	asrs	r6, r7, #8
 801dcb6:	b293      	uxth	r3, r2
 801dcb8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801dcbc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dcc0:	43d2      	mvns	r2, r2
 801dcc2:	b2d2      	uxtb	r2, r2
 801dcc4:	10fd      	asrs	r5, r7, #3
 801dcc6:	fb1e fe03 	smulbb	lr, lr, r3
 801dcca:	00ff      	lsls	r7, r7, #3
 801dccc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801dcd0:	fb06 e602 	mla	r6, r6, r2, lr
 801dcd4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dcd8:	b2ff      	uxtb	r7, r7
 801dcda:	fa5f fc8c 	uxtb.w	ip, ip
 801dcde:	b2e4      	uxtb	r4, r4
 801dce0:	b2b6      	uxth	r6, r6
 801dce2:	fb1c fc03 	smulbb	ip, ip, r3
 801dce6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dcea:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dcee:	fb14 f403 	smulbb	r4, r4, r3
 801dcf2:	fb05 c502 	mla	r5, r5, r2, ip
 801dcf6:	f106 0e01 	add.w	lr, r6, #1
 801dcfa:	fb07 4702 	mla	r7, r7, r2, r4
 801dcfe:	b2ad      	uxth	r5, r5
 801dd00:	b2bf      	uxth	r7, r7
 801dd02:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801dd06:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801dd0a:	f105 0c01 	add.w	ip, r5, #1
 801dd0e:	1c7e      	adds	r6, r7, #1
 801dd10:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801dd14:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dd18:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801dd1c:	096d      	lsrs	r5, r5, #5
 801dd1e:	ea46 060e 	orr.w	r6, r6, lr
 801dd22:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dd26:	432e      	orrs	r6, r5
 801dd28:	8006      	strh	r6, [r0, #0]
 801dd2a:	e7ba      	b.n	801dca2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dd2c:	f8ba 3000 	ldrh.w	r3, [sl]
 801dd30:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801dd34:	eba3 0308 	sub.w	r3, r3, r8
 801dd38:	eba4 0408 	sub.w	r4, r4, r8
 801dd3c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dd40:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801dd44:	e78b      	b.n	801dc5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801dd46:	4b03      	ldr	r3, [pc, #12]	; (801dd54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801dd48:	6818      	ldr	r0, [r3, #0]
 801dd4a:	6803      	ldr	r3, [r0, #0]
 801dd4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dd4e:	4798      	blx	r3
 801dd50:	e76a      	b.n	801dc28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801dd52:	bf00      	nop
 801dd54:	200132bc 	.word	0x200132bc
 801dd58:	200132b6 	.word	0x200132b6

0801dd5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801dd5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dd60:	460c      	mov	r4, r1
 801dd62:	b085      	sub	sp, #20
 801dd64:	6810      	ldr	r0, [r2, #0]
 801dd66:	6851      	ldr	r1, [r2, #4]
 801dd68:	466d      	mov	r5, sp
 801dd6a:	c503      	stmia	r5!, {r0, r1}
 801dd6c:	6818      	ldr	r0, [r3, #0]
 801dd6e:	6859      	ldr	r1, [r3, #4]
 801dd70:	4616      	mov	r6, r2
 801dd72:	c503      	stmia	r5!, {r0, r1}
 801dd74:	4668      	mov	r0, sp
 801dd76:	f7f7 fe27 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dd7a:	4631      	mov	r1, r6
 801dd7c:	a802      	add	r0, sp, #8
 801dd7e:	f7f7 fe67 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dd82:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801dd86:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801dd8a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801dd8e:	4d28      	ldr	r5, [pc, #160]	; (801de30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801dd90:	4e28      	ldr	r6, [pc, #160]	; (801de34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801dd92:	6828      	ldr	r0, [r5, #0]
 801dd94:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801dd98:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801dd9c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dda0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801dda4:	f8bd 1000 	ldrh.w	r1, [sp]
 801dda8:	440a      	add	r2, r1
 801ddaa:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ddae:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ddb2:	4413      	add	r3, r2
 801ddb4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ddb8:	6803      	ldr	r3, [r0, #0]
 801ddba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ddbc:	4798      	blx	r3
 801ddbe:	8833      	ldrh	r3, [r6, #0]
 801ddc0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ddc4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ddc8:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801de38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ddcc:	fb03 1202 	mla	r2, r3, r2, r1
 801ddd0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ddd4:	fb08 f303 	mul.w	r3, r8, r3
 801ddd8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dddc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801dde0:	4298      	cmp	r0, r3
 801dde2:	d21d      	bcs.n	801de20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801dde4:	eb00 080c 	add.w	r8, r0, ip
 801dde8:	4540      	cmp	r0, r8
 801ddea:	d20f      	bcs.n	801de0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801ddec:	f854 1b04 	ldr.w	r1, [r4], #4
 801ddf0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801ddf4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801ddf8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ddfc:	ea42 0209 	orr.w	r2, r2, r9
 801de00:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801de04:	430a      	orrs	r2, r1
 801de06:	f820 2b02 	strh.w	r2, [r0], #2
 801de0a:	e7ed      	b.n	801dde8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801de0c:	8832      	ldrh	r2, [r6, #0]
 801de0e:	1bd2      	subs	r2, r2, r7
 801de10:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801de14:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801de18:	1bd2      	subs	r2, r2, r7
 801de1a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801de1e:	e7df      	b.n	801dde0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801de20:	6828      	ldr	r0, [r5, #0]
 801de22:	6803      	ldr	r3, [r0, #0]
 801de24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de26:	4798      	blx	r3
 801de28:	b005      	add	sp, #20
 801de2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801de2e:	bf00      	nop
 801de30:	200132bc 	.word	0x200132bc
 801de34:	200132b6 	.word	0x200132b6
 801de38:	fffff800 	.word	0xfffff800

0801de3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801de3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801de40:	460e      	mov	r6, r1
 801de42:	b08e      	sub	sp, #56	; 0x38
 801de44:	4604      	mov	r4, r0
 801de46:	6808      	ldr	r0, [r1, #0]
 801de48:	6849      	ldr	r1, [r1, #4]
 801de4a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801e024 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801de4e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801e028 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801de52:	461d      	mov	r5, r3
 801de54:	ab0a      	add	r3, sp, #40	; 0x28
 801de56:	c303      	stmia	r3!, {r0, r1}
 801de58:	6810      	ldr	r0, [r2, #0]
 801de5a:	6851      	ldr	r1, [r2, #4]
 801de5c:	ab0c      	add	r3, sp, #48	; 0x30
 801de5e:	c303      	stmia	r3!, {r0, r1}
 801de60:	a80a      	add	r0, sp, #40	; 0x28
 801de62:	f7f7 fdb1 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801de66:	4631      	mov	r1, r6
 801de68:	a80c      	add	r0, sp, #48	; 0x30
 801de6a:	f7f7 fdf1 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801de6e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801de72:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801de76:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801de7a:	f8d8 0000 	ldr.w	r0, [r8]
 801de7e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801de82:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801de86:	fb11 2103 	smlabb	r1, r1, r3, r2
 801de8a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801de8e:	440c      	add	r4, r1
 801de90:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801de94:	440a      	add	r2, r1
 801de96:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801de9a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801de9e:	4413      	add	r3, r2
 801dea0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801dea4:	6803      	ldr	r3, [r0, #0]
 801dea6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dea8:	4798      	blx	r3
 801deaa:	2dff      	cmp	r5, #255	; 0xff
 801deac:	d124      	bne.n	801def8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801deae:	f010 0f01 	tst.w	r0, #1
 801deb2:	f8d8 0000 	ldr.w	r0, [r8]
 801deb6:	d022      	beq.n	801defe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801deb8:	2100      	movs	r1, #0
 801deba:	f8d0 c000 	ldr.w	ip, [r0]
 801debe:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801dec2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801dec6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801deca:	f04f 0e01 	mov.w	lr, #1
 801dece:	f8cd e018 	str.w	lr, [sp, #24]
 801ded2:	f8b9 e000 	ldrh.w	lr, [r9]
 801ded6:	9503      	str	r5, [sp, #12]
 801ded8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801dedc:	b2b6      	uxth	r6, r6
 801dede:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801dee2:	9102      	str	r1, [sp, #8]
 801dee4:	b2bf      	uxth	r7, r7
 801dee6:	9601      	str	r6, [sp, #4]
 801dee8:	9700      	str	r7, [sp, #0]
 801deea:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801deee:	4621      	mov	r1, r4
 801def0:	47a8      	blx	r5
 801def2:	b00e      	add	sp, #56	; 0x38
 801def4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801def8:	f010 0f04 	tst.w	r0, #4
 801defc:	e7d9      	b.n	801deb2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801defe:	6803      	ldr	r3, [r0, #0]
 801df00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df02:	4798      	blx	r3
 801df04:	f8b9 3000 	ldrh.w	r3, [r9]
 801df08:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801df0c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801df10:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801df14:	fb03 1202 	mla	r2, r3, r2, r1
 801df18:	ebac 0c07 	sub.w	ip, ip, r7
 801df1c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801df20:	435e      	muls	r6, r3
 801df22:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801df26:	2dff      	cmp	r5, #255	; 0xff
 801df28:	eba3 0707 	sub.w	r7, r3, r7
 801df2c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801df30:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801df34:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801df38:	d049      	beq.n	801dfce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801df3a:	43eb      	mvns	r3, r5
 801df3c:	fa1f f985 	uxth.w	r9, r5
 801df40:	b2db      	uxtb	r3, r3
 801df42:	42b0      	cmp	r0, r6
 801df44:	d266      	bcs.n	801e014 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801df46:	eb00 0a0e 	add.w	sl, r0, lr
 801df4a:	4550      	cmp	r0, sl
 801df4c:	4621      	mov	r1, r4
 801df4e:	f104 0403 	add.w	r4, r4, #3
 801df52:	d25b      	bcs.n	801e00c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801df54:	8802      	ldrh	r2, [r0, #0]
 801df56:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801df5a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801df5e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801df62:	fb11 f109 	smulbb	r1, r1, r9
 801df66:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801df6a:	10d5      	asrs	r5, r2, #3
 801df6c:	fb08 1803 	mla	r8, r8, r3, r1
 801df70:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801df74:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801df78:	fb11 f109 	smulbb	r1, r1, r9
 801df7c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801df80:	fb05 1503 	mla	r5, r5, r3, r1
 801df84:	00d2      	lsls	r2, r2, #3
 801df86:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801df8a:	b2d2      	uxtb	r2, r2
 801df8c:	fb11 f109 	smulbb	r1, r1, r9
 801df90:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801df94:	fa1f f888 	uxth.w	r8, r8
 801df98:	fb02 1203 	mla	r2, r2, r3, r1
 801df9c:	b292      	uxth	r2, r2
 801df9e:	f108 0101 	add.w	r1, r8, #1
 801dfa2:	b2ad      	uxth	r5, r5
 801dfa4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801dfa8:	1c51      	adds	r1, r2, #1
 801dfaa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801dfae:	1c69      	adds	r1, r5, #1
 801dfb0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801dfb4:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801dfb8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dfbc:	096d      	lsrs	r5, r5, #5
 801dfbe:	ea42 0208 	orr.w	r2, r2, r8
 801dfc2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dfc6:	432a      	orrs	r2, r5
 801dfc8:	f820 2b02 	strh.w	r2, [r0], #2
 801dfcc:	e7bd      	b.n	801df4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801dfce:	4a14      	ldr	r2, [pc, #80]	; (801e020 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801dfd0:	42b0      	cmp	r0, r6
 801dfd2:	d21f      	bcs.n	801e014 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801dfd4:	eb00 050e 	add.w	r5, r0, lr
 801dfd8:	42a8      	cmp	r0, r5
 801dfda:	4621      	mov	r1, r4
 801dfdc:	f104 0403 	add.w	r4, r4, #3
 801dfe0:	d210      	bcs.n	801e004 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801dfe2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801dfe6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801dfea:	00db      	lsls	r3, r3, #3
 801dfec:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801dff0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dff4:	430b      	orrs	r3, r1
 801dff6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801dffa:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801dffe:	f820 3b02 	strh.w	r3, [r0], #2
 801e002:	e7e9      	b.n	801dfd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801e004:	4438      	add	r0, r7
 801e006:	eb01 040c 	add.w	r4, r1, ip
 801e00a:	e7e1      	b.n	801dfd0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801e00c:	4438      	add	r0, r7
 801e00e:	eb01 040c 	add.w	r4, r1, ip
 801e012:	e796      	b.n	801df42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801e014:	4b03      	ldr	r3, [pc, #12]	; (801e024 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801e016:	6818      	ldr	r0, [r3, #0]
 801e018:	6803      	ldr	r3, [r0, #0]
 801e01a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e01c:	4798      	blx	r3
 801e01e:	e768      	b.n	801def2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801e020:	fffff800 	.word	0xfffff800
 801e024:	200132bc 	.word	0x200132bc
 801e028:	200132b6 	.word	0x200132b6

0801e02c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801e02c:	b4f0      	push	{r4, r5, r6, r7}
 801e02e:	4616      	mov	r6, r2
 801e030:	2e01      	cmp	r6, #1
 801e032:	461c      	mov	r4, r3
 801e034:	460d      	mov	r5, r1
 801e036:	9a04      	ldr	r2, [sp, #16]
 801e038:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801e03c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801e040:	d012      	beq.n	801e068 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801e042:	d303      	bcc.n	801e04c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801e044:	2e02      	cmp	r6, #2
 801e046:	d00a      	beq.n	801e05e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801e048:	bcf0      	pop	{r4, r5, r6, r7}
 801e04a:	4770      	bx	lr
 801e04c:	6805      	ldr	r5, [r0, #0]
 801e04e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801e052:	68ed      	ldr	r5, [r5, #12]
 801e054:	4613      	mov	r3, r2
 801e056:	46ac      	mov	ip, r5
 801e058:	4622      	mov	r2, r4
 801e05a:	bcf0      	pop	{r4, r5, r6, r7}
 801e05c:	4760      	bx	ip
 801e05e:	4621      	mov	r1, r4
 801e060:	4628      	mov	r0, r5
 801e062:	bcf0      	pop	{r4, r5, r6, r7}
 801e064:	f7ff bd94 	b.w	801db90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e068:	4621      	mov	r1, r4
 801e06a:	4628      	mov	r0, r5
 801e06c:	bcf0      	pop	{r4, r5, r6, r7}
 801e06e:	f7ff bee5 	b.w	801de3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801e074 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801e074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e078:	4681      	mov	r9, r0
 801e07a:	b093      	sub	sp, #76	; 0x4c
 801e07c:	6810      	ldr	r0, [r2, #0]
 801e07e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801e082:	4f6d      	ldr	r7, [pc, #436]	; (801e238 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801e084:	4688      	mov	r8, r1
 801e086:	6851      	ldr	r1, [r2, #4]
 801e088:	ac0e      	add	r4, sp, #56	; 0x38
 801e08a:	c403      	stmia	r4!, {r0, r1}
 801e08c:	6818      	ldr	r0, [r3, #0]
 801e08e:	6859      	ldr	r1, [r3, #4]
 801e090:	ac10      	add	r4, sp, #64	; 0x40
 801e092:	4616      	mov	r6, r2
 801e094:	c403      	stmia	r4!, {r0, r1}
 801e096:	a80e      	add	r0, sp, #56	; 0x38
 801e098:	f7f7 fc96 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e09c:	4631      	mov	r1, r6
 801e09e:	a810      	add	r0, sp, #64	; 0x40
 801e0a0:	f7f7 fcd6 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e0a4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801e0a8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801e0ac:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801e0b0:	4e62      	ldr	r6, [pc, #392]	; (801e23c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e0b2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801e0b6:	6830      	ldr	r0, [r6, #0]
 801e0b8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801e0bc:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e0c0:	4489      	add	r9, r1
 801e0c2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801e0c6:	440a      	add	r2, r1
 801e0c8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801e0cc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e0d0:	4413      	add	r3, r2
 801e0d2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801e0d6:	6803      	ldr	r3, [r0, #0]
 801e0d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e0da:	4798      	blx	r3
 801e0dc:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e0e0:	6830      	ldr	r0, [r6, #0]
 801e0e2:	d01d      	beq.n	801e120 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801e0e4:	2200      	movs	r2, #0
 801e0e6:	6801      	ldr	r1, [r0, #0]
 801e0e8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801e0ec:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e0f0:	220b      	movs	r2, #11
 801e0f2:	9207      	str	r2, [sp, #28]
 801e0f4:	883a      	ldrh	r2, [r7, #0]
 801e0f6:	9206      	str	r2, [sp, #24]
 801e0f8:	2201      	movs	r2, #1
 801e0fa:	e9cd a204 	strd	sl, r2, [sp, #16]
 801e0fe:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801e102:	9203      	str	r2, [sp, #12]
 801e104:	b2a4      	uxth	r4, r4
 801e106:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801e10a:	9200      	str	r2, [sp, #0]
 801e10c:	b2ad      	uxth	r5, r5
 801e10e:	9502      	str	r5, [sp, #8]
 801e110:	9401      	str	r4, [sp, #4]
 801e112:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801e114:	4642      	mov	r2, r8
 801e116:	4649      	mov	r1, r9
 801e118:	47a0      	blx	r4
 801e11a:	b013      	add	sp, #76	; 0x4c
 801e11c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e120:	6803      	ldr	r3, [r0, #0]
 801e122:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e124:	4798      	blx	r3
 801e126:	883b      	ldrh	r3, [r7, #0]
 801e128:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801e12c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801e130:	fb03 1202 	mla	r2, r3, r2, r1
 801e134:	435d      	muls	r5, r3
 801e136:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e13a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e13e:	920c      	str	r2, [sp, #48]	; 0x30
 801e140:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801e144:	1b12      	subs	r2, r2, r4
 801e146:	920d      	str	r2, [sp, #52]	; 0x34
 801e148:	0062      	lsls	r2, r4, #1
 801e14a:	1b1c      	subs	r4, r3, r4
 801e14c:	0063      	lsls	r3, r4, #1
 801e14e:	920a      	str	r2, [sp, #40]	; 0x28
 801e150:	930b      	str	r3, [sp, #44]	; 0x2c
 801e152:	f04f 0e04 	mov.w	lr, #4
 801e156:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e158:	4298      	cmp	r0, r3
 801e15a:	d266      	bcs.n	801e22a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e15c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e15e:	eb00 0b03 	add.w	fp, r0, r3
 801e162:	4558      	cmp	r0, fp
 801e164:	d25c      	bcs.n	801e220 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801e166:	f819 3b01 	ldrb.w	r3, [r9], #1
 801e16a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801e16e:	f858 2003 	ldr.w	r2, [r8, r3]
 801e172:	0e11      	lsrs	r1, r2, #24
 801e174:	d012      	beq.n	801e19c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e176:	29ff      	cmp	r1, #255	; 0xff
 801e178:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801e17c:	d110      	bne.n	801e1a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e17e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e182:	d10d      	bne.n	801e1a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e184:	0953      	lsrs	r3, r2, #5
 801e186:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801e18a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e18e:	f027 0707 	bic.w	r7, r7, #7
 801e192:	431f      	orrs	r7, r3
 801e194:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e198:	433a      	orrs	r2, r7
 801e19a:	8002      	strh	r2, [r0, #0]
 801e19c:	3002      	adds	r0, #2
 801e19e:	e7e0      	b.n	801e162 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801e1a0:	fb0a f101 	mul.w	r1, sl, r1
 801e1a4:	8806      	ldrh	r6, [r0, #0]
 801e1a6:	1c4b      	adds	r3, r1, #1
 801e1a8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801e1ac:	1235      	asrs	r5, r6, #8
 801e1ae:	10f4      	asrs	r4, r6, #3
 801e1b0:	121b      	asrs	r3, r3, #8
 801e1b2:	00f6      	lsls	r6, r6, #3
 801e1b4:	b299      	uxth	r1, r3
 801e1b6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e1ba:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e1be:	b2f6      	uxtb	r6, r6
 801e1c0:	43db      	mvns	r3, r3
 801e1c2:	b2d2      	uxtb	r2, r2
 801e1c4:	b2db      	uxtb	r3, r3
 801e1c6:	fb1c fc01 	smulbb	ip, ip, r1
 801e1ca:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e1ce:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e1d2:	fb12 f201 	smulbb	r2, r2, r1
 801e1d6:	fb05 c503 	mla	r5, r5, r3, ip
 801e1da:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e1de:	b2ff      	uxtb	r7, r7
 801e1e0:	fb06 2203 	mla	r2, r6, r3, r2
 801e1e4:	b2ad      	uxth	r5, r5
 801e1e6:	fb17 f701 	smulbb	r7, r7, r1
 801e1ea:	b292      	uxth	r2, r2
 801e1ec:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e1f0:	fb04 7403 	mla	r4, r4, r3, r7
 801e1f4:	f105 0c01 	add.w	ip, r5, #1
 801e1f8:	1c57      	adds	r7, r2, #1
 801e1fa:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e1fe:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e202:	b2a4      	uxth	r4, r4
 801e204:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e208:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e20c:	433d      	orrs	r5, r7
 801e20e:	1c67      	adds	r7, r4, #1
 801e210:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e214:	0964      	lsrs	r4, r4, #5
 801e216:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e21a:	4325      	orrs	r5, r4
 801e21c:	8005      	strh	r5, [r0, #0]
 801e21e:	e7bd      	b.n	801e19c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e220:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e222:	4418      	add	r0, r3
 801e224:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e226:	4499      	add	r9, r3
 801e228:	e795      	b.n	801e156 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e22a:	4b04      	ldr	r3, [pc, #16]	; (801e23c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e22c:	6818      	ldr	r0, [r3, #0]
 801e22e:	6803      	ldr	r3, [r0, #0]
 801e230:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e232:	4798      	blx	r3
 801e234:	e771      	b.n	801e11a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e236:	bf00      	nop
 801e238:	200132b6 	.word	0x200132b6
 801e23c:	200132bc 	.word	0x200132bc

0801e240 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e244:	b087      	sub	sp, #28
 801e246:	4680      	mov	r8, r0
 801e248:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e24c:	460d      	mov	r5, r1
 801e24e:	4614      	mov	r4, r2
 801e250:	2e00      	cmp	r6, #0
 801e252:	f000 80b9 	beq.w	801e3c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e256:	6810      	ldr	r0, [r2, #0]
 801e258:	6851      	ldr	r1, [r2, #4]
 801e25a:	af02      	add	r7, sp, #8
 801e25c:	c703      	stmia	r7!, {r0, r1}
 801e25e:	6818      	ldr	r0, [r3, #0]
 801e260:	6859      	ldr	r1, [r3, #4]
 801e262:	af04      	add	r7, sp, #16
 801e264:	c703      	stmia	r7!, {r0, r1}
 801e266:	a802      	add	r0, sp, #8
 801e268:	f7f7 fbae 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e26c:	4621      	mov	r1, r4
 801e26e:	a804      	add	r0, sp, #16
 801e270:	f7f7 fbee 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e274:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e278:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e27c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e280:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e284:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e288:	eb08 0401 	add.w	r4, r8, r1
 801e28c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e290:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e294:	440a      	add	r2, r1
 801e296:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e29a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e29e:	4413      	add	r3, r2
 801e2a0:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e2a4:	4b4a      	ldr	r3, [pc, #296]	; (801e3d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e2a6:	6818      	ldr	r0, [r3, #0]
 801e2a8:	6803      	ldr	r3, [r0, #0]
 801e2aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e2ac:	4798      	blx	r3
 801e2ae:	4b49      	ldr	r3, [pc, #292]	; (801e3d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e2b0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e2b4:	881a      	ldrh	r2, [r3, #0]
 801e2b6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e2ba:	2eff      	cmp	r6, #255	; 0xff
 801e2bc:	fb02 c101 	mla	r1, r2, r1, ip
 801e2c0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e2c4:	fb02 f207 	mul.w	r2, r2, r7
 801e2c8:	f105 0104 	add.w	r1, r5, #4
 801e2cc:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e2d0:	461d      	mov	r5, r3
 801e2d2:	d05a      	beq.n	801e38a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e2d4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e2d8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e2dc:	b2b6      	uxth	r6, r6
 801e2de:	fa1f fe8e 	uxth.w	lr, lr
 801e2e2:	9301      	str	r3, [sp, #4]
 801e2e4:	4282      	cmp	r2, r0
 801e2e6:	d96a      	bls.n	801e3be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e2e8:	eb00 0b0a 	add.w	fp, r0, sl
 801e2ec:	4583      	cmp	fp, r0
 801e2ee:	d940      	bls.n	801e372 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e2f0:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e2f4:	8805      	ldrh	r5, [r0, #0]
 801e2f6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e2fa:	122f      	asrs	r7, r5, #8
 801e2fc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e300:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e304:	fb17 f70e 	smulbb	r7, r7, lr
 801e308:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e30c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e310:	00ed      	lsls	r5, r5, #3
 801e312:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e316:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e31a:	10df      	asrs	r7, r3, #3
 801e31c:	b2ed      	uxtb	r5, r5
 801e31e:	00db      	lsls	r3, r3, #3
 801e320:	fa1f fc8c 	uxth.w	ip, ip
 801e324:	fb19 f90e 	smulbb	r9, r9, lr
 801e328:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e32c:	b2db      	uxtb	r3, r3
 801e32e:	fb15 f50e 	smulbb	r5, r5, lr
 801e332:	fb07 9706 	mla	r7, r7, r6, r9
 801e336:	fb03 5306 	mla	r3, r3, r6, r5
 801e33a:	f10c 0901 	add.w	r9, ip, #1
 801e33e:	b29b      	uxth	r3, r3
 801e340:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e344:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e348:	f103 0c01 	add.w	ip, r3, #1
 801e34c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e350:	b2bf      	uxth	r7, r7
 801e352:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e356:	ea4c 0c09 	orr.w	ip, ip, r9
 801e35a:	f107 0901 	add.w	r9, r7, #1
 801e35e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e362:	097f      	lsrs	r7, r7, #5
 801e364:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e368:	ea4c 0c07 	orr.w	ip, ip, r7
 801e36c:	f820 cb02 	strh.w	ip, [r0], #2
 801e370:	e7bc      	b.n	801e2ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e372:	9b01      	ldr	r3, [sp, #4]
 801e374:	881b      	ldrh	r3, [r3, #0]
 801e376:	eba3 0308 	sub.w	r3, r3, r8
 801e37a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e37e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e382:	eba3 0308 	sub.w	r3, r3, r8
 801e386:	441c      	add	r4, r3
 801e388:	e7ac      	b.n	801e2e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e38a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e38e:	4282      	cmp	r2, r0
 801e390:	d915      	bls.n	801e3be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e392:	eb00 060a 	add.w	r6, r0, sl
 801e396:	4286      	cmp	r6, r0
 801e398:	d906      	bls.n	801e3a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e39a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e39e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e3a2:	f820 3b02 	strh.w	r3, [r0], #2
 801e3a6:	e7f6      	b.n	801e396 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e3a8:	882b      	ldrh	r3, [r5, #0]
 801e3aa:	eba3 0308 	sub.w	r3, r3, r8
 801e3ae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e3b2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e3b6:	eba3 0308 	sub.w	r3, r3, r8
 801e3ba:	441c      	add	r4, r3
 801e3bc:	e7e7      	b.n	801e38e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e3be:	4b04      	ldr	r3, [pc, #16]	; (801e3d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e3c0:	6818      	ldr	r0, [r3, #0]
 801e3c2:	6803      	ldr	r3, [r0, #0]
 801e3c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e3c6:	4798      	blx	r3
 801e3c8:	b007      	add	sp, #28
 801e3ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e3ce:	bf00      	nop
 801e3d0:	200132bc 	.word	0x200132bc
 801e3d4:	200132b6 	.word	0x200132b6

0801e3d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e3d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3dc:	b091      	sub	sp, #68	; 0x44
 801e3de:	4680      	mov	r8, r0
 801e3e0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e3e4:	460f      	mov	r7, r1
 801e3e6:	4614      	mov	r4, r2
 801e3e8:	2d00      	cmp	r5, #0
 801e3ea:	d051      	beq.n	801e490 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e3ec:	6810      	ldr	r0, [r2, #0]
 801e3ee:	6851      	ldr	r1, [r2, #4]
 801e3f0:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e5f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e3f4:	ae0c      	add	r6, sp, #48	; 0x30
 801e3f6:	c603      	stmia	r6!, {r0, r1}
 801e3f8:	6818      	ldr	r0, [r3, #0]
 801e3fa:	6859      	ldr	r1, [r3, #4]
 801e3fc:	ae0e      	add	r6, sp, #56	; 0x38
 801e3fe:	c603      	stmia	r6!, {r0, r1}
 801e400:	a80c      	add	r0, sp, #48	; 0x30
 801e402:	f7f7 fae1 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e406:	4621      	mov	r1, r4
 801e408:	a80e      	add	r0, sp, #56	; 0x38
 801e40a:	f7f7 fb21 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e40e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e412:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e416:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e41a:	f8d9 0000 	ldr.w	r0, [r9]
 801e41e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e422:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e426:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e42a:	eb08 0401 	add.w	r4, r8, r1
 801e42e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e432:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e5f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e436:	440a      	add	r2, r1
 801e438:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e43c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e440:	4413      	add	r3, r2
 801e442:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e446:	6803      	ldr	r3, [r0, #0]
 801e448:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e44a:	4798      	blx	r3
 801e44c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e450:	f8d9 0000 	ldr.w	r0, [r9]
 801e454:	d01f      	beq.n	801e496 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e456:	2200      	movs	r2, #0
 801e458:	6801      	ldr	r1, [r0, #0]
 801e45a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e45e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e462:	220b      	movs	r2, #11
 801e464:	9207      	str	r2, [sp, #28]
 801e466:	f8b8 2000 	ldrh.w	r2, [r8]
 801e46a:	9206      	str	r2, [sp, #24]
 801e46c:	2201      	movs	r2, #1
 801e46e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e472:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e476:	9203      	str	r2, [sp, #12]
 801e478:	fa1f f28a 	uxth.w	r2, sl
 801e47c:	9202      	str	r2, [sp, #8]
 801e47e:	b2b6      	uxth	r6, r6
 801e480:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e484:	9200      	str	r2, [sp, #0]
 801e486:	9601      	str	r6, [sp, #4]
 801e488:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e48a:	463a      	mov	r2, r7
 801e48c:	4621      	mov	r1, r4
 801e48e:	47a8      	blx	r5
 801e490:	b011      	add	sp, #68	; 0x44
 801e492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e496:	6803      	ldr	r3, [r0, #0]
 801e498:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e49a:	4798      	blx	r3
 801e49c:	f8b8 2000 	ldrh.w	r2, [r8]
 801e4a0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e4a4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e4a8:	2dff      	cmp	r5, #255	; 0xff
 801e4aa:	fb02 1303 	mla	r3, r2, r3, r1
 801e4ae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e4b2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e4b6:	fb0a fa02 	mul.w	sl, sl, r2
 801e4ba:	d062      	beq.n	801e582 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e4bc:	ea6f 0c05 	mvn.w	ip, r5
 801e4c0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e4c4:	930a      	str	r3, [sp, #40]	; 0x28
 801e4c6:	b2ad      	uxth	r5, r5
 801e4c8:	fa5f fc8c 	uxtb.w	ip, ip
 801e4cc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e4d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e4d2:	4298      	cmp	r0, r3
 801e4d4:	f080 8085 	bcs.w	801e5e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e4d8:	eb00 0b09 	add.w	fp, r0, r9
 801e4dc:	4558      	cmp	r0, fp
 801e4de:	d246      	bcs.n	801e56e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e4e0:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e4e4:	2303      	movs	r3, #3
 801e4e6:	2204      	movs	r2, #4
 801e4e8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e4ec:	eb07 0a0e 	add.w	sl, r7, lr
 801e4f0:	8803      	ldrh	r3, [r0, #0]
 801e4f2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e4f6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e4fa:	1219      	asrs	r1, r3, #8
 801e4fc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e500:	fb18 f805 	smulbb	r8, r8, r5
 801e504:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e508:	10da      	asrs	r2, r3, #3
 801e50a:	fb01 810c 	mla	r1, r1, ip, r8
 801e50e:	00db      	lsls	r3, r3, #3
 801e510:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e514:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e518:	b2db      	uxtb	r3, r3
 801e51a:	fb18 f805 	smulbb	r8, r8, r5
 801e51e:	fb1e fe05 	smulbb	lr, lr, r5
 801e522:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e526:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e52a:	b289      	uxth	r1, r1
 801e52c:	fb02 820c 	mla	r2, r2, ip, r8
 801e530:	fb03 e30c 	mla	r3, r3, ip, lr
 801e534:	b292      	uxth	r2, r2
 801e536:	b29b      	uxth	r3, r3
 801e538:	f101 0801 	add.w	r8, r1, #1
 801e53c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e540:	f103 0e01 	add.w	lr, r3, #1
 801e544:	f102 0801 	add.w	r8, r2, #1
 801e548:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e54c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e550:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e554:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e558:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e55c:	ea4e 0101 	orr.w	r1, lr, r1
 801e560:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e564:	ea41 0108 	orr.w	r1, r1, r8
 801e568:	f820 1b02 	strh.w	r1, [r0], #2
 801e56c:	e7b6      	b.n	801e4dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e56e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e570:	881b      	ldrh	r3, [r3, #0]
 801e572:	1b9b      	subs	r3, r3, r6
 801e574:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e578:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e57c:	1b9b      	subs	r3, r3, r6
 801e57e:	441c      	add	r4, r3
 801e580:	e7a6      	b.n	801e4d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e582:	491b      	ldr	r1, [pc, #108]	; (801e5f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e584:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e588:	2203      	movs	r2, #3
 801e58a:	2504      	movs	r5, #4
 801e58c:	4550      	cmp	r0, sl
 801e58e:	d228      	bcs.n	801e5e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e590:	eb00 0c09 	add.w	ip, r0, r9
 801e594:	4560      	cmp	r0, ip
 801e596:	4623      	mov	r3, r4
 801e598:	d219      	bcs.n	801e5ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e59a:	f893 e000 	ldrb.w	lr, [r3]
 801e59e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e5a2:	eb07 0b0e 	add.w	fp, r7, lr
 801e5a6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e5aa:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e5ae:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e5b2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e5b6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e5ba:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e5be:	ea43 030b 	orr.w	r3, r3, fp
 801e5c2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e5c6:	3401      	adds	r4, #1
 801e5c8:	f820 3b02 	strh.w	r3, [r0], #2
 801e5cc:	e7e2      	b.n	801e594 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e5ce:	f8b8 3000 	ldrh.w	r3, [r8]
 801e5d2:	1b9b      	subs	r3, r3, r6
 801e5d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e5d8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e5dc:	1b9b      	subs	r3, r3, r6
 801e5de:	441c      	add	r4, r3
 801e5e0:	e7d4      	b.n	801e58c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e5e2:	4b04      	ldr	r3, [pc, #16]	; (801e5f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e5e4:	6818      	ldr	r0, [r3, #0]
 801e5e6:	6803      	ldr	r3, [r0, #0]
 801e5e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e5ea:	4798      	blx	r3
 801e5ec:	e750      	b.n	801e490 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e5ee:	bf00      	nop
 801e5f0:	fffff800 	.word	0xfffff800
 801e5f4:	200132bc 	.word	0x200132bc
 801e5f8:	200132b6 	.word	0x200132b6

0801e5fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e5fc:	b4f0      	push	{r4, r5, r6, r7}
 801e5fe:	460c      	mov	r4, r1
 801e600:	4611      	mov	r1, r2
 801e602:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e606:	780f      	ldrb	r7, [r1, #0]
 801e608:	784e      	ldrb	r6, [r1, #1]
 801e60a:	2f01      	cmp	r7, #1
 801e60c:	461a      	mov	r2, r3
 801e60e:	9b04      	ldr	r3, [sp, #16]
 801e610:	d036      	beq.n	801e680 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e612:	d31e      	bcc.n	801e652 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e614:	2f02      	cmp	r7, #2
 801e616:	d14a      	bne.n	801e6ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e618:	2e03      	cmp	r6, #3
 801e61a:	d848      	bhi.n	801e6ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e61c:	e8df f006 	tbb	[pc, r6]
 801e620:	16140702 	.word	0x16140702
 801e624:	9504      	str	r5, [sp, #16]
 801e626:	4620      	mov	r0, r4
 801e628:	bcf0      	pop	{r4, r5, r6, r7}
 801e62a:	f7ff be09 	b.w	801e240 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e62e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e630:	2800      	cmp	r0, #0
 801e632:	d03c      	beq.n	801e6ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e634:	6806      	ldr	r6, [r0, #0]
 801e636:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e63a:	68b5      	ldr	r5, [r6, #8]
 801e63c:	4613      	mov	r3, r2
 801e63e:	46ac      	mov	ip, r5
 801e640:	460a      	mov	r2, r1
 801e642:	4621      	mov	r1, r4
 801e644:	bcf0      	pop	{r4, r5, r6, r7}
 801e646:	4760      	bx	ip
 801e648:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e64a:	e7f1      	b.n	801e630 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e64c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e650:	e7ee      	b.n	801e630 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e652:	2e03      	cmp	r6, #3
 801e654:	d82b      	bhi.n	801e6ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e656:	e8df f006 	tbb	[pc, r6]
 801e65a:	0702      	.short	0x0702
 801e65c:	100e      	.short	0x100e
 801e65e:	9504      	str	r5, [sp, #16]
 801e660:	4620      	mov	r0, r4
 801e662:	bcf0      	pop	{r4, r5, r6, r7}
 801e664:	f7ff bd06 	b.w	801e074 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e668:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e66a:	b300      	cbz	r0, 801e6ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e66c:	6806      	ldr	r6, [r0, #0]
 801e66e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e672:	68f5      	ldr	r5, [r6, #12]
 801e674:	e7e2      	b.n	801e63c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e676:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e678:	e7f7      	b.n	801e66a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e67a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e67e:	e7f4      	b.n	801e66a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e680:	2e03      	cmp	r6, #3
 801e682:	d814      	bhi.n	801e6ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e684:	e8df f006 	tbb	[pc, r6]
 801e688:	100e0702 	.word	0x100e0702
 801e68c:	9504      	str	r5, [sp, #16]
 801e68e:	4620      	mov	r0, r4
 801e690:	bcf0      	pop	{r4, r5, r6, r7}
 801e692:	f7ff bea1 	b.w	801e3d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e696:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e698:	b148      	cbz	r0, 801e6ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e69a:	6806      	ldr	r6, [r0, #0]
 801e69c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e6a0:	6935      	ldr	r5, [r6, #16]
 801e6a2:	e7cb      	b.n	801e63c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e6a4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e6a6:	e7f7      	b.n	801e698 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e6a8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e6ac:	e7f4      	b.n	801e698 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e6ae:	bcf0      	pop	{r4, r5, r6, r7}
 801e6b0:	4770      	bx	lr
	...

0801e6b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e6b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6b8:	4604      	mov	r4, r0
 801e6ba:	b087      	sub	sp, #28
 801e6bc:	6810      	ldr	r0, [r2, #0]
 801e6be:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e6c2:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801e8fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e6c6:	460e      	mov	r6, r1
 801e6c8:	6851      	ldr	r1, [r2, #4]
 801e6ca:	ad02      	add	r5, sp, #8
 801e6cc:	c503      	stmia	r5!, {r0, r1}
 801e6ce:	6818      	ldr	r0, [r3, #0]
 801e6d0:	6859      	ldr	r1, [r3, #4]
 801e6d2:	ad04      	add	r5, sp, #16
 801e6d4:	4617      	mov	r7, r2
 801e6d6:	c503      	stmia	r5!, {r0, r1}
 801e6d8:	a802      	add	r0, sp, #8
 801e6da:	f7f7 f975 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e6de:	4639      	mov	r1, r7
 801e6e0:	a804      	add	r0, sp, #16
 801e6e2:	f7f7 f9b5 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e6e6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e6ea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e6ee:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e6f2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e6f6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e6fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e6fe:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e702:	440e      	add	r6, r1
 801e704:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e708:	440a      	add	r2, r1
 801e70a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e70e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e712:	4413      	add	r3, r2
 801e714:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e718:	4b77      	ldr	r3, [pc, #476]	; (801e8f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e71a:	6818      	ldr	r0, [r3, #0]
 801e71c:	6803      	ldr	r3, [r0, #0]
 801e71e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e720:	4798      	blx	r3
 801e722:	f8b9 b000 	ldrh.w	fp, [r9]
 801e726:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e72a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e72e:	fb0b 2303 	mla	r3, fp, r3, r2
 801e732:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e736:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e73a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e73e:	fb05 f50b 	mul.w	r5, r5, fp
 801e742:	9300      	str	r3, [sp, #0]
 801e744:	d069      	beq.n	801e81a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e746:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e74a:	4558      	cmp	r0, fp
 801e74c:	f080 80cc 	bcs.w	801e8e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e750:	9b00      	ldr	r3, [sp, #0]
 801e752:	18c3      	adds	r3, r0, r3
 801e754:	9301      	str	r3, [sp, #4]
 801e756:	4631      	mov	r1, r6
 801e758:	9b01      	ldr	r3, [sp, #4]
 801e75a:	4298      	cmp	r0, r3
 801e75c:	d24f      	bcs.n	801e7fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e75e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e762:	2a00      	cmp	r2, #0
 801e764:	d048      	beq.n	801e7f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e766:	fb0a f202 	mul.w	r2, sl, r2
 801e76a:	1c53      	adds	r3, r2, #1
 801e76c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e770:	121b      	asrs	r3, r3, #8
 801e772:	d041      	beq.n	801e7f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e774:	8802      	ldrh	r2, [r0, #0]
 801e776:	f8b4 c000 	ldrh.w	ip, [r4]
 801e77a:	b29e      	uxth	r6, r3
 801e77c:	1215      	asrs	r5, r2, #8
 801e77e:	43db      	mvns	r3, r3
 801e780:	b2db      	uxtb	r3, r3
 801e782:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e786:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e78a:	fb15 f503 	smulbb	r5, r5, r3
 801e78e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e792:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e796:	00d2      	lsls	r2, r2, #3
 801e798:	fb07 5706 	mla	r7, r7, r6, r5
 801e79c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e7a0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e7a4:	b2d2      	uxtb	r2, r2
 801e7a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e7aa:	b2bf      	uxth	r7, r7
 801e7ac:	fb1e fe03 	smulbb	lr, lr, r3
 801e7b0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e7b4:	fa5f fc8c 	uxtb.w	ip, ip
 801e7b8:	fb12 f203 	smulbb	r2, r2, r3
 801e7bc:	fb05 e506 	mla	r5, r5, r6, lr
 801e7c0:	fb0c 2c06 	mla	ip, ip, r6, r2
 801e7c4:	f107 0e01 	add.w	lr, r7, #1
 801e7c8:	fa1f fc8c 	uxth.w	ip, ip
 801e7cc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801e7d0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801e7d4:	f10c 0701 	add.w	r7, ip, #1
 801e7d8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e7dc:	b2ad      	uxth	r5, r5
 801e7de:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e7e2:	ea47 070e 	orr.w	r7, r7, lr
 801e7e6:	f105 0e01 	add.w	lr, r5, #1
 801e7ea:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e7ee:	096d      	lsrs	r5, r5, #5
 801e7f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e7f4:	432f      	orrs	r7, r5
 801e7f6:	8007      	strh	r7, [r0, #0]
 801e7f8:	3002      	adds	r0, #2
 801e7fa:	3402      	adds	r4, #2
 801e7fc:	e7ac      	b.n	801e758 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801e7fe:	f8b9 3000 	ldrh.w	r3, [r9]
 801e802:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e806:	eba3 0308 	sub.w	r3, r3, r8
 801e80a:	eba6 0608 	sub.w	r6, r6, r8
 801e80e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e812:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e816:	440e      	add	r6, r1
 801e818:	e797      	b.n	801e74a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801e81a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801e81e:	42a8      	cmp	r0, r5
 801e820:	d262      	bcs.n	801e8e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e822:	9b00      	ldr	r3, [sp, #0]
 801e824:	4631      	mov	r1, r6
 801e826:	eb00 0b03 	add.w	fp, r0, r3
 801e82a:	4558      	cmp	r0, fp
 801e82c:	d24e      	bcs.n	801e8cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801e82e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e832:	b12b      	cbz	r3, 801e840 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e834:	2bff      	cmp	r3, #255	; 0xff
 801e836:	f8b4 e000 	ldrh.w	lr, [r4]
 801e83a:	d104      	bne.n	801e846 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801e83c:	f8a0 e000 	strh.w	lr, [r0]
 801e840:	3002      	adds	r0, #2
 801e842:	3402      	adds	r4, #2
 801e844:	e7f1      	b.n	801e82a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801e846:	8802      	ldrh	r2, [r0, #0]
 801e848:	b29f      	uxth	r7, r3
 801e84a:	1216      	asrs	r6, r2, #8
 801e84c:	43db      	mvns	r3, r3
 801e84e:	b2db      	uxtb	r3, r3
 801e850:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e854:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e858:	fb16 f603 	smulbb	r6, r6, r3
 801e85c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801e860:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e864:	00d2      	lsls	r2, r2, #3
 801e866:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e86a:	b2d2      	uxtb	r2, r2
 801e86c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e870:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e874:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e878:	fb1a fa03 	smulbb	sl, sl, r3
 801e87c:	fa1f fc8c 	uxth.w	ip, ip
 801e880:	fb12 f303 	smulbb	r3, r2, r3
 801e884:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e888:	fa5f fe8e 	uxtb.w	lr, lr
 801e88c:	fb06 a607 	mla	r6, r6, r7, sl
 801e890:	f10c 0201 	add.w	r2, ip, #1
 801e894:	fb0e 3307 	mla	r3, lr, r7, r3
 801e898:	b2b6      	uxth	r6, r6
 801e89a:	b29b      	uxth	r3, r3
 801e89c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e8a0:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801e8a4:	f106 0a01 	add.w	sl, r6, #1
 801e8a8:	f103 0c01 	add.w	ip, r3, #1
 801e8ac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e8b0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e8b4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e8b8:	0976      	lsrs	r6, r6, #5
 801e8ba:	ea4c 0c02 	orr.w	ip, ip, r2
 801e8be:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e8c2:	ea4c 0c06 	orr.w	ip, ip, r6
 801e8c6:	f8a0 c000 	strh.w	ip, [r0]
 801e8ca:	e7b9      	b.n	801e840 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e8cc:	f8b9 3000 	ldrh.w	r3, [r9]
 801e8d0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e8d4:	eba3 0308 	sub.w	r3, r3, r8
 801e8d8:	eba6 0608 	sub.w	r6, r6, r8
 801e8dc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e8e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e8e4:	440e      	add	r6, r1
 801e8e6:	e79a      	b.n	801e81e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801e8e8:	4b03      	ldr	r3, [pc, #12]	; (801e8f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e8ea:	6818      	ldr	r0, [r3, #0]
 801e8ec:	6803      	ldr	r3, [r0, #0]
 801e8ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e8f0:	4798      	blx	r3
 801e8f2:	b007      	add	sp, #28
 801e8f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8f8:	200132bc 	.word	0x200132bc
 801e8fc:	200132b6 	.word	0x200132b6

0801e900 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801e900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e904:	b089      	sub	sp, #36	; 0x24
 801e906:	4682      	mov	sl, r0
 801e908:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801e90c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e90e:	460f      	mov	r7, r1
 801e910:	4691      	mov	r9, r2
 801e912:	4698      	mov	r8, r3
 801e914:	2e00      	cmp	r6, #0
 801e916:	d03d      	beq.n	801e994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e918:	4608      	mov	r0, r1
 801e91a:	f7fa fe59 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e91e:	4605      	mov	r5, r0
 801e920:	4638      	mov	r0, r7
 801e922:	f7fa fe89 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e926:	f8ad 000e 	strh.w	r0, [sp, #14]
 801e92a:	4638      	mov	r0, r7
 801e92c:	f8ad 9008 	strh.w	r9, [sp, #8]
 801e930:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e934:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e938:	f7fa ff36 	bl	80197a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801e93c:	4605      	mov	r5, r0
 801e93e:	4638      	mov	r0, r7
 801e940:	f7fa ff62 	bl	8019808 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e944:	4681      	mov	r9, r0
 801e946:	4638      	mov	r0, r7
 801e948:	f7fa ffb2 	bl	80198b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801e94c:	280b      	cmp	r0, #11
 801e94e:	d821      	bhi.n	801e994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e950:	e8df f000 	tbb	[pc, r0]
 801e954:	2006aebe 	.word	0x2006aebe
 801e958:	20202020 	.word	0x20202020
 801e95c:	b5202020 	.word	0xb5202020
 801e960:	4bb0      	ldr	r3, [pc, #704]	; (801ec24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801e962:	6818      	ldr	r0, [r3, #0]
 801e964:	6803      	ldr	r3, [r0, #0]
 801e966:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e968:	4798      	blx	r3
 801e96a:	2eff      	cmp	r6, #255	; 0xff
 801e96c:	d101      	bne.n	801e972 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e96e:	0683      	lsls	r3, r0, #26
 801e970:	d506      	bpl.n	801e980 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801e972:	4633      	mov	r3, r6
 801e974:	4622      	mov	r2, r4
 801e976:	a902      	add	r1, sp, #8
 801e978:	4628      	mov	r0, r5
 801e97a:	f7ff f909 	bl	801db90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e97e:	e009      	b.n	801e994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e980:	4638      	mov	r0, r7
 801e982:	f7fa fed9 	bl	8019738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e986:	b940      	cbnz	r0, 801e99a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801e988:	4623      	mov	r3, r4
 801e98a:	aa02      	add	r2, sp, #8
 801e98c:	4629      	mov	r1, r5
 801e98e:	4650      	mov	r0, sl
 801e990:	f7ff f9e4 	bl	801dd5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e994:	b009      	add	sp, #36	; 0x24
 801e996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e99a:	f10d 0818 	add.w	r8, sp, #24
 801e99e:	4639      	mov	r1, r7
 801e9a0:	4640      	mov	r0, r8
 801e9a2:	f7fa fe7d 	bl	80196a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e9a6:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e9aa:	af04      	add	r7, sp, #16
 801e9ac:	e887 0003 	stmia.w	r7, {r0, r1}
 801e9b0:	4638      	mov	r0, r7
 801e9b2:	4621      	mov	r1, r4
 801e9b4:	f7f1 fa6a 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 801e9b8:	4638      	mov	r0, r7
 801e9ba:	f7f1 faaa 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e9be:	2800      	cmp	r0, #0
 801e9c0:	d1d7      	bne.n	801e972 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e9c2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e9c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e9ca:	4293      	cmp	r3, r2
 801e9cc:	dd12      	ble.n	801e9f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801e9ce:	1a9b      	subs	r3, r3, r2
 801e9d0:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e9d4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e9d8:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e9dc:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e9e0:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e9e4:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e9e8:	4642      	mov	r2, r8
 801e9ea:	4633      	mov	r3, r6
 801e9ec:	a902      	add	r1, sp, #8
 801e9ee:	4628      	mov	r0, r5
 801e9f0:	f7ff f8ce 	bl	801db90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e9f4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e9f8:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e9fc:	4293      	cmp	r3, r2
 801e9fe:	dd12      	ble.n	801ea26 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801ea00:	1a9b      	subs	r3, r3, r2
 801ea02:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801ea06:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801ea0a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ea0e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ea12:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ea16:	f8ad 101e 	strh.w	r1, [sp, #30]
 801ea1a:	23ff      	movs	r3, #255	; 0xff
 801ea1c:	4642      	mov	r2, r8
 801ea1e:	a902      	add	r1, sp, #8
 801ea20:	4628      	mov	r0, r5
 801ea22:	f7ff f8b5 	bl	801db90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ea26:	463b      	mov	r3, r7
 801ea28:	aa02      	add	r2, sp, #8
 801ea2a:	4629      	mov	r1, r5
 801ea2c:	4650      	mov	r0, sl
 801ea2e:	f7ff f995 	bl	801dd5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ea32:	88a2      	ldrh	r2, [r4, #4]
 801ea34:	8823      	ldrh	r3, [r4, #0]
 801ea36:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ea3a:	4413      	add	r3, r2
 801ea3c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ea40:	440a      	add	r2, r1
 801ea42:	b29b      	uxth	r3, r3
 801ea44:	b292      	uxth	r2, r2
 801ea46:	b211      	sxth	r1, r2
 801ea48:	b218      	sxth	r0, r3
 801ea4a:	4288      	cmp	r0, r1
 801ea4c:	dd12      	ble.n	801ea74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801ea4e:	1a9b      	subs	r3, r3, r2
 801ea50:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ea54:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801ea58:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ea5c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ea60:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ea64:	23ff      	movs	r3, #255	; 0xff
 801ea66:	4642      	mov	r2, r8
 801ea68:	a902      	add	r1, sp, #8
 801ea6a:	4628      	mov	r0, r5
 801ea6c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801ea70:	f7ff f88e 	bl	801db90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ea74:	88e2      	ldrh	r2, [r4, #6]
 801ea76:	8863      	ldrh	r3, [r4, #2]
 801ea78:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ea7c:	4413      	add	r3, r2
 801ea7e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ea82:	440a      	add	r2, r1
 801ea84:	b29b      	uxth	r3, r3
 801ea86:	b292      	uxth	r2, r2
 801ea88:	b211      	sxth	r1, r2
 801ea8a:	b218      	sxth	r0, r3
 801ea8c:	4288      	cmp	r0, r1
 801ea8e:	dd81      	ble.n	801e994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea90:	1a9b      	subs	r3, r3, r2
 801ea92:	f9b4 6000 	ldrsh.w	r6, [r4]
 801ea96:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ea9a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ea9e:	f8ad 6018 	strh.w	r6, [sp, #24]
 801eaa2:	f8ad 101a 	strh.w	r1, [sp, #26]
 801eaa6:	f8ad 001c 	strh.w	r0, [sp, #28]
 801eaaa:	23ff      	movs	r3, #255	; 0xff
 801eaac:	4642      	mov	r2, r8
 801eaae:	e762      	b.n	801e976 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801eab0:	4633      	mov	r3, r6
 801eab2:	4622      	mov	r2, r4
 801eab4:	a902      	add	r1, sp, #8
 801eab6:	4628      	mov	r0, r5
 801eab8:	f7ff f9c0 	bl	801de3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801eabc:	e76a      	b.n	801e994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eabe:	e9cd 4600 	strd	r4, r6, [sp]
 801eac2:	ab02      	add	r3, sp, #8
 801eac4:	464a      	mov	r2, r9
 801eac6:	4629      	mov	r1, r5
 801eac8:	4650      	mov	r0, sl
 801eaca:	f7ff fd97 	bl	801e5fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801eace:	e761      	b.n	801e994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ead0:	4638      	mov	r0, r7
 801ead2:	f7fa fe31 	bl	8019738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ead6:	b950      	cbnz	r0, 801eaee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801ead8:	e9cd 6000 	strd	r6, r0, [sp]
 801eadc:	f8da 3000 	ldr.w	r3, [sl]
 801eae0:	aa02      	add	r2, sp, #8
 801eae2:	68de      	ldr	r6, [r3, #12]
 801eae4:	4629      	mov	r1, r5
 801eae6:	4623      	mov	r3, r4
 801eae8:	4650      	mov	r0, sl
 801eaea:	47b0      	blx	r6
 801eaec:	e752      	b.n	801e994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eaee:	f10d 0818 	add.w	r8, sp, #24
 801eaf2:	4639      	mov	r1, r7
 801eaf4:	4640      	mov	r0, r8
 801eaf6:	f7fa fdd3 	bl	80196a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801eafa:	e898 0003 	ldmia.w	r8, {r0, r1}
 801eafe:	af04      	add	r7, sp, #16
 801eb00:	e887 0003 	stmia.w	r7, {r0, r1}
 801eb04:	4638      	mov	r0, r7
 801eb06:	4621      	mov	r1, r4
 801eb08:	f7f1 f9c0 	bl	800fe8c <_ZN8touchgfx4RectaNERKS0_>
 801eb0c:	4638      	mov	r0, r7
 801eb0e:	f7f1 fa00 	bl	800ff12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801eb12:	b138      	cbz	r0, 801eb24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801eb14:	9600      	str	r6, [sp, #0]
 801eb16:	4623      	mov	r3, r4
 801eb18:	aa02      	add	r2, sp, #8
 801eb1a:	4649      	mov	r1, r9
 801eb1c:	4628      	mov	r0, r5
 801eb1e:	f7ff fdc9 	bl	801e6b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eb22:	e737      	b.n	801e994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eb24:	e9cd 6000 	strd	r6, r0, [sp]
 801eb28:	f8da 3000 	ldr.w	r3, [sl]
 801eb2c:	aa02      	add	r2, sp, #8
 801eb2e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801eb32:	4629      	mov	r1, r5
 801eb34:	463b      	mov	r3, r7
 801eb36:	4650      	mov	r0, sl
 801eb38:	47d8      	blx	fp
 801eb3a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801eb3e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801eb42:	4293      	cmp	r3, r2
 801eb44:	dd13      	ble.n	801eb6e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801eb46:	f9b4 0000 	ldrsh.w	r0, [r4]
 801eb4a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801eb4e:	f8ad 0018 	strh.w	r0, [sp, #24]
 801eb52:	1a9b      	subs	r3, r3, r2
 801eb54:	f8ad 201a 	strh.w	r2, [sp, #26]
 801eb58:	f8ad 101c 	strh.w	r1, [sp, #28]
 801eb5c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801eb60:	9600      	str	r6, [sp, #0]
 801eb62:	4643      	mov	r3, r8
 801eb64:	aa02      	add	r2, sp, #8
 801eb66:	4649      	mov	r1, r9
 801eb68:	4628      	mov	r0, r5
 801eb6a:	f7ff fda3 	bl	801e6b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eb6e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801eb72:	f9b4 2000 	ldrsh.w	r2, [r4]
 801eb76:	4293      	cmp	r3, r2
 801eb78:	dd13      	ble.n	801eba2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801eb7a:	1a9b      	subs	r3, r3, r2
 801eb7c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801eb80:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801eb84:	f8ad 2018 	strh.w	r2, [sp, #24]
 801eb88:	f8ad 001a 	strh.w	r0, [sp, #26]
 801eb8c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801eb90:	f8ad 101e 	strh.w	r1, [sp, #30]
 801eb94:	9600      	str	r6, [sp, #0]
 801eb96:	4643      	mov	r3, r8
 801eb98:	aa02      	add	r2, sp, #8
 801eb9a:	4649      	mov	r1, r9
 801eb9c:	4628      	mov	r0, r5
 801eb9e:	f7ff fd89 	bl	801e6b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eba2:	88a2      	ldrh	r2, [r4, #4]
 801eba4:	8823      	ldrh	r3, [r4, #0]
 801eba6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ebaa:	4413      	add	r3, r2
 801ebac:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ebb0:	440a      	add	r2, r1
 801ebb2:	b29b      	uxth	r3, r3
 801ebb4:	b292      	uxth	r2, r2
 801ebb6:	b211      	sxth	r1, r2
 801ebb8:	b218      	sxth	r0, r3
 801ebba:	4288      	cmp	r0, r1
 801ebbc:	dd13      	ble.n	801ebe6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801ebbe:	1a9b      	subs	r3, r3, r2
 801ebc0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ebc4:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801ebc8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ebcc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ebd0:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ebd4:	9600      	str	r6, [sp, #0]
 801ebd6:	4643      	mov	r3, r8
 801ebd8:	aa02      	add	r2, sp, #8
 801ebda:	4649      	mov	r1, r9
 801ebdc:	4628      	mov	r0, r5
 801ebde:	f8ad 701a 	strh.w	r7, [sp, #26]
 801ebe2:	f7ff fd67 	bl	801e6b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ebe6:	88e2      	ldrh	r2, [r4, #6]
 801ebe8:	8863      	ldrh	r3, [r4, #2]
 801ebea:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ebee:	4413      	add	r3, r2
 801ebf0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ebf4:	440a      	add	r2, r1
 801ebf6:	b29b      	uxth	r3, r3
 801ebf8:	b292      	uxth	r2, r2
 801ebfa:	b211      	sxth	r1, r2
 801ebfc:	b218      	sxth	r0, r3
 801ebfe:	4288      	cmp	r0, r1
 801ec00:	f77f aec8 	ble.w	801e994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ec04:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ec08:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ec0c:	f8ad 7018 	strh.w	r7, [sp, #24]
 801ec10:	1a9b      	subs	r3, r3, r2
 801ec12:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ec16:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ec1a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ec1e:	9600      	str	r6, [sp, #0]
 801ec20:	4643      	mov	r3, r8
 801ec22:	e779      	b.n	801eb18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801ec24:	200132bc 	.word	0x200132bc

0801ec28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801ec28:	b180      	cbz	r0, 801ec4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801ec2a:	2903      	cmp	r1, #3
 801ec2c:	d81c      	bhi.n	801ec68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ec2e:	e8df f001 	tbb	[pc, r1]
 801ec32:	1d02      	.short	0x1d02
 801ec34:	1f08      	.short	0x1f08
 801ec36:	4b10      	ldr	r3, [pc, #64]	; (801ec78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ec38:	8818      	ldrh	r0, [r3, #0]
 801ec3a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ec3e:	4240      	negs	r0, r0
 801ec40:	4770      	bx	lr
 801ec42:	4b0d      	ldr	r3, [pc, #52]	; (801ec78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ec44:	8818      	ldrh	r0, [r3, #0]
 801ec46:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ec4a:	4770      	bx	lr
 801ec4c:	2903      	cmp	r1, #3
 801ec4e:	d80b      	bhi.n	801ec68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ec50:	a301      	add	r3, pc, #4	; (adr r3, 801ec58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801ec52:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ec56:	bf00      	nop
 801ec58:	0801ec6d 	.word	0x0801ec6d
 801ec5c:	0801ec43 	.word	0x0801ec43
 801ec60:	0801ec71 	.word	0x0801ec71
 801ec64:	0801ec37 	.word	0x0801ec37
 801ec68:	2000      	movs	r0, #0
 801ec6a:	4770      	bx	lr
 801ec6c:	2001      	movs	r0, #1
 801ec6e:	4770      	bx	lr
 801ec70:	f04f 30ff 	mov.w	r0, #4294967295
 801ec74:	4770      	bx	lr
 801ec76:	bf00      	nop
 801ec78:	200132b6 	.word	0x200132b6

0801ec7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801ec7c:	b180      	cbz	r0, 801eca0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801ec7e:	2903      	cmp	r1, #3
 801ec80:	d81c      	bhi.n	801ecbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ec82:	e8df f001 	tbb	[pc, r1]
 801ec86:	021d      	.short	0x021d
 801ec88:	071f      	.short	0x071f
 801ec8a:	4b10      	ldr	r3, [pc, #64]	; (801eccc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ec8c:	8818      	ldrh	r0, [r3, #0]
 801ec8e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ec92:	4770      	bx	lr
 801ec94:	4b0d      	ldr	r3, [pc, #52]	; (801eccc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ec96:	8818      	ldrh	r0, [r3, #0]
 801ec98:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ec9c:	4240      	negs	r0, r0
 801ec9e:	4770      	bx	lr
 801eca0:	2903      	cmp	r1, #3
 801eca2:	d80b      	bhi.n	801ecbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801eca4:	a301      	add	r3, pc, #4	; (adr r3, 801ecac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801eca6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ecaa:	bf00      	nop
 801ecac:	0801ec8b 	.word	0x0801ec8b
 801ecb0:	0801ecc5 	.word	0x0801ecc5
 801ecb4:	0801ec95 	.word	0x0801ec95
 801ecb8:	0801ecc1 	.word	0x0801ecc1
 801ecbc:	2000      	movs	r0, #0
 801ecbe:	4770      	bx	lr
 801ecc0:	2001      	movs	r0, #1
 801ecc2:	4770      	bx	lr
 801ecc4:	f04f 30ff 	mov.w	r0, #4294967295
 801ecc8:	4770      	bx	lr
 801ecca:	bf00      	nop
 801eccc:	200132b6 	.word	0x200132b6

0801ecd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ecd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecd4:	b099      	sub	sp, #100	; 0x64
 801ecd6:	910b      	str	r1, [sp, #44]	; 0x2c
 801ecd8:	a914      	add	r1, sp, #80	; 0x50
 801ecda:	e881 000c 	stmia.w	r1, {r2, r3}
 801ecde:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ece2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801ece6:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ecea:	9309      	str	r3, [sp, #36]	; 0x24
 801ecec:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ecf0:	9310      	str	r3, [sp, #64]	; 0x40
 801ecf2:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ecf6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801ecfa:	930c      	str	r3, [sp, #48]	; 0x30
 801ecfc:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ed00:	798f      	ldrb	r7, [r1, #6]
 801ed02:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801ed06:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801ed0a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801ed0e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801ed12:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801ed16:	431f      	orrs	r7, r3
 801ed18:	f000 8195 	beq.w	801f046 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ed1c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ed20:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801ed24:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ed28:	ea59 0903 	orrs.w	r9, r9, r3
 801ed2c:	f000 818b 	beq.w	801f046 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ed30:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ed34:	b29b      	uxth	r3, r3
 801ed36:	2d00      	cmp	r5, #0
 801ed38:	f000 812e 	beq.w	801ef98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801ed3c:	1aed      	subs	r5, r5, r3
 801ed3e:	b2ad      	uxth	r5, r5
 801ed40:	042b      	lsls	r3, r5, #16
 801ed42:	d502      	bpl.n	801ed4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ed44:	1b64      	subs	r4, r4, r5
 801ed46:	b224      	sxth	r4, r4
 801ed48:	2500      	movs	r5, #0
 801ed4a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ed4e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801ed52:	428c      	cmp	r4, r1
 801ed54:	b28b      	uxth	r3, r1
 801ed56:	bfbf      	itttt	lt
 801ed58:	18ed      	addlt	r5, r5, r3
 801ed5a:	1b2c      	sublt	r4, r5, r4
 801ed5c:	b2a5      	uxthlt	r5, r4
 801ed5e:	460c      	movlt	r4, r1
 801ed60:	8891      	ldrh	r1, [r2, #4]
 801ed62:	440b      	add	r3, r1
 801ed64:	b21b      	sxth	r3, r3
 801ed66:	930f      	str	r3, [sp, #60]	; 0x3c
 801ed68:	88d3      	ldrh	r3, [r2, #6]
 801ed6a:	8852      	ldrh	r2, [r2, #2]
 801ed6c:	4413      	add	r3, r2
 801ed6e:	b21b      	sxth	r3, r3
 801ed70:	930d      	str	r3, [sp, #52]	; 0x34
 801ed72:	4bbe      	ldr	r3, [pc, #760]	; (801f06c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801ed74:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ed76:	f893 b000 	ldrb.w	fp, [r3]
 801ed7a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801ed7e:	f1dc 0300 	rsbs	r3, ip, #0
 801ed82:	eb43 030c 	adc.w	r3, r3, ip
 801ed86:	930e      	str	r3, [sp, #56]	; 0x38
 801ed88:	4621      	mov	r1, r4
 801ed8a:	4653      	mov	r3, sl
 801ed8c:	a814      	add	r0, sp, #80	; 0x50
 801ed8e:	f7f6 fc90 	bl	80156b2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801ed92:	4621      	mov	r1, r4
 801ed94:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ed98:	4653      	mov	r3, sl
 801ed9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ed9c:	a814      	add	r0, sp, #80	; 0x50
 801ed9e:	f7f6 fca5 	bl	80156ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801eda2:	a918      	add	r1, sp, #96	; 0x60
 801eda4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801eda8:	a817      	add	r0, sp, #92	; 0x5c
 801edaa:	f7f6 fdcb 	bl	8015944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801edae:	f1ba 0f00 	cmp.w	sl, #0
 801edb2:	f040 80f4 	bne.w	801ef9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801edb6:	f1bb 0f01 	cmp.w	fp, #1
 801edba:	f040 80f8 	bne.w	801efae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801edbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801edc0:	2b00      	cmp	r3, #0
 801edc2:	f040 8145 	bne.w	801f050 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801edc6:	b2ba      	uxth	r2, r7
 801edc8:	b905      	cbnz	r5, 801edcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801edca:	b16e      	cbz	r6, 801ede8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801edcc:	fb06 5302 	mla	r3, r6, r2, r5
 801edd0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801edd2:	fb08 f303 	mul.w	r3, r8, r3
 801edd6:	4631      	mov	r1, r6
 801edd8:	f003 0607 	and.w	r6, r3, #7
 801eddc:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801ede0:	9328      	str	r3, [sp, #160]	; 0xa0
 801ede2:	eba9 0301 	sub.w	r3, r9, r1
 801ede6:	930a      	str	r3, [sp, #40]	; 0x28
 801ede8:	4651      	mov	r1, sl
 801edea:	980e      	ldr	r0, [sp, #56]	; 0x38
 801edec:	f7ff ff1c 	bl	801ec28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801edf0:	4681      	mov	r9, r0
 801edf2:	980e      	ldr	r0, [sp, #56]	; 0x38
 801edf4:	f7ff ff42 	bl	801ec7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801edf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801edfa:	9909      	ldr	r1, [sp, #36]	; 0x24
 801edfc:	eba3 0a01 	sub.w	sl, r3, r1
 801ee00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ee02:	459a      	cmp	sl, r3
 801ee04:	bfa8      	it	ge
 801ee06:	469a      	movge	sl, r3
 801ee08:	f1ba 0f00 	cmp.w	sl, #0
 801ee0c:	4683      	mov	fp, r0
 801ee0e:	f340 811a 	ble.w	801f046 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ee12:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ee14:	1b64      	subs	r4, r4, r5
 801ee16:	1b1c      	subs	r4, r3, r4
 801ee18:	42bc      	cmp	r4, r7
 801ee1a:	bfd4      	ite	le
 801ee1c:	ebc5 0504 	rsble	r5, r5, r4
 801ee20:	ebc5 0507 	rsbgt	r5, r5, r7
 801ee24:	2d00      	cmp	r5, #0
 801ee26:	f340 810e 	ble.w	801f046 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ee2a:	1b52      	subs	r2, r2, r5
 801ee2c:	fb08 f302 	mul.w	r3, r8, r2
 801ee30:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee32:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ee34:	2b00      	cmp	r3, #0
 801ee36:	f040 8116 	bne.w	801f066 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ee3a:	4b8d      	ldr	r3, [pc, #564]	; (801f070 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801ee3c:	6818      	ldr	r0, [r3, #0]
 801ee3e:	6803      	ldr	r3, [r0, #0]
 801ee40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ee42:	4798      	blx	r3
 801ee44:	2301      	movs	r3, #1
 801ee46:	fa03 f308 	lsl.w	r3, r3, r8
 801ee4a:	4a8a      	ldr	r2, [pc, #552]	; (801f074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801ee4c:	3b01      	subs	r3, #1
 801ee4e:	b2db      	uxtb	r3, r3
 801ee50:	8811      	ldrh	r1, [r2, #0]
 801ee52:	930e      	str	r3, [sp, #56]	; 0x38
 801ee54:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801ee58:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801ee5c:	fb01 2303 	mla	r3, r1, r3, r2
 801ee60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ee64:	930a      	str	r3, [sp, #40]	; 0x28
 801ee66:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee68:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801ee6c:	9313      	str	r3, [sp, #76]	; 0x4c
 801ee6e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee70:	0a19      	lsrs	r1, r3, #8
 801ee72:	b2cb      	uxtb	r3, r1
 801ee74:	9312      	str	r3, [sp, #72]	; 0x48
 801ee76:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee78:	b2db      	uxtb	r3, r3
 801ee7a:	9311      	str	r3, [sp, #68]	; 0x44
 801ee7c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee7e:	095a      	lsrs	r2, r3, #5
 801ee80:	4b7d      	ldr	r3, [pc, #500]	; (801f078 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ee82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ee86:	400b      	ands	r3, r1
 801ee88:	4313      	orrs	r3, r2
 801ee8a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ee8c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ee90:	4313      	orrs	r3, r2
 801ee92:	b29b      	uxth	r3, r3
 801ee94:	9310      	str	r3, [sp, #64]	; 0x40
 801ee96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee98:	781a      	ldrb	r2, [r3, #0]
 801ee9a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801ee9e:	4132      	asrs	r2, r6
 801eea0:	fb05 b919 	mls	r9, r5, r9, fp
 801eea4:	fb03 fb05 	mul.w	fp, r3, r5
 801eea8:	b2d2      	uxtb	r2, r2
 801eeaa:	930d      	str	r3, [sp, #52]	; 0x34
 801eeac:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801eeb0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801eeb4:	f0c0 80f5 	bcc.w	801f0a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801eeb8:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801eebc:	46ae      	mov	lr, r5
 801eebe:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801eec2:	f0c0 80dd 	bcc.w	801f080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801eec6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eec8:	4013      	ands	r3, r2
 801eeca:	d055      	beq.n	801ef78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801eecc:	20ff      	movs	r0, #255	; 0xff
 801eece:	990e      	ldr	r1, [sp, #56]	; 0x38
 801eed0:	fb90 f1f1 	sdiv	r1, r0, r1
 801eed4:	434b      	muls	r3, r1
 801eed6:	2bfe      	cmp	r3, #254	; 0xfe
 801eed8:	dd03      	ble.n	801eee2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801eeda:	990c      	ldr	r1, [sp, #48]	; 0x30
 801eedc:	4281      	cmp	r1, r0
 801eede:	f000 80cd 	beq.w	801f07c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801eee2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801eee4:	f8bc 4000 	ldrh.w	r4, [ip]
 801eee8:	fb11 f303 	smulbb	r3, r1, r3
 801eeec:	b29b      	uxth	r3, r3
 801eeee:	1c59      	adds	r1, r3, #1
 801eef0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801eef4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eef8:	b29f      	uxth	r7, r3
 801eefa:	43db      	mvns	r3, r3
 801eefc:	b2db      	uxtb	r3, r3
 801eefe:	9309      	str	r3, [sp, #36]	; 0x24
 801ef00:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ef02:	1220      	asrs	r0, r4, #8
 801ef04:	fb13 f907 	smulbb	r9, r3, r7
 801ef08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ef0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef0e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801ef12:	fb00 9003 	mla	r0, r0, r3, r9
 801ef16:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ef18:	10e1      	asrs	r1, r4, #3
 801ef1a:	fb13 f907 	smulbb	r9, r3, r7
 801ef1e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ef22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef24:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ef28:	fb01 9103 	mla	r1, r1, r3, r9
 801ef2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ef2e:	00e4      	lsls	r4, r4, #3
 801ef30:	fb13 f707 	smulbb	r7, r3, r7
 801ef34:	b2e4      	uxtb	r4, r4
 801ef36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef38:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ef3c:	fb04 7403 	mla	r4, r4, r3, r7
 801ef40:	b280      	uxth	r0, r0
 801ef42:	b2a4      	uxth	r4, r4
 801ef44:	1c43      	adds	r3, r0, #1
 801ef46:	f104 0901 	add.w	r9, r4, #1
 801ef4a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ef4e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801ef52:	b289      	uxth	r1, r1
 801ef54:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801ef58:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ef5c:	ea49 0000 	orr.w	r0, r9, r0
 801ef60:	f101 0901 	add.w	r9, r1, #1
 801ef64:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801ef68:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ef6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ef70:	ea40 0009 	orr.w	r0, r0, r9
 801ef74:	f8ac 0000 	strh.w	r0, [ip]
 801ef78:	4446      	add	r6, r8
 801ef7a:	b2b6      	uxth	r6, r6
 801ef7c:	2e07      	cmp	r6, #7
 801ef7e:	bf81      	itttt	hi
 801ef80:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801ef82:	785a      	ldrbhi	r2, [r3, #1]
 801ef84:	3301      	addhi	r3, #1
 801ef86:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801ef88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ef8a:	bf9a      	itte	ls
 801ef8c:	fa42 f208 	asrls.w	r2, r2, r8
 801ef90:	b2d2      	uxtbls	r2, r2
 801ef92:	2600      	movhi	r6, #0
 801ef94:	449c      	add	ip, r3
 801ef96:	e792      	b.n	801eebe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801ef98:	441c      	add	r4, r3
 801ef9a:	b224      	sxth	r4, r4
 801ef9c:	e6d5      	b.n	801ed4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ef9e:	f1ba 0f01 	cmp.w	sl, #1
 801efa2:	f47f af0c 	bne.w	801edbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801efa6:	f1bb 0f01 	cmp.w	fp, #1
 801efaa:	f47f af08 	bne.w	801edbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801efae:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801f070 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801efb2:	f8db 0000 	ldr.w	r0, [fp]
 801efb6:	6803      	ldr	r3, [r0, #0]
 801efb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801efba:	4798      	blx	r3
 801efbc:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801efc0:	465a      	mov	r2, fp
 801efc2:	d006      	beq.n	801efd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801efc4:	f1b8 0f04 	cmp.w	r8, #4
 801efc8:	d140      	bne.n	801f04c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801efca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801efcc:	3300      	adds	r3, #0
 801efce:	bf18      	it	ne
 801efd0:	2301      	movne	r3, #1
 801efd2:	0580      	lsls	r0, r0, #22
 801efd4:	d56e      	bpl.n	801f0b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801efd6:	f1b8 0f08 	cmp.w	r8, #8
 801efda:	d16b      	bne.n	801f0b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801efdc:	2b00      	cmp	r3, #0
 801efde:	bf0c      	ite	eq
 801efe0:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801efe4:	f44f 7180 	movne.w	r1, #256	; 0x100
 801efe8:	2d00      	cmp	r5, #0
 801efea:	f47f aee8 	bne.w	801edbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801efee:	2e00      	cmp	r6, #0
 801eff0:	f47f aee5 	bne.w	801edbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801eff4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801eff6:	19e3      	adds	r3, r4, r7
 801eff8:	4283      	cmp	r3, r0
 801effa:	f73f aee0 	bgt.w	801edbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801effe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f000:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f002:	444b      	add	r3, r9
 801f004:	4283      	cmp	r3, r0
 801f006:	f73f aeda 	bgt.w	801edbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f00a:	6810      	ldr	r0, [r2, #0]
 801f00c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801f010:	6804      	ldr	r4, [r0, #0]
 801f012:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801f016:	b2bf      	uxth	r7, r7
 801f018:	f1b8 0f08 	cmp.w	r8, #8
 801f01c:	f04f 0500 	mov.w	r5, #0
 801f020:	bf18      	it	ne
 801f022:	3701      	addne	r7, #1
 801f024:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f028:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f02a:	9104      	str	r1, [sp, #16]
 801f02c:	bf18      	it	ne
 801f02e:	f027 0701 	bicne.w	r7, r7, #1
 801f032:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f034:	bf18      	it	ne
 801f036:	b2bf      	uxthne	r7, r7
 801f038:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801f03c:	e9cd 7900 	strd	r7, r9, [sp]
 801f040:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f042:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801f044:	47a0      	blx	r4
 801f046:	b019      	add	sp, #100	; 0x64
 801f048:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f04c:	2300      	movs	r3, #0
 801f04e:	e7c0      	b.n	801efd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f050:	2208      	movs	r2, #8
 801f052:	fb92 f3f8 	sdiv	r3, r2, r8
 801f056:	1e5a      	subs	r2, r3, #1
 801f058:	443a      	add	r2, r7
 801f05a:	fb92 f2f3 	sdiv	r2, r2, r3
 801f05e:	fb12 f203 	smulbb	r2, r2, r3
 801f062:	b292      	uxth	r2, r2
 801f064:	e6b0      	b.n	801edc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801f066:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801f068:	e6ec      	b.n	801ee44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801f06a:	bf00      	nop
 801f06c:	200132b4 	.word	0x200132b4
 801f070:	200132bc 	.word	0x200132bc
 801f074:	200132b6 	.word	0x200132b6
 801f078:	00fff800 	.word	0x00fff800
 801f07c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f07e:	e779      	b.n	801ef74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801f080:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f082:	b153      	cbz	r3, 801f09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801f084:	441e      	add	r6, r3
 801f086:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f088:	b2b6      	uxth	r6, r6
 801f08a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801f08e:	f006 0607 	and.w	r6, r6, #7
 801f092:	781a      	ldrb	r2, [r3, #0]
 801f094:	9328      	str	r3, [sp, #160]	; 0xa0
 801f096:	4132      	asrs	r2, r6
 801f098:	b2d2      	uxtb	r2, r2
 801f09a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f09c:	445b      	add	r3, fp
 801f09e:	930a      	str	r3, [sp, #40]	; 0x28
 801f0a0:	e706      	b.n	801eeb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801f0a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f0a4:	2b00      	cmp	r3, #0
 801f0a6:	d1ce      	bne.n	801f046 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f0a8:	4b05      	ldr	r3, [pc, #20]	; (801f0c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801f0aa:	6818      	ldr	r0, [r3, #0]
 801f0ac:	6803      	ldr	r3, [r0, #0]
 801f0ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f0b0:	4798      	blx	r3
 801f0b2:	e7c8      	b.n	801f046 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f0b4:	2b00      	cmp	r3, #0
 801f0b6:	f43f ae82 	beq.w	801edbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f0ba:	f44f 7180 	mov.w	r1, #256	; 0x100
 801f0be:	e793      	b.n	801efe8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801f0c0:	200132bc 	.word	0x200132bc

0801f0c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801f0c4:	b538      	push	{r3, r4, r5, lr}
 801f0c6:	4c15      	ldr	r4, [pc, #84]	; (801f11c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801f0c8:	7823      	ldrb	r3, [r4, #0]
 801f0ca:	f3bf 8f5b 	dmb	ish
 801f0ce:	07da      	lsls	r2, r3, #31
 801f0d0:	4605      	mov	r5, r0
 801f0d2:	d40b      	bmi.n	801f0ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f0d4:	4620      	mov	r0, r4
 801f0d6:	f00a fee2 	bl	8029e9e <__cxa_guard_acquire>
 801f0da:	b138      	cbz	r0, 801f0ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f0dc:	4620      	mov	r0, r4
 801f0de:	f00a feea 	bl	8029eb6 <__cxa_guard_release>
 801f0e2:	4a0f      	ldr	r2, [pc, #60]	; (801f120 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f0e4:	490f      	ldr	r1, [pc, #60]	; (801f124 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801f0e6:	4810      	ldr	r0, [pc, #64]	; (801f128 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f0e8:	f00a fed2 	bl	8029e90 <__aeabi_atexit>
 801f0ec:	4c0f      	ldr	r4, [pc, #60]	; (801f12c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801f0ee:	7823      	ldrb	r3, [r4, #0]
 801f0f0:	f3bf 8f5b 	dmb	ish
 801f0f4:	07db      	lsls	r3, r3, #31
 801f0f6:	d40b      	bmi.n	801f110 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f0f8:	4620      	mov	r0, r4
 801f0fa:	f00a fed0 	bl	8029e9e <__cxa_guard_acquire>
 801f0fe:	b138      	cbz	r0, 801f110 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f100:	4620      	mov	r0, r4
 801f102:	f00a fed8 	bl	8029eb6 <__cxa_guard_release>
 801f106:	4a06      	ldr	r2, [pc, #24]	; (801f120 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f108:	4909      	ldr	r1, [pc, #36]	; (801f130 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801f10a:	480a      	ldr	r0, [pc, #40]	; (801f134 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f10c:	f00a fec0 	bl	8029e90 <__aeabi_atexit>
 801f110:	4b05      	ldr	r3, [pc, #20]	; (801f128 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f112:	612b      	str	r3, [r5, #16]
 801f114:	4b07      	ldr	r3, [pc, #28]	; (801f134 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f116:	616b      	str	r3, [r5, #20]
 801f118:	bd38      	pop	{r3, r4, r5, pc}
 801f11a:	bf00      	nop
 801f11c:	2001339c 	.word	0x2001339c
 801f120:	20000000 	.word	0x20000000
 801f124:	0801bec7 	.word	0x0801bec7
 801f128:	200000f0 	.word	0x200000f0
 801f12c:	200133a0 	.word	0x200133a0
 801f130:	0801bec5 	.word	0x0801bec5
 801f134:	200000f4 	.word	0x200000f4

0801f138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f138:	b538      	push	{r3, r4, r5, lr}
 801f13a:	4c15      	ldr	r4, [pc, #84]	; (801f190 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f13c:	7823      	ldrb	r3, [r4, #0]
 801f13e:	f3bf 8f5b 	dmb	ish
 801f142:	07da      	lsls	r2, r3, #31
 801f144:	4605      	mov	r5, r0
 801f146:	d40b      	bmi.n	801f160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f148:	4620      	mov	r0, r4
 801f14a:	f00a fea8 	bl	8029e9e <__cxa_guard_acquire>
 801f14e:	b138      	cbz	r0, 801f160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f150:	4620      	mov	r0, r4
 801f152:	f00a feb0 	bl	8029eb6 <__cxa_guard_release>
 801f156:	4a0f      	ldr	r2, [pc, #60]	; (801f194 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f158:	490f      	ldr	r1, [pc, #60]	; (801f198 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f15a:	4810      	ldr	r0, [pc, #64]	; (801f19c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f15c:	f00a fe98 	bl	8029e90 <__aeabi_atexit>
 801f160:	4c0f      	ldr	r4, [pc, #60]	; (801f1a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801f162:	7823      	ldrb	r3, [r4, #0]
 801f164:	f3bf 8f5b 	dmb	ish
 801f168:	07db      	lsls	r3, r3, #31
 801f16a:	d40b      	bmi.n	801f184 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f16c:	4620      	mov	r0, r4
 801f16e:	f00a fe96 	bl	8029e9e <__cxa_guard_acquire>
 801f172:	b138      	cbz	r0, 801f184 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f174:	4620      	mov	r0, r4
 801f176:	f00a fe9e 	bl	8029eb6 <__cxa_guard_release>
 801f17a:	4a06      	ldr	r2, [pc, #24]	; (801f194 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f17c:	4909      	ldr	r1, [pc, #36]	; (801f1a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801f17e:	480a      	ldr	r0, [pc, #40]	; (801f1a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f180:	f00a fe86 	bl	8029e90 <__aeabi_atexit>
 801f184:	4b05      	ldr	r3, [pc, #20]	; (801f19c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f186:	60ab      	str	r3, [r5, #8]
 801f188:	4b07      	ldr	r3, [pc, #28]	; (801f1a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f18a:	60eb      	str	r3, [r5, #12]
 801f18c:	bd38      	pop	{r3, r4, r5, pc}
 801f18e:	bf00      	nop
 801f190:	20013374 	.word	0x20013374
 801f194:	20000000 	.word	0x20000000
 801f198:	0801becb 	.word	0x0801becb
 801f19c:	200000c8 	.word	0x200000c8
 801f1a0:	20013378 	.word	0x20013378
 801f1a4:	0801bec9 	.word	0x0801bec9
 801f1a8:	200000cc 	.word	0x200000cc

0801f1ac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801f1ac:	b510      	push	{r4, lr}
 801f1ae:	4604      	mov	r4, r0
 801f1b0:	f7ff ff88 	bl	801f0c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801f1b4:	4620      	mov	r0, r4
 801f1b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f1ba:	f7ff bfbd 	b.w	801f138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f1c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f1c0:	b538      	push	{r3, r4, r5, lr}
 801f1c2:	4c15      	ldr	r4, [pc, #84]	; (801f218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f1c4:	7823      	ldrb	r3, [r4, #0]
 801f1c6:	f3bf 8f5b 	dmb	ish
 801f1ca:	07da      	lsls	r2, r3, #31
 801f1cc:	4605      	mov	r5, r0
 801f1ce:	d40b      	bmi.n	801f1e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f1d0:	4620      	mov	r0, r4
 801f1d2:	f00a fe64 	bl	8029e9e <__cxa_guard_acquire>
 801f1d6:	b138      	cbz	r0, 801f1e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f1d8:	4620      	mov	r0, r4
 801f1da:	f00a fe6c 	bl	8029eb6 <__cxa_guard_release>
 801f1de:	4a0f      	ldr	r2, [pc, #60]	; (801f21c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f1e0:	490f      	ldr	r1, [pc, #60]	; (801f220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f1e2:	4810      	ldr	r0, [pc, #64]	; (801f224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f1e4:	f00a fe54 	bl	8029e90 <__aeabi_atexit>
 801f1e8:	4c0f      	ldr	r4, [pc, #60]	; (801f228 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f1ea:	7823      	ldrb	r3, [r4, #0]
 801f1ec:	f3bf 8f5b 	dmb	ish
 801f1f0:	07db      	lsls	r3, r3, #31
 801f1f2:	d40b      	bmi.n	801f20c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f1f4:	4620      	mov	r0, r4
 801f1f6:	f00a fe52 	bl	8029e9e <__cxa_guard_acquire>
 801f1fa:	b138      	cbz	r0, 801f20c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f1fc:	4620      	mov	r0, r4
 801f1fe:	f00a fe5a 	bl	8029eb6 <__cxa_guard_release>
 801f202:	4a06      	ldr	r2, [pc, #24]	; (801f21c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f204:	4909      	ldr	r1, [pc, #36]	; (801f22c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f206:	480a      	ldr	r0, [pc, #40]	; (801f230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f208:	f00a fe42 	bl	8029e90 <__aeabi_atexit>
 801f20c:	4b05      	ldr	r3, [pc, #20]	; (801f224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f20e:	622b      	str	r3, [r5, #32]
 801f210:	4b07      	ldr	r3, [pc, #28]	; (801f230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f212:	626b      	str	r3, [r5, #36]	; 0x24
 801f214:	bd38      	pop	{r3, r4, r5, pc}
 801f216:	bf00      	nop
 801f218:	200133a4 	.word	0x200133a4
 801f21c:	20000000 	.word	0x20000000
 801f220:	0801bebf 	.word	0x0801bebf
 801f224:	200000f8 	.word	0x200000f8
 801f228:	200133a8 	.word	0x200133a8
 801f22c:	0801bebd 	.word	0x0801bebd
 801f230:	200000fc 	.word	0x200000fc

0801f234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f234:	b538      	push	{r3, r4, r5, lr}
 801f236:	4c15      	ldr	r4, [pc, #84]	; (801f28c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f238:	7823      	ldrb	r3, [r4, #0]
 801f23a:	f3bf 8f5b 	dmb	ish
 801f23e:	07da      	lsls	r2, r3, #31
 801f240:	4605      	mov	r5, r0
 801f242:	d40b      	bmi.n	801f25c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f244:	4620      	mov	r0, r4
 801f246:	f00a fe2a 	bl	8029e9e <__cxa_guard_acquire>
 801f24a:	b138      	cbz	r0, 801f25c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f24c:	4620      	mov	r0, r4
 801f24e:	f00a fe32 	bl	8029eb6 <__cxa_guard_release>
 801f252:	4a0f      	ldr	r2, [pc, #60]	; (801f290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f254:	490f      	ldr	r1, [pc, #60]	; (801f294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f256:	4810      	ldr	r0, [pc, #64]	; (801f298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f258:	f00a fe1a 	bl	8029e90 <__aeabi_atexit>
 801f25c:	4c0f      	ldr	r4, [pc, #60]	; (801f29c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f25e:	7823      	ldrb	r3, [r4, #0]
 801f260:	f3bf 8f5b 	dmb	ish
 801f264:	07db      	lsls	r3, r3, #31
 801f266:	d40b      	bmi.n	801f280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f268:	4620      	mov	r0, r4
 801f26a:	f00a fe18 	bl	8029e9e <__cxa_guard_acquire>
 801f26e:	b138      	cbz	r0, 801f280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f270:	4620      	mov	r0, r4
 801f272:	f00a fe20 	bl	8029eb6 <__cxa_guard_release>
 801f276:	4a06      	ldr	r2, [pc, #24]	; (801f290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f278:	4909      	ldr	r1, [pc, #36]	; (801f2a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f27a:	480a      	ldr	r0, [pc, #40]	; (801f2a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f27c:	f00a fe08 	bl	8029e90 <__aeabi_atexit>
 801f280:	4b05      	ldr	r3, [pc, #20]	; (801f298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f282:	61ab      	str	r3, [r5, #24]
 801f284:	4b07      	ldr	r3, [pc, #28]	; (801f2a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f286:	61eb      	str	r3, [r5, #28]
 801f288:	bd38      	pop	{r3, r4, r5, pc}
 801f28a:	bf00      	nop
 801f28c:	2001337c 	.word	0x2001337c
 801f290:	20000000 	.word	0x20000000
 801f294:	0801bec3 	.word	0x0801bec3
 801f298:	200000d0 	.word	0x200000d0
 801f29c:	20013380 	.word	0x20013380
 801f2a0:	0801bec1 	.word	0x0801bec1
 801f2a4:	200000d4 	.word	0x200000d4

0801f2a8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f2a8:	b510      	push	{r4, lr}
 801f2aa:	4604      	mov	r4, r0
 801f2ac:	f7ff ff88 	bl	801f1c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f2b0:	4620      	mov	r0, r4
 801f2b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f2b6:	f7ff bfbd 	b.w	801f234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f2bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f2bc:	b538      	push	{r3, r4, r5, lr}
 801f2be:	4c15      	ldr	r4, [pc, #84]	; (801f314 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f2c0:	7823      	ldrb	r3, [r4, #0]
 801f2c2:	f3bf 8f5b 	dmb	ish
 801f2c6:	07da      	lsls	r2, r3, #31
 801f2c8:	4605      	mov	r5, r0
 801f2ca:	d40b      	bmi.n	801f2e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f2cc:	4620      	mov	r0, r4
 801f2ce:	f00a fde6 	bl	8029e9e <__cxa_guard_acquire>
 801f2d2:	b138      	cbz	r0, 801f2e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f2d4:	4620      	mov	r0, r4
 801f2d6:	f00a fdee 	bl	8029eb6 <__cxa_guard_release>
 801f2da:	4a0f      	ldr	r2, [pc, #60]	; (801f318 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f2dc:	490f      	ldr	r1, [pc, #60]	; (801f31c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f2de:	4810      	ldr	r0, [pc, #64]	; (801f320 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f2e0:	f00a fdd6 	bl	8029e90 <__aeabi_atexit>
 801f2e4:	4c0f      	ldr	r4, [pc, #60]	; (801f324 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f2e6:	7823      	ldrb	r3, [r4, #0]
 801f2e8:	f3bf 8f5b 	dmb	ish
 801f2ec:	07db      	lsls	r3, r3, #31
 801f2ee:	d40b      	bmi.n	801f308 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f2f0:	4620      	mov	r0, r4
 801f2f2:	f00a fdd4 	bl	8029e9e <__cxa_guard_acquire>
 801f2f6:	b138      	cbz	r0, 801f308 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f2f8:	4620      	mov	r0, r4
 801f2fa:	f00a fddc 	bl	8029eb6 <__cxa_guard_release>
 801f2fe:	4a06      	ldr	r2, [pc, #24]	; (801f318 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f300:	4909      	ldr	r1, [pc, #36]	; (801f328 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f302:	480a      	ldr	r0, [pc, #40]	; (801f32c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f304:	f00a fdc4 	bl	8029e90 <__aeabi_atexit>
 801f308:	4b05      	ldr	r3, [pc, #20]	; (801f320 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f30a:	632b      	str	r3, [r5, #48]	; 0x30
 801f30c:	4b07      	ldr	r3, [pc, #28]	; (801f32c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f30e:	636b      	str	r3, [r5, #52]	; 0x34
 801f310:	bd38      	pop	{r3, r4, r5, pc}
 801f312:	bf00      	nop
 801f314:	200133b4 	.word	0x200133b4
 801f318:	20000000 	.word	0x20000000
 801f31c:	0801beb7 	.word	0x0801beb7
 801f320:	20000108 	.word	0x20000108
 801f324:	200133b8 	.word	0x200133b8
 801f328:	0801beb5 	.word	0x0801beb5
 801f32c:	2000010c 	.word	0x2000010c

0801f330 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f330:	b538      	push	{r3, r4, r5, lr}
 801f332:	4c15      	ldr	r4, [pc, #84]	; (801f388 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f334:	7823      	ldrb	r3, [r4, #0]
 801f336:	f3bf 8f5b 	dmb	ish
 801f33a:	07da      	lsls	r2, r3, #31
 801f33c:	4605      	mov	r5, r0
 801f33e:	d40b      	bmi.n	801f358 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f340:	4620      	mov	r0, r4
 801f342:	f00a fdac 	bl	8029e9e <__cxa_guard_acquire>
 801f346:	b138      	cbz	r0, 801f358 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f348:	4620      	mov	r0, r4
 801f34a:	f00a fdb4 	bl	8029eb6 <__cxa_guard_release>
 801f34e:	4a0f      	ldr	r2, [pc, #60]	; (801f38c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f350:	490f      	ldr	r1, [pc, #60]	; (801f390 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f352:	4810      	ldr	r0, [pc, #64]	; (801f394 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f354:	f00a fd9c 	bl	8029e90 <__aeabi_atexit>
 801f358:	4c0f      	ldr	r4, [pc, #60]	; (801f398 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f35a:	7823      	ldrb	r3, [r4, #0]
 801f35c:	f3bf 8f5b 	dmb	ish
 801f360:	07db      	lsls	r3, r3, #31
 801f362:	d40b      	bmi.n	801f37c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f364:	4620      	mov	r0, r4
 801f366:	f00a fd9a 	bl	8029e9e <__cxa_guard_acquire>
 801f36a:	b138      	cbz	r0, 801f37c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f36c:	4620      	mov	r0, r4
 801f36e:	f00a fda2 	bl	8029eb6 <__cxa_guard_release>
 801f372:	4a06      	ldr	r2, [pc, #24]	; (801f38c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f374:	4909      	ldr	r1, [pc, #36]	; (801f39c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f376:	480a      	ldr	r0, [pc, #40]	; (801f3a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f378:	f00a fd8a 	bl	8029e90 <__aeabi_atexit>
 801f37c:	4b05      	ldr	r3, [pc, #20]	; (801f394 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f37e:	62ab      	str	r3, [r5, #40]	; 0x28
 801f380:	4b07      	ldr	r3, [pc, #28]	; (801f3a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f382:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f384:	bd38      	pop	{r3, r4, r5, pc}
 801f386:	bf00      	nop
 801f388:	20013384 	.word	0x20013384
 801f38c:	20000000 	.word	0x20000000
 801f390:	0801bebb 	.word	0x0801bebb
 801f394:	200000d8 	.word	0x200000d8
 801f398:	20013388 	.word	0x20013388
 801f39c:	0801beb9 	.word	0x0801beb9
 801f3a0:	200000dc 	.word	0x200000dc

0801f3a4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f3a4:	b510      	push	{r4, lr}
 801f3a6:	4604      	mov	r4, r0
 801f3a8:	f7ff ff88 	bl	801f2bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f3ac:	4620      	mov	r0, r4
 801f3ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f3b2:	f7ff bfbd 	b.w	801f330 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f3b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f3b8:	b538      	push	{r3, r4, r5, lr}
 801f3ba:	4c15      	ldr	r4, [pc, #84]	; (801f410 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f3bc:	7823      	ldrb	r3, [r4, #0]
 801f3be:	f3bf 8f5b 	dmb	ish
 801f3c2:	07da      	lsls	r2, r3, #31
 801f3c4:	4605      	mov	r5, r0
 801f3c6:	d40b      	bmi.n	801f3e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f3c8:	4620      	mov	r0, r4
 801f3ca:	f00a fd68 	bl	8029e9e <__cxa_guard_acquire>
 801f3ce:	b138      	cbz	r0, 801f3e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f3d0:	4620      	mov	r0, r4
 801f3d2:	f00a fd70 	bl	8029eb6 <__cxa_guard_release>
 801f3d6:	4a0f      	ldr	r2, [pc, #60]	; (801f414 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f3d8:	490f      	ldr	r1, [pc, #60]	; (801f418 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f3da:	4810      	ldr	r0, [pc, #64]	; (801f41c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f3dc:	f00a fd58 	bl	8029e90 <__aeabi_atexit>
 801f3e0:	4c0f      	ldr	r4, [pc, #60]	; (801f420 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f3e2:	7823      	ldrb	r3, [r4, #0]
 801f3e4:	f3bf 8f5b 	dmb	ish
 801f3e8:	07db      	lsls	r3, r3, #31
 801f3ea:	d40b      	bmi.n	801f404 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f3ec:	4620      	mov	r0, r4
 801f3ee:	f00a fd56 	bl	8029e9e <__cxa_guard_acquire>
 801f3f2:	b138      	cbz	r0, 801f404 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f3f4:	4620      	mov	r0, r4
 801f3f6:	f00a fd5e 	bl	8029eb6 <__cxa_guard_release>
 801f3fa:	4a06      	ldr	r2, [pc, #24]	; (801f414 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f3fc:	4909      	ldr	r1, [pc, #36]	; (801f424 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f3fe:	480a      	ldr	r0, [pc, #40]	; (801f428 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f400:	f00a fd46 	bl	8029e90 <__aeabi_atexit>
 801f404:	4b05      	ldr	r3, [pc, #20]	; (801f41c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f406:	652b      	str	r3, [r5, #80]	; 0x50
 801f408:	4b07      	ldr	r3, [pc, #28]	; (801f428 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f40a:	656b      	str	r3, [r5, #84]	; 0x54
 801f40c:	bd38      	pop	{r3, r4, r5, pc}
 801f40e:	bf00      	nop
 801f410:	200133bc 	.word	0x200133bc
 801f414:	20000000 	.word	0x20000000
 801f418:	0801bea7 	.word	0x0801bea7
 801f41c:	20000110 	.word	0x20000110
 801f420:	200133c0 	.word	0x200133c0
 801f424:	0801bea5 	.word	0x0801bea5
 801f428:	20000114 	.word	0x20000114

0801f42c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f42c:	b538      	push	{r3, r4, r5, lr}
 801f42e:	4c15      	ldr	r4, [pc, #84]	; (801f484 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f430:	7823      	ldrb	r3, [r4, #0]
 801f432:	f3bf 8f5b 	dmb	ish
 801f436:	07da      	lsls	r2, r3, #31
 801f438:	4605      	mov	r5, r0
 801f43a:	d40b      	bmi.n	801f454 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f43c:	4620      	mov	r0, r4
 801f43e:	f00a fd2e 	bl	8029e9e <__cxa_guard_acquire>
 801f442:	b138      	cbz	r0, 801f454 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f444:	4620      	mov	r0, r4
 801f446:	f00a fd36 	bl	8029eb6 <__cxa_guard_release>
 801f44a:	4a0f      	ldr	r2, [pc, #60]	; (801f488 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f44c:	490f      	ldr	r1, [pc, #60]	; (801f48c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f44e:	4810      	ldr	r0, [pc, #64]	; (801f490 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f450:	f00a fd1e 	bl	8029e90 <__aeabi_atexit>
 801f454:	4c0f      	ldr	r4, [pc, #60]	; (801f494 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f456:	7823      	ldrb	r3, [r4, #0]
 801f458:	f3bf 8f5b 	dmb	ish
 801f45c:	07db      	lsls	r3, r3, #31
 801f45e:	d40b      	bmi.n	801f478 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f460:	4620      	mov	r0, r4
 801f462:	f00a fd1c 	bl	8029e9e <__cxa_guard_acquire>
 801f466:	b138      	cbz	r0, 801f478 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f468:	4620      	mov	r0, r4
 801f46a:	f00a fd24 	bl	8029eb6 <__cxa_guard_release>
 801f46e:	4a06      	ldr	r2, [pc, #24]	; (801f488 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f470:	4909      	ldr	r1, [pc, #36]	; (801f498 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f472:	480a      	ldr	r0, [pc, #40]	; (801f49c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f474:	f00a fd0c 	bl	8029e90 <__aeabi_atexit>
 801f478:	4b05      	ldr	r3, [pc, #20]	; (801f490 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f47a:	64ab      	str	r3, [r5, #72]	; 0x48
 801f47c:	4b07      	ldr	r3, [pc, #28]	; (801f49c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f47e:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f480:	bd38      	pop	{r3, r4, r5, pc}
 801f482:	bf00      	nop
 801f484:	200133c4 	.word	0x200133c4
 801f488:	20000000 	.word	0x20000000
 801f48c:	0801beab 	.word	0x0801beab
 801f490:	20000118 	.word	0x20000118
 801f494:	200133c8 	.word	0x200133c8
 801f498:	0801bea9 	.word	0x0801bea9
 801f49c:	2000011c 	.word	0x2000011c

0801f4a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f4a0:	b538      	push	{r3, r4, r5, lr}
 801f4a2:	4c15      	ldr	r4, [pc, #84]	; (801f4f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f4a4:	7823      	ldrb	r3, [r4, #0]
 801f4a6:	f3bf 8f5b 	dmb	ish
 801f4aa:	07da      	lsls	r2, r3, #31
 801f4ac:	4605      	mov	r5, r0
 801f4ae:	d40b      	bmi.n	801f4c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f4b0:	4620      	mov	r0, r4
 801f4b2:	f00a fcf4 	bl	8029e9e <__cxa_guard_acquire>
 801f4b6:	b138      	cbz	r0, 801f4c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f4b8:	4620      	mov	r0, r4
 801f4ba:	f00a fcfc 	bl	8029eb6 <__cxa_guard_release>
 801f4be:	4a0f      	ldr	r2, [pc, #60]	; (801f4fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f4c0:	490f      	ldr	r1, [pc, #60]	; (801f500 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f4c2:	4810      	ldr	r0, [pc, #64]	; (801f504 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f4c4:	f00a fce4 	bl	8029e90 <__aeabi_atexit>
 801f4c8:	4c0f      	ldr	r4, [pc, #60]	; (801f508 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f4ca:	7823      	ldrb	r3, [r4, #0]
 801f4cc:	f3bf 8f5b 	dmb	ish
 801f4d0:	07db      	lsls	r3, r3, #31
 801f4d2:	d40b      	bmi.n	801f4ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f4d4:	4620      	mov	r0, r4
 801f4d6:	f00a fce2 	bl	8029e9e <__cxa_guard_acquire>
 801f4da:	b138      	cbz	r0, 801f4ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f4dc:	4620      	mov	r0, r4
 801f4de:	f00a fcea 	bl	8029eb6 <__cxa_guard_release>
 801f4e2:	4a06      	ldr	r2, [pc, #24]	; (801f4fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f4e4:	4909      	ldr	r1, [pc, #36]	; (801f50c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f4e6:	480a      	ldr	r0, [pc, #40]	; (801f510 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f4e8:	f00a fcd2 	bl	8029e90 <__aeabi_atexit>
 801f4ec:	4b05      	ldr	r3, [pc, #20]	; (801f504 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f4ee:	642b      	str	r3, [r5, #64]	; 0x40
 801f4f0:	4b07      	ldr	r3, [pc, #28]	; (801f510 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f4f2:	646b      	str	r3, [r5, #68]	; 0x44
 801f4f4:	bd38      	pop	{r3, r4, r5, pc}
 801f4f6:	bf00      	nop
 801f4f8:	2001338c 	.word	0x2001338c
 801f4fc:	20000000 	.word	0x20000000
 801f500:	0801beaf 	.word	0x0801beaf
 801f504:	200000e0 	.word	0x200000e0
 801f508:	20013390 	.word	0x20013390
 801f50c:	0801bead 	.word	0x0801bead
 801f510:	200000e4 	.word	0x200000e4

0801f514 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f514:	b538      	push	{r3, r4, r5, lr}
 801f516:	4c15      	ldr	r4, [pc, #84]	; (801f56c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f518:	7823      	ldrb	r3, [r4, #0]
 801f51a:	f3bf 8f5b 	dmb	ish
 801f51e:	07da      	lsls	r2, r3, #31
 801f520:	4605      	mov	r5, r0
 801f522:	d40b      	bmi.n	801f53c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f524:	4620      	mov	r0, r4
 801f526:	f00a fcba 	bl	8029e9e <__cxa_guard_acquire>
 801f52a:	b138      	cbz	r0, 801f53c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f52c:	4620      	mov	r0, r4
 801f52e:	f00a fcc2 	bl	8029eb6 <__cxa_guard_release>
 801f532:	4a0f      	ldr	r2, [pc, #60]	; (801f570 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f534:	490f      	ldr	r1, [pc, #60]	; (801f574 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f536:	4810      	ldr	r0, [pc, #64]	; (801f578 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f538:	f00a fcaa 	bl	8029e90 <__aeabi_atexit>
 801f53c:	4c0f      	ldr	r4, [pc, #60]	; (801f57c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f53e:	7823      	ldrb	r3, [r4, #0]
 801f540:	f3bf 8f5b 	dmb	ish
 801f544:	07db      	lsls	r3, r3, #31
 801f546:	d40b      	bmi.n	801f560 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f548:	4620      	mov	r0, r4
 801f54a:	f00a fca8 	bl	8029e9e <__cxa_guard_acquire>
 801f54e:	b138      	cbz	r0, 801f560 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f550:	4620      	mov	r0, r4
 801f552:	f00a fcb0 	bl	8029eb6 <__cxa_guard_release>
 801f556:	4a06      	ldr	r2, [pc, #24]	; (801f570 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f558:	4909      	ldr	r1, [pc, #36]	; (801f580 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f55a:	480a      	ldr	r0, [pc, #40]	; (801f584 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f55c:	f00a fc98 	bl	8029e90 <__aeabi_atexit>
 801f560:	4b05      	ldr	r3, [pc, #20]	; (801f578 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f562:	63ab      	str	r3, [r5, #56]	; 0x38
 801f564:	4b07      	ldr	r3, [pc, #28]	; (801f584 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f566:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f568:	bd38      	pop	{r3, r4, r5, pc}
 801f56a:	bf00      	nop
 801f56c:	200133ac 	.word	0x200133ac
 801f570:	20000000 	.word	0x20000000
 801f574:	0801beb3 	.word	0x0801beb3
 801f578:	20000100 	.word	0x20000100
 801f57c:	200133b0 	.word	0x200133b0
 801f580:	0801beb1 	.word	0x0801beb1
 801f584:	20000104 	.word	0x20000104

0801f588 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f588:	b510      	push	{r4, lr}
 801f58a:	4604      	mov	r4, r0
 801f58c:	f7ff ff14 	bl	801f3b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f590:	4620      	mov	r0, r4
 801f592:	f7ff ff85 	bl	801f4a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f596:	4620      	mov	r0, r4
 801f598:	f7ff ff48 	bl	801f42c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f59c:	4620      	mov	r0, r4
 801f59e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f5a2:	f7ff bfb7 	b.w	801f514 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f5a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f5a8:	b538      	push	{r3, r4, r5, lr}
 801f5aa:	4c15      	ldr	r4, [pc, #84]	; (801f600 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f5ac:	7823      	ldrb	r3, [r4, #0]
 801f5ae:	f3bf 8f5b 	dmb	ish
 801f5b2:	07da      	lsls	r2, r3, #31
 801f5b4:	4605      	mov	r5, r0
 801f5b6:	d40b      	bmi.n	801f5d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f5b8:	4620      	mov	r0, r4
 801f5ba:	f00a fc70 	bl	8029e9e <__cxa_guard_acquire>
 801f5be:	b138      	cbz	r0, 801f5d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f5c0:	4620      	mov	r0, r4
 801f5c2:	f00a fc78 	bl	8029eb6 <__cxa_guard_release>
 801f5c6:	4a0f      	ldr	r2, [pc, #60]	; (801f604 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f5c8:	490f      	ldr	r1, [pc, #60]	; (801f608 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f5ca:	4810      	ldr	r0, [pc, #64]	; (801f60c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f5cc:	f00a fc60 	bl	8029e90 <__aeabi_atexit>
 801f5d0:	4c0f      	ldr	r4, [pc, #60]	; (801f610 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f5d2:	7823      	ldrb	r3, [r4, #0]
 801f5d4:	f3bf 8f5b 	dmb	ish
 801f5d8:	07db      	lsls	r3, r3, #31
 801f5da:	d40b      	bmi.n	801f5f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f5dc:	4620      	mov	r0, r4
 801f5de:	f00a fc5e 	bl	8029e9e <__cxa_guard_acquire>
 801f5e2:	b138      	cbz	r0, 801f5f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f5e4:	4620      	mov	r0, r4
 801f5e6:	f00a fc66 	bl	8029eb6 <__cxa_guard_release>
 801f5ea:	4a06      	ldr	r2, [pc, #24]	; (801f604 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f5ec:	4909      	ldr	r1, [pc, #36]	; (801f614 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f5ee:	480a      	ldr	r0, [pc, #40]	; (801f618 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f5f0:	f00a fc4e 	bl	8029e90 <__aeabi_atexit>
 801f5f4:	4b05      	ldr	r3, [pc, #20]	; (801f60c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f5f6:	662b      	str	r3, [r5, #96]	; 0x60
 801f5f8:	4b07      	ldr	r3, [pc, #28]	; (801f618 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f5fa:	666b      	str	r3, [r5, #100]	; 0x64
 801f5fc:	bd38      	pop	{r3, r4, r5, pc}
 801f5fe:	bf00      	nop
 801f600:	20013394 	.word	0x20013394
 801f604:	20000000 	.word	0x20000000
 801f608:	0801be9f 	.word	0x0801be9f
 801f60c:	200000e8 	.word	0x200000e8
 801f610:	20013398 	.word	0x20013398
 801f614:	0801be9d 	.word	0x0801be9d
 801f618:	200000ec 	.word	0x200000ec

0801f61c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f61c:	b538      	push	{r3, r4, r5, lr}
 801f61e:	4c15      	ldr	r4, [pc, #84]	; (801f674 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f620:	7823      	ldrb	r3, [r4, #0]
 801f622:	f3bf 8f5b 	dmb	ish
 801f626:	07da      	lsls	r2, r3, #31
 801f628:	4605      	mov	r5, r0
 801f62a:	d40b      	bmi.n	801f644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f62c:	4620      	mov	r0, r4
 801f62e:	f00a fc36 	bl	8029e9e <__cxa_guard_acquire>
 801f632:	b138      	cbz	r0, 801f644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f634:	4620      	mov	r0, r4
 801f636:	f00a fc3e 	bl	8029eb6 <__cxa_guard_release>
 801f63a:	4a0f      	ldr	r2, [pc, #60]	; (801f678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f63c:	490f      	ldr	r1, [pc, #60]	; (801f67c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f63e:	4810      	ldr	r0, [pc, #64]	; (801f680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f640:	f00a fc26 	bl	8029e90 <__aeabi_atexit>
 801f644:	4c0f      	ldr	r4, [pc, #60]	; (801f684 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f646:	7823      	ldrb	r3, [r4, #0]
 801f648:	f3bf 8f5b 	dmb	ish
 801f64c:	07db      	lsls	r3, r3, #31
 801f64e:	d40b      	bmi.n	801f668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f650:	4620      	mov	r0, r4
 801f652:	f00a fc24 	bl	8029e9e <__cxa_guard_acquire>
 801f656:	b138      	cbz	r0, 801f668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f658:	4620      	mov	r0, r4
 801f65a:	f00a fc2c 	bl	8029eb6 <__cxa_guard_release>
 801f65e:	4a06      	ldr	r2, [pc, #24]	; (801f678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f660:	4909      	ldr	r1, [pc, #36]	; (801f688 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f662:	480a      	ldr	r0, [pc, #40]	; (801f68c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f664:	f00a fc14 	bl	8029e90 <__aeabi_atexit>
 801f668:	4b05      	ldr	r3, [pc, #20]	; (801f680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f66a:	65ab      	str	r3, [r5, #88]	; 0x58
 801f66c:	4b07      	ldr	r3, [pc, #28]	; (801f68c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f66e:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f670:	bd38      	pop	{r3, r4, r5, pc}
 801f672:	bf00      	nop
 801f674:	2001336c 	.word	0x2001336c
 801f678:	20000000 	.word	0x20000000
 801f67c:	0801bea3 	.word	0x0801bea3
 801f680:	200000c0 	.word	0x200000c0
 801f684:	20013370 	.word	0x20013370
 801f688:	0801bea1 	.word	0x0801bea1
 801f68c:	200000c4 	.word	0x200000c4

0801f690 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f690:	b510      	push	{r4, lr}
 801f692:	4604      	mov	r4, r0
 801f694:	f7ff ff88 	bl	801f5a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f698:	4620      	mov	r0, r4
 801f69a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f69e:	f7ff bfbd 	b.w	801f61c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f6a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f6a4:	b538      	push	{r3, r4, r5, lr}
 801f6a6:	4c15      	ldr	r4, [pc, #84]	; (801f6fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f6a8:	7823      	ldrb	r3, [r4, #0]
 801f6aa:	f3bf 8f5b 	dmb	ish
 801f6ae:	07da      	lsls	r2, r3, #31
 801f6b0:	4605      	mov	r5, r0
 801f6b2:	d40b      	bmi.n	801f6cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f6b4:	4620      	mov	r0, r4
 801f6b6:	f00a fbf2 	bl	8029e9e <__cxa_guard_acquire>
 801f6ba:	b138      	cbz	r0, 801f6cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f6bc:	4620      	mov	r0, r4
 801f6be:	f00a fbfa 	bl	8029eb6 <__cxa_guard_release>
 801f6c2:	4a0f      	ldr	r2, [pc, #60]	; (801f700 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f6c4:	490f      	ldr	r1, [pc, #60]	; (801f704 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f6c6:	4810      	ldr	r0, [pc, #64]	; (801f708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f6c8:	f00a fbe2 	bl	8029e90 <__aeabi_atexit>
 801f6cc:	4c0f      	ldr	r4, [pc, #60]	; (801f70c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f6ce:	7823      	ldrb	r3, [r4, #0]
 801f6d0:	f3bf 8f5b 	dmb	ish
 801f6d4:	07db      	lsls	r3, r3, #31
 801f6d6:	d40b      	bmi.n	801f6f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f6d8:	4620      	mov	r0, r4
 801f6da:	f00a fbe0 	bl	8029e9e <__cxa_guard_acquire>
 801f6de:	b138      	cbz	r0, 801f6f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f6e0:	4620      	mov	r0, r4
 801f6e2:	f00a fbe8 	bl	8029eb6 <__cxa_guard_release>
 801f6e6:	4a06      	ldr	r2, [pc, #24]	; (801f700 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f6e8:	4909      	ldr	r1, [pc, #36]	; (801f710 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f6ea:	480a      	ldr	r0, [pc, #40]	; (801f714 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f6ec:	f00a fbd0 	bl	8029e90 <__aeabi_atexit>
 801f6f0:	4b05      	ldr	r3, [pc, #20]	; (801f708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f6f2:	672b      	str	r3, [r5, #112]	; 0x70
 801f6f4:	4b07      	ldr	r3, [pc, #28]	; (801f714 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f6f6:	676b      	str	r3, [r5, #116]	; 0x74
 801f6f8:	bd38      	pop	{r3, r4, r5, pc}
 801f6fa:	bf00      	nop
 801f6fc:	20013364 	.word	0x20013364
 801f700:	20000000 	.word	0x20000000
 801f704:	0801be97 	.word	0x0801be97
 801f708:	200000b8 	.word	0x200000b8
 801f70c:	20013368 	.word	0x20013368
 801f710:	0801be95 	.word	0x0801be95
 801f714:	200000bc 	.word	0x200000bc

0801f718 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f718:	b538      	push	{r3, r4, r5, lr}
 801f71a:	4c15      	ldr	r4, [pc, #84]	; (801f770 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f71c:	7823      	ldrb	r3, [r4, #0]
 801f71e:	f3bf 8f5b 	dmb	ish
 801f722:	07da      	lsls	r2, r3, #31
 801f724:	4605      	mov	r5, r0
 801f726:	d40b      	bmi.n	801f740 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f728:	4620      	mov	r0, r4
 801f72a:	f00a fbb8 	bl	8029e9e <__cxa_guard_acquire>
 801f72e:	b138      	cbz	r0, 801f740 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f730:	4620      	mov	r0, r4
 801f732:	f00a fbc0 	bl	8029eb6 <__cxa_guard_release>
 801f736:	4a0f      	ldr	r2, [pc, #60]	; (801f774 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f738:	490f      	ldr	r1, [pc, #60]	; (801f778 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f73a:	4810      	ldr	r0, [pc, #64]	; (801f77c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f73c:	f00a fba8 	bl	8029e90 <__aeabi_atexit>
 801f740:	4c0f      	ldr	r4, [pc, #60]	; (801f780 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f742:	7823      	ldrb	r3, [r4, #0]
 801f744:	f3bf 8f5b 	dmb	ish
 801f748:	07db      	lsls	r3, r3, #31
 801f74a:	d40b      	bmi.n	801f764 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f74c:	4620      	mov	r0, r4
 801f74e:	f00a fba6 	bl	8029e9e <__cxa_guard_acquire>
 801f752:	b138      	cbz	r0, 801f764 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f754:	4620      	mov	r0, r4
 801f756:	f00a fbae 	bl	8029eb6 <__cxa_guard_release>
 801f75a:	4a06      	ldr	r2, [pc, #24]	; (801f774 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f75c:	4909      	ldr	r1, [pc, #36]	; (801f784 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f75e:	480a      	ldr	r0, [pc, #40]	; (801f788 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f760:	f00a fb96 	bl	8029e90 <__aeabi_atexit>
 801f764:	4b05      	ldr	r3, [pc, #20]	; (801f77c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f766:	66ab      	str	r3, [r5, #104]	; 0x68
 801f768:	4b07      	ldr	r3, [pc, #28]	; (801f788 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f76a:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f76c:	bd38      	pop	{r3, r4, r5, pc}
 801f76e:	bf00      	nop
 801f770:	2001335c 	.word	0x2001335c
 801f774:	20000000 	.word	0x20000000
 801f778:	0801be9b 	.word	0x0801be9b
 801f77c:	200000b0 	.word	0x200000b0
 801f780:	20013360 	.word	0x20013360
 801f784:	0801be99 	.word	0x0801be99
 801f788:	200000b4 	.word	0x200000b4

0801f78c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f78c:	b510      	push	{r4, lr}
 801f78e:	4604      	mov	r4, r0
 801f790:	f7ff ff88 	bl	801f6a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f794:	4620      	mov	r0, r4
 801f796:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f79a:	f7ff bfbd 	b.w	801f718 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f79e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f79e:	b510      	push	{r4, lr}
 801f7a0:	4604      	mov	r4, r0
 801f7a2:	f7ff fff3 	bl	801f78c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f7a6:	4620      	mov	r0, r4
 801f7a8:	f7ff ff72 	bl	801f690 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f7ac:	4620      	mov	r0, r4
 801f7ae:	f7ff fdf9 	bl	801f3a4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f7b2:	4620      	mov	r0, r4
 801f7b4:	f7ff fcfa 	bl	801f1ac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801f7b8:	4620      	mov	r0, r4
 801f7ba:	f7ff fd75 	bl	801f2a8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801f7be:	4620      	mov	r0, r4
 801f7c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f7c4:	f7ff bee0 	b.w	801f588 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801f7c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801f7c8:	b538      	push	{r3, r4, r5, lr}
 801f7ca:	4c0b      	ldr	r4, [pc, #44]	; (801f7f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801f7cc:	7823      	ldrb	r3, [r4, #0]
 801f7ce:	f3bf 8f5b 	dmb	ish
 801f7d2:	07db      	lsls	r3, r3, #31
 801f7d4:	4605      	mov	r5, r0
 801f7d6:	d40b      	bmi.n	801f7f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f7d8:	4620      	mov	r0, r4
 801f7da:	f00a fb60 	bl	8029e9e <__cxa_guard_acquire>
 801f7de:	b138      	cbz	r0, 801f7f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f7e0:	4620      	mov	r0, r4
 801f7e2:	f00a fb68 	bl	8029eb6 <__cxa_guard_release>
 801f7e6:	4a05      	ldr	r2, [pc, #20]	; (801f7fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801f7e8:	4905      	ldr	r1, [pc, #20]	; (801f800 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801f7ea:	4806      	ldr	r0, [pc, #24]	; (801f804 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f7ec:	f00a fb50 	bl	8029e90 <__aeabi_atexit>
 801f7f0:	4b04      	ldr	r3, [pc, #16]	; (801f804 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f7f2:	67ab      	str	r3, [r5, #120]	; 0x78
 801f7f4:	bd38      	pop	{r3, r4, r5, pc}
 801f7f6:	bf00      	nop
 801f7f8:	20013350 	.word	0x20013350
 801f7fc:	20000000 	.word	0x20000000
 801f800:	0801be93 	.word	0x0801be93
 801f804:	200000a8 	.word	0x200000a8

0801f808 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801f808:	b538      	push	{r3, r4, r5, lr}
 801f80a:	4c0b      	ldr	r4, [pc, #44]	; (801f838 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801f80c:	7823      	ldrb	r3, [r4, #0]
 801f80e:	f3bf 8f5b 	dmb	ish
 801f812:	07db      	lsls	r3, r3, #31
 801f814:	4605      	mov	r5, r0
 801f816:	d40b      	bmi.n	801f830 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f818:	4620      	mov	r0, r4
 801f81a:	f00a fb40 	bl	8029e9e <__cxa_guard_acquire>
 801f81e:	b138      	cbz	r0, 801f830 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f820:	4620      	mov	r0, r4
 801f822:	f00a fb48 	bl	8029eb6 <__cxa_guard_release>
 801f826:	4a05      	ldr	r2, [pc, #20]	; (801f83c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801f828:	4905      	ldr	r1, [pc, #20]	; (801f840 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801f82a:	4806      	ldr	r0, [pc, #24]	; (801f844 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f82c:	f00a fb30 	bl	8029e90 <__aeabi_atexit>
 801f830:	4b04      	ldr	r3, [pc, #16]	; (801f844 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f832:	67eb      	str	r3, [r5, #124]	; 0x7c
 801f834:	bd38      	pop	{r3, r4, r5, pc}
 801f836:	bf00      	nop
 801f838:	20013354 	.word	0x20013354
 801f83c:	20000000 	.word	0x20000000
 801f840:	0801be91 	.word	0x0801be91
 801f844:	200000ac 	.word	0x200000ac

0801f848 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801f848:	b570      	push	{r4, r5, r6, lr}
 801f84a:	4d0d      	ldr	r5, [pc, #52]	; (801f880 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801f84c:	4c0d      	ldr	r4, [pc, #52]	; (801f884 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801f84e:	782b      	ldrb	r3, [r5, #0]
 801f850:	f3bf 8f5b 	dmb	ish
 801f854:	f013 0f01 	tst.w	r3, #1
 801f858:	4606      	mov	r6, r0
 801f85a:	d10d      	bne.n	801f878 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f85c:	4628      	mov	r0, r5
 801f85e:	f00a fb1e 	bl	8029e9e <__cxa_guard_acquire>
 801f862:	b148      	cbz	r0, 801f878 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f864:	4b08      	ldr	r3, [pc, #32]	; (801f888 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801f866:	6023      	str	r3, [r4, #0]
 801f868:	4628      	mov	r0, r5
 801f86a:	f00a fb24 	bl	8029eb6 <__cxa_guard_release>
 801f86e:	4a07      	ldr	r2, [pc, #28]	; (801f88c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801f870:	4907      	ldr	r1, [pc, #28]	; (801f890 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801f872:	4620      	mov	r0, r4
 801f874:	f00a fb0c 	bl	8029e90 <__aeabi_atexit>
 801f878:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801f87c:	bd70      	pop	{r4, r5, r6, pc}
 801f87e:	bf00      	nop
 801f880:	20013358 	.word	0x20013358
 801f884:	200133cc 	.word	0x200133cc
 801f888:	0802f0a4 	.word	0x0802f0a4
 801f88c:	20000000 	.word	0x20000000
 801f890:	0801be8f 	.word	0x0801be8f

0801f894 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801f894:	b510      	push	{r4, lr}
 801f896:	4604      	mov	r4, r0
 801f898:	f7ff ff96 	bl	801f7c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801f89c:	4620      	mov	r0, r4
 801f89e:	f7ff ffb3 	bl	801f808 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801f8a2:	4620      	mov	r0, r4
 801f8a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f8a8:	f7ff bfce 	b.w	801f848 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801f8ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801f8ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8b0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801f8b4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801f8b8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801f8bc:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801f8c0:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801f8c4:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801f8c8:	8808      	ldrh	r0, [r1, #0]
 801f8ca:	fb05 4c0e 	mla	ip, r5, lr, r4
 801f8ce:	2d00      	cmp	r5, #0
 801f8d0:	eb02 0a0c 	add.w	sl, r2, ip
 801f8d4:	f2c0 80b0 	blt.w	801fa38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f8d8:	45ab      	cmp	fp, r5
 801f8da:	f340 80ad 	ble.w	801fa38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f8de:	2c00      	cmp	r4, #0
 801f8e0:	f2c0 80a8 	blt.w	801fa34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f8e4:	45a6      	cmp	lr, r4
 801f8e6:	f340 80a5 	ble.w	801fa34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f8ea:	f812 200c 	ldrb.w	r2, [r2, ip]
 801f8ee:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801f8f2:	1c62      	adds	r2, r4, #1
 801f8f4:	f100 80a3 	bmi.w	801fa3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f8f8:	4596      	cmp	lr, r2
 801f8fa:	f340 80a0 	ble.w	801fa3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f8fe:	f1b9 0f00 	cmp.w	r9, #0
 801f902:	f000 809c 	beq.w	801fa3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f906:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f90a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f90e:	3501      	adds	r5, #1
 801f910:	f100 8099 	bmi.w	801fa46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f914:	45ab      	cmp	fp, r5
 801f916:	f340 8096 	ble.w	801fa46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f91a:	2f00      	cmp	r7, #0
 801f91c:	f000 8093 	beq.w	801fa46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f920:	2c00      	cmp	r4, #0
 801f922:	f2c0 808e 	blt.w	801fa42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f926:	45a6      	cmp	lr, r4
 801f928:	f340 808b 	ble.w	801fa42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f92c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801f930:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801f934:	3401      	adds	r4, #1
 801f936:	f100 8089 	bmi.w	801fa4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f93a:	45a6      	cmp	lr, r4
 801f93c:	f340 8086 	ble.w	801fa4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f940:	f1b9 0f00 	cmp.w	r9, #0
 801f944:	f000 8082 	beq.w	801fa4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f948:	44d6      	add	lr, sl
 801f94a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f94e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801f952:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f956:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f95a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f95e:	fb19 fe07 	smulbb	lr, r9, r7
 801f962:	ea44 0808 	orr.w	r8, r4, r8
 801f966:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f96a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f96e:	f1c7 0210 	rsb	r2, r7, #16
 801f972:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f976:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f97a:	ea44 0c0c 	orr.w	ip, r4, ip
 801f97e:	eba2 0209 	sub.w	r2, r2, r9
 801f982:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f986:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f98a:	fb04 f40c 	mul.w	r4, r4, ip
 801f98e:	fb02 4808 	mla	r8, r2, r8, r4
 801f992:	041a      	lsls	r2, r3, #16
 801f994:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f998:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f99c:	4313      	orrs	r3, r2
 801f99e:	042a      	lsls	r2, r5, #16
 801f9a0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f9a4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f9a8:	fb0e 8303 	mla	r3, lr, r3, r8
 801f9ac:	432a      	orrs	r2, r5
 801f9ae:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f9b2:	fb07 3202 	mla	r2, r7, r2, r3
 801f9b6:	0d53      	lsrs	r3, r2, #21
 801f9b8:	0952      	lsrs	r2, r2, #5
 801f9ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f9be:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f9c2:	431a      	orrs	r2, r3
 801f9c4:	b293      	uxth	r3, r2
 801f9c6:	b2b4      	uxth	r4, r6
 801f9c8:	1202      	asrs	r2, r0, #8
 801f9ca:	43f6      	mvns	r6, r6
 801f9cc:	b2f6      	uxtb	r6, r6
 801f9ce:	121d      	asrs	r5, r3, #8
 801f9d0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f9d4:	fb12 f206 	smulbb	r2, r2, r6
 801f9d8:	10c7      	asrs	r7, r0, #3
 801f9da:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f9de:	00c0      	lsls	r0, r0, #3
 801f9e0:	fb05 2504 	mla	r5, r5, r4, r2
 801f9e4:	b2c0      	uxtb	r0, r0
 801f9e6:	10da      	asrs	r2, r3, #3
 801f9e8:	00db      	lsls	r3, r3, #3
 801f9ea:	b2db      	uxtb	r3, r3
 801f9ec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f9f0:	fb10 f006 	smulbb	r0, r0, r6
 801f9f4:	b2ad      	uxth	r5, r5
 801f9f6:	fb03 0004 	mla	r0, r3, r4, r0
 801f9fa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f9fe:	fb17 f706 	smulbb	r7, r7, r6
 801fa02:	b280      	uxth	r0, r0
 801fa04:	1c6b      	adds	r3, r5, #1
 801fa06:	fb02 7204 	mla	r2, r2, r4, r7
 801fa0a:	b292      	uxth	r2, r2
 801fa0c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fa10:	1c43      	adds	r3, r0, #1
 801fa12:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801fa16:	1c50      	adds	r0, r2, #1
 801fa18:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801fa1c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fa20:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fa24:	0952      	lsrs	r2, r2, #5
 801fa26:	432b      	orrs	r3, r5
 801fa28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fa2c:	4313      	orrs	r3, r2
 801fa2e:	800b      	strh	r3, [r1, #0]
 801fa30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa34:	4680      	mov	r8, r0
 801fa36:	e75c      	b.n	801f8f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801fa38:	4684      	mov	ip, r0
 801fa3a:	4680      	mov	r8, r0
 801fa3c:	e767      	b.n	801f90e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801fa3e:	4684      	mov	ip, r0
 801fa40:	e765      	b.n	801f90e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801fa42:	4605      	mov	r5, r0
 801fa44:	e776      	b.n	801f934 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801fa46:	4603      	mov	r3, r0
 801fa48:	4605      	mov	r5, r0
 801fa4a:	e782      	b.n	801f952 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801fa4c:	4603      	mov	r3, r0
 801fa4e:	e780      	b.n	801f952 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801fa50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa54:	b099      	sub	sp, #100	; 0x64
 801fa56:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801fa5a:	9215      	str	r2, [sp, #84]	; 0x54
 801fa5c:	9309      	str	r3, [sp, #36]	; 0x24
 801fa5e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801fa60:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801fa64:	930d      	str	r3, [sp, #52]	; 0x34
 801fa66:	910c      	str	r1, [sp, #48]	; 0x30
 801fa68:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801fa6c:	9016      	str	r0, [sp, #88]	; 0x58
 801fa6e:	6850      	ldr	r0, [r2, #4]
 801fa70:	6812      	ldr	r2, [r2, #0]
 801fa72:	fb00 1303 	mla	r3, r0, r3, r1
 801fa76:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801fa7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fa7c:	681b      	ldr	r3, [r3, #0]
 801fa7e:	930b      	str	r3, [sp, #44]	; 0x2c
 801fa80:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fa82:	685e      	ldr	r6, [r3, #4]
 801fa84:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fa86:	43db      	mvns	r3, r3
 801fa88:	b2db      	uxtb	r3, r3
 801fa8a:	3604      	adds	r6, #4
 801fa8c:	930a      	str	r3, [sp, #40]	; 0x28
 801fa8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fa90:	2b00      	cmp	r3, #0
 801fa92:	dc03      	bgt.n	801fa9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801fa94:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801fa96:	2b00      	cmp	r3, #0
 801fa98:	f340 8225 	ble.w	801fee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fa9c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fa9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801faa2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801faa6:	1e48      	subs	r0, r1, #1
 801faa8:	1e57      	subs	r7, r2, #1
 801faaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801faac:	2b00      	cmp	r3, #0
 801faae:	f340 80e3 	ble.w	801fc78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801fab2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801fab6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801faba:	d406      	bmi.n	801faca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fabc:	4584      	cmp	ip, r0
 801fabe:	da04      	bge.n	801faca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fac0:	2b00      	cmp	r3, #0
 801fac2:	db02      	blt.n	801faca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fac4:	42bb      	cmp	r3, r7
 801fac6:	f2c0 80d8 	blt.w	801fc7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801faca:	f11c 0c01 	adds.w	ip, ip, #1
 801face:	f100 80c9 	bmi.w	801fc64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fad2:	4561      	cmp	r1, ip
 801fad4:	f2c0 80c6 	blt.w	801fc64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fad8:	3301      	adds	r3, #1
 801fada:	f100 80c3 	bmi.w	801fc64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fade:	429a      	cmp	r2, r3
 801fae0:	f2c0 80c0 	blt.w	801fc64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fae4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801fae8:	4647      	mov	r7, r8
 801faea:	f1bb 0f00 	cmp.w	fp, #0
 801faee:	f340 80e3 	ble.w	801fcb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801faf2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801faf4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801faf6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fafa:	689b      	ldr	r3, [r3, #8]
 801fafc:	ea5f 422a 	movs.w	r2, sl, asr #16
 801fb00:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801fb04:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801fb08:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fb0c:	f100 8121 	bmi.w	801fd52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fb10:	f103 39ff 	add.w	r9, r3, #4294967295
 801fb14:	454a      	cmp	r2, r9
 801fb16:	f280 811c 	bge.w	801fd52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fb1a:	f1bc 0f00 	cmp.w	ip, #0
 801fb1e:	f2c0 8118 	blt.w	801fd52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fb22:	f10e 39ff 	add.w	r9, lr, #4294967295
 801fb26:	45cc      	cmp	ip, r9
 801fb28:	f280 8113 	bge.w	801fd52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fb2c:	b21b      	sxth	r3, r3
 801fb2e:	fb0c 2203 	mla	r2, ip, r3, r2
 801fb32:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fb34:	eb04 0902 	add.w	r9, r4, r2
 801fb38:	5ca2      	ldrb	r2, [r4, r2]
 801fb3a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801fb3e:	2800      	cmp	r0, #0
 801fb40:	f000 80fe 	beq.w	801fd40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801fb44:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fb48:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801fb4c:	9211      	str	r2, [sp, #68]	; 0x44
 801fb4e:	b151      	cbz	r1, 801fb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fb50:	eb09 0203 	add.w	r2, r9, r3
 801fb54:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fb58:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fb5c:	930f      	str	r3, [sp, #60]	; 0x3c
 801fb5e:	7853      	ldrb	r3, [r2, #1]
 801fb60:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fb64:	9312      	str	r3, [sp, #72]	; 0x48
 801fb66:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fb68:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fb6a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fb6e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fb72:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fb76:	ea4c 0c03 	orr.w	ip, ip, r3
 801fb7a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fb7c:	041b      	lsls	r3, r3, #16
 801fb7e:	fb10 f201 	smulbb	r2, r0, r1
 801fb82:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801fb86:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fb8a:	10d2      	asrs	r2, r2, #3
 801fb8c:	4323      	orrs	r3, r4
 801fb8e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801fb92:	4353      	muls	r3, r2
 801fb94:	fb09 330c 	mla	r3, r9, ip, r3
 801fb98:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801fb9c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fba0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fba4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801fba8:	f1c1 0c10 	rsb	ip, r1, #16
 801fbac:	ebac 0c00 	sub.w	ip, ip, r0
 801fbb0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fbb4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801fbb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fbba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fbbc:	0418      	lsls	r0, r3, #16
 801fbbe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fbc2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fbc6:	4318      	orrs	r0, r3
 801fbc8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801fbcc:	fb02 c200 	mla	r2, r2, r0, ip
 801fbd0:	0d53      	lsrs	r3, r2, #21
 801fbd2:	0952      	lsrs	r2, r2, #5
 801fbd4:	8838      	ldrh	r0, [r7, #0]
 801fbd6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fbda:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fbde:	431a      	orrs	r2, r3
 801fbe0:	b292      	uxth	r2, r2
 801fbe2:	1201      	asrs	r1, r0, #8
 801fbe4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801fbe8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801fbec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fbf0:	fb11 f104 	smulbb	r1, r1, r4
 801fbf4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801fbf8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fbfc:	00c0      	lsls	r0, r0, #3
 801fbfe:	fb0c 1c03 	mla	ip, ip, r3, r1
 801fc02:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fc06:	10d1      	asrs	r1, r2, #3
 801fc08:	b2c0      	uxtb	r0, r0
 801fc0a:	00d2      	lsls	r2, r2, #3
 801fc0c:	b2d2      	uxtb	r2, r2
 801fc0e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fc12:	fb1e fe04 	smulbb	lr, lr, r4
 801fc16:	fb10 f004 	smulbb	r0, r0, r4
 801fc1a:	fa1f fc8c 	uxth.w	ip, ip
 801fc1e:	fb01 e103 	mla	r1, r1, r3, lr
 801fc22:	fb02 0303 	mla	r3, r2, r3, r0
 801fc26:	b29a      	uxth	r2, r3
 801fc28:	f10c 0301 	add.w	r3, ip, #1
 801fc2c:	b289      	uxth	r1, r1
 801fc2e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fc32:	1c53      	adds	r3, r2, #1
 801fc34:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fc38:	1c4a      	adds	r2, r1, #1
 801fc3a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fc3e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fc42:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fc46:	0949      	lsrs	r1, r1, #5
 801fc48:	ea43 030c 	orr.w	r3, r3, ip
 801fc4c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fc50:	430b      	orrs	r3, r1
 801fc52:	803b      	strh	r3, [r7, #0]
 801fc54:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fc56:	449a      	add	sl, r3
 801fc58:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc5a:	3702      	adds	r7, #2
 801fc5c:	441d      	add	r5, r3
 801fc5e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fc62:	e742      	b.n	801faea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fc64:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fc66:	449a      	add	sl, r3
 801fc68:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc6a:	441d      	add	r5, r3
 801fc6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc6e:	3b01      	subs	r3, #1
 801fc70:	9309      	str	r3, [sp, #36]	; 0x24
 801fc72:	f108 0802 	add.w	r8, r8, #2
 801fc76:	e718      	b.n	801faaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801fc78:	d023      	beq.n	801fcc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fc7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc7c:	9825      	ldr	r0, [sp, #148]	; 0x94
 801fc7e:	3b01      	subs	r3, #1
 801fc80:	fb00 a003 	mla	r0, r0, r3, sl
 801fc84:	1400      	asrs	r0, r0, #16
 801fc86:	f53f af2d 	bmi.w	801fae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc8a:	3901      	subs	r1, #1
 801fc8c:	4288      	cmp	r0, r1
 801fc8e:	f6bf af29 	bge.w	801fae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc92:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fc94:	fb01 5303 	mla	r3, r1, r3, r5
 801fc98:	141b      	asrs	r3, r3, #16
 801fc9a:	f53f af23 	bmi.w	801fae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc9e:	3a01      	subs	r2, #1
 801fca0:	4293      	cmp	r3, r2
 801fca2:	f6bf af1f 	bge.w	801fae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fca6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801fcaa:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801fcae:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801fcb2:	f1be 0f00 	cmp.w	lr, #0
 801fcb6:	dc6c      	bgt.n	801fd92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801fcb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fcba:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fcbe:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801fcc2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fcc4:	2b00      	cmp	r3, #0
 801fcc6:	f340 810e 	ble.w	801fee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fcca:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fcce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fcd2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fcd6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fcd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fcdc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fce0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fce4:	eef0 6a62 	vmov.f32	s13, s5
 801fce8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fcec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fcf0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fcf4:	ee16 aa90 	vmov	sl, s13
 801fcf8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fcfc:	eef0 6a43 	vmov.f32	s13, s6
 801fd00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fd04:	ee12 2a90 	vmov	r2, s5
 801fd08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fd0c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fd10:	ee13 2a10 	vmov	r2, s6
 801fd14:	9325      	str	r3, [sp, #148]	; 0x94
 801fd16:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fd18:	fb92 f3f3 	sdiv	r3, r2, r3
 801fd1c:	9326      	str	r3, [sp, #152]	; 0x98
 801fd1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fd20:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801fd22:	3b01      	subs	r3, #1
 801fd24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fd28:	930c      	str	r3, [sp, #48]	; 0x30
 801fd2a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fd2c:	bf08      	it	eq
 801fd2e:	4613      	moveq	r3, r2
 801fd30:	ee16 5a90 	vmov	r5, s13
 801fd34:	9309      	str	r3, [sp, #36]	; 0x24
 801fd36:	eeb0 3a67 	vmov.f32	s6, s15
 801fd3a:	eef0 2a47 	vmov.f32	s5, s14
 801fd3e:	e6a6      	b.n	801fa8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fd40:	2900      	cmp	r1, #0
 801fd42:	f43f af10 	beq.w	801fb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fd46:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fd4a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fd4e:	930f      	str	r3, [sp, #60]	; 0x3c
 801fd50:	e709      	b.n	801fb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fd52:	f112 0901 	adds.w	r9, r2, #1
 801fd56:	f53f af7d 	bmi.w	801fc54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd5a:	454b      	cmp	r3, r9
 801fd5c:	f6ff af7a 	blt.w	801fc54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd60:	f11c 0901 	adds.w	r9, ip, #1
 801fd64:	f53f af76 	bmi.w	801fc54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd68:	45ce      	cmp	lr, r9
 801fd6a:	f6ff af73 	blt.w	801fc54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd6e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fd70:	9202      	str	r2, [sp, #8]
 801fd72:	b21b      	sxth	r3, r3
 801fd74:	fa0f f28e 	sxth.w	r2, lr
 801fd78:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801fd7c:	e9cd c003 	strd	ip, r0, [sp, #12]
 801fd80:	9201      	str	r2, [sp, #4]
 801fd82:	9300      	str	r3, [sp, #0]
 801fd84:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fd86:	9816      	ldr	r0, [sp, #88]	; 0x58
 801fd88:	4633      	mov	r3, r6
 801fd8a:	4639      	mov	r1, r7
 801fd8c:	f7ff fd8e 	bl	801f8ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801fd90:	e760      	b.n	801fc54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd92:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fd94:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fd96:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fd9a:	ea4f 422a 	mov.w	r2, sl, asr #16
 801fd9e:	1429      	asrs	r1, r5, #16
 801fda0:	fb03 2101 	mla	r1, r3, r1, r2
 801fda4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fda6:	440a      	add	r2, r1
 801fda8:	5c61      	ldrb	r1, [r4, r1]
 801fdaa:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801fdae:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fdb2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801fdb6:	f1bc 0f00 	cmp.w	ip, #0
 801fdba:	f000 808c 	beq.w	801fed6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801fdbe:	7857      	ldrb	r7, [r2, #1]
 801fdc0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801fdc4:	9413      	str	r4, [sp, #76]	; 0x4c
 801fdc6:	b140      	cbz	r0, 801fdda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fdc8:	18d7      	adds	r7, r2, r3
 801fdca:	5cd3      	ldrb	r3, [r2, r3]
 801fdcc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fdd0:	9310      	str	r3, [sp, #64]	; 0x40
 801fdd2:	787b      	ldrb	r3, [r7, #1]
 801fdd4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fdd8:	9314      	str	r3, [sp, #80]	; 0x50
 801fdda:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fddc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fdde:	fb1c f200 	smulbb	r2, ip, r0
 801fde2:	041f      	lsls	r7, r3, #16
 801fde4:	10d2      	asrs	r2, r2, #3
 801fde6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fdea:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801fdee:	431f      	orrs	r7, r3
 801fdf0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801fdf4:	9317      	str	r3, [sp, #92]	; 0x5c
 801fdf6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fdf8:	041b      	lsls	r3, r3, #16
 801fdfa:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801fdfe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fe02:	ea43 030b 	orr.w	r3, r3, fp
 801fe06:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fe08:	4353      	muls	r3, r2
 801fe0a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fe0e:	fb04 3707 	mla	r7, r4, r7, r3
 801fe12:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fe16:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801fe1a:	ea43 0b01 	orr.w	fp, r3, r1
 801fe1e:	f1c0 0110 	rsb	r1, r0, #16
 801fe22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fe24:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fe26:	eba1 0c0c 	sub.w	ip, r1, ip
 801fe2a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fe2e:	fb0c 770b 	mla	r7, ip, fp, r7
 801fe32:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fe36:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801fe3a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fe3e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801fe42:	ea4c 0c0b 	orr.w	ip, ip, fp
 801fe46:	fb02 770c 	mla	r7, r2, ip, r7
 801fe4a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fe4c:	0d79      	lsrs	r1, r7, #21
 801fe4e:	097f      	lsrs	r7, r7, #5
 801fe50:	8812      	ldrh	r2, [r2, #0]
 801fe52:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fe56:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fe5a:	430f      	orrs	r7, r1
 801fe5c:	b2bb      	uxth	r3, r7
 801fe5e:	1211      	asrs	r1, r2, #8
 801fe60:	1218      	asrs	r0, r3, #8
 801fe62:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fe66:	fb11 f104 	smulbb	r1, r1, r4
 801fe6a:	10d7      	asrs	r7, r2, #3
 801fe6c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fe70:	00d2      	lsls	r2, r2, #3
 801fe72:	fb00 1009 	mla	r0, r0, r9, r1
 801fe76:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fe7a:	10d9      	asrs	r1, r3, #3
 801fe7c:	b2d2      	uxtb	r2, r2
 801fe7e:	00db      	lsls	r3, r3, #3
 801fe80:	fb17 f704 	smulbb	r7, r7, r4
 801fe84:	fb12 f204 	smulbb	r2, r2, r4
 801fe88:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fe8c:	b2db      	uxtb	r3, r3
 801fe8e:	b280      	uxth	r0, r0
 801fe90:	fb01 7109 	mla	r1, r1, r9, r7
 801fe94:	fb03 2309 	mla	r3, r3, r9, r2
 801fe98:	b29b      	uxth	r3, r3
 801fe9a:	b289      	uxth	r1, r1
 801fe9c:	1c42      	adds	r2, r0, #1
 801fe9e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fea2:	1c4f      	adds	r7, r1, #1
 801fea4:	1c5a      	adds	r2, r3, #1
 801fea6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801feaa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801feae:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801feb2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801feb6:	0949      	lsrs	r1, r1, #5
 801feb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801feba:	4310      	orrs	r0, r2
 801febc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fec0:	4308      	orrs	r0, r1
 801fec2:	f823 0b02 	strh.w	r0, [r3], #2
 801fec6:	930e      	str	r3, [sp, #56]	; 0x38
 801fec8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801feca:	449a      	add	sl, r3
 801fecc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fece:	f10e 3eff 	add.w	lr, lr, #4294967295
 801fed2:	441d      	add	r5, r3
 801fed4:	e6ed      	b.n	801fcb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801fed6:	2800      	cmp	r0, #0
 801fed8:	f43f af7f 	beq.w	801fdda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fedc:	5cd3      	ldrb	r3, [r2, r3]
 801fede:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fee2:	9310      	str	r3, [sp, #64]	; 0x40
 801fee4:	e779      	b.n	801fdda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fee6:	b019      	add	sp, #100	; 0x64
 801fee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801feec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801feec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fef0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801fef4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801fef8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801fefc:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ff00:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801ff04:	8808      	ldrh	r0, [r1, #0]
 801ff06:	fb08 470e 	mla	r7, r8, lr, r4
 801ff0a:	f1b8 0f00 	cmp.w	r8, #0
 801ff0e:	eb02 0907 	add.w	r9, r2, r7
 801ff12:	db67      	blt.n	801ffe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ff14:	45c2      	cmp	sl, r8
 801ff16:	dd65      	ble.n	801ffe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ff18:	2c00      	cmp	r4, #0
 801ff1a:	db61      	blt.n	801ffe0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ff1c:	45a6      	cmp	lr, r4
 801ff1e:	dd5f      	ble.n	801ffe0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ff20:	5dd2      	ldrb	r2, [r2, r7]
 801ff22:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ff26:	1c62      	adds	r2, r4, #1
 801ff28:	d45f      	bmi.n	801ffea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ff2a:	4596      	cmp	lr, r2
 801ff2c:	dd5d      	ble.n	801ffea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ff2e:	2d00      	cmp	r5, #0
 801ff30:	d05b      	beq.n	801ffea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ff32:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ff36:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ff3a:	f118 0801 	adds.w	r8, r8, #1
 801ff3e:	d458      	bmi.n	801fff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ff40:	45c2      	cmp	sl, r8
 801ff42:	dd56      	ble.n	801fff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ff44:	2e00      	cmp	r6, #0
 801ff46:	d054      	beq.n	801fff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ff48:	2c00      	cmp	r4, #0
 801ff4a:	db50      	blt.n	801ffee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ff4c:	45a6      	cmp	lr, r4
 801ff4e:	dd4e      	ble.n	801ffee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ff50:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ff54:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ff58:	3401      	adds	r4, #1
 801ff5a:	d407      	bmi.n	801ff6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ff5c:	45a6      	cmp	lr, r4
 801ff5e:	dd05      	ble.n	801ff6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ff60:	b125      	cbz	r5, 801ff6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ff62:	44ce      	add	lr, r9
 801ff64:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ff68:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ff6c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ff70:	fb15 f406 	smulbb	r4, r5, r6
 801ff74:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ff78:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ff7c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ff80:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ff84:	ea43 0c0c 	orr.w	ip, r3, ip
 801ff88:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ff8c:	f1c6 0310 	rsb	r3, r6, #16
 801ff90:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ff94:	1b5b      	subs	r3, r3, r5
 801ff96:	ea4e 0707 	orr.w	r7, lr, r7
 801ff9a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ff9e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ffa2:	437d      	muls	r5, r7
 801ffa4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ffa8:	0403      	lsls	r3, r0, #16
 801ffaa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ffae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ffb2:	4318      	orrs	r0, r3
 801ffb4:	0413      	lsls	r3, r2, #16
 801ffb6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ffba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ffbe:	4313      	orrs	r3, r2
 801ffc0:	fb04 c000 	mla	r0, r4, r0, ip
 801ffc4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ffc8:	fb06 0003 	mla	r0, r6, r3, r0
 801ffcc:	0d43      	lsrs	r3, r0, #21
 801ffce:	0940      	lsrs	r0, r0, #5
 801ffd0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ffd4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ffd8:	4318      	orrs	r0, r3
 801ffda:	8008      	strh	r0, [r1, #0]
 801ffdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ffe0:	4684      	mov	ip, r0
 801ffe2:	e7a0      	b.n	801ff26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ffe4:	4607      	mov	r7, r0
 801ffe6:	4684      	mov	ip, r0
 801ffe8:	e7a7      	b.n	801ff3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ffea:	4607      	mov	r7, r0
 801ffec:	e7a5      	b.n	801ff3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ffee:	4602      	mov	r2, r0
 801fff0:	e7b2      	b.n	801ff58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801fff2:	4602      	mov	r2, r0
 801fff4:	e7ba      	b.n	801ff6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801fff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fff6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fffa:	b093      	sub	sp, #76	; 0x4c
 801fffc:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020000:	920f      	str	r2, [sp, #60]	; 0x3c
 8020002:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020004:	9108      	str	r1, [sp, #32]
 8020006:	9306      	str	r3, [sp, #24]
 8020008:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802000c:	9010      	str	r0, [sp, #64]	; 0x40
 802000e:	6850      	ldr	r0, [r2, #4]
 8020010:	6812      	ldr	r2, [r2, #0]
 8020012:	fb00 1303 	mla	r3, r0, r3, r1
 8020016:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802001a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802001c:	681b      	ldr	r3, [r3, #0]
 802001e:	9307      	str	r3, [sp, #28]
 8020020:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020022:	685f      	ldr	r7, [r3, #4]
 8020024:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020028:	3704      	adds	r7, #4
 802002a:	9b08      	ldr	r3, [sp, #32]
 802002c:	2b00      	cmp	r3, #0
 802002e:	dc03      	bgt.n	8020038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020030:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020032:	2b00      	cmp	r3, #0
 8020034:	f340 81b2 	ble.w	802039c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020038:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802003a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802003e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020042:	1e48      	subs	r0, r1, #1
 8020044:	f102 3cff 	add.w	ip, r2, #4294967295
 8020048:	9b06      	ldr	r3, [sp, #24]
 802004a:	2b00      	cmp	r3, #0
 802004c:	f340 80a9 	ble.w	80201a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020050:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020054:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020058:	d406      	bmi.n	8020068 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802005a:	4586      	cmp	lr, r0
 802005c:	da04      	bge.n	8020068 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802005e:	2b00      	cmp	r3, #0
 8020060:	db02      	blt.n	8020068 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020062:	4563      	cmp	r3, ip
 8020064:	f2c0 809e 	blt.w	80201a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020068:	f11e 0e01 	adds.w	lr, lr, #1
 802006c:	f100 808f 	bmi.w	802018e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020070:	4571      	cmp	r1, lr
 8020072:	f2c0 808c 	blt.w	802018e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020076:	3301      	adds	r3, #1
 8020078:	f100 8089 	bmi.w	802018e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802007c:	429a      	cmp	r2, r3
 802007e:	f2c0 8086 	blt.w	802018e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020082:	f8dd b018 	ldr.w	fp, [sp, #24]
 8020086:	46c8      	mov	r8, r9
 8020088:	f1bb 0f00 	cmp.w	fp, #0
 802008c:	f340 80a6 	ble.w	80201dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8020090:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8020092:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020094:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020098:	689b      	ldr	r3, [r3, #8]
 802009a:	1422      	asrs	r2, r4, #16
 802009c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80200a0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80200a4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80200a8:	f100 80e3 	bmi.w	8020272 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80200ac:	f103 3aff 	add.w	sl, r3, #4294967295
 80200b0:	4552      	cmp	r2, sl
 80200b2:	f280 80de 	bge.w	8020272 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80200b6:	f1bc 0f00 	cmp.w	ip, #0
 80200ba:	f2c0 80da 	blt.w	8020272 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80200be:	f10e 3aff 	add.w	sl, lr, #4294967295
 80200c2:	45d4      	cmp	ip, sl
 80200c4:	f280 80d5 	bge.w	8020272 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80200c8:	b21b      	sxth	r3, r3
 80200ca:	fb0c 2203 	mla	r2, ip, r3, r2
 80200ce:	9d07      	ldr	r5, [sp, #28]
 80200d0:	eb05 0a02 	add.w	sl, r5, r2
 80200d4:	5caa      	ldrb	r2, [r5, r2]
 80200d6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80200da:	2800      	cmp	r0, #0
 80200dc:	f000 80c0 	beq.w	8020260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80200e0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80200e4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80200e8:	920b      	str	r2, [sp, #44]	; 0x2c
 80200ea:	b151      	cbz	r1, 8020102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80200ec:	eb0a 0203 	add.w	r2, sl, r3
 80200f0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80200f4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80200f8:	9309      	str	r3, [sp, #36]	; 0x24
 80200fa:	7853      	ldrb	r3, [r2, #1]
 80200fc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020100:	930c      	str	r3, [sp, #48]	; 0x30
 8020102:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020104:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020106:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802010a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802010e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020112:	ea4c 0c03 	orr.w	ip, ip, r3
 8020116:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020118:	041b      	lsls	r3, r3, #16
 802011a:	fb10 f201 	smulbb	r2, r0, r1
 802011e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020122:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020126:	10d2      	asrs	r2, r2, #3
 8020128:	432b      	orrs	r3, r5
 802012a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802012e:	4353      	muls	r3, r2
 8020130:	fb0a 330c 	mla	r3, sl, ip, r3
 8020134:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020138:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802013c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020140:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020144:	f1c1 0c10 	rsb	ip, r1, #16
 8020148:	ebac 0c00 	sub.w	ip, ip, r0
 802014c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020150:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020154:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020156:	0418      	lsls	r0, r3, #16
 8020158:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802015c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020160:	4318      	orrs	r0, r3
 8020162:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020166:	fb02 c200 	mla	r2, r2, r0, ip
 802016a:	0d53      	lsrs	r3, r2, #21
 802016c:	0952      	lsrs	r2, r2, #5
 802016e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020172:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020176:	431a      	orrs	r2, r3
 8020178:	f8a8 2000 	strh.w	r2, [r8]
 802017c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802017e:	441c      	add	r4, r3
 8020180:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020182:	f108 0802 	add.w	r8, r8, #2
 8020186:	441e      	add	r6, r3
 8020188:	f10b 3bff 	add.w	fp, fp, #4294967295
 802018c:	e77c      	b.n	8020088 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802018e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020190:	441c      	add	r4, r3
 8020192:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020194:	441e      	add	r6, r3
 8020196:	9b06      	ldr	r3, [sp, #24]
 8020198:	3b01      	subs	r3, #1
 802019a:	9306      	str	r3, [sp, #24]
 802019c:	f109 0902 	add.w	r9, r9, #2
 80201a0:	e752      	b.n	8020048 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80201a2:	d020      	beq.n	80201e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80201a4:	9b06      	ldr	r3, [sp, #24]
 80201a6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80201a8:	3b01      	subs	r3, #1
 80201aa:	fb00 4003 	mla	r0, r0, r3, r4
 80201ae:	1400      	asrs	r0, r0, #16
 80201b0:	f53f af67 	bmi.w	8020082 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80201b4:	3901      	subs	r1, #1
 80201b6:	4288      	cmp	r0, r1
 80201b8:	f6bf af63 	bge.w	8020082 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80201bc:	9920      	ldr	r1, [sp, #128]	; 0x80
 80201be:	fb01 6303 	mla	r3, r1, r3, r6
 80201c2:	141b      	asrs	r3, r3, #16
 80201c4:	f53f af5d 	bmi.w	8020082 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80201c8:	3a01      	subs	r2, #1
 80201ca:	4293      	cmp	r3, r2
 80201cc:	f6bf af59 	bge.w	8020082 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80201d0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80201d4:	46ca      	mov	sl, r9
 80201d6:	f1b8 0f00 	cmp.w	r8, #0
 80201da:	dc67      	bgt.n	80202ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80201dc:	9b06      	ldr	r3, [sp, #24]
 80201de:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80201e2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80201e6:	9b08      	ldr	r3, [sp, #32]
 80201e8:	2b00      	cmp	r3, #0
 80201ea:	f340 80d7 	ble.w	802039c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80201ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80201f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80201f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80201fa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80201fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020200:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020204:	eeb0 6a62 	vmov.f32	s12, s5
 8020208:	ee61 7a27 	vmul.f32	s15, s2, s15
 802020c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020210:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020214:	ee16 4a10 	vmov	r4, s12
 8020218:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802021c:	eeb0 6a43 	vmov.f32	s12, s6
 8020220:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020224:	ee12 2a90 	vmov	r2, s5
 8020228:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802022c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020230:	ee13 2a10 	vmov	r2, s6
 8020234:	931f      	str	r3, [sp, #124]	; 0x7c
 8020236:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020238:	fb92 f3f3 	sdiv	r3, r2, r3
 802023c:	9320      	str	r3, [sp, #128]	; 0x80
 802023e:	9b08      	ldr	r3, [sp, #32]
 8020240:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020242:	3b01      	subs	r3, #1
 8020244:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020248:	9308      	str	r3, [sp, #32]
 802024a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802024c:	bf08      	it	eq
 802024e:	4613      	moveq	r3, r2
 8020250:	ee16 6a10 	vmov	r6, s12
 8020254:	9306      	str	r3, [sp, #24]
 8020256:	eeb0 3a67 	vmov.f32	s6, s15
 802025a:	eef0 2a47 	vmov.f32	s5, s14
 802025e:	e6e4      	b.n	802002a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020260:	2900      	cmp	r1, #0
 8020262:	f43f af4e 	beq.w	8020102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020266:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802026a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802026e:	9309      	str	r3, [sp, #36]	; 0x24
 8020270:	e747      	b.n	8020102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020272:	f112 0a01 	adds.w	sl, r2, #1
 8020276:	d481      	bmi.n	802017c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020278:	4553      	cmp	r3, sl
 802027a:	f6ff af7f 	blt.w	802017c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802027e:	f11c 0a01 	adds.w	sl, ip, #1
 8020282:	f53f af7b 	bmi.w	802017c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020286:	45d6      	cmp	lr, sl
 8020288:	f6ff af78 	blt.w	802017c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802028c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020290:	b21b      	sxth	r3, r3
 8020292:	fa0f f28e 	sxth.w	r2, lr
 8020296:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802029a:	9201      	str	r2, [sp, #4]
 802029c:	9300      	str	r3, [sp, #0]
 802029e:	9a07      	ldr	r2, [sp, #28]
 80202a0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80202a2:	463b      	mov	r3, r7
 80202a4:	4641      	mov	r1, r8
 80202a6:	f7ff fe21 	bl	801feec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80202aa:	e767      	b.n	802017c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80202ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80202ae:	9d07      	ldr	r5, [sp, #28]
 80202b0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80202b4:	1422      	asrs	r2, r4, #16
 80202b6:	1431      	asrs	r1, r6, #16
 80202b8:	fb03 2101 	mla	r1, r3, r1, r2
 80202bc:	9a07      	ldr	r2, [sp, #28]
 80202be:	440a      	add	r2, r1
 80202c0:	5c69      	ldrb	r1, [r5, r1]
 80202c2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80202c6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80202ca:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80202ce:	f1be 0f00 	cmp.w	lr, #0
 80202d2:	d05c      	beq.n	802038e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80202d4:	f892 c001 	ldrb.w	ip, [r2, #1]
 80202d8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80202dc:	950d      	str	r5, [sp, #52]	; 0x34
 80202de:	b150      	cbz	r0, 80202f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80202e0:	eb02 0c03 	add.w	ip, r2, r3
 80202e4:	5cd3      	ldrb	r3, [r2, r3]
 80202e6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80202ea:	930a      	str	r3, [sp, #40]	; 0x28
 80202ec:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80202f0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80202f4:	930e      	str	r3, [sp, #56]	; 0x38
 80202f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80202f8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80202fa:	fb1e f200 	smulbb	r2, lr, r0
 80202fe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020302:	10d2      	asrs	r2, r2, #3
 8020304:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020308:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802030c:	ea4c 0c03 	orr.w	ip, ip, r3
 8020310:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020314:	9311      	str	r3, [sp, #68]	; 0x44
 8020316:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020318:	041b      	lsls	r3, r3, #16
 802031a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 802031e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020322:	ea43 030b 	orr.w	r3, r3, fp
 8020326:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020328:	4353      	muls	r3, r2
 802032a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802032e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020332:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020336:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802033a:	ea43 0b01 	orr.w	fp, r3, r1
 802033e:	f1c0 0110 	rsb	r1, r0, #16
 8020342:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020344:	eba1 0e0e 	sub.w	lr, r1, lr
 8020348:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 802034c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020350:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020354:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8020358:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802035c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020360:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020364:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020368:	ea4f 535c 	mov.w	r3, ip, lsr #21
 802036c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020370:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020374:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020378:	ea43 0c0c 	orr.w	ip, r3, ip
 802037c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802037e:	f82a cb02 	strh.w	ip, [sl], #2
 8020382:	441c      	add	r4, r3
 8020384:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020386:	f108 38ff 	add.w	r8, r8, #4294967295
 802038a:	441e      	add	r6, r3
 802038c:	e723      	b.n	80201d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802038e:	2800      	cmp	r0, #0
 8020390:	d0b1      	beq.n	80202f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020392:	5cd3      	ldrb	r3, [r2, r3]
 8020394:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020398:	930a      	str	r3, [sp, #40]	; 0x28
 802039a:	e7ac      	b.n	80202f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802039c:	b013      	add	sp, #76	; 0x4c
 802039e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080203a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80203a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203a6:	880d      	ldrh	r5, [r1, #0]
 80203a8:	b087      	sub	sp, #28
 80203aa:	10ef      	asrs	r7, r5, #3
 80203ac:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80203b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80203b4:	00ed      	lsls	r5, r5, #3
 80203b6:	9701      	str	r7, [sp, #4]
 80203b8:	b2ed      	uxtb	r5, r5
 80203ba:	9502      	str	r5, [sp, #8]
 80203bc:	9d01      	ldr	r5, [sp, #4]
 80203be:	9103      	str	r1, [sp, #12]
 80203c0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80203c4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 80203c8:	9902      	ldr	r1, [sp, #8]
 80203ca:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80203ce:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80203d2:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80203d6:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80203da:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80203de:	022d      	lsls	r5, r5, #8
 80203e0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80203e4:	fb06 0709 	mla	r7, r6, r9, r0
 80203e8:	430d      	orrs	r5, r1
 80203ea:	2e00      	cmp	r6, #0
 80203ec:	eb02 0c07 	add.w	ip, r2, r7
 80203f0:	9505      	str	r5, [sp, #20]
 80203f2:	f2c0 80b6 	blt.w	8020562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80203f6:	45b3      	cmp	fp, r6
 80203f8:	f340 80b3 	ble.w	8020562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80203fc:	2800      	cmp	r0, #0
 80203fe:	f2c0 80ae 	blt.w	802055e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020402:	4581      	cmp	r9, r0
 8020404:	f340 80ab 	ble.w	802055e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020408:	5dd7      	ldrb	r7, [r2, r7]
 802040a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802040e:	441f      	add	r7, r3
 8020410:	1c42      	adds	r2, r0, #1
 8020412:	f100 80a9 	bmi.w	8020568 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020416:	4591      	cmp	r9, r2
 8020418:	f340 80a6 	ble.w	8020568 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802041c:	2c00      	cmp	r4, #0
 802041e:	f000 80a3 	beq.w	8020568 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020422:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020426:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802042a:	441d      	add	r5, r3
 802042c:	3601      	adds	r6, #1
 802042e:	f100 809f 	bmi.w	8020570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020432:	45b3      	cmp	fp, r6
 8020434:	f340 809c 	ble.w	8020570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020438:	f1be 0f00 	cmp.w	lr, #0
 802043c:	f000 8098 	beq.w	8020570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020440:	2800      	cmp	r0, #0
 8020442:	f2c0 8093 	blt.w	802056c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020446:	4581      	cmp	r9, r0
 8020448:	f340 8090 	ble.w	802056c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802044c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020450:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020454:	441e      	add	r6, r3
 8020456:	3001      	adds	r0, #1
 8020458:	f100 808d 	bmi.w	8020576 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802045c:	4581      	cmp	r9, r0
 802045e:	f340 808a 	ble.w	8020576 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020462:	2c00      	cmp	r4, #0
 8020464:	f000 8087 	beq.w	8020576 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020468:	44e1      	add	r9, ip
 802046a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802046e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020472:	4413      	add	r3, r2
 8020474:	b2a4      	uxth	r4, r4
 8020476:	fa1f fe8e 	uxth.w	lr, lr
 802047a:	fb04 fb0e 	mul.w	fp, r4, lr
 802047e:	0124      	lsls	r4, r4, #4
 8020480:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8020484:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8020488:	eba4 040b 	sub.w	r4, r4, fp
 802048c:	fa1f f08e 	uxth.w	r0, lr
 8020490:	b2a2      	uxth	r2, r4
 8020492:	78ac      	ldrb	r4, [r5, #2]
 8020494:	f897 c002 	ldrb.w	ip, [r7, #2]
 8020498:	9901      	ldr	r1, [sp, #4]
 802049a:	eba9 0900 	sub.w	r9, r9, r0
 802049e:	fa1f f989 	uxth.w	r9, r9
 80204a2:	4354      	muls	r4, r2
 80204a4:	fb09 440c 	mla	r4, r9, ip, r4
 80204a8:	f896 c002 	ldrb.w	ip, [r6, #2]
 80204ac:	fb00 440c 	mla	r4, r0, ip, r4
 80204b0:	f893 c002 	ldrb.w	ip, [r3, #2]
 80204b4:	fa1f fe88 	uxth.w	lr, r8
 80204b8:	ea6f 0808 	mvn.w	r8, r8
 80204bc:	fa5f f888 	uxtb.w	r8, r8
 80204c0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80204c4:	fb1a fa08 	smulbb	sl, sl, r8
 80204c8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80204cc:	fb0c ac0e 	mla	ip, ip, lr, sl
 80204d0:	f895 a001 	ldrb.w	sl, [r5, #1]
 80204d4:	787c      	ldrb	r4, [r7, #1]
 80204d6:	782d      	ldrb	r5, [r5, #0]
 80204d8:	783f      	ldrb	r7, [r7, #0]
 80204da:	fb02 fa0a 	mul.w	sl, r2, sl
 80204de:	fb09 aa04 	mla	sl, r9, r4, sl
 80204e2:	7874      	ldrb	r4, [r6, #1]
 80204e4:	436a      	muls	r2, r5
 80204e6:	7835      	ldrb	r5, [r6, #0]
 80204e8:	fb00 aa04 	mla	sl, r0, r4, sl
 80204ec:	fb09 2207 	mla	r2, r9, r7, r2
 80204f0:	785c      	ldrb	r4, [r3, #1]
 80204f2:	781b      	ldrb	r3, [r3, #0]
 80204f4:	fb00 2005 	mla	r0, r0, r5, r2
 80204f8:	fb0b a404 	mla	r4, fp, r4, sl
 80204fc:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020500:	9b02      	ldr	r3, [sp, #8]
 8020502:	fb11 fa08 	smulbb	sl, r1, r8
 8020506:	fa1f fc8c 	uxth.w	ip, ip
 802050a:	fb13 f808 	smulbb	r8, r3, r8
 802050e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020512:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8020516:	fb04 a40e 	mla	r4, r4, lr, sl
 802051a:	f10c 0301 	add.w	r3, ip, #1
 802051e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020522:	fa1f fe8e 	uxth.w	lr, lr
 8020526:	b2a4      	uxth	r4, r4
 8020528:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802052c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020530:	f104 0a01 	add.w	sl, r4, #1
 8020534:	f10e 0c01 	add.w	ip, lr, #1
 8020538:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802053c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020540:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020544:	0964      	lsrs	r4, r4, #5
 8020546:	ea4c 0c03 	orr.w	ip, ip, r3
 802054a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802054e:	9b03      	ldr	r3, [sp, #12]
 8020550:	ea4c 0c04 	orr.w	ip, ip, r4
 8020554:	f8a3 c000 	strh.w	ip, [r3]
 8020558:	b007      	add	sp, #28
 802055a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802055e:	af05      	add	r7, sp, #20
 8020560:	e756      	b.n	8020410 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8020562:	ad05      	add	r5, sp, #20
 8020564:	462f      	mov	r7, r5
 8020566:	e761      	b.n	802042c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020568:	ad05      	add	r5, sp, #20
 802056a:	e75f      	b.n	802042c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802056c:	ae05      	add	r6, sp, #20
 802056e:	e772      	b.n	8020456 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8020570:	ab05      	add	r3, sp, #20
 8020572:	461e      	mov	r6, r3
 8020574:	e77e      	b.n	8020474 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8020576:	ab05      	add	r3, sp, #20
 8020578:	e77c      	b.n	8020474 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802057a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802057a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802057e:	b095      	sub	sp, #84	; 0x54
 8020580:	9212      	str	r2, [sp, #72]	; 0x48
 8020582:	9309      	str	r3, [sp, #36]	; 0x24
 8020584:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8020586:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802058a:	930f      	str	r3, [sp, #60]	; 0x3c
 802058c:	910e      	str	r1, [sp, #56]	; 0x38
 802058e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8020592:	9013      	str	r0, [sp, #76]	; 0x4c
 8020594:	6850      	ldr	r0, [r2, #4]
 8020596:	6812      	ldr	r2, [r2, #0]
 8020598:	fb00 1303 	mla	r3, r0, r3, r1
 802059c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80205a0:	930a      	str	r3, [sp, #40]	; 0x28
 80205a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80205a4:	681b      	ldr	r3, [r3, #0]
 80205a6:	930d      	str	r3, [sp, #52]	; 0x34
 80205a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80205aa:	685c      	ldr	r4, [r3, #4]
 80205ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80205ae:	43db      	mvns	r3, r3
 80205b0:	b2db      	uxtb	r3, r3
 80205b2:	3404      	adds	r4, #4
 80205b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80205b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80205b8:	2b00      	cmp	r3, #0
 80205ba:	dc03      	bgt.n	80205c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80205bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80205be:	2b00      	cmp	r3, #0
 80205c0:	f340 8255 	ble.w	8020a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80205c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80205c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80205ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80205ce:	1e48      	subs	r0, r1, #1
 80205d0:	1e55      	subs	r5, r2, #1
 80205d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205d4:	2b00      	cmp	r3, #0
 80205d6:	f340 80f9 	ble.w	80207cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80205da:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80205dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80205de:	1436      	asrs	r6, r6, #16
 80205e0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80205e4:	d406      	bmi.n	80205f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80205e6:	4286      	cmp	r6, r0
 80205e8:	da04      	bge.n	80205f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80205ea:	2b00      	cmp	r3, #0
 80205ec:	db02      	blt.n	80205f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80205ee:	42ab      	cmp	r3, r5
 80205f0:	f2c0 80ed 	blt.w	80207ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80205f4:	3601      	adds	r6, #1
 80205f6:	f100 80da 	bmi.w	80207ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80205fa:	42b1      	cmp	r1, r6
 80205fc:	f2c0 80d7 	blt.w	80207ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020600:	3301      	adds	r3, #1
 8020602:	f100 80d4 	bmi.w	80207ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020606:	429a      	cmp	r2, r3
 8020608:	f2c0 80d1 	blt.w	80207ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802060c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802060e:	9311      	str	r3, [sp, #68]	; 0x44
 8020610:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020612:	930c      	str	r3, [sp, #48]	; 0x30
 8020614:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020616:	2b00      	cmp	r3, #0
 8020618:	f340 80fa 	ble.w	8020810 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802061c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802061e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020620:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020622:	68c6      	ldr	r6, [r0, #12]
 8020624:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020626:	141d      	asrs	r5, r3, #16
 8020628:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802062c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802062e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020630:	1400      	asrs	r0, r0, #16
 8020632:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020636:	6892      	ldr	r2, [r2, #8]
 8020638:	f100 813e 	bmi.w	80208b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802063c:	1e57      	subs	r7, r2, #1
 802063e:	42b8      	cmp	r0, r7
 8020640:	f280 813a 	bge.w	80208b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020644:	2d00      	cmp	r5, #0
 8020646:	f2c0 8137 	blt.w	80208b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802064a:	1e77      	subs	r7, r6, #1
 802064c:	42bd      	cmp	r5, r7
 802064e:	f280 8133 	bge.w	80208b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020652:	b212      	sxth	r2, r2
 8020654:	fb05 0002 	mla	r0, r5, r2, r0
 8020658:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802065a:	f815 a000 	ldrb.w	sl, [r5, r0]
 802065e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8020662:	182e      	adds	r6, r5, r0
 8020664:	eb04 050a 	add.w	r5, r4, sl
 8020668:	2b00      	cmp	r3, #0
 802066a:	f000 8117 	beq.w	802089c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802066e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8020672:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020676:	44a4      	add	ip, r4
 8020678:	2900      	cmp	r1, #0
 802067a:	f000 8117 	beq.w	80208ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802067e:	18b0      	adds	r0, r6, r2
 8020680:	5cb2      	ldrb	r2, [r6, r2]
 8020682:	7840      	ldrb	r0, [r0, #1]
 8020684:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020688:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802068c:	4422      	add	r2, r4
 802068e:	4420      	add	r0, r4
 8020690:	b29b      	uxth	r3, r3
 8020692:	b289      	uxth	r1, r1
 8020694:	fb03 f901 	mul.w	r9, r3, r1
 8020698:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802069c:	011b      	lsls	r3, r3, #4
 802069e:	b289      	uxth	r1, r1
 80206a0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80206a4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80206a8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80206aa:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80206ae:	f8b6 e000 	ldrh.w	lr, [r6]
 80206b2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80206b6:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80206ba:	eba3 0309 	sub.w	r3, r3, r9
 80206be:	b29b      	uxth	r3, r3
 80206c0:	eba8 0801 	sub.w	r8, r8, r1
 80206c4:	fa1f f888 	uxth.w	r8, r8
 80206c8:	435f      	muls	r7, r3
 80206ca:	fb08 770b 	mla	r7, r8, fp, r7
 80206ce:	f892 b002 	ldrb.w	fp, [r2, #2]
 80206d2:	9310      	str	r3, [sp, #64]	; 0x40
 80206d4:	fb01 770b 	mla	r7, r1, fp, r7
 80206d8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80206dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80206de:	fb09 770b 	mla	r7, r9, fp, r7
 80206e2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80206e6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80206ea:	fb1b fb03 	smulbb	fp, fp, r3
 80206ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80206f2:	fb07 b706 	mla	r7, r7, r6, fp
 80206f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80206f8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80206fc:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020700:	f89c c000 	ldrb.w	ip, [ip]
 8020704:	435d      	muls	r5, r3
 8020706:	fb08 550b 	mla	r5, r8, fp, r5
 802070a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802070e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020710:	fb01 550b 	mla	r5, r1, fp, r5
 8020714:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020718:	fb09 550b 	mla	r5, r9, fp, r5
 802071c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020720:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020724:	fb1b fb03 	smulbb	fp, fp, r3
 8020728:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802072a:	fb03 f30c 	mul.w	r3, r3, ip
 802072e:	f892 c000 	ldrb.w	ip, [r2]
 8020732:	fb08 330a 	mla	r3, r8, sl, r3
 8020736:	fb01 330c 	mla	r3, r1, ip, r3
 802073a:	f890 c000 	ldrb.w	ip, [r0]
 802073e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020742:	fb09 3c0c 	mla	ip, r9, ip, r3
 8020746:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020748:	fa5f fe8e 	uxtb.w	lr, lr
 802074c:	b2bf      	uxth	r7, r7
 802074e:	fb1e fe03 	smulbb	lr, lr, r3
 8020752:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020756:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802075a:	fb05 b506 	mla	r5, r5, r6, fp
 802075e:	1c7b      	adds	r3, r7, #1
 8020760:	fb0c e606 	mla	r6, ip, r6, lr
 8020764:	b2ad      	uxth	r5, r5
 8020766:	b2b6      	uxth	r6, r6
 8020768:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802076c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8020770:	f105 0b01 	add.w	fp, r5, #1
 8020774:	1c77      	adds	r7, r6, #1
 8020776:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802077a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802077e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020782:	096d      	lsrs	r5, r5, #5
 8020784:	431f      	orrs	r7, r3
 8020786:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802078a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802078c:	433d      	orrs	r5, r7
 802078e:	801d      	strh	r5, [r3, #0]
 8020790:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020792:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020794:	3302      	adds	r3, #2
 8020796:	930c      	str	r3, [sp, #48]	; 0x30
 8020798:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802079a:	4413      	add	r3, r2
 802079c:	931f      	str	r3, [sp, #124]	; 0x7c
 802079e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80207a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80207a2:	4413      	add	r3, r2
 80207a4:	9320      	str	r3, [sp, #128]	; 0x80
 80207a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80207a8:	3b01      	subs	r3, #1
 80207aa:	9311      	str	r3, [sp, #68]	; 0x44
 80207ac:	e732      	b.n	8020614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80207ae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80207b0:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80207b2:	4433      	add	r3, r6
 80207b4:	931f      	str	r3, [sp, #124]	; 0x7c
 80207b6:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80207b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80207ba:	4433      	add	r3, r6
 80207bc:	9320      	str	r3, [sp, #128]	; 0x80
 80207be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80207c0:	3b01      	subs	r3, #1
 80207c2:	9309      	str	r3, [sp, #36]	; 0x24
 80207c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80207c6:	3302      	adds	r3, #2
 80207c8:	930a      	str	r3, [sp, #40]	; 0x28
 80207ca:	e702      	b.n	80205d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80207cc:	d027      	beq.n	802081e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80207ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80207d0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80207d2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80207d4:	3b01      	subs	r3, #1
 80207d6:	fb00 5003 	mla	r0, r0, r3, r5
 80207da:	1400      	asrs	r0, r0, #16
 80207dc:	f53f af16 	bmi.w	802060c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80207e0:	3901      	subs	r1, #1
 80207e2:	4288      	cmp	r0, r1
 80207e4:	f6bf af12 	bge.w	802060c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80207e8:	9922      	ldr	r1, [sp, #136]	; 0x88
 80207ea:	9820      	ldr	r0, [sp, #128]	; 0x80
 80207ec:	fb01 0303 	mla	r3, r1, r3, r0
 80207f0:	141b      	asrs	r3, r3, #16
 80207f2:	f53f af0b 	bmi.w	802060c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80207f6:	3a01      	subs	r2, #1
 80207f8:	4293      	cmp	r3, r2
 80207fa:	f6bf af07 	bge.w	802060c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80207fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020800:	9311      	str	r3, [sp, #68]	; 0x44
 8020802:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8020806:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020808:	930c      	str	r3, [sp, #48]	; 0x30
 802080a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802080c:	2b00      	cmp	r3, #0
 802080e:	dc70      	bgt.n	80208f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020810:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020812:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020814:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020818:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802081c:	930a      	str	r3, [sp, #40]	; 0x28
 802081e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020820:	2b00      	cmp	r3, #0
 8020822:	f340 8124 	ble.w	8020a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020826:	ee30 0a04 	vadd.f32	s0, s0, s8
 802082a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802082e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020832:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020834:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020838:	ee31 1a05 	vadd.f32	s2, s2, s10
 802083c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020840:	eef0 6a62 	vmov.f32	s13, s5
 8020844:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020848:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802084c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020850:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8020854:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020858:	eef0 6a43 	vmov.f32	s13, s6
 802085c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020860:	ee12 2a90 	vmov	r2, s5
 8020864:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020868:	fb92 f3f3 	sdiv	r3, r2, r3
 802086c:	ee13 2a10 	vmov	r2, s6
 8020870:	9321      	str	r3, [sp, #132]	; 0x84
 8020872:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020874:	fb92 f3f3 	sdiv	r3, r2, r3
 8020878:	9322      	str	r3, [sp, #136]	; 0x88
 802087a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802087c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802087e:	3b01      	subs	r3, #1
 8020880:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020884:	930e      	str	r3, [sp, #56]	; 0x38
 8020886:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020888:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802088c:	bf08      	it	eq
 802088e:	4613      	moveq	r3, r2
 8020890:	9309      	str	r3, [sp, #36]	; 0x24
 8020892:	eeb0 3a67 	vmov.f32	s6, s15
 8020896:	eef0 2a47 	vmov.f32	s5, s14
 802089a:	e68c      	b.n	80205b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802089c:	b149      	cbz	r1, 80208b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802089e:	5cb2      	ldrb	r2, [r6, r2]
 80208a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80208a4:	4422      	add	r2, r4
 80208a6:	4628      	mov	r0, r5
 80208a8:	46ac      	mov	ip, r5
 80208aa:	e6f1      	b.n	8020690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80208ac:	4628      	mov	r0, r5
 80208ae:	462a      	mov	r2, r5
 80208b0:	e6ee      	b.n	8020690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80208b2:	4628      	mov	r0, r5
 80208b4:	462a      	mov	r2, r5
 80208b6:	e7f7      	b.n	80208a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80208b8:	1c47      	adds	r7, r0, #1
 80208ba:	f53f af69 	bmi.w	8020790 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80208be:	42ba      	cmp	r2, r7
 80208c0:	f6ff af66 	blt.w	8020790 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80208c4:	1c6f      	adds	r7, r5, #1
 80208c6:	f53f af63 	bmi.w	8020790 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80208ca:	42be      	cmp	r6, r7
 80208cc:	f6ff af60 	blt.w	8020790 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80208d0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80208d2:	9002      	str	r0, [sp, #8]
 80208d4:	b236      	sxth	r6, r6
 80208d6:	b212      	sxth	r2, r2
 80208d8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80208dc:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80208e0:	9200      	str	r2, [sp, #0]
 80208e2:	9601      	str	r6, [sp, #4]
 80208e4:	4623      	mov	r3, r4
 80208e6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80208ea:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80208ec:	f7ff fd59 	bl	80203a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80208f0:	e74e      	b.n	8020790 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80208f2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80208f4:	9820      	ldr	r0, [sp, #128]	; 0x80
 80208f6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80208f8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80208fa:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80208fe:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020900:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020904:	142d      	asrs	r5, r5, #16
 8020906:	1400      	asrs	r0, r0, #16
 8020908:	fb02 5000 	mla	r0, r2, r0, r5
 802090c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802090e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020912:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020916:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802091a:	182e      	adds	r6, r5, r0
 802091c:	eb04 0509 	add.w	r5, r4, r9
 8020920:	2b00      	cmp	r3, #0
 8020922:	f000 8096 	beq.w	8020a52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8020926:	7877      	ldrb	r7, [r6, #1]
 8020928:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802092c:	4427      	add	r7, r4
 802092e:	2900      	cmp	r1, #0
 8020930:	f000 8097 	beq.w	8020a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020934:	18b0      	adds	r0, r6, r2
 8020936:	5cb2      	ldrb	r2, [r6, r2]
 8020938:	7840      	ldrb	r0, [r0, #1]
 802093a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802093e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020942:	4422      	add	r2, r4
 8020944:	4420      	add	r0, r4
 8020946:	b29b      	uxth	r3, r3
 8020948:	b289      	uxth	r1, r1
 802094a:	fb03 f801 	mul.w	r8, r3, r1
 802094e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020950:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020954:	f8b6 c000 	ldrh.w	ip, [r6]
 8020958:	78be      	ldrb	r6, [r7, #2]
 802095a:	f814 9009 	ldrb.w	r9, [r4, r9]
 802095e:	011b      	lsls	r3, r3, #4
 8020960:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8020964:	b289      	uxth	r1, r1
 8020966:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802096a:	eba3 0308 	sub.w	r3, r3, r8
 802096e:	b29b      	uxth	r3, r3
 8020970:	ebae 0e01 	sub.w	lr, lr, r1
 8020974:	fa1f fe8e 	uxth.w	lr, lr
 8020978:	435e      	muls	r6, r3
 802097a:	fb0e 660b 	mla	r6, lr, fp, r6
 802097e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020982:	9310      	str	r3, [sp, #64]	; 0x40
 8020984:	fb01 660b 	mla	r6, r1, fp, r6
 8020988:	f890 b002 	ldrb.w	fp, [r0, #2]
 802098c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802098e:	fb08 660b 	mla	r6, r8, fp, r6
 8020992:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8020996:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802099a:	fb1b fb03 	smulbb	fp, fp, r3
 802099e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80209a2:	fb06 b60a 	mla	r6, r6, sl, fp
 80209a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80209a8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80209ac:	787d      	ldrb	r5, [r7, #1]
 80209ae:	783f      	ldrb	r7, [r7, #0]
 80209b0:	435d      	muls	r5, r3
 80209b2:	fb0e 550b 	mla	r5, lr, fp, r5
 80209b6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80209ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80209bc:	fb01 550b 	mla	r5, r1, fp, r5
 80209c0:	f890 b001 	ldrb.w	fp, [r0, #1]
 80209c4:	fb08 550b 	mla	r5, r8, fp, r5
 80209c8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80209cc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80209d0:	fb1b fb03 	smulbb	fp, fp, r3
 80209d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80209d6:	437b      	muls	r3, r7
 80209d8:	7817      	ldrb	r7, [r2, #0]
 80209da:	fb0e 3309 	mla	r3, lr, r9, r3
 80209de:	fb01 3307 	mla	r3, r1, r7, r3
 80209e2:	7807      	ldrb	r7, [r0, #0]
 80209e4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80209e8:	fb08 3707 	mla	r7, r8, r7, r3
 80209ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80209ee:	fa5f fc8c 	uxtb.w	ip, ip
 80209f2:	fb1c fc03 	smulbb	ip, ip, r3
 80209f6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80209fa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80209fe:	fb05 b50a 	mla	r5, r5, sl, fp
 8020a02:	fb07 c70a 	mla	r7, r7, sl, ip
 8020a06:	b2b6      	uxth	r6, r6
 8020a08:	b2ad      	uxth	r5, r5
 8020a0a:	b2bf      	uxth	r7, r7
 8020a0c:	1c73      	adds	r3, r6, #1
 8020a0e:	1c7a      	adds	r2, r7, #1
 8020a10:	f105 0b01 	add.w	fp, r5, #1
 8020a14:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020a18:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020a1c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020a20:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020a24:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020a28:	096d      	lsrs	r5, r5, #5
 8020a2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020a2c:	4316      	orrs	r6, r2
 8020a2e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020a32:	432e      	orrs	r6, r5
 8020a34:	f823 6b02 	strh.w	r6, [r3], #2
 8020a38:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020a3a:	930c      	str	r3, [sp, #48]	; 0x30
 8020a3c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020a3e:	4413      	add	r3, r2
 8020a40:	931f      	str	r3, [sp, #124]	; 0x7c
 8020a42:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020a44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a46:	4413      	add	r3, r2
 8020a48:	9320      	str	r3, [sp, #128]	; 0x80
 8020a4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020a4c:	3b01      	subs	r3, #1
 8020a4e:	9311      	str	r3, [sp, #68]	; 0x44
 8020a50:	e6db      	b.n	802080a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8020a52:	b149      	cbz	r1, 8020a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020a54:	5cb2      	ldrb	r2, [r6, r2]
 8020a56:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020a5a:	4422      	add	r2, r4
 8020a5c:	4628      	mov	r0, r5
 8020a5e:	462f      	mov	r7, r5
 8020a60:	e771      	b.n	8020946 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020a62:	4628      	mov	r0, r5
 8020a64:	462a      	mov	r2, r5
 8020a66:	e76e      	b.n	8020946 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020a68:	4628      	mov	r0, r5
 8020a6a:	462a      	mov	r2, r5
 8020a6c:	e7f7      	b.n	8020a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020a6e:	b015      	add	sp, #84	; 0x54
 8020a70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020a74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8020a74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a78:	880f      	ldrh	r7, [r1, #0]
 8020a7a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8020a7e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020a82:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8020a86:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8020a8a:	023c      	lsls	r4, r7, #8
 8020a8c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8020a90:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8020a94:	017c      	lsls	r4, r7, #5
 8020a96:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8020a9a:	00ff      	lsls	r7, r7, #3
 8020a9c:	ea4b 0404 	orr.w	r4, fp, r4
 8020aa0:	b2ff      	uxtb	r7, r7
 8020aa2:	fb05 ca0e 	mla	sl, r5, lr, ip
 8020aa6:	4327      	orrs	r7, r4
 8020aa8:	2d00      	cmp	r5, #0
 8020aaa:	eb02 080a 	add.w	r8, r2, sl
 8020aae:	9701      	str	r7, [sp, #4]
 8020ab0:	db7e      	blt.n	8020bb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020ab2:	45a9      	cmp	r9, r5
 8020ab4:	dd7c      	ble.n	8020bb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020ab6:	f1bc 0f00 	cmp.w	ip, #0
 8020aba:	db77      	blt.n	8020bac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020abc:	45e6      	cmp	lr, ip
 8020abe:	dd75      	ble.n	8020bac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020ac0:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020ac4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020ac8:	441f      	add	r7, r3
 8020aca:	f11c 0201 	adds.w	r2, ip, #1
 8020ace:	d472      	bmi.n	8020bb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020ad0:	4596      	cmp	lr, r2
 8020ad2:	dd70      	ble.n	8020bb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020ad4:	2800      	cmp	r0, #0
 8020ad6:	d06e      	beq.n	8020bb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020ad8:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020adc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020ae0:	441c      	add	r4, r3
 8020ae2:	3501      	adds	r5, #1
 8020ae4:	d46b      	bmi.n	8020bbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020ae6:	45a9      	cmp	r9, r5
 8020ae8:	dd69      	ble.n	8020bbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020aea:	2e00      	cmp	r6, #0
 8020aec:	d067      	beq.n	8020bbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020aee:	f1bc 0f00 	cmp.w	ip, #0
 8020af2:	db62      	blt.n	8020bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020af4:	45e6      	cmp	lr, ip
 8020af6:	dd60      	ble.n	8020bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020af8:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020afc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020b00:	441d      	add	r5, r3
 8020b02:	f11c 0201 	adds.w	r2, ip, #1
 8020b06:	d45d      	bmi.n	8020bc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020b08:	4596      	cmp	lr, r2
 8020b0a:	dd5b      	ble.n	8020bc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020b0c:	2800      	cmp	r0, #0
 8020b0e:	d059      	beq.n	8020bc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020b10:	44c6      	add	lr, r8
 8020b12:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020b16:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020b1a:	4413      	add	r3, r2
 8020b1c:	b280      	uxth	r0, r0
 8020b1e:	b2b2      	uxth	r2, r6
 8020b20:	fb00 f602 	mul.w	r6, r0, r2
 8020b24:	0100      	lsls	r0, r0, #4
 8020b26:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8020b2a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020b2e:	1b80      	subs	r0, r0, r6
 8020b30:	fa1f fc82 	uxth.w	ip, r2
 8020b34:	b282      	uxth	r2, r0
 8020b36:	78a0      	ldrb	r0, [r4, #2]
 8020b38:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020b3c:	f897 9000 	ldrb.w	r9, [r7]
 8020b40:	787f      	ldrb	r7, [r7, #1]
 8020b42:	eba8 080c 	sub.w	r8, r8, ip
 8020b46:	fa1f f888 	uxth.w	r8, r8
 8020b4a:	4350      	muls	r0, r2
 8020b4c:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020b50:	78a8      	ldrb	r0, [r5, #2]
 8020b52:	fb0c e000 	mla	r0, ip, r0, lr
 8020b56:	f893 e002 	ldrb.w	lr, [r3, #2]
 8020b5a:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020b5e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020b62:	f894 e000 	ldrb.w	lr, [r4]
 8020b66:	fb02 fe0e 	mul.w	lr, r2, lr
 8020b6a:	fb08 e909 	mla	r9, r8, r9, lr
 8020b6e:	f895 e000 	ldrb.w	lr, [r5]
 8020b72:	fb0c 990e 	mla	r9, ip, lr, r9
 8020b76:	f893 e000 	ldrb.w	lr, [r3]
 8020b7a:	785b      	ldrb	r3, [r3, #1]
 8020b7c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020b80:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020b84:	ea4e 0e00 	orr.w	lr, lr, r0
 8020b88:	7860      	ldrb	r0, [r4, #1]
 8020b8a:	4350      	muls	r0, r2
 8020b8c:	786a      	ldrb	r2, [r5, #1]
 8020b8e:	fb08 0007 	mla	r0, r8, r7, r0
 8020b92:	fb0c 0202 	mla	r2, ip, r2, r0
 8020b96:	fb06 2303 	mla	r3, r6, r3, r2
 8020b9a:	095b      	lsrs	r3, r3, #5
 8020b9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ba0:	ea4e 0303 	orr.w	r3, lr, r3
 8020ba4:	800b      	strh	r3, [r1, #0]
 8020ba6:	b003      	add	sp, #12
 8020ba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020bac:	af01      	add	r7, sp, #4
 8020bae:	e78c      	b.n	8020aca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020bb0:	ac01      	add	r4, sp, #4
 8020bb2:	4627      	mov	r7, r4
 8020bb4:	e795      	b.n	8020ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020bb6:	ac01      	add	r4, sp, #4
 8020bb8:	e793      	b.n	8020ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020bba:	ad01      	add	r5, sp, #4
 8020bbc:	e7a1      	b.n	8020b02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020bbe:	ab01      	add	r3, sp, #4
 8020bc0:	461d      	mov	r5, r3
 8020bc2:	e7ab      	b.n	8020b1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020bc4:	ab01      	add	r3, sp, #4
 8020bc6:	e7a9      	b.n	8020b1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020bcc:	b08f      	sub	sp, #60	; 0x3c
 8020bce:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020bd2:	920c      	str	r2, [sp, #48]	; 0x30
 8020bd4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8020bd6:	910a      	str	r1, [sp, #40]	; 0x28
 8020bd8:	9306      	str	r3, [sp, #24]
 8020bda:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020bde:	900d      	str	r0, [sp, #52]	; 0x34
 8020be0:	6850      	ldr	r0, [r2, #4]
 8020be2:	6812      	ldr	r2, [r2, #0]
 8020be4:	fb00 1303 	mla	r3, r0, r3, r1
 8020be8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020bec:	9307      	str	r3, [sp, #28]
 8020bee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020bf0:	681b      	ldr	r3, [r3, #0]
 8020bf2:	9308      	str	r3, [sp, #32]
 8020bf4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020bf6:	685c      	ldr	r4, [r3, #4]
 8020bf8:	3404      	adds	r4, #4
 8020bfa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020bfc:	2b00      	cmp	r3, #0
 8020bfe:	dc03      	bgt.n	8020c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020c00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020c02:	2b00      	cmp	r3, #0
 8020c04:	f340 81d6 	ble.w	8020fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020c08:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020c0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020c0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020c12:	1e48      	subs	r0, r1, #1
 8020c14:	1e56      	subs	r6, r2, #1
 8020c16:	9b06      	ldr	r3, [sp, #24]
 8020c18:	2b00      	cmp	r3, #0
 8020c1a:	f340 80b7 	ble.w	8020d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020c1e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020c22:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020c26:	d406      	bmi.n	8020c36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020c28:	4287      	cmp	r7, r0
 8020c2a:	da04      	bge.n	8020c36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020c2c:	2b00      	cmp	r3, #0
 8020c2e:	db02      	blt.n	8020c36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020c30:	42b3      	cmp	r3, r6
 8020c32:	f2c0 80ac 	blt.w	8020d8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020c36:	3701      	adds	r7, #1
 8020c38:	f100 809d 	bmi.w	8020d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020c3c:	42b9      	cmp	r1, r7
 8020c3e:	f2c0 809a 	blt.w	8020d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020c42:	3301      	adds	r3, #1
 8020c44:	f100 8097 	bmi.w	8020d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020c48:	429a      	cmp	r2, r3
 8020c4a:	f2c0 8094 	blt.w	8020d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020c4e:	9b06      	ldr	r3, [sp, #24]
 8020c50:	930b      	str	r3, [sp, #44]	; 0x2c
 8020c52:	9b07      	ldr	r3, [sp, #28]
 8020c54:	9309      	str	r3, [sp, #36]	; 0x24
 8020c56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020c58:	2b00      	cmp	r3, #0
 8020c5a:	f340 80b5 	ble.w	8020dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020c5e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020c60:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020c62:	68c7      	ldr	r7, [r0, #12]
 8020c64:	6892      	ldr	r2, [r2, #8]
 8020c66:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020c6a:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020c6e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020c72:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020c76:	f100 80fb 	bmi.w	8020e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020c7a:	f102 3cff 	add.w	ip, r2, #4294967295
 8020c7e:	4560      	cmp	r0, ip
 8020c80:	f280 80f6 	bge.w	8020e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020c84:	2e00      	cmp	r6, #0
 8020c86:	f2c0 80f3 	blt.w	8020e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020c8a:	f107 3cff 	add.w	ip, r7, #4294967295
 8020c8e:	4566      	cmp	r6, ip
 8020c90:	f280 80ee 	bge.w	8020e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020c94:	b212      	sxth	r2, r2
 8020c96:	fb06 0002 	mla	r0, r6, r2, r0
 8020c9a:	9e08      	ldr	r6, [sp, #32]
 8020c9c:	1837      	adds	r7, r6, r0
 8020c9e:	5c30      	ldrb	r0, [r6, r0]
 8020ca0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020ca4:	eb04 0c08 	add.w	ip, r4, r8
 8020ca8:	2b00      	cmp	r3, #0
 8020caa:	f000 80d3 	beq.w	8020e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020cae:	787e      	ldrb	r6, [r7, #1]
 8020cb0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020cb4:	4426      	add	r6, r4
 8020cb6:	2900      	cmp	r1, #0
 8020cb8:	f000 80d4 	beq.w	8020e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020cbc:	18b8      	adds	r0, r7, r2
 8020cbe:	5cba      	ldrb	r2, [r7, r2]
 8020cc0:	7840      	ldrb	r0, [r0, #1]
 8020cc2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020cc6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020cca:	4422      	add	r2, r4
 8020ccc:	4420      	add	r0, r4
 8020cce:	b29b      	uxth	r3, r3
 8020cd0:	b289      	uxth	r1, r1
 8020cd2:	fb03 f901 	mul.w	r9, r3, r1
 8020cd6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020cda:	011b      	lsls	r3, r3, #4
 8020cdc:	b289      	uxth	r1, r1
 8020cde:	78b7      	ldrb	r7, [r6, #2]
 8020ce0:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020ce4:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020ce8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020cec:	eba3 0309 	sub.w	r3, r3, r9
 8020cf0:	b29b      	uxth	r3, r3
 8020cf2:	ebae 0e01 	sub.w	lr, lr, r1
 8020cf6:	fa1f fe8e 	uxth.w	lr, lr
 8020cfa:	435f      	muls	r7, r3
 8020cfc:	fb0e 770a 	mla	r7, lr, sl, r7
 8020d00:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020d04:	fb01 770a 	mla	r7, r1, sl, r7
 8020d08:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020d0c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020d10:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020d14:	f896 8000 	ldrb.w	r8, [r6]
 8020d18:	7876      	ldrb	r6, [r6, #1]
 8020d1a:	fb03 f808 	mul.w	r8, r3, r8
 8020d1e:	fb0e 8807 	mla	r8, lr, r7, r8
 8020d22:	7817      	ldrb	r7, [r2, #0]
 8020d24:	fb01 8807 	mla	r8, r1, r7, r8
 8020d28:	7807      	ldrb	r7, [r0, #0]
 8020d2a:	fb09 8707 	mla	r7, r9, r7, r8
 8020d2e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020d32:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020d36:	ea47 070a 	orr.w	r7, r7, sl
 8020d3a:	4373      	muls	r3, r6
 8020d3c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020d40:	fb0e 330c 	mla	r3, lr, ip, r3
 8020d44:	fb01 310a 	mla	r1, r1, sl, r3
 8020d48:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020d4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d4e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020d52:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020d56:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020d5a:	ea47 070a 	orr.w	r7, r7, sl
 8020d5e:	801f      	strh	r7, [r3, #0]
 8020d60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d62:	3302      	adds	r3, #2
 8020d64:	9309      	str	r3, [sp, #36]	; 0x24
 8020d66:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020d68:	449b      	add	fp, r3
 8020d6a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020d6c:	441d      	add	r5, r3
 8020d6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020d70:	3b01      	subs	r3, #1
 8020d72:	930b      	str	r3, [sp, #44]	; 0x2c
 8020d74:	e76f      	b.n	8020c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020d76:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020d78:	449b      	add	fp, r3
 8020d7a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020d7c:	441d      	add	r5, r3
 8020d7e:	9b06      	ldr	r3, [sp, #24]
 8020d80:	3b01      	subs	r3, #1
 8020d82:	9306      	str	r3, [sp, #24]
 8020d84:	9b07      	ldr	r3, [sp, #28]
 8020d86:	3302      	adds	r3, #2
 8020d88:	9307      	str	r3, [sp, #28]
 8020d8a:	e744      	b.n	8020c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020d8c:	d023      	beq.n	8020dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020d8e:	9b06      	ldr	r3, [sp, #24]
 8020d90:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020d92:	3b01      	subs	r3, #1
 8020d94:	fb00 b003 	mla	r0, r0, r3, fp
 8020d98:	1400      	asrs	r0, r0, #16
 8020d9a:	f53f af58 	bmi.w	8020c4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020d9e:	3901      	subs	r1, #1
 8020da0:	4288      	cmp	r0, r1
 8020da2:	f6bf af54 	bge.w	8020c4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020da6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020da8:	fb01 5303 	mla	r3, r1, r3, r5
 8020dac:	141b      	asrs	r3, r3, #16
 8020dae:	f53f af4e 	bmi.w	8020c4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020db2:	3a01      	subs	r2, #1
 8020db4:	4293      	cmp	r3, r2
 8020db6:	f6bf af4a 	bge.w	8020c4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020dba:	9b06      	ldr	r3, [sp, #24]
 8020dbc:	9309      	str	r3, [sp, #36]	; 0x24
 8020dbe:	9b07      	ldr	r3, [sp, #28]
 8020dc0:	930b      	str	r3, [sp, #44]	; 0x2c
 8020dc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020dc4:	2b00      	cmp	r3, #0
 8020dc6:	dc70      	bgt.n	8020eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020dc8:	9b06      	ldr	r3, [sp, #24]
 8020dca:	9a07      	ldr	r2, [sp, #28]
 8020dcc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020dd0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020dd4:	9307      	str	r3, [sp, #28]
 8020dd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020dd8:	2b00      	cmp	r3, #0
 8020dda:	f340 80eb 	ble.w	8020fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020dde:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020de2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020de6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020dea:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020dec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020df0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020df4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020df8:	eef0 6a62 	vmov.f32	s13, s5
 8020dfc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020e00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e04:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020e08:	ee16 ba90 	vmov	fp, s13
 8020e0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020e10:	eef0 6a43 	vmov.f32	s13, s6
 8020e14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020e18:	ee12 2a90 	vmov	r2, s5
 8020e1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020e20:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e24:	ee13 2a10 	vmov	r2, s6
 8020e28:	931b      	str	r3, [sp, #108]	; 0x6c
 8020e2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020e2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e30:	931c      	str	r3, [sp, #112]	; 0x70
 8020e32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020e34:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020e36:	3b01      	subs	r3, #1
 8020e38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e3c:	930a      	str	r3, [sp, #40]	; 0x28
 8020e3e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020e40:	bf08      	it	eq
 8020e42:	4613      	moveq	r3, r2
 8020e44:	ee16 5a90 	vmov	r5, s13
 8020e48:	9306      	str	r3, [sp, #24]
 8020e4a:	eeb0 3a67 	vmov.f32	s6, s15
 8020e4e:	eef0 2a47 	vmov.f32	s5, s14
 8020e52:	e6d2      	b.n	8020bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020e54:	b149      	cbz	r1, 8020e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8020e56:	5cba      	ldrb	r2, [r7, r2]
 8020e58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020e5c:	4422      	add	r2, r4
 8020e5e:	4660      	mov	r0, ip
 8020e60:	4666      	mov	r6, ip
 8020e62:	e734      	b.n	8020cce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020e64:	4660      	mov	r0, ip
 8020e66:	4662      	mov	r2, ip
 8020e68:	e731      	b.n	8020cce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020e6a:	4660      	mov	r0, ip
 8020e6c:	4662      	mov	r2, ip
 8020e6e:	e7f7      	b.n	8020e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020e70:	f110 0c01 	adds.w	ip, r0, #1
 8020e74:	f53f af74 	bmi.w	8020d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e78:	4562      	cmp	r2, ip
 8020e7a:	f6ff af71 	blt.w	8020d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e7e:	f116 0c01 	adds.w	ip, r6, #1
 8020e82:	f53f af6d 	bmi.w	8020d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e86:	4567      	cmp	r7, ip
 8020e88:	f6ff af6a 	blt.w	8020d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e8c:	b23f      	sxth	r7, r7
 8020e8e:	b212      	sxth	r2, r2
 8020e90:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020e94:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020e98:	9200      	str	r2, [sp, #0]
 8020e9a:	9701      	str	r7, [sp, #4]
 8020e9c:	4623      	mov	r3, r4
 8020e9e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020ea2:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020ea4:	f7ff fde6 	bl	8020a74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020ea8:	e75a      	b.n	8020d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020eaa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020eac:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020eb0:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020eb4:	1428      	asrs	r0, r5, #16
 8020eb6:	fb02 6000 	mla	r0, r2, r0, r6
 8020eba:	9e08      	ldr	r6, [sp, #32]
 8020ebc:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020ec0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020ec4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020ec8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020ecc:	1837      	adds	r7, r6, r0
 8020ece:	eb04 0c08 	add.w	ip, r4, r8
 8020ed2:	2b00      	cmp	r3, #0
 8020ed4:	d060      	beq.n	8020f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020ed6:	787e      	ldrb	r6, [r7, #1]
 8020ed8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020edc:	4426      	add	r6, r4
 8020ede:	2900      	cmp	r1, #0
 8020ee0:	d062      	beq.n	8020fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020ee2:	18b8      	adds	r0, r7, r2
 8020ee4:	5cba      	ldrb	r2, [r7, r2]
 8020ee6:	7840      	ldrb	r0, [r0, #1]
 8020ee8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020eec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020ef0:	4422      	add	r2, r4
 8020ef2:	4420      	add	r0, r4
 8020ef4:	b29b      	uxth	r3, r3
 8020ef6:	b289      	uxth	r1, r1
 8020ef8:	fb03 f901 	mul.w	r9, r3, r1
 8020efc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020f00:	011b      	lsls	r3, r3, #4
 8020f02:	b289      	uxth	r1, r1
 8020f04:	78b7      	ldrb	r7, [r6, #2]
 8020f06:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020f0a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020f0e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020f12:	eba3 0309 	sub.w	r3, r3, r9
 8020f16:	b29b      	uxth	r3, r3
 8020f18:	ebae 0e01 	sub.w	lr, lr, r1
 8020f1c:	fa1f fe8e 	uxth.w	lr, lr
 8020f20:	435f      	muls	r7, r3
 8020f22:	fb0e 770a 	mla	r7, lr, sl, r7
 8020f26:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020f2a:	fb01 770a 	mla	r7, r1, sl, r7
 8020f2e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020f32:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020f36:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020f3a:	f896 8000 	ldrb.w	r8, [r6]
 8020f3e:	7876      	ldrb	r6, [r6, #1]
 8020f40:	fb03 f808 	mul.w	r8, r3, r8
 8020f44:	fb0e 8807 	mla	r8, lr, r7, r8
 8020f48:	7817      	ldrb	r7, [r2, #0]
 8020f4a:	fb01 8807 	mla	r8, r1, r7, r8
 8020f4e:	7807      	ldrb	r7, [r0, #0]
 8020f50:	fb09 8707 	mla	r7, r9, r7, r8
 8020f54:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020f58:	4373      	muls	r3, r6
 8020f5a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020f5e:	7856      	ldrb	r6, [r2, #1]
 8020f60:	ea47 070a 	orr.w	r7, r7, sl
 8020f64:	fb0e 330c 	mla	r3, lr, ip, r3
 8020f68:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020f6c:	fb01 3306 	mla	r3, r1, r6, r3
 8020f70:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020f74:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020f78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f7a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020f7e:	ea47 070a 	orr.w	r7, r7, sl
 8020f82:	f823 7b02 	strh.w	r7, [r3], #2
 8020f86:	930b      	str	r3, [sp, #44]	; 0x2c
 8020f88:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020f8a:	449b      	add	fp, r3
 8020f8c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020f8e:	441d      	add	r5, r3
 8020f90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f92:	3b01      	subs	r3, #1
 8020f94:	9309      	str	r3, [sp, #36]	; 0x24
 8020f96:	e714      	b.n	8020dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020f98:	b149      	cbz	r1, 8020fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020f9a:	5cba      	ldrb	r2, [r7, r2]
 8020f9c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020fa0:	4422      	add	r2, r4
 8020fa2:	4660      	mov	r0, ip
 8020fa4:	4666      	mov	r6, ip
 8020fa6:	e7a5      	b.n	8020ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020fa8:	4660      	mov	r0, ip
 8020faa:	4662      	mov	r2, ip
 8020fac:	e7a2      	b.n	8020ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020fae:	4660      	mov	r0, ip
 8020fb0:	4662      	mov	r2, ip
 8020fb2:	e7f7      	b.n	8020fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020fb4:	b00f      	add	sp, #60	; 0x3c
 8020fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020fba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8020fba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fbe:	b085      	sub	sp, #20
 8020fc0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020fc4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8020fc8:	9102      	str	r1, [sp, #8]
 8020fca:	2c00      	cmp	r4, #0
 8020fcc:	fb04 710c 	mla	r1, r4, ip, r7
 8020fd0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020fd4:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8020fd8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020fdc:	eb02 0e01 	add.w	lr, r2, r1
 8020fe0:	f2c0 8122 	blt.w	8021228 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020fe4:	45a0      	cmp	r8, r4
 8020fe6:	f340 811f 	ble.w	8021228 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020fea:	2f00      	cmp	r7, #0
 8020fec:	f2c0 811a 	blt.w	8021224 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020ff0:	45bc      	cmp	ip, r7
 8020ff2:	f340 8117 	ble.w	8021224 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020ff6:	5c52      	ldrb	r2, [r2, r1]
 8020ff8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020ffc:	1c7a      	adds	r2, r7, #1
 8020ffe:	f100 8116 	bmi.w	802122e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021002:	4594      	cmp	ip, r2
 8021004:	f340 8113 	ble.w	802122e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021008:	2e00      	cmp	r6, #0
 802100a:	f000 8112 	beq.w	8021232 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 802100e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021012:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021016:	3401      	adds	r4, #1
 8021018:	f100 810f 	bmi.w	802123a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802101c:	45a0      	cmp	r8, r4
 802101e:	f340 810c 	ble.w	802123a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021022:	2800      	cmp	r0, #0
 8021024:	f000 810c 	beq.w	8021240 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021028:	2f00      	cmp	r7, #0
 802102a:	f2c0 8104 	blt.w	8021236 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802102e:	45bc      	cmp	ip, r7
 8021030:	f340 8101 	ble.w	8021236 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021034:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021038:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802103c:	3701      	adds	r7, #1
 802103e:	f100 8102 	bmi.w	8021246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021042:	45bc      	cmp	ip, r7
 8021044:	f340 80ff 	ble.w	8021246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021048:	2e00      	cmp	r6, #0
 802104a:	f000 80fe 	beq.w	802124a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802104e:	44f4      	add	ip, lr
 8021050:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8021054:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021058:	b2b6      	uxth	r6, r6
 802105a:	b280      	uxth	r0, r0
 802105c:	fb00 fe06 	mul.w	lr, r0, r6
 8021060:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021064:	0136      	lsls	r6, r6, #4
 8021066:	eba6 070e 	sub.w	r7, r6, lr
 802106a:	b280      	uxth	r0, r0
 802106c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021070:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021074:	b2bf      	uxth	r7, r7
 8021076:	1a1b      	subs	r3, r3, r0
 8021078:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802107c:	b29b      	uxth	r3, r3
 802107e:	fb0a f607 	mul.w	r6, sl, r7
 8021082:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021086:	fb0b 6603 	mla	r6, fp, r3, r6
 802108a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802108e:	fb00 6609 	mla	r6, r0, r9, r6
 8021092:	fb0e 6608 	mla	r6, lr, r8, r6
 8021096:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802109a:	9600      	str	r6, [sp, #0]
 802109c:	2e00      	cmp	r6, #0
 802109e:	f000 80be 	beq.w	802121e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80210a2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80210a6:	fb0b fc0c 	mul.w	ip, fp, ip
 80210aa:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80210ae:	fb0b f505 	mul.w	r5, fp, r5
 80210b2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80210b6:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80210ba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80210be:	44dc      	add	ip, fp
 80210c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210c4:	9501      	str	r5, [sp, #4]
 80210c6:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80210ca:	9503      	str	r5, [sp, #12]
 80210cc:	9d01      	ldr	r5, [sp, #4]
 80210ce:	9e02      	ldr	r6, [sp, #8]
 80210d0:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80210d4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80210d8:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80210dc:	fb0a fc0c 	mul.w	ip, sl, ip
 80210e0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80210e4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80210e8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80210ec:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80210f0:	4465      	add	r5, ip
 80210f2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80210f6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80210fa:	fb09 fc0c 	mul.w	ip, r9, ip
 80210fe:	fb09 f904 	mul.w	r9, r9, r4
 8021102:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8021106:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802110a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802110e:	fb08 f404 	mul.w	r4, r8, r4
 8021112:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021116:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802111a:	fb08 f802 	mul.w	r8, r8, r2
 802111e:	fb0a fa01 	mul.w	sl, sl, r1
 8021122:	0a22      	lsrs	r2, r4, #8
 8021124:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021128:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802112c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021130:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021134:	4414      	add	r4, r2
 8021136:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802113a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802113e:	0a2d      	lsrs	r5, r5, #8
 8021140:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021144:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021148:	9a03      	ldr	r2, [sp, #12]
 802114a:	8836      	ldrh	r6, [r6, #0]
 802114c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021150:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021154:	437d      	muls	r5, r7
 8021156:	4461      	add	r1, ip
 8021158:	0a24      	lsrs	r4, r4, #8
 802115a:	fb02 5503 	mla	r5, r2, r3, r5
 802115e:	0a09      	lsrs	r1, r1, #8
 8021160:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021164:	fb04 540e 	mla	r4, r4, lr, r5
 8021168:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802116c:	fb01 4100 	mla	r1, r1, r0, r4
 8021170:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021174:	0a09      	lsrs	r1, r1, #8
 8021176:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802117a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802117e:	fb07 f70a 	mul.w	r7, r7, sl
 8021182:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021186:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802118a:	fb03 7101 	mla	r1, r3, r1, r7
 802118e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021192:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8021196:	fb0e 1e08 	mla	lr, lr, r8, r1
 802119a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802119e:	fb00 e101 	mla	r1, r0, r1, lr
 80211a2:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80211a6:	9a00      	ldr	r2, [sp, #0]
 80211a8:	b287      	uxth	r7, r0
 80211aa:	437a      	muls	r2, r7
 80211ac:	0a09      	lsrs	r1, r1, #8
 80211ae:	1c53      	adds	r3, r2, #1
 80211b0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80211b4:	4321      	orrs	r1, r4
 80211b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80211ba:	1235      	asrs	r5, r6, #8
 80211bc:	0c0a      	lsrs	r2, r1, #16
 80211be:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80211c2:	b2db      	uxtb	r3, r3
 80211c4:	fb12 f207 	smulbb	r2, r2, r7
 80211c8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80211cc:	fb05 2503 	mla	r5, r5, r3, r2
 80211d0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80211d4:	10f2      	asrs	r2, r6, #3
 80211d6:	b2c8      	uxtb	r0, r1
 80211d8:	00f6      	lsls	r6, r6, #3
 80211da:	fb14 f407 	smulbb	r4, r4, r7
 80211de:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80211e2:	b2f6      	uxtb	r6, r6
 80211e4:	fb10 f007 	smulbb	r0, r0, r7
 80211e8:	fb02 4203 	mla	r2, r2, r3, r4
 80211ec:	b2ad      	uxth	r5, r5
 80211ee:	fb06 0303 	mla	r3, r6, r3, r0
 80211f2:	b299      	uxth	r1, r3
 80211f4:	b294      	uxth	r4, r2
 80211f6:	1c6b      	adds	r3, r5, #1
 80211f8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80211fc:	1c62      	adds	r2, r4, #1
 80211fe:	1c4b      	adds	r3, r1, #1
 8021200:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021204:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021208:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802120c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021210:	0952      	lsrs	r2, r2, #5
 8021212:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021216:	432b      	orrs	r3, r5
 8021218:	4313      	orrs	r3, r2
 802121a:	9a02      	ldr	r2, [sp, #8]
 802121c:	8013      	strh	r3, [r2, #0]
 802121e:	b005      	add	sp, #20
 8021220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021224:	2500      	movs	r5, #0
 8021226:	e6e9      	b.n	8020ffc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021228:	2100      	movs	r1, #0
 802122a:	460d      	mov	r5, r1
 802122c:	e6f3      	b.n	8021016 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802122e:	2100      	movs	r1, #0
 8021230:	e6f1      	b.n	8021016 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021232:	4631      	mov	r1, r6
 8021234:	e6ef      	b.n	8021016 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021236:	2400      	movs	r4, #0
 8021238:	e700      	b.n	802103c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802123a:	2200      	movs	r2, #0
 802123c:	4614      	mov	r4, r2
 802123e:	e70b      	b.n	8021058 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021240:	4602      	mov	r2, r0
 8021242:	4604      	mov	r4, r0
 8021244:	e708      	b.n	8021058 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021246:	2200      	movs	r2, #0
 8021248:	e706      	b.n	8021058 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802124a:	4632      	mov	r2, r6
 802124c:	e704      	b.n	8021058 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802124e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802124e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021252:	b09f      	sub	sp, #124	; 0x7c
 8021254:	921b      	str	r2, [sp, #108]	; 0x6c
 8021256:	9309      	str	r3, [sp, #36]	; 0x24
 8021258:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802125a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802125e:	931c      	str	r3, [sp, #112]	; 0x70
 8021260:	9119      	str	r1, [sp, #100]	; 0x64
 8021262:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8021266:	901d      	str	r0, [sp, #116]	; 0x74
 8021268:	6850      	ldr	r0, [r2, #4]
 802126a:	6812      	ldr	r2, [r2, #0]
 802126c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802126e:	fb00 1303 	mla	r3, r0, r3, r1
 8021272:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021276:	930c      	str	r3, [sp, #48]	; 0x30
 8021278:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802127a:	681b      	ldr	r3, [r3, #0]
 802127c:	9312      	str	r3, [sp, #72]	; 0x48
 802127e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021280:	685e      	ldr	r6, [r3, #4]
 8021282:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8021286:	930d      	str	r3, [sp, #52]	; 0x34
 8021288:	3604      	adds	r6, #4
 802128a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802128c:	2b00      	cmp	r3, #0
 802128e:	dc03      	bgt.n	8021298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021290:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021292:	2b00      	cmp	r3, #0
 8021294:	f340 8388 	ble.w	80219a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021298:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802129a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802129e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80212a2:	1e48      	subs	r0, r1, #1
 80212a4:	1e57      	subs	r7, r2, #1
 80212a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80212a8:	2b00      	cmp	r3, #0
 80212aa:	f340 8195 	ble.w	80215d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80212ae:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80212b0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80212b4:	ea4f 4325 	mov.w	r3, r5, asr #16
 80212b8:	d406      	bmi.n	80212c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80212ba:	4584      	cmp	ip, r0
 80212bc:	da04      	bge.n	80212c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80212be:	2b00      	cmp	r3, #0
 80212c0:	db02      	blt.n	80212c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80212c2:	42bb      	cmp	r3, r7
 80212c4:	f2c0 8189 	blt.w	80215da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80212c8:	f11c 0c01 	adds.w	ip, ip, #1
 80212cc:	f100 8177 	bmi.w	80215be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80212d0:	4561      	cmp	r1, ip
 80212d2:	f2c0 8174 	blt.w	80215be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80212d6:	3301      	adds	r3, #1
 80212d8:	f100 8171 	bmi.w	80215be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80212dc:	429a      	cmp	r2, r3
 80212de:	f2c0 816e 	blt.w	80215be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80212e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80212e4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80212e6:	931a      	str	r3, [sp, #104]	; 0x68
 80212e8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80212ea:	2b00      	cmp	r3, #0
 80212ec:	f340 8193 	ble.w	8021616 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80212f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80212f2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80212f6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80212f8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80212fc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80212fe:	141b      	asrs	r3, r3, #16
 8021300:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021304:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021308:	f100 81d6 	bmi.w	80216b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802130c:	f100 38ff 	add.w	r8, r0, #4294967295
 8021310:	4543      	cmp	r3, r8
 8021312:	f280 81d1 	bge.w	80216b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021316:	f1bc 0f00 	cmp.w	ip, #0
 802131a:	f2c0 81cd 	blt.w	80216b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802131e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021322:	45c4      	cmp	ip, r8
 8021324:	f280 81c8 	bge.w	80216b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021328:	b200      	sxth	r0, r0
 802132a:	fb0c 3300 	mla	r3, ip, r0, r3
 802132e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021330:	eb04 0803 	add.w	r8, r4, r3
 8021334:	5ce3      	ldrb	r3, [r4, r3]
 8021336:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802133a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802133e:	2a00      	cmp	r2, #0
 8021340:	f000 81af 	beq.w	80216a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021344:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021348:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802134c:	940e      	str	r4, [sp, #56]	; 0x38
 802134e:	0e24      	lsrs	r4, r4, #24
 8021350:	9415      	str	r4, [sp, #84]	; 0x54
 8021352:	b179      	cbz	r1, 8021374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021354:	eb08 0c00 	add.w	ip, r8, r0
 8021358:	f818 0000 	ldrb.w	r0, [r8, r0]
 802135c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021360:	900a      	str	r0, [sp, #40]	; 0x28
 8021362:	0e00      	lsrs	r0, r0, #24
 8021364:	9013      	str	r0, [sp, #76]	; 0x4c
 8021366:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802136a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802136e:	900f      	str	r0, [sp, #60]	; 0x3c
 8021370:	0e00      	lsrs	r0, r0, #24
 8021372:	9016      	str	r0, [sp, #88]	; 0x58
 8021374:	b292      	uxth	r2, r2
 8021376:	b289      	uxth	r1, r1
 8021378:	fb02 f901 	mul.w	r9, r2, r1
 802137c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021380:	0112      	lsls	r2, r2, #4
 8021382:	eba2 0809 	sub.w	r8, r2, r9
 8021386:	b289      	uxth	r1, r1
 8021388:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802138c:	9815      	ldr	r0, [sp, #84]	; 0x54
 802138e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021390:	fa1f f888 	uxth.w	r8, r8
 8021394:	1a52      	subs	r2, r2, r1
 8021396:	b292      	uxth	r2, r2
 8021398:	fb08 f000 	mul.w	r0, r8, r0
 802139c:	fb02 000e 	mla	r0, r2, lr, r0
 80213a0:	fb01 0004 	mla	r0, r1, r4, r0
 80213a4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80213a6:	fb09 0004 	mla	r0, r9, r4, r0
 80213aa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80213ae:	2800      	cmp	r0, #0
 80213b0:	f000 80fa 	beq.w	80215a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80213b4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80213b8:	d01b      	beq.n	80213f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80213ba:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80213be:	fb0e fa0a 	mul.w	sl, lr, sl
 80213c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80213c6:	fb0e fe03 	mul.w	lr, lr, r3
 80213ca:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80213ce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80213d2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80213d6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80213da:	4453      	add	r3, sl
 80213dc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80213e0:	0a1b      	lsrs	r3, r3, #8
 80213e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213e6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80213ea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80213ee:	ea43 030c 	orr.w	r3, r3, ip
 80213f2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80213f4:	2cff      	cmp	r4, #255	; 0xff
 80213f6:	d021      	beq.n	802143c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80213f8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80213fa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80213fe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021400:	fb04 fb0b 	mul.w	fp, r4, fp
 8021404:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021406:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802140a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802140c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021410:	fb04 fa0a 	mul.w	sl, r4, sl
 8021414:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021418:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802141c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021420:	44de      	add	lr, fp
 8021422:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021426:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802142a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802142e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021432:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021436:	ea4e 040a 	orr.w	r4, lr, sl
 802143a:	940e      	str	r4, [sp, #56]	; 0x38
 802143c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802143e:	2cff      	cmp	r4, #255	; 0xff
 8021440:	d021      	beq.n	8021486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021442:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021444:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021448:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802144a:	fb04 fb0b 	mul.w	fp, r4, fp
 802144e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021450:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021454:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021456:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802145a:	fb04 fa0a 	mul.w	sl, r4, sl
 802145e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021462:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021466:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802146a:	44de      	add	lr, fp
 802146c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021470:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021474:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021478:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802147c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021480:	ea4e 040a 	orr.w	r4, lr, sl
 8021484:	940a      	str	r4, [sp, #40]	; 0x28
 8021486:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021488:	2cff      	cmp	r4, #255	; 0xff
 802148a:	d021      	beq.n	80214d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802148c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802148e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021492:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021494:	fb04 fb0b 	mul.w	fp, r4, fp
 8021498:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802149a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802149e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80214a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80214a4:	fb04 fa0a 	mul.w	sl, r4, sl
 80214a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80214ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80214b0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80214b4:	44de      	add	lr, fp
 80214b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80214ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80214be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80214c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80214c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80214ca:	ea4e 040a 	orr.w	r4, lr, sl
 80214ce:	940f      	str	r4, [sp, #60]	; 0x3c
 80214d0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80214d2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80214d6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80214d8:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80214dc:	fb08 fc0c 	mul.w	ip, r8, ip
 80214e0:	fb02 cc0e 	mla	ip, r2, lr, ip
 80214e4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80214e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80214ea:	fb01 cc0e 	mla	ip, r1, lr, ip
 80214ee:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80214f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80214f4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80214f8:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80214fc:	fb08 f80e 	mul.w	r8, r8, lr
 8021500:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021504:	fb02 8303 	mla	r3, r2, r3, r8
 8021508:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802150a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802150c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021510:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021512:	fb01 330a 	mla	r3, r1, sl, r3
 8021516:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802151a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802151c:	fb09 3901 	mla	r9, r9, r1, r3
 8021520:	4342      	muls	r2, r0
 8021522:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021526:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802152a:	883b      	ldrh	r3, [r7, #0]
 802152c:	1c50      	adds	r0, r2, #1
 802152e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021532:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021536:	ea4c 0c09 	orr.w	ip, ip, r9
 802153a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802153e:	1219      	asrs	r1, r3, #8
 8021540:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021544:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021548:	b2c0      	uxtb	r0, r0
 802154a:	fb12 f204 	smulbb	r2, r2, r4
 802154e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021552:	fb01 2100 	mla	r1, r1, r0, r2
 8021556:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802155a:	10da      	asrs	r2, r3, #3
 802155c:	fa5f fc8c 	uxtb.w	ip, ip
 8021560:	00db      	lsls	r3, r3, #3
 8021562:	fb1c fc04 	smulbb	ip, ip, r4
 8021566:	b2db      	uxtb	r3, r3
 8021568:	b289      	uxth	r1, r1
 802156a:	fb03 c300 	mla	r3, r3, r0, ip
 802156e:	fa1f fc83 	uxth.w	ip, r3
 8021572:	1c4b      	adds	r3, r1, #1
 8021574:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021578:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802157c:	fb1e fe04 	smulbb	lr, lr, r4
 8021580:	f10c 0301 	add.w	r3, ip, #1
 8021584:	fb02 e200 	mla	r2, r2, r0, lr
 8021588:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802158c:	b292      	uxth	r2, r2
 802158e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021592:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021596:	430b      	orrs	r3, r1
 8021598:	1c51      	adds	r1, r2, #1
 802159a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802159e:	0952      	lsrs	r2, r2, #5
 80215a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80215a4:	4313      	orrs	r3, r2
 80215a6:	803b      	strh	r3, [r7, #0]
 80215a8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80215aa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80215ac:	441a      	add	r2, r3
 80215ae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80215b0:	9229      	str	r2, [sp, #164]	; 0xa4
 80215b2:	441d      	add	r5, r3
 80215b4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80215b6:	3b01      	subs	r3, #1
 80215b8:	3702      	adds	r7, #2
 80215ba:	931a      	str	r3, [sp, #104]	; 0x68
 80215bc:	e694      	b.n	80212e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80215be:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80215c0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80215c2:	441c      	add	r4, r3
 80215c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80215c6:	9429      	str	r4, [sp, #164]	; 0xa4
 80215c8:	441d      	add	r5, r3
 80215ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80215cc:	3b01      	subs	r3, #1
 80215ce:	9309      	str	r3, [sp, #36]	; 0x24
 80215d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80215d2:	3302      	adds	r3, #2
 80215d4:	930c      	str	r3, [sp, #48]	; 0x30
 80215d6:	e666      	b.n	80212a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80215d8:	d024      	beq.n	8021624 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80215da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80215dc:	982b      	ldr	r0, [sp, #172]	; 0xac
 80215de:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80215e0:	3b01      	subs	r3, #1
 80215e2:	fb00 4003 	mla	r0, r0, r3, r4
 80215e6:	1400      	asrs	r0, r0, #16
 80215e8:	f53f ae7b 	bmi.w	80212e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80215ec:	3901      	subs	r1, #1
 80215ee:	4288      	cmp	r0, r1
 80215f0:	f6bf ae77 	bge.w	80212e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80215f4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80215f6:	fb01 5303 	mla	r3, r1, r3, r5
 80215fa:	141b      	asrs	r3, r3, #16
 80215fc:	f53f ae71 	bmi.w	80212e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021600:	3a01      	subs	r2, #1
 8021602:	4293      	cmp	r3, r2
 8021604:	f6bf ae6d 	bge.w	80212e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021608:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802160c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8021610:	f1bb 0f00 	cmp.w	fp, #0
 8021614:	dc70      	bgt.n	80216f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8021616:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021618:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802161c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802161e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021622:	930c      	str	r3, [sp, #48]	; 0x30
 8021624:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021626:	2b00      	cmp	r3, #0
 8021628:	f340 81be 	ble.w	80219a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802162c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021630:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021634:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021638:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802163a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802163e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021642:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021646:	eef0 6a62 	vmov.f32	s13, s5
 802164a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802164e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021652:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021656:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802165a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802165e:	eef0 6a43 	vmov.f32	s13, s6
 8021662:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021666:	ee12 2a90 	vmov	r2, s5
 802166a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802166e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021672:	ee13 2a10 	vmov	r2, s6
 8021676:	932b      	str	r3, [sp, #172]	; 0xac
 8021678:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802167a:	fb92 f3f3 	sdiv	r3, r2, r3
 802167e:	932c      	str	r3, [sp, #176]	; 0xb0
 8021680:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021682:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8021684:	3b01      	subs	r3, #1
 8021686:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802168a:	9319      	str	r3, [sp, #100]	; 0x64
 802168c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802168e:	bf08      	it	eq
 8021690:	4613      	moveq	r3, r2
 8021692:	ee16 5a90 	vmov	r5, s13
 8021696:	9309      	str	r3, [sp, #36]	; 0x24
 8021698:	eeb0 3a67 	vmov.f32	s6, s15
 802169c:	eef0 2a47 	vmov.f32	s5, s14
 80216a0:	e5f3      	b.n	802128a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80216a2:	2900      	cmp	r1, #0
 80216a4:	f43f ae66 	beq.w	8021374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80216a8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80216ac:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80216b0:	900a      	str	r0, [sp, #40]	; 0x28
 80216b2:	0e00      	lsrs	r0, r0, #24
 80216b4:	9013      	str	r0, [sp, #76]	; 0x4c
 80216b6:	e65d      	b.n	8021374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80216b8:	f113 0801 	adds.w	r8, r3, #1
 80216bc:	f53f af74 	bmi.w	80215a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80216c0:	4540      	cmp	r0, r8
 80216c2:	f6ff af71 	blt.w	80215a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80216c6:	f11c 0801 	adds.w	r8, ip, #1
 80216ca:	f53f af6d 	bmi.w	80215a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80216ce:	45c6      	cmp	lr, r8
 80216d0:	f6ff af6a 	blt.w	80215a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80216d4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80216d6:	9302      	str	r3, [sp, #8]
 80216d8:	b200      	sxth	r0, r0
 80216da:	fa0f f38e 	sxth.w	r3, lr
 80216de:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80216e2:	e9cd c203 	strd	ip, r2, [sp, #12]
 80216e6:	9301      	str	r3, [sp, #4]
 80216e8:	9000      	str	r0, [sp, #0]
 80216ea:	4633      	mov	r3, r6
 80216ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80216ee:	981d      	ldr	r0, [sp, #116]	; 0x74
 80216f0:	4639      	mov	r1, r7
 80216f2:	f7ff fc62 	bl	8020fba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80216f6:	e757      	b.n	80215a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80216f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80216fa:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80216fc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021700:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021702:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021706:	1427      	asrs	r7, r4, #16
 8021708:	142b      	asrs	r3, r5, #16
 802170a:	fb01 7303 	mla	r3, r1, r3, r7
 802170e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021710:	18e7      	adds	r7, r4, r3
 8021712:	5ce3      	ldrb	r3, [r4, r3]
 8021714:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021718:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802171c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021720:	2a00      	cmp	r2, #0
 8021722:	f000 8137 	beq.w	8021994 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021726:	f897 e001 	ldrb.w	lr, [r7, #1]
 802172a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802172e:	9410      	str	r4, [sp, #64]	; 0x40
 8021730:	0e24      	lsrs	r4, r4, #24
 8021732:	9417      	str	r4, [sp, #92]	; 0x5c
 8021734:	b170      	cbz	r0, 8021754 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021736:	eb07 0e01 	add.w	lr, r7, r1
 802173a:	5c79      	ldrb	r1, [r7, r1]
 802173c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021740:	910b      	str	r1, [sp, #44]	; 0x2c
 8021742:	0e09      	lsrs	r1, r1, #24
 8021744:	9114      	str	r1, [sp, #80]	; 0x50
 8021746:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802174a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802174e:	9111      	str	r1, [sp, #68]	; 0x44
 8021750:	0e09      	lsrs	r1, r1, #24
 8021752:	9118      	str	r1, [sp, #96]	; 0x60
 8021754:	b292      	uxth	r2, r2
 8021756:	b280      	uxth	r0, r0
 8021758:	fb02 f800 	mul.w	r8, r2, r0
 802175c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021760:	0112      	lsls	r2, r2, #4
 8021762:	eba2 0e08 	sub.w	lr, r2, r8
 8021766:	b280      	uxth	r0, r0
 8021768:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802176c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802176e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021770:	fa1f fe8e 	uxth.w	lr, lr
 8021774:	1a12      	subs	r2, r2, r0
 8021776:	b292      	uxth	r2, r2
 8021778:	fb0e f101 	mul.w	r1, lr, r1
 802177c:	fb02 110c 	mla	r1, r2, ip, r1
 8021780:	fb00 1104 	mla	r1, r0, r4, r1
 8021784:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021786:	fb08 1104 	mla	r1, r8, r4, r1
 802178a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802178e:	2900      	cmp	r1, #0
 8021790:	f000 80f5 	beq.w	802197e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021794:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021798:	d019      	beq.n	80217ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802179a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802179e:	fb0c fa0a 	mul.w	sl, ip, sl
 80217a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80217a6:	fb0c fc03 	mul.w	ip, ip, r3
 80217aa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80217ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80217b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80217b6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80217ba:	4453      	add	r3, sl
 80217bc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80217c0:	0a1b      	lsrs	r3, r3, #8
 80217c2:	0a3f      	lsrs	r7, r7, #8
 80217c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80217c8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80217cc:	433b      	orrs	r3, r7
 80217ce:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80217d0:	2cff      	cmp	r4, #255	; 0xff
 80217d2:	d020      	beq.n	8021816 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80217d4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80217d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80217da:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80217dc:	4367      	muls	r7, r4
 80217de:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80217e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80217e4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80217e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80217ea:	fb04 fa0a 	mul.w	sl, r4, sl
 80217ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80217f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217f6:	44bc      	add	ip, r7
 80217f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80217fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021800:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021804:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021808:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802180c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021810:	ea4c 040a 	orr.w	r4, ip, sl
 8021814:	9410      	str	r4, [sp, #64]	; 0x40
 8021816:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021818:	2cff      	cmp	r4, #255	; 0xff
 802181a:	d020      	beq.n	802185e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802181c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802181e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021822:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021824:	4367      	muls	r7, r4
 8021826:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021828:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802182c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802182e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021832:	fb04 fa0a 	mul.w	sl, r4, sl
 8021836:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802183a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802183e:	44bc      	add	ip, r7
 8021840:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021844:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021848:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802184c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021850:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021854:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021858:	ea4c 040a 	orr.w	r4, ip, sl
 802185c:	940b      	str	r4, [sp, #44]	; 0x2c
 802185e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021860:	2cff      	cmp	r4, #255	; 0xff
 8021862:	d020      	beq.n	80218a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8021864:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021866:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802186a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802186c:	4367      	muls	r7, r4
 802186e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021870:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021874:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021876:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802187a:	fb04 fa0a 	mul.w	sl, r4, sl
 802187e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021882:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021886:	44bc      	add	ip, r7
 8021888:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802188c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021890:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021894:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021898:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802189c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80218a0:	ea4c 040a 	orr.w	r4, ip, sl
 80218a4:	9411      	str	r4, [sp, #68]	; 0x44
 80218a6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80218a8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80218ac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80218ae:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80218b2:	fb0e f707 	mul.w	r7, lr, r7
 80218b6:	fb02 770c 	mla	r7, r2, ip, r7
 80218ba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80218be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80218c0:	fb00 770c 	mla	r7, r0, ip, r7
 80218c4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80218c8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80218ca:	fb08 770c 	mla	r7, r8, ip, r7
 80218ce:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80218d2:	fb0e fe0c 	mul.w	lr, lr, ip
 80218d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80218da:	fb02 e303 	mla	r3, r2, r3, lr
 80218de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80218e0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80218e2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80218e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80218e8:	fb00 330a 	mla	r3, r0, sl, r3
 80218ec:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80218f0:	fb08 3c0c 	mla	ip, r8, ip, r3
 80218f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80218f6:	f8b9 0000 	ldrh.w	r0, [r9]
 80218fa:	434b      	muls	r3, r1
 80218fc:	0a3f      	lsrs	r7, r7, #8
 80218fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021902:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021906:	1c59      	adds	r1, r3, #1
 8021908:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802190c:	ea47 070c 	orr.w	r7, r7, ip
 8021910:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021914:	1202      	asrs	r2, r0, #8
 8021916:	0c3b      	lsrs	r3, r7, #16
 8021918:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802191c:	b2c9      	uxtb	r1, r1
 802191e:	fb13 f304 	smulbb	r3, r3, r4
 8021922:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021926:	fb02 3201 	mla	r2, r2, r1, r3
 802192a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802192e:	10c3      	asrs	r3, r0, #3
 8021930:	b2ff      	uxtb	r7, r7
 8021932:	00c0      	lsls	r0, r0, #3
 8021934:	b292      	uxth	r2, r2
 8021936:	fb1c fc04 	smulbb	ip, ip, r4
 802193a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802193e:	b2c0      	uxtb	r0, r0
 8021940:	fb17 f704 	smulbb	r7, r7, r4
 8021944:	fb03 c301 	mla	r3, r3, r1, ip
 8021948:	fb00 7001 	mla	r0, r0, r1, r7
 802194c:	f102 0c01 	add.w	ip, r2, #1
 8021950:	b280      	uxth	r0, r0
 8021952:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8021956:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802195a:	1c42      	adds	r2, r0, #1
 802195c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021960:	b29b      	uxth	r3, r3
 8021962:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021966:	ea42 020c 	orr.w	r2, r2, ip
 802196a:	f103 0c01 	add.w	ip, r3, #1
 802196e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021972:	095b      	lsrs	r3, r3, #5
 8021974:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021978:	431a      	orrs	r2, r3
 802197a:	f8a9 2000 	strh.w	r2, [r9]
 802197e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021980:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021982:	441a      	add	r2, r3
 8021984:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021986:	9229      	str	r2, [sp, #164]	; 0xa4
 8021988:	f109 0902 	add.w	r9, r9, #2
 802198c:	441d      	add	r5, r3
 802198e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021992:	e63d      	b.n	8021610 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021994:	2800      	cmp	r0, #0
 8021996:	f43f aedd 	beq.w	8021754 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802199a:	5c79      	ldrb	r1, [r7, r1]
 802199c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80219a0:	910b      	str	r1, [sp, #44]	; 0x2c
 80219a2:	0e09      	lsrs	r1, r1, #24
 80219a4:	9114      	str	r1, [sp, #80]	; 0x50
 80219a6:	e6d5      	b.n	8021754 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80219a8:	b01f      	add	sp, #124	; 0x7c
 80219aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080219ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80219ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80219b2:	b089      	sub	sp, #36	; 0x24
 80219b4:	9101      	str	r1, [sp, #4]
 80219b6:	9801      	ldr	r0, [sp, #4]
 80219b8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80219bc:	8800      	ldrh	r0, [r0, #0]
 80219be:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80219c2:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80219c6:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80219ca:	1206      	asrs	r6, r0, #8
 80219cc:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80219d0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80219d4:	9602      	str	r6, [sp, #8]
 80219d6:	10c6      	asrs	r6, r0, #3
 80219d8:	00c0      	lsls	r0, r0, #3
 80219da:	b2c0      	uxtb	r0, r0
 80219dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80219e0:	9004      	str	r0, [sp, #16]
 80219e2:	2f00      	cmp	r7, #0
 80219e4:	fb07 100c 	mla	r0, r7, ip, r1
 80219e8:	9603      	str	r6, [sp, #12]
 80219ea:	eb02 0e00 	add.w	lr, r2, r0
 80219ee:	f2c0 810a 	blt.w	8021c06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80219f2:	45b8      	cmp	r8, r7
 80219f4:	f340 8107 	ble.w	8021c06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80219f8:	2900      	cmp	r1, #0
 80219fa:	f2c0 8102 	blt.w	8021c02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80219fe:	458c      	cmp	ip, r1
 8021a00:	f340 80ff 	ble.w	8021c02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021a04:	5c12      	ldrb	r2, [r2, r0]
 8021a06:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8021a0a:	1c4a      	adds	r2, r1, #1
 8021a0c:	f100 80fe 	bmi.w	8021c0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021a10:	4594      	cmp	ip, r2
 8021a12:	f340 80fb 	ble.w	8021c0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021a16:	2d00      	cmp	r5, #0
 8021a18:	f000 80fa 	beq.w	8021c10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8021a1c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021a20:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8021a24:	3701      	adds	r7, #1
 8021a26:	f100 80f7 	bmi.w	8021c18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021a2a:	45b8      	cmp	r8, r7
 8021a2c:	f340 80f4 	ble.w	8021c18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021a30:	2c00      	cmp	r4, #0
 8021a32:	f000 80f4 	beq.w	8021c1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8021a36:	2900      	cmp	r1, #0
 8021a38:	eb0e 020c 	add.w	r2, lr, ip
 8021a3c:	f2c0 80ea 	blt.w	8021c14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021a40:	458c      	cmp	ip, r1
 8021a42:	f340 80e7 	ble.w	8021c14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021a46:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8021a4a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8021a4e:	3101      	adds	r1, #1
 8021a50:	f100 80e8 	bmi.w	8021c24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021a54:	458c      	cmp	ip, r1
 8021a56:	f340 80e5 	ble.w	8021c24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021a5a:	2d00      	cmp	r5, #0
 8021a5c:	f000 80e4 	beq.w	8021c28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8021a60:	7852      	ldrb	r2, [r2, #1]
 8021a62:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021a66:	0e0b      	lsrs	r3, r1, #24
 8021a68:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8021a6c:	9300      	str	r3, [sp, #0]
 8021a6e:	b2a4      	uxth	r4, r4
 8021a70:	b2ab      	uxth	r3, r5
 8021a72:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8021a76:	fb03 f904 	mul.w	r9, r3, r4
 8021a7a:	fb0a f505 	mul.w	r5, sl, r5
 8021a7e:	011b      	lsls	r3, r3, #4
 8021a80:	eba3 0e09 	sub.w	lr, r3, r9
 8021a84:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8021a88:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8021a8c:	0a28      	lsrs	r0, r5, #8
 8021a8e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021a92:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8021a96:	4405      	add	r5, r0
 8021a98:	0a2d      	lsrs	r5, r5, #8
 8021a9a:	fb0a f303 	mul.w	r3, sl, r3
 8021a9e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021aa2:	9005      	str	r0, [sp, #20]
 8021aa4:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8021aa8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021aac:	0a1b      	lsrs	r3, r3, #8
 8021aae:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021ab2:	9306      	str	r3, [sp, #24]
 8021ab4:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8021ab8:	fb0b f303 	mul.w	r3, fp, r3
 8021abc:	0a1d      	lsrs	r5, r3, #8
 8021abe:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021ac2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8021ac6:	fb0b f606 	mul.w	r6, fp, r6
 8021aca:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8021ace:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8021ad2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021ad6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021ada:	fb08 f707 	mul.w	r7, r8, r7
 8021ade:	441d      	add	r5, r3
 8021ae0:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8021ae4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021ae8:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021aec:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021af0:	fb08 fc0c 	mul.w	ip, r8, ip
 8021af4:	0a1b      	lsrs	r3, r3, #8
 8021af6:	9307      	str	r3, [sp, #28]
 8021af8:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021afc:	0e0b      	lsrs	r3, r1, #24
 8021afe:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021b02:	435f      	muls	r7, r3
 8021b04:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021b08:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021b0c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021b10:	4460      	add	r0, ip
 8021b12:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021b16:	b2a4      	uxth	r4, r4
 8021b18:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021b1c:	0a2d      	lsrs	r5, r5, #8
 8021b1e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021b22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021b26:	fa1f fe8e 	uxth.w	lr, lr
 8021b2a:	4359      	muls	r1, r3
 8021b2c:	1b12      	subs	r2, r2, r4
 8021b2e:	9b05      	ldr	r3, [sp, #20]
 8021b30:	44bc      	add	ip, r7
 8021b32:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021b36:	b292      	uxth	r2, r2
 8021b38:	fb05 f50e 	mul.w	r5, r5, lr
 8021b3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b40:	fb03 5502 	mla	r5, r3, r2, r5
 8021b44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021b48:	9b06      	ldr	r3, [sp, #24]
 8021b4a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021b4e:	0a36      	lsrs	r6, r6, #8
 8021b50:	0a00      	lsrs	r0, r0, #8
 8021b52:	fb0c 5509 	mla	r5, ip, r9, r5
 8021b56:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021b5a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021b5e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021b62:	fb00 5504 	mla	r5, r0, r4, r5
 8021b66:	fb0e f606 	mul.w	r6, lr, r6
 8021b6a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021b6e:	0a09      	lsrs	r1, r1, #8
 8021b70:	9b07      	ldr	r3, [sp, #28]
 8021b72:	fb02 6000 	mla	r0, r2, r0, r6
 8021b76:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021b7a:	fb09 0001 	mla	r0, r9, r1, r0
 8021b7e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021b82:	fb0e fe0b 	mul.w	lr, lr, fp
 8021b86:	fb04 0003 	mla	r0, r4, r3, r0
 8021b8a:	fb02 e20a 	mla	r2, r2, sl, lr
 8021b8e:	9b00      	ldr	r3, [sp, #0]
 8021b90:	fb04 2408 	mla	r4, r4, r8, r2
 8021b94:	fb09 4903 	mla	r9, r9, r3, r4
 8021b98:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021b9c:	9b02      	ldr	r3, [sp, #8]
 8021b9e:	9a04      	ldr	r2, [sp, #16]
 8021ba0:	fa5f f989 	uxtb.w	r9, r9
 8021ba4:	fb03 f109 	mul.w	r1, r3, r9
 8021ba8:	9b03      	ldr	r3, [sp, #12]
 8021baa:	0a2d      	lsrs	r5, r5, #8
 8021bac:	0a00      	lsrs	r0, r0, #8
 8021bae:	fb03 f309 	mul.w	r3, r3, r9
 8021bb2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8021bb6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021bba:	4305      	orrs	r5, r0
 8021bbc:	fb02 f909 	mul.w	r9, r2, r9
 8021bc0:	1c58      	adds	r0, r3, #1
 8021bc2:	1c4a      	adds	r2, r1, #1
 8021bc4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021bc8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021bcc:	0a2b      	lsrs	r3, r5, #8
 8021bce:	0c2a      	lsrs	r2, r5, #16
 8021bd0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021bd4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021bd8:	00db      	lsls	r3, r3, #3
 8021bda:	0212      	lsls	r2, r2, #8
 8021bdc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021be0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021be4:	4313      	orrs	r3, r2
 8021be6:	f109 0201 	add.w	r2, r9, #1
 8021bea:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021bee:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021bf2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021bf6:	431d      	orrs	r5, r3
 8021bf8:	9b01      	ldr	r3, [sp, #4]
 8021bfa:	801d      	strh	r5, [r3, #0]
 8021bfc:	b009      	add	sp, #36	; 0x24
 8021bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c02:	2000      	movs	r0, #0
 8021c04:	e701      	b.n	8021a0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8021c06:	2600      	movs	r6, #0
 8021c08:	4630      	mov	r0, r6
 8021c0a:	e70b      	b.n	8021a24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021c0c:	2600      	movs	r6, #0
 8021c0e:	e709      	b.n	8021a24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021c10:	462e      	mov	r6, r5
 8021c12:	e707      	b.n	8021a24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021c14:	2700      	movs	r7, #0
 8021c16:	e71a      	b.n	8021a4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8021c18:	2100      	movs	r1, #0
 8021c1a:	460f      	mov	r7, r1
 8021c1c:	e723      	b.n	8021a66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021c1e:	4621      	mov	r1, r4
 8021c20:	4627      	mov	r7, r4
 8021c22:	e720      	b.n	8021a66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021c24:	2100      	movs	r1, #0
 8021c26:	e71e      	b.n	8021a66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021c28:	4629      	mov	r1, r5
 8021c2a:	e71c      	b.n	8021a66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021c2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c30:	b09b      	sub	sp, #108	; 0x6c
 8021c32:	9218      	str	r2, [sp, #96]	; 0x60
 8021c34:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021c36:	9116      	str	r1, [sp, #88]	; 0x58
 8021c38:	9307      	str	r3, [sp, #28]
 8021c3a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021c3e:	9019      	str	r0, [sp, #100]	; 0x64
 8021c40:	6850      	ldr	r0, [r2, #4]
 8021c42:	6812      	ldr	r2, [r2, #0]
 8021c44:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8021c46:	fb00 1303 	mla	r3, r0, r3, r1
 8021c4a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021c4e:	930a      	str	r3, [sp, #40]	; 0x28
 8021c50:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021c52:	681b      	ldr	r3, [r3, #0]
 8021c54:	930f      	str	r3, [sp, #60]	; 0x3c
 8021c56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021c58:	685e      	ldr	r6, [r3, #4]
 8021c5a:	3604      	adds	r6, #4
 8021c5c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021c5e:	2b00      	cmp	r3, #0
 8021c60:	dc03      	bgt.n	8021c6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021c62:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021c64:	2b00      	cmp	r3, #0
 8021c66:	f340 8373 	ble.w	8022350 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021c6a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021c6c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021c70:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021c74:	1e48      	subs	r0, r1, #1
 8021c76:	1e57      	subs	r7, r2, #1
 8021c78:	9b07      	ldr	r3, [sp, #28]
 8021c7a:	2b00      	cmp	r3, #0
 8021c7c:	f340 8190 	ble.w	8021fa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021c80:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021c82:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021c86:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021c8a:	d406      	bmi.n	8021c9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021c8c:	4584      	cmp	ip, r0
 8021c8e:	da04      	bge.n	8021c9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021c90:	2b00      	cmp	r3, #0
 8021c92:	db02      	blt.n	8021c9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021c94:	42bb      	cmp	r3, r7
 8021c96:	f2c0 8184 	blt.w	8021fa2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021c9a:	f11c 0c01 	adds.w	ip, ip, #1
 8021c9e:	f100 8172 	bmi.w	8021f86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021ca2:	4561      	cmp	r1, ip
 8021ca4:	f2c0 816f 	blt.w	8021f86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021ca8:	3301      	adds	r3, #1
 8021caa:	f100 816c 	bmi.w	8021f86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021cae:	429a      	cmp	r2, r3
 8021cb0:	f2c0 8169 	blt.w	8021f86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021cb4:	9b07      	ldr	r3, [sp, #28]
 8021cb6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021cb8:	9317      	str	r3, [sp, #92]	; 0x5c
 8021cba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021cbc:	2b00      	cmp	r3, #0
 8021cbe:	f340 818e 	ble.w	8021fde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021cc2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021cc4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021cc8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021cca:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021cce:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021cd0:	141b      	asrs	r3, r3, #16
 8021cd2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021cd6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021cda:	f100 81d1 	bmi.w	8022080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021cde:	f101 38ff 	add.w	r8, r1, #4294967295
 8021ce2:	4543      	cmp	r3, r8
 8021ce4:	f280 81cc 	bge.w	8022080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021ce8:	f1bc 0f00 	cmp.w	ip, #0
 8021cec:	f2c0 81c8 	blt.w	8022080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021cf0:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021cf4:	45c4      	cmp	ip, r8
 8021cf6:	f280 81c3 	bge.w	8022080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021cfa:	b209      	sxth	r1, r1
 8021cfc:	fb0c 3301 	mla	r3, ip, r1, r3
 8021d00:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021d02:	eb04 0803 	add.w	r8, r4, r3
 8021d06:	5ce3      	ldrb	r3, [r4, r3]
 8021d08:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021d0c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021d10:	2a00      	cmp	r2, #0
 8021d12:	f000 81aa 	beq.w	802206a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021d16:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021d1a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021d1e:	940b      	str	r4, [sp, #44]	; 0x2c
 8021d20:	0e24      	lsrs	r4, r4, #24
 8021d22:	9412      	str	r4, [sp, #72]	; 0x48
 8021d24:	b178      	cbz	r0, 8021d46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021d26:	eb08 0c01 	add.w	ip, r8, r1
 8021d2a:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021d2e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021d32:	9108      	str	r1, [sp, #32]
 8021d34:	0e09      	lsrs	r1, r1, #24
 8021d36:	9110      	str	r1, [sp, #64]	; 0x40
 8021d38:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021d3c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021d40:	910c      	str	r1, [sp, #48]	; 0x30
 8021d42:	0e09      	lsrs	r1, r1, #24
 8021d44:	9113      	str	r1, [sp, #76]	; 0x4c
 8021d46:	b292      	uxth	r2, r2
 8021d48:	b280      	uxth	r0, r0
 8021d4a:	fb02 f900 	mul.w	r9, r2, r0
 8021d4e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021d52:	0112      	lsls	r2, r2, #4
 8021d54:	eba2 0809 	sub.w	r8, r2, r9
 8021d58:	b280      	uxth	r0, r0
 8021d5a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021d5e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021d60:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021d62:	fa1f f888 	uxth.w	r8, r8
 8021d66:	1a12      	subs	r2, r2, r0
 8021d68:	b292      	uxth	r2, r2
 8021d6a:	fb08 f101 	mul.w	r1, r8, r1
 8021d6e:	fb02 110e 	mla	r1, r2, lr, r1
 8021d72:	fb00 1104 	mla	r1, r0, r4, r1
 8021d76:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021d78:	fb09 1104 	mla	r1, r9, r4, r1
 8021d7c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021d80:	2900      	cmp	r1, #0
 8021d82:	f000 80f5 	beq.w	8021f70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021d86:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021d8a:	d01b      	beq.n	8021dc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021d8c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021d90:	fb0e fa0a 	mul.w	sl, lr, sl
 8021d94:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021d98:	fb0e fe03 	mul.w	lr, lr, r3
 8021d9c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021da0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021da4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021da8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021dac:	4453      	add	r3, sl
 8021dae:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021db2:	0a1b      	lsrs	r3, r3, #8
 8021db4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021db8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021dbc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021dc0:	ea43 030c 	orr.w	r3, r3, ip
 8021dc4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021dc6:	2cff      	cmp	r4, #255	; 0xff
 8021dc8:	d021      	beq.n	8021e0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021dca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021dcc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021dd0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021dd2:	fb04 fb0b 	mul.w	fp, r4, fp
 8021dd6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021dd8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021ddc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021dde:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021de2:	fb04 fa0a 	mul.w	sl, r4, sl
 8021de6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021dea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021dee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021df2:	44de      	add	lr, fp
 8021df4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021df8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021dfc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021e08:	ea4e 040a 	orr.w	r4, lr, sl
 8021e0c:	940b      	str	r4, [sp, #44]	; 0x2c
 8021e0e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021e10:	2cff      	cmp	r4, #255	; 0xff
 8021e12:	d021      	beq.n	8021e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021e14:	9c08      	ldr	r4, [sp, #32]
 8021e16:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021e1a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021e1c:	fb04 fb0b 	mul.w	fp, r4, fp
 8021e20:	9c08      	ldr	r4, [sp, #32]
 8021e22:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021e26:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021e28:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021e2c:	fb04 fa0a 	mul.w	sl, r4, sl
 8021e30:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e34:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021e38:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021e3c:	44de      	add	lr, fp
 8021e3e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021e42:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021e46:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e4e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021e52:	ea4e 040a 	orr.w	r4, lr, sl
 8021e56:	9408      	str	r4, [sp, #32]
 8021e58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e5a:	2cff      	cmp	r4, #255	; 0xff
 8021e5c:	d021      	beq.n	8021ea2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021e5e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021e60:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021e64:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e66:	fb04 fb0b 	mul.w	fp, r4, fp
 8021e6a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021e6c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021e70:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e72:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021e76:	fb04 fa0a 	mul.w	sl, r4, sl
 8021e7a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e7e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021e82:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021e86:	44de      	add	lr, fp
 8021e88:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021e8c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021e90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e98:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021e9c:	ea4e 040a 	orr.w	r4, lr, sl
 8021ea0:	940c      	str	r4, [sp, #48]	; 0x30
 8021ea2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021ea4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021ea8:	9c08      	ldr	r4, [sp, #32]
 8021eaa:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021eae:	fb08 fc0c 	mul.w	ip, r8, ip
 8021eb2:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021eb6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021eba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021ebc:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021ec0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021ec4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021ec6:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021eca:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021ece:	fb08 f80e 	mul.w	r8, r8, lr
 8021ed2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021ed6:	fb02 8303 	mla	r3, r2, r3, r8
 8021eda:	9a08      	ldr	r2, [sp, #32]
 8021edc:	f8b7 8000 	ldrh.w	r8, [r7]
 8021ee0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021ee4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021ee6:	fb00 330a 	mla	r3, r0, sl, r3
 8021eea:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021eee:	fb09 3900 	mla	r9, r9, r0, r3
 8021ef2:	43c9      	mvns	r1, r1
 8021ef4:	ea4f 2228 	mov.w	r2, r8, asr #8
 8021ef8:	fa5f fe81 	uxtb.w	lr, r1
 8021efc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f00:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021f04:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021f08:	fb02 f20e 	mul.w	r2, r2, lr
 8021f0c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f10:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021f14:	ea4c 0c09 	orr.w	ip, ip, r9
 8021f18:	1c53      	adds	r3, r2, #1
 8021f1a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8021f1e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8021f22:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021f26:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021f2a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021f2e:	4a63      	ldr	r2, [pc, #396]	; (80220bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8021f30:	fb00 f00e 	mul.w	r0, r0, lr
 8021f34:	b2db      	uxtb	r3, r3
 8021f36:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021f3a:	1c43      	adds	r3, r0, #1
 8021f3c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021f40:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021f44:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021f48:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021f4c:	b2c9      	uxtb	r1, r1
 8021f4e:	00db      	lsls	r3, r3, #3
 8021f50:	fb01 f10e 	mul.w	r1, r1, lr
 8021f54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021f58:	4313      	orrs	r3, r2
 8021f5a:	1c4a      	adds	r2, r1, #1
 8021f5c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021f60:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021f64:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021f68:	ea4c 0c03 	orr.w	ip, ip, r3
 8021f6c:	f8a7 c000 	strh.w	ip, [r7]
 8021f70:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021f72:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021f74:	441a      	add	r2, r3
 8021f76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021f78:	9225      	str	r2, [sp, #148]	; 0x94
 8021f7a:	441d      	add	r5, r3
 8021f7c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021f7e:	3b01      	subs	r3, #1
 8021f80:	3702      	adds	r7, #2
 8021f82:	9317      	str	r3, [sp, #92]	; 0x5c
 8021f84:	e699      	b.n	8021cba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021f86:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021f88:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021f8a:	441c      	add	r4, r3
 8021f8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021f8e:	9425      	str	r4, [sp, #148]	; 0x94
 8021f90:	441d      	add	r5, r3
 8021f92:	9b07      	ldr	r3, [sp, #28]
 8021f94:	3b01      	subs	r3, #1
 8021f96:	9307      	str	r3, [sp, #28]
 8021f98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021f9a:	3302      	adds	r3, #2
 8021f9c:	930a      	str	r3, [sp, #40]	; 0x28
 8021f9e:	e66b      	b.n	8021c78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021fa0:	d024      	beq.n	8021fec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021fa2:	9b07      	ldr	r3, [sp, #28]
 8021fa4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021fa6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021fa8:	3b01      	subs	r3, #1
 8021faa:	fb00 4003 	mla	r0, r0, r3, r4
 8021fae:	1400      	asrs	r0, r0, #16
 8021fb0:	f53f ae80 	bmi.w	8021cb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fb4:	3901      	subs	r1, #1
 8021fb6:	4288      	cmp	r0, r1
 8021fb8:	f6bf ae7c 	bge.w	8021cb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fbc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021fbe:	fb01 5303 	mla	r3, r1, r3, r5
 8021fc2:	141b      	asrs	r3, r3, #16
 8021fc4:	f53f ae76 	bmi.w	8021cb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fc8:	3a01      	subs	r2, #1
 8021fca:	4293      	cmp	r3, r2
 8021fcc:	f6bf ae72 	bge.w	8021cb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fd0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021fd4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8021fd8:	f1bb 0f00 	cmp.w	fp, #0
 8021fdc:	dc70      	bgt.n	80220c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021fde:	9b07      	ldr	r3, [sp, #28]
 8021fe0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021fe4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021fe6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021fea:	930a      	str	r3, [sp, #40]	; 0x28
 8021fec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021fee:	2b00      	cmp	r3, #0
 8021ff0:	f340 81ae 	ble.w	8022350 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021ff4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021ff8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021ffc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022000:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022002:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022006:	ee31 1a05 	vadd.f32	s2, s2, s10
 802200a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802200e:	eef0 6a62 	vmov.f32	s13, s5
 8022012:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022016:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802201a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802201e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8022022:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022026:	eef0 6a43 	vmov.f32	s13, s6
 802202a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802202e:	ee12 2a90 	vmov	r2, s5
 8022032:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022036:	fb92 f3f3 	sdiv	r3, r2, r3
 802203a:	ee13 2a10 	vmov	r2, s6
 802203e:	9327      	str	r3, [sp, #156]	; 0x9c
 8022040:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022042:	fb92 f3f3 	sdiv	r3, r2, r3
 8022046:	9328      	str	r3, [sp, #160]	; 0xa0
 8022048:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802204a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802204c:	3b01      	subs	r3, #1
 802204e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022052:	9316      	str	r3, [sp, #88]	; 0x58
 8022054:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022056:	bf08      	it	eq
 8022058:	4613      	moveq	r3, r2
 802205a:	ee16 5a90 	vmov	r5, s13
 802205e:	9307      	str	r3, [sp, #28]
 8022060:	eeb0 3a67 	vmov.f32	s6, s15
 8022064:	eef0 2a47 	vmov.f32	s5, s14
 8022068:	e5f8      	b.n	8021c5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802206a:	2800      	cmp	r0, #0
 802206c:	f43f ae6b 	beq.w	8021d46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022070:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022074:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022078:	9108      	str	r1, [sp, #32]
 802207a:	0e09      	lsrs	r1, r1, #24
 802207c:	9110      	str	r1, [sp, #64]	; 0x40
 802207e:	e662      	b.n	8021d46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022080:	f113 0801 	adds.w	r8, r3, #1
 8022084:	f53f af74 	bmi.w	8021f70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022088:	4541      	cmp	r1, r8
 802208a:	f6ff af71 	blt.w	8021f70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802208e:	f11c 0801 	adds.w	r8, ip, #1
 8022092:	f53f af6d 	bmi.w	8021f70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022096:	45c6      	cmp	lr, r8
 8022098:	f6ff af6a 	blt.w	8021f70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802209c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80220a0:	b209      	sxth	r1, r1
 80220a2:	fa0f f38e 	sxth.w	r3, lr
 80220a6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80220aa:	9301      	str	r3, [sp, #4]
 80220ac:	9100      	str	r1, [sp, #0]
 80220ae:	4633      	mov	r3, r6
 80220b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80220b2:	9819      	ldr	r0, [sp, #100]	; 0x64
 80220b4:	4639      	mov	r1, r7
 80220b6:	f7ff fc7a 	bl	80219ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80220ba:	e759      	b.n	8021f70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80220bc:	fffff800 	.word	0xfffff800
 80220c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80220c2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80220c4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80220c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80220ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80220ce:	1427      	asrs	r7, r4, #16
 80220d0:	142b      	asrs	r3, r5, #16
 80220d2:	fb01 7303 	mla	r3, r1, r3, r7
 80220d6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80220d8:	18e7      	adds	r7, r4, r3
 80220da:	5ce3      	ldrb	r3, [r4, r3]
 80220dc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80220e0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80220e4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80220e8:	2a00      	cmp	r2, #0
 80220ea:	f000 8127 	beq.w	802233c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80220ee:	f897 e001 	ldrb.w	lr, [r7, #1]
 80220f2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80220f6:	940d      	str	r4, [sp, #52]	; 0x34
 80220f8:	0e24      	lsrs	r4, r4, #24
 80220fa:	9414      	str	r4, [sp, #80]	; 0x50
 80220fc:	b170      	cbz	r0, 802211c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80220fe:	eb07 0e01 	add.w	lr, r7, r1
 8022102:	5c79      	ldrb	r1, [r7, r1]
 8022104:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022108:	9109      	str	r1, [sp, #36]	; 0x24
 802210a:	0e09      	lsrs	r1, r1, #24
 802210c:	9111      	str	r1, [sp, #68]	; 0x44
 802210e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022112:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022116:	910e      	str	r1, [sp, #56]	; 0x38
 8022118:	0e09      	lsrs	r1, r1, #24
 802211a:	9115      	str	r1, [sp, #84]	; 0x54
 802211c:	b292      	uxth	r2, r2
 802211e:	b280      	uxth	r0, r0
 8022120:	fb02 f800 	mul.w	r8, r2, r0
 8022124:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022128:	0112      	lsls	r2, r2, #4
 802212a:	eba2 0e08 	sub.w	lr, r2, r8
 802212e:	b280      	uxth	r0, r0
 8022130:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022134:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022136:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022138:	fa1f fe8e 	uxth.w	lr, lr
 802213c:	1a09      	subs	r1, r1, r0
 802213e:	b289      	uxth	r1, r1
 8022140:	fb0e f202 	mul.w	r2, lr, r2
 8022144:	fb01 220c 	mla	r2, r1, ip, r2
 8022148:	fb00 2204 	mla	r2, r0, r4, r2
 802214c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802214e:	fb08 2204 	mla	r2, r8, r4, r2
 8022152:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022156:	2a00      	cmp	r2, #0
 8022158:	f000 80e5 	beq.w	8022326 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802215c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022160:	d019      	beq.n	8022196 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8022162:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022166:	fb0c fa0a 	mul.w	sl, ip, sl
 802216a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802216e:	fb0c fc03 	mul.w	ip, ip, r3
 8022172:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022176:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802217a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802217e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022182:	4453      	add	r3, sl
 8022184:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022188:	0a1b      	lsrs	r3, r3, #8
 802218a:	0a3f      	lsrs	r7, r7, #8
 802218c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022190:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022194:	433b      	orrs	r3, r7
 8022196:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022198:	2cff      	cmp	r4, #255	; 0xff
 802219a:	d020      	beq.n	80221de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 802219c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802219e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80221a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80221a4:	4367      	muls	r7, r4
 80221a6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80221a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80221ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80221ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80221b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80221b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80221ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221be:	44bc      	add	ip, r7
 80221c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80221c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80221c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80221d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80221d8:	ea4c 040a 	orr.w	r4, ip, sl
 80221dc:	940d      	str	r4, [sp, #52]	; 0x34
 80221de:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80221e0:	2cff      	cmp	r4, #255	; 0xff
 80221e2:	d020      	beq.n	8022226 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80221e4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80221e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80221ea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80221ec:	4367      	muls	r7, r4
 80221ee:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80221f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80221f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80221f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80221fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80221fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022202:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022206:	44bc      	add	ip, r7
 8022208:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802220c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022210:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022214:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022218:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802221c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022220:	ea4c 040a 	orr.w	r4, ip, sl
 8022224:	9409      	str	r4, [sp, #36]	; 0x24
 8022226:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022228:	2cff      	cmp	r4, #255	; 0xff
 802222a:	d020      	beq.n	802226e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 802222c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802222e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022232:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022234:	4367      	muls	r7, r4
 8022236:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022238:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802223c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802223e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022242:	fb04 fa0a 	mul.w	sl, r4, sl
 8022246:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802224a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802224e:	44bc      	add	ip, r7
 8022250:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022254:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022258:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802225c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022260:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022264:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022268:	ea4c 040a 	orr.w	r4, ip, sl
 802226c:	940e      	str	r4, [sp, #56]	; 0x38
 802226e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022270:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022274:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022276:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802227a:	fb0e f707 	mul.w	r7, lr, r7
 802227e:	fb01 770c 	mla	r7, r1, ip, r7
 8022282:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022286:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022288:	fb00 770c 	mla	r7, r0, ip, r7
 802228c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022290:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022292:	fb08 770c 	mla	r7, r8, ip, r7
 8022296:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802229a:	fb0e fe0c 	mul.w	lr, lr, ip
 802229e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80222a2:	fb01 e303 	mla	r3, r1, r3, lr
 80222a6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80222a8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80222ac:	990e      	ldr	r1, [sp, #56]	; 0x38
 80222ae:	fb00 330a 	mla	r3, r0, sl, r3
 80222b2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80222b6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80222ba:	f8b9 3000 	ldrh.w	r3, [r9]
 80222be:	43d2      	mvns	r2, r2
 80222c0:	1218      	asrs	r0, r3, #8
 80222c2:	b2d2      	uxtb	r2, r2
 80222c4:	10d9      	asrs	r1, r3, #3
 80222c6:	0a3f      	lsrs	r7, r7, #8
 80222c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80222cc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80222d0:	00db      	lsls	r3, r3, #3
 80222d2:	4350      	muls	r0, r2
 80222d4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80222d8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80222dc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80222e0:	b2db      	uxtb	r3, r3
 80222e2:	ea47 070c 	orr.w	r7, r7, ip
 80222e6:	4351      	muls	r1, r2
 80222e8:	4353      	muls	r3, r2
 80222ea:	1c42      	adds	r2, r0, #1
 80222ec:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80222f0:	0c3a      	lsrs	r2, r7, #16
 80222f2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80222f6:	4a18      	ldr	r2, [pc, #96]	; (8022358 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80222f8:	b2c0      	uxtb	r0, r0
 80222fa:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80222fe:	1c4a      	adds	r2, r1, #1
 8022300:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022304:	0a3a      	lsrs	r2, r7, #8
 8022306:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802230a:	00c9      	lsls	r1, r1, #3
 802230c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022310:	4301      	orrs	r1, r0
 8022312:	1c58      	adds	r0, r3, #1
 8022314:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022318:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802231c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022320:	4308      	orrs	r0, r1
 8022322:	f8a9 0000 	strh.w	r0, [r9]
 8022326:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022328:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802232a:	441a      	add	r2, r3
 802232c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802232e:	9225      	str	r2, [sp, #148]	; 0x94
 8022330:	f109 0902 	add.w	r9, r9, #2
 8022334:	441d      	add	r5, r3
 8022336:	f10b 3bff 	add.w	fp, fp, #4294967295
 802233a:	e64d      	b.n	8021fd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 802233c:	2800      	cmp	r0, #0
 802233e:	f43f aeed 	beq.w	802211c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022342:	5c79      	ldrb	r1, [r7, r1]
 8022344:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022348:	9109      	str	r1, [sp, #36]	; 0x24
 802234a:	0e09      	lsrs	r1, r1, #24
 802234c:	9111      	str	r1, [sp, #68]	; 0x44
 802234e:	e6e5      	b.n	802211c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022350:	b01b      	add	sp, #108	; 0x6c
 8022352:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022356:	bf00      	nop
 8022358:	fffff800 	.word	0xfffff800

0802235c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 802235c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022360:	b085      	sub	sp, #20
 8022362:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022366:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802236a:	9103      	str	r1, [sp, #12]
 802236c:	fb00 7406 	mla	r4, r0, r6, r7
 8022370:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022374:	2800      	cmp	r0, #0
 8022376:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802237a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802237e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022382:	9501      	str	r5, [sp, #4]
 8022384:	eb03 0904 	add.w	r9, r3, r4
 8022388:	f2c0 8150 	blt.w	802262c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802238c:	4583      	cmp	fp, r0
 802238e:	f340 814d 	ble.w	802262c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022392:	2f00      	cmp	r7, #0
 8022394:	f2c0 8146 	blt.w	8022624 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022398:	42be      	cmp	r6, r7
 802239a:	f340 8143 	ble.w	8022624 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802239e:	f813 c004 	ldrb.w	ip, [r3, r4]
 80223a2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80223a6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80223aa:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80223ae:	4355      	muls	r5, r2
 80223b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80223b4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80223b8:	fb0c f203 	mul.w	r2, ip, r3
 80223bc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80223c0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80223c4:	441d      	add	r5, r3
 80223c6:	f102 0320 	add.w	r3, r2, #32
 80223ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80223ce:	0a1b      	lsrs	r3, r3, #8
 80223d0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80223d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80223d8:	431c      	orrs	r4, r3
 80223da:	1c7b      	adds	r3, r7, #1
 80223dc:	f100 812b 	bmi.w	8022636 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80223e0:	429e      	cmp	r6, r3
 80223e2:	f340 8128 	ble.w	8022636 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80223e6:	2900      	cmp	r1, #0
 80223e8:	f000 8128 	beq.w	802263c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80223ec:	9a01      	ldr	r2, [sp, #4]
 80223ee:	f899 3001 	ldrb.w	r3, [r9, #1]
 80223f2:	8855      	ldrh	r5, [r2, #2]
 80223f4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80223f8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80223fc:	fb08 f802 	mul.w	r8, r8, r2
 8022400:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022404:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022408:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802240c:	435d      	muls	r5, r3
 802240e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022412:	44d0      	add	r8, sl
 8022414:	f105 0a20 	add.w	sl, r5, #32
 8022418:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802241c:	0a2d      	lsrs	r5, r5, #8
 802241e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022422:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022426:	432a      	orrs	r2, r5
 8022428:	3001      	adds	r0, #1
 802242a:	f100 810d 	bmi.w	8022648 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802242e:	4583      	cmp	fp, r0
 8022430:	f340 810a 	ble.w	8022648 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022434:	f1be 0f00 	cmp.w	lr, #0
 8022438:	f000 810b 	beq.w	8022652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802243c:	2f00      	cmp	r7, #0
 802243e:	f2c0 8100 	blt.w	8022642 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022442:	42be      	cmp	r6, r7
 8022444:	f340 80fd 	ble.w	8022642 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022448:	9801      	ldr	r0, [sp, #4]
 802244a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802244e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022452:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022456:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802245a:	fb0a fa00 	mul.w	sl, sl, r0
 802245e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022462:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022466:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802246a:	fb05 f808 	mul.w	r8, r5, r8
 802246e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022472:	4482      	add	sl, r0
 8022474:	f108 0020 	add.w	r0, r8, #32
 8022478:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802247c:	0a00      	lsrs	r0, r0, #8
 802247e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022482:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022486:	ea4b 0b00 	orr.w	fp, fp, r0
 802248a:	3701      	adds	r7, #1
 802248c:	f100 80e6 	bmi.w	802265c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022490:	42be      	cmp	r6, r7
 8022492:	f340 80e3 	ble.w	802265c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022496:	2900      	cmp	r1, #0
 8022498:	f000 80e3 	beq.w	8022662 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802249c:	3601      	adds	r6, #1
 802249e:	9801      	ldr	r0, [sp, #4]
 80224a0:	f819 7006 	ldrb.w	r7, [r9, r6]
 80224a4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80224a8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80224ac:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80224b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80224b4:	fb09 f906 	mul.w	r9, r9, r6
 80224b8:	fb07 f800 	mul.w	r8, r7, r0
 80224bc:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80224c0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80224c4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80224c8:	44d1      	add	r9, sl
 80224ca:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80224ce:	f108 0020 	add.w	r0, r8, #32
 80224d2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80224d6:	0a00      	lsrs	r0, r0, #8
 80224d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80224dc:	4330      	orrs	r0, r6
 80224de:	b28e      	uxth	r6, r1
 80224e0:	fa1f f98e 	uxth.w	r9, lr
 80224e4:	fb06 f809 	mul.w	r8, r6, r9
 80224e8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80224ec:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80224f0:	0136      	lsls	r6, r6, #4
 80224f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80224f6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80224fa:	9601      	str	r6, [sp, #4]
 80224fc:	ea4a 0404 	orr.w	r4, sl, r4
 8022500:	fa1f f689 	uxth.w	r6, r9
 8022504:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022508:	fb11 f90e 	smulbb	r9, r1, lr
 802250c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022510:	9602      	str	r6, [sp, #8]
 8022512:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022516:	4626      	mov	r6, r4
 8022518:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802251c:	f1ce 0410 	rsb	r4, lr, #16
 8022520:	1a64      	subs	r4, r4, r1
 8022522:	ea4a 0202 	orr.w	r2, sl, r2
 8022526:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802252a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802252e:	434a      	muls	r2, r1
 8022530:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022534:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022538:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802253c:	fb04 2406 	mla	r4, r4, r6, r2
 8022540:	ea4a 0000 	orr.w	r0, sl, r0
 8022544:	fb09 4200 	mla	r2, r9, r0, r4
 8022548:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802254c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022550:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022554:	ea44 0b0b 	orr.w	fp, r4, fp
 8022558:	9c01      	ldr	r4, [sp, #4]
 802255a:	9e02      	ldr	r6, [sp, #8]
 802255c:	9903      	ldr	r1, [sp, #12]
 802255e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8022562:	1ba4      	subs	r4, r4, r6
 8022564:	9e01      	ldr	r6, [sp, #4]
 8022566:	8808      	ldrh	r0, [r1, #0]
 8022568:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 802256c:	eba6 0608 	sub.w	r6, r6, r8
 8022570:	b2b6      	uxth	r6, r6
 8022572:	b2a4      	uxth	r4, r4
 8022574:	4373      	muls	r3, r6
 8022576:	fb0c 3304 	mla	r3, ip, r4, r3
 802257a:	9c02      	ldr	r4, [sp, #8]
 802257c:	fb04 3505 	mla	r5, r4, r5, r3
 8022580:	fb08 5707 	mla	r7, r8, r7, r5
 8022584:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022588:	b289      	uxth	r1, r1
 802258a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802258e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022592:	434f      	muls	r7, r1
 8022594:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022598:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802259c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80225a0:	1c7b      	adds	r3, r7, #1
 80225a2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80225a6:	ea42 0e0e 	orr.w	lr, r2, lr
 80225aa:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80225ae:	fa1f f28e 	uxth.w	r2, lr
 80225b2:	1203      	asrs	r3, r0, #8
 80225b4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80225b8:	b2ff      	uxtb	r7, r7
 80225ba:	1215      	asrs	r5, r2, #8
 80225bc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80225c0:	fb13 f307 	smulbb	r3, r3, r7
 80225c4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80225c8:	fb05 3501 	mla	r5, r5, r1, r3
 80225cc:	10c3      	asrs	r3, r0, #3
 80225ce:	10d4      	asrs	r4, r2, #3
 80225d0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80225d4:	fb13 f307 	smulbb	r3, r3, r7
 80225d8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80225dc:	fb04 3401 	mla	r4, r4, r1, r3
 80225e0:	00c3      	lsls	r3, r0, #3
 80225e2:	00d2      	lsls	r2, r2, #3
 80225e4:	b2db      	uxtb	r3, r3
 80225e6:	fb13 f307 	smulbb	r3, r3, r7
 80225ea:	b2d2      	uxtb	r2, r2
 80225ec:	fb02 3101 	mla	r1, r2, r1, r3
 80225f0:	b2ad      	uxth	r5, r5
 80225f2:	b289      	uxth	r1, r1
 80225f4:	b2a4      	uxth	r4, r4
 80225f6:	1c6b      	adds	r3, r5, #1
 80225f8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80225fc:	1c62      	adds	r2, r4, #1
 80225fe:	1c4b      	adds	r3, r1, #1
 8022600:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022604:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022608:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802260c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022610:	0964      	lsrs	r4, r4, #5
 8022612:	432b      	orrs	r3, r5
 8022614:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022618:	9a03      	ldr	r2, [sp, #12]
 802261a:	4323      	orrs	r3, r4
 802261c:	8013      	strh	r3, [r2, #0]
 802261e:	b005      	add	sp, #20
 8022620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022624:	f04f 0c00 	mov.w	ip, #0
 8022628:	4664      	mov	r4, ip
 802262a:	e6d6      	b.n	80223da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802262c:	2300      	movs	r3, #0
 802262e:	469c      	mov	ip, r3
 8022630:	461a      	mov	r2, r3
 8022632:	461c      	mov	r4, r3
 8022634:	e6f8      	b.n	8022428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022636:	2300      	movs	r3, #0
 8022638:	461a      	mov	r2, r3
 802263a:	e6f5      	b.n	8022428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802263c:	460b      	mov	r3, r1
 802263e:	460a      	mov	r2, r1
 8022640:	e6f2      	b.n	8022428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022642:	2500      	movs	r5, #0
 8022644:	46ab      	mov	fp, r5
 8022646:	e720      	b.n	802248a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8022648:	2700      	movs	r7, #0
 802264a:	463d      	mov	r5, r7
 802264c:	4638      	mov	r0, r7
 802264e:	46bb      	mov	fp, r7
 8022650:	e745      	b.n	80224de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022652:	4677      	mov	r7, lr
 8022654:	4675      	mov	r5, lr
 8022656:	4670      	mov	r0, lr
 8022658:	46f3      	mov	fp, lr
 802265a:	e740      	b.n	80224de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802265c:	2700      	movs	r7, #0
 802265e:	4638      	mov	r0, r7
 8022660:	e73d      	b.n	80224de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022662:	460f      	mov	r7, r1
 8022664:	4608      	mov	r0, r1
 8022666:	e73a      	b.n	80224de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08022668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802266c:	b097      	sub	sp, #92	; 0x5c
 802266e:	9214      	str	r2, [sp, #80]	; 0x50
 8022670:	9308      	str	r3, [sp, #32]
 8022672:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022674:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8022678:	9312      	str	r3, [sp, #72]	; 0x48
 802267a:	9111      	str	r1, [sp, #68]	; 0x44
 802267c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8022680:	9015      	str	r0, [sp, #84]	; 0x54
 8022682:	6850      	ldr	r0, [r2, #4]
 8022684:	6812      	ldr	r2, [r2, #0]
 8022686:	fb00 1303 	mla	r3, r0, r3, r1
 802268a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802268e:	9309      	str	r3, [sp, #36]	; 0x24
 8022690:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022692:	681b      	ldr	r3, [r3, #0]
 8022694:	930b      	str	r3, [sp, #44]	; 0x2c
 8022696:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022698:	685b      	ldr	r3, [r3, #4]
 802269a:	930c      	str	r3, [sp, #48]	; 0x30
 802269c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80226a0:	930a      	str	r3, [sp, #40]	; 0x28
 80226a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80226a4:	2b00      	cmp	r3, #0
 80226a6:	dc03      	bgt.n	80226b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80226a8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80226aa:	2b00      	cmp	r3, #0
 80226ac:	f340 83cb 	ble.w	8022e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80226b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80226b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80226b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80226ba:	1e48      	subs	r0, r1, #1
 80226bc:	1e55      	subs	r5, r2, #1
 80226be:	9b08      	ldr	r3, [sp, #32]
 80226c0:	2b00      	cmp	r3, #0
 80226c2:	f340 81a3 	ble.w	8022a0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80226c6:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80226c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80226ca:	1436      	asrs	r6, r6, #16
 80226cc:	ea4f 4323 	mov.w	r3, r3, asr #16
 80226d0:	d406      	bmi.n	80226e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80226d2:	4286      	cmp	r6, r0
 80226d4:	da04      	bge.n	80226e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80226d6:	2b00      	cmp	r3, #0
 80226d8:	db02      	blt.n	80226e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80226da:	42ab      	cmp	r3, r5
 80226dc:	f2c0 8197 	blt.w	8022a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80226e0:	3601      	adds	r6, #1
 80226e2:	f100 8184 	bmi.w	80229ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80226e6:	42b1      	cmp	r1, r6
 80226e8:	f2c0 8181 	blt.w	80229ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80226ec:	3301      	adds	r3, #1
 80226ee:	f100 817e 	bmi.w	80229ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80226f2:	429a      	cmp	r2, r3
 80226f4:	f2c0 817b 	blt.w	80229ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80226f8:	9b08      	ldr	r3, [sp, #32]
 80226fa:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80226fc:	9313      	str	r3, [sp, #76]	; 0x4c
 80226fe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022702:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022704:	2b00      	cmp	r3, #0
 8022706:	f340 81a4 	ble.w	8022a52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802270a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802270c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802270e:	1418      	asrs	r0, r3, #16
 8022710:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022712:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022716:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022718:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802271c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802271e:	142d      	asrs	r5, r5, #16
 8022720:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022724:	f100 81f8 	bmi.w	8022b18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022728:	f102 3eff 	add.w	lr, r2, #4294967295
 802272c:	4575      	cmp	r5, lr
 802272e:	f280 81f3 	bge.w	8022b18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022732:	2800      	cmp	r0, #0
 8022734:	f2c0 81f0 	blt.w	8022b18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022738:	f103 3eff 	add.w	lr, r3, #4294967295
 802273c:	4570      	cmp	r0, lr
 802273e:	f280 81eb 	bge.w	8022b18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022742:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022744:	b212      	sxth	r2, r2
 8022746:	fb00 5002 	mla	r0, r0, r2, r5
 802274a:	fa1f fe81 	uxth.w	lr, r1
 802274e:	eb03 0a00 	add.w	sl, r3, r0
 8022752:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8022756:	f813 9000 	ldrb.w	r9, [r3, r0]
 802275a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802275e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022762:	b29b      	uxth	r3, r3
 8022764:	f1bc 0f00 	cmp.w	ip, #0
 8022768:	f000 81b9 	beq.w	8022ade <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802276c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022770:	940d      	str	r4, [sp, #52]	; 0x34
 8022772:	eb0a 0b02 	add.w	fp, sl, r2
 8022776:	fa1f fa8c 	uxth.w	sl, ip
 802277a:	fb0a fe0e 	mul.w	lr, sl, lr
 802277e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022782:	fa1f fa8a 	uxth.w	sl, sl
 8022786:	eba5 050e 	sub.w	r5, r5, lr
 802278a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802278e:	940e      	str	r4, [sp, #56]	; 0x38
 8022790:	eba3 030a 	sub.w	r3, r3, sl
 8022794:	b2ad      	uxth	r5, r5
 8022796:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022798:	b29b      	uxth	r3, r3
 802279a:	fb08 f505 	mul.w	r5, r8, r5
 802279e:	fb09 5303 	mla	r3, r9, r3, r5
 80227a2:	fb0a 3304 	mla	r3, sl, r4, r3
 80227a6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80227a8:	fb0e 3304 	mla	r3, lr, r4, r3
 80227ac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80227b0:	2b00      	cmp	r3, #0
 80227b2:	f000 810f 	beq.w	80229d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80227b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227b8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80227bc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80227c0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80227c4:	f000 8190 	beq.w	8022ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80227c8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80227cc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80227d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80227d4:	fb09 f000 	mul.w	r0, r9, r0
 80227d8:	fb0a fe0e 	mul.w	lr, sl, lr
 80227dc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80227e0:	f100 0b20 	add.w	fp, r0, #32
 80227e4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80227e8:	44ce      	add	lr, r9
 80227ea:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80227ee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80227f2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80227f6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80227fa:	ea4e 0909 	orr.w	r9, lr, r9
 80227fe:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022802:	8868      	ldrh	r0, [r5, #2]
 8022804:	d019      	beq.n	802283a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022806:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802280a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802280e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022812:	fb08 f800 	mul.w	r8, r8, r0
 8022816:	fb0a fe0e 	mul.w	lr, sl, lr
 802281a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802281e:	f108 0b20 	add.w	fp, r8, #32
 8022822:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022826:	4486      	add	lr, r0
 8022828:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802282c:	0a00      	lsrs	r0, r0, #8
 802282e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022832:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022836:	ea4e 0000 	orr.w	r0, lr, r0
 802283a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802283e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022842:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022846:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802284a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802284e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022852:	ea4e 0909 	orr.w	r9, lr, r9
 8022856:	ea4a 0000 	orr.w	r0, sl, r0
 802285a:	f1bc 0f00 	cmp.w	ip, #0
 802285e:	f000 8145 	beq.w	8022aec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8022862:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8022866:	3a01      	subs	r2, #1
 8022868:	0052      	lsls	r2, r2, #1
 802286a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802286c:	3202      	adds	r2, #2
 802286e:	2cff      	cmp	r4, #255	; 0xff
 8022870:	eb05 0e02 	add.w	lr, r5, r2
 8022874:	5aaa      	ldrh	r2, [r5, r2]
 8022876:	d018      	beq.n	80228aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8022878:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802287c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022880:	fb04 fa02 	mul.w	sl, r4, r2
 8022884:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022888:	fb08 f805 	mul.w	r8, r8, r5
 802288c:	f10a 0520 	add.w	r5, sl, #32
 8022890:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022894:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022898:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802289c:	4442      	add	r2, r8
 802289e:	0a2d      	lsrs	r5, r5, #8
 80228a0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80228a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80228a8:	432a      	orrs	r2, r5
 80228aa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80228ac:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80228b0:	2cff      	cmp	r4, #255	; 0xff
 80228b2:	d01a      	beq.n	80228ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80228b4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80228b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80228bc:	fb04 fa05 	mul.w	sl, r4, r5
 80228c0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80228c4:	fb08 f80e 	mul.w	r8, r8, lr
 80228c8:	f10a 0e20 	add.w	lr, sl, #32
 80228cc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80228d0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80228d4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80228d8:	4445      	add	r5, r8
 80228da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80228de:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80228e2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80228e6:	ea45 050e 	orr.w	r5, r5, lr
 80228ea:	fb1c fe01 	smulbb	lr, ip, r1
 80228ee:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80228f2:	f1cc 0810 	rsb	r8, ip, #16
 80228f6:	eba8 0801 	sub.w	r8, r8, r1
 80228fa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80228fe:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022902:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022906:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802290a:	4341      	muls	r1, r0
 802290c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022910:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022914:	ea4a 0202 	orr.w	r2, sl, r2
 8022918:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802291c:	fb09 1108 	mla	r1, r9, r8, r1
 8022920:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022924:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022928:	fb0c 1102 	mla	r1, ip, r2, r1
 802292c:	ea4b 0505 	orr.w	r5, fp, r5
 8022930:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022934:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022938:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802293c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022940:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022944:	ea42 0e0e 	orr.w	lr, r2, lr
 8022948:	fa1f f28e 	uxth.w	r2, lr
 802294c:	2bff      	cmp	r3, #255	; 0xff
 802294e:	d103      	bne.n	8022958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022950:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022952:	29ff      	cmp	r1, #255	; 0xff
 8022954:	f000 80de 	beq.w	8022b14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8022958:	990a      	ldr	r1, [sp, #40]	; 0x28
 802295a:	8838      	ldrh	r0, [r7, #0]
 802295c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802295e:	434b      	muls	r3, r1
 8022960:	f103 0c01 	add.w	ip, r3, #1
 8022964:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8022968:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802296c:	fa5f fc83 	uxtb.w	ip, r3
 8022970:	1203      	asrs	r3, r0, #8
 8022972:	1215      	asrs	r5, r2, #8
 8022974:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022978:	fb13 f30c 	smulbb	r3, r3, ip
 802297c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022980:	fb05 3501 	mla	r5, r5, r1, r3
 8022984:	10c3      	asrs	r3, r0, #3
 8022986:	10d1      	asrs	r1, r2, #3
 8022988:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802298c:	fb13 f30c 	smulbb	r3, r3, ip
 8022990:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022994:	fb01 3104 	mla	r1, r1, r4, r3
 8022998:	00c3      	lsls	r3, r0, #3
 802299a:	00d2      	lsls	r2, r2, #3
 802299c:	b2db      	uxtb	r3, r3
 802299e:	b2d2      	uxtb	r2, r2
 80229a0:	fb13 f30c 	smulbb	r3, r3, ip
 80229a4:	b2ad      	uxth	r5, r5
 80229a6:	fb02 3304 	mla	r3, r2, r4, r3
 80229aa:	b29a      	uxth	r2, r3
 80229ac:	1c6b      	adds	r3, r5, #1
 80229ae:	b289      	uxth	r1, r1
 80229b0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80229b4:	1c53      	adds	r3, r2, #1
 80229b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80229ba:	1c4a      	adds	r2, r1, #1
 80229bc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80229c0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80229c4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80229c8:	0949      	lsrs	r1, r1, #5
 80229ca:	432b      	orrs	r3, r5
 80229cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80229d0:	430b      	orrs	r3, r1
 80229d2:	803b      	strh	r3, [r7, #0]
 80229d4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80229d6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80229d8:	4413      	add	r3, r2
 80229da:	9321      	str	r3, [sp, #132]	; 0x84
 80229dc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80229de:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80229e0:	441a      	add	r2, r3
 80229e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80229e4:	9222      	str	r2, [sp, #136]	; 0x88
 80229e6:	3b01      	subs	r3, #1
 80229e8:	3702      	adds	r7, #2
 80229ea:	9313      	str	r3, [sp, #76]	; 0x4c
 80229ec:	e689      	b.n	8022702 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80229ee:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80229f0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80229f2:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80229f4:	4433      	add	r3, r6
 80229f6:	9321      	str	r3, [sp, #132]	; 0x84
 80229f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80229fa:	441c      	add	r4, r3
 80229fc:	9b08      	ldr	r3, [sp, #32]
 80229fe:	9422      	str	r4, [sp, #136]	; 0x88
 8022a00:	3b01      	subs	r3, #1
 8022a02:	9308      	str	r3, [sp, #32]
 8022a04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022a06:	3302      	adds	r3, #2
 8022a08:	9309      	str	r3, [sp, #36]	; 0x24
 8022a0a:	e658      	b.n	80226be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022a0c:	d028      	beq.n	8022a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022a0e:	9b08      	ldr	r3, [sp, #32]
 8022a10:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022a12:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022a14:	3b01      	subs	r3, #1
 8022a16:	fb00 5003 	mla	r0, r0, r3, r5
 8022a1a:	1400      	asrs	r0, r0, #16
 8022a1c:	f53f ae6c 	bmi.w	80226f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a20:	3901      	subs	r1, #1
 8022a22:	4288      	cmp	r0, r1
 8022a24:	f6bf ae68 	bge.w	80226f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a28:	9924      	ldr	r1, [sp, #144]	; 0x90
 8022a2a:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022a2c:	fb01 0303 	mla	r3, r1, r3, r0
 8022a30:	141b      	asrs	r3, r3, #16
 8022a32:	f53f ae61 	bmi.w	80226f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a36:	3a01      	subs	r2, #1
 8022a38:	4293      	cmp	r3, r2
 8022a3a:	f6bf ae5d 	bge.w	80226f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a3e:	9b08      	ldr	r3, [sp, #32]
 8022a40:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022a44:	9313      	str	r3, [sp, #76]	; 0x4c
 8022a46:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022a4a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022a4c:	2b00      	cmp	r3, #0
 8022a4e:	f300 8082 	bgt.w	8022b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022a52:	9b08      	ldr	r3, [sp, #32]
 8022a54:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022a58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022a5a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022a5e:	9309      	str	r3, [sp, #36]	; 0x24
 8022a60:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022a62:	2b00      	cmp	r3, #0
 8022a64:	f340 81ef 	ble.w	8022e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022a68:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022a6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022a70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022a74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022a7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022a7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022a82:	eef0 6a62 	vmov.f32	s13, s5
 8022a86:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022a8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022a92:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8022a96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022a9a:	eef0 6a43 	vmov.f32	s13, s6
 8022a9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022aa2:	ee12 2a90 	vmov	r2, s5
 8022aa6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022aaa:	fb92 f3f3 	sdiv	r3, r2, r3
 8022aae:	ee13 2a10 	vmov	r2, s6
 8022ab2:	9323      	str	r3, [sp, #140]	; 0x8c
 8022ab4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022ab6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022aba:	9324      	str	r3, [sp, #144]	; 0x90
 8022abc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022abe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022ac0:	3b01      	subs	r3, #1
 8022ac2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ac6:	9311      	str	r3, [sp, #68]	; 0x44
 8022ac8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022aca:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8022ace:	bf08      	it	eq
 8022ad0:	4613      	moveq	r3, r2
 8022ad2:	9308      	str	r3, [sp, #32]
 8022ad4:	eeb0 3a67 	vmov.f32	s6, s15
 8022ad8:	eef0 2a47 	vmov.f32	s5, s14
 8022adc:	e5e1      	b.n	80226a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022ade:	fb08 f505 	mul.w	r5, r8, r5
 8022ae2:	fb09 5303 	mla	r3, r9, r3, r5
 8022ae6:	e661      	b.n	80227ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8022ae8:	4681      	mov	r9, r0
 8022aea:	e688      	b.n	80227fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022aec:	f1c1 0210 	rsb	r2, r1, #16
 8022af0:	4341      	muls	r1, r0
 8022af2:	fb09 1902 	mla	r9, r9, r2, r1
 8022af6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022afa:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022afe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022b02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022b06:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022b0a:	ea42 0909 	orr.w	r9, r2, r9
 8022b0e:	fa1f f289 	uxth.w	r2, r9
 8022b12:	e71b      	b.n	802294c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022b14:	803a      	strh	r2, [r7, #0]
 8022b16:	e75d      	b.n	80229d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b18:	f115 0e01 	adds.w	lr, r5, #1
 8022b1c:	f53f af5a 	bmi.w	80229d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b20:	4572      	cmp	r2, lr
 8022b22:	f6ff af57 	blt.w	80229d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b26:	f110 0e01 	adds.w	lr, r0, #1
 8022b2a:	f53f af53 	bmi.w	80229d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b2e:	4573      	cmp	r3, lr
 8022b30:	f6ff af50 	blt.w	80229d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b34:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022b36:	9502      	str	r5, [sp, #8]
 8022b38:	b21b      	sxth	r3, r3
 8022b3a:	b212      	sxth	r2, r2
 8022b3c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022b40:	9301      	str	r3, [sp, #4]
 8022b42:	9200      	str	r2, [sp, #0]
 8022b44:	e9cd c405 	strd	ip, r4, [sp, #20]
 8022b48:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022b4c:	4639      	mov	r1, r7
 8022b4e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022b50:	f7ff fc04 	bl	802235c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022b54:	e73e      	b.n	80229d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b56:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022b58:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022b5c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022b5e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022b62:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022b64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022b68:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022b6a:	141f      	asrs	r7, r3, #16
 8022b6c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022b6e:	141b      	asrs	r3, r3, #16
 8022b70:	fb01 3707 	mla	r7, r1, r7, r3
 8022b74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022b76:	fa1f fc82 	uxth.w	ip, r2
 8022b7a:	eb03 0a07 	add.w	sl, r3, r7
 8022b7e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022b82:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022b86:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022b8a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022b8e:	b29b      	uxth	r3, r3
 8022b90:	2d00      	cmp	r5, #0
 8022b92:	f000 813d 	beq.w	8022e10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022b96:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022b9a:	940f      	str	r4, [sp, #60]	; 0x3c
 8022b9c:	eb0a 0b01 	add.w	fp, sl, r1
 8022ba0:	fa1f fa85 	uxth.w	sl, r5
 8022ba4:	fb0a fc0c 	mul.w	ip, sl, ip
 8022ba8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022bac:	fa1f fa8a 	uxth.w	sl, sl
 8022bb0:	eba0 000c 	sub.w	r0, r0, ip
 8022bb4:	eba3 030a 	sub.w	r3, r3, sl
 8022bb8:	b280      	uxth	r0, r0
 8022bba:	fb08 f000 	mul.w	r0, r8, r0
 8022bbe:	b29b      	uxth	r3, r3
 8022bc0:	fb09 0303 	mla	r3, r9, r3, r0
 8022bc4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022bc6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022bca:	9410      	str	r4, [sp, #64]	; 0x40
 8022bcc:	fb0a 3300 	mla	r3, sl, r0, r3
 8022bd0:	fb0c 3304 	mla	r3, ip, r4, r3
 8022bd4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022bd8:	2b00      	cmp	r3, #0
 8022bda:	f000 810b 	beq.w	8022df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022bde:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022be0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022be2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022be6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022bea:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022bee:	f000 8114 	beq.w	8022e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022bf2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022bf6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022bfa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022bfe:	fb09 f707 	mul.w	r7, r9, r7
 8022c02:	fb0a fc0c 	mul.w	ip, sl, ip
 8022c06:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022c0a:	f107 0b20 	add.w	fp, r7, #32
 8022c0e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022c12:	44cc      	add	ip, r9
 8022c14:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022c18:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022c1c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022c20:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022c24:	ea4c 0909 	orr.w	r9, ip, r9
 8022c28:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022c2c:	8847      	ldrh	r7, [r0, #2]
 8022c2e:	d019      	beq.n	8022c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022c30:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022c34:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022c38:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022c3c:	fb08 f807 	mul.w	r8, r8, r7
 8022c40:	fb0a fc0c 	mul.w	ip, sl, ip
 8022c44:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022c48:	f108 0b20 	add.w	fp, r8, #32
 8022c4c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022c50:	44bc      	add	ip, r7
 8022c52:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022c56:	0a3f      	lsrs	r7, r7, #8
 8022c58:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022c5c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022c60:	ea4c 0707 	orr.w	r7, ip, r7
 8022c64:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022c68:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022c6c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022c70:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022c74:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c78:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022c7c:	ea4c 0909 	orr.w	r9, ip, r9
 8022c80:	ea4a 0707 	orr.w	r7, sl, r7
 8022c84:	2d00      	cmp	r5, #0
 8022c86:	f000 80ca 	beq.w	8022e1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022c8a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022c8e:	3901      	subs	r1, #1
 8022c90:	0049      	lsls	r1, r1, #1
 8022c92:	3102      	adds	r1, #2
 8022c94:	eb00 0c01 	add.w	ip, r0, r1
 8022c98:	5a41      	ldrh	r1, [r0, r1]
 8022c9a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022c9c:	28ff      	cmp	r0, #255	; 0xff
 8022c9e:	d019      	beq.n	8022cd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022ca0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022ca2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022ca6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022caa:	fb04 fa01 	mul.w	sl, r4, r1
 8022cae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022cb2:	fb08 f800 	mul.w	r8, r8, r0
 8022cb6:	f10a 0020 	add.w	r0, sl, #32
 8022cba:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022cbe:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022cc2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022cc6:	4441      	add	r1, r8
 8022cc8:	0a00      	lsrs	r0, r0, #8
 8022cca:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022cce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022cd2:	4301      	orrs	r1, r0
 8022cd4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022cd6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022cda:	2cff      	cmp	r4, #255	; 0xff
 8022cdc:	d01a      	beq.n	8022d14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022cde:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022ce2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022ce6:	fb04 fa00 	mul.w	sl, r4, r0
 8022cea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022cee:	fb08 f80c 	mul.w	r8, r8, ip
 8022cf2:	f10a 0c20 	add.w	ip, sl, #32
 8022cf6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022cfa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022cfe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022d02:	4440      	add	r0, r8
 8022d04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d08:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022d0c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022d10:	ea40 000c 	orr.w	r0, r0, ip
 8022d14:	fb15 fc02 	smulbb	ip, r5, r2
 8022d18:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022d1c:	f1c5 0810 	rsb	r8, r5, #16
 8022d20:	eba8 0802 	sub.w	r8, r8, r2
 8022d24:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022d28:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022d2c:	437a      	muls	r2, r7
 8022d2e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022d32:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022d36:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d3a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022d3e:	fb09 2208 	mla	r2, r9, r8, r2
 8022d42:	ea4a 0101 	orr.w	r1, sl, r1
 8022d46:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022d4a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022d4e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d52:	fb05 2201 	mla	r2, r5, r1, r2
 8022d56:	ea4b 0000 	orr.w	r0, fp, r0
 8022d5a:	fb0c 2200 	mla	r2, ip, r0, r2
 8022d5e:	0d57      	lsrs	r7, r2, #21
 8022d60:	0952      	lsrs	r2, r2, #5
 8022d62:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022d66:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d6a:	433a      	orrs	r2, r7
 8022d6c:	2bff      	cmp	r3, #255	; 0xff
 8022d6e:	b292      	uxth	r2, r2
 8022d70:	d102      	bne.n	8022d78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022d72:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022d74:	29ff      	cmp	r1, #255	; 0xff
 8022d76:	d063      	beq.n	8022e40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022d78:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022d7a:	f8be 1000 	ldrh.w	r1, [lr]
 8022d7e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022d80:	4343      	muls	r3, r0
 8022d82:	1c58      	adds	r0, r3, #1
 8022d84:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022d88:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022d8c:	1208      	asrs	r0, r1, #8
 8022d8e:	b2db      	uxtb	r3, r3
 8022d90:	1215      	asrs	r5, r2, #8
 8022d92:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022d96:	fb10 f003 	smulbb	r0, r0, r3
 8022d9a:	10cf      	asrs	r7, r1, #3
 8022d9c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022da0:	00c9      	lsls	r1, r1, #3
 8022da2:	fb05 0504 	mla	r5, r5, r4, r0
 8022da6:	b2c9      	uxtb	r1, r1
 8022da8:	10d0      	asrs	r0, r2, #3
 8022daa:	00d2      	lsls	r2, r2, #3
 8022dac:	fb11 f103 	smulbb	r1, r1, r3
 8022db0:	b2d2      	uxtb	r2, r2
 8022db2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022db6:	fb02 1204 	mla	r2, r2, r4, r1
 8022dba:	fb17 f703 	smulbb	r7, r7, r3
 8022dbe:	b2ad      	uxth	r5, r5
 8022dc0:	b292      	uxth	r2, r2
 8022dc2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022dc6:	fb00 7004 	mla	r0, r0, r4, r7
 8022dca:	1c6b      	adds	r3, r5, #1
 8022dcc:	1c57      	adds	r7, r2, #1
 8022dce:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022dd2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022dd6:	b280      	uxth	r0, r0
 8022dd8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022ddc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022de0:	433d      	orrs	r5, r7
 8022de2:	1c47      	adds	r7, r0, #1
 8022de4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022de8:	097f      	lsrs	r7, r7, #5
 8022dea:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022dee:	433d      	orrs	r5, r7
 8022df0:	f8ae 5000 	strh.w	r5, [lr]
 8022df4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022df6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022df8:	4413      	add	r3, r2
 8022dfa:	9321      	str	r3, [sp, #132]	; 0x84
 8022dfc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022dfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e00:	441a      	add	r2, r3
 8022e02:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022e04:	9222      	str	r2, [sp, #136]	; 0x88
 8022e06:	3b01      	subs	r3, #1
 8022e08:	f10e 0e02 	add.w	lr, lr, #2
 8022e0c:	9313      	str	r3, [sp, #76]	; 0x4c
 8022e0e:	e61c      	b.n	8022a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022e10:	fb08 f000 	mul.w	r0, r8, r0
 8022e14:	fb09 0303 	mla	r3, r9, r3, r0
 8022e18:	e6dc      	b.n	8022bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022e1a:	46b9      	mov	r9, r7
 8022e1c:	e704      	b.n	8022c28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022e1e:	f1c2 0110 	rsb	r1, r2, #16
 8022e22:	437a      	muls	r2, r7
 8022e24:	fb09 2901 	mla	r9, r9, r1, r2
 8022e28:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022e2c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022e30:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022e34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e38:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022e3c:	4302      	orrs	r2, r0
 8022e3e:	e795      	b.n	8022d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022e40:	f8ae 2000 	strh.w	r2, [lr]
 8022e44:	e7d6      	b.n	8022df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022e46:	b017      	add	sp, #92	; 0x5c
 8022e48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022e4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e50:	b085      	sub	sp, #20
 8022e52:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022e56:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022e5a:	9103      	str	r1, [sp, #12]
 8022e5c:	fb00 7406 	mla	r4, r0, r6, r7
 8022e60:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022e64:	2800      	cmp	r0, #0
 8022e66:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022e6a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022e6e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022e72:	9501      	str	r5, [sp, #4]
 8022e74:	eb02 0904 	add.w	r9, r2, r4
 8022e78:	f2c0 8141 	blt.w	80230fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022e7c:	4583      	cmp	fp, r0
 8022e7e:	f340 813e 	ble.w	80230fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022e82:	2f00      	cmp	r7, #0
 8022e84:	f2c0 8137 	blt.w	80230f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022e88:	42be      	cmp	r6, r7
 8022e8a:	f340 8134 	ble.w	80230f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022e8e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022e92:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022e96:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022e9a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022e9e:	4355      	muls	r5, r2
 8022ea0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ea4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022ea8:	fb0c f203 	mul.w	r2, ip, r3
 8022eac:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022eb0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022eb4:	441d      	add	r5, r3
 8022eb6:	f102 0320 	add.w	r3, r2, #32
 8022eba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022ebe:	0a1b      	lsrs	r3, r3, #8
 8022ec0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022ec4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ec8:	431c      	orrs	r4, r3
 8022eca:	1c7b      	adds	r3, r7, #1
 8022ecc:	f100 811c 	bmi.w	8023108 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022ed0:	429e      	cmp	r6, r3
 8022ed2:	f340 8119 	ble.w	8023108 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022ed6:	2900      	cmp	r1, #0
 8022ed8:	f000 8119 	beq.w	802310e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022edc:	9a01      	ldr	r2, [sp, #4]
 8022ede:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022ee2:	8855      	ldrh	r5, [r2, #2]
 8022ee4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022ee8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022eec:	fb08 f802 	mul.w	r8, r8, r2
 8022ef0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022ef4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022ef8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022efc:	435d      	muls	r5, r3
 8022efe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022f02:	44d0      	add	r8, sl
 8022f04:	f105 0a20 	add.w	sl, r5, #32
 8022f08:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022f0c:	0a2d      	lsrs	r5, r5, #8
 8022f0e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022f12:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022f16:	432a      	orrs	r2, r5
 8022f18:	3001      	adds	r0, #1
 8022f1a:	f100 80fe 	bmi.w	802311a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022f1e:	4583      	cmp	fp, r0
 8022f20:	f340 80fb 	ble.w	802311a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022f24:	f1be 0f00 	cmp.w	lr, #0
 8022f28:	f000 80fc 	beq.w	8023124 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022f2c:	2f00      	cmp	r7, #0
 8022f2e:	f2c0 80f1 	blt.w	8023114 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022f32:	42be      	cmp	r6, r7
 8022f34:	f340 80ee 	ble.w	8023114 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022f38:	9801      	ldr	r0, [sp, #4]
 8022f3a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022f3e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022f42:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022f46:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022f4a:	fb0a fa00 	mul.w	sl, sl, r0
 8022f4e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022f52:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022f56:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022f5a:	fb05 f808 	mul.w	r8, r5, r8
 8022f5e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022f62:	4482      	add	sl, r0
 8022f64:	f108 0020 	add.w	r0, r8, #32
 8022f68:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022f6c:	0a00      	lsrs	r0, r0, #8
 8022f6e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022f72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f76:	ea4b 0b00 	orr.w	fp, fp, r0
 8022f7a:	3701      	adds	r7, #1
 8022f7c:	f100 80d7 	bmi.w	802312e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022f80:	42be      	cmp	r6, r7
 8022f82:	f340 80d4 	ble.w	802312e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022f86:	2900      	cmp	r1, #0
 8022f88:	f000 80d4 	beq.w	8023134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022f8c:	3601      	adds	r6, #1
 8022f8e:	9801      	ldr	r0, [sp, #4]
 8022f90:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022f94:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022f98:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022f9c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022fa0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022fa4:	fb09 f906 	mul.w	r9, r9, r6
 8022fa8:	fb07 f800 	mul.w	r8, r7, r0
 8022fac:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022fb0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022fb4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022fb8:	44d1      	add	r9, sl
 8022fba:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022fbe:	f108 0020 	add.w	r0, r8, #32
 8022fc2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022fc6:	0a00      	lsrs	r0, r0, #8
 8022fc8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022fcc:	4330      	orrs	r0, r6
 8022fce:	b28e      	uxth	r6, r1
 8022fd0:	fa1f f98e 	uxth.w	r9, lr
 8022fd4:	fb06 f809 	mul.w	r8, r6, r9
 8022fd8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022fdc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022fe0:	0136      	lsls	r6, r6, #4
 8022fe2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022fe6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022fea:	9601      	str	r6, [sp, #4]
 8022fec:	ea4a 0404 	orr.w	r4, sl, r4
 8022ff0:	fa1f f689 	uxth.w	r6, r9
 8022ff4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022ff8:	fb11 f90e 	smulbb	r9, r1, lr
 8022ffc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023000:	9602      	str	r6, [sp, #8]
 8023002:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023006:	4626      	mov	r6, r4
 8023008:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802300c:	f1ce 0410 	rsb	r4, lr, #16
 8023010:	1a64      	subs	r4, r4, r1
 8023012:	ea4a 0202 	orr.w	r2, sl, r2
 8023016:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802301a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802301e:	434a      	muls	r2, r1
 8023020:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023024:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023028:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802302c:	fb04 2406 	mla	r4, r4, r6, r2
 8023030:	ea4a 0000 	orr.w	r0, sl, r0
 8023034:	fb09 4200 	mla	r2, r9, r0, r4
 8023038:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802303c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023040:	9801      	ldr	r0, [sp, #4]
 8023042:	9903      	ldr	r1, [sp, #12]
 8023044:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023048:	ea44 0b0b 	orr.w	fp, r4, fp
 802304c:	9c02      	ldr	r4, [sp, #8]
 802304e:	8809      	ldrh	r1, [r1, #0]
 8023050:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023054:	1b00      	subs	r0, r0, r4
 8023056:	9c01      	ldr	r4, [sp, #4]
 8023058:	eba4 0608 	sub.w	r6, r4, r8
 802305c:	b2b6      	uxth	r6, r6
 802305e:	b280      	uxth	r0, r0
 8023060:	4373      	muls	r3, r6
 8023062:	fb0c 3300 	mla	r3, ip, r0, r3
 8023066:	9802      	ldr	r0, [sp, #8]
 8023068:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802306c:	fb00 3505 	mla	r5, r0, r5, r3
 8023070:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8023074:	fb08 5707 	mla	r7, r8, r7, r5
 8023078:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802307c:	120b      	asrs	r3, r1, #8
 802307e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023082:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8023086:	b2ff      	uxtb	r7, r7
 8023088:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802308c:	10c8      	asrs	r0, r1, #3
 802308e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023092:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023096:	00c9      	lsls	r1, r1, #3
 8023098:	437b      	muls	r3, r7
 802309a:	ea42 0e0e 	orr.w	lr, r2, lr
 802309e:	b2c9      	uxtb	r1, r1
 80230a0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80230a4:	fa1f f28e 	uxth.w	r2, lr
 80230a8:	4378      	muls	r0, r7
 80230aa:	434f      	muls	r7, r1
 80230ac:	1c59      	adds	r1, r3, #1
 80230ae:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80230b2:	1213      	asrs	r3, r2, #8
 80230b4:	f023 0307 	bic.w	r3, r3, #7
 80230b8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80230bc:	1c41      	adds	r1, r0, #1
 80230be:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80230c2:	10d1      	asrs	r1, r2, #3
 80230c4:	f021 0103 	bic.w	r1, r1, #3
 80230c8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80230cc:	021b      	lsls	r3, r3, #8
 80230ce:	00c9      	lsls	r1, r1, #3
 80230d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80230d4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80230d8:	430b      	orrs	r3, r1
 80230da:	1c79      	adds	r1, r7, #1
 80230dc:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80230e0:	00d2      	lsls	r2, r2, #3
 80230e2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80230e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80230ea:	431a      	orrs	r2, r3
 80230ec:	9b03      	ldr	r3, [sp, #12]
 80230ee:	801a      	strh	r2, [r3, #0]
 80230f0:	b005      	add	sp, #20
 80230f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80230f6:	f04f 0c00 	mov.w	ip, #0
 80230fa:	4664      	mov	r4, ip
 80230fc:	e6e5      	b.n	8022eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80230fe:	2300      	movs	r3, #0
 8023100:	469c      	mov	ip, r3
 8023102:	461a      	mov	r2, r3
 8023104:	461c      	mov	r4, r3
 8023106:	e707      	b.n	8022f18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023108:	2300      	movs	r3, #0
 802310a:	461a      	mov	r2, r3
 802310c:	e704      	b.n	8022f18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802310e:	460b      	mov	r3, r1
 8023110:	460a      	mov	r2, r1
 8023112:	e701      	b.n	8022f18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023114:	2500      	movs	r5, #0
 8023116:	46ab      	mov	fp, r5
 8023118:	e72f      	b.n	8022f7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802311a:	2700      	movs	r7, #0
 802311c:	463d      	mov	r5, r7
 802311e:	4638      	mov	r0, r7
 8023120:	46bb      	mov	fp, r7
 8023122:	e754      	b.n	8022fce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023124:	4677      	mov	r7, lr
 8023126:	4675      	mov	r5, lr
 8023128:	4670      	mov	r0, lr
 802312a:	46f3      	mov	fp, lr
 802312c:	e74f      	b.n	8022fce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802312e:	2700      	movs	r7, #0
 8023130:	4638      	mov	r0, r7
 8023132:	e74c      	b.n	8022fce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023134:	460f      	mov	r7, r1
 8023136:	4608      	mov	r0, r1
 8023138:	e749      	b.n	8022fce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0802313c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802313c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023140:	b093      	sub	sp, #76	; 0x4c
 8023142:	9210      	str	r2, [sp, #64]	; 0x40
 8023144:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023146:	910e      	str	r1, [sp, #56]	; 0x38
 8023148:	9306      	str	r3, [sp, #24]
 802314a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802314e:	9011      	str	r0, [sp, #68]	; 0x44
 8023150:	6850      	ldr	r0, [r2, #4]
 8023152:	6812      	ldr	r2, [r2, #0]
 8023154:	fb00 1303 	mla	r3, r0, r3, r1
 8023158:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802315c:	9307      	str	r3, [sp, #28]
 802315e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023160:	681b      	ldr	r3, [r3, #0]
 8023162:	9308      	str	r3, [sp, #32]
 8023164:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023166:	685b      	ldr	r3, [r3, #4]
 8023168:	9309      	str	r3, [sp, #36]	; 0x24
 802316a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802316c:	2b00      	cmp	r3, #0
 802316e:	dc03      	bgt.n	8023178 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023170:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023172:	2b00      	cmp	r3, #0
 8023174:	f340 83b4 	ble.w	80238e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023178:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802317a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802317e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023182:	1e48      	subs	r0, r1, #1
 8023184:	1e55      	subs	r5, r2, #1
 8023186:	9b06      	ldr	r3, [sp, #24]
 8023188:	2b00      	cmp	r3, #0
 802318a:	f340 8163 	ble.w	8023454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802318e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8023190:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023192:	1436      	asrs	r6, r6, #16
 8023194:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023198:	d406      	bmi.n	80231a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802319a:	4286      	cmp	r6, r0
 802319c:	da04      	bge.n	80231a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802319e:	2b00      	cmp	r3, #0
 80231a0:	db02      	blt.n	80231a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80231a2:	42ab      	cmp	r3, r5
 80231a4:	f2c0 8157 	blt.w	8023456 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80231a8:	3601      	adds	r6, #1
 80231aa:	f100 8144 	bmi.w	8023436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80231ae:	42b1      	cmp	r1, r6
 80231b0:	f2c0 8141 	blt.w	8023436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80231b4:	3301      	adds	r3, #1
 80231b6:	f100 813e 	bmi.w	8023436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80231ba:	429a      	cmp	r2, r3
 80231bc:	f2c0 813b 	blt.w	8023436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80231c0:	9b06      	ldr	r3, [sp, #24]
 80231c2:	9f07      	ldr	r7, [sp, #28]
 80231c4:	930f      	str	r3, [sp, #60]	; 0x3c
 80231c6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80231ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80231cc:	2b00      	cmp	r3, #0
 80231ce:	f340 8164 	ble.w	802349a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80231d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80231d4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80231d6:	1418      	asrs	r0, r3, #16
 80231d8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80231da:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80231de:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80231e0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80231e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80231e6:	142d      	asrs	r5, r5, #16
 80231e8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80231ec:	f100 81ee 	bmi.w	80235cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80231f0:	f102 3eff 	add.w	lr, r2, #4294967295
 80231f4:	4575      	cmp	r5, lr
 80231f6:	f280 81e9 	bge.w	80235cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80231fa:	2800      	cmp	r0, #0
 80231fc:	f2c0 81e6 	blt.w	80235cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023200:	f103 3eff 	add.w	lr, r3, #4294967295
 8023204:	4570      	cmp	r0, lr
 8023206:	f280 81e1 	bge.w	80235cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802320a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802320c:	b212      	sxth	r2, r2
 802320e:	fb00 5002 	mla	r0, r0, r2, r5
 8023212:	fa1f fe81 	uxth.w	lr, r1
 8023216:	eb03 0a00 	add.w	sl, r3, r0
 802321a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802321e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023222:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023226:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802322a:	b29b      	uxth	r3, r3
 802322c:	f1bc 0f00 	cmp.w	ip, #0
 8023230:	f000 8179 	beq.w	8023526 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023234:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023238:	940a      	str	r4, [sp, #40]	; 0x28
 802323a:	eb0a 0b02 	add.w	fp, sl, r2
 802323e:	fa1f fa8c 	uxth.w	sl, ip
 8023242:	fb0a fe0e 	mul.w	lr, sl, lr
 8023246:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802324a:	fa1f fa8a 	uxth.w	sl, sl
 802324e:	eba5 050e 	sub.w	r5, r5, lr
 8023252:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023256:	940b      	str	r4, [sp, #44]	; 0x2c
 8023258:	eba3 030a 	sub.w	r3, r3, sl
 802325c:	b2ad      	uxth	r5, r5
 802325e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023260:	b29b      	uxth	r3, r3
 8023262:	fb08 f505 	mul.w	r5, r8, r5
 8023266:	fb09 5303 	mla	r3, r9, r3, r5
 802326a:	fb0a 3304 	mla	r3, sl, r4, r3
 802326e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023270:	fb0e 3304 	mla	r3, lr, r4, r3
 8023274:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023278:	2b00      	cmp	r3, #0
 802327a:	f000 80cf 	beq.w	802341c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802327e:	9c08      	ldr	r4, [sp, #32]
 8023280:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023284:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023288:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802328c:	f000 8150 	beq.w	8023530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023290:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023294:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023298:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802329c:	fb09 f000 	mul.w	r0, r9, r0
 80232a0:	fb0a fe0e 	mul.w	lr, sl, lr
 80232a4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80232a8:	f100 0b20 	add.w	fp, r0, #32
 80232ac:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80232b0:	44ce      	add	lr, r9
 80232b2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80232b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80232ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80232be:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80232c2:	ea4e 0909 	orr.w	r9, lr, r9
 80232c6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80232ca:	8868      	ldrh	r0, [r5, #2]
 80232cc:	d019      	beq.n	8023302 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80232ce:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80232d2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80232d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80232da:	fb08 f800 	mul.w	r8, r8, r0
 80232de:	fb0a fe0e 	mul.w	lr, sl, lr
 80232e2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80232e6:	f108 0b20 	add.w	fp, r8, #32
 80232ea:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80232ee:	4486      	add	lr, r0
 80232f0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80232f4:	0a00      	lsrs	r0, r0, #8
 80232f6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80232fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80232fe:	ea4e 0000 	orr.w	r0, lr, r0
 8023302:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023306:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802330a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802330e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023312:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023316:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802331a:	ea4e 0909 	orr.w	r9, lr, r9
 802331e:	ea4a 0000 	orr.w	r0, sl, r0
 8023322:	f1bc 0f00 	cmp.w	ip, #0
 8023326:	f000 8105 	beq.w	8023534 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802332a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802332e:	3a01      	subs	r2, #1
 8023330:	0052      	lsls	r2, r2, #1
 8023332:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023334:	3202      	adds	r2, #2
 8023336:	2cff      	cmp	r4, #255	; 0xff
 8023338:	eb05 0e02 	add.w	lr, r5, r2
 802333c:	5aaa      	ldrh	r2, [r5, r2]
 802333e:	d018      	beq.n	8023372 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023340:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023344:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023348:	fb04 fa02 	mul.w	sl, r4, r2
 802334c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023350:	fb08 f805 	mul.w	r8, r8, r5
 8023354:	f10a 0520 	add.w	r5, sl, #32
 8023358:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802335c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023360:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023364:	4442      	add	r2, r8
 8023366:	0a2d      	lsrs	r5, r5, #8
 8023368:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802336c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023370:	432a      	orrs	r2, r5
 8023372:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023374:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023378:	2cff      	cmp	r4, #255	; 0xff
 802337a:	d01a      	beq.n	80233b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802337c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023380:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023384:	fb04 fa05 	mul.w	sl, r4, r5
 8023388:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802338c:	fb08 f80e 	mul.w	r8, r8, lr
 8023390:	f10a 0e20 	add.w	lr, sl, #32
 8023394:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023398:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802339c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80233a0:	4445      	add	r5, r8
 80233a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80233a6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80233aa:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80233ae:	ea45 050e 	orr.w	r5, r5, lr
 80233b2:	fb1c fe01 	smulbb	lr, ip, r1
 80233b6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80233ba:	f1cc 0810 	rsb	r8, ip, #16
 80233be:	eba8 0801 	sub.w	r8, r8, r1
 80233c2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80233c6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80233ca:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80233ce:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80233d2:	4341      	muls	r1, r0
 80233d4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80233d8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80233dc:	ea4a 0202 	orr.w	r2, sl, r2
 80233e0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80233e4:	fb09 1108 	mla	r1, r9, r8, r1
 80233e8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80233ec:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80233f0:	fb0c 1102 	mla	r1, ip, r2, r1
 80233f4:	ea4b 0505 	orr.w	r5, fp, r5
 80233f8:	fb0e 1e05 	mla	lr, lr, r5, r1
 80233fc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023400:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023404:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023408:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802340c:	ea42 0e0e 	orr.w	lr, r2, lr
 8023410:	fa1f f28e 	uxth.w	r2, lr
 8023414:	2bff      	cmp	r3, #255	; 0xff
 8023416:	f040 80a1 	bne.w	802355c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802341a:	803a      	strh	r2, [r7, #0]
 802341c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802341e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023420:	4413      	add	r3, r2
 8023422:	931d      	str	r3, [sp, #116]	; 0x74
 8023424:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023426:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023428:	441a      	add	r2, r3
 802342a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802342c:	921e      	str	r2, [sp, #120]	; 0x78
 802342e:	3b01      	subs	r3, #1
 8023430:	3702      	adds	r7, #2
 8023432:	930f      	str	r3, [sp, #60]	; 0x3c
 8023434:	e6c9      	b.n	80231ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023436:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023438:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802343a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 802343c:	4433      	add	r3, r6
 802343e:	931d      	str	r3, [sp, #116]	; 0x74
 8023440:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023442:	441c      	add	r4, r3
 8023444:	9b06      	ldr	r3, [sp, #24]
 8023446:	941e      	str	r4, [sp, #120]	; 0x78
 8023448:	3b01      	subs	r3, #1
 802344a:	9306      	str	r3, [sp, #24]
 802344c:	9b07      	ldr	r3, [sp, #28]
 802344e:	3302      	adds	r3, #2
 8023450:	9307      	str	r3, [sp, #28]
 8023452:	e698      	b.n	8023186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023454:	d028      	beq.n	80234a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023456:	9b06      	ldr	r3, [sp, #24]
 8023458:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802345a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802345c:	3b01      	subs	r3, #1
 802345e:	fb00 5003 	mla	r0, r0, r3, r5
 8023462:	1400      	asrs	r0, r0, #16
 8023464:	f53f aeac 	bmi.w	80231c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023468:	3901      	subs	r1, #1
 802346a:	4288      	cmp	r0, r1
 802346c:	f6bf aea8 	bge.w	80231c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023470:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023472:	981e      	ldr	r0, [sp, #120]	; 0x78
 8023474:	fb01 0303 	mla	r3, r1, r3, r0
 8023478:	141b      	asrs	r3, r3, #16
 802347a:	f53f aea1 	bmi.w	80231c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802347e:	3a01      	subs	r2, #1
 8023480:	4293      	cmp	r3, r2
 8023482:	f6bf ae9d 	bge.w	80231c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023486:	9b06      	ldr	r3, [sp, #24]
 8023488:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802348c:	930f      	str	r3, [sp, #60]	; 0x3c
 802348e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023492:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023494:	2b00      	cmp	r3, #0
 8023496:	f300 80b6 	bgt.w	8023606 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802349a:	9b06      	ldr	r3, [sp, #24]
 802349c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80234a0:	9b07      	ldr	r3, [sp, #28]
 80234a2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80234a6:	9307      	str	r3, [sp, #28]
 80234a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80234aa:	2b00      	cmp	r3, #0
 80234ac:	f340 8218 	ble.w	80238e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80234b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80234b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80234b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80234bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80234be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80234c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80234c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80234ca:	eef0 6a62 	vmov.f32	s13, s5
 80234ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80234d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80234d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80234da:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80234de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80234e2:	eef0 6a43 	vmov.f32	s13, s6
 80234e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80234ea:	ee12 2a90 	vmov	r2, s5
 80234ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80234f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80234f6:	ee13 2a10 	vmov	r2, s6
 80234fa:	931f      	str	r3, [sp, #124]	; 0x7c
 80234fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80234fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8023502:	9320      	str	r3, [sp, #128]	; 0x80
 8023504:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023506:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023508:	3b01      	subs	r3, #1
 802350a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802350e:	930e      	str	r3, [sp, #56]	; 0x38
 8023510:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023512:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8023516:	bf08      	it	eq
 8023518:	4613      	moveq	r3, r2
 802351a:	9306      	str	r3, [sp, #24]
 802351c:	eeb0 3a67 	vmov.f32	s6, s15
 8023520:	eef0 2a47 	vmov.f32	s5, s14
 8023524:	e621      	b.n	802316a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8023526:	fb08 f505 	mul.w	r5, r8, r5
 802352a:	fb09 5303 	mla	r3, r9, r3, r5
 802352e:	e6a1      	b.n	8023274 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023530:	4681      	mov	r9, r0
 8023532:	e6c8      	b.n	80232c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023534:	f1c1 0210 	rsb	r2, r1, #16
 8023538:	4341      	muls	r1, r0
 802353a:	fb09 1902 	mla	r9, r9, r2, r1
 802353e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023542:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023546:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802354a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802354e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023552:	ea42 0909 	orr.w	r9, r2, r9
 8023556:	fa1f f289 	uxth.w	r2, r9
 802355a:	e75b      	b.n	8023414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802355c:	f8b7 c000 	ldrh.w	ip, [r7]
 8023560:	43db      	mvns	r3, r3
 8023562:	ea4f 202c 	mov.w	r0, ip, asr #8
 8023566:	fa5f fe83 	uxtb.w	lr, r3
 802356a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802356e:	fb00 f00e 	mul.w	r0, r0, lr
 8023572:	1c41      	adds	r1, r0, #1
 8023574:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023578:	1211      	asrs	r1, r2, #8
 802357a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802357e:	f021 0107 	bic.w	r1, r1, #7
 8023582:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023586:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802358a:	48d7      	ldr	r0, [pc, #860]	; (80238e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802358c:	fb05 f50e 	mul.w	r5, r5, lr
 8023590:	b2c9      	uxtb	r1, r1
 8023592:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8023596:	1c69      	adds	r1, r5, #1
 8023598:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802359c:	10d1      	asrs	r1, r2, #3
 802359e:	f021 0103 	bic.w	r1, r1, #3
 80235a2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80235a6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80235aa:	b2db      	uxtb	r3, r3
 80235ac:	00c9      	lsls	r1, r1, #3
 80235ae:	fb03 f30e 	mul.w	r3, r3, lr
 80235b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80235b6:	4301      	orrs	r1, r0
 80235b8:	1c58      	adds	r0, r3, #1
 80235ba:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80235be:	00d2      	lsls	r2, r2, #3
 80235c0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80235c4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80235c8:	430a      	orrs	r2, r1
 80235ca:	e726      	b.n	802341a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80235cc:	f115 0e01 	adds.w	lr, r5, #1
 80235d0:	f53f af24 	bmi.w	802341c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80235d4:	4572      	cmp	r2, lr
 80235d6:	f6ff af21 	blt.w	802341c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80235da:	f110 0e01 	adds.w	lr, r0, #1
 80235de:	f53f af1d 	bmi.w	802341c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80235e2:	4573      	cmp	r3, lr
 80235e4:	f6ff af1a 	blt.w	802341c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80235e8:	b21b      	sxth	r3, r3
 80235ea:	b212      	sxth	r2, r2
 80235ec:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80235f0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80235f4:	9301      	str	r3, [sp, #4]
 80235f6:	9200      	str	r2, [sp, #0]
 80235f8:	4639      	mov	r1, r7
 80235fa:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80235fe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023600:	f7ff fc24 	bl	8022e4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023604:	e70a      	b.n	802341c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023606:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023608:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802360c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802360e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023612:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023614:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023618:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802361a:	141f      	asrs	r7, r3, #16
 802361c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802361e:	141b      	asrs	r3, r3, #16
 8023620:	fb01 3707 	mla	r7, r1, r7, r3
 8023624:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023626:	fa1f fc82 	uxth.w	ip, r2
 802362a:	eb03 0a07 	add.w	sl, r3, r7
 802362e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023632:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023636:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802363a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802363e:	b29b      	uxth	r3, r3
 8023640:	2d00      	cmp	r5, #0
 8023642:	f000 80fe 	beq.w	8023842 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8023646:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802364a:	940c      	str	r4, [sp, #48]	; 0x30
 802364c:	eb0a 0b01 	add.w	fp, sl, r1
 8023650:	fa1f fa85 	uxth.w	sl, r5
 8023654:	fb0a fc0c 	mul.w	ip, sl, ip
 8023658:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802365c:	fa1f fa8a 	uxth.w	sl, sl
 8023660:	eba0 000c 	sub.w	r0, r0, ip
 8023664:	eba3 030a 	sub.w	r3, r3, sl
 8023668:	b280      	uxth	r0, r0
 802366a:	fb08 f000 	mul.w	r0, r8, r0
 802366e:	b29b      	uxth	r3, r3
 8023670:	fb09 0303 	mla	r3, r9, r3, r0
 8023674:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023676:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802367a:	940d      	str	r4, [sp, #52]	; 0x34
 802367c:	fb0a 3300 	mla	r3, sl, r0, r3
 8023680:	fb0c 3304 	mla	r3, ip, r4, r3
 8023684:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023688:	2b00      	cmp	r3, #0
 802368a:	f000 80cc 	beq.w	8023826 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802368e:	9808      	ldr	r0, [sp, #32]
 8023690:	9c08      	ldr	r4, [sp, #32]
 8023692:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023696:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802369a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802369e:	f000 80d5 	beq.w	802384c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80236a2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80236a6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80236aa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80236ae:	fb09 f707 	mul.w	r7, r9, r7
 80236b2:	fb0a fc0c 	mul.w	ip, sl, ip
 80236b6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80236ba:	f107 0b20 	add.w	fp, r7, #32
 80236be:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80236c2:	44cc      	add	ip, r9
 80236c4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80236c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80236cc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80236d0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80236d4:	ea4c 0909 	orr.w	r9, ip, r9
 80236d8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80236dc:	8847      	ldrh	r7, [r0, #2]
 80236de:	d019      	beq.n	8023714 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80236e0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80236e4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80236e8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80236ec:	fb08 f807 	mul.w	r8, r8, r7
 80236f0:	fb0a fc0c 	mul.w	ip, sl, ip
 80236f4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80236f8:	f108 0b20 	add.w	fp, r8, #32
 80236fc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023700:	44bc      	add	ip, r7
 8023702:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023706:	0a3f      	lsrs	r7, r7, #8
 8023708:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802370c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023710:	ea4c 0707 	orr.w	r7, ip, r7
 8023714:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023718:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802371c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023720:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023724:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023728:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802372c:	ea4c 0909 	orr.w	r9, ip, r9
 8023730:	ea4a 0707 	orr.w	r7, sl, r7
 8023734:	2d00      	cmp	r5, #0
 8023736:	f000 808b 	beq.w	8023850 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802373a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802373e:	3901      	subs	r1, #1
 8023740:	0049      	lsls	r1, r1, #1
 8023742:	3102      	adds	r1, #2
 8023744:	eb00 0c01 	add.w	ip, r0, r1
 8023748:	5a41      	ldrh	r1, [r0, r1]
 802374a:	980c      	ldr	r0, [sp, #48]	; 0x30
 802374c:	28ff      	cmp	r0, #255	; 0xff
 802374e:	d019      	beq.n	8023784 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8023750:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023752:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023756:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802375a:	fb04 fa01 	mul.w	sl, r4, r1
 802375e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023762:	fb08 f800 	mul.w	r8, r8, r0
 8023766:	f10a 0020 	add.w	r0, sl, #32
 802376a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802376e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023772:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023776:	4441      	add	r1, r8
 8023778:	0a00      	lsrs	r0, r0, #8
 802377a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802377e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023782:	4301      	orrs	r1, r0
 8023784:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023786:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802378a:	2cff      	cmp	r4, #255	; 0xff
 802378c:	d01a      	beq.n	80237c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802378e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023792:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023796:	fb04 fa00 	mul.w	sl, r4, r0
 802379a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802379e:	fb08 f80c 	mul.w	r8, r8, ip
 80237a2:	f10a 0c20 	add.w	ip, sl, #32
 80237a6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80237aa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80237ae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80237b2:	4440      	add	r0, r8
 80237b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237b8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80237bc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80237c0:	ea40 000c 	orr.w	r0, r0, ip
 80237c4:	fb15 fc02 	smulbb	ip, r5, r2
 80237c8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80237cc:	f1c5 0810 	rsb	r8, r5, #16
 80237d0:	eba8 0802 	sub.w	r8, r8, r2
 80237d4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80237d8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80237dc:	437a      	muls	r2, r7
 80237de:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80237e2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80237e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80237ea:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80237ee:	fb09 2208 	mla	r2, r9, r8, r2
 80237f2:	ea4a 0101 	orr.w	r1, sl, r1
 80237f6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80237fa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80237fe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023802:	fb05 2201 	mla	r2, r5, r1, r2
 8023806:	ea4b 0000 	orr.w	r0, fp, r0
 802380a:	fb0c 2200 	mla	r2, ip, r0, r2
 802380e:	0d57      	lsrs	r7, r2, #21
 8023810:	0952      	lsrs	r2, r2, #5
 8023812:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023816:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802381a:	433a      	orrs	r2, r7
 802381c:	2bff      	cmp	r3, #255	; 0xff
 802381e:	b292      	uxth	r2, r2
 8023820:	d127      	bne.n	8023872 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8023822:	f8ae 2000 	strh.w	r2, [lr]
 8023826:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023828:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802382a:	4413      	add	r3, r2
 802382c:	931d      	str	r3, [sp, #116]	; 0x74
 802382e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023830:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023832:	441a      	add	r2, r3
 8023834:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023836:	921e      	str	r2, [sp, #120]	; 0x78
 8023838:	3b01      	subs	r3, #1
 802383a:	f10e 0e02 	add.w	lr, lr, #2
 802383e:	930f      	str	r3, [sp, #60]	; 0x3c
 8023840:	e627      	b.n	8023492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023842:	fb08 f000 	mul.w	r0, r8, r0
 8023846:	fb09 0303 	mla	r3, r9, r3, r0
 802384a:	e71b      	b.n	8023684 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802384c:	46b9      	mov	r9, r7
 802384e:	e743      	b.n	80236d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8023850:	f1c2 0110 	rsb	r1, r2, #16
 8023854:	437a      	muls	r2, r7
 8023856:	fb09 2901 	mla	r9, r9, r1, r2
 802385a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802385e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023862:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023866:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802386a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802386e:	4302      	orrs	r2, r0
 8023870:	e7d4      	b.n	802381c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8023872:	f8be 7000 	ldrh.w	r7, [lr]
 8023876:	4c1c      	ldr	r4, [pc, #112]	; (80238e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023878:	43db      	mvns	r3, r3
 802387a:	1238      	asrs	r0, r7, #8
 802387c:	fa5f fc83 	uxtb.w	ip, r3
 8023880:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023884:	10fd      	asrs	r5, r7, #3
 8023886:	fb00 f00c 	mul.w	r0, r0, ip
 802388a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802388e:	fb05 f10c 	mul.w	r1, r5, ip
 8023892:	1c45      	adds	r5, r0, #1
 8023894:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023898:	1215      	asrs	r5, r2, #8
 802389a:	f025 0507 	bic.w	r5, r5, #7
 802389e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80238a2:	1c4d      	adds	r5, r1, #1
 80238a4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80238a8:	10d1      	asrs	r1, r2, #3
 80238aa:	f021 0103 	bic.w	r1, r1, #3
 80238ae:	00fb      	lsls	r3, r7, #3
 80238b0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80238b4:	b2db      	uxtb	r3, r3
 80238b6:	b2c0      	uxtb	r0, r0
 80238b8:	00c9      	lsls	r1, r1, #3
 80238ba:	fb03 f30c 	mul.w	r3, r3, ip
 80238be:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80238c2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80238c6:	4308      	orrs	r0, r1
 80238c8:	1c59      	adds	r1, r3, #1
 80238ca:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80238ce:	00d2      	lsls	r2, r2, #3
 80238d0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80238d4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80238d8:	4318      	orrs	r0, r3
 80238da:	f8ae 0000 	strh.w	r0, [lr]
 80238de:	e7a2      	b.n	8023826 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80238e0:	b013      	add	sp, #76	; 0x4c
 80238e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80238e6:	bf00      	nop
 80238e8:	fffff800 	.word	0xfffff800

080238ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80238ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80238f0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80238f4:	fb05 4c03 	mla	ip, r5, r3, r4
 80238f8:	2d00      	cmp	r5, #0
 80238fa:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80238fe:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8023902:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8023906:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802390a:	8808      	ldrh	r0, [r1, #0]
 802390c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8023910:	f2c0 80a7 	blt.w	8023a62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023914:	45aa      	cmp	sl, r5
 8023916:	f340 80a4 	ble.w	8023a62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802391a:	2c00      	cmp	r4, #0
 802391c:	f2c0 809f 	blt.w	8023a5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023920:	42a3      	cmp	r3, r4
 8023922:	f340 809c 	ble.w	8023a5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023926:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802392a:	1c62      	adds	r2, r4, #1
 802392c:	f100 809c 	bmi.w	8023a68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023930:	4293      	cmp	r3, r2
 8023932:	f340 8099 	ble.w	8023a68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023936:	f1b9 0f00 	cmp.w	r9, #0
 802393a:	f000 8095 	beq.w	8023a68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802393e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8023942:	3501      	adds	r5, #1
 8023944:	f100 8094 	bmi.w	8023a70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023948:	45aa      	cmp	sl, r5
 802394a:	f340 8091 	ble.w	8023a70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802394e:	2f00      	cmp	r7, #0
 8023950:	f000 808e 	beq.w	8023a70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023954:	2c00      	cmp	r4, #0
 8023956:	f2c0 8089 	blt.w	8023a6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802395a:	42a3      	cmp	r3, r4
 802395c:	f340 8086 	ble.w	8023a6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023960:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8023964:	3401      	adds	r4, #1
 8023966:	f100 8086 	bmi.w	8023a76 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802396a:	42a3      	cmp	r3, r4
 802396c:	f340 8083 	ble.w	8023a76 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023970:	f1b9 0f00 	cmp.w	r9, #0
 8023974:	d07f      	beq.n	8023a76 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023976:	3301      	adds	r3, #1
 8023978:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802397c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8023980:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023984:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8023988:	fb19 fe07 	smulbb	lr, r9, r7
 802398c:	ea44 0808 	orr.w	r8, r4, r8
 8023990:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023994:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8023998:	f1c7 0210 	rsb	r2, r7, #16
 802399c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80239a0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80239a4:	ea44 0c0c 	orr.w	ip, r4, ip
 80239a8:	eba2 0209 	sub.w	r2, r2, r9
 80239ac:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80239b0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80239b4:	fb04 f40c 	mul.w	r4, r4, ip
 80239b8:	fb02 4808 	mla	r8, r2, r8, r4
 80239bc:	041a      	lsls	r2, r3, #16
 80239be:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80239c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80239c6:	4313      	orrs	r3, r2
 80239c8:	042a      	lsls	r2, r5, #16
 80239ca:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80239ce:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80239d2:	fb0e 8303 	mla	r3, lr, r3, r8
 80239d6:	432a      	orrs	r2, r5
 80239d8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80239dc:	fb07 3202 	mla	r2, r7, r2, r3
 80239e0:	0d53      	lsrs	r3, r2, #21
 80239e2:	0952      	lsrs	r2, r2, #5
 80239e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80239e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80239ec:	431a      	orrs	r2, r3
 80239ee:	b293      	uxth	r3, r2
 80239f0:	b2b4      	uxth	r4, r6
 80239f2:	1202      	asrs	r2, r0, #8
 80239f4:	43f6      	mvns	r6, r6
 80239f6:	b2f6      	uxtb	r6, r6
 80239f8:	121d      	asrs	r5, r3, #8
 80239fa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80239fe:	fb12 f206 	smulbb	r2, r2, r6
 8023a02:	10c7      	asrs	r7, r0, #3
 8023a04:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023a08:	00c0      	lsls	r0, r0, #3
 8023a0a:	fb05 2504 	mla	r5, r5, r4, r2
 8023a0e:	b2c0      	uxtb	r0, r0
 8023a10:	10da      	asrs	r2, r3, #3
 8023a12:	00db      	lsls	r3, r3, #3
 8023a14:	b2db      	uxtb	r3, r3
 8023a16:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023a1a:	fb10 f006 	smulbb	r0, r0, r6
 8023a1e:	b2ad      	uxth	r5, r5
 8023a20:	fb03 0004 	mla	r0, r3, r4, r0
 8023a24:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023a28:	fb17 f706 	smulbb	r7, r7, r6
 8023a2c:	b280      	uxth	r0, r0
 8023a2e:	1c6b      	adds	r3, r5, #1
 8023a30:	fb02 7204 	mla	r2, r2, r4, r7
 8023a34:	b292      	uxth	r2, r2
 8023a36:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023a3a:	1c43      	adds	r3, r0, #1
 8023a3c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023a40:	1c50      	adds	r0, r2, #1
 8023a42:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8023a46:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023a4a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023a4e:	0952      	lsrs	r2, r2, #5
 8023a50:	432b      	orrs	r3, r5
 8023a52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023a56:	4313      	orrs	r3, r2
 8023a58:	800b      	strh	r3, [r1, #0]
 8023a5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023a5e:	4680      	mov	r8, r0
 8023a60:	e763      	b.n	802392a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8023a62:	4684      	mov	ip, r0
 8023a64:	4680      	mov	r8, r0
 8023a66:	e76c      	b.n	8023942 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023a68:	4684      	mov	ip, r0
 8023a6a:	e76a      	b.n	8023942 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023a6c:	4605      	mov	r5, r0
 8023a6e:	e779      	b.n	8023964 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8023a70:	4603      	mov	r3, r0
 8023a72:	4605      	mov	r5, r0
 8023a74:	e782      	b.n	802397c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8023a76:	4603      	mov	r3, r0
 8023a78:	e780      	b.n	802397c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08023a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023a7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023a7e:	b093      	sub	sp, #76	; 0x4c
 8023a80:	461d      	mov	r5, r3
 8023a82:	9210      	str	r2, [sp, #64]	; 0x40
 8023a84:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023a86:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8023a8a:	920b      	str	r2, [sp, #44]	; 0x2c
 8023a8c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8023a90:	910a      	str	r1, [sp, #40]	; 0x28
 8023a92:	6859      	ldr	r1, [r3, #4]
 8023a94:	681b      	ldr	r3, [r3, #0]
 8023a96:	9011      	str	r0, [sp, #68]	; 0x44
 8023a98:	fb01 2707 	mla	r7, r1, r7, r2
 8023a9c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023aa0:	9307      	str	r3, [sp, #28]
 8023aa2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023aa4:	681b      	ldr	r3, [r3, #0]
 8023aa6:	9309      	str	r3, [sp, #36]	; 0x24
 8023aa8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023aaa:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023aae:	43db      	mvns	r3, r3
 8023ab0:	b2db      	uxtb	r3, r3
 8023ab2:	9308      	str	r3, [sp, #32]
 8023ab4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023ab6:	2b00      	cmp	r3, #0
 8023ab8:	dc03      	bgt.n	8023ac2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023aba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023abc:	2b00      	cmp	r3, #0
 8023abe:	f340 8203 	ble.w	8023ec8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023ac2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023ac4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023ac8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023acc:	1e48      	subs	r0, r1, #1
 8023ace:	f102 3cff 	add.w	ip, r2, #4294967295
 8023ad2:	2d00      	cmp	r5, #0
 8023ad4:	f340 80da 	ble.w	8023c8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023ad8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023adc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023ae0:	d406      	bmi.n	8023af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023ae2:	4586      	cmp	lr, r0
 8023ae4:	da04      	bge.n	8023af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023ae6:	2b00      	cmp	r3, #0
 8023ae8:	db02      	blt.n	8023af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023aea:	4563      	cmp	r3, ip
 8023aec:	f2c0 80cf 	blt.w	8023c8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023af0:	f11e 0e01 	adds.w	lr, lr, #1
 8023af4:	f100 80c1 	bmi.w	8023c7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023af8:	4571      	cmp	r1, lr
 8023afa:	f2c0 80be 	blt.w	8023c7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023afe:	3301      	adds	r3, #1
 8023b00:	f100 80bb 	bmi.w	8023c7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023b04:	429a      	cmp	r2, r3
 8023b06:	f2c0 80b8 	blt.w	8023c7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023b0a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023b0e:	46a9      	mov	r9, r5
 8023b10:	f1b9 0f00 	cmp.w	r9, #0
 8023b14:	f340 80d8 	ble.w	8023cc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8023b18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b1a:	1421      	asrs	r1, r4, #16
 8023b1c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023b20:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023b24:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023b28:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023b2c:	f100 8111 	bmi.w	8023d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023b30:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023b34:	4551      	cmp	r1, sl
 8023b36:	f280 810c 	bge.w	8023d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023b3a:	2800      	cmp	r0, #0
 8023b3c:	f2c0 8109 	blt.w	8023d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023b40:	f103 3aff 	add.w	sl, r3, #4294967295
 8023b44:	4550      	cmp	r0, sl
 8023b46:	f280 8104 	bge.w	8023d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023b4a:	fa0f f38e 	sxth.w	r3, lr
 8023b4e:	fb00 1103 	mla	r1, r0, r3, r1
 8023b52:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023b54:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8023b58:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023b5c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023b60:	f1bc 0f00 	cmp.w	ip, #0
 8023b64:	d007      	beq.n	8023b76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8023b66:	005b      	lsls	r3, r3, #1
 8023b68:	eb0a 0003 	add.w	r0, sl, r3
 8023b6c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023b70:	930c      	str	r3, [sp, #48]	; 0x30
 8023b72:	8843      	ldrh	r3, [r0, #2]
 8023b74:	930d      	str	r3, [sp, #52]	; 0x34
 8023b76:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8023b7a:	fb12 f30c 	smulbb	r3, r2, ip
 8023b7e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023b82:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023b86:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023b8a:	10db      	asrs	r3, r3, #3
 8023b8c:	ea40 000e 	orr.w	r0, r0, lr
 8023b90:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023b94:	f1cc 0e10 	rsb	lr, ip, #16
 8023b98:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023b9c:	ebae 0e02 	sub.w	lr, lr, r2
 8023ba0:	ea4a 0101 	orr.w	r1, sl, r1
 8023ba4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023ba8:	4351      	muls	r1, r2
 8023baa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023bac:	9f08      	ldr	r7, [sp, #32]
 8023bae:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023bb2:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023bb6:	0410      	lsls	r0, r2, #16
 8023bb8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023bbc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023bc0:	4310      	orrs	r0, r2
 8023bc2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023bc4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023bc6:	0412      	lsls	r2, r2, #16
 8023bc8:	fb03 e000 	mla	r0, r3, r0, lr
 8023bcc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023bd0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023bd4:	ea42 020e 	orr.w	r2, r2, lr
 8023bd8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023bdc:	fb03 0302 	mla	r3, r3, r2, r0
 8023be0:	0d5a      	lsrs	r2, r3, #21
 8023be2:	095b      	lsrs	r3, r3, #5
 8023be4:	f8b8 0000 	ldrh.w	r0, [r8]
 8023be8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023bec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023bf0:	4313      	orrs	r3, r2
 8023bf2:	b29b      	uxth	r3, r3
 8023bf4:	1201      	asrs	r1, r0, #8
 8023bf6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8023bfa:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023bfe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023c02:	fb11 f107 	smulbb	r1, r1, r7
 8023c06:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8023c0a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023c0e:	00c0      	lsls	r0, r0, #3
 8023c10:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023c14:	b2c0      	uxtb	r0, r0
 8023c16:	10d9      	asrs	r1, r3, #3
 8023c18:	00db      	lsls	r3, r3, #3
 8023c1a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023c1e:	b2db      	uxtb	r3, r3
 8023c20:	fb10 f007 	smulbb	r0, r0, r7
 8023c24:	fa1f fc8c 	uxth.w	ip, ip
 8023c28:	fb03 0302 	mla	r3, r3, r2, r0
 8023c2c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023c30:	fb1e fe07 	smulbb	lr, lr, r7
 8023c34:	fb01 e102 	mla	r1, r1, r2, lr
 8023c38:	b29a      	uxth	r2, r3
 8023c3a:	f10c 0301 	add.w	r3, ip, #1
 8023c3e:	b289      	uxth	r1, r1
 8023c40:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023c44:	1c53      	adds	r3, r2, #1
 8023c46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023c4a:	1c4a      	adds	r2, r1, #1
 8023c4c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023c50:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023c54:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023c58:	0949      	lsrs	r1, r1, #5
 8023c5a:	ea43 030c 	orr.w	r3, r3, ip
 8023c5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023c62:	430b      	orrs	r3, r1
 8023c64:	f8a8 3000 	strh.w	r3, [r8]
 8023c68:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023c6a:	441c      	add	r4, r3
 8023c6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023c6e:	f108 0802 	add.w	r8, r8, #2
 8023c72:	441e      	add	r6, r3
 8023c74:	f109 39ff 	add.w	r9, r9, #4294967295
 8023c78:	e74a      	b.n	8023b10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023c7a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023c7c:	441c      	add	r4, r3
 8023c7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023c80:	441e      	add	r6, r3
 8023c82:	9b07      	ldr	r3, [sp, #28]
 8023c84:	3302      	adds	r3, #2
 8023c86:	3d01      	subs	r5, #1
 8023c88:	9307      	str	r3, [sp, #28]
 8023c8a:	e722      	b.n	8023ad2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023c8c:	d022      	beq.n	8023cd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023c8e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023c90:	1e6b      	subs	r3, r5, #1
 8023c92:	fb00 4003 	mla	r0, r0, r3, r4
 8023c96:	1400      	asrs	r0, r0, #16
 8023c98:	f53f af37 	bmi.w	8023b0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c9c:	3901      	subs	r1, #1
 8023c9e:	4288      	cmp	r0, r1
 8023ca0:	f6bf af33 	bge.w	8023b0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023ca4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023ca6:	fb01 6303 	mla	r3, r1, r3, r6
 8023caa:	141b      	asrs	r3, r3, #16
 8023cac:	f53f af2d 	bmi.w	8023b0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023cb0:	3a01      	subs	r2, #1
 8023cb2:	4293      	cmp	r3, r2
 8023cb4:	f6bf af29 	bge.w	8023b0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023cb8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023cbc:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023cc0:	46a8      	mov	r8, r5
 8023cc2:	f1b8 0f00 	cmp.w	r8, #0
 8023cc6:	dc5e      	bgt.n	8023d86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023cc8:	9b07      	ldr	r3, [sp, #28]
 8023cca:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023cce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023cd2:	9307      	str	r3, [sp, #28]
 8023cd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023cd6:	2b00      	cmp	r3, #0
 8023cd8:	f340 80f6 	ble.w	8023ec8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023cdc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023ce0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023ce4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023ce8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023cea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023cee:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023cf2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023cf6:	eef0 6a62 	vmov.f32	s13, s5
 8023cfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023cfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d02:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023d06:	ee16 4a90 	vmov	r4, s13
 8023d0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023d0e:	eef0 6a43 	vmov.f32	s13, s6
 8023d12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023d16:	ee12 2a90 	vmov	r2, s5
 8023d1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023d1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d22:	ee13 2a10 	vmov	r2, s6
 8023d26:	931f      	str	r3, [sp, #124]	; 0x7c
 8023d28:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d2e:	9320      	str	r3, [sp, #128]	; 0x80
 8023d30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023d32:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023d34:	3b01      	subs	r3, #1
 8023d36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d3a:	930a      	str	r3, [sp, #40]	; 0x28
 8023d3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d3e:	ee16 6a90 	vmov	r6, s13
 8023d42:	bf14      	ite	ne
 8023d44:	461d      	movne	r5, r3
 8023d46:	4615      	moveq	r5, r2
 8023d48:	eeb0 3a67 	vmov.f32	s6, s15
 8023d4c:	eef0 2a47 	vmov.f32	s5, s14
 8023d50:	e6b0      	b.n	8023ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023d52:	f111 0a01 	adds.w	sl, r1, #1
 8023d56:	d487      	bmi.n	8023c68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d58:	45d6      	cmp	lr, sl
 8023d5a:	db85      	blt.n	8023c68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d5c:	f110 0a01 	adds.w	sl, r0, #1
 8023d60:	d482      	bmi.n	8023c68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d62:	4553      	cmp	r3, sl
 8023d64:	db80      	blt.n	8023c68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d66:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023d68:	9101      	str	r1, [sp, #4]
 8023d6a:	b21b      	sxth	r3, r3
 8023d6c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023d70:	9300      	str	r3, [sp, #0]
 8023d72:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023d76:	fa0f f38e 	sxth.w	r3, lr
 8023d7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023d7c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023d7e:	4641      	mov	r1, r8
 8023d80:	f7ff fdb4 	bl	80238ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023d84:	e770      	b.n	8023c68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d88:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023d8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023d8e:	1430      	asrs	r0, r6, #16
 8023d90:	1423      	asrs	r3, r4, #16
 8023d92:	fb01 3000 	mla	r0, r1, r0, r3
 8023d96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d98:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023d9c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023da0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023da4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023da8:	8858      	ldrh	r0, [r3, #2]
 8023daa:	f1be 0f00 	cmp.w	lr, #0
 8023dae:	d00b      	beq.n	8023dc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023db0:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023db4:	3901      	subs	r1, #1
 8023db6:	0049      	lsls	r1, r1, #1
 8023db8:	3102      	adds	r1, #2
 8023dba:	eb03 0b01 	add.w	fp, r3, r1
 8023dbe:	5a5b      	ldrh	r3, [r3, r1]
 8023dc0:	930e      	str	r3, [sp, #56]	; 0x38
 8023dc2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023dc6:	930f      	str	r3, [sp, #60]	; 0x3c
 8023dc8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023dcc:	fb12 f30e 	smulbb	r3, r2, lr
 8023dd0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023dd4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023dd8:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023ddc:	10db      	asrs	r3, r3, #3
 8023dde:	ea41 010c 	orr.w	r1, r1, ip
 8023de2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023de6:	f1ce 0c10 	rsb	ip, lr, #16
 8023dea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023dee:	ebac 0c02 	sub.w	ip, ip, r2
 8023df2:	ea4b 0000 	orr.w	r0, fp, r0
 8023df6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023dfa:	4350      	muls	r0, r2
 8023dfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023dfe:	9f08      	ldr	r7, [sp, #32]
 8023e00:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023e04:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023e08:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023e0c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023e10:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023e12:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023e14:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023e18:	0412      	lsls	r2, r2, #16
 8023e1a:	ea4b 0101 	orr.w	r1, fp, r1
 8023e1e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023e22:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023e26:	fb03 c101 	mla	r1, r3, r1, ip
 8023e2a:	4302      	orrs	r2, r0
 8023e2c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023e30:	fb03 1202 	mla	r2, r3, r2, r1
 8023e34:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8023e38:	0952      	lsrs	r2, r2, #5
 8023e3a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023e3e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023e42:	f8b9 2000 	ldrh.w	r2, [r9]
 8023e46:	ea4b 0303 	orr.w	r3, fp, r3
 8023e4a:	b29b      	uxth	r3, r3
 8023e4c:	1211      	asrs	r1, r2, #8
 8023e4e:	1218      	asrs	r0, r3, #8
 8023e50:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023e54:	fb11 f107 	smulbb	r1, r1, r7
 8023e58:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023e5c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023e60:	00d2      	lsls	r2, r2, #3
 8023e62:	fb00 100a 	mla	r0, r0, sl, r1
 8023e66:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8023e6a:	10d9      	asrs	r1, r3, #3
 8023e6c:	b2d2      	uxtb	r2, r2
 8023e6e:	00db      	lsls	r3, r3, #3
 8023e70:	fb1c fc07 	smulbb	ip, ip, r7
 8023e74:	fb12 f207 	smulbb	r2, r2, r7
 8023e78:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023e7c:	b2db      	uxtb	r3, r3
 8023e7e:	b280      	uxth	r0, r0
 8023e80:	fb01 c10a 	mla	r1, r1, sl, ip
 8023e84:	fb03 230a 	mla	r3, r3, sl, r2
 8023e88:	b29b      	uxth	r3, r3
 8023e8a:	b289      	uxth	r1, r1
 8023e8c:	1c42      	adds	r2, r0, #1
 8023e8e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023e92:	f101 0c01 	add.w	ip, r1, #1
 8023e96:	1c5a      	adds	r2, r3, #1
 8023e98:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023e9c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023ea0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023ea2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023ea6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023eaa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023eae:	4310      	orrs	r0, r2
 8023eb0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023eb4:	441c      	add	r4, r3
 8023eb6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023eb8:	ea40 000c 	orr.w	r0, r0, ip
 8023ebc:	f829 0b02 	strh.w	r0, [r9], #2
 8023ec0:	441e      	add	r6, r3
 8023ec2:	f108 38ff 	add.w	r8, r8, #4294967295
 8023ec6:	e6fc      	b.n	8023cc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023ec8:	b013      	add	sp, #76	; 0x4c
 8023eca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023ece <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023ece:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023ed2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023ed6:	fb0e 4703 	mla	r7, lr, r3, r4
 8023eda:	f1be 0f00 	cmp.w	lr, #0
 8023ede:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023ee2:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8023ee6:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8023eea:	8808      	ldrh	r0, [r1, #0]
 8023eec:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023ef0:	db60      	blt.n	8023fb4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023ef2:	45f1      	cmp	r9, lr
 8023ef4:	dd5e      	ble.n	8023fb4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023ef6:	2c00      	cmp	r4, #0
 8023ef8:	db5a      	blt.n	8023fb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023efa:	42a3      	cmp	r3, r4
 8023efc:	dd58      	ble.n	8023fb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023efe:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023f02:	1c62      	adds	r2, r4, #1
 8023f04:	d459      	bmi.n	8023fba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023f06:	4293      	cmp	r3, r2
 8023f08:	dd57      	ble.n	8023fba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023f0a:	2d00      	cmp	r5, #0
 8023f0c:	d055      	beq.n	8023fba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023f0e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023f12:	f11e 0e01 	adds.w	lr, lr, #1
 8023f16:	d454      	bmi.n	8023fc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023f18:	45f1      	cmp	r9, lr
 8023f1a:	dd52      	ble.n	8023fc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023f1c:	2e00      	cmp	r6, #0
 8023f1e:	d050      	beq.n	8023fc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023f20:	2c00      	cmp	r4, #0
 8023f22:	db4c      	blt.n	8023fbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023f24:	42a3      	cmp	r3, r4
 8023f26:	dd4a      	ble.n	8023fbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023f28:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023f2c:	3401      	adds	r4, #1
 8023f2e:	d405      	bmi.n	8023f3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023f30:	42a3      	cmp	r3, r4
 8023f32:	dd03      	ble.n	8023f3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023f34:	b115      	cbz	r5, 8023f3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023f36:	3301      	adds	r3, #1
 8023f38:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023f3c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023f40:	fb15 f406 	smulbb	r4, r5, r6
 8023f44:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023f48:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023f4c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023f50:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023f54:	ea43 0c0c 	orr.w	ip, r3, ip
 8023f58:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023f5c:	f1c6 0310 	rsb	r3, r6, #16
 8023f60:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023f64:	1b5b      	subs	r3, r3, r5
 8023f66:	ea4e 0707 	orr.w	r7, lr, r7
 8023f6a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023f6e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023f72:	437d      	muls	r5, r7
 8023f74:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023f78:	0403      	lsls	r3, r0, #16
 8023f7a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023f7e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023f82:	4318      	orrs	r0, r3
 8023f84:	0413      	lsls	r3, r2, #16
 8023f86:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023f8a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023f8e:	4313      	orrs	r3, r2
 8023f90:	fb04 c000 	mla	r0, r4, r0, ip
 8023f94:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023f98:	fb06 0003 	mla	r0, r6, r3, r0
 8023f9c:	0d43      	lsrs	r3, r0, #21
 8023f9e:	0940      	lsrs	r0, r0, #5
 8023fa0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023fa4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023fa8:	4318      	orrs	r0, r3
 8023faa:	8008      	strh	r0, [r1, #0]
 8023fac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023fb0:	4684      	mov	ip, r0
 8023fb2:	e7a6      	b.n	8023f02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023fb4:	4607      	mov	r7, r0
 8023fb6:	4684      	mov	ip, r0
 8023fb8:	e7ab      	b.n	8023f12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023fba:	4607      	mov	r7, r0
 8023fbc:	e7a9      	b.n	8023f12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023fbe:	4602      	mov	r2, r0
 8023fc0:	e7b4      	b.n	8023f2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023fc2:	4602      	mov	r2, r0
 8023fc4:	e7ba      	b.n	8023f3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08023fc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023fc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023fca:	b08f      	sub	sp, #60	; 0x3c
 8023fcc:	461d      	mov	r5, r3
 8023fce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023fd0:	920c      	str	r2, [sp, #48]	; 0x30
 8023fd2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8023fd6:	9107      	str	r1, [sp, #28]
 8023fd8:	6859      	ldr	r1, [r3, #4]
 8023fda:	681b      	ldr	r3, [r3, #0]
 8023fdc:	900d      	str	r0, [sp, #52]	; 0x34
 8023fde:	fb01 2707 	mla	r7, r1, r7, r2
 8023fe2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8023fe6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023fe8:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023fec:	f8d3 8000 	ldr.w	r8, [r3]
 8023ff0:	9b07      	ldr	r3, [sp, #28]
 8023ff2:	2b00      	cmp	r3, #0
 8023ff4:	dc03      	bgt.n	8023ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023ff6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023ff8:	2b00      	cmp	r3, #0
 8023ffa:	f340 8181 	ble.w	8024300 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023ffe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024000:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024004:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024008:	1e48      	subs	r0, r1, #1
 802400a:	f102 3cff 	add.w	ip, r2, #4294967295
 802400e:	2d00      	cmp	r5, #0
 8024010:	f340 809b 	ble.w	802414a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8024014:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024018:	ea4f 4326 	mov.w	r3, r6, asr #16
 802401c:	d406      	bmi.n	802402c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802401e:	4586      	cmp	lr, r0
 8024020:	da04      	bge.n	802402c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024022:	2b00      	cmp	r3, #0
 8024024:	db02      	blt.n	802402c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024026:	4563      	cmp	r3, ip
 8024028:	f2c0 8090 	blt.w	802414c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802402c:	f11e 0e01 	adds.w	lr, lr, #1
 8024030:	f100 8084 	bmi.w	802413c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024034:	4571      	cmp	r1, lr
 8024036:	f2c0 8081 	blt.w	802413c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802403a:	3301      	adds	r3, #1
 802403c:	d47e      	bmi.n	802413c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802403e:	429a      	cmp	r2, r3
 8024040:	db7c      	blt.n	802413c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024042:	46aa      	mov	sl, r5
 8024044:	46b9      	mov	r9, r7
 8024046:	f1ba 0f00 	cmp.w	sl, #0
 802404a:	f340 8099 	ble.w	8024180 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802404e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024050:	1421      	asrs	r1, r4, #16
 8024052:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024056:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802405a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802405e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024062:	f100 80d0 	bmi.w	8024206 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024066:	f10e 3bff 	add.w	fp, lr, #4294967295
 802406a:	4559      	cmp	r1, fp
 802406c:	f280 80cb 	bge.w	8024206 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024070:	2800      	cmp	r0, #0
 8024072:	f2c0 80c8 	blt.w	8024206 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024076:	f103 3bff 	add.w	fp, r3, #4294967295
 802407a:	4558      	cmp	r0, fp
 802407c:	f280 80c3 	bge.w	8024206 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024080:	fa0f fe8e 	sxth.w	lr, lr
 8024084:	fb00 110e 	mla	r1, r0, lr, r1
 8024088:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802408c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8024090:	8841      	ldrh	r1, [r0, #2]
 8024092:	f1bc 0f00 	cmp.w	ip, #0
 8024096:	d00b      	beq.n	80240b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8024098:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 802409c:	3b01      	subs	r3, #1
 802409e:	005b      	lsls	r3, r3, #1
 80240a0:	3302      	adds	r3, #2
 80240a2:	eb00 0e03 	add.w	lr, r0, r3
 80240a6:	5ac3      	ldrh	r3, [r0, r3]
 80240a8:	9308      	str	r3, [sp, #32]
 80240aa:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80240ae:	9309      	str	r3, [sp, #36]	; 0x24
 80240b0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80240b4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80240b8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80240bc:	ea40 000b 	orr.w	r0, r0, fp
 80240c0:	fb12 f30c 	smulbb	r3, r2, ip
 80240c4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80240c8:	10db      	asrs	r3, r3, #3
 80240ca:	f1cc 0e10 	rsb	lr, ip, #16
 80240ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80240d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80240d6:	ebae 0e02 	sub.w	lr, lr, r2
 80240da:	ea4b 0101 	orr.w	r1, fp, r1
 80240de:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80240e2:	4351      	muls	r1, r2
 80240e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80240e6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80240ea:	fb0e 1e00 	mla	lr, lr, r0, r1
 80240ee:	0410      	lsls	r0, r2, #16
 80240f0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80240f4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80240f8:	4310      	orrs	r0, r2
 80240fa:	9a08      	ldr	r2, [sp, #32]
 80240fc:	9908      	ldr	r1, [sp, #32]
 80240fe:	0412      	lsls	r2, r2, #16
 8024100:	fb03 e000 	mla	r0, r3, r0, lr
 8024104:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024108:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802410c:	ea42 020e 	orr.w	r2, r2, lr
 8024110:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024114:	fb03 0302 	mla	r3, r3, r2, r0
 8024118:	0d5a      	lsrs	r2, r3, #21
 802411a:	095b      	lsrs	r3, r3, #5
 802411c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024120:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024124:	4313      	orrs	r3, r2
 8024126:	f8a9 3000 	strh.w	r3, [r9]
 802412a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802412c:	441c      	add	r4, r3
 802412e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024130:	f109 0902 	add.w	r9, r9, #2
 8024134:	441e      	add	r6, r3
 8024136:	f10a 3aff 	add.w	sl, sl, #4294967295
 802413a:	e784      	b.n	8024046 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802413c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802413e:	441c      	add	r4, r3
 8024140:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024142:	3d01      	subs	r5, #1
 8024144:	441e      	add	r6, r3
 8024146:	3702      	adds	r7, #2
 8024148:	e761      	b.n	802400e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802414a:	d01d      	beq.n	8024188 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802414c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802414e:	1e6b      	subs	r3, r5, #1
 8024150:	fb00 4003 	mla	r0, r0, r3, r4
 8024154:	1400      	asrs	r0, r0, #16
 8024156:	f53f af74 	bmi.w	8024042 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802415a:	3901      	subs	r1, #1
 802415c:	4288      	cmp	r0, r1
 802415e:	f6bf af70 	bge.w	8024042 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024162:	991c      	ldr	r1, [sp, #112]	; 0x70
 8024164:	fb01 6303 	mla	r3, r1, r3, r6
 8024168:	141b      	asrs	r3, r3, #16
 802416a:	f53f af6a 	bmi.w	8024042 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802416e:	3a01      	subs	r2, #1
 8024170:	4293      	cmp	r3, r2
 8024172:	f6bf af66 	bge.w	8024042 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024176:	46a9      	mov	r9, r5
 8024178:	46ba      	mov	sl, r7
 802417a:	f1b9 0f00 	cmp.w	r9, #0
 802417e:	dc5a      	bgt.n	8024236 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8024180:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024184:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8024188:	9b07      	ldr	r3, [sp, #28]
 802418a:	2b00      	cmp	r3, #0
 802418c:	f340 80b8 	ble.w	8024300 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024190:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024194:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024198:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802419c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802419e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80241a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80241a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80241aa:	eef0 6a62 	vmov.f32	s13, s5
 80241ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80241b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80241b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80241ba:	ee16 4a90 	vmov	r4, s13
 80241be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80241c2:	eef0 6a43 	vmov.f32	s13, s6
 80241c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80241ca:	ee12 2a90 	vmov	r2, s5
 80241ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80241d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80241d6:	ee13 2a10 	vmov	r2, s6
 80241da:	931b      	str	r3, [sp, #108]	; 0x6c
 80241dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80241de:	fb92 f3f3 	sdiv	r3, r2, r3
 80241e2:	931c      	str	r3, [sp, #112]	; 0x70
 80241e4:	9b07      	ldr	r3, [sp, #28]
 80241e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80241e8:	3b01      	subs	r3, #1
 80241ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80241ee:	9307      	str	r3, [sp, #28]
 80241f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80241f2:	ee16 6a90 	vmov	r6, s13
 80241f6:	bf14      	ite	ne
 80241f8:	461d      	movne	r5, r3
 80241fa:	4615      	moveq	r5, r2
 80241fc:	eeb0 3a67 	vmov.f32	s6, s15
 8024200:	eef0 2a47 	vmov.f32	s5, s14
 8024204:	e6f4      	b.n	8023ff0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8024206:	f111 0b01 	adds.w	fp, r1, #1
 802420a:	d48e      	bmi.n	802412a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802420c:	45de      	cmp	lr, fp
 802420e:	db8c      	blt.n	802412a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024210:	f110 0b01 	adds.w	fp, r0, #1
 8024214:	d489      	bmi.n	802412a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024216:	455b      	cmp	r3, fp
 8024218:	db87      	blt.n	802412a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802421a:	b21b      	sxth	r3, r3
 802421c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024220:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024224:	9300      	str	r3, [sp, #0]
 8024226:	4642      	mov	r2, r8
 8024228:	fa0f f38e 	sxth.w	r3, lr
 802422c:	4649      	mov	r1, r9
 802422e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024230:	f7ff fe4d 	bl	8023ece <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024234:	e779      	b.n	802412a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024236:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024238:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802423c:	1420      	asrs	r0, r4, #16
 802423e:	1431      	asrs	r1, r6, #16
 8024240:	fb03 0101 	mla	r1, r3, r1, r0
 8024244:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024248:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802424c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024250:	8841      	ldrh	r1, [r0, #2]
 8024252:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024256:	f1be 0f00 	cmp.w	lr, #0
 802425a:	d00b      	beq.n	8024274 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802425c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024260:	3b01      	subs	r3, #1
 8024262:	005b      	lsls	r3, r3, #1
 8024264:	3302      	adds	r3, #2
 8024266:	eb00 0b03 	add.w	fp, r0, r3
 802426a:	5ac3      	ldrh	r3, [r0, r3]
 802426c:	930a      	str	r3, [sp, #40]	; 0x28
 802426e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024272:	930b      	str	r3, [sp, #44]	; 0x2c
 8024274:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8024278:	fb12 f30e 	smulbb	r3, r2, lr
 802427c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024280:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024284:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024288:	10db      	asrs	r3, r3, #3
 802428a:	ea40 000c 	orr.w	r0, r0, ip
 802428e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024292:	f1ce 0c10 	rsb	ip, lr, #16
 8024296:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802429a:	ebac 0c02 	sub.w	ip, ip, r2
 802429e:	ea4b 0101 	orr.w	r1, fp, r1
 80242a2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80242a6:	4351      	muls	r1, r2
 80242a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80242aa:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80242ae:	fb0c 1c00 	mla	ip, ip, r0, r1
 80242b2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80242b6:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80242ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80242bc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80242be:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80242c2:	0412      	lsls	r2, r2, #16
 80242c4:	ea4b 0000 	orr.w	r0, fp, r0
 80242c8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80242cc:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80242d0:	fb03 c000 	mla	r0, r3, r0, ip
 80242d4:	ea42 0b0b 	orr.w	fp, r2, fp
 80242d8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80242dc:	fb03 000b 	mla	r0, r3, fp, r0
 80242e0:	0d43      	lsrs	r3, r0, #21
 80242e2:	0940      	lsrs	r0, r0, #5
 80242e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80242e8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80242ec:	4318      	orrs	r0, r3
 80242ee:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80242f0:	f82a 0b02 	strh.w	r0, [sl], #2
 80242f4:	441c      	add	r4, r3
 80242f6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80242f8:	f109 39ff 	add.w	r9, r9, #4294967295
 80242fc:	441e      	add	r6, r3
 80242fe:	e73c      	b.n	802417a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024300:	b00f      	add	sp, #60	; 0x3c
 8024302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024306 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8024306:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802430a:	b085      	sub	sp, #20
 802430c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024310:	9102      	str	r1, [sp, #8]
 8024312:	2c00      	cmp	r4, #0
 8024314:	fb04 7103 	mla	r1, r4, r3, r7
 8024318:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802431c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024320:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024324:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024328:	f2c0 811b 	blt.w	8024562 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802432c:	45a6      	cmp	lr, r4
 802432e:	f340 8118 	ble.w	8024562 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024332:	2f00      	cmp	r7, #0
 8024334:	f2c0 8113 	blt.w	802455e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024338:	42bb      	cmp	r3, r7
 802433a:	f340 8110 	ble.w	802455e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802433e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024342:	1c7a      	adds	r2, r7, #1
 8024344:	f100 8110 	bmi.w	8024568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024348:	4293      	cmp	r3, r2
 802434a:	f340 810d 	ble.w	8024568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802434e:	2e00      	cmp	r6, #0
 8024350:	f000 810c 	beq.w	802456c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024354:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024358:	3401      	adds	r4, #1
 802435a:	f100 810b 	bmi.w	8024574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802435e:	45a6      	cmp	lr, r4
 8024360:	f340 8108 	ble.w	8024574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024364:	2800      	cmp	r0, #0
 8024366:	f000 8108 	beq.w	802457a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802436a:	2f00      	cmp	r7, #0
 802436c:	f2c0 8100 	blt.w	8024570 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024370:	42bb      	cmp	r3, r7
 8024372:	f340 80fd 	ble.w	8024570 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024376:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802437a:	3701      	adds	r7, #1
 802437c:	f100 8100 	bmi.w	8024580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024380:	42bb      	cmp	r3, r7
 8024382:	f340 80fd 	ble.w	8024580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024386:	2e00      	cmp	r6, #0
 8024388:	f000 80fc 	beq.w	8024584 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802438c:	3301      	adds	r3, #1
 802438e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024392:	b2b6      	uxth	r6, r6
 8024394:	b280      	uxth	r0, r0
 8024396:	fb00 fe06 	mul.w	lr, r0, r6
 802439a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802439e:	0136      	lsls	r6, r6, #4
 80243a0:	eba6 070e 	sub.w	r7, r6, lr
 80243a4:	b280      	uxth	r0, r0
 80243a6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80243aa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80243ae:	b2bf      	uxth	r7, r7
 80243b0:	1a1b      	subs	r3, r3, r0
 80243b2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80243b6:	b29b      	uxth	r3, r3
 80243b8:	fb0a f607 	mul.w	r6, sl, r7
 80243bc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80243c0:	fb0b 6603 	mla	r6, fp, r3, r6
 80243c4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80243c8:	fb00 6609 	mla	r6, r0, r9, r6
 80243cc:	fb0e 6608 	mla	r6, lr, r8, r6
 80243d0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80243d4:	9600      	str	r6, [sp, #0]
 80243d6:	2e00      	cmp	r6, #0
 80243d8:	f000 80be 	beq.w	8024558 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80243dc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80243e0:	fb0b fc0c 	mul.w	ip, fp, ip
 80243e4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80243e8:	fb0b f505 	mul.w	r5, fp, r5
 80243ec:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80243f0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80243f4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80243f8:	44dc      	add	ip, fp
 80243fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80243fe:	9501      	str	r5, [sp, #4]
 8024400:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024404:	9503      	str	r5, [sp, #12]
 8024406:	9d01      	ldr	r5, [sp, #4]
 8024408:	9e02      	ldr	r6, [sp, #8]
 802440a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802440e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024412:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024416:	fb0a fc0c 	mul.w	ip, sl, ip
 802441a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802441e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024422:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024426:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802442a:	4465      	add	r5, ip
 802442c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024430:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024434:	fb09 fc0c 	mul.w	ip, r9, ip
 8024438:	fb09 f904 	mul.w	r9, r9, r4
 802443c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024440:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024444:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024448:	fb08 f404 	mul.w	r4, r8, r4
 802444c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024450:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024454:	fb08 f802 	mul.w	r8, r8, r2
 8024458:	fb0a fa01 	mul.w	sl, sl, r1
 802445c:	0a22      	lsrs	r2, r4, #8
 802445e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024462:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024466:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802446a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802446e:	4414      	add	r4, r2
 8024470:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024474:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024478:	0a2d      	lsrs	r5, r5, #8
 802447a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802447e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024482:	9a03      	ldr	r2, [sp, #12]
 8024484:	8836      	ldrh	r6, [r6, #0]
 8024486:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802448a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802448e:	437d      	muls	r5, r7
 8024490:	4461      	add	r1, ip
 8024492:	0a24      	lsrs	r4, r4, #8
 8024494:	fb02 5503 	mla	r5, r2, r3, r5
 8024498:	0a09      	lsrs	r1, r1, #8
 802449a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802449e:	fb04 540e 	mla	r4, r4, lr, r5
 80244a2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80244a6:	fb01 4100 	mla	r1, r1, r0, r4
 80244aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244ae:	0a09      	lsrs	r1, r1, #8
 80244b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244b4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80244b8:	fb07 f70a 	mul.w	r7, r7, sl
 80244bc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80244c0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80244c4:	fb03 7101 	mla	r1, r3, r1, r7
 80244c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80244cc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80244d0:	fb0e 1e08 	mla	lr, lr, r8, r1
 80244d4:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80244d8:	fb00 e101 	mla	r1, r0, r1, lr
 80244dc:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80244e0:	9a00      	ldr	r2, [sp, #0]
 80244e2:	b287      	uxth	r7, r0
 80244e4:	437a      	muls	r2, r7
 80244e6:	0a09      	lsrs	r1, r1, #8
 80244e8:	1c53      	adds	r3, r2, #1
 80244ea:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80244ee:	4321      	orrs	r1, r4
 80244f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80244f4:	1235      	asrs	r5, r6, #8
 80244f6:	0c0a      	lsrs	r2, r1, #16
 80244f8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80244fc:	b2db      	uxtb	r3, r3
 80244fe:	fb12 f207 	smulbb	r2, r2, r7
 8024502:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024506:	fb05 2503 	mla	r5, r5, r3, r2
 802450a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802450e:	10f2      	asrs	r2, r6, #3
 8024510:	b2c8      	uxtb	r0, r1
 8024512:	00f6      	lsls	r6, r6, #3
 8024514:	fb14 f407 	smulbb	r4, r4, r7
 8024518:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802451c:	b2f6      	uxtb	r6, r6
 802451e:	fb10 f007 	smulbb	r0, r0, r7
 8024522:	fb02 4203 	mla	r2, r2, r3, r4
 8024526:	b2ad      	uxth	r5, r5
 8024528:	fb06 0303 	mla	r3, r6, r3, r0
 802452c:	b299      	uxth	r1, r3
 802452e:	b294      	uxth	r4, r2
 8024530:	1c6b      	adds	r3, r5, #1
 8024532:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024536:	1c62      	adds	r2, r4, #1
 8024538:	1c4b      	adds	r3, r1, #1
 802453a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802453e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024542:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024546:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802454a:	0952      	lsrs	r2, r2, #5
 802454c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024550:	432b      	orrs	r3, r5
 8024552:	4313      	orrs	r3, r2
 8024554:	9a02      	ldr	r2, [sp, #8]
 8024556:	8013      	strh	r3, [r2, #0]
 8024558:	b005      	add	sp, #20
 802455a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802455e:	2500      	movs	r5, #0
 8024560:	e6ef      	b.n	8024342 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8024562:	2100      	movs	r1, #0
 8024564:	460d      	mov	r5, r1
 8024566:	e6f7      	b.n	8024358 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024568:	2100      	movs	r1, #0
 802456a:	e6f5      	b.n	8024358 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802456c:	4631      	mov	r1, r6
 802456e:	e6f3      	b.n	8024358 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024570:	2400      	movs	r4, #0
 8024572:	e702      	b.n	802437a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8024574:	2200      	movs	r2, #0
 8024576:	4614      	mov	r4, r2
 8024578:	e70b      	b.n	8024392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802457a:	4602      	mov	r2, r0
 802457c:	4604      	mov	r4, r0
 802457e:	e708      	b.n	8024392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024580:	2200      	movs	r2, #0
 8024582:	e706      	b.n	8024392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024584:	4632      	mov	r2, r6
 8024586:	e704      	b.n	8024392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08024588 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802458c:	b09d      	sub	sp, #116	; 0x74
 802458e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8024592:	9219      	str	r2, [sp, #100]	; 0x64
 8024594:	9307      	str	r3, [sp, #28]
 8024596:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8024598:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802459c:	931a      	str	r3, [sp, #104]	; 0x68
 802459e:	9117      	str	r1, [sp, #92]	; 0x5c
 80245a0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80245a4:	901b      	str	r0, [sp, #108]	; 0x6c
 80245a6:	6850      	ldr	r0, [r2, #4]
 80245a8:	6812      	ldr	r2, [r2, #0]
 80245aa:	fb00 1303 	mla	r3, r0, r3, r1
 80245ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80245b2:	930a      	str	r3, [sp, #40]	; 0x28
 80245b4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80245b6:	681b      	ldr	r3, [r3, #0]
 80245b8:	9310      	str	r3, [sp, #64]	; 0x40
 80245ba:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80245be:	930b      	str	r3, [sp, #44]	; 0x2c
 80245c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80245c2:	2b00      	cmp	r3, #0
 80245c4:	dc03      	bgt.n	80245ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80245c6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80245c8:	2b00      	cmp	r3, #0
 80245ca:	f340 8375 	ble.w	8024cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80245ce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80245d0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80245d4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80245d8:	1e48      	subs	r0, r1, #1
 80245da:	1e57      	subs	r7, r2, #1
 80245dc:	9b07      	ldr	r3, [sp, #28]
 80245de:	2b00      	cmp	r3, #0
 80245e0:	f340 818e 	ble.w	8024900 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80245e4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80245e8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80245ec:	d406      	bmi.n	80245fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80245ee:	4584      	cmp	ip, r0
 80245f0:	da04      	bge.n	80245fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80245f2:	2b00      	cmp	r3, #0
 80245f4:	db02      	blt.n	80245fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80245f6:	42bb      	cmp	r3, r7
 80245f8:	f2c0 8183 	blt.w	8024902 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80245fc:	f11c 0c01 	adds.w	ip, ip, #1
 8024600:	f100 8173 	bmi.w	80248ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024604:	4561      	cmp	r1, ip
 8024606:	f2c0 8170 	blt.w	80248ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802460a:	3301      	adds	r3, #1
 802460c:	f100 816d 	bmi.w	80248ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024610:	429a      	cmp	r2, r3
 8024612:	f2c0 816a 	blt.w	80248ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024616:	9b07      	ldr	r3, [sp, #28]
 8024618:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802461a:	9318      	str	r3, [sp, #96]	; 0x60
 802461c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802461e:	2b00      	cmp	r3, #0
 8024620:	f340 818c 	ble.w	802493c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024624:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8024626:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024628:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802462c:	689b      	ldr	r3, [r3, #8]
 802462e:	1422      	asrs	r2, r4, #16
 8024630:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024634:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024638:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802463c:	f100 81cd 	bmi.w	80249da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024640:	f103 38ff 	add.w	r8, r3, #4294967295
 8024644:	4542      	cmp	r2, r8
 8024646:	f280 81c8 	bge.w	80249da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802464a:	f1bc 0f00 	cmp.w	ip, #0
 802464e:	f2c0 81c4 	blt.w	80249da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024652:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024656:	45c4      	cmp	ip, r8
 8024658:	f280 81bf 	bge.w	80249da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802465c:	b21b      	sxth	r3, r3
 802465e:	fb0c 2203 	mla	r2, ip, r3, r2
 8024662:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024664:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024668:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802466c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024670:	2800      	cmp	r0, #0
 8024672:	f000 81a9 	beq.w	80249c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8024676:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802467a:	950c      	str	r5, [sp, #48]	; 0x30
 802467c:	0e2d      	lsrs	r5, r5, #24
 802467e:	9513      	str	r5, [sp, #76]	; 0x4c
 8024680:	b181      	cbz	r1, 80246a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024682:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024686:	3b01      	subs	r3, #1
 8024688:	009b      	lsls	r3, r3, #2
 802468a:	3304      	adds	r3, #4
 802468c:	eb08 0c03 	add.w	ip, r8, r3
 8024690:	f858 3003 	ldr.w	r3, [r8, r3]
 8024694:	9308      	str	r3, [sp, #32]
 8024696:	0e1b      	lsrs	r3, r3, #24
 8024698:	9311      	str	r3, [sp, #68]	; 0x44
 802469a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802469e:	930d      	str	r3, [sp, #52]	; 0x34
 80246a0:	0e1b      	lsrs	r3, r3, #24
 80246a2:	9314      	str	r3, [sp, #80]	; 0x50
 80246a4:	b280      	uxth	r0, r0
 80246a6:	b289      	uxth	r1, r1
 80246a8:	fb00 f901 	mul.w	r9, r0, r1
 80246ac:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80246b0:	0100      	lsls	r0, r0, #4
 80246b2:	eba0 0809 	sub.w	r8, r0, r9
 80246b6:	b289      	uxth	r1, r1
 80246b8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80246bc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80246be:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80246c0:	fa1f f888 	uxth.w	r8, r8
 80246c4:	1a5b      	subs	r3, r3, r1
 80246c6:	b29b      	uxth	r3, r3
 80246c8:	fb08 f000 	mul.w	r0, r8, r0
 80246cc:	fb03 000e 	mla	r0, r3, lr, r0
 80246d0:	fb01 0005 	mla	r0, r1, r5, r0
 80246d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80246d6:	fb09 0005 	mla	r0, r9, r5, r0
 80246da:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80246de:	2800      	cmp	r0, #0
 80246e0:	f000 80fa 	beq.w	80248d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80246e4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80246e8:	d01b      	beq.n	8024722 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80246ea:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80246ee:	fb0e fa0a 	mul.w	sl, lr, sl
 80246f2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80246f6:	fb0e fe02 	mul.w	lr, lr, r2
 80246fa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80246fe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024702:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024706:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802470a:	4452      	add	r2, sl
 802470c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024710:	0a12      	lsrs	r2, r2, #8
 8024712:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024716:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802471a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802471e:	ea42 020c 	orr.w	r2, r2, ip
 8024722:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024724:	2dff      	cmp	r5, #255	; 0xff
 8024726:	d021      	beq.n	802476c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024728:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802472a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802472e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024730:	fb05 fb0b 	mul.w	fp, r5, fp
 8024734:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024736:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802473a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802473c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024740:	fb05 fa0a 	mul.w	sl, r5, sl
 8024744:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024748:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802474c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024750:	44de      	add	lr, fp
 8024752:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024756:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802475a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802475e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024762:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024766:	ea4e 050a 	orr.w	r5, lr, sl
 802476a:	950c      	str	r5, [sp, #48]	; 0x30
 802476c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802476e:	2dff      	cmp	r5, #255	; 0xff
 8024770:	d021      	beq.n	80247b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8024772:	9d08      	ldr	r5, [sp, #32]
 8024774:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024778:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802477a:	fb05 fb0b 	mul.w	fp, r5, fp
 802477e:	9d08      	ldr	r5, [sp, #32]
 8024780:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024784:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024786:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802478a:	fb05 fa0a 	mul.w	sl, r5, sl
 802478e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024792:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024796:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802479a:	44de      	add	lr, fp
 802479c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80247a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80247a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80247a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80247b0:	ea4e 050a 	orr.w	r5, lr, sl
 80247b4:	9508      	str	r5, [sp, #32]
 80247b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80247b8:	2dff      	cmp	r5, #255	; 0xff
 80247ba:	d021      	beq.n	8024800 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80247bc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80247be:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80247c2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80247c4:	fb05 fb0b 	mul.w	fp, r5, fp
 80247c8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80247ca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80247ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80247d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80247d4:	fb05 fa0a 	mul.w	sl, r5, sl
 80247d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80247e0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80247e4:	44de      	add	lr, fp
 80247e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80247ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80247ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80247f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80247fa:	ea4e 050a 	orr.w	r5, lr, sl
 80247fe:	950d      	str	r5, [sp, #52]	; 0x34
 8024800:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024802:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024806:	9d08      	ldr	r5, [sp, #32]
 8024808:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802480c:	fb08 fc0c 	mul.w	ip, r8, ip
 8024810:	fb03 cc0e 	mla	ip, r3, lr, ip
 8024814:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024818:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802481a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802481e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024822:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024824:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024828:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802482c:	fb08 f80e 	mul.w	r8, r8, lr
 8024830:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024834:	fb03 8202 	mla	r2, r3, r2, r8
 8024838:	9b08      	ldr	r3, [sp, #32]
 802483a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802483c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8024840:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024842:	fb01 220a 	mla	r2, r1, sl, r2
 8024846:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802484a:	fb09 2901 	mla	r9, r9, r1, r2
 802484e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024850:	883b      	ldrh	r3, [r7, #0]
 8024852:	4342      	muls	r2, r0
 8024854:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024858:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802485c:	1c50      	adds	r0, r2, #1
 802485e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024862:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024866:	ea4c 0c09 	orr.w	ip, ip, r9
 802486a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802486e:	1219      	asrs	r1, r3, #8
 8024870:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024874:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024878:	b2c0      	uxtb	r0, r0
 802487a:	fb12 f205 	smulbb	r2, r2, r5
 802487e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024882:	fb01 2100 	mla	r1, r1, r0, r2
 8024886:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802488a:	10da      	asrs	r2, r3, #3
 802488c:	fa5f fc8c 	uxtb.w	ip, ip
 8024890:	00db      	lsls	r3, r3, #3
 8024892:	fb1c fc05 	smulbb	ip, ip, r5
 8024896:	b2db      	uxtb	r3, r3
 8024898:	b289      	uxth	r1, r1
 802489a:	fb03 c300 	mla	r3, r3, r0, ip
 802489e:	fa1f fc83 	uxth.w	ip, r3
 80248a2:	1c4b      	adds	r3, r1, #1
 80248a4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80248a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80248ac:	fb1e fe05 	smulbb	lr, lr, r5
 80248b0:	f10c 0301 	add.w	r3, ip, #1
 80248b4:	fb02 e200 	mla	r2, r2, r0, lr
 80248b8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80248bc:	b292      	uxth	r2, r2
 80248be:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80248c2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80248c6:	430b      	orrs	r3, r1
 80248c8:	1c51      	adds	r1, r2, #1
 80248ca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80248ce:	0952      	lsrs	r2, r2, #5
 80248d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80248d4:	4313      	orrs	r3, r2
 80248d6:	803b      	strh	r3, [r7, #0]
 80248d8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80248da:	441c      	add	r4, r3
 80248dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80248de:	441e      	add	r6, r3
 80248e0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80248e2:	3b01      	subs	r3, #1
 80248e4:	3702      	adds	r7, #2
 80248e6:	9318      	str	r3, [sp, #96]	; 0x60
 80248e8:	e698      	b.n	802461c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80248ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80248ec:	441c      	add	r4, r3
 80248ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80248f0:	441e      	add	r6, r3
 80248f2:	9b07      	ldr	r3, [sp, #28]
 80248f4:	3b01      	subs	r3, #1
 80248f6:	9307      	str	r3, [sp, #28]
 80248f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80248fa:	3302      	adds	r3, #2
 80248fc:	930a      	str	r3, [sp, #40]	; 0x28
 80248fe:	e66d      	b.n	80245dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8024900:	d023      	beq.n	802494a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024902:	9b07      	ldr	r3, [sp, #28]
 8024904:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8024906:	3b01      	subs	r3, #1
 8024908:	fb00 4003 	mla	r0, r0, r3, r4
 802490c:	1400      	asrs	r0, r0, #16
 802490e:	f53f ae82 	bmi.w	8024616 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024912:	3901      	subs	r1, #1
 8024914:	4288      	cmp	r0, r1
 8024916:	f6bf ae7e 	bge.w	8024616 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802491a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802491c:	fb01 6303 	mla	r3, r1, r3, r6
 8024920:	141b      	asrs	r3, r3, #16
 8024922:	f53f ae78 	bmi.w	8024616 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024926:	3a01      	subs	r2, #1
 8024928:	4293      	cmp	r3, r2
 802492a:	f6bf ae74 	bge.w	8024616 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802492e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024932:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024936:	f1bb 0f00 	cmp.w	fp, #0
 802493a:	dc6c      	bgt.n	8024a16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802493c:	9b07      	ldr	r3, [sp, #28]
 802493e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024942:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024944:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024948:	930a      	str	r3, [sp, #40]	; 0x28
 802494a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802494c:	2b00      	cmp	r3, #0
 802494e:	f340 81b3 	ble.w	8024cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024952:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024956:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802495a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802495e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024960:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024964:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024968:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802496c:	eef0 6a62 	vmov.f32	s13, s5
 8024970:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024974:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024978:	ee77 2a62 	vsub.f32	s5, s14, s5
 802497c:	ee16 4a90 	vmov	r4, s13
 8024980:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024984:	eef0 6a43 	vmov.f32	s13, s6
 8024988:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802498c:	ee12 2a90 	vmov	r2, s5
 8024990:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024994:	fb92 f3f3 	sdiv	r3, r2, r3
 8024998:	ee13 2a10 	vmov	r2, s6
 802499c:	9329      	str	r3, [sp, #164]	; 0xa4
 802499e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80249a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80249a4:	932a      	str	r3, [sp, #168]	; 0xa8
 80249a6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80249a8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80249aa:	3b01      	subs	r3, #1
 80249ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80249b0:	9317      	str	r3, [sp, #92]	; 0x5c
 80249b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80249b4:	bf08      	it	eq
 80249b6:	4613      	moveq	r3, r2
 80249b8:	ee16 6a90 	vmov	r6, s13
 80249bc:	9307      	str	r3, [sp, #28]
 80249be:	eeb0 3a67 	vmov.f32	s6, s15
 80249c2:	eef0 2a47 	vmov.f32	s5, s14
 80249c6:	e5fb      	b.n	80245c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80249c8:	2900      	cmp	r1, #0
 80249ca:	f43f ae6b 	beq.w	80246a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80249ce:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80249d2:	9308      	str	r3, [sp, #32]
 80249d4:	0e1b      	lsrs	r3, r3, #24
 80249d6:	9311      	str	r3, [sp, #68]	; 0x44
 80249d8:	e664      	b.n	80246a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80249da:	f112 0801 	adds.w	r8, r2, #1
 80249de:	f53f af7b 	bmi.w	80248d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80249e2:	4543      	cmp	r3, r8
 80249e4:	f6ff af78 	blt.w	80248d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80249e8:	f11c 0801 	adds.w	r8, ip, #1
 80249ec:	f53f af74 	bmi.w	80248d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80249f0:	45c6      	cmp	lr, r8
 80249f2:	f6ff af71 	blt.w	80248d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80249f6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80249f8:	9201      	str	r2, [sp, #4]
 80249fa:	fa0f f28e 	sxth.w	r2, lr
 80249fe:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8024a02:	e9cd c002 	strd	ip, r0, [sp, #8]
 8024a06:	9200      	str	r2, [sp, #0]
 8024a08:	b21b      	sxth	r3, r3
 8024a0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024a0c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024a0e:	4639      	mov	r1, r7
 8024a10:	f7ff fc79 	bl	8024306 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024a14:	e760      	b.n	80248d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024a16:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024a18:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024a1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024a1e:	1427      	asrs	r7, r4, #16
 8024a20:	1433      	asrs	r3, r6, #16
 8024a22:	fb01 7303 	mla	r3, r1, r3, r7
 8024a26:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8024a2a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024a2e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024a32:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024a36:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024a3a:	2a00      	cmp	r2, #0
 8024a3c:	f000 8133 	beq.w	8024ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024a40:	687d      	ldr	r5, [r7, #4]
 8024a42:	950e      	str	r5, [sp, #56]	; 0x38
 8024a44:	0e2d      	lsrs	r5, r5, #24
 8024a46:	9515      	str	r5, [sp, #84]	; 0x54
 8024a48:	b178      	cbz	r0, 8024a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024a4a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8024a4e:	3901      	subs	r1, #1
 8024a50:	0089      	lsls	r1, r1, #2
 8024a52:	3104      	adds	r1, #4
 8024a54:	eb07 0e01 	add.w	lr, r7, r1
 8024a58:	5879      	ldr	r1, [r7, r1]
 8024a5a:	9109      	str	r1, [sp, #36]	; 0x24
 8024a5c:	0e09      	lsrs	r1, r1, #24
 8024a5e:	9112      	str	r1, [sp, #72]	; 0x48
 8024a60:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024a64:	910f      	str	r1, [sp, #60]	; 0x3c
 8024a66:	0e09      	lsrs	r1, r1, #24
 8024a68:	9116      	str	r1, [sp, #88]	; 0x58
 8024a6a:	b292      	uxth	r2, r2
 8024a6c:	b280      	uxth	r0, r0
 8024a6e:	fb02 f800 	mul.w	r8, r2, r0
 8024a72:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024a76:	0112      	lsls	r2, r2, #4
 8024a78:	eba2 0e08 	sub.w	lr, r2, r8
 8024a7c:	b280      	uxth	r0, r0
 8024a7e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024a82:	9915      	ldr	r1, [sp, #84]	; 0x54
 8024a84:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a86:	fa1f fe8e 	uxth.w	lr, lr
 8024a8a:	1a12      	subs	r2, r2, r0
 8024a8c:	b292      	uxth	r2, r2
 8024a8e:	fb0e f101 	mul.w	r1, lr, r1
 8024a92:	fb02 110c 	mla	r1, r2, ip, r1
 8024a96:	fb00 1105 	mla	r1, r0, r5, r1
 8024a9a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024a9c:	fb08 1105 	mla	r1, r8, r5, r1
 8024aa0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024aa4:	2900      	cmp	r1, #0
 8024aa6:	f000 80f5 	beq.w	8024c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8024aaa:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024aae:	d019      	beq.n	8024ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024ab0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024ab4:	fb0c fa0a 	mul.w	sl, ip, sl
 8024ab8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024abc:	fb0c fc03 	mul.w	ip, ip, r3
 8024ac0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024ac4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024ac8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024acc:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024ad0:	4453      	add	r3, sl
 8024ad2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024ad6:	0a1b      	lsrs	r3, r3, #8
 8024ad8:	0a3f      	lsrs	r7, r7, #8
 8024ada:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024ade:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024ae2:	433b      	orrs	r3, r7
 8024ae4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024ae6:	2dff      	cmp	r5, #255	; 0xff
 8024ae8:	d020      	beq.n	8024b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8024aea:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024aec:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024af0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024af2:	436f      	muls	r7, r5
 8024af4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024af6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024afa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024afc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b00:	fb05 fa0a 	mul.w	sl, r5, sl
 8024b04:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b0c:	44bc      	add	ip, r7
 8024b0e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b12:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b1e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b22:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b26:	ea4c 050a 	orr.w	r5, ip, sl
 8024b2a:	950e      	str	r5, [sp, #56]	; 0x38
 8024b2c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024b2e:	2dff      	cmp	r5, #255	; 0xff
 8024b30:	d020      	beq.n	8024b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024b32:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024b34:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024b38:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024b3a:	436f      	muls	r7, r5
 8024b3c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024b3e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024b42:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024b44:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b48:	fb05 fa0a 	mul.w	sl, r5, sl
 8024b4c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b54:	44bc      	add	ip, r7
 8024b56:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b5a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b6a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b6e:	ea4c 050a 	orr.w	r5, ip, sl
 8024b72:	9509      	str	r5, [sp, #36]	; 0x24
 8024b74:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024b76:	2dff      	cmp	r5, #255	; 0xff
 8024b78:	d020      	beq.n	8024bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8024b7a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024b7c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024b80:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024b82:	436f      	muls	r7, r5
 8024b84:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024b86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024b8a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024b8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b90:	fb05 fa0a 	mul.w	sl, r5, sl
 8024b94:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b9c:	44bc      	add	ip, r7
 8024b9e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024ba2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024ba6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024baa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024bae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024bb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024bb6:	ea4c 050a 	orr.w	r5, ip, sl
 8024bba:	950f      	str	r5, [sp, #60]	; 0x3c
 8024bbc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024bbe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024bc2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024bc4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024bc8:	fb0e f707 	mul.w	r7, lr, r7
 8024bcc:	fb02 770c 	mla	r7, r2, ip, r7
 8024bd0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024bd4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024bd6:	fb00 770c 	mla	r7, r0, ip, r7
 8024bda:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024bde:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024be0:	fb08 770c 	mla	r7, r8, ip, r7
 8024be4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024be8:	fb0e fe0c 	mul.w	lr, lr, ip
 8024bec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024bf0:	fb02 e303 	mla	r3, r2, r3, lr
 8024bf4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024bf6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024bf8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024bfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024bfe:	fb00 330a 	mla	r3, r0, sl, r3
 8024c02:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024c06:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024c0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024c0c:	f8b9 0000 	ldrh.w	r0, [r9]
 8024c10:	4359      	muls	r1, r3
 8024c12:	0a3f      	lsrs	r7, r7, #8
 8024c14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c18:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024c1c:	1c4b      	adds	r3, r1, #1
 8024c1e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024c22:	ea47 070c 	orr.w	r7, r7, ip
 8024c26:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024c2a:	1202      	asrs	r2, r0, #8
 8024c2c:	0c3b      	lsrs	r3, r7, #16
 8024c2e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024c32:	b2c9      	uxtb	r1, r1
 8024c34:	fb13 f305 	smulbb	r3, r3, r5
 8024c38:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024c3c:	fb02 3201 	mla	r2, r2, r1, r3
 8024c40:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024c44:	10c3      	asrs	r3, r0, #3
 8024c46:	b2ff      	uxtb	r7, r7
 8024c48:	00c0      	lsls	r0, r0, #3
 8024c4a:	b2c0      	uxtb	r0, r0
 8024c4c:	fb17 f705 	smulbb	r7, r7, r5
 8024c50:	fb00 7001 	mla	r0, r0, r1, r7
 8024c54:	b292      	uxth	r2, r2
 8024c56:	fb1c fc05 	smulbb	ip, ip, r5
 8024c5a:	b280      	uxth	r0, r0
 8024c5c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024c60:	fb03 c301 	mla	r3, r3, r1, ip
 8024c64:	1c51      	adds	r1, r2, #1
 8024c66:	f100 0c01 	add.w	ip, r0, #1
 8024c6a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024c6e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024c72:	b29b      	uxth	r3, r3
 8024c74:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024c78:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024c7c:	ea4c 0202 	orr.w	r2, ip, r2
 8024c80:	f103 0c01 	add.w	ip, r3, #1
 8024c84:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024c88:	095b      	lsrs	r3, r3, #5
 8024c8a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024c8e:	431a      	orrs	r2, r3
 8024c90:	f8a9 2000 	strh.w	r2, [r9]
 8024c94:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024c96:	441c      	add	r4, r3
 8024c98:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024c9a:	f109 0902 	add.w	r9, r9, #2
 8024c9e:	441e      	add	r6, r3
 8024ca0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024ca4:	e647      	b.n	8024936 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024ca6:	2800      	cmp	r0, #0
 8024ca8:	f43f aedf 	beq.w	8024a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024cac:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024cb0:	9109      	str	r1, [sp, #36]	; 0x24
 8024cb2:	0e09      	lsrs	r1, r1, #24
 8024cb4:	9112      	str	r1, [sp, #72]	; 0x48
 8024cb6:	e6d8      	b.n	8024a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024cb8:	b01d      	add	sp, #116	; 0x74
 8024cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024cbe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024cbe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024cc2:	b085      	sub	sp, #20
 8024cc4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024cc8:	9102      	str	r1, [sp, #8]
 8024cca:	2c00      	cmp	r4, #0
 8024ccc:	fb04 7103 	mla	r1, r4, r3, r7
 8024cd0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024cd4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024cd8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024cdc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024ce0:	f2c0 810c 	blt.w	8024efc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024ce4:	45a6      	cmp	lr, r4
 8024ce6:	f340 8109 	ble.w	8024efc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024cea:	2f00      	cmp	r7, #0
 8024cec:	f2c0 8104 	blt.w	8024ef8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024cf0:	42bb      	cmp	r3, r7
 8024cf2:	f340 8101 	ble.w	8024ef8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024cf6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024cfa:	1c7a      	adds	r2, r7, #1
 8024cfc:	f100 8101 	bmi.w	8024f02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024d00:	4293      	cmp	r3, r2
 8024d02:	f340 80fe 	ble.w	8024f02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024d06:	2e00      	cmp	r6, #0
 8024d08:	f000 80fd 	beq.w	8024f06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024d0c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024d10:	3401      	adds	r4, #1
 8024d12:	f100 80fc 	bmi.w	8024f0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024d16:	45a6      	cmp	lr, r4
 8024d18:	f340 80f9 	ble.w	8024f0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024d1c:	2800      	cmp	r0, #0
 8024d1e:	f000 80f9 	beq.w	8024f14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024d22:	2f00      	cmp	r7, #0
 8024d24:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024d28:	f2c0 80ef 	blt.w	8024f0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024d2c:	42bb      	cmp	r3, r7
 8024d2e:	f340 80ec 	ble.w	8024f0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024d32:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024d36:	3701      	adds	r7, #1
 8024d38:	f100 80ef 	bmi.w	8024f1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024d3c:	42bb      	cmp	r3, r7
 8024d3e:	f340 80ec 	ble.w	8024f1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024d42:	2e00      	cmp	r6, #0
 8024d44:	f000 80eb 	beq.w	8024f1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024d48:	6852      	ldr	r2, [r2, #4]
 8024d4a:	b2b6      	uxth	r6, r6
 8024d4c:	b280      	uxth	r0, r0
 8024d4e:	fb00 fe06 	mul.w	lr, r0, r6
 8024d52:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024d56:	0136      	lsls	r6, r6, #4
 8024d58:	eba6 070e 	sub.w	r7, r6, lr
 8024d5c:	b280      	uxth	r0, r0
 8024d5e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024d62:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024d66:	b2bf      	uxth	r7, r7
 8024d68:	1a1b      	subs	r3, r3, r0
 8024d6a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024d6e:	b29b      	uxth	r3, r3
 8024d70:	fb07 f60a 	mul.w	r6, r7, sl
 8024d74:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024d78:	fb0b 6603 	mla	r6, fp, r3, r6
 8024d7c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024d80:	fb00 6609 	mla	r6, r0, r9, r6
 8024d84:	fb0e 6608 	mla	r6, lr, r8, r6
 8024d88:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024d8c:	9600      	str	r6, [sp, #0]
 8024d8e:	2e00      	cmp	r6, #0
 8024d90:	f000 80af 	beq.w	8024ef2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024d94:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024d98:	fb0b fc0c 	mul.w	ip, fp, ip
 8024d9c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024da0:	fb0b f505 	mul.w	r5, fp, r5
 8024da4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024da8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024dac:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024db0:	44dc      	add	ip, fp
 8024db2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024db6:	9501      	str	r5, [sp, #4]
 8024db8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024dbc:	9503      	str	r5, [sp, #12]
 8024dbe:	9d01      	ldr	r5, [sp, #4]
 8024dc0:	9e02      	ldr	r6, [sp, #8]
 8024dc2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024dc6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024dca:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024dce:	fb0a fc0c 	mul.w	ip, sl, ip
 8024dd2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024dd6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024dda:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024dde:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024de2:	4465      	add	r5, ip
 8024de4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024de8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024dec:	fb09 fc0c 	mul.w	ip, r9, ip
 8024df0:	fb09 f904 	mul.w	r9, r9, r4
 8024df4:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024df8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024dfc:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024e00:	fb08 f404 	mul.w	r4, r8, r4
 8024e04:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024e08:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024e0c:	fb08 f802 	mul.w	r8, r8, r2
 8024e10:	fb0a fa01 	mul.w	sl, sl, r1
 8024e14:	0a22      	lsrs	r2, r4, #8
 8024e16:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024e1a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024e1e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024e22:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024e26:	4414      	add	r4, r2
 8024e28:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024e2c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024e30:	0a2d      	lsrs	r5, r5, #8
 8024e32:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024e36:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024e3a:	9a03      	ldr	r2, [sp, #12]
 8024e3c:	8836      	ldrh	r6, [r6, #0]
 8024e3e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024e42:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024e46:	437d      	muls	r5, r7
 8024e48:	4461      	add	r1, ip
 8024e4a:	0a24      	lsrs	r4, r4, #8
 8024e4c:	fb02 5503 	mla	r5, r2, r3, r5
 8024e50:	0a09      	lsrs	r1, r1, #8
 8024e52:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024e56:	fb04 540e 	mla	r4, r4, lr, r5
 8024e5a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024e5e:	fb01 4100 	mla	r1, r1, r0, r4
 8024e62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e66:	0a09      	lsrs	r1, r1, #8
 8024e68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e6c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024e70:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024e74:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024e78:	fb07 f70a 	mul.w	r7, r7, sl
 8024e7c:	fb03 7101 	mla	r1, r3, r1, r7
 8024e80:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024e84:	9b00      	ldr	r3, [sp, #0]
 8024e86:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024e8a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024e8e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024e92:	fb00 e101 	mla	r1, r0, r1, lr
 8024e96:	43da      	mvns	r2, r3
 8024e98:	1233      	asrs	r3, r6, #8
 8024e9a:	b2d2      	uxtb	r2, r2
 8024e9c:	10f0      	asrs	r0, r6, #3
 8024e9e:	0a09      	lsrs	r1, r1, #8
 8024ea0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024ea4:	00f6      	lsls	r6, r6, #3
 8024ea6:	4353      	muls	r3, r2
 8024ea8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024eac:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024eb0:	b2f6      	uxtb	r6, r6
 8024eb2:	4321      	orrs	r1, r4
 8024eb4:	4350      	muls	r0, r2
 8024eb6:	4356      	muls	r6, r2
 8024eb8:	1c5a      	adds	r2, r3, #1
 8024eba:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024ebe:	0c0b      	lsrs	r3, r1, #16
 8024ec0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024ec4:	1c42      	adds	r2, r0, #1
 8024ec6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024eca:	0a0a      	lsrs	r2, r1, #8
 8024ecc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024ed0:	021b      	lsls	r3, r3, #8
 8024ed2:	00d2      	lsls	r2, r2, #3
 8024ed4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024ed8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024edc:	4313      	orrs	r3, r2
 8024ede:	1c72      	adds	r2, r6, #1
 8024ee0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024ee4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8024ee8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024eec:	4319      	orrs	r1, r3
 8024eee:	9b02      	ldr	r3, [sp, #8]
 8024ef0:	8019      	strh	r1, [r3, #0]
 8024ef2:	b005      	add	sp, #20
 8024ef4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024ef8:	2500      	movs	r5, #0
 8024efa:	e6fe      	b.n	8024cfa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024efc:	2100      	movs	r1, #0
 8024efe:	460d      	mov	r5, r1
 8024f00:	e706      	b.n	8024d10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024f02:	2100      	movs	r1, #0
 8024f04:	e704      	b.n	8024d10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024f06:	4631      	mov	r1, r6
 8024f08:	e702      	b.n	8024d10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024f0a:	2400      	movs	r4, #0
 8024f0c:	e713      	b.n	8024d36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024f0e:	2200      	movs	r2, #0
 8024f10:	4614      	mov	r4, r2
 8024f12:	e71a      	b.n	8024d4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024f14:	4602      	mov	r2, r0
 8024f16:	4604      	mov	r4, r0
 8024f18:	e717      	b.n	8024d4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024f1a:	2200      	movs	r2, #0
 8024f1c:	e715      	b.n	8024d4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024f1e:	4632      	mov	r2, r6
 8024f20:	e713      	b.n	8024d4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024f24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f28:	b09b      	sub	sp, #108	; 0x6c
 8024f2a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024f2e:	9218      	str	r2, [sp, #96]	; 0x60
 8024f30:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024f32:	9116      	str	r1, [sp, #88]	; 0x58
 8024f34:	9307      	str	r3, [sp, #28]
 8024f36:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024f3a:	9019      	str	r0, [sp, #100]	; 0x64
 8024f3c:	6850      	ldr	r0, [r2, #4]
 8024f3e:	6812      	ldr	r2, [r2, #0]
 8024f40:	fb00 1303 	mla	r3, r0, r3, r1
 8024f44:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024f48:	930a      	str	r3, [sp, #40]	; 0x28
 8024f4a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f4c:	681b      	ldr	r3, [r3, #0]
 8024f4e:	930f      	str	r3, [sp, #60]	; 0x3c
 8024f50:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024f52:	2b00      	cmp	r3, #0
 8024f54:	dc03      	bgt.n	8024f5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024f56:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024f58:	2b00      	cmp	r3, #0
 8024f5a:	f340 8386 	ble.w	802566a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024f5e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024f64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024f68:	1e48      	subs	r0, r1, #1
 8024f6a:	1e57      	subs	r7, r2, #1
 8024f6c:	9b07      	ldr	r3, [sp, #28]
 8024f6e:	2b00      	cmp	r3, #0
 8024f70:	f340 8166 	ble.w	8025240 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024f74:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024f78:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024f7c:	d406      	bmi.n	8024f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024f7e:	4584      	cmp	ip, r0
 8024f80:	da04      	bge.n	8024f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024f82:	2b00      	cmp	r3, #0
 8024f84:	db02      	blt.n	8024f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024f86:	42bb      	cmp	r3, r7
 8024f88:	f2c0 815b 	blt.w	8025242 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024f8c:	f11c 0c01 	adds.w	ip, ip, #1
 8024f90:	f100 814b 	bmi.w	802522a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024f94:	4561      	cmp	r1, ip
 8024f96:	f2c0 8148 	blt.w	802522a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024f9a:	3301      	adds	r3, #1
 8024f9c:	f100 8145 	bmi.w	802522a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024fa0:	429a      	cmp	r2, r3
 8024fa2:	f2c0 8142 	blt.w	802522a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024fa6:	9b07      	ldr	r3, [sp, #28]
 8024fa8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024faa:	9317      	str	r3, [sp, #92]	; 0x5c
 8024fac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024fae:	2b00      	cmp	r3, #0
 8024fb0:	f340 8165 	ble.w	802527e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024fb4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8024fb6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024fb8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024fbc:	689b      	ldr	r3, [r3, #8]
 8024fbe:	1422      	asrs	r2, r4, #16
 8024fc0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024fc4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024fc8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024fcc:	f100 81d5 	bmi.w	802537a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024fd0:	f103 38ff 	add.w	r8, r3, #4294967295
 8024fd4:	4542      	cmp	r2, r8
 8024fd6:	f280 81d0 	bge.w	802537a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024fda:	f1bc 0f00 	cmp.w	ip, #0
 8024fde:	f2c0 81cc 	blt.w	802537a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024fe2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024fe6:	45c4      	cmp	ip, r8
 8024fe8:	f280 81c7 	bge.w	802537a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024fec:	b21b      	sxth	r3, r3
 8024fee:	fb0c 2203 	mla	r2, ip, r3, r2
 8024ff2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024ff4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024ff8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024ffc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025000:	2900      	cmp	r1, #0
 8025002:	f000 8182 	beq.w	802530a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8025006:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802500a:	950b      	str	r5, [sp, #44]	; 0x2c
 802500c:	0e2d      	lsrs	r5, r5, #24
 802500e:	9512      	str	r5, [sp, #72]	; 0x48
 8025010:	b180      	cbz	r0, 8025034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025012:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025016:	3b01      	subs	r3, #1
 8025018:	009b      	lsls	r3, r3, #2
 802501a:	3304      	adds	r3, #4
 802501c:	eb08 0c03 	add.w	ip, r8, r3
 8025020:	f858 3003 	ldr.w	r3, [r8, r3]
 8025024:	9308      	str	r3, [sp, #32]
 8025026:	0e1b      	lsrs	r3, r3, #24
 8025028:	9310      	str	r3, [sp, #64]	; 0x40
 802502a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802502e:	930c      	str	r3, [sp, #48]	; 0x30
 8025030:	0e1b      	lsrs	r3, r3, #24
 8025032:	9313      	str	r3, [sp, #76]	; 0x4c
 8025034:	b289      	uxth	r1, r1
 8025036:	b280      	uxth	r0, r0
 8025038:	fb01 f900 	mul.w	r9, r1, r0
 802503c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025040:	0109      	lsls	r1, r1, #4
 8025042:	eba1 0809 	sub.w	r8, r1, r9
 8025046:	b280      	uxth	r0, r0
 8025048:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 802504c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802504e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025050:	fa1f f888 	uxth.w	r8, r8
 8025054:	1a09      	subs	r1, r1, r0
 8025056:	b289      	uxth	r1, r1
 8025058:	fb08 f303 	mul.w	r3, r8, r3
 802505c:	fb01 330e 	mla	r3, r1, lr, r3
 8025060:	fb00 3305 	mla	r3, r0, r5, r3
 8025064:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025066:	fb09 3305 	mla	r3, r9, r5, r3
 802506a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802506e:	2b00      	cmp	r3, #0
 8025070:	f000 80d2 	beq.w	8025218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025074:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025078:	d01b      	beq.n	80250b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802507a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802507e:	fb0e fa0a 	mul.w	sl, lr, sl
 8025082:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025086:	fb0e fe02 	mul.w	lr, lr, r2
 802508a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802508e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025092:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025096:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802509a:	4452      	add	r2, sl
 802509c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80250a0:	0a12      	lsrs	r2, r2, #8
 80250a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80250a6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80250aa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80250ae:	ea42 020c 	orr.w	r2, r2, ip
 80250b2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80250b4:	2dff      	cmp	r5, #255	; 0xff
 80250b6:	d021      	beq.n	80250fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80250b8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80250ba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80250be:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80250c0:	fb05 fb0b 	mul.w	fp, r5, fp
 80250c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80250c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80250ca:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80250cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80250d0:	fb05 fa0a 	mul.w	sl, r5, sl
 80250d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250d8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80250dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80250e0:	44de      	add	lr, fp
 80250e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80250e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80250ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80250ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80250f6:	ea4e 050a 	orr.w	r5, lr, sl
 80250fa:	950b      	str	r5, [sp, #44]	; 0x2c
 80250fc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80250fe:	2dff      	cmp	r5, #255	; 0xff
 8025100:	d021      	beq.n	8025146 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025102:	9d08      	ldr	r5, [sp, #32]
 8025104:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025108:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802510a:	fb05 fb0b 	mul.w	fp, r5, fp
 802510e:	9d08      	ldr	r5, [sp, #32]
 8025110:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025114:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025116:	fb05 fa0e 	mul.w	sl, r5, lr
 802511a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802511e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025122:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025126:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802512a:	44de      	add	lr, fp
 802512c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025130:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025134:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025138:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802513c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025140:	ea4e 050a 	orr.w	r5, lr, sl
 8025144:	9508      	str	r5, [sp, #32]
 8025146:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025148:	2dff      	cmp	r5, #255	; 0xff
 802514a:	d021      	beq.n	8025190 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 802514c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802514e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025152:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025154:	fb05 fb0b 	mul.w	fp, r5, fp
 8025158:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802515a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802515e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025160:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025164:	fb05 fa0a 	mul.w	sl, r5, sl
 8025168:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802516c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025170:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025174:	44de      	add	lr, fp
 8025176:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802517a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802517e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025182:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025186:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802518a:	ea4e 050a 	orr.w	r5, lr, sl
 802518e:	950c      	str	r5, [sp, #48]	; 0x30
 8025190:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025192:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025196:	9d08      	ldr	r5, [sp, #32]
 8025198:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802519c:	fb08 fc0c 	mul.w	ip, r8, ip
 80251a0:	fb01 cc0e 	mla	ip, r1, lr, ip
 80251a4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80251a8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80251aa:	fb00 cc0e 	mla	ip, r0, lr, ip
 80251ae:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80251b2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80251b4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80251b8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80251bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80251c0:	fb08 f80e 	mul.w	r8, r8, lr
 80251c4:	fb01 8202 	mla	r2, r1, r2, r8
 80251c8:	9908      	ldr	r1, [sp, #32]
 80251ca:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80251ce:	990c      	ldr	r1, [sp, #48]	; 0x30
 80251d0:	fb00 220a 	mla	r2, r0, sl, r2
 80251d4:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80251d8:	fb09 2900 	mla	r9, r9, r0, r2
 80251dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80251e0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80251e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80251e8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80251ec:	ea4c 0c09 	orr.w	ip, ip, r9
 80251f0:	2bff      	cmp	r3, #255	; 0xff
 80251f2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80251f6:	f040 8091 	bne.w	802531c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80251fa:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80251fe:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8025202:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025206:	f022 0207 	bic.w	r2, r2, #7
 802520a:	431a      	orrs	r2, r3
 802520c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025210:	ea4c 0c02 	orr.w	ip, ip, r2
 8025214:	f8a7 c000 	strh.w	ip, [r7]
 8025218:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802521a:	441c      	add	r4, r3
 802521c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802521e:	441e      	add	r6, r3
 8025220:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025222:	3b01      	subs	r3, #1
 8025224:	3702      	adds	r7, #2
 8025226:	9317      	str	r3, [sp, #92]	; 0x5c
 8025228:	e6c0      	b.n	8024fac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802522a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802522c:	441c      	add	r4, r3
 802522e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025230:	441e      	add	r6, r3
 8025232:	9b07      	ldr	r3, [sp, #28]
 8025234:	3b01      	subs	r3, #1
 8025236:	9307      	str	r3, [sp, #28]
 8025238:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802523a:	3302      	adds	r3, #2
 802523c:	930a      	str	r3, [sp, #40]	; 0x28
 802523e:	e695      	b.n	8024f6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025240:	d024      	beq.n	802528c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025242:	9b07      	ldr	r3, [sp, #28]
 8025244:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025246:	3b01      	subs	r3, #1
 8025248:	fb00 4003 	mla	r0, r0, r3, r4
 802524c:	1400      	asrs	r0, r0, #16
 802524e:	f53f aeaa 	bmi.w	8024fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025252:	3901      	subs	r1, #1
 8025254:	4288      	cmp	r0, r1
 8025256:	f6bf aea6 	bge.w	8024fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802525a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802525c:	fb01 6303 	mla	r3, r1, r3, r6
 8025260:	141b      	asrs	r3, r3, #16
 8025262:	f53f aea0 	bmi.w	8024fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025266:	3a01      	subs	r2, #1
 8025268:	4293      	cmp	r3, r2
 802526a:	f6bf ae9c 	bge.w	8024fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802526e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025272:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8025276:	f1bb 0f00 	cmp.w	fp, #0
 802527a:	f300 809a 	bgt.w	80253b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802527e:	9b07      	ldr	r3, [sp, #28]
 8025280:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025284:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025286:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802528a:	930a      	str	r3, [sp, #40]	; 0x28
 802528c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802528e:	2b00      	cmp	r3, #0
 8025290:	f340 81eb 	ble.w	802566a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025294:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025298:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802529c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80252a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80252a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80252a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80252aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80252ae:	eef0 6a62 	vmov.f32	s13, s5
 80252b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80252b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80252be:	ee16 4a90 	vmov	r4, s13
 80252c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80252c6:	eef0 6a43 	vmov.f32	s13, s6
 80252ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80252ce:	ee12 2a90 	vmov	r2, s5
 80252d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80252d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80252da:	ee13 2a10 	vmov	r2, s6
 80252de:	9327      	str	r3, [sp, #156]	; 0x9c
 80252e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80252e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80252e6:	9328      	str	r3, [sp, #160]	; 0xa0
 80252e8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80252ea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80252ec:	3b01      	subs	r3, #1
 80252ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252f2:	9316      	str	r3, [sp, #88]	; 0x58
 80252f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80252f6:	bf08      	it	eq
 80252f8:	4613      	moveq	r3, r2
 80252fa:	ee16 6a90 	vmov	r6, s13
 80252fe:	9307      	str	r3, [sp, #28]
 8025300:	eeb0 3a67 	vmov.f32	s6, s15
 8025304:	eef0 2a47 	vmov.f32	s5, s14
 8025308:	e622      	b.n	8024f50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802530a:	2800      	cmp	r0, #0
 802530c:	f43f ae92 	beq.w	8025034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025310:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025314:	9308      	str	r3, [sp, #32]
 8025316:	0e1b      	lsrs	r3, r3, #24
 8025318:	9310      	str	r3, [sp, #64]	; 0x40
 802531a:	e68b      	b.n	8025034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802531c:	8839      	ldrh	r1, [r7, #0]
 802531e:	4dd4      	ldr	r5, [pc, #848]	; (8025670 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025320:	43db      	mvns	r3, r3
 8025322:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8025326:	fa5f f883 	uxtb.w	r8, r3
 802532a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802532e:	fb0e fe08 	mul.w	lr, lr, r8
 8025332:	10c8      	asrs	r0, r1, #3
 8025334:	00cb      	lsls	r3, r1, #3
 8025336:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802533a:	f10e 0101 	add.w	r1, lr, #1
 802533e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025342:	fb00 f008 	mul.w	r0, r0, r8
 8025346:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802534a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802534e:	f100 0e01 	add.w	lr, r0, #1
 8025352:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8025356:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802535a:	b2db      	uxtb	r3, r3
 802535c:	b2c9      	uxtb	r1, r1
 802535e:	00d2      	lsls	r2, r2, #3
 8025360:	fb03 f308 	mul.w	r3, r3, r8
 8025364:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8025368:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802536c:	430a      	orrs	r2, r1
 802536e:	1c59      	adds	r1, r3, #1
 8025370:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025374:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8025378:	e748      	b.n	802520c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802537a:	f112 0801 	adds.w	r8, r2, #1
 802537e:	f53f af4b 	bmi.w	8025218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025382:	4543      	cmp	r3, r8
 8025384:	f6ff af48 	blt.w	8025218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025388:	f11c 0801 	adds.w	r8, ip, #1
 802538c:	f53f af44 	bmi.w	8025218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025390:	45c6      	cmp	lr, r8
 8025392:	f6ff af41 	blt.w	8025218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025396:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802539a:	fa0f f28e 	sxth.w	r2, lr
 802539e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80253a2:	9200      	str	r2, [sp, #0]
 80253a4:	b21b      	sxth	r3, r3
 80253a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80253a8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80253aa:	4639      	mov	r1, r7
 80253ac:	f7ff fc87 	bl	8024cbe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80253b0:	e732      	b.n	8025218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80253b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80253b4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80253b6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80253ba:	1421      	asrs	r1, r4, #16
 80253bc:	1433      	asrs	r3, r6, #16
 80253be:	fb07 1303 	mla	r3, r7, r3, r1
 80253c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80253c4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80253c8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80253cc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80253d0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80253d4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80253d8:	2a00      	cmp	r2, #0
 80253da:	f000 8107 	beq.w	80255ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80253de:	684d      	ldr	r5, [r1, #4]
 80253e0:	950d      	str	r5, [sp, #52]	; 0x34
 80253e2:	0e2d      	lsrs	r5, r5, #24
 80253e4:	9514      	str	r5, [sp, #80]	; 0x50
 80253e6:	b178      	cbz	r0, 8025408 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80253e8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80253ec:	3f01      	subs	r7, #1
 80253ee:	00bf      	lsls	r7, r7, #2
 80253f0:	3704      	adds	r7, #4
 80253f2:	eb01 0e07 	add.w	lr, r1, r7
 80253f6:	59c9      	ldr	r1, [r1, r7]
 80253f8:	9109      	str	r1, [sp, #36]	; 0x24
 80253fa:	0e09      	lsrs	r1, r1, #24
 80253fc:	9111      	str	r1, [sp, #68]	; 0x44
 80253fe:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025402:	910e      	str	r1, [sp, #56]	; 0x38
 8025404:	0e09      	lsrs	r1, r1, #24
 8025406:	9115      	str	r1, [sp, #84]	; 0x54
 8025408:	b292      	uxth	r2, r2
 802540a:	b280      	uxth	r0, r0
 802540c:	fb02 f900 	mul.w	r9, r2, r0
 8025410:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025414:	0112      	lsls	r2, r2, #4
 8025416:	eba2 0e09 	sub.w	lr, r2, r9
 802541a:	b280      	uxth	r0, r0
 802541c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025420:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025422:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025424:	fa1f fe8e 	uxth.w	lr, lr
 8025428:	1a09      	subs	r1, r1, r0
 802542a:	b289      	uxth	r1, r1
 802542c:	fb0e f202 	mul.w	r2, lr, r2
 8025430:	fb01 220c 	mla	r2, r1, ip, r2
 8025434:	fb00 2205 	mla	r2, r0, r5, r2
 8025438:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802543a:	fb09 2205 	mla	r2, r9, r5, r2
 802543e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025442:	2a00      	cmp	r2, #0
 8025444:	f000 80c9 	beq.w	80255da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025448:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802544c:	d019      	beq.n	8025482 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802544e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025452:	fb0c fa0a 	mul.w	sl, ip, sl
 8025456:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802545a:	fb0c fc03 	mul.w	ip, ip, r3
 802545e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025462:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025466:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802546a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802546e:	4453      	add	r3, sl
 8025470:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025474:	0a1b      	lsrs	r3, r3, #8
 8025476:	0a3f      	lsrs	r7, r7, #8
 8025478:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802547c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025480:	433b      	orrs	r3, r7
 8025482:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025484:	2dff      	cmp	r5, #255	; 0xff
 8025486:	d020      	beq.n	80254ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8025488:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802548a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802548e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025490:	436f      	muls	r7, r5
 8025492:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025494:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025498:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802549a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802549e:	fb05 fa0a 	mul.w	sl, r5, sl
 80254a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80254a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254aa:	44bc      	add	ip, r7
 80254ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80254b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80254b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80254b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80254bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80254c4:	ea4c 050a 	orr.w	r5, ip, sl
 80254c8:	950d      	str	r5, [sp, #52]	; 0x34
 80254ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80254cc:	2dff      	cmp	r5, #255	; 0xff
 80254ce:	d020      	beq.n	8025512 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80254d0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80254d2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80254d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80254d8:	436f      	muls	r7, r5
 80254da:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80254dc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80254e0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80254e2:	fb05 fa0c 	mul.w	sl, r5, ip
 80254e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80254ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80254f2:	44bc      	add	ip, r7
 80254f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80254f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80254fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025500:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025504:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025508:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802550c:	ea4c 050a 	orr.w	r5, ip, sl
 8025510:	9509      	str	r5, [sp, #36]	; 0x24
 8025512:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025514:	2dff      	cmp	r5, #255	; 0xff
 8025516:	d020      	beq.n	802555a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8025518:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802551a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802551e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025520:	436f      	muls	r7, r5
 8025522:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025524:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025528:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802552a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802552e:	fb05 fa0a 	mul.w	sl, r5, sl
 8025532:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025536:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802553a:	44bc      	add	ip, r7
 802553c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025540:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025544:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025548:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802554c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025550:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025554:	ea4c 050a 	orr.w	r5, ip, sl
 8025558:	950e      	str	r5, [sp, #56]	; 0x38
 802555a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802555c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025560:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025562:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025566:	fb0e f707 	mul.w	r7, lr, r7
 802556a:	fb01 770c 	mla	r7, r1, ip, r7
 802556e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025572:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025574:	fb00 770c 	mla	r7, r0, ip, r7
 8025578:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802557c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802557e:	fb09 770c 	mla	r7, r9, ip, r7
 8025582:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025586:	fb0e fe0c 	mul.w	lr, lr, ip
 802558a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802558e:	fb01 e303 	mla	r3, r1, r3, lr
 8025592:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025594:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025598:	990e      	ldr	r1, [sp, #56]	; 0x38
 802559a:	fb00 330a 	mla	r3, r0, sl, r3
 802559e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80255a2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80255a6:	0a3f      	lsrs	r7, r7, #8
 80255a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80255ac:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80255b0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80255b4:	ea47 070c 	orr.w	r7, r7, ip
 80255b8:	2aff      	cmp	r2, #255	; 0xff
 80255ba:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80255be:	d11e      	bne.n	80255fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80255c0:	097a      	lsrs	r2, r7, #5
 80255c2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80255c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255ca:	f023 0307 	bic.w	r3, r3, #7
 80255ce:	4313      	orrs	r3, r2
 80255d0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80255d4:	431f      	orrs	r7, r3
 80255d6:	f8a8 7000 	strh.w	r7, [r8]
 80255da:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80255dc:	441c      	add	r4, r3
 80255de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80255e0:	f108 0802 	add.w	r8, r8, #2
 80255e4:	441e      	add	r6, r3
 80255e6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80255ea:	e644      	b.n	8025276 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80255ec:	2800      	cmp	r0, #0
 80255ee:	f43f af0b 	beq.w	8025408 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80255f2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80255f6:	9109      	str	r1, [sp, #36]	; 0x24
 80255f8:	0e09      	lsrs	r1, r1, #24
 80255fa:	9111      	str	r1, [sp, #68]	; 0x44
 80255fc:	e704      	b.n	8025408 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80255fe:	f8b8 1000 	ldrh.w	r1, [r8]
 8025602:	43d2      	mvns	r2, r2
 8025604:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8025608:	fa5f fe82 	uxtb.w	lr, r2
 802560c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025610:	fb0c fc0e 	mul.w	ip, ip, lr
 8025614:	10c8      	asrs	r0, r1, #3
 8025616:	00ca      	lsls	r2, r1, #3
 8025618:	f10c 0101 	add.w	r1, ip, #1
 802561c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025620:	0c39      	lsrs	r1, r7, #16
 8025622:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025626:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802562a:	4911      	ldr	r1, [pc, #68]	; (8025670 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802562c:	fb00 f00e 	mul.w	r0, r0, lr
 8025630:	fa5f fc8c 	uxtb.w	ip, ip
 8025634:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8025638:	b2d2      	uxtb	r2, r2
 802563a:	1c41      	adds	r1, r0, #1
 802563c:	fb02 f20e 	mul.w	r2, r2, lr
 8025640:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025644:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025648:	1c51      	adds	r1, r2, #1
 802564a:	00c0      	lsls	r0, r0, #3
 802564c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025650:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025654:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025658:	ea4c 0c00 	orr.w	ip, ip, r0
 802565c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025660:	ea47 0c0c 	orr.w	ip, r7, ip
 8025664:	f8a8 c000 	strh.w	ip, [r8]
 8025668:	e7b7      	b.n	80255da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802566a:	b01b      	add	sp, #108	; 0x6c
 802566c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025670:	fffff800 	.word	0xfffff800

08025674 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8025674:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025678:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802567c:	2d00      	cmp	r5, #0
 802567e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025682:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025686:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802568a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802568e:	fb05 0e03 	mla	lr, r5, r3, r0
 8025692:	f2c0 808c 	blt.w	80257ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025696:	45a9      	cmp	r9, r5
 8025698:	f340 8089 	ble.w	80257ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802569c:	2800      	cmp	r0, #0
 802569e:	f2c0 8084 	blt.w	80257aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80256a2:	4580      	cmp	r8, r0
 80256a4:	f340 8081 	ble.w	80257aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80256a8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80256ac:	f01e 0f01 	tst.w	lr, #1
 80256b0:	5d16      	ldrb	r6, [r2, r4]
 80256b2:	bf0c      	ite	eq
 80256b4:	f006 060f 	andeq.w	r6, r6, #15
 80256b8:	1136      	asrne	r6, r6, #4
 80256ba:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80256be:	b2f6      	uxtb	r6, r6
 80256c0:	1c44      	adds	r4, r0, #1
 80256c2:	d477      	bmi.n	80257b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80256c4:	45a0      	cmp	r8, r4
 80256c6:	dd75      	ble.n	80257b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80256c8:	2f00      	cmp	r7, #0
 80256ca:	d075      	beq.n	80257b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80256cc:	f10e 0a01 	add.w	sl, lr, #1
 80256d0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80256d4:	f01a 0f01 	tst.w	sl, #1
 80256d8:	5d14      	ldrb	r4, [r2, r4]
 80256da:	bf0c      	ite	eq
 80256dc:	f004 040f 	andeq.w	r4, r4, #15
 80256e0:	1124      	asrne	r4, r4, #4
 80256e2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80256e6:	b2e4      	uxtb	r4, r4
 80256e8:	3501      	adds	r5, #1
 80256ea:	d469      	bmi.n	80257c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80256ec:	45a9      	cmp	r9, r5
 80256ee:	dd67      	ble.n	80257c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80256f0:	f1bc 0f00 	cmp.w	ip, #0
 80256f4:	d067      	beq.n	80257c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80256f6:	2800      	cmp	r0, #0
 80256f8:	db60      	blt.n	80257bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80256fa:	4580      	cmp	r8, r0
 80256fc:	dd5e      	ble.n	80257bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80256fe:	eb03 090e 	add.w	r9, r3, lr
 8025702:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025706:	f019 0f01 	tst.w	r9, #1
 802570a:	5d55      	ldrb	r5, [r2, r5]
 802570c:	bf0c      	ite	eq
 802570e:	f005 050f 	andeq.w	r5, r5, #15
 8025712:	112d      	asrne	r5, r5, #4
 8025714:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025718:	b2ed      	uxtb	r5, r5
 802571a:	3001      	adds	r0, #1
 802571c:	d456      	bmi.n	80257cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802571e:	4580      	cmp	r8, r0
 8025720:	dd54      	ble.n	80257cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025722:	2f00      	cmp	r7, #0
 8025724:	d054      	beq.n	80257d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8025726:	3301      	adds	r3, #1
 8025728:	449e      	add	lr, r3
 802572a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802572e:	f01e 0f01 	tst.w	lr, #1
 8025732:	5cd0      	ldrb	r0, [r2, r3]
 8025734:	bf0c      	ite	eq
 8025736:	f000 000f 	andeq.w	r0, r0, #15
 802573a:	1100      	asrne	r0, r0, #4
 802573c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025740:	b2c3      	uxtb	r3, r0
 8025742:	b2ba      	uxth	r2, r7
 8025744:	fa1f fc8c 	uxth.w	ip, ip
 8025748:	fb02 f00c 	mul.w	r0, r2, ip
 802574c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025750:	0112      	lsls	r2, r2, #4
 8025752:	fa1f fc8c 	uxth.w	ip, ip
 8025756:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802575a:	1a12      	subs	r2, r2, r0
 802575c:	eba7 070c 	sub.w	r7, r7, ip
 8025760:	b292      	uxth	r2, r2
 8025762:	b2bf      	uxth	r7, r7
 8025764:	4362      	muls	r2, r4
 8025766:	fb06 2207 	mla	r2, r6, r7, r2
 802576a:	fb0c 2505 	mla	r5, ip, r5, r2
 802576e:	fb00 5303 	mla	r3, r0, r3, r5
 8025772:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025776:	b1b3      	cbz	r3, 80257a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8025778:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802577c:	435a      	muls	r2, r3
 802577e:	1c53      	adds	r3, r2, #1
 8025780:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025784:	4a2d      	ldr	r2, [pc, #180]	; (802583c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8025786:	121b      	asrs	r3, r3, #8
 8025788:	6812      	ldr	r2, [r2, #0]
 802578a:	2bff      	cmp	r3, #255	; 0xff
 802578c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8025790:	d120      	bne.n	80257d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8025792:	4b2b      	ldr	r3, [pc, #172]	; (8025840 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8025794:	0950      	lsrs	r0, r2, #5
 8025796:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802579a:	4033      	ands	r3, r6
 802579c:	4318      	orrs	r0, r3
 802579e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80257a2:	4302      	orrs	r2, r0
 80257a4:	800a      	strh	r2, [r1, #0]
 80257a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80257aa:	2600      	movs	r6, #0
 80257ac:	e788      	b.n	80256c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80257ae:	2400      	movs	r4, #0
 80257b0:	4626      	mov	r6, r4
 80257b2:	e799      	b.n	80256e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80257b4:	2400      	movs	r4, #0
 80257b6:	e797      	b.n	80256e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80257b8:	463c      	mov	r4, r7
 80257ba:	e795      	b.n	80256e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80257bc:	2500      	movs	r5, #0
 80257be:	e7ac      	b.n	802571a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80257c0:	2300      	movs	r3, #0
 80257c2:	461d      	mov	r5, r3
 80257c4:	e7bd      	b.n	8025742 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80257c6:	4663      	mov	r3, ip
 80257c8:	4665      	mov	r5, ip
 80257ca:	e7ba      	b.n	8025742 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80257cc:	2300      	movs	r3, #0
 80257ce:	e7b8      	b.n	8025742 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80257d0:	463b      	mov	r3, r7
 80257d2:	e7b6      	b.n	8025742 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80257d4:	880d      	ldrh	r5, [r1, #0]
 80257d6:	b29f      	uxth	r7, r3
 80257d8:	122c      	asrs	r4, r5, #8
 80257da:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80257de:	43db      	mvns	r3, r3
 80257e0:	b2db      	uxtb	r3, r3
 80257e2:	fb10 f007 	smulbb	r0, r0, r7
 80257e6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80257ea:	fb04 0403 	mla	r4, r4, r3, r0
 80257ee:	b2f6      	uxtb	r6, r6
 80257f0:	10e8      	asrs	r0, r5, #3
 80257f2:	b2d2      	uxtb	r2, r2
 80257f4:	00ed      	lsls	r5, r5, #3
 80257f6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80257fa:	fb12 f207 	smulbb	r2, r2, r7
 80257fe:	fb16 f607 	smulbb	r6, r6, r7
 8025802:	b2ed      	uxtb	r5, r5
 8025804:	b2a4      	uxth	r4, r4
 8025806:	fb00 6603 	mla	r6, r0, r3, r6
 802580a:	fb05 2303 	mla	r3, r5, r3, r2
 802580e:	b29a      	uxth	r2, r3
 8025810:	1c63      	adds	r3, r4, #1
 8025812:	b2b0      	uxth	r0, r6
 8025814:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025818:	1c53      	adds	r3, r2, #1
 802581a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802581e:	1c42      	adds	r2, r0, #1
 8025820:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025824:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025828:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802582c:	0940      	lsrs	r0, r0, #5
 802582e:	4323      	orrs	r3, r4
 8025830:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025834:	4303      	orrs	r3, r0
 8025836:	800b      	strh	r3, [r1, #0]
 8025838:	e7b5      	b.n	80257a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802583a:	bf00      	nop
 802583c:	200132cc 	.word	0x200132cc
 8025840:	00fff800 	.word	0x00fff800

08025844 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025848:	b097      	sub	sp, #92	; 0x5c
 802584a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802584e:	9214      	str	r2, [sp, #80]	; 0x50
 8025850:	9309      	str	r3, [sp, #36]	; 0x24
 8025852:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025854:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8025858:	910d      	str	r1, [sp, #52]	; 0x34
 802585a:	930f      	str	r3, [sp, #60]	; 0x3c
 802585c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025860:	9015      	str	r0, [sp, #84]	; 0x54
 8025862:	6850      	ldr	r0, [r2, #4]
 8025864:	6812      	ldr	r2, [r2, #0]
 8025866:	fb00 1303 	mla	r3, r0, r3, r1
 802586a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802586e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025870:	689b      	ldr	r3, [r3, #8]
 8025872:	3301      	adds	r3, #1
 8025874:	f023 0301 	bic.w	r3, r3, #1
 8025878:	930a      	str	r3, [sp, #40]	; 0x28
 802587a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802587c:	681f      	ldr	r7, [r3, #0]
 802587e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025880:	2b00      	cmp	r3, #0
 8025882:	dc03      	bgt.n	802588c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025884:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8025886:	2b00      	cmp	r3, #0
 8025888:	f340 8287 	ble.w	8025d9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802588c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802588e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025892:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025896:	1e48      	subs	r0, r1, #1
 8025898:	f102 3cff 	add.w	ip, r2, #4294967295
 802589c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802589e:	2b00      	cmp	r3, #0
 80258a0:	f340 80c4 	ble.w	8025a2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80258a4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80258a8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80258ac:	d406      	bmi.n	80258bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80258ae:	4586      	cmp	lr, r0
 80258b0:	da04      	bge.n	80258bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80258b2:	2b00      	cmp	r3, #0
 80258b4:	db02      	blt.n	80258bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80258b6:	4563      	cmp	r3, ip
 80258b8:	f2c0 80b9 	blt.w	8025a2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80258bc:	f11e 0e01 	adds.w	lr, lr, #1
 80258c0:	f100 80aa 	bmi.w	8025a18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80258c4:	4571      	cmp	r1, lr
 80258c6:	f2c0 80a7 	blt.w	8025a18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80258ca:	3301      	adds	r3, #1
 80258cc:	f100 80a4 	bmi.w	8025a18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80258d0:	429a      	cmp	r2, r3
 80258d2:	f2c0 80a1 	blt.w	8025a18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80258d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80258d8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80258dc:	930e      	str	r3, [sp, #56]	; 0x38
 80258de:	46c8      	mov	r8, r9
 80258e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80258e2:	2b00      	cmp	r3, #0
 80258e4:	f340 80c3 	ble.w	8025a6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80258e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80258ea:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80258ee:	1423      	asrs	r3, r4, #16
 80258f0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80258f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80258f8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80258fc:	f100 814d 	bmi.w	8025b9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025900:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025904:	455b      	cmp	r3, fp
 8025906:	f280 8148 	bge.w	8025b9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802590a:	2800      	cmp	r0, #0
 802590c:	f2c0 8145 	blt.w	8025b9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025910:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025914:	4558      	cmp	r0, fp
 8025916:	f280 8140 	bge.w	8025b9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802591a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802591c:	fb00 3305 	mla	r3, r0, r5, r3
 8025920:	0858      	lsrs	r0, r3, #1
 8025922:	07dd      	lsls	r5, r3, #31
 8025924:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025928:	bf54      	ite	pl
 802592a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802592e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025932:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025936:	fa5f fc8c 	uxtb.w	ip, ip
 802593a:	2a00      	cmp	r2, #0
 802593c:	f000 80db 	beq.w	8025af6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8025940:	1c58      	adds	r0, r3, #1
 8025942:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025946:	07c0      	lsls	r0, r0, #31
 8025948:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802594c:	bf54      	ite	pl
 802594e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025952:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025956:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802595a:	fa5f f08e 	uxtb.w	r0, lr
 802595e:	9010      	str	r0, [sp, #64]	; 0x40
 8025960:	b1c9      	cbz	r1, 8025996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025962:	4453      	add	r3, sl
 8025964:	0858      	lsrs	r0, r3, #1
 8025966:	07dd      	lsls	r5, r3, #31
 8025968:	5c38      	ldrb	r0, [r7, r0]
 802596a:	bf54      	ite	pl
 802596c:	f000 000f 	andpl.w	r0, r0, #15
 8025970:	1100      	asrmi	r0, r0, #4
 8025972:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025976:	3301      	adds	r3, #1
 8025978:	b2c0      	uxtb	r0, r0
 802597a:	900b      	str	r0, [sp, #44]	; 0x2c
 802597c:	0858      	lsrs	r0, r3, #1
 802597e:	07dd      	lsls	r5, r3, #31
 8025980:	f817 e000 	ldrb.w	lr, [r7, r0]
 8025984:	bf54      	ite	pl
 8025986:	f00e 030f 	andpl.w	r3, lr, #15
 802598a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802598e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025992:	b2db      	uxtb	r3, r3
 8025994:	9311      	str	r3, [sp, #68]	; 0x44
 8025996:	b292      	uxth	r2, r2
 8025998:	b289      	uxth	r1, r1
 802599a:	fb02 f301 	mul.w	r3, r2, r1
 802599e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80259a2:	0112      	lsls	r2, r2, #4
 80259a4:	b289      	uxth	r1, r1
 80259a6:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80259aa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80259ac:	1ad2      	subs	r2, r2, r3
 80259ae:	1a40      	subs	r0, r0, r1
 80259b0:	b292      	uxth	r2, r2
 80259b2:	436a      	muls	r2, r5
 80259b4:	b280      	uxth	r0, r0
 80259b6:	fb0c 2c00 	mla	ip, ip, r0, r2
 80259ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80259bc:	fb01 c102 	mla	r1, r1, r2, ip
 80259c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80259c2:	fb03 1302 	mla	r3, r3, r2, r1
 80259c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80259ca:	b1db      	cbz	r3, 8025a04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80259cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80259ce:	4353      	muls	r3, r2
 80259d0:	1c5a      	adds	r2, r3, #1
 80259d2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80259d6:	4ac6      	ldr	r2, [pc, #792]	; (8025cf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80259d8:	121b      	asrs	r3, r3, #8
 80259da:	6812      	ldr	r2, [r2, #0]
 80259dc:	2bff      	cmp	r3, #255	; 0xff
 80259de:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80259e2:	f040 8099 	bne.w	8025b18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80259e6:	0953      	lsrs	r3, r2, #5
 80259e8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80259ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80259f0:	f02c 0c07 	bic.w	ip, ip, #7
 80259f4:	ea43 0c0c 	orr.w	ip, r3, ip
 80259f8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80259fc:	ea4c 0202 	orr.w	r2, ip, r2
 8025a00:	f8a8 2000 	strh.w	r2, [r8]
 8025a04:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025a06:	441c      	add	r4, r3
 8025a08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025a0a:	441e      	add	r6, r3
 8025a0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025a0e:	3b01      	subs	r3, #1
 8025a10:	f108 0802 	add.w	r8, r8, #2
 8025a14:	930e      	str	r3, [sp, #56]	; 0x38
 8025a16:	e763      	b.n	80258e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8025a18:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025a1a:	441c      	add	r4, r3
 8025a1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025a1e:	441e      	add	r6, r3
 8025a20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025a22:	3b01      	subs	r3, #1
 8025a24:	9309      	str	r3, [sp, #36]	; 0x24
 8025a26:	f109 0902 	add.w	r9, r9, #2
 8025a2a:	e737      	b.n	802589c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025a2c:	d024      	beq.n	8025a78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025a2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025a30:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025a32:	3b01      	subs	r3, #1
 8025a34:	fb00 4003 	mla	r0, r0, r3, r4
 8025a38:	1400      	asrs	r0, r0, #16
 8025a3a:	f53f af4c 	bmi.w	80258d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025a3e:	3901      	subs	r1, #1
 8025a40:	4288      	cmp	r0, r1
 8025a42:	f6bf af48 	bge.w	80258d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025a46:	9924      	ldr	r1, [sp, #144]	; 0x90
 8025a48:	fb01 6303 	mla	r3, r1, r3, r6
 8025a4c:	141b      	asrs	r3, r3, #16
 8025a4e:	f53f af42 	bmi.w	80258d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025a52:	3a01      	subs	r2, #1
 8025a54:	4293      	cmp	r3, r2
 8025a56:	f6bf af3e 	bge.w	80258d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025a5a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8025a5e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8025a62:	930e      	str	r3, [sp, #56]	; 0x38
 8025a64:	46c8      	mov	r8, r9
 8025a66:	f1bb 0f00 	cmp.w	fp, #0
 8025a6a:	f300 80b7 	bgt.w	8025bdc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8025a6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025a70:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025a74:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025a78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025a7a:	2b00      	cmp	r3, #0
 8025a7c:	f340 818d 	ble.w	8025d9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025a80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025a84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025a88:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025a8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025a8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025a92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025a96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025a9a:	eef0 6a62 	vmov.f32	s13, s5
 8025a9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025aa2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025aa6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025aaa:	ee16 4a90 	vmov	r4, s13
 8025aae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025ab2:	eef0 6a43 	vmov.f32	s13, s6
 8025ab6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025aba:	ee12 2a90 	vmov	r2, s5
 8025abe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025ac2:	fb92 f3f3 	sdiv	r3, r2, r3
 8025ac6:	ee13 2a10 	vmov	r2, s6
 8025aca:	9323      	str	r3, [sp, #140]	; 0x8c
 8025acc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025ace:	fb92 f3f3 	sdiv	r3, r2, r3
 8025ad2:	9324      	str	r3, [sp, #144]	; 0x90
 8025ad4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025ad6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025ad8:	3b01      	subs	r3, #1
 8025ada:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025ade:	930d      	str	r3, [sp, #52]	; 0x34
 8025ae0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025ae2:	bf08      	it	eq
 8025ae4:	4613      	moveq	r3, r2
 8025ae6:	ee16 6a90 	vmov	r6, s13
 8025aea:	9309      	str	r3, [sp, #36]	; 0x24
 8025aec:	eeb0 3a67 	vmov.f32	s6, s15
 8025af0:	eef0 2a47 	vmov.f32	s5, s14
 8025af4:	e6c3      	b.n	802587e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025af6:	2900      	cmp	r1, #0
 8025af8:	f43f af4d 	beq.w	8025996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025afc:	eb0a 0003 	add.w	r0, sl, r3
 8025b00:	0843      	lsrs	r3, r0, #1
 8025b02:	07c0      	lsls	r0, r0, #31
 8025b04:	5cfb      	ldrb	r3, [r7, r3]
 8025b06:	bf54      	ite	pl
 8025b08:	f003 030f 	andpl.w	r3, r3, #15
 8025b0c:	111b      	asrmi	r3, r3, #4
 8025b0e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025b12:	b2db      	uxtb	r3, r3
 8025b14:	930b      	str	r3, [sp, #44]	; 0x2c
 8025b16:	e73e      	b.n	8025996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025b18:	f8b8 e000 	ldrh.w	lr, [r8]
 8025b1c:	fa1f fb83 	uxth.w	fp, r3
 8025b20:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025b24:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025b28:	43db      	mvns	r3, r3
 8025b2a:	b2db      	uxtb	r3, r3
 8025b2c:	fb11 f10b 	smulbb	r1, r1, fp
 8025b30:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025b34:	fb00 1003 	mla	r0, r0, r3, r1
 8025b38:	fa5f fc8c 	uxtb.w	ip, ip
 8025b3c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025b40:	b2d2      	uxtb	r2, r2
 8025b42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025b46:	b280      	uxth	r0, r0
 8025b48:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025b4c:	fb1c fc0b 	smulbb	ip, ip, fp
 8025b50:	fa5f fe8e 	uxtb.w	lr, lr
 8025b54:	fb12 fb0b 	smulbb	fp, r2, fp
 8025b58:	fb01 cc03 	mla	ip, r1, r3, ip
 8025b5c:	fb0e bb03 	mla	fp, lr, r3, fp
 8025b60:	1c43      	adds	r3, r0, #1
 8025b62:	fa1f fc8c 	uxth.w	ip, ip
 8025b66:	fa1f fb8b 	uxth.w	fp, fp
 8025b6a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025b6e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025b72:	f10c 0101 	add.w	r1, ip, #1
 8025b76:	f10b 0001 	add.w	r0, fp, #1
 8025b7a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025b7e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025b82:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025b86:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025b8a:	4318      	orrs	r0, r3
 8025b8c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025b90:	ea40 000c 	orr.w	r0, r0, ip
 8025b94:	f8a8 0000 	strh.w	r0, [r8]
 8025b98:	e734      	b.n	8025a04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b9a:	f113 0b01 	adds.w	fp, r3, #1
 8025b9e:	f53f af31 	bmi.w	8025a04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025ba2:	45dc      	cmp	ip, fp
 8025ba4:	f6ff af2e 	blt.w	8025a04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025ba8:	f110 0b01 	adds.w	fp, r0, #1
 8025bac:	f53f af2a 	bmi.w	8025a04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025bb0:	45de      	cmp	lr, fp
 8025bb2:	f6ff af27 	blt.w	8025a04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025bb6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025bb8:	9302      	str	r3, [sp, #8]
 8025bba:	fa0f f38e 	sxth.w	r3, lr
 8025bbe:	9301      	str	r3, [sp, #4]
 8025bc0:	fa0f f38c 	sxth.w	r3, ip
 8025bc4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025bc8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025bcc:	9300      	str	r3, [sp, #0]
 8025bce:	463a      	mov	r2, r7
 8025bd0:	4653      	mov	r3, sl
 8025bd2:	4641      	mov	r1, r8
 8025bd4:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025bd6:	f7ff fd4d 	bl	8025674 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025bda:	e713      	b.n	8025a04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025bdc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025bde:	1422      	asrs	r2, r4, #16
 8025be0:	1433      	asrs	r3, r6, #16
 8025be2:	fb05 2303 	mla	r3, r5, r3, r2
 8025be6:	085a      	lsrs	r2, r3, #1
 8025be8:	07dd      	lsls	r5, r3, #31
 8025bea:	5cba      	ldrb	r2, [r7, r2]
 8025bec:	bf54      	ite	pl
 8025bee:	f002 020f 	andpl.w	r2, r2, #15
 8025bf2:	1112      	asrmi	r2, r2, #4
 8025bf4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025bf8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025bfc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025c00:	b2d2      	uxtb	r2, r2
 8025c02:	2900      	cmp	r1, #0
 8025c04:	d076      	beq.n	8025cf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025c06:	f103 0e01 	add.w	lr, r3, #1
 8025c0a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025c0e:	f01e 0f01 	tst.w	lr, #1
 8025c12:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025c16:	bf0c      	ite	eq
 8025c18:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025c1c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025c20:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025c24:	fa5f f58c 	uxtb.w	r5, ip
 8025c28:	9512      	str	r5, [sp, #72]	; 0x48
 8025c2a:	b300      	cbz	r0, 8025c6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025c2c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025c2e:	442b      	add	r3, r5
 8025c30:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025c34:	07dd      	lsls	r5, r3, #31
 8025c36:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025c3a:	bf54      	ite	pl
 8025c3c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025c40:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025c44:	3301      	adds	r3, #1
 8025c46:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025c4a:	fa5f f58c 	uxtb.w	r5, ip
 8025c4e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025c52:	950c      	str	r5, [sp, #48]	; 0x30
 8025c54:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025c58:	07dd      	lsls	r5, r3, #31
 8025c5a:	bf54      	ite	pl
 8025c5c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025c60:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025c64:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025c68:	fa5f f38c 	uxtb.w	r3, ip
 8025c6c:	9313      	str	r3, [sp, #76]	; 0x4c
 8025c6e:	b289      	uxth	r1, r1
 8025c70:	b280      	uxth	r0, r0
 8025c72:	fb01 f300 	mul.w	r3, r1, r0
 8025c76:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025c7a:	0109      	lsls	r1, r1, #4
 8025c7c:	b280      	uxth	r0, r0
 8025c7e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025c82:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025c84:	1ac9      	subs	r1, r1, r3
 8025c86:	ebac 0c00 	sub.w	ip, ip, r0
 8025c8a:	b289      	uxth	r1, r1
 8025c8c:	4369      	muls	r1, r5
 8025c8e:	fa1f fc8c 	uxth.w	ip, ip
 8025c92:	fb02 120c 	mla	r2, r2, ip, r1
 8025c96:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025c98:	fb00 2001 	mla	r0, r0, r1, r2
 8025c9c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025c9e:	fb03 0302 	mla	r3, r3, r2, r0
 8025ca2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ca6:	b1d3      	cbz	r3, 8025cde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025ca8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025caa:	4353      	muls	r3, r2
 8025cac:	1c5a      	adds	r2, r3, #1
 8025cae:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025cb2:	4a0f      	ldr	r2, [pc, #60]	; (8025cf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025cb4:	121b      	asrs	r3, r3, #8
 8025cb6:	6812      	ldr	r2, [r2, #0]
 8025cb8:	2bff      	cmp	r3, #255	; 0xff
 8025cba:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025cbe:	d12d      	bne.n	8025d1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025cc0:	0953      	lsrs	r3, r2, #5
 8025cc2:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025cc6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025cca:	f02c 0c07 	bic.w	ip, ip, #7
 8025cce:	ea43 0c0c 	orr.w	ip, r3, ip
 8025cd2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025cd6:	ea4c 0202 	orr.w	r2, ip, r2
 8025cda:	f8a8 2000 	strh.w	r2, [r8]
 8025cde:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025ce0:	441c      	add	r4, r3
 8025ce2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ce4:	f108 0802 	add.w	r8, r8, #2
 8025ce8:	441e      	add	r6, r3
 8025cea:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025cee:	e6ba      	b.n	8025a66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025cf0:	200132cc 	.word	0x200132cc
 8025cf4:	2800      	cmp	r0, #0
 8025cf6:	d0ba      	beq.n	8025c6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025cf8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025cfa:	442b      	add	r3, r5
 8025cfc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025d00:	07db      	lsls	r3, r3, #31
 8025d02:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025d06:	bf54      	ite	pl
 8025d08:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025d0c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025d10:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025d14:	fa5f f38c 	uxtb.w	r3, ip
 8025d18:	930c      	str	r3, [sp, #48]	; 0x30
 8025d1a:	e7a8      	b.n	8025c6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025d1c:	f8b8 e000 	ldrh.w	lr, [r8]
 8025d20:	fa1f fa83 	uxth.w	sl, r3
 8025d24:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025d28:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025d2c:	43db      	mvns	r3, r3
 8025d2e:	b2db      	uxtb	r3, r3
 8025d30:	fb11 f10a 	smulbb	r1, r1, sl
 8025d34:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025d38:	fb00 1003 	mla	r0, r0, r3, r1
 8025d3c:	b2d2      	uxtb	r2, r2
 8025d3e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025d42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025d46:	fa5f fe8e 	uxtb.w	lr, lr
 8025d4a:	fb12 f20a 	smulbb	r2, r2, sl
 8025d4e:	fb0e 2203 	mla	r2, lr, r3, r2
 8025d52:	fa5f fc8c 	uxtb.w	ip, ip
 8025d56:	b280      	uxth	r0, r0
 8025d58:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025d5c:	b292      	uxth	r2, r2
 8025d5e:	fb1c fc0a 	smulbb	ip, ip, sl
 8025d62:	fb01 cc03 	mla	ip, r1, r3, ip
 8025d66:	1c43      	adds	r3, r0, #1
 8025d68:	1c51      	adds	r1, r2, #1
 8025d6a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025d6e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025d72:	fa1f fc8c 	uxth.w	ip, ip
 8025d76:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025d7a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025d7e:	4308      	orrs	r0, r1
 8025d80:	f10c 0101 	add.w	r1, ip, #1
 8025d84:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025d88:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025d8c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025d90:	ea40 000c 	orr.w	r0, r0, ip
 8025d94:	f8a8 0000 	strh.w	r0, [r8]
 8025d98:	e7a1      	b.n	8025cde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025d9a:	b017      	add	sp, #92	; 0x5c
 8025d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025da0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025da0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025da4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025da8:	2d00      	cmp	r5, #0
 8025daa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025dae:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025db2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025db6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025dba:	fb05 0e03 	mla	lr, r5, r3, r0
 8025dbe:	f2c0 80b0 	blt.w	8025f22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025dc2:	45a9      	cmp	r9, r5
 8025dc4:	f340 80ad 	ble.w	8025f22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025dc8:	2800      	cmp	r0, #0
 8025dca:	f2c0 80a8 	blt.w	8025f1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025dce:	4580      	cmp	r8, r0
 8025dd0:	f340 80a5 	ble.w	8025f1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025dd4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025dd8:	f01e 0f01 	tst.w	lr, #1
 8025ddc:	5d16      	ldrb	r6, [r2, r4]
 8025dde:	bf0c      	ite	eq
 8025de0:	f006 060f 	andeq.w	r6, r6, #15
 8025de4:	1136      	asrne	r6, r6, #4
 8025de6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025dea:	b2f6      	uxtb	r6, r6
 8025dec:	1c44      	adds	r4, r0, #1
 8025dee:	f100 809b 	bmi.w	8025f28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025df2:	45a0      	cmp	r8, r4
 8025df4:	f340 8098 	ble.w	8025f28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025df8:	2f00      	cmp	r7, #0
 8025dfa:	f000 8097 	beq.w	8025f2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025dfe:	f10e 0a01 	add.w	sl, lr, #1
 8025e02:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025e06:	f01a 0f01 	tst.w	sl, #1
 8025e0a:	5d14      	ldrb	r4, [r2, r4]
 8025e0c:	bf0c      	ite	eq
 8025e0e:	f004 040f 	andeq.w	r4, r4, #15
 8025e12:	1124      	asrne	r4, r4, #4
 8025e14:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025e18:	b2e4      	uxtb	r4, r4
 8025e1a:	3501      	adds	r5, #1
 8025e1c:	f100 808a 	bmi.w	8025f34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025e20:	45a9      	cmp	r9, r5
 8025e22:	f340 8087 	ble.w	8025f34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025e26:	f1bc 0f00 	cmp.w	ip, #0
 8025e2a:	f000 8086 	beq.w	8025f3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025e2e:	2800      	cmp	r0, #0
 8025e30:	db7e      	blt.n	8025f30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025e32:	4580      	cmp	r8, r0
 8025e34:	dd7c      	ble.n	8025f30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025e36:	eb03 090e 	add.w	r9, r3, lr
 8025e3a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025e3e:	f019 0f01 	tst.w	r9, #1
 8025e42:	5d55      	ldrb	r5, [r2, r5]
 8025e44:	bf0c      	ite	eq
 8025e46:	f005 050f 	andeq.w	r5, r5, #15
 8025e4a:	112d      	asrne	r5, r5, #4
 8025e4c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025e50:	b2ed      	uxtb	r5, r5
 8025e52:	3001      	adds	r0, #1
 8025e54:	d474      	bmi.n	8025f40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025e56:	4580      	cmp	r8, r0
 8025e58:	dd72      	ble.n	8025f40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025e5a:	2f00      	cmp	r7, #0
 8025e5c:	d072      	beq.n	8025f44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025e5e:	3301      	adds	r3, #1
 8025e60:	449e      	add	lr, r3
 8025e62:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025e66:	f01e 0f01 	tst.w	lr, #1
 8025e6a:	5cd0      	ldrb	r0, [r2, r3]
 8025e6c:	bf0c      	ite	eq
 8025e6e:	f000 000f 	andeq.w	r0, r0, #15
 8025e72:	1100      	asrne	r0, r0, #4
 8025e74:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025e78:	b2c3      	uxtb	r3, r0
 8025e7a:	b2ba      	uxth	r2, r7
 8025e7c:	fa1f fc8c 	uxth.w	ip, ip
 8025e80:	fb02 f00c 	mul.w	r0, r2, ip
 8025e84:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025e88:	0112      	lsls	r2, r2, #4
 8025e8a:	fa1f fc8c 	uxth.w	ip, ip
 8025e8e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025e92:	1a12      	subs	r2, r2, r0
 8025e94:	eba7 070c 	sub.w	r7, r7, ip
 8025e98:	b292      	uxth	r2, r2
 8025e9a:	b2bf      	uxth	r7, r7
 8025e9c:	4362      	muls	r2, r4
 8025e9e:	fb06 2207 	mla	r2, r6, r7, r2
 8025ea2:	fb0c 2505 	mla	r5, ip, r5, r2
 8025ea6:	fb00 5303 	mla	r3, r0, r3, r5
 8025eaa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025eae:	b3a3      	cbz	r3, 8025f1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025eb0:	4a25      	ldr	r2, [pc, #148]	; (8025f48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025eb2:	880e      	ldrh	r6, [r1, #0]
 8025eb4:	6815      	ldr	r5, [r2, #0]
 8025eb6:	1234      	asrs	r4, r6, #8
 8025eb8:	b29a      	uxth	r2, r3
 8025eba:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025ebe:	43db      	mvns	r3, r3
 8025ec0:	b2db      	uxtb	r3, r3
 8025ec2:	fb10 f002 	smulbb	r0, r0, r2
 8025ec6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025eca:	fb04 0403 	mla	r4, r4, r3, r0
 8025ece:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025ed2:	10f0      	asrs	r0, r6, #3
 8025ed4:	b2ed      	uxtb	r5, r5
 8025ed6:	00f6      	lsls	r6, r6, #3
 8025ed8:	fb17 f702 	smulbb	r7, r7, r2
 8025edc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025ee0:	fb15 f202 	smulbb	r2, r5, r2
 8025ee4:	b2f6      	uxtb	r6, r6
 8025ee6:	b2a4      	uxth	r4, r4
 8025ee8:	fb00 7003 	mla	r0, r0, r3, r7
 8025eec:	fb06 2303 	mla	r3, r6, r3, r2
 8025ef0:	b29a      	uxth	r2, r3
 8025ef2:	1c63      	adds	r3, r4, #1
 8025ef4:	b280      	uxth	r0, r0
 8025ef6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025efa:	1c53      	adds	r3, r2, #1
 8025efc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025f00:	1c42      	adds	r2, r0, #1
 8025f02:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025f06:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025f0a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025f0e:	0940      	lsrs	r0, r0, #5
 8025f10:	4323      	orrs	r3, r4
 8025f12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f16:	4303      	orrs	r3, r0
 8025f18:	800b      	strh	r3, [r1, #0]
 8025f1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025f1e:	2600      	movs	r6, #0
 8025f20:	e764      	b.n	8025dec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8025f22:	2400      	movs	r4, #0
 8025f24:	4626      	mov	r6, r4
 8025f26:	e778      	b.n	8025e1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025f28:	2400      	movs	r4, #0
 8025f2a:	e776      	b.n	8025e1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025f2c:	463c      	mov	r4, r7
 8025f2e:	e774      	b.n	8025e1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025f30:	2500      	movs	r5, #0
 8025f32:	e78e      	b.n	8025e52 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025f34:	2300      	movs	r3, #0
 8025f36:	461d      	mov	r5, r3
 8025f38:	e79f      	b.n	8025e7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025f3a:	4663      	mov	r3, ip
 8025f3c:	4665      	mov	r5, ip
 8025f3e:	e79c      	b.n	8025e7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025f40:	2300      	movs	r3, #0
 8025f42:	e79a      	b.n	8025e7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025f44:	463b      	mov	r3, r7
 8025f46:	e798      	b.n	8025e7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025f48:	200132cc 	.word	0x200132cc

08025f4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f50:	b093      	sub	sp, #76	; 0x4c
 8025f52:	461d      	mov	r5, r3
 8025f54:	920c      	str	r2, [sp, #48]	; 0x30
 8025f56:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025f58:	9107      	str	r1, [sp, #28]
 8025f5a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025f5e:	9011      	str	r0, [sp, #68]	; 0x44
 8025f60:	6850      	ldr	r0, [r2, #4]
 8025f62:	6812      	ldr	r2, [r2, #0]
 8025f64:	fb00 1303 	mla	r3, r0, r3, r1
 8025f68:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025f6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f6e:	689b      	ldr	r3, [r3, #8]
 8025f70:	3301      	adds	r3, #1
 8025f72:	f023 0301 	bic.w	r3, r3, #1
 8025f76:	9306      	str	r3, [sp, #24]
 8025f78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f7a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025f7e:	681f      	ldr	r7, [r3, #0]
 8025f80:	9b07      	ldr	r3, [sp, #28]
 8025f82:	2b00      	cmp	r3, #0
 8025f84:	dc03      	bgt.n	8025f8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025f86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025f88:	2b00      	cmp	r3, #0
 8025f8a:	f340 8267 	ble.w	802645c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025f8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025f94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025f98:	1e48      	subs	r0, r1, #1
 8025f9a:	f102 3cff 	add.w	ip, r2, #4294967295
 8025f9e:	2d00      	cmp	r5, #0
 8025fa0:	f340 80b8 	ble.w	8026114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025fa4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025fa8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025fac:	d406      	bmi.n	8025fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025fae:	4586      	cmp	lr, r0
 8025fb0:	da04      	bge.n	8025fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025fb2:	2b00      	cmp	r3, #0
 8025fb4:	db02      	blt.n	8025fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025fb6:	4563      	cmp	r3, ip
 8025fb8:	f2c0 80ad 	blt.w	8026116 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025fbc:	f11e 0e01 	adds.w	lr, lr, #1
 8025fc0:	f100 80a0 	bmi.w	8026104 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025fc4:	4571      	cmp	r1, lr
 8025fc6:	f2c0 809d 	blt.w	8026104 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025fca:	3301      	adds	r3, #1
 8025fcc:	f100 809a 	bmi.w	8026104 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025fd0:	429a      	cmp	r2, r3
 8025fd2:	f2c0 8097 	blt.w	8026104 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025fd6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8025fda:	9509      	str	r5, [sp, #36]	; 0x24
 8025fdc:	46c8      	mov	r8, r9
 8025fde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025fe0:	2b00      	cmp	r3, #0
 8025fe2:	f340 80b6 	ble.w	8026152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8025fe6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8025fea:	9308      	str	r3, [sp, #32]
 8025fec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025fee:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025ff2:	1423      	asrs	r3, r4, #16
 8025ff4:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025ff8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025ffc:	f100 813e 	bmi.w	802627c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026000:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026004:	455b      	cmp	r3, fp
 8026006:	f280 8139 	bge.w	802627c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802600a:	2800      	cmp	r0, #0
 802600c:	f2c0 8136 	blt.w	802627c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026010:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026014:	4558      	cmp	r0, fp
 8026016:	f280 8131 	bge.w	802627c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802601a:	9a06      	ldr	r2, [sp, #24]
 802601c:	fb00 3302 	mla	r3, r0, r2, r3
 8026020:	0858      	lsrs	r0, r3, #1
 8026022:	07da      	lsls	r2, r3, #31
 8026024:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026028:	9a08      	ldr	r2, [sp, #32]
 802602a:	bf54      	ite	pl
 802602c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026030:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026034:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026038:	fa5f fc8c 	uxtb.w	ip, ip
 802603c:	2a00      	cmp	r2, #0
 802603e:	f000 80cb 	beq.w	80261d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026042:	1c58      	adds	r0, r3, #1
 8026044:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026048:	07c0      	lsls	r0, r0, #31
 802604a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802604e:	bf54      	ite	pl
 8026050:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026054:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026058:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802605c:	fa5f fe8e 	uxtb.w	lr, lr
 8026060:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8026064:	b1b9      	cbz	r1, 8026096 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026066:	4453      	add	r3, sl
 8026068:	0858      	lsrs	r0, r3, #1
 802606a:	07da      	lsls	r2, r3, #31
 802606c:	5c38      	ldrb	r0, [r7, r0]
 802606e:	bf54      	ite	pl
 8026070:	f000 000f 	andpl.w	r0, r0, #15
 8026074:	1100      	asrmi	r0, r0, #4
 8026076:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802607a:	b2c0      	uxtb	r0, r0
 802607c:	900a      	str	r0, [sp, #40]	; 0x28
 802607e:	1c58      	adds	r0, r3, #1
 8026080:	0843      	lsrs	r3, r0, #1
 8026082:	07c2      	lsls	r2, r0, #31
 8026084:	5cfb      	ldrb	r3, [r7, r3]
 8026086:	bf54      	ite	pl
 8026088:	f003 030f 	andpl.w	r3, r3, #15
 802608c:	111b      	asrmi	r3, r3, #4
 802608e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026092:	b2db      	uxtb	r3, r3
 8026094:	930e      	str	r3, [sp, #56]	; 0x38
 8026096:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802609a:	b289      	uxth	r1, r1
 802609c:	fb02 f301 	mul.w	r3, r2, r1
 80260a0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80260a4:	0112      	lsls	r2, r2, #4
 80260a6:	b289      	uxth	r1, r1
 80260a8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80260ac:	1a40      	subs	r0, r0, r1
 80260ae:	fa1f fe80 	uxth.w	lr, r0
 80260b2:	1ad2      	subs	r2, r2, r3
 80260b4:	980d      	ldr	r0, [sp, #52]	; 0x34
 80260b6:	b292      	uxth	r2, r2
 80260b8:	4342      	muls	r2, r0
 80260ba:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80260be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80260c0:	fb01 c102 	mla	r1, r1, r2, ip
 80260c4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80260c6:	fb03 1302 	mla	r3, r3, r2, r1
 80260ca:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80260ce:	2bff      	cmp	r3, #255	; 0xff
 80260d0:	f040 8093 	bne.w	80261fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80260d4:	4bbe      	ldr	r3, [pc, #760]	; (80263d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80260d6:	681a      	ldr	r2, [r3, #0]
 80260d8:	4bbe      	ldr	r3, [pc, #760]	; (80263d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80260da:	0951      	lsrs	r1, r2, #5
 80260dc:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80260e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80260e4:	430b      	orrs	r3, r1
 80260e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80260ea:	4313      	orrs	r3, r2
 80260ec:	f8a8 3000 	strh.w	r3, [r8]
 80260f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80260f2:	441c      	add	r4, r3
 80260f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80260f6:	441e      	add	r6, r3
 80260f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80260fa:	3b01      	subs	r3, #1
 80260fc:	f108 0802 	add.w	r8, r8, #2
 8026100:	9309      	str	r3, [sp, #36]	; 0x24
 8026102:	e76c      	b.n	8025fde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026104:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026106:	441c      	add	r4, r3
 8026108:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802610a:	3d01      	subs	r5, #1
 802610c:	441e      	add	r6, r3
 802610e:	f109 0902 	add.w	r9, r9, #2
 8026112:	e744      	b.n	8025f9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8026114:	d021      	beq.n	802615a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8026116:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026118:	1e6b      	subs	r3, r5, #1
 802611a:	fb00 4003 	mla	r0, r0, r3, r4
 802611e:	1400      	asrs	r0, r0, #16
 8026120:	f53f af59 	bmi.w	8025fd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026124:	3901      	subs	r1, #1
 8026126:	4288      	cmp	r0, r1
 8026128:	f6bf af55 	bge.w	8025fd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802612c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802612e:	fb01 6303 	mla	r3, r1, r3, r6
 8026132:	141b      	asrs	r3, r3, #16
 8026134:	f53f af4f 	bmi.w	8025fd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026138:	3a01      	subs	r2, #1
 802613a:	4293      	cmp	r3, r2
 802613c:	f6bf af4b 	bge.w	8025fd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026140:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8026144:	9308      	str	r3, [sp, #32]
 8026146:	46a8      	mov	r8, r5
 8026148:	46ce      	mov	lr, r9
 802614a:	f1b8 0f00 	cmp.w	r8, #0
 802614e:	f300 80b5 	bgt.w	80262bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026152:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026156:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802615a:	9b07      	ldr	r3, [sp, #28]
 802615c:	2b00      	cmp	r3, #0
 802615e:	f340 817d 	ble.w	802645c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026162:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026166:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802616a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802616e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026170:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026174:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026178:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802617c:	eef0 6a62 	vmov.f32	s13, s5
 8026180:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026184:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026188:	ee77 2a62 	vsub.f32	s5, s14, s5
 802618c:	ee16 4a90 	vmov	r4, s13
 8026190:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026194:	eef0 6a43 	vmov.f32	s13, s6
 8026198:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802619c:	ee12 2a90 	vmov	r2, s5
 80261a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80261a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80261a8:	ee13 2a10 	vmov	r2, s6
 80261ac:	931f      	str	r3, [sp, #124]	; 0x7c
 80261ae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80261b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80261b4:	9320      	str	r3, [sp, #128]	; 0x80
 80261b6:	9b07      	ldr	r3, [sp, #28]
 80261b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80261ba:	3b01      	subs	r3, #1
 80261bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80261c0:	9307      	str	r3, [sp, #28]
 80261c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80261c4:	ee16 6a90 	vmov	r6, s13
 80261c8:	bf14      	ite	ne
 80261ca:	461d      	movne	r5, r3
 80261cc:	4615      	moveq	r5, r2
 80261ce:	eeb0 3a67 	vmov.f32	s6, s15
 80261d2:	eef0 2a47 	vmov.f32	s5, s14
 80261d6:	e6d3      	b.n	8025f80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80261d8:	2900      	cmp	r1, #0
 80261da:	f43f af5c 	beq.w	8026096 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80261de:	eb0a 0003 	add.w	r0, sl, r3
 80261e2:	0843      	lsrs	r3, r0, #1
 80261e4:	07c0      	lsls	r0, r0, #31
 80261e6:	5cfb      	ldrb	r3, [r7, r3]
 80261e8:	bf54      	ite	pl
 80261ea:	f003 030f 	andpl.w	r3, r3, #15
 80261ee:	111b      	asrmi	r3, r3, #4
 80261f0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80261f4:	b2db      	uxtb	r3, r3
 80261f6:	930a      	str	r3, [sp, #40]	; 0x28
 80261f8:	e74d      	b.n	8026096 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80261fa:	2b00      	cmp	r3, #0
 80261fc:	f43f af78 	beq.w	80260f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026200:	4a73      	ldr	r2, [pc, #460]	; (80263d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026202:	f8b8 c000 	ldrh.w	ip, [r8]
 8026206:	6810      	ldr	r0, [r2, #0]
 8026208:	fa1f fe83 	uxth.w	lr, r3
 802620c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026210:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026214:	43db      	mvns	r3, r3
 8026216:	b2db      	uxtb	r3, r3
 8026218:	fb12 f20e 	smulbb	r2, r2, lr
 802621c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026220:	fb01 2103 	mla	r1, r1, r3, r2
 8026224:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026228:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802622c:	b2c0      	uxtb	r0, r0
 802622e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026232:	fb1b fb0e 	smulbb	fp, fp, lr
 8026236:	b289      	uxth	r1, r1
 8026238:	fb10 fe0e 	smulbb	lr, r0, lr
 802623c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026240:	fa5f fc8c 	uxtb.w	ip, ip
 8026244:	fb02 b203 	mla	r2, r2, r3, fp
 8026248:	1c48      	adds	r0, r1, #1
 802624a:	fb0c e303 	mla	r3, ip, r3, lr
 802624e:	b292      	uxth	r2, r2
 8026250:	b29b      	uxth	r3, r3
 8026252:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8026256:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802625a:	f102 0b01 	add.w	fp, r2, #1
 802625e:	1c59      	adds	r1, r3, #1
 8026260:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026264:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026268:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802626c:	0952      	lsrs	r2, r2, #5
 802626e:	4301      	orrs	r1, r0
 8026270:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026274:	4311      	orrs	r1, r2
 8026276:	f8a8 1000 	strh.w	r1, [r8]
 802627a:	e739      	b.n	80260f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802627c:	f113 0b01 	adds.w	fp, r3, #1
 8026280:	f53f af36 	bmi.w	80260f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026284:	45dc      	cmp	ip, fp
 8026286:	f6ff af33 	blt.w	80260f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802628a:	f110 0b01 	adds.w	fp, r0, #1
 802628e:	f53f af2f 	bmi.w	80260f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026292:	45de      	cmp	lr, fp
 8026294:	f6ff af2c 	blt.w	80260f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026298:	9a08      	ldr	r2, [sp, #32]
 802629a:	9302      	str	r3, [sp, #8]
 802629c:	fa0f f38e 	sxth.w	r3, lr
 80262a0:	9301      	str	r3, [sp, #4]
 80262a2:	fa0f f38c 	sxth.w	r3, ip
 80262a6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80262aa:	9105      	str	r1, [sp, #20]
 80262ac:	9300      	str	r3, [sp, #0]
 80262ae:	463a      	mov	r2, r7
 80262b0:	4653      	mov	r3, sl
 80262b2:	4641      	mov	r1, r8
 80262b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80262b6:	f7ff fd73 	bl	8025da0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80262ba:	e719      	b.n	80260f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80262bc:	9906      	ldr	r1, [sp, #24]
 80262be:	1422      	asrs	r2, r4, #16
 80262c0:	1433      	asrs	r3, r6, #16
 80262c2:	fb01 2303 	mla	r3, r1, r3, r2
 80262c6:	085a      	lsrs	r2, r3, #1
 80262c8:	07d9      	lsls	r1, r3, #31
 80262ca:	5cba      	ldrb	r2, [r7, r2]
 80262cc:	bf54      	ite	pl
 80262ce:	f002 020f 	andpl.w	r2, r2, #15
 80262d2:	1112      	asrmi	r2, r2, #4
 80262d4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80262d8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80262dc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80262e0:	b2d2      	uxtb	r2, r2
 80262e2:	2800      	cmp	r0, #0
 80262e4:	d062      	beq.n	80263ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80262e6:	f103 0a01 	add.w	sl, r3, #1
 80262ea:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80262ee:	f01a 0f01 	tst.w	sl, #1
 80262f2:	5c79      	ldrb	r1, [r7, r1]
 80262f4:	bf0c      	ite	eq
 80262f6:	f001 010f 	andeq.w	r1, r1, #15
 80262fa:	1109      	asrne	r1, r1, #4
 80262fc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026300:	b2c9      	uxtb	r1, r1
 8026302:	910f      	str	r1, [sp, #60]	; 0x3c
 8026304:	f1bc 0f00 	cmp.w	ip, #0
 8026308:	d019      	beq.n	802633e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802630a:	9908      	ldr	r1, [sp, #32]
 802630c:	440b      	add	r3, r1
 802630e:	0859      	lsrs	r1, r3, #1
 8026310:	f013 0f01 	tst.w	r3, #1
 8026314:	5c79      	ldrb	r1, [r7, r1]
 8026316:	bf0c      	ite	eq
 8026318:	f001 010f 	andeq.w	r1, r1, #15
 802631c:	1109      	asrne	r1, r1, #4
 802631e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026322:	b2c9      	uxtb	r1, r1
 8026324:	3301      	adds	r3, #1
 8026326:	910b      	str	r1, [sp, #44]	; 0x2c
 8026328:	0859      	lsrs	r1, r3, #1
 802632a:	07db      	lsls	r3, r3, #31
 802632c:	5c79      	ldrb	r1, [r7, r1]
 802632e:	bf54      	ite	pl
 8026330:	f001 010f 	andpl.w	r1, r1, #15
 8026334:	1109      	asrmi	r1, r1, #4
 8026336:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802633a:	b2c9      	uxtb	r1, r1
 802633c:	9110      	str	r1, [sp, #64]	; 0x40
 802633e:	b280      	uxth	r0, r0
 8026340:	fa1f fc8c 	uxth.w	ip, ip
 8026344:	fb00 f30c 	mul.w	r3, r0, ip
 8026348:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802634c:	0100      	lsls	r0, r0, #4
 802634e:	fa1f fc8c 	uxth.w	ip, ip
 8026352:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8026356:	eba1 010c 	sub.w	r1, r1, ip
 802635a:	fa1f fa81 	uxth.w	sl, r1
 802635e:	1ac0      	subs	r0, r0, r3
 8026360:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026362:	b280      	uxth	r0, r0
 8026364:	4348      	muls	r0, r1
 8026366:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8026368:	fb02 020a 	mla	r2, r2, sl, r0
 802636c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026370:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026372:	fb03 c302 	mla	r3, r3, r2, ip
 8026376:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802637a:	2bff      	cmp	r3, #255	; 0xff
 802637c:	d12c      	bne.n	80263d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802637e:	4b14      	ldr	r3, [pc, #80]	; (80263d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026380:	681a      	ldr	r2, [r3, #0]
 8026382:	4b14      	ldr	r3, [pc, #80]	; (80263d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026384:	0951      	lsrs	r1, r2, #5
 8026386:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802638a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802638e:	430b      	orrs	r3, r1
 8026390:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026394:	4313      	orrs	r3, r2
 8026396:	f8ae 3000 	strh.w	r3, [lr]
 802639a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802639c:	441c      	add	r4, r3
 802639e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80263a0:	f10e 0e02 	add.w	lr, lr, #2
 80263a4:	441e      	add	r6, r3
 80263a6:	f108 38ff 	add.w	r8, r8, #4294967295
 80263aa:	e6ce      	b.n	802614a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80263ac:	f1bc 0f00 	cmp.w	ip, #0
 80263b0:	d0c5      	beq.n	802633e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80263b2:	9908      	ldr	r1, [sp, #32]
 80263b4:	440b      	add	r3, r1
 80263b6:	0859      	lsrs	r1, r3, #1
 80263b8:	07db      	lsls	r3, r3, #31
 80263ba:	5c79      	ldrb	r1, [r7, r1]
 80263bc:	bf54      	ite	pl
 80263be:	f001 010f 	andpl.w	r1, r1, #15
 80263c2:	1109      	asrmi	r1, r1, #4
 80263c4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80263c8:	b2c9      	uxtb	r1, r1
 80263ca:	910b      	str	r1, [sp, #44]	; 0x2c
 80263cc:	e7b7      	b.n	802633e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80263ce:	bf00      	nop
 80263d0:	200132cc 	.word	0x200132cc
 80263d4:	fffff800 	.word	0xfffff800
 80263d8:	2b00      	cmp	r3, #0
 80263da:	d0de      	beq.n	802639a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80263dc:	4a21      	ldr	r2, [pc, #132]	; (8026464 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80263de:	f8be c000 	ldrh.w	ip, [lr]
 80263e2:	6810      	ldr	r0, [r2, #0]
 80263e4:	fa1f fa83 	uxth.w	sl, r3
 80263e8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80263ec:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80263f0:	43db      	mvns	r3, r3
 80263f2:	b2db      	uxtb	r3, r3
 80263f4:	fb12 f20a 	smulbb	r2, r2, sl
 80263f8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80263fc:	fb01 2103 	mla	r1, r1, r3, r2
 8026400:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026404:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026408:	b2c0      	uxtb	r0, r0
 802640a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802640e:	fa5f fc8c 	uxtb.w	ip, ip
 8026412:	fb10 f00a 	smulbb	r0, r0, sl
 8026416:	fb0c 0003 	mla	r0, ip, r3, r0
 802641a:	b289      	uxth	r1, r1
 802641c:	fb1b fb0a 	smulbb	fp, fp, sl
 8026420:	b280      	uxth	r0, r0
 8026422:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026426:	fb02 b203 	mla	r2, r2, r3, fp
 802642a:	1c4b      	adds	r3, r1, #1
 802642c:	f100 0b01 	add.w	fp, r0, #1
 8026430:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026434:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026438:	b292      	uxth	r2, r2
 802643a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802643e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026442:	ea4b 0101 	orr.w	r1, fp, r1
 8026446:	f102 0b01 	add.w	fp, r2, #1
 802644a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802644e:	0952      	lsrs	r2, r2, #5
 8026450:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026454:	4311      	orrs	r1, r2
 8026456:	f8ae 1000 	strh.w	r1, [lr]
 802645a:	e79e      	b.n	802639a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802645c:	b013      	add	sp, #76	; 0x4c
 802645e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026462:	bf00      	nop
 8026464:	200132cc 	.word	0x200132cc

08026468 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8026468:	b570      	push	{r4, r5, r6, lr}
 802646a:	1208      	asrs	r0, r1, #8
 802646c:	b29e      	uxth	r6, r3
 802646e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026472:	1213      	asrs	r3, r2, #8
 8026474:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026478:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802647c:	fb13 f305 	smulbb	r3, r3, r5
 8026480:	fb10 f006 	smulbb	r0, r0, r6
 8026484:	4418      	add	r0, r3
 8026486:	10cc      	asrs	r4, r1, #3
 8026488:	10d3      	asrs	r3, r2, #3
 802648a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802648e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026492:	fb13 f305 	smulbb	r3, r3, r5
 8026496:	fb14 f406 	smulbb	r4, r4, r6
 802649a:	00c9      	lsls	r1, r1, #3
 802649c:	00d2      	lsls	r2, r2, #3
 802649e:	441c      	add	r4, r3
 80264a0:	b2d2      	uxtb	r2, r2
 80264a2:	b2cb      	uxtb	r3, r1
 80264a4:	fb12 f205 	smulbb	r2, r2, r5
 80264a8:	b280      	uxth	r0, r0
 80264aa:	fb13 f306 	smulbb	r3, r3, r6
 80264ae:	4413      	add	r3, r2
 80264b0:	1c42      	adds	r2, r0, #1
 80264b2:	b29b      	uxth	r3, r3
 80264b4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80264b8:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80264bc:	1c58      	adds	r0, r3, #1
 80264be:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80264c2:	b2a4      	uxth	r4, r4
 80264c4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80264c8:	4310      	orrs	r0, r2
 80264ca:	1c62      	adds	r2, r4, #1
 80264cc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80264d0:	0964      	lsrs	r4, r4, #5
 80264d2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80264d6:	4320      	orrs	r0, r4
 80264d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080264dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80264dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80264e0:	b08f      	sub	sp, #60	; 0x3c
 80264e2:	461c      	mov	r4, r3
 80264e4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80264e8:	9004      	str	r0, [sp, #16]
 80264ea:	460d      	mov	r5, r1
 80264ec:	4616      	mov	r6, r2
 80264ee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80264f0:	2f00      	cmp	r7, #0
 80264f2:	f000 80f6 	beq.w	80266e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80264f6:	6820      	ldr	r0, [r4, #0]
 80264f8:	6861      	ldr	r1, [r4, #4]
 80264fa:	aa0a      	add	r2, sp, #40	; 0x28
 80264fc:	c203      	stmia	r2!, {r0, r1}
 80264fe:	6818      	ldr	r0, [r3, #0]
 8026500:	6859      	ldr	r1, [r3, #4]
 8026502:	aa0c      	add	r2, sp, #48	; 0x30
 8026504:	c203      	stmia	r2!, {r0, r1}
 8026506:	a80a      	add	r0, sp, #40	; 0x28
 8026508:	f7ef fa5e 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802650c:	4621      	mov	r1, r4
 802650e:	a80c      	add	r0, sp, #48	; 0x30
 8026510:	f7ef fa9e 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026514:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026518:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802651c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026520:	f002 0301 	and.w	r3, r2, #1
 8026524:	9306      	str	r3, [sp, #24]
 8026526:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802652a:	f003 0101 	and.w	r1, r3, #1
 802652e:	9105      	str	r1, [sp, #20]
 8026530:	9805      	ldr	r0, [sp, #20]
 8026532:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026536:	4403      	add	r3, r0
 8026538:	fb01 2303 	mla	r3, r1, r3, r2
 802653c:	f04f 0802 	mov.w	r8, #2
 8026540:	fb93 f3f8 	sdiv	r3, r3, r8
 8026544:	441d      	add	r5, r3
 8026546:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802654a:	441a      	add	r2, r3
 802654c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026550:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026554:	4419      	add	r1, r3
 8026556:	4b64      	ldr	r3, [pc, #400]	; (80266e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026558:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802655c:	6818      	ldr	r0, [r3, #0]
 802655e:	6803      	ldr	r3, [r0, #0]
 8026560:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026562:	4798      	blx	r3
 8026564:	4a61      	ldr	r2, [pc, #388]	; (80266ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8026566:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802656a:	8813      	ldrh	r3, [r2, #0]
 802656c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8026570:	2fff      	cmp	r7, #255	; 0xff
 8026572:	fb03 a404 	mla	r4, r3, r4, sl
 8026576:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802657a:	f106 0604 	add.w	r6, r6, #4
 802657e:	4611      	mov	r1, r2
 8026580:	fb03 fb0b 	mul.w	fp, r3, fp
 8026584:	d06b      	beq.n	802665e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8026586:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802658a:	9303      	str	r3, [sp, #12]
 802658c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026590:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026594:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026598:	9b07      	ldr	r3, [sp, #28]
 802659a:	42a3      	cmp	r3, r4
 802659c:	f240 809c 	bls.w	80266d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80265a0:	9b06      	ldr	r3, [sp, #24]
 80265a2:	2b00      	cmp	r3, #0
 80265a4:	d039      	beq.n	802661a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80265a6:	782b      	ldrb	r3, [r5, #0]
 80265a8:	8822      	ldrh	r2, [r4, #0]
 80265aa:	9804      	ldr	r0, [sp, #16]
 80265ac:	f003 030f 	and.w	r3, r3, #15
 80265b0:	f105 0801 	add.w	r8, r5, #1
 80265b4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80265b8:	9b03      	ldr	r3, [sp, #12]
 80265ba:	9300      	str	r3, [sp, #0]
 80265bc:	463b      	mov	r3, r7
 80265be:	f7ff ff53 	bl	8026468 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80265c2:	f824 0b02 	strh.w	r0, [r4], #2
 80265c6:	f109 3bff 	add.w	fp, r9, #4294967295
 80265ca:	f1bb 0f01 	cmp.w	fp, #1
 80265ce:	46a2      	mov	sl, r4
 80265d0:	f104 0404 	add.w	r4, r4, #4
 80265d4:	dd24      	ble.n	8026620 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80265d6:	f898 3000 	ldrb.w	r3, [r8]
 80265da:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80265de:	9804      	ldr	r0, [sp, #16]
 80265e0:	091b      	lsrs	r3, r3, #4
 80265e2:	f1ab 0b02 	sub.w	fp, fp, #2
 80265e6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80265ea:	9b03      	ldr	r3, [sp, #12]
 80265ec:	9300      	str	r3, [sp, #0]
 80265ee:	463b      	mov	r3, r7
 80265f0:	f7ff ff3a 	bl	8026468 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80265f4:	f824 0c04 	strh.w	r0, [r4, #-4]
 80265f8:	f818 3b01 	ldrb.w	r3, [r8], #1
 80265fc:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026600:	9804      	ldr	r0, [sp, #16]
 8026602:	f003 030f 	and.w	r3, r3, #15
 8026606:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802660a:	9b03      	ldr	r3, [sp, #12]
 802660c:	9300      	str	r3, [sp, #0]
 802660e:	463b      	mov	r3, r7
 8026610:	f7ff ff2a 	bl	8026468 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026614:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026618:	e7d7      	b.n	80265ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802661a:	46a8      	mov	r8, r5
 802661c:	46cb      	mov	fp, r9
 802661e:	e7d4      	b.n	80265ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026620:	d10e      	bne.n	8026640 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8026622:	f898 3000 	ldrb.w	r3, [r8]
 8026626:	f8ba 2000 	ldrh.w	r2, [sl]
 802662a:	9804      	ldr	r0, [sp, #16]
 802662c:	091b      	lsrs	r3, r3, #4
 802662e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026632:	9b03      	ldr	r3, [sp, #12]
 8026634:	9300      	str	r3, [sp, #0]
 8026636:	463b      	mov	r3, r7
 8026638:	f7ff ff16 	bl	8026468 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802663c:	f82a 0b02 	strh.w	r0, [sl], #2
 8026640:	9b08      	ldr	r3, [sp, #32]
 8026642:	9a05      	ldr	r2, [sp, #20]
 8026644:	881c      	ldrh	r4, [r3, #0]
 8026646:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802664a:	eba4 0409 	sub.w	r4, r4, r9
 802664e:	4413      	add	r3, r2
 8026650:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8026654:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026656:	fb93 f3f2 	sdiv	r3, r3, r2
 802665a:	441d      	add	r5, r3
 802665c:	e79c      	b.n	8026598 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802665e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8026662:	45a3      	cmp	fp, r4
 8026664:	d938      	bls.n	80266d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026666:	9b06      	ldr	r3, [sp, #24]
 8026668:	b1f3      	cbz	r3, 80266a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802666a:	782b      	ldrb	r3, [r5, #0]
 802666c:	f003 030f 	and.w	r3, r3, #15
 8026670:	1c6a      	adds	r2, r5, #1
 8026672:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026676:	8023      	strh	r3, [r4, #0]
 8026678:	f109 30ff 	add.w	r0, r9, #4294967295
 802667c:	3402      	adds	r4, #2
 802667e:	2801      	cmp	r0, #1
 8026680:	4623      	mov	r3, r4
 8026682:	f104 0404 	add.w	r4, r4, #4
 8026686:	dd12      	ble.n	80266ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8026688:	7813      	ldrb	r3, [r2, #0]
 802668a:	091b      	lsrs	r3, r3, #4
 802668c:	3802      	subs	r0, #2
 802668e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026692:	f824 3c04 	strh.w	r3, [r4, #-4]
 8026696:	f812 3b01 	ldrb.w	r3, [r2], #1
 802669a:	f003 030f 	and.w	r3, r3, #15
 802669e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80266a2:	f824 3c02 	strh.w	r3, [r4, #-2]
 80266a6:	e7ea      	b.n	802667e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80266a8:	462a      	mov	r2, r5
 80266aa:	4648      	mov	r0, r9
 80266ac:	e7e7      	b.n	802667e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80266ae:	d106      	bne.n	80266be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80266b0:	7812      	ldrb	r2, [r2, #0]
 80266b2:	0912      	lsrs	r2, r2, #4
 80266b4:	3302      	adds	r3, #2
 80266b6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80266ba:	f823 2c02 	strh.w	r2, [r3, #-2]
 80266be:	880c      	ldrh	r4, [r1, #0]
 80266c0:	9a05      	ldr	r2, [sp, #20]
 80266c2:	eba4 0409 	sub.w	r4, r4, r9
 80266c6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80266ca:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80266ce:	4413      	add	r3, r2
 80266d0:	fb93 f3f8 	sdiv	r3, r3, r8
 80266d4:	441d      	add	r5, r3
 80266d6:	e7c4      	b.n	8026662 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80266d8:	4b03      	ldr	r3, [pc, #12]	; (80266e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80266da:	6818      	ldr	r0, [r3, #0]
 80266dc:	6803      	ldr	r3, [r0, #0]
 80266de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80266e0:	4798      	blx	r3
 80266e2:	b00f      	add	sp, #60	; 0x3c
 80266e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80266e8:	200132bc 	.word	0x200132bc
 80266ec:	200132b6 	.word	0x200132b6

080266f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80266f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80266f2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80266f6:	2dff      	cmp	r5, #255	; 0xff
 80266f8:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80266fc:	d10c      	bne.n	8026718 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80266fe:	2bff      	cmp	r3, #255	; 0xff
 8026700:	d10a      	bne.n	8026718 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026702:	4b25      	ldr	r3, [pc, #148]	; (8026798 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8026704:	0948      	lsrs	r0, r1, #5
 8026706:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802670a:	403b      	ands	r3, r7
 802670c:	4318      	orrs	r0, r3
 802670e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026712:	4308      	orrs	r0, r1
 8026714:	b280      	uxth	r0, r0
 8026716:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026718:	fb15 f503 	smulbb	r5, r5, r3
 802671c:	b2ab      	uxth	r3, r5
 802671e:	1c5d      	adds	r5, r3, #1
 8026720:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8026724:	1214      	asrs	r4, r2, #8
 8026726:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802672a:	fa1f fc85 	uxth.w	ip, r5
 802672e:	10d6      	asrs	r6, r2, #3
 8026730:	00d0      	lsls	r0, r2, #3
 8026732:	43ed      	mvns	r5, r5
 8026734:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026738:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802673c:	b2eb      	uxtb	r3, r5
 802673e:	b2c0      	uxtb	r0, r0
 8026740:	fb12 f20c 	smulbb	r2, r2, ip
 8026744:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026748:	fb04 2403 	mla	r4, r4, r3, r2
 802674c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026750:	b2c8      	uxtb	r0, r1
 8026752:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8026756:	b2fd      	uxtb	r5, r7
 8026758:	fb10 f00c 	smulbb	r0, r0, ip
 802675c:	b2a4      	uxth	r4, r4
 802675e:	fb02 0003 	mla	r0, r2, r3, r0
 8026762:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8026766:	fb15 f50c 	smulbb	r5, r5, ip
 802676a:	fb06 5503 	mla	r5, r6, r3, r5
 802676e:	b283      	uxth	r3, r0
 8026770:	1c60      	adds	r0, r4, #1
 8026772:	b2ad      	uxth	r5, r5
 8026774:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8026778:	1c58      	adds	r0, r3, #1
 802677a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802677e:	1c6b      	adds	r3, r5, #1
 8026780:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026784:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026788:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802678c:	096d      	lsrs	r5, r5, #5
 802678e:	4320      	orrs	r0, r4
 8026790:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026794:	4328      	orrs	r0, r5
 8026796:	e7be      	b.n	8026716 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8026798:	00fff800 	.word	0x00fff800

0802679c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802679c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80267a0:	461c      	mov	r4, r3
 80267a2:	b08d      	sub	sp, #52	; 0x34
 80267a4:	460d      	mov	r5, r1
 80267a6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80267a8:	6861      	ldr	r1, [r4, #4]
 80267aa:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80267ae:	4680      	mov	r8, r0
 80267b0:	6820      	ldr	r0, [r4, #0]
 80267b2:	4616      	mov	r6, r2
 80267b4:	aa08      	add	r2, sp, #32
 80267b6:	c203      	stmia	r2!, {r0, r1}
 80267b8:	6818      	ldr	r0, [r3, #0]
 80267ba:	6859      	ldr	r1, [r3, #4]
 80267bc:	aa0a      	add	r2, sp, #40	; 0x28
 80267be:	c203      	stmia	r2!, {r0, r1}
 80267c0:	a808      	add	r0, sp, #32
 80267c2:	f7ef f901 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80267c6:	4621      	mov	r1, r4
 80267c8:	a80a      	add	r0, sp, #40	; 0x28
 80267ca:	f7ef f941 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80267ce:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80267d2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80267d6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80267da:	f002 0301 	and.w	r3, r2, #1
 80267de:	9303      	str	r3, [sp, #12]
 80267e0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80267e4:	f003 0101 	and.w	r1, r3, #1
 80267e8:	9102      	str	r1, [sp, #8]
 80267ea:	9802      	ldr	r0, [sp, #8]
 80267ec:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80267f0:	4403      	add	r3, r0
 80267f2:	fb01 2303 	mla	r3, r1, r3, r2
 80267f6:	f04f 0a02 	mov.w	sl, #2
 80267fa:	fb93 f3fa 	sdiv	r3, r3, sl
 80267fe:	441d      	add	r5, r3
 8026800:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8026804:	441a      	add	r2, r3
 8026806:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802680a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802680e:	4a3f      	ldr	r2, [pc, #252]	; (802690c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8026810:	9205      	str	r2, [sp, #20]
 8026812:	4419      	add	r1, r3
 8026814:	6810      	ldr	r0, [r2, #0]
 8026816:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802681a:	6803      	ldr	r3, [r0, #0]
 802681c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802681e:	4798      	blx	r3
 8026820:	4b3b      	ldr	r3, [pc, #236]	; (8026910 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8026822:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8026826:	8819      	ldrh	r1, [r3, #0]
 8026828:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802682c:	fb01 c404 	mla	r4, r1, r4, ip
 8026830:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026834:	434f      	muls	r7, r1
 8026836:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802683a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802683e:	3604      	adds	r6, #4
 8026840:	9204      	str	r2, [sp, #16]
 8026842:	9b04      	ldr	r3, [sp, #16]
 8026844:	429c      	cmp	r4, r3
 8026846:	d258      	bcs.n	80268fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8026848:	9b03      	ldr	r3, [sp, #12]
 802684a:	2b00      	cmp	r3, #0
 802684c:	d034      	beq.n	80268b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802684e:	782b      	ldrb	r3, [r5, #0]
 8026850:	f003 030f 	and.w	r3, r3, #15
 8026854:	1c6f      	adds	r7, r5, #1
 8026856:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802685a:	0e0b      	lsrs	r3, r1, #24
 802685c:	d006      	beq.n	802686c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802685e:	8822      	ldrh	r2, [r4, #0]
 8026860:	9300      	str	r3, [sp, #0]
 8026862:	4640      	mov	r0, r8
 8026864:	464b      	mov	r3, r9
 8026866:	f7ff ff43 	bl	80266f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802686a:	8020      	strh	r0, [r4, #0]
 802686c:	3402      	adds	r4, #2
 802686e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8026872:	f1ba 0f01 	cmp.w	sl, #1
 8026876:	dd22      	ble.n	80268be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8026878:	783b      	ldrb	r3, [r7, #0]
 802687a:	091b      	lsrs	r3, r3, #4
 802687c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026880:	0e0b      	lsrs	r3, r1, #24
 8026882:	d006      	beq.n	8026892 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8026884:	8822      	ldrh	r2, [r4, #0]
 8026886:	9300      	str	r3, [sp, #0]
 8026888:	4640      	mov	r0, r8
 802688a:	464b      	mov	r3, r9
 802688c:	f7ff ff30 	bl	80266f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026890:	8020      	strh	r0, [r4, #0]
 8026892:	f817 3b01 	ldrb.w	r3, [r7], #1
 8026896:	f003 030f 	and.w	r3, r3, #15
 802689a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802689e:	0e0b      	lsrs	r3, r1, #24
 80268a0:	d006      	beq.n	80268b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80268a2:	8862      	ldrh	r2, [r4, #2]
 80268a4:	9300      	str	r3, [sp, #0]
 80268a6:	4640      	mov	r0, r8
 80268a8:	464b      	mov	r3, r9
 80268aa:	f7ff ff21 	bl	80266f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80268ae:	8060      	strh	r0, [r4, #2]
 80268b0:	3404      	adds	r4, #4
 80268b2:	f1aa 0a02 	sub.w	sl, sl, #2
 80268b6:	e7dc      	b.n	8026872 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80268b8:	462f      	mov	r7, r5
 80268ba:	46da      	mov	sl, fp
 80268bc:	e7d9      	b.n	8026872 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80268be:	d10d      	bne.n	80268dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80268c0:	783b      	ldrb	r3, [r7, #0]
 80268c2:	091b      	lsrs	r3, r3, #4
 80268c4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80268c8:	0e0b      	lsrs	r3, r1, #24
 80268ca:	d006      	beq.n	80268da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80268cc:	8822      	ldrh	r2, [r4, #0]
 80268ce:	9300      	str	r3, [sp, #0]
 80268d0:	4640      	mov	r0, r8
 80268d2:	464b      	mov	r3, r9
 80268d4:	f7ff ff0c 	bl	80266f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80268d8:	8020      	strh	r0, [r4, #0]
 80268da:	3402      	adds	r4, #2
 80268dc:	9b06      	ldr	r3, [sp, #24]
 80268de:	9a02      	ldr	r2, [sp, #8]
 80268e0:	881b      	ldrh	r3, [r3, #0]
 80268e2:	eba3 030b 	sub.w	r3, r3, fp
 80268e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80268ea:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80268ee:	4413      	add	r3, r2
 80268f0:	9a07      	ldr	r2, [sp, #28]
 80268f2:	fb93 f3f2 	sdiv	r3, r3, r2
 80268f6:	441d      	add	r5, r3
 80268f8:	e7a3      	b.n	8026842 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80268fa:	9b05      	ldr	r3, [sp, #20]
 80268fc:	6818      	ldr	r0, [r3, #0]
 80268fe:	6803      	ldr	r3, [r0, #0]
 8026900:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026902:	4798      	blx	r3
 8026904:	b00d      	add	sp, #52	; 0x34
 8026906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802690a:	bf00      	nop
 802690c:	200132bc 	.word	0x200132bc
 8026910:	200132b6 	.word	0x200132b6

08026914 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8026914:	b570      	push	{r4, r5, r6, lr}
 8026916:	1214      	asrs	r4, r2, #8
 8026918:	788d      	ldrb	r5, [r1, #2]
 802691a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802691e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026922:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026926:	fb15 f503 	smulbb	r5, r5, r3
 802692a:	fb04 5506 	mla	r5, r4, r6, r5
 802692e:	10d0      	asrs	r0, r2, #3
 8026930:	784c      	ldrb	r4, [r1, #1]
 8026932:	7809      	ldrb	r1, [r1, #0]
 8026934:	00d2      	lsls	r2, r2, #3
 8026936:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802693a:	b2d2      	uxtb	r2, r2
 802693c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8026940:	fb14 f403 	smulbb	r4, r4, r3
 8026944:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8026948:	fb11 f303 	smulbb	r3, r1, r3
 802694c:	fb00 4406 	mla	r4, r0, r6, r4
 8026950:	fb02 3306 	mla	r3, r2, r6, r3
 8026954:	b2ad      	uxth	r5, r5
 8026956:	b29b      	uxth	r3, r3
 8026958:	b2a4      	uxth	r4, r4
 802695a:	1c68      	adds	r0, r5, #1
 802695c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8026960:	1c62      	adds	r2, r4, #1
 8026962:	1c58      	adds	r0, r3, #1
 8026964:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026968:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802696c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026970:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026974:	0964      	lsrs	r4, r4, #5
 8026976:	4328      	orrs	r0, r5
 8026978:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802697c:	4320      	orrs	r0, r4
 802697e:	bd70      	pop	{r4, r5, r6, pc}

08026980 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8026980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026984:	b08f      	sub	sp, #60	; 0x3c
 8026986:	461c      	mov	r4, r3
 8026988:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802698c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802698e:	4682      	mov	sl, r0
 8026990:	460e      	mov	r6, r1
 8026992:	4615      	mov	r5, r2
 8026994:	2f00      	cmp	r7, #0
 8026996:	f000 8142 	beq.w	8026c1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802699a:	6820      	ldr	r0, [r4, #0]
 802699c:	6861      	ldr	r1, [r4, #4]
 802699e:	aa0a      	add	r2, sp, #40	; 0x28
 80269a0:	c203      	stmia	r2!, {r0, r1}
 80269a2:	6818      	ldr	r0, [r3, #0]
 80269a4:	6859      	ldr	r1, [r3, #4]
 80269a6:	aa0c      	add	r2, sp, #48	; 0x30
 80269a8:	c203      	stmia	r2!, {r0, r1}
 80269aa:	a80a      	add	r0, sp, #40	; 0x28
 80269ac:	f7ef f80c 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80269b0:	4621      	mov	r1, r4
 80269b2:	a80c      	add	r0, sp, #48	; 0x30
 80269b4:	f7ef f84c 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80269b8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80269bc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80269c0:	f002 0301 	and.w	r3, r2, #1
 80269c4:	9306      	str	r3, [sp, #24]
 80269c6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80269ca:	f003 0101 	and.w	r1, r3, #1
 80269ce:	9105      	str	r1, [sp, #20]
 80269d0:	9805      	ldr	r0, [sp, #20]
 80269d2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80269d6:	4403      	add	r3, r0
 80269d8:	fb01 2303 	mla	r3, r1, r3, r2
 80269dc:	f04f 0802 	mov.w	r8, #2
 80269e0:	fb93 f3f8 	sdiv	r3, r3, r8
 80269e4:	441e      	add	r6, r3
 80269e6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80269ea:	441a      	add	r2, r3
 80269ec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80269f0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80269f4:	4419      	add	r1, r3
 80269f6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80269fa:	9303      	str	r3, [sp, #12]
 80269fc:	4b89      	ldr	r3, [pc, #548]	; (8026c24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80269fe:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026a02:	6818      	ldr	r0, [r3, #0]
 8026a04:	6803      	ldr	r3, [r0, #0]
 8026a06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026a08:	4798      	blx	r3
 8026a0a:	4a87      	ldr	r2, [pc, #540]	; (8026c28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8026a0c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026a10:	8813      	ldrh	r3, [r2, #0]
 8026a12:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8026a16:	2fff      	cmp	r7, #255	; 0xff
 8026a18:	fb03 9404 	mla	r4, r3, r4, r9
 8026a1c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026a20:	f105 0504 	add.w	r5, r5, #4
 8026a24:	4694      	mov	ip, r2
 8026a26:	fb03 f30b 	mul.w	r3, r3, fp
 8026a2a:	d071      	beq.n	8026b10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026a2c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026a30:	43f9      	mvns	r1, r7
 8026a32:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026a36:	b2c9      	uxtb	r1, r1
 8026a38:	9104      	str	r1, [sp, #16]
 8026a3a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026a3e:	9b07      	ldr	r3, [sp, #28]
 8026a40:	42a3      	cmp	r3, r4
 8026a42:	f240 80e7 	bls.w	8026c14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026a46:	9b06      	ldr	r3, [sp, #24]
 8026a48:	2b00      	cmp	r3, #0
 8026a4a:	d03d      	beq.n	8026ac8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8026a4c:	7831      	ldrb	r1, [r6, #0]
 8026a4e:	9b04      	ldr	r3, [sp, #16]
 8026a50:	8822      	ldrh	r2, [r4, #0]
 8026a52:	9300      	str	r3, [sp, #0]
 8026a54:	f001 010f 	and.w	r1, r1, #15
 8026a58:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026a5c:	463b      	mov	r3, r7
 8026a5e:	4429      	add	r1, r5
 8026a60:	4650      	mov	r0, sl
 8026a62:	f7ff ff57 	bl	8026914 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026a66:	9b03      	ldr	r3, [sp, #12]
 8026a68:	f824 0b02 	strh.w	r0, [r4], #2
 8026a6c:	f106 0801 	add.w	r8, r6, #1
 8026a70:	f103 3bff 	add.w	fp, r3, #4294967295
 8026a74:	f1bb 0f01 	cmp.w	fp, #1
 8026a78:	46a1      	mov	r9, r4
 8026a7a:	f104 0404 	add.w	r4, r4, #4
 8026a7e:	dd27      	ble.n	8026ad0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8026a80:	f898 1000 	ldrb.w	r1, [r8]
 8026a84:	9b04      	ldr	r3, [sp, #16]
 8026a86:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026a8a:	9300      	str	r3, [sp, #0]
 8026a8c:	0909      	lsrs	r1, r1, #4
 8026a8e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026a92:	463b      	mov	r3, r7
 8026a94:	4429      	add	r1, r5
 8026a96:	4650      	mov	r0, sl
 8026a98:	f7ff ff3c 	bl	8026914 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026a9c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026aa0:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026aa4:	9b04      	ldr	r3, [sp, #16]
 8026aa6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026aaa:	9300      	str	r3, [sp, #0]
 8026aac:	f001 010f 	and.w	r1, r1, #15
 8026ab0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026ab4:	463b      	mov	r3, r7
 8026ab6:	4429      	add	r1, r5
 8026ab8:	4650      	mov	r0, sl
 8026aba:	f7ff ff2b 	bl	8026914 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026abe:	f1ab 0b02 	sub.w	fp, fp, #2
 8026ac2:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026ac6:	e7d5      	b.n	8026a74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026ac8:	46b0      	mov	r8, r6
 8026aca:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8026ace:	e7d1      	b.n	8026a74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026ad0:	d10f      	bne.n	8026af2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8026ad2:	f898 1000 	ldrb.w	r1, [r8]
 8026ad6:	9b04      	ldr	r3, [sp, #16]
 8026ad8:	f8b9 2000 	ldrh.w	r2, [r9]
 8026adc:	9300      	str	r3, [sp, #0]
 8026ade:	0909      	lsrs	r1, r1, #4
 8026ae0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026ae4:	463b      	mov	r3, r7
 8026ae6:	4429      	add	r1, r5
 8026ae8:	4650      	mov	r0, sl
 8026aea:	f7ff ff13 	bl	8026914 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026aee:	f829 0b02 	strh.w	r0, [r9], #2
 8026af2:	9b08      	ldr	r3, [sp, #32]
 8026af4:	9a05      	ldr	r2, [sp, #20]
 8026af6:	881c      	ldrh	r4, [r3, #0]
 8026af8:	9b03      	ldr	r3, [sp, #12]
 8026afa:	1ae4      	subs	r4, r4, r3
 8026afc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026b00:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026b04:	4413      	add	r3, r2
 8026b06:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026b08:	fb93 f3f2 	sdiv	r3, r3, r2
 8026b0c:	441e      	add	r6, r3
 8026b0e:	e796      	b.n	8026a3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026b10:	4f46      	ldr	r7, [pc, #280]	; (8026c2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026b12:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026b16:	42a3      	cmp	r3, r4
 8026b18:	d97c      	bls.n	8026c14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026b1a:	9a06      	ldr	r2, [sp, #24]
 8026b1c:	2a00      	cmp	r2, #0
 8026b1e:	d054      	beq.n	8026bca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8026b20:	7830      	ldrb	r0, [r6, #0]
 8026b22:	f000 000f 	and.w	r0, r0, #15
 8026b26:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026b2a:	eb05 0e00 	add.w	lr, r5, r0
 8026b2e:	5c28      	ldrb	r0, [r5, r0]
 8026b30:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026b34:	f89e e001 	ldrb.w	lr, [lr, #1]
 8026b38:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026b3c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026b40:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026b44:	ea42 020e 	orr.w	r2, r2, lr
 8026b48:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026b4c:	f824 2b02 	strh.w	r2, [r4], #2
 8026b50:	9a03      	ldr	r2, [sp, #12]
 8026b52:	1c71      	adds	r1, r6, #1
 8026b54:	f102 3eff 	add.w	lr, r2, #4294967295
 8026b58:	f1be 0f01 	cmp.w	lr, #1
 8026b5c:	4620      	mov	r0, r4
 8026b5e:	f104 0404 	add.w	r4, r4, #4
 8026b62:	dd36      	ble.n	8026bd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026b64:	7808      	ldrb	r0, [r1, #0]
 8026b66:	0900      	lsrs	r0, r0, #4
 8026b68:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026b6c:	eb05 0a00 	add.w	sl, r5, r0
 8026b70:	f1ae 0e02 	sub.w	lr, lr, #2
 8026b74:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026b78:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026b7c:	00d2      	lsls	r2, r2, #3
 8026b7e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026b82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026b86:	ea49 0202 	orr.w	r2, r9, r2
 8026b8a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026b8e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026b92:	f824 2c04 	strh.w	r2, [r4, #-4]
 8026b96:	f811 0b01 	ldrb.w	r0, [r1], #1
 8026b9a:	f000 000f 	and.w	r0, r0, #15
 8026b9e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026ba2:	eb05 0a00 	add.w	sl, r5, r0
 8026ba6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026baa:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026bae:	00d2      	lsls	r2, r2, #3
 8026bb0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026bb4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026bb8:	ea49 0202 	orr.w	r2, r9, r2
 8026bbc:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026bc0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026bc4:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026bc8:	e7c6      	b.n	8026b58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026bca:	4631      	mov	r1, r6
 8026bcc:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026bd0:	e7c2      	b.n	8026b58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026bd2:	d111      	bne.n	8026bf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026bd4:	7809      	ldrb	r1, [r1, #0]
 8026bd6:	0909      	lsrs	r1, r1, #4
 8026bd8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026bdc:	186c      	adds	r4, r5, r1
 8026bde:	5c69      	ldrb	r1, [r5, r1]
 8026be0:	78a2      	ldrb	r2, [r4, #2]
 8026be2:	7864      	ldrb	r4, [r4, #1]
 8026be4:	00e4      	lsls	r4, r4, #3
 8026be6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026bea:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026bee:	4322      	orrs	r2, r4
 8026bf0:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026bf4:	f820 2b02 	strh.w	r2, [r0], #2
 8026bf8:	9a03      	ldr	r2, [sp, #12]
 8026bfa:	f8bc 4000 	ldrh.w	r4, [ip]
 8026bfe:	9905      	ldr	r1, [sp, #20]
 8026c00:	1aa4      	subs	r4, r4, r2
 8026c02:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8026c06:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026c0a:	440a      	add	r2, r1
 8026c0c:	fb92 f2f8 	sdiv	r2, r2, r8
 8026c10:	4416      	add	r6, r2
 8026c12:	e780      	b.n	8026b16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026c14:	4b03      	ldr	r3, [pc, #12]	; (8026c24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026c16:	6818      	ldr	r0, [r3, #0]
 8026c18:	6803      	ldr	r3, [r0, #0]
 8026c1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026c1c:	4798      	blx	r3
 8026c1e:	b00f      	add	sp, #60	; 0x3c
 8026c20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026c24:	200132bc 	.word	0x200132bc
 8026c28:	200132b6 	.word	0x200132b6
 8026c2c:	fffff800 	.word	0xfffff800

08026c30 <CRC_Lock>:
 8026c30:	b530      	push	{r4, r5, lr}
 8026c32:	4a20      	ldr	r2, [pc, #128]	; (8026cb4 <CRC_Lock+0x84>)
 8026c34:	6813      	ldr	r3, [r2, #0]
 8026c36:	f023 0301 	bic.w	r3, r3, #1
 8026c3a:	6013      	str	r3, [r2, #0]
 8026c3c:	4b1e      	ldr	r3, [pc, #120]	; (8026cb8 <CRC_Lock+0x88>)
 8026c3e:	681a      	ldr	r2, [r3, #0]
 8026c40:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026c44:	4022      	ands	r2, r4
 8026c46:	f24c 2540 	movw	r5, #49728	; 0xc240
 8026c4a:	42aa      	cmp	r2, r5
 8026c4c:	d005      	beq.n	8026c5a <CRC_Lock+0x2a>
 8026c4e:	681b      	ldr	r3, [r3, #0]
 8026c50:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026c54:	4023      	ands	r3, r4
 8026c56:	4293      	cmp	r3, r2
 8026c58:	d124      	bne.n	8026ca4 <CRC_Lock+0x74>
 8026c5a:	4b18      	ldr	r3, [pc, #96]	; (8026cbc <CRC_Lock+0x8c>)
 8026c5c:	681b      	ldr	r3, [r3, #0]
 8026c5e:	bb0b      	cbnz	r3, 8026ca4 <CRC_Lock+0x74>
 8026c60:	4b17      	ldr	r3, [pc, #92]	; (8026cc0 <CRC_Lock+0x90>)
 8026c62:	681a      	ldr	r2, [r3, #0]
 8026c64:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026c68:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026c6c:	d00d      	beq.n	8026c8a <CRC_Lock+0x5a>
 8026c6e:	681a      	ldr	r2, [r3, #0]
 8026c70:	f240 4483 	movw	r4, #1155	; 0x483
 8026c74:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026c78:	42a2      	cmp	r2, r4
 8026c7a:	d006      	beq.n	8026c8a <CRC_Lock+0x5a>
 8026c7c:	681b      	ldr	r3, [r3, #0]
 8026c7e:	f240 4285 	movw	r2, #1157	; 0x485
 8026c82:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026c86:	4293      	cmp	r3, r2
 8026c88:	d10c      	bne.n	8026ca4 <CRC_Lock+0x74>
 8026c8a:	4b0e      	ldr	r3, [pc, #56]	; (8026cc4 <CRC_Lock+0x94>)
 8026c8c:	2201      	movs	r2, #1
 8026c8e:	601a      	str	r2, [r3, #0]
 8026c90:	681a      	ldr	r2, [r3, #0]
 8026c92:	2a00      	cmp	r2, #0
 8026c94:	d1fc      	bne.n	8026c90 <CRC_Lock+0x60>
 8026c96:	4b0c      	ldr	r3, [pc, #48]	; (8026cc8 <CRC_Lock+0x98>)
 8026c98:	6018      	str	r0, [r3, #0]
 8026c9a:	6818      	ldr	r0, [r3, #0]
 8026c9c:	1a43      	subs	r3, r0, r1
 8026c9e:	4258      	negs	r0, r3
 8026ca0:	4158      	adcs	r0, r3
 8026ca2:	bd30      	pop	{r4, r5, pc}
 8026ca4:	4b09      	ldr	r3, [pc, #36]	; (8026ccc <CRC_Lock+0x9c>)
 8026ca6:	2201      	movs	r2, #1
 8026ca8:	601a      	str	r2, [r3, #0]
 8026caa:	681a      	ldr	r2, [r3, #0]
 8026cac:	2a00      	cmp	r2, #0
 8026cae:	d1fc      	bne.n	8026caa <CRC_Lock+0x7a>
 8026cb0:	4b07      	ldr	r3, [pc, #28]	; (8026cd0 <CRC_Lock+0xa0>)
 8026cb2:	e7f1      	b.n	8026c98 <CRC_Lock+0x68>
 8026cb4:	e0002000 	.word	0xe0002000
 8026cb8:	e000ed00 	.word	0xe000ed00
 8026cbc:	e0042000 	.word	0xe0042000
 8026cc0:	5c001000 	.word	0x5c001000
 8026cc4:	58024c08 	.word	0x58024c08
 8026cc8:	58024c00 	.word	0x58024c00
 8026ccc:	40023008 	.word	0x40023008
 8026cd0:	40023000 	.word	0x40023000

08026cd4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026cd4:	6101      	str	r1, [r0, #16]
 8026cd6:	4770      	bx	lr

08026cd8 <_ZN8touchgfx8Gestures4tickEv>:
 8026cd8:	7b83      	ldrb	r3, [r0, #14]
 8026cda:	b14b      	cbz	r3, 8026cf0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026cdc:	8903      	ldrh	r3, [r0, #8]
 8026cde:	3301      	adds	r3, #1
 8026ce0:	b29b      	uxth	r3, r3
 8026ce2:	2b07      	cmp	r3, #7
 8026ce4:	8103      	strh	r3, [r0, #8]
 8026ce6:	bf81      	itttt	hi
 8026ce8:	2300      	movhi	r3, #0
 8026cea:	8143      	strhhi	r3, [r0, #10]
 8026cec:	8183      	strhhi	r3, [r0, #12]
 8026cee:	7383      	strbhi	r3, [r0, #14]
 8026cf0:	4770      	bx	lr
	...

08026cf4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026cf4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026cf8:	4698      	mov	r8, r3
 8026cfa:	8883      	ldrh	r3, [r0, #4]
 8026cfc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026d00:	eba8 0303 	sub.w	r3, r8, r3
 8026d04:	b21b      	sxth	r3, r3
 8026d06:	4604      	mov	r4, r0
 8026d08:	2b00      	cmp	r3, #0
 8026d0a:	4617      	mov	r7, r2
 8026d0c:	4a18      	ldr	r2, [pc, #96]	; (8026d70 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026d0e:	9200      	str	r2, [sp, #0]
 8026d10:	bfb8      	it	lt
 8026d12:	425b      	neglt	r3, r3
 8026d14:	8aa2      	ldrh	r2, [r4, #20]
 8026d16:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026d1a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026d1e:	b21b      	sxth	r3, r3
 8026d20:	460e      	mov	r6, r1
 8026d22:	4293      	cmp	r3, r2
 8026d24:	88c1      	ldrh	r1, [r0, #6]
 8026d26:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026d2a:	f04f 0000 	mov.w	r0, #0
 8026d2e:	f88d 0004 	strb.w	r0, [sp, #4]
 8026d32:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026d36:	dc07      	bgt.n	8026d48 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026d38:	1a69      	subs	r1, r5, r1
 8026d3a:	b209      	sxth	r1, r1
 8026d3c:	2900      	cmp	r1, #0
 8026d3e:	bfb8      	it	lt
 8026d40:	4249      	neglt	r1, r1
 8026d42:	b209      	sxth	r1, r1
 8026d44:	428a      	cmp	r2, r1
 8026d46:	da10      	bge.n	8026d6a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026d48:	6920      	ldr	r0, [r4, #16]
 8026d4a:	6803      	ldr	r3, [r0, #0]
 8026d4c:	4669      	mov	r1, sp
 8026d4e:	685b      	ldr	r3, [r3, #4]
 8026d50:	4798      	blx	r3
 8026d52:	eba8 0606 	sub.w	r6, r8, r6
 8026d56:	2300      	movs	r3, #0
 8026d58:	1bef      	subs	r7, r5, r7
 8026d5a:	2001      	movs	r0, #1
 8026d5c:	8123      	strh	r3, [r4, #8]
 8026d5e:	8166      	strh	r6, [r4, #10]
 8026d60:	81a7      	strh	r7, [r4, #12]
 8026d62:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026d66:	80e5      	strh	r5, [r4, #6]
 8026d68:	73a0      	strb	r0, [r4, #14]
 8026d6a:	b004      	add	sp, #16
 8026d6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026d70:	0802f010 	.word	0x0802f010

08026d74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026d74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026d76:	461e      	mov	r6, r3
 8026d78:	1e4b      	subs	r3, r1, #1
 8026d7a:	2b01      	cmp	r3, #1
 8026d7c:	b085      	sub	sp, #20
 8026d7e:	4604      	mov	r4, r0
 8026d80:	460d      	mov	r5, r1
 8026d82:	4617      	mov	r7, r2
 8026d84:	d84b      	bhi.n	8026e1e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026d86:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026d8a:	1cd3      	adds	r3, r2, #3
 8026d8c:	b29b      	uxth	r3, r3
 8026d8e:	2b06      	cmp	r3, #6
 8026d90:	d916      	bls.n	8026dc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026d92:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026e34 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026d96:	f8cd c004 	str.w	ip, [sp, #4]
 8026d9a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026d9e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026da2:	6900      	ldr	r0, [r0, #16]
 8026da4:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026da8:	f04f 0c00 	mov.w	ip, #0
 8026dac:	f88d c008 	strb.w	ip, [sp, #8]
 8026db0:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026db4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026db8:	6803      	ldr	r3, [r0, #0]
 8026dba:	a901      	add	r1, sp, #4
 8026dbc:	689b      	ldr	r3, [r3, #8]
 8026dbe:	4798      	blx	r3
 8026dc0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026dc4:	1cd3      	adds	r3, r2, #3
 8026dc6:	b29b      	uxth	r3, r3
 8026dc8:	2b06      	cmp	r3, #6
 8026dca:	d916      	bls.n	8026dfa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026dcc:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026e34 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026dd0:	f8cd c004 	str.w	ip, [sp, #4]
 8026dd4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026dd8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026ddc:	6920      	ldr	r0, [r4, #16]
 8026dde:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026de2:	f04f 0c01 	mov.w	ip, #1
 8026de6:	f88d c008 	strb.w	ip, [sp, #8]
 8026dea:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026dee:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026df2:	6803      	ldr	r3, [r0, #0]
 8026df4:	a901      	add	r1, sp, #4
 8026df6:	689b      	ldr	r3, [r3, #8]
 8026df8:	4798      	blx	r3
 8026dfa:	4b0d      	ldr	r3, [pc, #52]	; (8026e30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026dfc:	9301      	str	r3, [sp, #4]
 8026dfe:	6920      	ldr	r0, [r4, #16]
 8026e00:	f88d 5008 	strb.w	r5, [sp, #8]
 8026e04:	2300      	movs	r3, #0
 8026e06:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026e0a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026e0e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026e12:	6803      	ldr	r3, [r0, #0]
 8026e14:	a901      	add	r1, sp, #4
 8026e16:	681b      	ldr	r3, [r3, #0]
 8026e18:	4798      	blx	r3
 8026e1a:	b005      	add	sp, #20
 8026e1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026e1e:	2900      	cmp	r1, #0
 8026e20:	d1eb      	bne.n	8026dfa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026e22:	80a2      	strh	r2, [r4, #4]
 8026e24:	80c6      	strh	r6, [r0, #6]
 8026e26:	60a1      	str	r1, [r4, #8]
 8026e28:	81a1      	strh	r1, [r4, #12]
 8026e2a:	73a1      	strb	r1, [r4, #14]
 8026e2c:	e7e5      	b.n	8026dfa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026e2e:	bf00      	nop
 8026e30:	0802effc 	.word	0x0802effc
 8026e34:	0802f024 	.word	0x0802f024

08026e38 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8026e38:	10c9      	asrs	r1, r1, #3
 8026e3a:	2900      	cmp	r1, #0
 8026e3c:	bfb8      	it	lt
 8026e3e:	4249      	neglt	r1, r1
 8026e40:	2801      	cmp	r0, #1
 8026e42:	d108      	bne.n	8026e56 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026e44:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026e48:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026e4c:	4601      	mov	r1, r0
 8026e4e:	dd02      	ble.n	8026e56 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026e50:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026e54:	4770      	bx	lr
 8026e56:	29ff      	cmp	r1, #255	; 0xff
 8026e58:	bfa8      	it	ge
 8026e5a:	21ff      	movge	r1, #255	; 0xff
 8026e5c:	4608      	mov	r0, r1
 8026e5e:	4770      	bx	lr

08026e60 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026e60:	b410      	push	{r4}
 8026e62:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026e66:	429c      	cmp	r4, r3
 8026e68:	d803      	bhi.n	8026e72 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026e6a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026e6e:	f7ed b8b1 	b.w	8013fd4 <_ZN8touchgfx7Outline6lineToEii>
 8026e72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026e76:	4770      	bx	lr

08026e78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026e7c:	b08b      	sub	sp, #44	; 0x2c
 8026e7e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026e82:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8026e86:	9308      	str	r3, [sp, #32]
 8026e88:	4606      	mov	r6, r0
 8026e8a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026e8e:	9309      	str	r3, [sp, #36]	; 0x24
 8026e90:	468a      	mov	sl, r1
 8026e92:	f7ed fa0c 	bl	80142ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026e96:	68b5      	ldr	r5, [r6, #8]
 8026e98:	4604      	mov	r4, r0
 8026e9a:	2d00      	cmp	r5, #0
 8026e9c:	d044      	beq.n	8026f28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026e9e:	6873      	ldr	r3, [r6, #4]
 8026ea0:	42ab      	cmp	r3, r5
 8026ea2:	d33d      	bcc.n	8026f20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026ea4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8026ea8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026eac:	eb02 0b03 	add.w	fp, r2, r3
 8026eb0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026eb4:	fb02 1203 	mla	r2, r2, r3, r1
 8026eb8:	9205      	str	r2, [sp, #20]
 8026eba:	1e6a      	subs	r2, r5, #1
 8026ebc:	9204      	str	r2, [sp, #16]
 8026ebe:	f04f 0800 	mov.w	r8, #0
 8026ec2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8026ec6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026eca:	454b      	cmp	r3, r9
 8026ecc:	463a      	mov	r2, r7
 8026ece:	d008      	beq.n	8026ee2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026ed0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026ed4:	eb03 0b09 	add.w	fp, r3, r9
 8026ed8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026edc:	fb03 1309 	mla	r3, r3, r9, r1
 8026ee0:	9305      	str	r3, [sp, #20]
 8026ee2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8026ee6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8026eea:	4498      	add	r8, r3
 8026eec:	9b04      	ldr	r3, [sp, #16]
 8026eee:	3b01      	subs	r3, #1
 8026ef0:	9304      	str	r3, [sp, #16]
 8026ef2:	9b04      	ldr	r3, [sp, #16]
 8026ef4:	3301      	adds	r3, #1
 8026ef6:	d015      	beq.n	8026f24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8026ef8:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026efc:	42bb      	cmp	r3, r7
 8026efe:	d117      	bne.n	8026f30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026f00:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026f04:	9b04      	ldr	r3, [sp, #16]
 8026f06:	4548      	cmp	r0, r9
 8026f08:	f103 33ff 	add.w	r3, r3, #4294967295
 8026f0c:	d17f      	bne.n	802700e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026f0e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026f12:	4401      	add	r1, r0
 8026f14:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026f18:	4480      	add	r8, r0
 8026f1a:	e7e9      	b.n	8026ef0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026f1c:	461f      	mov	r7, r3
 8026f1e:	e044      	b.n	8026faa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8026f20:	2000      	movs	r0, #0
 8026f22:	e002      	b.n	8026f2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026f24:	2900      	cmp	r1, #0
 8026f26:	d16f      	bne.n	8027008 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026f28:	2001      	movs	r0, #1
 8026f2a:	b00b      	add	sp, #44	; 0x2c
 8026f2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026f30:	2900      	cmp	r1, #0
 8026f32:	d030      	beq.n	8026f96 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026f34:	2f00      	cmp	r7, #0
 8026f36:	db29      	blt.n	8026f8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026f38:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026f3c:	42bb      	cmp	r3, r7
 8026f3e:	dd25      	ble.n	8026f8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026f40:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026f44:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026f48:	f7ff ff76 	bl	8026e38 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026f4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026f4e:	fb10 f003 	smulbb	r0, r0, r3
 8026f52:	b280      	uxth	r0, r0
 8026f54:	1c41      	adds	r1, r0, #1
 8026f56:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026f5a:	1209      	asrs	r1, r1, #8
 8026f5c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026f60:	d014      	beq.n	8026f8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026f62:	9808      	ldr	r0, [sp, #32]
 8026f64:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026f66:	b2c9      	uxtb	r1, r1
 8026f68:	b2ba      	uxth	r2, r7
 8026f6a:	9102      	str	r1, [sp, #8]
 8026f6c:	2101      	movs	r1, #1
 8026f6e:	4413      	add	r3, r2
 8026f70:	9101      	str	r1, [sp, #4]
 8026f72:	4402      	add	r2, r0
 8026f74:	fa0f f18b 	sxth.w	r1, fp
 8026f78:	f8da 0000 	ldr.w	r0, [sl]
 8026f7c:	9100      	str	r1, [sp, #0]
 8026f7e:	6941      	ldr	r1, [r0, #20]
 8026f80:	b21b      	sxth	r3, r3
 8026f82:	460d      	mov	r5, r1
 8026f84:	b212      	sxth	r2, r2
 8026f86:	9905      	ldr	r1, [sp, #20]
 8026f88:	4650      	mov	r0, sl
 8026f8a:	47a8      	blx	r5
 8026f8c:	9b04      	ldr	r3, [sp, #16]
 8026f8e:	3301      	adds	r3, #1
 8026f90:	f107 0201 	add.w	r2, r7, #1
 8026f94:	d0c8      	beq.n	8026f28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026f96:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026f9a:	1abb      	subs	r3, r7, r2
 8026f9c:	2b00      	cmp	r3, #0
 8026f9e:	dd31      	ble.n	8027004 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026fa0:	2a00      	cmp	r2, #0
 8026fa2:	dabb      	bge.n	8026f1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026fa4:	2f00      	cmp	r7, #0
 8026fa6:	dd2d      	ble.n	8027004 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026fa8:	2200      	movs	r2, #0
 8026faa:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026fae:	19d1      	adds	r1, r2, r7
 8026fb0:	4299      	cmp	r1, r3
 8026fb2:	db02      	blt.n	8026fba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026fb4:	1a9f      	subs	r7, r3, r2
 8026fb6:	2f00      	cmp	r7, #0
 8026fb8:	dd24      	ble.n	8027004 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026fba:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026fbe:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026fc2:	f7ff ff39 	bl	8026e38 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026fc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026fc8:	fb10 f003 	smulbb	r0, r0, r3
 8026fcc:	b280      	uxth	r0, r0
 8026fce:	1c41      	adds	r1, r0, #1
 8026fd0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026fd4:	1209      	asrs	r1, r1, #8
 8026fd6:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026fda:	d013      	beq.n	8027004 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026fdc:	9808      	ldr	r0, [sp, #32]
 8026fde:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026fe0:	b292      	uxth	r2, r2
 8026fe2:	b2c9      	uxtb	r1, r1
 8026fe4:	4413      	add	r3, r2
 8026fe6:	9102      	str	r1, [sp, #8]
 8026fe8:	4402      	add	r2, r0
 8026fea:	b23f      	sxth	r7, r7
 8026fec:	f8da 0000 	ldr.w	r0, [sl]
 8026ff0:	9701      	str	r7, [sp, #4]
 8026ff2:	fa0f f18b 	sxth.w	r1, fp
 8026ff6:	9100      	str	r1, [sp, #0]
 8026ff8:	6947      	ldr	r7, [r0, #20]
 8026ffa:	9905      	ldr	r1, [sp, #20]
 8026ffc:	b21b      	sxth	r3, r3
 8026ffe:	b212      	sxth	r2, r2
 8027000:	4650      	mov	r0, sl
 8027002:	47b8      	blx	r7
 8027004:	464b      	mov	r3, r9
 8027006:	e75c      	b.n	8026ec2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8027008:	2f00      	cmp	r7, #0
 802700a:	da95      	bge.n	8026f38 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802700c:	e78c      	b.n	8026f28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802700e:	2900      	cmp	r1, #0
 8027010:	d0f8      	beq.n	8027004 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027012:	e78f      	b.n	8026f34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08027014 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8027014:	4b4b      	ldr	r3, [pc, #300]	; (8027144 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8027016:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802701a:	2500      	movs	r5, #0
 802701c:	f100 0620 	add.w	r6, r0, #32
 8027020:	4604      	mov	r4, r0
 8027022:	e9c0 3100 	strd	r3, r1, [r0]
 8027026:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802702a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802702e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8027032:	f100 0718 	add.w	r7, r0, #24
 8027036:	4630      	mov	r0, r6
 8027038:	4690      	mov	r8, r2
 802703a:	f7ec fb03 	bl	8013644 <_ZN8touchgfx7OutlineC1Ev>
 802703e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8027042:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8027046:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802704a:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802704e:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8027052:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8027056:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 802705a:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802705e:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8027062:	f9b8 2000 	ldrsh.w	r2, [r8]
 8027066:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802706a:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802706e:	9500      	str	r5, [sp, #0]
 8027070:	4410      	add	r0, r2
 8027072:	b280      	uxth	r0, r0
 8027074:	fa0f fa80 	sxth.w	sl, r0
 8027078:	45aa      	cmp	sl, r5
 802707a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802707e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8027082:	dd5c      	ble.n	802713e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027084:	4591      	cmp	r9, r2
 8027086:	dd5a      	ble.n	802713e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027088:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802708c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8027090:	440b      	add	r3, r1
 8027092:	b29b      	uxth	r3, r3
 8027094:	b21d      	sxth	r5, r3
 8027096:	2d00      	cmp	r5, #0
 8027098:	dd51      	ble.n	802713e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802709a:	458e      	cmp	lr, r1
 802709c:	dd4f      	ble.n	802713e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802709e:	45d1      	cmp	r9, sl
 80270a0:	bfb8      	it	lt
 80270a2:	fa1f f089 	uxthlt.w	r0, r9
 80270a6:	45ae      	cmp	lr, r5
 80270a8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80270ac:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80270b0:	bfb8      	it	lt
 80270b2:	fa1f f38e 	uxthlt.w	r3, lr
 80270b6:	1a80      	subs	r0, r0, r2
 80270b8:	1a5b      	subs	r3, r3, r1
 80270ba:	f8ad 0004 	strh.w	r0, [sp, #4]
 80270be:	f8ad 3006 	strh.w	r3, [sp, #6]
 80270c2:	f8ad 2000 	strh.w	r2, [sp]
 80270c6:	f8ad 1002 	strh.w	r1, [sp, #2]
 80270ca:	466d      	mov	r5, sp
 80270cc:	e895 0003 	ldmia.w	r5, {r0, r1}
 80270d0:	e887 0003 	stmia.w	r7, {r0, r1}
 80270d4:	f8dc 3000 	ldr.w	r3, [ip]
 80270d8:	4660      	mov	r0, ip
 80270da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80270dc:	4639      	mov	r1, r7
 80270de:	4798      	blx	r3
 80270e0:	6861      	ldr	r1, [r4, #4]
 80270e2:	4628      	mov	r0, r5
 80270e4:	3104      	adds	r1, #4
 80270e6:	f7ee fcb3 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80270ea:	4638      	mov	r0, r7
 80270ec:	f7ee fc6c 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80270f0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80270f4:	f8bd 2000 	ldrh.w	r2, [sp]
 80270f8:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80270fc:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8027100:	4630      	mov	r0, r6
 8027102:	f7ec fa83 	bl	801360c <_ZN8touchgfx7Outline5resetEv>
 8027106:	f9bd 3000 	ldrsh.w	r3, [sp]
 802710a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802710e:	015b      	lsls	r3, r3, #5
 8027110:	60a3      	str	r3, [r4, #8]
 8027112:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027116:	015b      	lsls	r3, r3, #5
 8027118:	60e3      	str	r3, [r4, #12]
 802711a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802711e:	015b      	lsls	r3, r3, #5
 8027120:	6123      	str	r3, [r4, #16]
 8027122:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8027126:	015b      	lsls	r3, r3, #5
 8027128:	6163      	str	r3, [r4, #20]
 802712a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802712e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8027132:	4620      	mov	r0, r4
 8027134:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8027138:	b002      	add	sp, #8
 802713a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802713e:	2300      	movs	r3, #0
 8027140:	9301      	str	r3, [sp, #4]
 8027142:	e7c2      	b.n	80270ca <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8027144:	0802f348 	.word	0x0802f348

08027148 <_ZN8touchgfx6Canvas5closeEv>:
 8027148:	b538      	push	{r3, r4, r5, lr}
 802714a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802714e:	4604      	mov	r4, r0
 8027150:	b193      	cbz	r3, 8027178 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027152:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8027156:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802715a:	4213      	tst	r3, r2
 802715c:	d10c      	bne.n	8027178 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802715e:	f100 0520 	add.w	r5, r0, #32
 8027162:	b123      	cbz	r3, 802716e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8027164:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8027168:	4628      	mov	r0, r5
 802716a:	f7ff fe79 	bl	8026e60 <_ZN8touchgfx10Rasterizer6lineToEii>
 802716e:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8027172:	4628      	mov	r0, r5
 8027174:	f7ff fe74 	bl	8026e60 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027178:	2300      	movs	r3, #0
 802717a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802717e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8027182:	4298      	cmp	r0, r3
 8027184:	bf34      	ite	cc
 8027186:	2000      	movcc	r0, #0
 8027188:	2001      	movcs	r0, #1
 802718a:	bd38      	pop	{r3, r4, r5, pc}

0802718c <_ZN8touchgfx6Canvas6renderEh>:
 802718c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8027190:	4604      	mov	r4, r0
 8027192:	6840      	ldr	r0, [r0, #4]
 8027194:	6803      	ldr	r3, [r0, #0]
 8027196:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8027198:	460d      	mov	r5, r1
 802719a:	4798      	blx	r3
 802719c:	fb10 f105 	smulbb	r1, r0, r5
 80271a0:	b289      	uxth	r1, r1
 80271a2:	1c4d      	adds	r5, r1, #1
 80271a4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80271a8:	122d      	asrs	r5, r5, #8
 80271aa:	f000 809d 	beq.w	80272e8 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80271ae:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80271b2:	2b00      	cmp	r3, #0
 80271b4:	f000 8098 	beq.w	80272e8 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80271b8:	4620      	mov	r0, r4
 80271ba:	f7ff ffc5 	bl	8027148 <_ZN8touchgfx6Canvas5closeEv>
 80271be:	4607      	mov	r7, r0
 80271c0:	2800      	cmp	r0, #0
 80271c2:	d048      	beq.n	8027256 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80271c4:	6863      	ldr	r3, [r4, #4]
 80271c6:	4e49      	ldr	r6, [pc, #292]	; (80272ec <_ZN8touchgfx6Canvas6renderEh+0x160>)
 80271c8:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80271ca:	6837      	ldr	r7, [r6, #0]
 80271cc:	6803      	ldr	r3, [r0, #0]
 80271ce:	689b      	ldr	r3, [r3, #8]
 80271d0:	4798      	blx	r3
 80271d2:	4601      	mov	r1, r0
 80271d4:	4638      	mov	r0, r7
 80271d6:	f7ea f9bb 	bl	8011550 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80271da:	4607      	mov	r7, r0
 80271dc:	f7dc fe04 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 80271e0:	6803      	ldr	r3, [r0, #0]
 80271e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80271e4:	4798      	blx	r3
 80271e6:	4680      	mov	r8, r0
 80271e8:	f7dc fdfe 	bl	8003de8 <_ZN8touchgfx3HAL3lcdEv>
 80271ec:	6803      	ldr	r3, [r0, #0]
 80271ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80271f0:	4798      	blx	r3
 80271f2:	280b      	cmp	r0, #11
 80271f4:	d85d      	bhi.n	80272b2 <_ZN8touchgfx6Canvas6renderEh+0x126>
 80271f6:	e8df f000 	tbb	[pc, r0]
 80271fa:	5e53      	.short	0x5e53
 80271fc:	325c066e 	.word	0x325c066e
 8027200:	67676742 	.word	0x67676742
 8027204:	6767      	.short	0x6767
 8027206:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802720a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802720e:	2208      	movs	r2, #8
 8027210:	fb91 f2f2 	sdiv	r2, r1, r2
 8027214:	fb08 2303 	mla	r3, r8, r3, r2
 8027218:	441f      	add	r7, r3
 802721a:	424b      	negs	r3, r1
 802721c:	f003 0307 	and.w	r3, r3, #7
 8027220:	f001 0107 	and.w	r1, r1, #7
 8027224:	bf58      	it	pl
 8027226:	4259      	negpl	r1, r3
 8027228:	b2c9      	uxtb	r1, r1
 802722a:	b2ed      	uxtb	r5, r5
 802722c:	e9cd 1500 	strd	r1, r5, [sp]
 8027230:	6860      	ldr	r0, [r4, #4]
 8027232:	463a      	mov	r2, r7
 8027234:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8027236:	fa0f f388 	sxth.w	r3, r8
 802723a:	f104 0020 	add.w	r0, r4, #32
 802723e:	f7ff fe1b 	bl	8026e78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027242:	6863      	ldr	r3, [r4, #4]
 8027244:	4607      	mov	r7, r0
 8027246:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027248:	6803      	ldr	r3, [r0, #0]
 802724a:	691b      	ldr	r3, [r3, #16]
 802724c:	4798      	blx	r3
 802724e:	6830      	ldr	r0, [r6, #0]
 8027250:	6803      	ldr	r3, [r0, #0]
 8027252:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027254:	4798      	blx	r3
 8027256:	4638      	mov	r0, r7
 8027258:	b002      	add	sp, #8
 802725a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802725e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027262:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027266:	2204      	movs	r2, #4
 8027268:	fb91 f2f2 	sdiv	r2, r1, r2
 802726c:	fb08 2303 	mla	r3, r8, r3, r2
 8027270:	441f      	add	r7, r3
 8027272:	424b      	negs	r3, r1
 8027274:	f003 0303 	and.w	r3, r3, #3
 8027278:	f001 0103 	and.w	r1, r1, #3
 802727c:	e7d2      	b.n	8027224 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802727e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027282:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027286:	2900      	cmp	r1, #0
 8027288:	f04f 0202 	mov.w	r2, #2
 802728c:	fb91 f2f2 	sdiv	r2, r1, r2
 8027290:	f001 0101 	and.w	r1, r1, #1
 8027294:	fb08 2303 	mla	r3, r8, r3, r2
 8027298:	441f      	add	r7, r3
 802729a:	bfb8      	it	lt
 802729c:	4249      	neglt	r1, r1
 802729e:	e7c3      	b.n	8027228 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80272a0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80272a4:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80272a8:	fb08 f303 	mul.w	r3, r8, r3
 80272ac:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80272b0:	441f      	add	r7, r3
 80272b2:	2100      	movs	r1, #0
 80272b4:	e7b9      	b.n	802722a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80272b6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80272ba:	fb08 f203 	mul.w	r2, r8, r3
 80272be:	8b23      	ldrh	r3, [r4, #24]
 80272c0:	2103      	movs	r1, #3
 80272c2:	fb13 2301 	smlabb	r3, r3, r1, r2
 80272c6:	e7f3      	b.n	80272b0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80272c8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80272cc:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80272d0:	fb08 2303 	mla	r3, r8, r3, r2
 80272d4:	e7ec      	b.n	80272b0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80272d6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80272da:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80272de:	fb08 f303 	mul.w	r3, r8, r3
 80272e2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80272e6:	e7e3      	b.n	80272b0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80272e8:	2701      	movs	r7, #1
 80272ea:	e7b4      	b.n	8027256 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80272ec:	200132bc 	.word	0x200132bc

080272f0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80272f0:	b510      	push	{r4, lr}
 80272f2:	4b07      	ldr	r3, [pc, #28]	; (8027310 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80272f4:	781b      	ldrb	r3, [r3, #0]
 80272f6:	2b01      	cmp	r3, #1
 80272f8:	d108      	bne.n	802730c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80272fa:	6843      	ldr	r3, [r0, #4]
 80272fc:	6814      	ldr	r4, [r2, #0]
 80272fe:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8027302:	680b      	ldr	r3, [r1, #0]
 8027304:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8027308:	6013      	str	r3, [r2, #0]
 802730a:	600c      	str	r4, [r1, #0]
 802730c:	bd10      	pop	{r4, pc}
 802730e:	bf00      	nop
 8027310:	200132b4 	.word	0x200132b4

08027314 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027314:	b513      	push	{r0, r1, r4, lr}
 8027316:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802731a:	4604      	mov	r4, r0
 802731c:	e9cd 2100 	strd	r2, r1, [sp]
 8027320:	b9a3      	cbnz	r3, 802734c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027322:	466a      	mov	r2, sp
 8027324:	a901      	add	r1, sp, #4
 8027326:	4620      	mov	r0, r4
 8027328:	f7ff ffe2 	bl	80272f0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802732c:	68a3      	ldr	r3, [r4, #8]
 802732e:	9901      	ldr	r1, [sp, #4]
 8027330:	9a00      	ldr	r2, [sp, #0]
 8027332:	1ac9      	subs	r1, r1, r3
 8027334:	68e3      	ldr	r3, [r4, #12]
 8027336:	9101      	str	r1, [sp, #4]
 8027338:	1ad2      	subs	r2, r2, r3
 802733a:	2a00      	cmp	r2, #0
 802733c:	9200      	str	r2, [sp, #0]
 802733e:	da0b      	bge.n	8027358 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027340:	2301      	movs	r3, #1
 8027342:	2900      	cmp	r1, #0
 8027344:	da0e      	bge.n	8027364 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8027346:	f043 0304 	orr.w	r3, r3, #4
 802734a:	e013      	b.n	8027374 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802734c:	f7ff fefc 	bl	8027148 <_ZN8touchgfx6Canvas5closeEv>
 8027350:	2800      	cmp	r0, #0
 8027352:	d1e6      	bne.n	8027322 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027354:	b002      	add	sp, #8
 8027356:	bd10      	pop	{r4, pc}
 8027358:	6963      	ldr	r3, [r4, #20]
 802735a:	429a      	cmp	r2, r3
 802735c:	bfac      	ite	ge
 802735e:	2302      	movge	r3, #2
 8027360:	2300      	movlt	r3, #0
 8027362:	e7ee      	b.n	8027342 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8027364:	6920      	ldr	r0, [r4, #16]
 8027366:	4281      	cmp	r1, r0
 8027368:	bfac      	ite	ge
 802736a:	2008      	movge	r0, #8
 802736c:	2000      	movlt	r0, #0
 802736e:	4318      	orrs	r0, r3
 8027370:	b2c3      	uxtb	r3, r0
 8027372:	b158      	cbz	r0, 802738c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8027374:	2200      	movs	r2, #0
 8027376:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802737a:	9901      	ldr	r1, [sp, #4]
 802737c:	9a00      	ldr	r2, [sp, #0]
 802737e:	66a1      	str	r1, [r4, #104]	; 0x68
 8027380:	66e2      	str	r2, [r4, #108]	; 0x6c
 8027382:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8027386:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802738a:	e7e3      	b.n	8027354 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802738c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027390:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027394:	4298      	cmp	r0, r3
 8027396:	d803      	bhi.n	80273a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8027398:	f104 0020 	add.w	r0, r4, #32
 802739c:	f7ec fe34 	bl	8014008 <_ZN8touchgfx7Outline6moveToEii>
 80273a0:	2301      	movs	r3, #1
 80273a2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80273a6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80273aa:	2300      	movs	r3, #0
 80273ac:	e7e5      	b.n	802737a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80273ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80273b0:	ab02      	add	r3, sp, #8
 80273b2:	4604      	mov	r4, r0
 80273b4:	f843 2d08 	str.w	r2, [r3, #-8]!
 80273b8:	9101      	str	r1, [sp, #4]
 80273ba:	461a      	mov	r2, r3
 80273bc:	a901      	add	r1, sp, #4
 80273be:	f7ff ff97 	bl	80272f0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80273c2:	68a3      	ldr	r3, [r4, #8]
 80273c4:	9901      	ldr	r1, [sp, #4]
 80273c6:	9a00      	ldr	r2, [sp, #0]
 80273c8:	1ac9      	subs	r1, r1, r3
 80273ca:	68e3      	ldr	r3, [r4, #12]
 80273cc:	9101      	str	r1, [sp, #4]
 80273ce:	1ad2      	subs	r2, r2, r3
 80273d0:	2a00      	cmp	r2, #0
 80273d2:	9200      	str	r2, [sp, #0]
 80273d4:	db1c      	blt.n	8027410 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80273d6:	6963      	ldr	r3, [r4, #20]
 80273d8:	429a      	cmp	r2, r3
 80273da:	bfac      	ite	ge
 80273dc:	2002      	movge	r0, #2
 80273de:	2000      	movlt	r0, #0
 80273e0:	2900      	cmp	r1, #0
 80273e2:	db17      	blt.n	8027414 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80273e4:	6923      	ldr	r3, [r4, #16]
 80273e6:	4299      	cmp	r1, r3
 80273e8:	bfac      	ite	ge
 80273ea:	2308      	movge	r3, #8
 80273ec:	2300      	movlt	r3, #0
 80273ee:	4303      	orrs	r3, r0
 80273f0:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80273f4:	b2dd      	uxtb	r5, r3
 80273f6:	b978      	cbnz	r0, 8027418 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80273f8:	f104 0020 	add.w	r0, r4, #32
 80273fc:	f7ff fd30 	bl	8026e60 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027400:	9b01      	ldr	r3, [sp, #4]
 8027402:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027404:	9b00      	ldr	r3, [sp, #0]
 8027406:	6623      	str	r3, [r4, #96]	; 0x60
 8027408:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802740c:	b002      	add	sp, #8
 802740e:	bd70      	pop	{r4, r5, r6, pc}
 8027410:	2001      	movs	r0, #1
 8027412:	e7e5      	b.n	80273e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027414:	2304      	movs	r3, #4
 8027416:	e7ea      	b.n	80273ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8027418:	b113      	cbz	r3, 8027420 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802741a:	ea10 0305 	ands.w	r3, r0, r5
 802741e:	d11c      	bne.n	802745a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027420:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027424:	f104 0620 	add.w	r6, r4, #32
 8027428:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802742c:	b98b      	cbnz	r3, 8027452 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802742e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027432:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027436:	4298      	cmp	r0, r3
 8027438:	d802      	bhi.n	8027440 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802743a:	4630      	mov	r0, r6
 802743c:	f7ec fde4 	bl	8014008 <_ZN8touchgfx7Outline6moveToEii>
 8027440:	2301      	movs	r3, #1
 8027442:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027446:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802744a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802744e:	4630      	mov	r0, r6
 8027450:	e7d4      	b.n	80273fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027452:	4630      	mov	r0, r6
 8027454:	f7ff fd04 	bl	8026e60 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027458:	e7f7      	b.n	802744a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802745a:	461d      	mov	r5, r3
 802745c:	e7d0      	b.n	8027400 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027460 <_ZN8touchgfx6CanvasD1Ev>:
 8027460:	b510      	push	{r4, lr}
 8027462:	4b04      	ldr	r3, [pc, #16]	; (8027474 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8027464:	4604      	mov	r4, r0
 8027466:	f840 3b20 	str.w	r3, [r0], #32
 802746a:	f7ec f8c7 	bl	80135fc <_ZN8touchgfx7OutlineD1Ev>
 802746e:	4620      	mov	r0, r4
 8027470:	bd10      	pop	{r4, pc}
 8027472:	bf00      	nop
 8027474:	0802f348 	.word	0x0802f348

08027478 <_ZN8touchgfx6CanvasD0Ev>:
 8027478:	b510      	push	{r4, lr}
 802747a:	4604      	mov	r4, r0
 802747c:	f7ff fff0 	bl	8027460 <_ZN8touchgfx6CanvasD1Ev>
 8027480:	4620      	mov	r0, r4
 8027482:	2170      	movs	r1, #112	; 0x70
 8027484:	f002 fd09 	bl	8029e9a <_ZdlPvj>
 8027488:	4620      	mov	r0, r4
 802748a:	bd10      	pop	{r4, pc}

0802748c <_ZN8touchgfx6CircleD1Ev>:
 802748c:	4770      	bx	lr

0802748e <_ZN8touchgfx6CircleD0Ev>:
 802748e:	b510      	push	{r4, lr}
 8027490:	2148      	movs	r1, #72	; 0x48
 8027492:	4604      	mov	r4, r0
 8027494:	f002 fd01 	bl	8029e9a <_ZdlPvj>
 8027498:	4620      	mov	r0, r4
 802749a:	bd10      	pop	{r4, pc}

0802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802749c:	b508      	push	{r3, lr}
 802749e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 80274a2:	f7ea fbab 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80274a6:	bd08      	pop	{r3, pc}

080274a8 <_ZN8touchgfx6CircleC1Ev>:
 80274a8:	b510      	push	{r4, lr}
 80274aa:	4604      	mov	r4, r0
 80274ac:	f7ea fa42 	bl	8011934 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80274b0:	4b08      	ldr	r3, [pc, #32]	; (80274d4 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80274b2:	6023      	str	r3, [r4, #0]
 80274b4:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80274b8:	2300      	movs	r3, #0
 80274ba:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80274be:	f24b 4205 	movw	r2, #46085	; 0xb405
 80274c2:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80274c6:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80274ca:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80274ce:	60a3      	str	r3, [r4, #8]
 80274d0:	4620      	mov	r0, r4
 80274d2:	bd10      	pop	{r4, pc}
 80274d4:	0802f35c 	.word	0x0802f35c

080274d8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80274d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80274dc:	428a      	cmp	r2, r1
 80274de:	4680      	mov	r8, r0
 80274e0:	4610      	mov	r0, r2
 80274e2:	4699      	mov	r9, r3
 80274e4:	bfa6      	itte	ge
 80274e6:	460a      	movge	r2, r1
 80274e8:	4603      	movge	r3, r0
 80274ea:	460b      	movlt	r3, r1
 80274ec:	1a99      	subs	r1, r3, r2
 80274ee:	b085      	sub	sp, #20
 80274f0:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80274f4:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80274f8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80274fa:	bfa4      	itt	ge
 80274fc:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8027500:	2200      	movge	r2, #0
 8027502:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8027506:	9300      	str	r3, [sp, #0]
 8027508:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802750c:	f102 0b01 	add.w	fp, r2, #1
 8027510:	2c00      	cmp	r4, #0
 8027512:	f040 80af 	bne.w	8027674 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8027516:	4610      	mov	r0, r2
 8027518:	9201      	str	r2, [sp, #4]
 802751a:	f7ea fb6f 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802751e:	a903      	add	r1, sp, #12
 8027520:	9003      	str	r0, [sp, #12]
 8027522:	4650      	mov	r0, sl
 8027524:	f7ea fa32 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027528:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802752c:	9a01      	ldr	r2, [sp, #4]
 802752e:	4408      	add	r0, r1
 8027530:	f8d9 1000 	ldr.w	r1, [r9]
 8027534:	4281      	cmp	r1, r0
 8027536:	bfc8      	it	gt
 8027538:	f8c9 0000 	strgt.w	r0, [r9]
 802753c:	6839      	ldr	r1, [r7, #0]
 802753e:	4288      	cmp	r0, r1
 8027540:	bfc8      	it	gt
 8027542:	6038      	strgt	r0, [r7, #0]
 8027544:	4610      	mov	r0, r2
 8027546:	f7ff ffa9 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802754a:	a903      	add	r1, sp, #12
 802754c:	9003      	str	r0, [sp, #12]
 802754e:	4650      	mov	r0, sl
 8027550:	f7ea fa1c 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027554:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027558:	1a10      	subs	r0, r2, r0
 802755a:	6832      	ldr	r2, [r6, #0]
 802755c:	4282      	cmp	r2, r0
 802755e:	bfc8      	it	gt
 8027560:	6030      	strgt	r0, [r6, #0]
 8027562:	682a      	ldr	r2, [r5, #0]
 8027564:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8027568:	4290      	cmp	r0, r2
 802756a:	fb9b f2f1 	sdiv	r2, fp, r1
 802756e:	fb01 b212 	mls	r2, r1, r2, fp
 8027572:	eba1 0202 	sub.w	r2, r1, r2
 8027576:	bfc8      	it	gt
 8027578:	6028      	strgt	r0, [r5, #0]
 802757a:	fb92 f0f1 	sdiv	r0, r2, r1
 802757e:	fb01 2210 	mls	r2, r1, r0, r2
 8027582:	4493      	add	fp, r2
 8027584:	9b00      	ldr	r3, [sp, #0]
 8027586:	455b      	cmp	r3, fp
 8027588:	db2a      	blt.n	80275e0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802758a:	4658      	mov	r0, fp
 802758c:	f7ea fb36 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027590:	a903      	add	r1, sp, #12
 8027592:	9003      	str	r0, [sp, #12]
 8027594:	4650      	mov	r0, sl
 8027596:	f7ea f9f9 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802759a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802759e:	4410      	add	r0, r2
 80275a0:	f8d9 2000 	ldr.w	r2, [r9]
 80275a4:	4282      	cmp	r2, r0
 80275a6:	bfc8      	it	gt
 80275a8:	f8c9 0000 	strgt.w	r0, [r9]
 80275ac:	683a      	ldr	r2, [r7, #0]
 80275ae:	4290      	cmp	r0, r2
 80275b0:	bfc8      	it	gt
 80275b2:	6038      	strgt	r0, [r7, #0]
 80275b4:	4658      	mov	r0, fp
 80275b6:	f7ff ff71 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80275ba:	a903      	add	r1, sp, #12
 80275bc:	9003      	str	r0, [sp, #12]
 80275be:	4650      	mov	r0, sl
 80275c0:	f7ea f9e4 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80275c4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80275c8:	1a10      	subs	r0, r2, r0
 80275ca:	6832      	ldr	r2, [r6, #0]
 80275cc:	4282      	cmp	r2, r0
 80275ce:	bfc8      	it	gt
 80275d0:	6030      	strgt	r0, [r6, #0]
 80275d2:	682a      	ldr	r2, [r5, #0]
 80275d4:	4290      	cmp	r0, r2
 80275d6:	bfc8      	it	gt
 80275d8:	6028      	strgt	r0, [r5, #0]
 80275da:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80275de:	e7d1      	b.n	8027584 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80275e0:	9b00      	ldr	r3, [sp, #0]
 80275e2:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80275e6:	455b      	cmp	r3, fp
 80275e8:	dd27      	ble.n	802763a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80275ea:	4618      	mov	r0, r3
 80275ec:	f7ea fb06 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80275f0:	a903      	add	r1, sp, #12
 80275f2:	9003      	str	r0, [sp, #12]
 80275f4:	4650      	mov	r0, sl
 80275f6:	f7ea f9c9 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80275fa:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80275fe:	4410      	add	r0, r2
 8027600:	f8d9 2000 	ldr.w	r2, [r9]
 8027604:	4282      	cmp	r2, r0
 8027606:	bfc8      	it	gt
 8027608:	f8c9 0000 	strgt.w	r0, [r9]
 802760c:	683a      	ldr	r2, [r7, #0]
 802760e:	4290      	cmp	r0, r2
 8027610:	bfc8      	it	gt
 8027612:	6038      	strgt	r0, [r7, #0]
 8027614:	9800      	ldr	r0, [sp, #0]
 8027616:	f7ff ff41 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802761a:	a903      	add	r1, sp, #12
 802761c:	9003      	str	r0, [sp, #12]
 802761e:	4650      	mov	r0, sl
 8027620:	f7ea f9b4 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027624:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027628:	1a10      	subs	r0, r2, r0
 802762a:	6832      	ldr	r2, [r6, #0]
 802762c:	4282      	cmp	r2, r0
 802762e:	bfc8      	it	gt
 8027630:	6030      	strgt	r0, [r6, #0]
 8027632:	682a      	ldr	r2, [r5, #0]
 8027634:	4290      	cmp	r0, r2
 8027636:	bfc8      	it	gt
 8027638:	6028      	strgt	r0, [r5, #0]
 802763a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802763e:	f8d9 1000 	ldr.w	r1, [r9]
 8027642:	4291      	cmp	r1, r2
 8027644:	bfc8      	it	gt
 8027646:	f8c9 2000 	strgt.w	r2, [r9]
 802764a:	683a      	ldr	r2, [r7, #0]
 802764c:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8027650:	429a      	cmp	r2, r3
 8027652:	bfb8      	it	lt
 8027654:	603b      	strlt	r3, [r7, #0]
 8027656:	6832      	ldr	r2, [r6, #0]
 8027658:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802765c:	429a      	cmp	r2, r3
 802765e:	bfc8      	it	gt
 8027660:	6033      	strgt	r3, [r6, #0]
 8027662:	682a      	ldr	r2, [r5, #0]
 8027664:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027668:	429a      	cmp	r2, r3
 802766a:	da00      	bge.n	802766e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802766c:	602b      	str	r3, [r5, #0]
 802766e:	b005      	add	sp, #20
 8027670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027674:	2002      	movs	r0, #2
 8027676:	3401      	adds	r4, #1
 8027678:	fb94 f4f0 	sdiv	r4, r4, r0
 802767c:	4610      	mov	r0, r2
 802767e:	9201      	str	r2, [sp, #4]
 8027680:	f7ea fabc 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027684:	a903      	add	r1, sp, #12
 8027686:	9003      	str	r0, [sp, #12]
 8027688:	4650      	mov	r0, sl
 802768a:	f7ea f97f 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802768e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027692:	9a01      	ldr	r2, [sp, #4]
 8027694:	4408      	add	r0, r1
 8027696:	f8d9 1000 	ldr.w	r1, [r9]
 802769a:	1b03      	subs	r3, r0, r4
 802769c:	4299      	cmp	r1, r3
 802769e:	bfc8      	it	gt
 80276a0:	f8c9 3000 	strgt.w	r3, [r9]
 80276a4:	6839      	ldr	r1, [r7, #0]
 80276a6:	428b      	cmp	r3, r1
 80276a8:	bfc8      	it	gt
 80276aa:	603b      	strgt	r3, [r7, #0]
 80276ac:	f8d9 1000 	ldr.w	r1, [r9]
 80276b0:	4420      	add	r0, r4
 80276b2:	4281      	cmp	r1, r0
 80276b4:	bfc8      	it	gt
 80276b6:	f8c9 0000 	strgt.w	r0, [r9]
 80276ba:	6839      	ldr	r1, [r7, #0]
 80276bc:	4288      	cmp	r0, r1
 80276be:	bfc8      	it	gt
 80276c0:	6038      	strgt	r0, [r7, #0]
 80276c2:	4610      	mov	r0, r2
 80276c4:	f7ff feea 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80276c8:	a903      	add	r1, sp, #12
 80276ca:	9003      	str	r0, [sp, #12]
 80276cc:	4650      	mov	r0, sl
 80276ce:	f7ea f95d 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80276d2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80276d6:	1a10      	subs	r0, r2, r0
 80276d8:	6832      	ldr	r2, [r6, #0]
 80276da:	1b01      	subs	r1, r0, r4
 80276dc:	428a      	cmp	r2, r1
 80276de:	bfc8      	it	gt
 80276e0:	6031      	strgt	r1, [r6, #0]
 80276e2:	682a      	ldr	r2, [r5, #0]
 80276e4:	4291      	cmp	r1, r2
 80276e6:	bfc8      	it	gt
 80276e8:	6029      	strgt	r1, [r5, #0]
 80276ea:	6832      	ldr	r2, [r6, #0]
 80276ec:	4420      	add	r0, r4
 80276ee:	4282      	cmp	r2, r0
 80276f0:	bfc8      	it	gt
 80276f2:	6030      	strgt	r0, [r6, #0]
 80276f4:	682a      	ldr	r2, [r5, #0]
 80276f6:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80276fa:	4290      	cmp	r0, r2
 80276fc:	fb9b f2f1 	sdiv	r2, fp, r1
 8027700:	fb01 b212 	mls	r2, r1, r2, fp
 8027704:	eba1 0202 	sub.w	r2, r1, r2
 8027708:	bfc8      	it	gt
 802770a:	6028      	strgt	r0, [r5, #0]
 802770c:	fb92 f0f1 	sdiv	r0, r2, r1
 8027710:	fb01 2210 	mls	r2, r1, r0, r2
 8027714:	4493      	add	fp, r2
 8027716:	9b00      	ldr	r3, [sp, #0]
 8027718:	455b      	cmp	r3, fp
 802771a:	db40      	blt.n	802779e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802771c:	4658      	mov	r0, fp
 802771e:	f7ea fa6d 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027722:	a903      	add	r1, sp, #12
 8027724:	9003      	str	r0, [sp, #12]
 8027726:	4650      	mov	r0, sl
 8027728:	f7ea f930 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802772c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027730:	4410      	add	r0, r2
 8027732:	f8d9 2000 	ldr.w	r2, [r9]
 8027736:	1b01      	subs	r1, r0, r4
 8027738:	428a      	cmp	r2, r1
 802773a:	bfc8      	it	gt
 802773c:	f8c9 1000 	strgt.w	r1, [r9]
 8027740:	683a      	ldr	r2, [r7, #0]
 8027742:	4291      	cmp	r1, r2
 8027744:	bfc8      	it	gt
 8027746:	6039      	strgt	r1, [r7, #0]
 8027748:	f8d9 2000 	ldr.w	r2, [r9]
 802774c:	4420      	add	r0, r4
 802774e:	4282      	cmp	r2, r0
 8027750:	bfc8      	it	gt
 8027752:	f8c9 0000 	strgt.w	r0, [r9]
 8027756:	683a      	ldr	r2, [r7, #0]
 8027758:	4290      	cmp	r0, r2
 802775a:	bfc8      	it	gt
 802775c:	6038      	strgt	r0, [r7, #0]
 802775e:	4658      	mov	r0, fp
 8027760:	f7ff fe9c 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027764:	a903      	add	r1, sp, #12
 8027766:	9003      	str	r0, [sp, #12]
 8027768:	4650      	mov	r0, sl
 802776a:	f7ea f90f 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802776e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027772:	1a10      	subs	r0, r2, r0
 8027774:	6832      	ldr	r2, [r6, #0]
 8027776:	1b01      	subs	r1, r0, r4
 8027778:	428a      	cmp	r2, r1
 802777a:	bfc8      	it	gt
 802777c:	6031      	strgt	r1, [r6, #0]
 802777e:	682a      	ldr	r2, [r5, #0]
 8027780:	4291      	cmp	r1, r2
 8027782:	bfc8      	it	gt
 8027784:	6029      	strgt	r1, [r5, #0]
 8027786:	6832      	ldr	r2, [r6, #0]
 8027788:	4420      	add	r0, r4
 802778a:	4282      	cmp	r2, r0
 802778c:	bfc8      	it	gt
 802778e:	6030      	strgt	r0, [r6, #0]
 8027790:	682a      	ldr	r2, [r5, #0]
 8027792:	4290      	cmp	r0, r2
 8027794:	bfc8      	it	gt
 8027796:	6028      	strgt	r0, [r5, #0]
 8027798:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802779c:	e7bb      	b.n	8027716 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802779e:	9b00      	ldr	r3, [sp, #0]
 80277a0:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80277a4:	455b      	cmp	r3, fp
 80277a6:	f77f af62 	ble.w	802766e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80277aa:	4618      	mov	r0, r3
 80277ac:	f7ea fa26 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80277b0:	a903      	add	r1, sp, #12
 80277b2:	9003      	str	r0, [sp, #12]
 80277b4:	4650      	mov	r0, sl
 80277b6:	f7ea f8e9 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80277ba:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80277be:	4410      	add	r0, r2
 80277c0:	f8d9 2000 	ldr.w	r2, [r9]
 80277c4:	1b01      	subs	r1, r0, r4
 80277c6:	428a      	cmp	r2, r1
 80277c8:	bfc8      	it	gt
 80277ca:	f8c9 1000 	strgt.w	r1, [r9]
 80277ce:	683a      	ldr	r2, [r7, #0]
 80277d0:	4291      	cmp	r1, r2
 80277d2:	bfc8      	it	gt
 80277d4:	6039      	strgt	r1, [r7, #0]
 80277d6:	f8d9 2000 	ldr.w	r2, [r9]
 80277da:	4420      	add	r0, r4
 80277dc:	4282      	cmp	r2, r0
 80277de:	bfc8      	it	gt
 80277e0:	f8c9 0000 	strgt.w	r0, [r9]
 80277e4:	683b      	ldr	r3, [r7, #0]
 80277e6:	4298      	cmp	r0, r3
 80277e8:	bfc8      	it	gt
 80277ea:	6038      	strgt	r0, [r7, #0]
 80277ec:	9800      	ldr	r0, [sp, #0]
 80277ee:	f7ff fe55 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80277f2:	a903      	add	r1, sp, #12
 80277f4:	9003      	str	r0, [sp, #12]
 80277f6:	4650      	mov	r0, sl
 80277f8:	f7ea f8c8 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80277fc:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027800:	6832      	ldr	r2, [r6, #0]
 8027802:	1a18      	subs	r0, r3, r0
 8027804:	1b03      	subs	r3, r0, r4
 8027806:	429a      	cmp	r2, r3
 8027808:	bfc8      	it	gt
 802780a:	6033      	strgt	r3, [r6, #0]
 802780c:	682a      	ldr	r2, [r5, #0]
 802780e:	4293      	cmp	r3, r2
 8027810:	bfc8      	it	gt
 8027812:	602b      	strgt	r3, [r5, #0]
 8027814:	6833      	ldr	r3, [r6, #0]
 8027816:	4404      	add	r4, r0
 8027818:	42a3      	cmp	r3, r4
 802781a:	bfc8      	it	gt
 802781c:	6034      	strgt	r4, [r6, #0]
 802781e:	682b      	ldr	r3, [r5, #0]
 8027820:	429c      	cmp	r4, r3
 8027822:	bfc8      	it	gt
 8027824:	602c      	strgt	r4, [r5, #0]
 8027826:	e722      	b.n	802766e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08027828 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8027828:	b530      	push	{r4, r5, lr}
 802782a:	4604      	mov	r4, r0
 802782c:	4608      	mov	r0, r1
 802782e:	4611      	mov	r1, r2
 8027830:	461a      	mov	r2, r3
 8027832:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8027836:	b089      	sub	sp, #36	; 0x24
 8027838:	015b      	lsls	r3, r3, #5
 802783a:	9304      	str	r3, [sp, #16]
 802783c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027840:	2500      	movs	r5, #0
 8027842:	015b      	lsls	r3, r3, #5
 8027844:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8027848:	ab07      	add	r3, sp, #28
 802784a:	9302      	str	r3, [sp, #8]
 802784c:	ab06      	add	r3, sp, #24
 802784e:	9301      	str	r3, [sp, #4]
 8027850:	ab05      	add	r3, sp, #20
 8027852:	9300      	str	r3, [sp, #0]
 8027854:	ab04      	add	r3, sp, #16
 8027856:	9505      	str	r5, [sp, #20]
 8027858:	f7ff fe3e 	bl	80274d8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 802785c:	2520      	movs	r5, #32
 802785e:	9a04      	ldr	r2, [sp, #16]
 8027860:	9805      	ldr	r0, [sp, #20]
 8027862:	fb92 f2f5 	sdiv	r2, r2, r5
 8027866:	fb90 f0f5 	sdiv	r0, r0, r5
 802786a:	b292      	uxth	r2, r2
 802786c:	3002      	adds	r0, #2
 802786e:	1a80      	subs	r0, r0, r2
 8027870:	9b06      	ldr	r3, [sp, #24]
 8027872:	9907      	ldr	r1, [sp, #28]
 8027874:	fb93 f3f5 	sdiv	r3, r3, r5
 8027878:	fb91 f1f5 	sdiv	r1, r1, r5
 802787c:	b29b      	uxth	r3, r3
 802787e:	3102      	adds	r1, #2
 8027880:	1ac9      	subs	r1, r1, r3
 8027882:	3a01      	subs	r2, #1
 8027884:	3b01      	subs	r3, #1
 8027886:	80a0      	strh	r0, [r4, #4]
 8027888:	4620      	mov	r0, r4
 802788a:	8022      	strh	r2, [r4, #0]
 802788c:	8063      	strh	r3, [r4, #2]
 802788e:	80e1      	strh	r1, [r4, #6]
 8027890:	b009      	add	sp, #36	; 0x24
 8027892:	bd30      	pop	{r4, r5, pc}

08027894 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8027894:	b510      	push	{r4, lr}
 8027896:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802789a:	4604      	mov	r4, r0
 802789c:	f7ff ffc4 	bl	8027828 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80278a0:	4620      	mov	r0, r4
 80278a2:	bd10      	pop	{r4, pc}

080278a4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 80278a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80278a6:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 80278aa:	4606      	mov	r6, r0
 80278ac:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80278b0:	6813      	ldr	r3, [r2, #0]
 80278b2:	42a5      	cmp	r5, r4
 80278b4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80278b8:	da2b      	bge.n	8027912 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80278ba:	42a3      	cmp	r3, r4
 80278bc:	dd14      	ble.n	80278e8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80278be:	b168      	cbz	r0, 80278dc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80278c0:	4267      	negs	r7, r4
 80278c2:	fb97 f2f0 	sdiv	r2, r7, r0
 80278c6:	fb00 7212 	mls	r2, r0, r2, r7
 80278ca:	1a82      	subs	r2, r0, r2
 80278cc:	fb92 f7f0 	sdiv	r7, r2, r0
 80278d0:	fb00 2017 	mls	r0, r0, r7, r2
 80278d4:	1a24      	subs	r4, r4, r0
 80278d6:	42ac      	cmp	r4, r5
 80278d8:	bfb8      	it	lt
 80278da:	462c      	movlt	r4, r5
 80278dc:	4630      	mov	r0, r6
 80278de:	4622      	mov	r2, r4
 80278e0:	f7ff ffa2 	bl	8027828 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80278e4:	4630      	mov	r0, r6
 80278e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80278e8:	42ab      	cmp	r3, r5
 80278ea:	dd0e      	ble.n	802790a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80278ec:	b168      	cbz	r0, 802790a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80278ee:	425f      	negs	r7, r3
 80278f0:	fb97 f2f0 	sdiv	r2, r7, r0
 80278f4:	fb00 7212 	mls	r2, r0, r2, r7
 80278f8:	1a82      	subs	r2, r0, r2
 80278fa:	fb92 f7f0 	sdiv	r7, r2, r0
 80278fe:	fb00 2017 	mls	r0, r0, r7, r2
 8027902:	1a1b      	subs	r3, r3, r0
 8027904:	42ab      	cmp	r3, r5
 8027906:	bfb8      	it	lt
 8027908:	462b      	movlt	r3, r5
 802790a:	4622      	mov	r2, r4
 802790c:	461c      	mov	r4, r3
 802790e:	4613      	mov	r3, r2
 8027910:	e7e4      	b.n	80278dc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027912:	42a3      	cmp	r3, r4
 8027914:	da10      	bge.n	8027938 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8027916:	b148      	cbz	r0, 802792c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8027918:	fb94 f2f0 	sdiv	r2, r4, r0
 802791c:	fb00 4212 	mls	r2, r0, r2, r4
 8027920:	1a82      	subs	r2, r0, r2
 8027922:	fb92 f7f0 	sdiv	r7, r2, r0
 8027926:	fb00 2017 	mls	r0, r0, r7, r2
 802792a:	4404      	add	r4, r0
 802792c:	42a5      	cmp	r5, r4
 802792e:	bfa8      	it	ge
 8027930:	4625      	movge	r5, r4
 8027932:	461c      	mov	r4, r3
 8027934:	462b      	mov	r3, r5
 8027936:	e7d1      	b.n	80278dc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027938:	42ab      	cmp	r3, r5
 802793a:	dacf      	bge.n	80278dc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802793c:	2800      	cmp	r0, #0
 802793e:	d0cd      	beq.n	80278dc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027940:	fb93 f2f0 	sdiv	r2, r3, r0
 8027944:	fb00 3212 	mls	r2, r0, r2, r3
 8027948:	1a82      	subs	r2, r0, r2
 802794a:	fb92 f7f0 	sdiv	r7, r2, r0
 802794e:	fb00 2017 	mls	r0, r0, r7, r2
 8027952:	4403      	add	r3, r0
 8027954:	42ab      	cmp	r3, r5
 8027956:	bfa8      	it	ge
 8027958:	462b      	movge	r3, r5
 802795a:	e7bf      	b.n	80278dc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0802795c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 802795c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027960:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8027964:	42ae      	cmp	r6, r5
 8027966:	bfa2      	ittt	ge
 8027968:	4633      	movge	r3, r6
 802796a:	462e      	movge	r6, r5
 802796c:	461d      	movge	r5, r3
 802796e:	1bab      	subs	r3, r5, r6
 8027970:	468b      	mov	fp, r1
 8027972:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8027974:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8027978:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802797c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027980:	f04f 0220 	mov.w	r2, #32
 8027984:	b0ab      	sub	sp, #172	; 0xac
 8027986:	4604      	mov	r4, r0
 8027988:	bfa4      	itt	ge
 802798a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802798e:	2600      	movge	r6, #0
 8027990:	fb99 f9f2 	sdiv	r9, r9, r2
 8027994:	fb9a faf2 	sdiv	sl, sl, r2
 8027998:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802799a:	2900      	cmp	r1, #0
 802799c:	f000 80f5 	beq.w	8027b8a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 80279a0:	f9bb 0000 	ldrsh.w	r0, [fp]
 80279a4:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 80279a8:	eba9 0700 	sub.w	r7, r9, r0
 80279ac:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80279b0:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80279b4:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80279b8:	ebaa 0802 	sub.w	r8, sl, r2
 80279bc:	4407      	add	r7, r0
 80279be:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80279c2:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 80279c6:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80279ca:	b23f      	sxth	r7, r7
 80279cc:	4490      	add	r8, r2
 80279ce:	eba9 0707 	sub.w	r7, r9, r7
 80279d2:	fa0f f888 	sxth.w	r8, r8
 80279d6:	ebaa 0808 	sub.w	r8, sl, r8
 80279da:	2f00      	cmp	r7, #0
 80279dc:	bfb8      	it	lt
 80279de:	427f      	neglt	r7, r7
 80279e0:	f1b8 0f00 	cmp.w	r8, #0
 80279e4:	bfb8      	it	lt
 80279e6:	f1c8 0800 	rsblt	r8, r8, #0
 80279ea:	45bc      	cmp	ip, r7
 80279ec:	bfcc      	ite	gt
 80279ee:	f10c 0701 	addgt.w	r7, ip, #1
 80279f2:	3701      	addle	r7, #1
 80279f4:	4540      	cmp	r0, r8
 80279f6:	bfc8      	it	gt
 80279f8:	f100 0801 	addgt.w	r8, r0, #1
 80279fc:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8027a00:	f100 0001 	add.w	r0, r0, #1
 8027a04:	ea4f 0060 	mov.w	r0, r0, asr #1
 8027a08:	f04f 0202 	mov.w	r2, #2
 8027a0c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8027a10:	fb91 f1f2 	sdiv	r1, r1, r2
 8027a14:	eba3 0301 	sub.w	r3, r3, r1
 8027a18:	bfd8      	it	le
 8027a1a:	f108 0801 	addle.w	r8, r8, #1
 8027a1e:	9201      	str	r2, [sp, #4]
 8027a20:	930d      	str	r3, [sp, #52]	; 0x34
 8027a22:	f7ea f8cb 	bl	8011bbc <_ZN8touchgfx7CWRUtil4sineEi>
 8027a26:	a92a      	add	r1, sp, #168	; 0xa8
 8027a28:	fb08 f808 	mul.w	r8, r8, r8
 8027a2c:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027a30:	a80d      	add	r0, sp, #52	; 0x34
 8027a32:	f7e9 ffab 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a36:	fb07 8707 	mla	r7, r7, r7, r8
 8027a3a:	f04f 0c20 	mov.w	ip, #32
 8027a3e:	fb90 f0fc 	sdiv	r0, r0, ip
 8027a42:	4340      	muls	r0, r0
 8027a44:	4287      	cmp	r7, r0
 8027a46:	9a01      	ldr	r2, [sp, #4]
 8027a48:	da04      	bge.n	8027a54 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8027a4a:	2401      	movs	r4, #1
 8027a4c:	4620      	mov	r0, r4
 8027a4e:	b02b      	add	sp, #172	; 0xac
 8027a50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027a54:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8027a56:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8027a58:	fb91 f3f2 	sdiv	r3, r1, r2
 8027a5c:	4403      	add	r3, r0
 8027a5e:	fb93 f3fc 	sdiv	r3, r3, ip
 8027a62:	f9bb 1000 	ldrsh.w	r1, [fp]
 8027a66:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8027a6a:	440a      	add	r2, r1
 8027a6c:	b212      	sxth	r2, r2
 8027a6e:	454a      	cmp	r2, r9
 8027a70:	bfa8      	it	ge
 8027a72:	464a      	movge	r2, r9
 8027a74:	428a      	cmp	r2, r1
 8027a76:	bfac      	ite	ge
 8027a78:	eba9 0902 	subge.w	r9, r9, r2
 8027a7c:	eba9 0901 	sublt.w	r9, r9, r1
 8027a80:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8027a84:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8027a88:	440a      	add	r2, r1
 8027a8a:	b212      	sxth	r2, r2
 8027a8c:	4552      	cmp	r2, sl
 8027a8e:	bfa8      	it	ge
 8027a90:	4652      	movge	r2, sl
 8027a92:	428a      	cmp	r2, r1
 8027a94:	bfac      	ite	ge
 8027a96:	ebaa 0a02 	subge.w	sl, sl, r2
 8027a9a:	ebaa 0a01 	sublt.w	sl, sl, r1
 8027a9e:	3301      	adds	r3, #1
 8027aa0:	fb0a fa0a 	mul.w	sl, sl, sl
 8027aa4:	fb09 a909 	mla	r9, r9, r9, sl
 8027aa8:	435b      	muls	r3, r3
 8027aaa:	4599      	cmp	r9, r3
 8027aac:	dccd      	bgt.n	8027a4a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027aae:	465a      	mov	r2, fp
 8027ab0:	4621      	mov	r1, r4
 8027ab2:	a80e      	add	r0, sp, #56	; 0x38
 8027ab4:	f7ff faae 	bl	8027014 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8027ab8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8027aba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027abc:	9209      	str	r2, [sp, #36]	; 0x24
 8027abe:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027ac2:	930a      	str	r3, [sp, #40]	; 0x28
 8027ac4:	dd07      	ble.n	8027ad6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8027ac6:	2102      	movs	r1, #2
 8027ac8:	fb93 f3f1 	sdiv	r3, r3, r1
 8027acc:	4413      	add	r3, r2
 8027ace:	930a      	str	r3, [sp, #40]	; 0x28
 8027ad0:	fb93 f3f1 	sdiv	r3, r3, r1
 8027ad4:	9309      	str	r3, [sp, #36]	; 0x24
 8027ad6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027ada:	4630      	mov	r0, r6
 8027adc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027ae0:	930b      	str	r3, [sp, #44]	; 0x2c
 8027ae2:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8027ae6:	f7ea f889 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027aea:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8027aee:	f04f 0a02 	mov.w	sl, #2
 8027af2:	f849 0d74 	str.w	r0, [r9, #-116]!
 8027af6:	a80b      	add	r0, sp, #44	; 0x2c
 8027af8:	4649      	mov	r1, r9
 8027afa:	f7e9 ff47 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027afe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027b00:	fb90 f0fa 	sdiv	r0, r0, sl
 8027b04:	eb00 0b03 	add.w	fp, r0, r3
 8027b08:	4630      	mov	r0, r6
 8027b0a:	f7ff fcc7 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b0e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8027b12:	017f      	lsls	r7, r7, #5
 8027b14:	f848 0d78 	str.w	r0, [r8, #-120]!
 8027b18:	a80b      	add	r0, sp, #44	; 0x2c
 8027b1a:	4641      	mov	r1, r8
 8027b1c:	f7e9 ff36 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b20:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027b22:	fb90 f0fa 	sdiv	r0, r0, sl
 8027b26:	4659      	mov	r1, fp
 8027b28:	1a12      	subs	r2, r2, r0
 8027b2a:	a80e      	add	r0, sp, #56	; 0x38
 8027b2c:	f7ff fbf2 	bl	8027314 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027b30:	f106 0a20 	add.w	sl, r6, #32
 8027b34:	bb67      	cbnz	r7, 8027b90 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8027b36:	46b3      	mov	fp, r6
 8027b38:	45aa      	cmp	sl, r5
 8027b3a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027b3c:	dc33      	bgt.n	8027ba6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027b3e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027b40:	4650      	mov	r0, sl
 8027b42:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8027b46:	920b      	str	r2, [sp, #44]	; 0x2c
 8027b48:	f7ea f858 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b4c:	4641      	mov	r1, r8
 8027b4e:	900c      	str	r0, [sp, #48]	; 0x30
 8027b50:	a80b      	add	r0, sp, #44	; 0x2c
 8027b52:	f7e9 ff1b 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8027b58:	2302      	movs	r3, #2
 8027b5a:	fb90 f0f3 	sdiv	r0, r0, r3
 8027b5e:	eb00 0b02 	add.w	fp, r0, r2
 8027b62:	4650      	mov	r0, sl
 8027b64:	f7ff fc9a 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b68:	4649      	mov	r1, r9
 8027b6a:	900d      	str	r0, [sp, #52]	; 0x34
 8027b6c:	a80b      	add	r0, sp, #44	; 0x2c
 8027b6e:	f7e9 ff0d 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b72:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027b74:	2302      	movs	r3, #2
 8027b76:	4659      	mov	r1, fp
 8027b78:	fb90 f0f3 	sdiv	r0, r0, r3
 8027b7c:	1a12      	subs	r2, r2, r0
 8027b7e:	a80e      	add	r0, sp, #56	; 0x38
 8027b80:	46d3      	mov	fp, sl
 8027b82:	f7ff fc14 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b86:	44ba      	add	sl, r7
 8027b88:	e7d6      	b.n	8027b38 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8027b8a:	fb93 f3f2 	sdiv	r3, r3, r2
 8027b8e:	e768      	b.n	8027a62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027b90:	fb9a f2f7 	sdiv	r2, sl, r7
 8027b94:	fb07 a212 	mls	r2, r7, r2, sl
 8027b98:	1aba      	subs	r2, r7, r2
 8027b9a:	fb92 f1f7 	sdiv	r1, r2, r7
 8027b9e:	fb07 2211 	mls	r2, r7, r1, r2
 8027ba2:	4492      	add	sl, r2
 8027ba4:	e7c7      	b.n	8027b36 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8027ba6:	45ab      	cmp	fp, r5
 8027ba8:	da23      	bge.n	8027bf2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8027baa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027bac:	4628      	mov	r0, r5
 8027bae:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027bb2:	920b      	str	r2, [sp, #44]	; 0x2c
 8027bb4:	f7ea f822 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027bb8:	4641      	mov	r1, r8
 8027bba:	900c      	str	r0, [sp, #48]	; 0x30
 8027bbc:	a80b      	add	r0, sp, #44	; 0x2c
 8027bbe:	f7e9 fee5 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bc2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027bc4:	f04f 0a02 	mov.w	sl, #2
 8027bc8:	fb90 f0fa 	sdiv	r0, r0, sl
 8027bcc:	4403      	add	r3, r0
 8027bce:	4628      	mov	r0, r5
 8027bd0:	9301      	str	r3, [sp, #4]
 8027bd2:	f7ff fc63 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027bd6:	4649      	mov	r1, r9
 8027bd8:	900d      	str	r0, [sp, #52]	; 0x34
 8027bda:	a80b      	add	r0, sp, #44	; 0x2c
 8027bdc:	f7e9 fed6 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027be0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027be2:	9b01      	ldr	r3, [sp, #4]
 8027be4:	fb90 f0fa 	sdiv	r0, r0, sl
 8027be8:	4619      	mov	r1, r3
 8027bea:	1a12      	subs	r2, r2, r0
 8027bec:	a80e      	add	r0, sp, #56	; 0x38
 8027bee:	f7ff fbde 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027bf2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027bf4:	b99b      	cbnz	r3, 8027c1e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8027bf6:	1bad      	subs	r5, r5, r6
 8027bf8:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027bfc:	da04      	bge.n	8027c08 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027bfe:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027c02:	a80e      	add	r0, sp, #56	; 0x38
 8027c04:	f7ff fbd3 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027c08:	21ff      	movs	r1, #255	; 0xff
 8027c0a:	a80e      	add	r0, sp, #56	; 0x38
 8027c0c:	f7ff fabe 	bl	802718c <_ZN8touchgfx6Canvas6renderEh>
 8027c10:	4604      	mov	r4, r0
 8027c12:	4b8a      	ldr	r3, [pc, #552]	; (8027e3c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027c14:	930e      	str	r3, [sp, #56]	; 0x38
 8027c16:	a816      	add	r0, sp, #88	; 0x58
 8027c18:	f7eb fcf0 	bl	80135fc <_ZN8touchgfx7OutlineD1Ev>
 8027c1c:	e716      	b.n	8027a4c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8027c1e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8027c22:	429a      	cmp	r2, r3
 8027c24:	f0c0 8107 	bcc.w	8027e36 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8027c28:	1bab      	subs	r3, r5, r6
 8027c2a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027c2e:	9301      	str	r3, [sp, #4]
 8027c30:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027c34:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8027c38:	da43      	bge.n	8027cc2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027c3a:	4628      	mov	r0, r5
 8027c3c:	f7e9 ffde 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c40:	4649      	mov	r1, r9
 8027c42:	900d      	str	r0, [sp, #52]	; 0x34
 8027c44:	a809      	add	r0, sp, #36	; 0x24
 8027c46:	f7e9 fea1 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c4a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027c4c:	18c3      	adds	r3, r0, r3
 8027c4e:	4628      	mov	r0, r5
 8027c50:	9303      	str	r3, [sp, #12]
 8027c52:	f7ff fc23 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c56:	4649      	mov	r1, r9
 8027c58:	900d      	str	r0, [sp, #52]	; 0x34
 8027c5a:	a809      	add	r0, sp, #36	; 0x24
 8027c5c:	f7e9 fe96 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c60:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027c62:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8027c66:	1a1b      	subs	r3, r3, r0
 8027c68:	9302      	str	r3, [sp, #8]
 8027c6a:	9204      	str	r2, [sp, #16]
 8027c6c:	eb0a 0305 	add.w	r3, sl, r5
 8027c70:	9a04      	ldr	r2, [sp, #16]
 8027c72:	4293      	cmp	r3, r2
 8027c74:	da25      	bge.n	8027cc2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027c76:	4618      	mov	r0, r3
 8027c78:	9306      	str	r3, [sp, #24]
 8027c7a:	f7e9 ffbf 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c7e:	4649      	mov	r1, r9
 8027c80:	900d      	str	r0, [sp, #52]	; 0x34
 8027c82:	a80a      	add	r0, sp, #40	; 0x28
 8027c84:	f7e9 fe82 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c88:	9b03      	ldr	r3, [sp, #12]
 8027c8a:	2202      	movs	r2, #2
 8027c8c:	fb90 f0f2 	sdiv	r0, r0, r2
 8027c90:	18c3      	adds	r3, r0, r3
 8027c92:	9305      	str	r3, [sp, #20]
 8027c94:	9b06      	ldr	r3, [sp, #24]
 8027c96:	9207      	str	r2, [sp, #28]
 8027c98:	4618      	mov	r0, r3
 8027c9a:	f7ff fbff 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c9e:	a92a      	add	r1, sp, #168	; 0xa8
 8027ca0:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027ca4:	a80a      	add	r0, sp, #40	; 0x28
 8027ca6:	f7e9 fe71 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027caa:	9b02      	ldr	r3, [sp, #8]
 8027cac:	9a07      	ldr	r2, [sp, #28]
 8027cae:	9905      	ldr	r1, [sp, #20]
 8027cb0:	fb90 f2f2 	sdiv	r2, r0, r2
 8027cb4:	a80e      	add	r0, sp, #56	; 0x38
 8027cb6:	1a9a      	subs	r2, r3, r2
 8027cb8:	f7ff fb79 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027cbc:	9b06      	ldr	r3, [sp, #24]
 8027cbe:	4453      	add	r3, sl
 8027cc0:	e7d6      	b.n	8027c70 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027cc2:	45ab      	cmp	fp, r5
 8027cc4:	da25      	bge.n	8027d12 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8027cc6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027cca:	4628      	mov	r0, r5
 8027ccc:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027cd0:	930b      	str	r3, [sp, #44]	; 0x2c
 8027cd2:	f7e9 ff93 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027cd6:	4641      	mov	r1, r8
 8027cd8:	900c      	str	r0, [sp, #48]	; 0x30
 8027cda:	a80b      	add	r0, sp, #44	; 0x2c
 8027cdc:	f7e9 fe56 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ce0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027ce2:	2202      	movs	r2, #2
 8027ce4:	fb90 f0f2 	sdiv	r0, r0, r2
 8027ce8:	eb00 0903 	add.w	r9, r0, r3
 8027cec:	4628      	mov	r0, r5
 8027cee:	9202      	str	r2, [sp, #8]
 8027cf0:	f7ff fbd4 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027cf4:	a92a      	add	r1, sp, #168	; 0xa8
 8027cf6:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027cfa:	a80b      	add	r0, sp, #44	; 0x2c
 8027cfc:	f7e9 fe46 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d00:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027d02:	9a02      	ldr	r2, [sp, #8]
 8027d04:	fb90 f2f2 	sdiv	r2, r0, r2
 8027d08:	4649      	mov	r1, r9
 8027d0a:	1a9a      	subs	r2, r3, r2
 8027d0c:	a80e      	add	r0, sp, #56	; 0x38
 8027d0e:	f7ff fb4e 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027d12:	46d9      	mov	r9, fp
 8027d14:	2502      	movs	r5, #2
 8027d16:	45b1      	cmp	r9, r6
 8027d18:	db25      	blt.n	8027d66 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8027d1a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027d1e:	4648      	mov	r0, r9
 8027d20:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027d24:	930b      	str	r3, [sp, #44]	; 0x2c
 8027d26:	f7e9 ff69 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d2a:	4641      	mov	r1, r8
 8027d2c:	900c      	str	r0, [sp, #48]	; 0x30
 8027d2e:	a80b      	add	r0, sp, #44	; 0x2c
 8027d30:	f7e9 fe2c 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d34:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027d36:	fb90 f0f5 	sdiv	r0, r0, r5
 8027d3a:	eb00 0b03 	add.w	fp, r0, r3
 8027d3e:	4648      	mov	r0, r9
 8027d40:	f7ff fbac 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d44:	a90d      	add	r1, sp, #52	; 0x34
 8027d46:	900d      	str	r0, [sp, #52]	; 0x34
 8027d48:	a80b      	add	r0, sp, #44	; 0x2c
 8027d4a:	f7e9 fe1f 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d4e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027d50:	fb90 f0f5 	sdiv	r0, r0, r5
 8027d54:	4659      	mov	r1, fp
 8027d56:	1a12      	subs	r2, r2, r0
 8027d58:	a80e      	add	r0, sp, #56	; 0x38
 8027d5a:	46cb      	mov	fp, r9
 8027d5c:	f7ff fb27 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027d60:	eba9 0907 	sub.w	r9, r9, r7
 8027d64:	e7d7      	b.n	8027d16 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8027d66:	455e      	cmp	r6, fp
 8027d68:	da22      	bge.n	8027db0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8027d6a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027d6e:	4630      	mov	r0, r6
 8027d70:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027d74:	930b      	str	r3, [sp, #44]	; 0x2c
 8027d76:	f7e9 ff41 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d7a:	4641      	mov	r1, r8
 8027d7c:	900c      	str	r0, [sp, #48]	; 0x30
 8027d7e:	a80b      	add	r0, sp, #44	; 0x2c
 8027d80:	f7e9 fe04 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d84:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8027d86:	2502      	movs	r5, #2
 8027d88:	fb90 f0f5 	sdiv	r0, r0, r5
 8027d8c:	4407      	add	r7, r0
 8027d8e:	4630      	mov	r0, r6
 8027d90:	f7ff fb84 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d94:	a92a      	add	r1, sp, #168	; 0xa8
 8027d96:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027d9a:	a80b      	add	r0, sp, #44	; 0x2c
 8027d9c:	f7e9 fdf6 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027da0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027da2:	fb90 f0f5 	sdiv	r0, r0, r5
 8027da6:	4639      	mov	r1, r7
 8027da8:	1a12      	subs	r2, r2, r0
 8027daa:	a80e      	add	r0, sp, #56	; 0x38
 8027dac:	f7ff faff 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027db0:	9b01      	ldr	r3, [sp, #4]
 8027db2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027db6:	f6bf af27 	bge.w	8027c08 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027dba:	4630      	mov	r0, r6
 8027dbc:	f7e9 ff1e 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027dc0:	ad2a      	add	r5, sp, #168	; 0xa8
 8027dc2:	f04f 0b02 	mov.w	fp, #2
 8027dc6:	f845 0d74 	str.w	r0, [r5, #-116]!
 8027dca:	a809      	add	r0, sp, #36	; 0x24
 8027dcc:	4629      	mov	r1, r5
 8027dce:	f7e9 fddd 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027dd2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027dd4:	eb00 0903 	add.w	r9, r0, r3
 8027dd8:	4630      	mov	r0, r6
 8027dda:	f7ff fb5f 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027dde:	4629      	mov	r1, r5
 8027de0:	900d      	str	r0, [sp, #52]	; 0x34
 8027de2:	a809      	add	r0, sp, #36	; 0x24
 8027de4:	f7e9 fdd2 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027de8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027dea:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027dee:	eba3 0800 	sub.w	r8, r3, r0
 8027df2:	4454      	add	r4, sl
 8027df4:	42a6      	cmp	r6, r4
 8027df6:	f77f af07 	ble.w	8027c08 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027dfa:	4620      	mov	r0, r4
 8027dfc:	f7e9 fefe 	bl	8011bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027e00:	4629      	mov	r1, r5
 8027e02:	900d      	str	r0, [sp, #52]	; 0x34
 8027e04:	a80a      	add	r0, sp, #40	; 0x28
 8027e06:	f7e9 fdc1 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e0a:	fb90 f0fb 	sdiv	r0, r0, fp
 8027e0e:	eb00 0709 	add.w	r7, r0, r9
 8027e12:	4620      	mov	r0, r4
 8027e14:	f7ff fb42 	bl	802749c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027e18:	a90c      	add	r1, sp, #48	; 0x30
 8027e1a:	900c      	str	r0, [sp, #48]	; 0x30
 8027e1c:	a80a      	add	r0, sp, #40	; 0x28
 8027e1e:	f7e9 fdb5 	bl	801198c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e22:	4639      	mov	r1, r7
 8027e24:	fb90 f2fb 	sdiv	r2, r0, fp
 8027e28:	a80e      	add	r0, sp, #56	; 0x38
 8027e2a:	eba8 0202 	sub.w	r2, r8, r2
 8027e2e:	f7ff fabe 	bl	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027e32:	4454      	add	r4, sl
 8027e34:	e7de      	b.n	8027df4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8027e36:	2400      	movs	r4, #0
 8027e38:	e6eb      	b.n	8027c12 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8027e3a:	bf00      	nop
 8027e3c:	0802f348 	.word	0x0802f348

08027e40 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027e40:	b570      	push	{r4, r5, r6, lr}
 8027e42:	790b      	ldrb	r3, [r1, #4]
 8027e44:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8027e48:	2b00      	cmp	r3, #0
 8027e4a:	bf0c      	ite	eq
 8027e4c:	2301      	moveq	r3, #1
 8027e4e:	2300      	movne	r3, #0
 8027e50:	4604      	mov	r4, r0
 8027e52:	460e      	mov	r6, r1
 8027e54:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8027e58:	d109      	bne.n	8027e6e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8027e5a:	b14d      	cbz	r5, 8027e70 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027e5c:	7933      	ldrb	r3, [r6, #4]
 8027e5e:	2b01      	cmp	r3, #1
 8027e60:	d10c      	bne.n	8027e7c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027e62:	6823      	ldr	r3, [r4, #0]
 8027e64:	4620      	mov	r0, r4
 8027e66:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8027e68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027e6c:	4718      	bx	r3
 8027e6e:	b12d      	cbz	r5, 8027e7c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027e70:	6823      	ldr	r3, [r4, #0]
 8027e72:	4620      	mov	r0, r4
 8027e74:	695b      	ldr	r3, [r3, #20]
 8027e76:	4798      	blx	r3
 8027e78:	2d00      	cmp	r5, #0
 8027e7a:	d1ef      	bne.n	8027e5c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027e7c:	bd70      	pop	{r4, r5, r6, pc}

08027e7e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027e7e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027e82:	4770      	bx	lr

08027e84 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027e84:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8027e88:	4770      	bx	lr

08027e8a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8027e8a:	6802      	ldr	r2, [r0, #0]
 8027e8c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027e90:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027e92:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027e96:	4710      	bx	r2

08027e98 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8027e98:	6802      	ldr	r2, [r0, #0]
 8027e9a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027e9e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027ea0:	eef0 0a40 	vmov.f32	s1, s0
 8027ea4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027ea8:	4710      	bx	r2

08027eaa <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8027eaa:	6802      	ldr	r2, [r0, #0]
 8027eac:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027eb0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027eb2:	eeb0 1a40 	vmov.f32	s2, s0
 8027eb6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027eba:	4710      	bx	r2

08027ebc <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027ebc:	6802      	ldr	r2, [r0, #0]
 8027ebe:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027ec2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027ec4:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027ec8:	4710      	bx	r2

08027eca <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8027eca:	6802      	ldr	r2, [r0, #0]
 8027ecc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027ed0:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027ed2:	eef0 0a40 	vmov.f32	s1, s0
 8027ed6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027eda:	4710      	bx	r2

08027edc <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027edc:	6802      	ldr	r2, [r0, #0]
 8027ede:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027ee2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027ee4:	eeb0 1a40 	vmov.f32	s2, s0
 8027ee8:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027eec:	4710      	bx	r2

08027eee <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027eee:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027ef2:	4770      	bx	lr

08027ef4 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027ef4:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8027ef8:	4770      	bx	lr

08027efa <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8027efa:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027efe:	4770      	bx	lr

08027f00 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027f00:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027f04:	4770      	bx	lr

08027f06 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8027f06:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8027f0a:	4770      	bx	lr

08027f0c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027f0c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027f10:	4770      	bx	lr

08027f12 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027f12:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8027f16:	4770      	bx	lr

08027f18 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8027f18:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8027f1c:	4770      	bx	lr

08027f1e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8027f1e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8027f22:	4770      	bx	lr

08027f24 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8027f24:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8027f28:	4770      	bx	lr

08027f2a <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8027f2a:	ee07 2a90 	vmov	s15, r2
 8027f2e:	6803      	ldr	r3, [r0, #0]
 8027f30:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027f34:	ee07 1a90 	vmov	s15, r1
 8027f38:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027f3c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027f40:	4718      	bx	r3

08027f42 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027f42:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8027f46:	4770      	bx	lr

08027f48 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8027f48:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027f4c:	4770      	bx	lr

08027f4e <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027f4e:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027f52:	4770      	bx	lr

08027f54 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027f54:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8027f58:	4770      	bx	lr

08027f5a <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8027f5a:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027f5e:	4770      	bx	lr

08027f60 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027f60:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027f64:	4770      	bx	lr

08027f66 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8027f66:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8027f6a:	4770      	bx	lr

08027f6c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027f6c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027f70:	4770      	bx	lr

08027f72 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027f72:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8027f76:	4770      	bx	lr

08027f78 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8027f78:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027f7c:	4770      	bx	lr

08027f7e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027f7e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027f82:	4770      	bx	lr

08027f84 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027f84:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8027f88:	4770      	bx	lr

08027f8a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8027f8a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027f8e:	4770      	bx	lr

08027f90 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027f90:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027f94:	4770      	bx	lr

08027f96 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8027f96:	b510      	push	{r4, lr}
 8027f98:	ed2d 8b04 	vpush	{d8-d9}
 8027f9c:	6803      	ldr	r3, [r0, #0]
 8027f9e:	4604      	mov	r4, r0
 8027fa0:	699b      	ldr	r3, [r3, #24]
 8027fa2:	eeb0 8a40 	vmov.f32	s16, s0
 8027fa6:	eef0 8a60 	vmov.f32	s17, s1
 8027faa:	eeb0 9a41 	vmov.f32	s18, s2
 8027fae:	4798      	blx	r3
 8027fb0:	6823      	ldr	r3, [r4, #0]
 8027fb2:	4620      	mov	r0, r4
 8027fb4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8027fb6:	eeb0 1a49 	vmov.f32	s2, s18
 8027fba:	eef0 0a68 	vmov.f32	s1, s17
 8027fbe:	eeb0 0a48 	vmov.f32	s0, s16
 8027fc2:	4798      	blx	r3
 8027fc4:	ecbd 8b04 	vpop	{d8-d9}
 8027fc8:	6823      	ldr	r3, [r4, #0]
 8027fca:	4620      	mov	r0, r4
 8027fcc:	699b      	ldr	r3, [r3, #24]
 8027fce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027fd2:	4718      	bx	r3

08027fd4 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027fd4:	b510      	push	{r4, lr}
 8027fd6:	ed2d 8b02 	vpush	{d8}
 8027fda:	6803      	ldr	r3, [r0, #0]
 8027fdc:	4604      	mov	r4, r0
 8027fde:	699b      	ldr	r3, [r3, #24]
 8027fe0:	eeb0 8a40 	vmov.f32	s16, s0
 8027fe4:	4798      	blx	r3
 8027fe6:	6823      	ldr	r3, [r4, #0]
 8027fe8:	4620      	mov	r0, r4
 8027fea:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027fee:	eeb0 0a48 	vmov.f32	s0, s16
 8027ff2:	4798      	blx	r3
 8027ff4:	ecbd 8b02 	vpop	{d8}
 8027ff8:	6823      	ldr	r3, [r4, #0]
 8027ffa:	4620      	mov	r0, r4
 8027ffc:	699b      	ldr	r3, [r3, #24]
 8027ffe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028002:	4718      	bx	r3

08028004 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8028004:	2200      	movs	r2, #0
 8028006:	8002      	strh	r2, [r0, #0]
 8028008:	8042      	strh	r2, [r0, #2]
 802800a:	8082      	strh	r2, [r0, #4]
 802800c:	80c2      	strh	r2, [r0, #6]
 802800e:	4770      	bx	lr

08028010 <_ZN8touchgfx13TextureMapperD1Ev>:
 8028010:	4770      	bx	lr

08028012 <_ZN8touchgfx13TextureMapperD0Ev>:
 8028012:	b510      	push	{r4, lr}
 8028014:	2190      	movs	r1, #144	; 0x90
 8028016:	4604      	mov	r4, r0
 8028018:	f001 ff3f 	bl	8029e9a <_ZdlPvj>
 802801c:	4620      	mov	r0, r4
 802801e:	bd10      	pop	{r4, pc}

08028020 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8028020:	b538      	push	{r3, r4, r5, lr}
 8028022:	2500      	movs	r5, #0
 8028024:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8028028:	2301      	movs	r3, #1
 802802a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802802e:	4b1f      	ldr	r3, [pc, #124]	; (80280ac <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028030:	8085      	strh	r5, [r0, #4]
 8028032:	80c5      	strh	r5, [r0, #6]
 8028034:	8105      	strh	r5, [r0, #8]
 8028036:	8145      	strh	r5, [r0, #10]
 8028038:	8185      	strh	r5, [r0, #12]
 802803a:	81c5      	strh	r5, [r0, #14]
 802803c:	8205      	strh	r5, [r0, #16]
 802803e:	8245      	strh	r5, [r0, #18]
 8028040:	61c5      	str	r5, [r0, #28]
 8028042:	8405      	strh	r5, [r0, #32]
 8028044:	8445      	strh	r5, [r0, #34]	; 0x22
 8028046:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802804a:	6003      	str	r3, [r0, #0]
 802804c:	880b      	ldrh	r3, [r1, #0]
 802804e:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028050:	23ff      	movs	r3, #255	; 0xff
 8028052:	4604      	mov	r4, r0
 8028054:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8028058:	f7eb f96b 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802805c:	4b14      	ldr	r3, [pc, #80]	; (80280b0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802805e:	6023      	str	r3, [r4, #0]
 8028060:	2300      	movs	r3, #0
 8028062:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8028066:	4913      	ldr	r1, [pc, #76]	; (80280b4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8028068:	62e3      	str	r3, [r4, #44]	; 0x2c
 802806a:	6323      	str	r3, [r4, #48]	; 0x30
 802806c:	6363      	str	r3, [r4, #52]	; 0x34
 802806e:	63a3      	str	r3, [r4, #56]	; 0x38
 8028070:	63e3      	str	r3, [r4, #60]	; 0x3c
 8028072:	6463      	str	r3, [r4, #68]	; 0x44
 8028074:	64a3      	str	r3, [r4, #72]	; 0x48
 8028076:	6523      	str	r3, [r4, #80]	; 0x50
 8028078:	6563      	str	r3, [r4, #84]	; 0x54
 802807a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802807c:	6623      	str	r3, [r4, #96]	; 0x60
 802807e:	66a3      	str	r3, [r4, #104]	; 0x68
 8028080:	66e3      	str	r3, [r4, #108]	; 0x6c
 8028082:	6763      	str	r3, [r4, #116]	; 0x74
 8028084:	67a3      	str	r3, [r4, #120]	; 0x78
 8028086:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802808a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802808e:	230c      	movs	r3, #12
 8028090:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8028094:	6422      	str	r2, [r4, #64]	; 0x40
 8028096:	64e1      	str	r1, [r4, #76]	; 0x4c
 8028098:	65a1      	str	r1, [r4, #88]	; 0x58
 802809a:	6662      	str	r2, [r4, #100]	; 0x64
 802809c:	6722      	str	r2, [r4, #112]	; 0x70
 802809e:	67e2      	str	r2, [r4, #124]	; 0x7c
 80280a0:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80280a4:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80280a8:	4620      	mov	r0, r4
 80280aa:	bd38      	pop	{r3, r4, r5, pc}
 80280ac:	0802edf0 	.word	0x0802edf0
 80280b0:	0802f3d4 	.word	0x0802f3d4
 80280b4:	447a0000 	.word	0x447a0000

080280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80280b8:	b570      	push	{r4, r5, r6, lr}
 80280ba:	ed2d 8b04 	vpush	{d8-d9}
 80280be:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80280c2:	add0      	add	r5, sp, #832	; 0x340
 80280c4:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80280c6:	f825 3d40 	strh.w	r3, [r5, #-64]!
 80280ca:	4604      	mov	r4, r0
 80280cc:	4628      	mov	r0, r5
 80280ce:	f7f1 fa7f 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80280d2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80280d4:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 80280d8:	4606      	mov	r6, r0
 80280da:	4628      	mov	r0, r5
 80280dc:	f7f1 faac 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80280e0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80280e4:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80280e8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80280ea:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 80280ee:	9312      	str	r3, [sp, #72]	; 0x48
 80280f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80280f4:	1c72      	adds	r2, r6, #1
 80280f6:	3001      	adds	r0, #1
 80280f8:	ee76 5ac7 	vsub.f32	s11, s13, s14
 80280fc:	ee07 2a90 	vmov	s15, r2
 8028100:	ee06 0a90 	vmov	s13, r0
 8028104:	ee36 6a47 	vsub.f32	s12, s12, s14
 8028108:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802810c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8028110:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028114:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8028118:	9316      	str	r3, [sp, #88]	; 0x58
 802811a:	931a      	str	r3, [sp, #104]	; 0x68
 802811c:	931e      	str	r3, [sp, #120]	; 0x78
 802811e:	2300      	movs	r3, #0
 8028120:	9320      	str	r3, [sp, #128]	; 0x80
 8028122:	9321      	str	r3, [sp, #132]	; 0x84
 8028124:	9322      	str	r3, [sp, #136]	; 0x88
 8028126:	9324      	str	r3, [sp, #144]	; 0x90
 8028128:	9325      	str	r3, [sp, #148]	; 0x94
 802812a:	9326      	str	r3, [sp, #152]	; 0x98
 802812c:	9328      	str	r3, [sp, #160]	; 0xa0
 802812e:	9329      	str	r3, [sp, #164]	; 0xa4
 8028130:	932a      	str	r3, [sp, #168]	; 0xa8
 8028132:	932c      	str	r3, [sp, #176]	; 0xb0
 8028134:	932d      	str	r3, [sp, #180]	; 0xb4
 8028136:	932e      	str	r3, [sp, #184]	; 0xb8
 8028138:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802813c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8028140:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8028144:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028148:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 802814c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8028150:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8028154:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8028158:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 802815c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8028160:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8028164:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8028168:	a830      	add	r0, sp, #192	; 0xc0
 802816a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802816e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8028172:	f000 fc43 	bl	80289fc <_ZN8touchgfx9Matrix4x4C1Ev>
 8028176:	eeb1 0a49 	vneg.f32	s0, s18
 802817a:	a830      	add	r0, sp, #192	; 0xc0
 802817c:	f000 fd12 	bl	8028ba4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028180:	eeb1 0a68 	vneg.f32	s0, s17
 8028184:	f000 fd1c 	bl	8028bc0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028188:	eeb1 0a48 	vneg.f32	s0, s16
 802818c:	f000 fd27 	bl	8028bde <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028190:	a840      	add	r0, sp, #256	; 0x100
 8028192:	f000 fc33 	bl	80289fc <_ZN8touchgfx9Matrix4x4C1Ev>
 8028196:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802819a:	a840      	add	r0, sp, #256	; 0x100
 802819c:	f000 fc86 	bl	8028aac <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 80281a0:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 80281a4:	f000 fcac 	bl	8028b00 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 80281a8:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 80281ac:	f000 fcd1 	bl	8028b52 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 80281b0:	a850      	add	r0, sp, #320	; 0x140
 80281b2:	f000 fc23 	bl	80289fc <_ZN8touchgfx9Matrix4x4C1Ev>
 80281b6:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80281ba:	a850      	add	r0, sp, #320	; 0x140
 80281bc:	f000 fd1e 	bl	8028bfc <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 80281c0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80281c4:	f000 fd26 	bl	8028c14 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 80281c8:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80281cc:	f000 fd2f 	bl	8028c2e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 80281d0:	a860      	add	r0, sp, #384	; 0x180
 80281d2:	f000 fc13 	bl	80289fc <_ZN8touchgfx9Matrix4x4C1Ev>
 80281d6:	eeb0 0a49 	vmov.f32	s0, s18
 80281da:	a860      	add	r0, sp, #384	; 0x180
 80281dc:	f000 fce2 	bl	8028ba4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80281e0:	eeb0 0a68 	vmov.f32	s0, s17
 80281e4:	f000 fcec 	bl	8028bc0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80281e8:	eeb0 0a48 	vmov.f32	s0, s16
 80281ec:	f000 fcf7 	bl	8028bde <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80281f0:	aa50      	add	r2, sp, #320	; 0x140
 80281f2:	a960      	add	r1, sp, #384	; 0x180
 80281f4:	a8b0      	add	r0, sp, #704	; 0x2c0
 80281f6:	f000 fc1b 	bl	8028a30 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80281fa:	4628      	mov	r0, r5
 80281fc:	aa40      	add	r2, sp, #256	; 0x100
 80281fe:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028200:	f000 fc16 	bl	8028a30 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028204:	4629      	mov	r1, r5
 8028206:	aa30      	add	r2, sp, #192	; 0xc0
 8028208:	a870      	add	r0, sp, #448	; 0x1c0
 802820a:	f000 fc11 	bl	8028a30 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802820e:	a880      	add	r0, sp, #512	; 0x200
 8028210:	f000 fbf4 	bl	80289fc <_ZN8touchgfx9Matrix4x4C1Ev>
 8028214:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028218:	a880      	add	r0, sp, #512	; 0x200
 802821a:	eeb1 0a40 	vneg.f32	s0, s0
 802821e:	f000 fcc1 	bl	8028ba4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028222:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028226:	a880      	add	r0, sp, #512	; 0x200
 8028228:	eeb1 0a40 	vneg.f32	s0, s0
 802822c:	f000 fcc8 	bl	8028bc0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028230:	a890      	add	r0, sp, #576	; 0x240
 8028232:	f000 fbe3 	bl	80289fc <_ZN8touchgfx9Matrix4x4C1Ev>
 8028236:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802823a:	a890      	add	r0, sp, #576	; 0x240
 802823c:	f000 fc26 	bl	8028a8c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028240:	a8a0      	add	r0, sp, #640	; 0x280
 8028242:	f000 fbdb 	bl	80289fc <_ZN8touchgfx9Matrix4x4C1Ev>
 8028246:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802824a:	a8a0      	add	r0, sp, #640	; 0x280
 802824c:	f000 fcaa 	bl	8028ba4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028250:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028254:	f000 fcb4 	bl	8028bc0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028258:	aa90      	add	r2, sp, #576	; 0x240
 802825a:	a9a0      	add	r1, sp, #640	; 0x280
 802825c:	a8b0      	add	r0, sp, #704	; 0x2c0
 802825e:	f000 fbe7 	bl	8028a30 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028262:	4628      	mov	r0, r5
 8028264:	aa80      	add	r2, sp, #512	; 0x200
 8028266:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028268:	f000 fbe2 	bl	8028a30 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802826c:	4629      	mov	r1, r5
 802826e:	aa70      	add	r2, sp, #448	; 0x1c0
 8028270:	4668      	mov	r0, sp
 8028272:	466d      	mov	r5, sp
 8028274:	f000 fbdc 	bl	8028a30 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028278:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802827a:	ae70      	add	r6, sp, #448	; 0x1c0
 802827c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802827e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028280:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028282:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028284:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028286:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802828a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802828e:	2500      	movs	r5, #0
 8028290:	0129      	lsls	r1, r5, #4
 8028292:	ab20      	add	r3, sp, #128	; 0x80
 8028294:	185e      	adds	r6, r3, r1
 8028296:	ab10      	add	r3, sp, #64	; 0x40
 8028298:	4419      	add	r1, r3
 802829a:	a870      	add	r0, sp, #448	; 0x1c0
 802829c:	f000 fb7e 	bl	802899c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 80282a0:	3501      	adds	r5, #1
 80282a2:	2d04      	cmp	r5, #4
 80282a4:	ed86 0a00 	vstr	s0, [r6]
 80282a8:	edc6 0a01 	vstr	s1, [r6, #4]
 80282ac:	ed86 1a02 	vstr	s2, [r6, #8]
 80282b0:	edc6 1a03 	vstr	s3, [r6, #12]
 80282b4:	d1ec      	bne.n	8028290 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80282b6:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80282ba:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 80282be:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 80282c2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80282c6:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 80282ca:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80282ce:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80282d2:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80282d6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80282da:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80282de:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80282e2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80282e6:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80282ea:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80282ee:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80282f2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80282f6:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80282fa:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80282fe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028302:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028306:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802830a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802830e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028312:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028316:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802831a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802831e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028322:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8028326:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802832a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802832e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028332:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8028336:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802833a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802833e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8028342:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028346:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802834a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802834e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8028352:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8028356:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802835a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802835e:	ecbd 8b04 	vpop	{d8-d9}
 8028362:	bd70      	pop	{r4, r5, r6, pc}

08028364 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8028364:	b510      	push	{r4, lr}
 8028366:	4604      	mov	r4, r0
 8028368:	f7ea ffe3 	bl	8013332 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802836c:	4620      	mov	r0, r4
 802836e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028372:	f7ff bea1 	b.w	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028376 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8028376:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802837a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802837e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8028382:	f7ff be99 	b.w	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028386 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8028386:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802838a:	f7ff be95 	b.w	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802838e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802838e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8028392:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8028396:	f7ff be8f 	b.w	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802839a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802839a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802839e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80283a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283a6:	bfd8      	it	le
 80283a8:	eeb0 0a67 	vmovle.f32	s0, s15
 80283ac:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 80283b0:	f7ff be82 	b.w	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080283b4 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80283b4:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 80283b8:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 80283bc:	f7ff be7c 	b.w	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080283c0 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 80283c0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80283c4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80283c8:	f7ff be76 	b.w	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080283cc <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80283cc:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80283d0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80283d4:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80283d8:	f7ff be6e 	b.w	80280b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080283dc <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80283dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80283e0:	ed2d 8b04 	vpush	{d8-d9}
 80283e4:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80283e8:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80283ec:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80283f0:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80283f4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80283f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283fc:	bf54      	ite	pl
 80283fe:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028402:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028406:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802840a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802840e:	bfd8      	it	le
 8028410:	eeb0 0a49 	vmovle.f32	s0, s18
 8028414:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028418:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802841c:	bfd8      	it	le
 802841e:	eeb0 0a68 	vmovle.f32	s0, s17
 8028422:	460c      	mov	r4, r1
 8028424:	4607      	mov	r7, r0
 8028426:	f001 fe4f 	bl	802a0c8 <floorf>
 802842a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802842e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028432:	bf58      	it	pl
 8028434:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028438:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802843c:	bf56      	itet	pl
 802843e:	ee10 3a10 	vmovpl	r3, s0
 8028442:	2600      	movmi	r6, #0
 8028444:	b21e      	sxthpl	r6, r3
 8028446:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802844a:	bfd8      	it	le
 802844c:	eeb0 8a69 	vmovle.f32	s16, s19
 8028450:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028458:	bf58      	it	pl
 802845a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802845e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028462:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028466:	bf54      	ite	pl
 8028468:	eeb0 0a68 	vmovpl.f32	s0, s17
 802846c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028470:	f001 fde8 	bl	802a044 <ceilf>
 8028474:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8028478:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802847c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8028480:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8028484:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8028488:	ee07 8a90 	vmov	s15, r8
 802848c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028490:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028498:	bfd8      	it	le
 802849a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802849e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80284a2:	bfdc      	itt	le
 80284a4:	ee10 3a10 	vmovle	r3, s0
 80284a8:	fa0f f883 	sxthle.w	r8, r3
 80284ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284b0:	bf54      	ite	pl
 80284b2:	eeb0 0a69 	vmovpl.f32	s0, s19
 80284b6:	eeb0 0a48 	vmovmi.f32	s0, s16
 80284ba:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80284be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284c2:	bfd8      	it	le
 80284c4:	eeb0 0a49 	vmovle.f32	s0, s18
 80284c8:	eef4 8ac0 	vcmpe.f32	s17, s0
 80284cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284d0:	bfd8      	it	le
 80284d2:	eeb0 0a68 	vmovle.f32	s0, s17
 80284d6:	f001 fdf7 	bl	802a0c8 <floorf>
 80284da:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80284de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284e2:	bf58      	it	pl
 80284e4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80284e8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80284ec:	bf56      	itet	pl
 80284ee:	ee10 3a10 	vmovpl	r3, s0
 80284f2:	2500      	movmi	r5, #0
 80284f4:	b21d      	sxthpl	r5, r3
 80284f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284fa:	bfd8      	it	le
 80284fc:	eeb0 8a69 	vmovle.f32	s16, s19
 8028500:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028508:	bf58      	it	pl
 802850a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802850e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028512:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028516:	bf54      	ite	pl
 8028518:	eeb0 0a68 	vmovpl.f32	s0, s17
 802851c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028520:	f001 fd90 	bl	802a044 <ceilf>
 8028524:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8028528:	803e      	strh	r6, [r7, #0]
 802852a:	ee07 3a90 	vmov	s15, r3
 802852e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028532:	807d      	strh	r5, [r7, #2]
 8028534:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028538:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802853c:	bfd8      	it	le
 802853e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028542:	eba8 0606 	sub.w	r6, r8, r6
 8028546:	bfdc      	itt	le
 8028548:	ee10 3a10 	vmovle	r3, s0
 802854c:	b21b      	sxthle	r3, r3
 802854e:	1b5d      	subs	r5, r3, r5
 8028550:	80be      	strh	r6, [r7, #4]
 8028552:	80fd      	strh	r5, [r7, #6]
 8028554:	ecbd 8b04 	vpop	{d8-d9}
 8028558:	4638      	mov	r0, r7
 802855a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802855e <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802855e:	b513      	push	{r0, r1, r4, lr}
 8028560:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028564:	4604      	mov	r4, r0
 8028566:	b143      	cbz	r3, 802857a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8028568:	4601      	mov	r1, r0
 802856a:	4668      	mov	r0, sp
 802856c:	f7ff ff36 	bl	80283dc <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8028570:	6823      	ldr	r3, [r4, #0]
 8028572:	4669      	mov	r1, sp
 8028574:	691b      	ldr	r3, [r3, #16]
 8028576:	4620      	mov	r0, r4
 8028578:	4798      	blx	r3
 802857a:	b002      	add	sp, #8
 802857c:	bd10      	pop	{r4, pc}

0802857e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802857e:	4603      	mov	r3, r0
 8028580:	3026      	adds	r0, #38	; 0x26
 8028582:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8028586:	b90b      	cbnz	r3, 802858c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8028588:	f7ee bdfa 	b.w	8017180 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802858c:	f7ee be08 	b.w	80171a0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08028590 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8028590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028594:	ed2d 8b04 	vpush	{d8-d9}
 8028598:	4604      	mov	r4, r0
 802859a:	469b      	mov	fp, r3
 802859c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 80285a0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80285a4:	f9b1 6000 	ldrsh.w	r6, [r1]
 80285a8:	8888      	ldrh	r0, [r1, #4]
 80285aa:	b0b3      	sub	sp, #204	; 0xcc
 80285ac:	4430      	add	r0, r6
 80285ae:	b280      	uxth	r0, r0
 80285b0:	9206      	str	r2, [sp, #24]
 80285b2:	fa0f fe80 	sxth.w	lr, r0
 80285b6:	2200      	movs	r2, #0
 80285b8:	4596      	cmp	lr, r2
 80285ba:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 80285be:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 80285c2:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 80285c6:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 80285c8:	9211      	str	r2, [sp, #68]	; 0x44
 80285ca:	f340 8129 	ble.w	8028820 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80285ce:	45b4      	cmp	ip, r6
 80285d0:	f340 8126 	ble.w	8028820 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80285d4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80285d8:	88ca      	ldrh	r2, [r1, #6]
 80285da:	442a      	add	r2, r5
 80285dc:	b292      	uxth	r2, r2
 80285de:	b211      	sxth	r1, r2
 80285e0:	2900      	cmp	r1, #0
 80285e2:	f340 811d 	ble.w	8028820 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80285e6:	42ab      	cmp	r3, r5
 80285e8:	f340 811a 	ble.w	8028820 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80285ec:	45f4      	cmp	ip, lr
 80285ee:	bfb8      	it	lt
 80285f0:	fa1f f08c 	uxthlt.w	r0, ip
 80285f4:	428b      	cmp	r3, r1
 80285f6:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80285fa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80285fe:	bfb8      	it	lt
 8028600:	b29a      	uxthlt	r2, r3
 8028602:	1b80      	subs	r0, r0, r6
 8028604:	1b52      	subs	r2, r2, r5
 8028606:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802860a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802860e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8028612:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8028616:	ab11      	add	r3, sp, #68	; 0x44
 8028618:	e893 0003 	ldmia.w	r3, {r0, r1}
 802861c:	6822      	ldr	r2, [r4, #0]
 802861e:	9307      	str	r3, [sp, #28]
 8028620:	ad13      	add	r5, sp, #76	; 0x4c
 8028622:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8028624:	e885 0003 	stmia.w	r5, {r0, r1}
 8028628:	4629      	mov	r1, r5
 802862a:	4620      	mov	r0, r4
 802862c:	4790      	blx	r2
 802862e:	4621      	mov	r1, r4
 8028630:	a815      	add	r0, sp, #84	; 0x54
 8028632:	f7ee fd01 	bl	8017038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8028636:	a815      	add	r0, sp, #84	; 0x54
 8028638:	f7ed f9c6 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802863c:	9b07      	ldr	r3, [sp, #28]
 802863e:	1d26      	adds	r6, r4, #4
 8028640:	4618      	mov	r0, r3
 8028642:	4631      	mov	r1, r6
 8028644:	f7ed fa04 	bl	8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028648:	4628      	mov	r0, r5
 802864a:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802864e:	f7ed f9bb 	bl	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028652:	4628      	mov	r0, r5
 8028654:	f7f1 f8a8 	bl	80197a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8028658:	9007      	str	r0, [sp, #28]
 802865a:	2800      	cmp	r0, #0
 802865c:	f000 80db 	beq.w	8028816 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8028660:	f8db 2000 	ldr.w	r2, [fp]
 8028664:	9209      	str	r2, [sp, #36]	; 0x24
 8028666:	f8db 2004 	ldr.w	r2, [fp, #4]
 802866a:	920a      	str	r2, [sp, #40]	; 0x28
 802866c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8028670:	920b      	str	r2, [sp, #44]	; 0x2c
 8028672:	f8db 200c 	ldr.w	r2, [fp, #12]
 8028676:	920c      	str	r2, [sp, #48]	; 0x30
 8028678:	f8da 2000 	ldr.w	r2, [sl]
 802867c:	920d      	str	r2, [sp, #52]	; 0x34
 802867e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8028682:	920e      	str	r2, [sp, #56]	; 0x38
 8028684:	f8da 2008 	ldr.w	r2, [sl, #8]
 8028688:	920f      	str	r2, [sp, #60]	; 0x3c
 802868a:	f8da 200c 	ldr.w	r2, [sl, #12]
 802868e:	9210      	str	r2, [sp, #64]	; 0x40
 8028690:	a90d      	add	r1, sp, #52	; 0x34
 8028692:	4632      	mov	r2, r6
 8028694:	a809      	add	r0, sp, #36	; 0x24
 8028696:	f7ed f9bf 	bl	8015a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802869a:	4632      	mov	r2, r6
 802869c:	a90e      	add	r1, sp, #56	; 0x38
 802869e:	a80a      	add	r0, sp, #40	; 0x28
 80286a0:	f7ed f9ba 	bl	8015a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80286a4:	4632      	mov	r2, r6
 80286a6:	a90f      	add	r1, sp, #60	; 0x3c
 80286a8:	a80b      	add	r0, sp, #44	; 0x2c
 80286aa:	f7ed f9b5 	bl	8015a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80286ae:	4632      	mov	r2, r6
 80286b0:	a910      	add	r1, sp, #64	; 0x40
 80286b2:	a80c      	add	r0, sp, #48	; 0x30
 80286b4:	f7ed f9b0 	bl	8015a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80286b8:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80286bc:	edd7 4a00 	vldr	s9, [r7]
 80286c0:	edd7 5a01 	vldr	s11, [r7, #4]
 80286c4:	ed98 4a00 	vldr	s8, [r8]
 80286c8:	ed98 5a01 	vldr	s10, [r8, #4]
 80286cc:	ed99 9a00 	vldr	s18, [r9]
 80286d0:	ed99 8a01 	vldr	s16, [r9, #4]
 80286d4:	edd9 8a02 	vldr	s17, [r9, #8]
 80286d8:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80286dc:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80286e0:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80286e4:	eef0 6a67 	vmov.f32	s13, s15
 80286e8:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80286ec:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80286f0:	eeb0 7a67 	vmov.f32	s14, s15
 80286f4:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80286f8:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80286fc:	eeb0 6a67 	vmov.f32	s12, s15
 8028700:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028704:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8028708:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802870c:	ee16 6a10 	vmov	r6, s12
 8028710:	eeb0 6a67 	vmov.f32	s12, s15
 8028714:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028718:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802871c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8028720:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8028724:	68ff      	ldr	r7, [r7, #12]
 8028726:	9624      	str	r6, [sp, #144]	; 0x90
 8028728:	ee16 0a10 	vmov	r0, s12
 802872c:	eeb0 6a67 	vmov.f32	s12, s15
 8028730:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028734:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8028738:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802873c:	ee16 1a10 	vmov	r1, s12
 8028740:	eeb0 6a67 	vmov.f32	s12, s15
 8028744:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028748:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 802874c:	ee16 2a10 	vmov	r2, s12
 8028750:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8028754:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8028758:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802875c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8028760:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028764:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8028768:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802876c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8028770:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8028774:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8028778:	922d      	str	r2, [sp, #180]	; 0xb4
 802877a:	4a2b      	ldr	r2, [pc, #172]	; (8028828 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802877c:	9b06      	ldr	r3, [sp, #24]
 802877e:	8812      	ldrh	r2, [r2, #0]
 8028780:	9317      	str	r3, [sp, #92]	; 0x5c
 8028782:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8028786:	9b07      	ldr	r3, [sp, #28]
 8028788:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802878c:	4628      	mov	r0, r5
 802878e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8028792:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8028796:	9218      	str	r2, [sp, #96]	; 0x60
 8028798:	9319      	str	r3, [sp, #100]	; 0x64
 802879a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802879e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80287a2:	9731      	str	r7, [sp, #196]	; 0xc4
 80287a4:	f7f1 f830 	bl	8019808 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80287a8:	901a      	str	r0, [sp, #104]	; 0x68
 80287aa:	4628      	mov	r0, r5
 80287ac:	f7f0 ff10 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80287b0:	901b      	str	r0, [sp, #108]	; 0x6c
 80287b2:	4628      	mov	r0, r5
 80287b4:	f7f0 ff40 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80287b8:	901c      	str	r0, [sp, #112]	; 0x70
 80287ba:	4628      	mov	r0, r5
 80287bc:	f7f0 ff08 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80287c0:	eeb4 9a48 	vcmp.f32	s18, s16
 80287c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80287c8:	901d      	str	r0, [sp, #116]	; 0x74
 80287ca:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80287ce:	d107      	bne.n	80287e0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80287d0:	eeb4 8a68 	vcmp.f32	s16, s17
 80287d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80287d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80287dc:	bf08      	it	eq
 80287de:	461e      	moveq	r6, r3
 80287e0:	4b12      	ldr	r3, [pc, #72]	; (802882c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80287e2:	681b      	ldr	r3, [r3, #0]
 80287e4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80287e8:	b10a      	cbz	r2, 80287ee <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80287ea:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80287ec:	b905      	cbnz	r5, 80287f0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80287ee:	689d      	ldr	r5, [r3, #8]
 80287f0:	682b      	ldr	r3, [r5, #0]
 80287f2:	4620      	mov	r0, r4
 80287f4:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80287f6:	f7ff fec2 	bl	802857e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80287fa:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80287fe:	9604      	str	r6, [sp, #16]
 8028800:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8028804:	ab13      	add	r3, sp, #76	; 0x4c
 8028806:	9301      	str	r3, [sp, #4]
 8028808:	ab15      	add	r3, sp, #84	; 0x54
 802880a:	9300      	str	r3, [sp, #0]
 802880c:	aa1e      	add	r2, sp, #120	; 0x78
 802880e:	ab19      	add	r3, sp, #100	; 0x64
 8028810:	a917      	add	r1, sp, #92	; 0x5c
 8028812:	4628      	mov	r0, r5
 8028814:	47b8      	blx	r7
 8028816:	b033      	add	sp, #204	; 0xcc
 8028818:	ecbd 8b04 	vpop	{d8-d9}
 802881c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028820:	2300      	movs	r3, #0
 8028822:	9312      	str	r3, [sp, #72]	; 0x48
 8028824:	e6f7      	b.n	8028616 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8028826:	bf00      	nop
 8028828:	200132b6 	.word	0x200132b6
 802882c:	200132bc 	.word	0x200132bc

08028830 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8028830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028834:	ed2d 8b02 	vpush	{d8}
 8028838:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802883c:	b098      	sub	sp, #96	; 0x60
 802883e:	4604      	mov	r4, r0
 8028840:	4688      	mov	r8, r1
 8028842:	2b00      	cmp	r3, #0
 8028844:	d077      	beq.n	8028936 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8028846:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802884a:	4628      	mov	r0, r5
 802884c:	f7f0 fec0 	bl	80195d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028850:	ee07 0a90 	vmov	s15, r0
 8028854:	4628      	mov	r0, r5
 8028856:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802885a:	f7f0 feed 	bl	8019638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802885e:	4b4e      	ldr	r3, [pc, #312]	; (8028998 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8028860:	781b      	ldrb	r3, [r3, #0]
 8028862:	ee07 0a90 	vmov	s15, r0
 8028866:	2b01      	cmp	r3, #1
 8028868:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802886c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8028870:	d066      	beq.n	8028940 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8028872:	eeb0 6a47 	vmov.f32	s12, s14
 8028876:	ee17 3a10 	vmov	r3, s14
 802887a:	eeb0 4a48 	vmov.f32	s8, s16
 802887e:	eeb0 7a48 	vmov.f32	s14, s16
 8028882:	eef0 4a67 	vmov.f32	s9, s15
 8028886:	eeb0 8a67 	vmov.f32	s16, s15
 802888a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802888e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8028892:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8028896:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802889a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802889e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 80288a2:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80288a4:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80288a6:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80288a8:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80288ac:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80288b0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80288b4:	ee73 1a65 	vsub.f32	s3, s6, s11
 80288b8:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80288bc:	ee32 1a45 	vsub.f32	s2, s4, s10
 80288c0:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80288c4:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80288c8:	eee1 6a21 	vfma.f32	s13, s2, s3
 80288cc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80288d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80288d4:	dd3d      	ble.n	8028952 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80288d6:	ed8d 5a04 	vstr	s10, [sp, #16]
 80288da:	ed8d 2a05 	vstr	s4, [sp, #20]
 80288de:	edcd 2a06 	vstr	s5, [sp, #24]
 80288e2:	f8cd c01c 	str.w	ip, [sp, #28]
 80288e6:	edcd 5a08 	vstr	s11, [sp, #32]
 80288ea:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80288ee:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80288f2:	970b      	str	r7, [sp, #44]	; 0x2c
 80288f4:	960c      	str	r6, [sp, #48]	; 0x30
 80288f6:	950d      	str	r5, [sp, #52]	; 0x34
 80288f8:	920e      	str	r2, [sp, #56]	; 0x38
 80288fa:	900f      	str	r0, [sp, #60]	; 0x3c
 80288fc:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8028900:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8028904:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8028908:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802890c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8028910:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8028914:	9316      	str	r3, [sp, #88]	; 0x58
 8028916:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802891a:	ab14      	add	r3, sp, #80	; 0x50
 802891c:	9303      	str	r3, [sp, #12]
 802891e:	ab10      	add	r3, sp, #64	; 0x40
 8028920:	9302      	str	r3, [sp, #8]
 8028922:	ab0c      	add	r3, sp, #48	; 0x30
 8028924:	9301      	str	r3, [sp, #4]
 8028926:	ab08      	add	r3, sp, #32
 8028928:	9300      	str	r3, [sp, #0]
 802892a:	2200      	movs	r2, #0
 802892c:	ab04      	add	r3, sp, #16
 802892e:	4641      	mov	r1, r8
 8028930:	4620      	mov	r0, r4
 8028932:	f7ff fe2d 	bl	8028590 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8028936:	b018      	add	sp, #96	; 0x60
 8028938:	ecbd 8b02 	vpop	{d8}
 802893c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028940:	eeb0 6a48 	vmov.f32	s12, s16
 8028944:	eef0 4a47 	vmov.f32	s9, s14
 8028948:	ee17 3a90 	vmov	r3, s15
 802894c:	eeb0 4a67 	vmov.f32	s8, s15
 8028950:	e79b      	b.n	802888a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8028952:	ed8d 5a05 	vstr	s10, [sp, #20]
 8028956:	ed8d 2a04 	vstr	s4, [sp, #16]
 802895a:	f8cd c018 	str.w	ip, [sp, #24]
 802895e:	edcd 2a07 	vstr	s5, [sp, #28]
 8028962:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8028966:	ed8d 3a08 	vstr	s6, [sp, #32]
 802896a:	970a      	str	r7, [sp, #40]	; 0x28
 802896c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8028970:	960d      	str	r6, [sp, #52]	; 0x34
 8028972:	950c      	str	r5, [sp, #48]	; 0x30
 8028974:	900e      	str	r0, [sp, #56]	; 0x38
 8028976:	920f      	str	r2, [sp, #60]	; 0x3c
 8028978:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802897c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8028980:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8028984:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8028988:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802898c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028990:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8028994:	9317      	str	r3, [sp, #92]	; 0x5c
 8028996:	e7c0      	b.n	802891a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8028998:	200132b4 	.word	0x200132b4

0802899c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802899c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802899e:	b08d      	sub	sp, #52	; 0x34
 80289a0:	2300      	movs	r3, #0
 80289a2:	9304      	str	r3, [sp, #16]
 80289a4:	9305      	str	r3, [sp, #20]
 80289a6:	9306      	str	r3, [sp, #24]
 80289a8:	aa04      	add	r2, sp, #16
 80289aa:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80289ae:	9307      	str	r3, [sp, #28]
 80289b0:	f100 0640 	add.w	r6, r0, #64	; 0x40
 80289b4:	4613      	mov	r3, r2
 80289b6:	f101 0710 	add.w	r7, r1, #16
 80289ba:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80289f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 80289be:	460c      	mov	r4, r1
 80289c0:	4605      	mov	r5, r0
 80289c2:	ecb4 7a01 	vldmia	r4!, {s14}
 80289c6:	ecf5 6a01 	vldmia	r5!, {s13}
 80289ca:	42bc      	cmp	r4, r7
 80289cc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80289d0:	d1f7      	bne.n	80289c2 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80289d2:	3010      	adds	r0, #16
 80289d4:	42b0      	cmp	r0, r6
 80289d6:	ece2 7a01 	vstmia	r2!, {s15}
 80289da:	d1ee      	bne.n	80289ba <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 80289dc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80289de:	ac0c      	add	r4, sp, #48	; 0x30
 80289e0:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80289e4:	ed9d 0a08 	vldr	s0, [sp, #32]
 80289e8:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80289ec:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80289f0:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 80289f4:	b00d      	add	sp, #52	; 0x34
 80289f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80289f8:	00000000 	.word	0x00000000

080289fc <_ZN8touchgfx9Matrix4x4C1Ev>:
 80289fc:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8028a2c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8028a00:	2300      	movs	r3, #0
 8028a02:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028a06:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8028a0a:	2200      	movs	r2, #0
 8028a0c:	4293      	cmp	r3, r2
 8028a0e:	f102 0201 	add.w	r2, r2, #1
 8028a12:	bf14      	ite	ne
 8028a14:	eef0 6a47 	vmovne.f32	s13, s14
 8028a18:	eef0 6a67 	vmoveq.f32	s13, s15
 8028a1c:	2a04      	cmp	r2, #4
 8028a1e:	ece1 6a01 	vstmia	r1!, {s13}
 8028a22:	d1f3      	bne.n	8028a0c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8028a24:	3301      	adds	r3, #1
 8028a26:	2b04      	cmp	r3, #4
 8028a28:	d1ed      	bne.n	8028a06 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8028a2a:	4770      	bx	lr
 8028a2c:	00000000 	.word	0x00000000

08028a30 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028a30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028a34:	460c      	mov	r4, r1
 8028a36:	4605      	mov	r5, r0
 8028a38:	4690      	mov	r8, r2
 8028a3a:	f7ff ffdf 	bl	80289fc <_ZN8touchgfx9Matrix4x4C1Ev>
 8028a3e:	4628      	mov	r0, r5
 8028a40:	4621      	mov	r1, r4
 8028a42:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8028a46:	2300      	movs	r3, #0
 8028a48:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8028a88 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8028a4c:	eb08 0603 	add.w	r6, r8, r3
 8028a50:	460f      	mov	r7, r1
 8028a52:	2400      	movs	r4, #0
 8028a54:	4632      	mov	r2, r6
 8028a56:	ecf7 6a01 	vldmia	r7!, {s13}
 8028a5a:	ed92 7a00 	vldr	s14, [r2]
 8028a5e:	3401      	adds	r4, #1
 8028a60:	2c04      	cmp	r4, #4
 8028a62:	f106 0610 	add.w	r6, r6, #16
 8028a66:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028a6a:	d1f3      	bne.n	8028a54 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8028a6c:	18c2      	adds	r2, r0, r3
 8028a6e:	3304      	adds	r3, #4
 8028a70:	2b10      	cmp	r3, #16
 8028a72:	edc2 7a00 	vstr	s15, [r2]
 8028a76:	d1e7      	bne.n	8028a48 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8028a78:	3110      	adds	r1, #16
 8028a7a:	4561      	cmp	r1, ip
 8028a7c:	f100 0010 	add.w	r0, r0, #16
 8028a80:	d1e1      	bne.n	8028a46 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8028a82:	4628      	mov	r0, r5
 8028a84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028a88:	00000000 	.word	0x00000000

08028a8c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8028a8c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028a90:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8028a94:	f100 0320 	add.w	r3, r0, #32
 8028a98:	3030      	adds	r0, #48	; 0x30
 8028a9a:	ecf3 7a01 	vldmia	r3!, {s15}
 8028a9e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028aa2:	4283      	cmp	r3, r0
 8028aa4:	edc3 7a03 	vstr	s15, [r3, #12]
 8028aa8:	d1f7      	bne.n	8028a9a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8028aaa:	4770      	bx	lr

08028aac <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028aac:	b510      	push	{r4, lr}
 8028aae:	ed2d 8b02 	vpush	{d8}
 8028ab2:	4604      	mov	r4, r0
 8028ab4:	eef0 8a40 	vmov.f32	s17, s0
 8028ab8:	f001 fa7a 	bl	8029fb0 <sinf>
 8028abc:	eeb0 8a40 	vmov.f32	s16, s0
 8028ac0:	eeb0 0a68 	vmov.f32	s0, s17
 8028ac4:	f001 fa30 	bl	8029f28 <cosf>
 8028ac8:	f104 0310 	add.w	r3, r4, #16
 8028acc:	f104 0220 	add.w	r2, r4, #32
 8028ad0:	eeb1 6a48 	vneg.f32	s12, s16
 8028ad4:	edd3 7a04 	vldr	s15, [r3, #16]
 8028ad8:	edd3 6a00 	vldr	s13, [r3]
 8028adc:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028ae0:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028ae4:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028ae8:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028aec:	eca3 7a01 	vstmia	r3!, {s14}
 8028af0:	429a      	cmp	r2, r3
 8028af2:	edc3 7a03 	vstr	s15, [r3, #12]
 8028af6:	d1ed      	bne.n	8028ad4 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8028af8:	ecbd 8b02 	vpop	{d8}
 8028afc:	4620      	mov	r0, r4
 8028afe:	bd10      	pop	{r4, pc}

08028b00 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8028b00:	b510      	push	{r4, lr}
 8028b02:	ed2d 8b02 	vpush	{d8}
 8028b06:	4604      	mov	r4, r0
 8028b08:	eef0 8a40 	vmov.f32	s17, s0
 8028b0c:	f001 fa50 	bl	8029fb0 <sinf>
 8028b10:	eeb0 8a40 	vmov.f32	s16, s0
 8028b14:	eeb0 0a68 	vmov.f32	s0, s17
 8028b18:	f001 fa06 	bl	8029f28 <cosf>
 8028b1c:	4623      	mov	r3, r4
 8028b1e:	f104 0210 	add.w	r2, r4, #16
 8028b22:	eeb1 6a48 	vneg.f32	s12, s16
 8028b26:	edd3 7a08 	vldr	s15, [r3, #32]
 8028b2a:	edd3 6a00 	vldr	s13, [r3]
 8028b2e:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028b32:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028b36:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028b3a:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028b3e:	eca3 7a01 	vstmia	r3!, {s14}
 8028b42:	429a      	cmp	r2, r3
 8028b44:	edc3 7a07 	vstr	s15, [r3, #28]
 8028b48:	d1ed      	bne.n	8028b26 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8028b4a:	ecbd 8b02 	vpop	{d8}
 8028b4e:	4620      	mov	r0, r4
 8028b50:	bd10      	pop	{r4, pc}

08028b52 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028b52:	b510      	push	{r4, lr}
 8028b54:	ed2d 8b02 	vpush	{d8}
 8028b58:	4604      	mov	r4, r0
 8028b5a:	eef0 8a40 	vmov.f32	s17, s0
 8028b5e:	f001 fa27 	bl	8029fb0 <sinf>
 8028b62:	eeb0 8a40 	vmov.f32	s16, s0
 8028b66:	eeb0 0a68 	vmov.f32	s0, s17
 8028b6a:	f001 f9dd 	bl	8029f28 <cosf>
 8028b6e:	4623      	mov	r3, r4
 8028b70:	f104 0210 	add.w	r2, r4, #16
 8028b74:	eeb1 6a48 	vneg.f32	s12, s16
 8028b78:	edd3 7a04 	vldr	s15, [r3, #16]
 8028b7c:	edd3 6a00 	vldr	s13, [r3]
 8028b80:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028b84:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028b88:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028b8c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028b90:	eca3 7a01 	vstmia	r3!, {s14}
 8028b94:	429a      	cmp	r2, r3
 8028b96:	edc3 7a03 	vstr	s15, [r3, #12]
 8028b9a:	d1ed      	bne.n	8028b78 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028b9c:	ecbd 8b02 	vpop	{d8}
 8028ba0:	4620      	mov	r0, r4
 8028ba2:	bd10      	pop	{r4, pc}

08028ba4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028ba4:	4603      	mov	r3, r0
 8028ba6:	f100 0210 	add.w	r2, r0, #16
 8028baa:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028bae:	edd3 7a00 	vldr	s15, [r3]
 8028bb2:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028bb6:	ece3 7a01 	vstmia	r3!, {s15}
 8028bba:	4293      	cmp	r3, r2
 8028bbc:	d1f5      	bne.n	8028baa <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028bbe:	4770      	bx	lr

08028bc0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028bc0:	f100 0310 	add.w	r3, r0, #16
 8028bc4:	f100 0220 	add.w	r2, r0, #32
 8028bc8:	ed93 7a08 	vldr	s14, [r3, #32]
 8028bcc:	edd3 7a00 	vldr	s15, [r3]
 8028bd0:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028bd4:	ece3 7a01 	vstmia	r3!, {s15}
 8028bd8:	4293      	cmp	r3, r2
 8028bda:	d1f5      	bne.n	8028bc8 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8028bdc:	4770      	bx	lr

08028bde <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8028bde:	f100 0320 	add.w	r3, r0, #32
 8028be2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028be6:	ed93 7a04 	vldr	s14, [r3, #16]
 8028bea:	edd3 7a00 	vldr	s15, [r3]
 8028bee:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028bf2:	ece3 7a01 	vstmia	r3!, {s15}
 8028bf6:	4293      	cmp	r3, r2
 8028bf8:	d1f5      	bne.n	8028be6 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8028bfa:	4770      	bx	lr

08028bfc <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028bfc:	4603      	mov	r3, r0
 8028bfe:	f100 0210 	add.w	r2, r0, #16
 8028c02:	edd3 7a00 	vldr	s15, [r3]
 8028c06:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028c0a:	ece3 7a01 	vstmia	r3!, {s15}
 8028c0e:	4293      	cmp	r3, r2
 8028c10:	d1f7      	bne.n	8028c02 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028c12:	4770      	bx	lr

08028c14 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028c14:	f100 0310 	add.w	r3, r0, #16
 8028c18:	f100 0220 	add.w	r2, r0, #32
 8028c1c:	edd3 7a00 	vldr	s15, [r3]
 8028c20:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028c24:	ece3 7a01 	vstmia	r3!, {s15}
 8028c28:	4293      	cmp	r3, r2
 8028c2a:	d1f7      	bne.n	8028c1c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028c2c:	4770      	bx	lr

08028c2e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028c2e:	f100 0320 	add.w	r3, r0, #32
 8028c32:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028c36:	edd3 7a00 	vldr	s15, [r3]
 8028c3a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028c3e:	ece3 7a01 	vstmia	r3!, {s15}
 8028c42:	4293      	cmp	r3, r2
 8028c44:	d1f7      	bne.n	8028c36 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8028c46:	4770      	bx	lr

08028c48 <arm_max_f32>:
 8028c48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028c4c:	1e4f      	subs	r7, r1, #1
 8028c4e:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028c52:	f100 0e04 	add.w	lr, r0, #4
 8028c56:	edd0 7a00 	vldr	s15, [r0]
 8028c5a:	d058      	beq.n	8028d0e <arm_max_f32+0xc6>
 8028c5c:	3014      	adds	r0, #20
 8028c5e:	46c4      	mov	ip, r8
 8028c60:	2604      	movs	r6, #4
 8028c62:	2400      	movs	r4, #0
 8028c64:	ed10 6a04 	vldr	s12, [r0, #-16]
 8028c68:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028c6c:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028c70:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028c74:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8028c78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c7c:	bfc8      	it	gt
 8028c7e:	eef0 7a46 	vmovgt.f32	s15, s12
 8028c82:	f1a6 0503 	sub.w	r5, r6, #3
 8028c86:	eef4 7ae6 	vcmpe.f32	s15, s13
 8028c8a:	bfc8      	it	gt
 8028c8c:	462c      	movgt	r4, r5
 8028c8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c92:	bf48      	it	mi
 8028c94:	eef0 7a66 	vmovmi.f32	s15, s13
 8028c98:	f1a6 0502 	sub.w	r5, r6, #2
 8028c9c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028ca0:	bf48      	it	mi
 8028ca2:	462c      	movmi	r4, r5
 8028ca4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ca8:	bf48      	it	mi
 8028caa:	eef0 7a47 	vmovmi.f32	s15, s14
 8028cae:	f106 35ff 	add.w	r5, r6, #4294967295
 8028cb2:	eef4 7ae5 	vcmpe.f32	s15, s11
 8028cb6:	bf48      	it	mi
 8028cb8:	462c      	movmi	r4, r5
 8028cba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cbe:	bf48      	it	mi
 8028cc0:	4634      	movmi	r4, r6
 8028cc2:	bf48      	it	mi
 8028cc4:	eef0 7a65 	vmovmi.f32	s15, s11
 8028cc8:	f1bc 0c01 	subs.w	ip, ip, #1
 8028ccc:	f106 0604 	add.w	r6, r6, #4
 8028cd0:	f100 0010 	add.w	r0, r0, #16
 8028cd4:	d1c6      	bne.n	8028c64 <arm_max_f32+0x1c>
 8028cd6:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8028cda:	f017 0003 	ands.w	r0, r7, #3
 8028cde:	d018      	beq.n	8028d12 <arm_max_f32+0xca>
 8028ce0:	1a08      	subs	r0, r1, r0
 8028ce2:	ecbe 7a01 	vldmia	lr!, {s14}
 8028ce6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028cea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cee:	bfc8      	it	gt
 8028cf0:	4604      	movgt	r4, r0
 8028cf2:	f100 0001 	add.w	r0, r0, #1
 8028cf6:	bfd8      	it	le
 8028cf8:	eeb0 7a67 	vmovle.f32	s14, s15
 8028cfc:	4288      	cmp	r0, r1
 8028cfe:	eef0 7a47 	vmov.f32	s15, s14
 8028d02:	d1ee      	bne.n	8028ce2 <arm_max_f32+0x9a>
 8028d04:	ed82 7a00 	vstr	s14, [r2]
 8028d08:	601c      	str	r4, [r3, #0]
 8028d0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028d0e:	4644      	mov	r4, r8
 8028d10:	e7e3      	b.n	8028cda <arm_max_f32+0x92>
 8028d12:	eeb0 7a67 	vmov.f32	s14, s15
 8028d16:	e7f5      	b.n	8028d04 <arm_max_f32+0xbc>

08028d18 <arm_rfft_fast_init_f32>:
 8028d18:	084b      	lsrs	r3, r1, #1
 8028d1a:	2b80      	cmp	r3, #128	; 0x80
 8028d1c:	b410      	push	{r4}
 8028d1e:	8201      	strh	r1, [r0, #16]
 8028d20:	8003      	strh	r3, [r0, #0]
 8028d22:	d047      	beq.n	8028db4 <arm_rfft_fast_init_f32+0x9c>
 8028d24:	d917      	bls.n	8028d56 <arm_rfft_fast_init_f32+0x3e>
 8028d26:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028d2a:	d03d      	beq.n	8028da8 <arm_rfft_fast_init_f32+0x90>
 8028d2c:	d929      	bls.n	8028d82 <arm_rfft_fast_init_f32+0x6a>
 8028d2e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028d32:	d020      	beq.n	8028d76 <arm_rfft_fast_init_f32+0x5e>
 8028d34:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8028d38:	d113      	bne.n	8028d62 <arm_rfft_fast_init_f32+0x4a>
 8028d3a:	4921      	ldr	r1, [pc, #132]	; (8028dc0 <arm_rfft_fast_init_f32+0xa8>)
 8028d3c:	4a21      	ldr	r2, [pc, #132]	; (8028dc4 <arm_rfft_fast_init_f32+0xac>)
 8028d3e:	4b22      	ldr	r3, [pc, #136]	; (8028dc8 <arm_rfft_fast_init_f32+0xb0>)
 8028d40:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028d44:	8184      	strh	r4, [r0, #12]
 8028d46:	6081      	str	r1, [r0, #8]
 8028d48:	6042      	str	r2, [r0, #4]
 8028d4a:	6143      	str	r3, [r0, #20]
 8028d4c:	2000      	movs	r0, #0
 8028d4e:	b240      	sxtb	r0, r0
 8028d50:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028d54:	4770      	bx	lr
 8028d56:	2b20      	cmp	r3, #32
 8028d58:	d01c      	beq.n	8028d94 <arm_rfft_fast_init_f32+0x7c>
 8028d5a:	2b40      	cmp	r3, #64	; 0x40
 8028d5c:	d006      	beq.n	8028d6c <arm_rfft_fast_init_f32+0x54>
 8028d5e:	2b10      	cmp	r3, #16
 8028d60:	d01d      	beq.n	8028d9e <arm_rfft_fast_init_f32+0x86>
 8028d62:	20ff      	movs	r0, #255	; 0xff
 8028d64:	b240      	sxtb	r0, r0
 8028d66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028d6a:	4770      	bx	lr
 8028d6c:	2438      	movs	r4, #56	; 0x38
 8028d6e:	4917      	ldr	r1, [pc, #92]	; (8028dcc <arm_rfft_fast_init_f32+0xb4>)
 8028d70:	4a17      	ldr	r2, [pc, #92]	; (8028dd0 <arm_rfft_fast_init_f32+0xb8>)
 8028d72:	4b18      	ldr	r3, [pc, #96]	; (8028dd4 <arm_rfft_fast_init_f32+0xbc>)
 8028d74:	e7e6      	b.n	8028d44 <arm_rfft_fast_init_f32+0x2c>
 8028d76:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8028d7a:	4917      	ldr	r1, [pc, #92]	; (8028dd8 <arm_rfft_fast_init_f32+0xc0>)
 8028d7c:	4a17      	ldr	r2, [pc, #92]	; (8028ddc <arm_rfft_fast_init_f32+0xc4>)
 8028d7e:	4b18      	ldr	r3, [pc, #96]	; (8028de0 <arm_rfft_fast_init_f32+0xc8>)
 8028d80:	e7e0      	b.n	8028d44 <arm_rfft_fast_init_f32+0x2c>
 8028d82:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8028d86:	d1ec      	bne.n	8028d62 <arm_rfft_fast_init_f32+0x4a>
 8028d88:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028d8c:	4915      	ldr	r1, [pc, #84]	; (8028de4 <arm_rfft_fast_init_f32+0xcc>)
 8028d8e:	4a16      	ldr	r2, [pc, #88]	; (8028de8 <arm_rfft_fast_init_f32+0xd0>)
 8028d90:	4b16      	ldr	r3, [pc, #88]	; (8028dec <arm_rfft_fast_init_f32+0xd4>)
 8028d92:	e7d7      	b.n	8028d44 <arm_rfft_fast_init_f32+0x2c>
 8028d94:	2430      	movs	r4, #48	; 0x30
 8028d96:	4916      	ldr	r1, [pc, #88]	; (8028df0 <arm_rfft_fast_init_f32+0xd8>)
 8028d98:	4a16      	ldr	r2, [pc, #88]	; (8028df4 <arm_rfft_fast_init_f32+0xdc>)
 8028d9a:	4b17      	ldr	r3, [pc, #92]	; (8028df8 <arm_rfft_fast_init_f32+0xe0>)
 8028d9c:	e7d2      	b.n	8028d44 <arm_rfft_fast_init_f32+0x2c>
 8028d9e:	2414      	movs	r4, #20
 8028da0:	4916      	ldr	r1, [pc, #88]	; (8028dfc <arm_rfft_fast_init_f32+0xe4>)
 8028da2:	4a17      	ldr	r2, [pc, #92]	; (8028e00 <arm_rfft_fast_init_f32+0xe8>)
 8028da4:	4b17      	ldr	r3, [pc, #92]	; (8028e04 <arm_rfft_fast_init_f32+0xec>)
 8028da6:	e7cd      	b.n	8028d44 <arm_rfft_fast_init_f32+0x2c>
 8028da8:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028dac:	4916      	ldr	r1, [pc, #88]	; (8028e08 <arm_rfft_fast_init_f32+0xf0>)
 8028dae:	4a17      	ldr	r2, [pc, #92]	; (8028e0c <arm_rfft_fast_init_f32+0xf4>)
 8028db0:	4b17      	ldr	r3, [pc, #92]	; (8028e10 <arm_rfft_fast_init_f32+0xf8>)
 8028db2:	e7c7      	b.n	8028d44 <arm_rfft_fast_init_f32+0x2c>
 8028db4:	24d0      	movs	r4, #208	; 0xd0
 8028db6:	4917      	ldr	r1, [pc, #92]	; (8028e14 <arm_rfft_fast_init_f32+0xfc>)
 8028db8:	4a17      	ldr	r2, [pc, #92]	; (8028e18 <arm_rfft_fast_init_f32+0x100>)
 8028dba:	4b18      	ldr	r3, [pc, #96]	; (8028e1c <arm_rfft_fast_init_f32+0x104>)
 8028dbc:	e7c2      	b.n	8028d44 <arm_rfft_fast_init_f32+0x2c>
 8028dbe:	bf00      	nop
 8028dc0:	0803e2e8 	.word	0x0803e2e8
 8028dc4:	0802f4e0 	.word	0x0802f4e0
 8028dc8:	08035650 	.word	0x08035650
 8028dcc:	080335e0 	.word	0x080335e0
 8028dd0:	080400a8 	.word	0x080400a8
 8028dd4:	08042598 	.word	0x08042598
 8028dd8:	0803bfd0 	.word	0x0803bfd0
 8028ddc:	08039ed0 	.word	0x08039ed0
 8028de0:	08033650 	.word	0x08033650
 8028de4:	08042228 	.word	0x08042228
 8028de8:	08039650 	.word	0x08039650
 8028dec:	080402a8 	.word	0x080402a8
 8028df0:	0803ce88 	.word	0x0803ce88
 8028df4:	0803bed0 	.word	0x0803bed0
 8028df8:	080334e0 	.word	0x080334e0
 8028dfc:	0803cde0 	.word	0x0803cde0
 8028e00:	08039e50 	.word	0x08039e50
 8028e04:	0803ce08 	.word	0x0803ce08
 8028e08:	08040aa8 	.word	0x08040aa8
 8028e0c:	0803d2e8 	.word	0x0803d2e8
 8028e10:	08040e28 	.word	0x08040e28
 8028e14:	08042798 	.word	0x08042798
 8028e18:	0803cee8 	.word	0x0803cee8
 8028e1c:	08041e28 	.word	0x08041e28

08028e20 <arm_rfft_fast_f32>:
 8028e20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028e24:	8a06      	ldrh	r6, [r0, #16]
 8028e26:	0876      	lsrs	r6, r6, #1
 8028e28:	4607      	mov	r7, r0
 8028e2a:	4615      	mov	r5, r2
 8028e2c:	8006      	strh	r6, [r0, #0]
 8028e2e:	460c      	mov	r4, r1
 8028e30:	2b00      	cmp	r3, #0
 8028e32:	d15c      	bne.n	8028eee <arm_rfft_fast_f32+0xce>
 8028e34:	461a      	mov	r2, r3
 8028e36:	2301      	movs	r3, #1
 8028e38:	f000 fbe6 	bl	8029608 <arm_cfft_f32>
 8028e3c:	edd4 7a00 	vldr	s15, [r4]
 8028e40:	ed94 7a01 	vldr	s14, [r4, #4]
 8028e44:	883e      	ldrh	r6, [r7, #0]
 8028e46:	6978      	ldr	r0, [r7, #20]
 8028e48:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028e4c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028e50:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028e54:	ee77 6a87 	vadd.f32	s13, s15, s14
 8028e58:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028e5c:	3e01      	subs	r6, #1
 8028e5e:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028e62:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028e66:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8028e6a:	ed85 7a00 	vstr	s14, [r5]
 8028e6e:	edc5 7a01 	vstr	s15, [r5, #4]
 8028e72:	3010      	adds	r0, #16
 8028e74:	f105 0210 	add.w	r2, r5, #16
 8028e78:	3b08      	subs	r3, #8
 8028e7a:	f104 0110 	add.w	r1, r4, #16
 8028e7e:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028e82:	ed93 5a02 	vldr	s10, [r3, #8]
 8028e86:	ed11 7a01 	vldr	s14, [r1, #-4]
 8028e8a:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028e8e:	edd3 5a03 	vldr	s11, [r3, #12]
 8028e92:	ed50 6a01 	vldr	s13, [r0, #-4]
 8028e96:	ee75 7a64 	vsub.f32	s15, s10, s9
 8028e9a:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028e9e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028ea2:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028ea6:	ee66 4a27 	vmul.f32	s9, s12, s15
 8028eaa:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028eae:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028eb2:	ee26 6a04 	vmul.f32	s12, s12, s8
 8028eb6:	ee66 6a84 	vmul.f32	s13, s13, s8
 8028eba:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028ebe:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028ec2:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028ec6:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028eca:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028ece:	3e01      	subs	r6, #1
 8028ed0:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028ed4:	ed42 7a01 	vstr	s15, [r2, #-4]
 8028ed8:	f1a3 0308 	sub.w	r3, r3, #8
 8028edc:	f101 0108 	add.w	r1, r1, #8
 8028ee0:	f100 0008 	add.w	r0, r0, #8
 8028ee4:	f102 0208 	add.w	r2, r2, #8
 8028ee8:	d1c9      	bne.n	8028e7e <arm_rfft_fast_f32+0x5e>
 8028eea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028eee:	edd1 7a00 	vldr	s15, [r1]
 8028ef2:	edd1 6a01 	vldr	s13, [r1, #4]
 8028ef6:	6941      	ldr	r1, [r0, #20]
 8028ef8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028efc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028f00:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028f04:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028f08:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028f0c:	3e01      	subs	r6, #1
 8028f0e:	ed82 7a00 	vstr	s14, [r2]
 8028f12:	edc2 7a01 	vstr	s15, [r2, #4]
 8028f16:	00f0      	lsls	r0, r6, #3
 8028f18:	b3ee      	cbz	r6, 8028f96 <arm_rfft_fast_f32+0x176>
 8028f1a:	3808      	subs	r0, #8
 8028f1c:	f101 0e10 	add.w	lr, r1, #16
 8028f20:	4420      	add	r0, r4
 8028f22:	f104 0110 	add.w	r1, r4, #16
 8028f26:	f102 0c10 	add.w	ip, r2, #16
 8028f2a:	ed90 7a02 	vldr	s14, [r0, #8]
 8028f2e:	ed51 6a02 	vldr	s13, [r1, #-8]
 8028f32:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8028f36:	ed90 4a03 	vldr	s8, [r0, #12]
 8028f3a:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028f3e:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028f42:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8028f46:	ee74 4a05 	vadd.f32	s9, s8, s10
 8028f4a:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028f4e:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028f52:	ee35 5a44 	vsub.f32	s10, s10, s8
 8028f56:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8028f5a:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028f5e:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028f62:	ee26 6a24 	vmul.f32	s12, s12, s9
 8028f66:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8028f6a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028f6e:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028f72:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028f76:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028f7a:	3e01      	subs	r6, #1
 8028f7c:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028f80:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028f84:	f1a0 0008 	sub.w	r0, r0, #8
 8028f88:	f101 0108 	add.w	r1, r1, #8
 8028f8c:	f10e 0e08 	add.w	lr, lr, #8
 8028f90:	f10c 0c08 	add.w	ip, ip, #8
 8028f94:	d1c9      	bne.n	8028f2a <arm_rfft_fast_f32+0x10a>
 8028f96:	4638      	mov	r0, r7
 8028f98:	4629      	mov	r1, r5
 8028f9a:	461a      	mov	r2, r3
 8028f9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028fa0:	2301      	movs	r3, #1
 8028fa2:	f000 bb31 	b.w	8029608 <arm_cfft_f32>
 8028fa6:	bf00      	nop

08028fa8 <arm_cfft_radix8by2_f32>:
 8028fa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028fac:	ed2d 8b08 	vpush	{d8-d11}
 8028fb0:	f8b0 e000 	ldrh.w	lr, [r0]
 8028fb4:	6842      	ldr	r2, [r0, #4]
 8028fb6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028fba:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028fbe:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028fc2:	4607      	mov	r7, r0
 8028fc4:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8028fc8:	f000 80af 	beq.w	802912a <arm_cfft_radix8by2_f32+0x182>
 8028fcc:	3310      	adds	r3, #16
 8028fce:	18ce      	adds	r6, r1, r3
 8028fd0:	3210      	adds	r2, #16
 8028fd2:	4443      	add	r3, r8
 8028fd4:	f101 0510 	add.w	r5, r1, #16
 8028fd8:	f108 0410 	add.w	r4, r8, #16
 8028fdc:	ed54 1a04 	vldr	s3, [r4, #-16]
 8028fe0:	ed13 4a04 	vldr	s8, [r3, #-16]
 8028fe4:	ed53 3a03 	vldr	s7, [r3, #-12]
 8028fe8:	ed53 5a02 	vldr	s11, [r3, #-8]
 8028fec:	ed13 5a01 	vldr	s10, [r3, #-4]
 8028ff0:	ed54 6a03 	vldr	s13, [r4, #-12]
 8028ff4:	ed14 0a02 	vldr	s0, [r4, #-8]
 8028ff8:	ed16 2a04 	vldr	s4, [r6, #-16]
 8028ffc:	ed56 2a03 	vldr	s5, [r6, #-12]
 8029000:	ed15 6a03 	vldr	s12, [r5, #-12]
 8029004:	ed15 7a01 	vldr	s14, [r5, #-4]
 8029008:	ed15 3a04 	vldr	s6, [r5, #-16]
 802900c:	ed54 7a01 	vldr	s15, [r4, #-4]
 8029010:	ed56 0a02 	vldr	s1, [r6, #-8]
 8029014:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029018:	ed55 4a02 	vldr	s9, [r5, #-8]
 802901c:	ee73 ba21 	vadd.f32	s23, s6, s3
 8029020:	ee36 ba26 	vadd.f32	s22, s12, s13
 8029024:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029028:	ee72 9a04 	vadd.f32	s19, s4, s8
 802902c:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029030:	ee31 8a05 	vadd.f32	s16, s2, s10
 8029034:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029038:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802903c:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029040:	ed05 ba03 	vstr	s22, [r5, #-12]
 8029044:	ed45 aa02 	vstr	s21, [r5, #-8]
 8029048:	ed05 aa01 	vstr	s20, [r5, #-4]
 802904c:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029050:	ed46 9a04 	vstr	s19, [r6, #-16]
 8029054:	ed06 9a03 	vstr	s18, [r6, #-12]
 8029058:	ed46 8a02 	vstr	s17, [r6, #-8]
 802905c:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029060:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8029064:	ed12 6a03 	vldr	s12, [r2, #-12]
 8029068:	ed52 2a04 	vldr	s5, [r2, #-16]
 802906c:	ee33 3a61 	vsub.f32	s6, s6, s3
 8029070:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029074:	ee26 8a86 	vmul.f32	s16, s13, s12
 8029078:	ee24 2a06 	vmul.f32	s4, s8, s12
 802907c:	ee63 1a22 	vmul.f32	s3, s6, s5
 8029080:	ee24 4a22 	vmul.f32	s8, s8, s5
 8029084:	ee23 3a06 	vmul.f32	s6, s6, s12
 8029088:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802908c:	ee23 6a86 	vmul.f32	s12, s7, s12
 8029090:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8029094:	ee36 6a04 	vadd.f32	s12, s12, s8
 8029098:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802909c:	ee72 3a63 	vsub.f32	s7, s4, s7
 80290a0:	ee71 2a88 	vadd.f32	s5, s3, s16
 80290a4:	ed44 6a03 	vstr	s13, [r4, #-12]
 80290a8:	ed44 2a04 	vstr	s5, [r4, #-16]
 80290ac:	ed43 3a04 	vstr	s7, [r3, #-16]
 80290b0:	ed03 6a03 	vstr	s12, [r3, #-12]
 80290b4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80290b8:	ee75 6ae0 	vsub.f32	s13, s11, s1
 80290bc:	ed12 7a01 	vldr	s14, [r2, #-4]
 80290c0:	ed52 5a02 	vldr	s11, [r2, #-8]
 80290c4:	ee35 6a41 	vsub.f32	s12, s10, s2
 80290c8:	ee74 4ac0 	vsub.f32	s9, s9, s0
 80290cc:	ee67 3a87 	vmul.f32	s7, s15, s14
 80290d0:	ee26 5a87 	vmul.f32	s10, s13, s14
 80290d4:	ee24 4aa5 	vmul.f32	s8, s9, s11
 80290d8:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80290dc:	ee64 4a87 	vmul.f32	s9, s9, s14
 80290e0:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80290e4:	ee26 7a07 	vmul.f32	s14, s12, s14
 80290e8:	ee26 6a25 	vmul.f32	s12, s12, s11
 80290ec:	ee77 7ae4 	vsub.f32	s15, s15, s9
 80290f0:	ee74 5a23 	vadd.f32	s11, s8, s7
 80290f4:	ee35 6a46 	vsub.f32	s12, s10, s12
 80290f8:	ee37 7a26 	vadd.f32	s14, s14, s13
 80290fc:	f1be 0e01 	subs.w	lr, lr, #1
 8029100:	ed44 5a02 	vstr	s11, [r4, #-8]
 8029104:	f105 0510 	add.w	r5, r5, #16
 8029108:	ed44 7a01 	vstr	s15, [r4, #-4]
 802910c:	f106 0610 	add.w	r6, r6, #16
 8029110:	ed03 6a02 	vstr	s12, [r3, #-8]
 8029114:	ed03 7a01 	vstr	s14, [r3, #-4]
 8029118:	f102 0210 	add.w	r2, r2, #16
 802911c:	f104 0410 	add.w	r4, r4, #16
 8029120:	f103 0310 	add.w	r3, r3, #16
 8029124:	f47f af5a 	bne.w	8028fdc <arm_cfft_radix8by2_f32+0x34>
 8029128:	687a      	ldr	r2, [r7, #4]
 802912a:	fa1f f48c 	uxth.w	r4, ip
 802912e:	4608      	mov	r0, r1
 8029130:	2302      	movs	r3, #2
 8029132:	4621      	mov	r1, r4
 8029134:	f000 fbca 	bl	80298cc <arm_radix8_butterfly_f32>
 8029138:	ecbd 8b08 	vpop	{d8-d11}
 802913c:	4640      	mov	r0, r8
 802913e:	4621      	mov	r1, r4
 8029140:	687a      	ldr	r2, [r7, #4]
 8029142:	2302      	movs	r3, #2
 8029144:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029148:	f000 bbc0 	b.w	80298cc <arm_radix8_butterfly_f32>

0802914c <arm_cfft_radix8by4_f32>:
 802914c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029150:	ed2d 8b0a 	vpush	{d8-d12}
 8029154:	8802      	ldrh	r2, [r0, #0]
 8029156:	ed91 6a00 	vldr	s12, [r1]
 802915a:	b08f      	sub	sp, #60	; 0x3c
 802915c:	460f      	mov	r7, r1
 802915e:	0852      	lsrs	r2, r2, #1
 8029160:	0093      	lsls	r3, r2, #2
 8029162:	900c      	str	r0, [sp, #48]	; 0x30
 8029164:	9103      	str	r1, [sp, #12]
 8029166:	6841      	ldr	r1, [r0, #4]
 8029168:	ed97 7a01 	vldr	s14, [r7, #4]
 802916c:	4638      	mov	r0, r7
 802916e:	4418      	add	r0, r3
 8029170:	4606      	mov	r6, r0
 8029172:	9009      	str	r0, [sp, #36]	; 0x24
 8029174:	4418      	add	r0, r3
 8029176:	edd0 6a00 	vldr	s13, [r0]
 802917a:	edd6 3a00 	vldr	s7, [r6]
 802917e:	edd6 2a01 	vldr	s5, [r6, #4]
 8029182:	edd0 7a01 	vldr	s15, [r0, #4]
 8029186:	900a      	str	r0, [sp, #40]	; 0x28
 8029188:	ee76 5a26 	vadd.f32	s11, s12, s13
 802918c:	4604      	mov	r4, r0
 802918e:	4625      	mov	r5, r4
 8029190:	441c      	add	r4, r3
 8029192:	ed94 4a00 	vldr	s8, [r4]
 8029196:	ed94 5a01 	vldr	s10, [r4, #4]
 802919a:	9401      	str	r4, [sp, #4]
 802919c:	ee75 4aa3 	vadd.f32	s9, s11, s7
 80291a0:	4630      	mov	r0, r6
 80291a2:	ee74 4a24 	vadd.f32	s9, s8, s9
 80291a6:	463e      	mov	r6, r7
 80291a8:	ee14 ea90 	vmov	lr, s9
 80291ac:	ee76 6a66 	vsub.f32	s13, s12, s13
 80291b0:	f846 eb08 	str.w	lr, [r6], #8
 80291b4:	ee37 6a27 	vadd.f32	s12, s14, s15
 80291b8:	edd0 4a01 	vldr	s9, [r0, #4]
 80291bc:	9604      	str	r6, [sp, #16]
 80291be:	ee77 7a67 	vsub.f32	s15, s14, s15
 80291c2:	9e01      	ldr	r6, [sp, #4]
 80291c4:	ee32 3aa6 	vadd.f32	s6, s5, s13
 80291c8:	ed96 2a01 	vldr	s4, [r6, #4]
 80291cc:	ee36 7a24 	vadd.f32	s14, s12, s9
 80291d0:	ee75 5ae3 	vsub.f32	s11, s11, s7
 80291d4:	ee77 4ae3 	vsub.f32	s9, s15, s7
 80291d8:	ee36 6a62 	vsub.f32	s12, s12, s5
 80291dc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80291e0:	ee76 6ae2 	vsub.f32	s13, s13, s5
 80291e4:	ee73 3a45 	vsub.f32	s7, s6, s10
 80291e8:	4604      	mov	r4, r0
 80291ea:	ee36 6a45 	vsub.f32	s12, s12, s10
 80291ee:	ee75 6a26 	vadd.f32	s13, s10, s13
 80291f2:	46a3      	mov	fp, r4
 80291f4:	ee37 7a02 	vadd.f32	s14, s14, s4
 80291f8:	ee34 5a84 	vadd.f32	s10, s9, s8
 80291fc:	ee13 8a90 	vmov	r8, s7
 8029200:	46a4      	mov	ip, r4
 8029202:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8029206:	ed87 7a01 	vstr	s14, [r7, #4]
 802920a:	f84b 8b08 	str.w	r8, [fp], #8
 802920e:	f1ac 0704 	sub.w	r7, ip, #4
 8029212:	ed8c 5a01 	vstr	s10, [ip, #4]
 8029216:	f101 0c08 	add.w	ip, r1, #8
 802921a:	462c      	mov	r4, r5
 802921c:	f8cd c014 	str.w	ip, [sp, #20]
 8029220:	ee15 ca90 	vmov	ip, s11
 8029224:	f844 cb08 	str.w	ip, [r4], #8
 8029228:	9407      	str	r4, [sp, #28]
 802922a:	f101 0410 	add.w	r4, r1, #16
 802922e:	ed85 6a01 	vstr	s12, [r5, #4]
 8029232:	0852      	lsrs	r2, r2, #1
 8029234:	9402      	str	r4, [sp, #8]
 8029236:	462c      	mov	r4, r5
 8029238:	f101 0518 	add.w	r5, r1, #24
 802923c:	920b      	str	r2, [sp, #44]	; 0x2c
 802923e:	46b2      	mov	sl, r6
 8029240:	9506      	str	r5, [sp, #24]
 8029242:	ee77 7ac4 	vsub.f32	s15, s15, s8
 8029246:	3a02      	subs	r2, #2
 8029248:	ee16 5a90 	vmov	r5, s13
 802924c:	46b6      	mov	lr, r6
 802924e:	4630      	mov	r0, r6
 8029250:	0852      	lsrs	r2, r2, #1
 8029252:	f84a 5b08 	str.w	r5, [sl], #8
 8029256:	f1a0 0604 	sub.w	r6, r0, #4
 802925a:	edce 7a01 	vstr	s15, [lr, #4]
 802925e:	9208      	str	r2, [sp, #32]
 8029260:	f000 8130 	beq.w	80294c4 <arm_cfft_radix8by4_f32+0x378>
 8029264:	4691      	mov	r9, r2
 8029266:	9a03      	ldr	r2, [sp, #12]
 8029268:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802926c:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8029270:	3b08      	subs	r3, #8
 8029272:	f102 0510 	add.w	r5, r2, #16
 8029276:	f101 0c20 	add.w	ip, r1, #32
 802927a:	f1a4 020c 	sub.w	r2, r4, #12
 802927e:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8029282:	4433      	add	r3, r6
 8029284:	3410      	adds	r4, #16
 8029286:	4650      	mov	r0, sl
 8029288:	4659      	mov	r1, fp
 802928a:	ed55 3a02 	vldr	s7, [r5, #-8]
 802928e:	ed14 5a02 	vldr	s10, [r4, #-8]
 8029292:	ed91 7a00 	vldr	s14, [r1]
 8029296:	edd0 7a00 	vldr	s15, [r0]
 802929a:	ed15 4a01 	vldr	s8, [r5, #-4]
 802929e:	ed54 5a01 	vldr	s11, [r4, #-4]
 80292a2:	edd0 6a01 	vldr	s13, [r0, #4]
 80292a6:	ed91 6a01 	vldr	s12, [r1, #4]
 80292aa:	ee33 8a85 	vadd.f32	s16, s7, s10
 80292ae:	ee34 0a25 	vadd.f32	s0, s8, s11
 80292b2:	ee78 4a07 	vadd.f32	s9, s16, s14
 80292b6:	ee74 5a65 	vsub.f32	s11, s8, s11
 80292ba:	ee77 4aa4 	vadd.f32	s9, s15, s9
 80292be:	ee33 5ac5 	vsub.f32	s10, s7, s10
 80292c2:	ed45 4a02 	vstr	s9, [r5, #-8]
 80292c6:	edd1 4a01 	vldr	s9, [r1, #4]
 80292ca:	ed90 4a01 	vldr	s8, [r0, #4]
 80292ce:	ee70 4a24 	vadd.f32	s9, s0, s9
 80292d2:	ee76 aa05 	vadd.f32	s21, s12, s10
 80292d6:	ee74 4a84 	vadd.f32	s9, s9, s8
 80292da:	ee35 aac7 	vsub.f32	s20, s11, s14
 80292de:	ed45 4a01 	vstr	s9, [r5, #-4]
 80292e2:	edd6 1a00 	vldr	s3, [r6]
 80292e6:	edd7 0a00 	vldr	s1, [r7]
 80292ea:	ed92 4a02 	vldr	s8, [r2, #8]
 80292ee:	edd3 3a02 	vldr	s7, [r3, #8]
 80292f2:	ed93 2a01 	vldr	s4, [r3, #4]
 80292f6:	ed16 1a01 	vldr	s2, [r6, #-4]
 80292fa:	edd2 2a01 	vldr	s5, [r2, #4]
 80292fe:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029302:	ee70 4aa1 	vadd.f32	s9, s1, s3
 8029306:	ee39 3a81 	vadd.f32	s6, s19, s2
 802930a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802930e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029312:	ee73 8aa8 	vadd.f32	s17, s7, s17
 8029316:	ee7a aae6 	vsub.f32	s21, s21, s13
 802931a:	ee18 aa90 	vmov	sl, s17
 802931e:	f847 a908 	str.w	sl, [r7], #-8
 8029322:	edd2 8a01 	vldr	s17, [r2, #4]
 8029326:	ed93 9a01 	vldr	s18, [r3, #4]
 802932a:	ee73 8a28 	vadd.f32	s17, s6, s17
 802932e:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029332:	ee78 8a89 	vadd.f32	s17, s17, s18
 8029336:	ee74 0a63 	vsub.f32	s1, s8, s7
 802933a:	edc7 8a01 	vstr	s17, [r7, #4]
 802933e:	ed18 ba02 	vldr	s22, [r8, #-8]
 8029342:	ed58 8a01 	vldr	s17, [r8, #-4]
 8029346:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802934a:	ee6a ba28 	vmul.f32	s23, s20, s17
 802934e:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8029352:	ee71 9ae2 	vsub.f32	s19, s3, s5
 8029356:	ee30 9a81 	vadd.f32	s18, s1, s2
 802935a:	ee79 9a82 	vadd.f32	s19, s19, s4
 802935e:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8029362:	ee6a aaa8 	vmul.f32	s21, s21, s17
 8029366:	ee69 baa8 	vmul.f32	s23, s19, s17
 802936a:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802936e:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8029372:	ee69 8a28 	vmul.f32	s17, s18, s17
 8029376:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802937a:	ee1c aa10 	vmov	sl, s24
 802937e:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8029382:	f841 ab08 	str.w	sl, [r1], #8
 8029386:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802938a:	ee3b bacb 	vsub.f32	s22, s23, s22
 802938e:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8029392:	ee33 3a62 	vsub.f32	s6, s6, s5
 8029396:	ed01 aa01 	vstr	s20, [r1, #-4]
 802939a:	edc2 8a01 	vstr	s17, [r2, #4]
 802939e:	ed82 ba02 	vstr	s22, [r2, #8]
 80293a2:	ed5c 4a04 	vldr	s9, [ip, #-16]
 80293a6:	ee74 3a63 	vsub.f32	s7, s8, s7
 80293aa:	ee38 8a47 	vsub.f32	s16, s16, s14
 80293ae:	ed1c 4a03 	vldr	s8, [ip, #-12]
 80293b2:	ee30 0a46 	vsub.f32	s0, s0, s12
 80293b6:	ee33 3a42 	vsub.f32	s6, s6, s4
 80293ba:	ee38 8a67 	vsub.f32	s16, s16, s15
 80293be:	ee30 0a66 	vsub.f32	s0, s0, s13
 80293c2:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 80293c6:	ee63 8a04 	vmul.f32	s17, s6, s8
 80293ca:	ee28 aa24 	vmul.f32	s20, s16, s9
 80293ce:	ee60 9a04 	vmul.f32	s19, s0, s8
 80293d2:	ee28 8a04 	vmul.f32	s16, s16, s8
 80293d6:	ee20 0a24 	vmul.f32	s0, s0, s9
 80293da:	ee63 3a84 	vmul.f32	s7, s7, s8
 80293de:	ee39 4a68 	vsub.f32	s8, s18, s17
 80293e2:	ee7a 9a29 	vadd.f32	s19, s20, s19
 80293e6:	ee14 aa10 	vmov	sl, s8
 80293ea:	ee30 0a48 	vsub.f32	s0, s0, s16
 80293ee:	ee63 4a24 	vmul.f32	s9, s6, s9
 80293f2:	ed44 9a02 	vstr	s19, [r4, #-8]
 80293f6:	ee73 3ae4 	vsub.f32	s7, s7, s9
 80293fa:	ed04 0a01 	vstr	s0, [r4, #-4]
 80293fe:	f846 a908 	str.w	sl, [r6], #-8
 8029402:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029406:	ee35 7a87 	vadd.f32	s14, s11, s14
 802940a:	edc6 3a01 	vstr	s7, [r6, #4]
 802940e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029412:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029416:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802941a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802941e:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029422:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029426:	ee72 2a62 	vsub.f32	s5, s4, s5
 802942a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802942e:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029432:	ee75 5a25 	vadd.f32	s11, s10, s11
 8029436:	ee62 0a86 	vmul.f32	s1, s5, s12
 802943a:	ee66 6a86 	vmul.f32	s13, s13, s12
 802943e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8029442:	ee21 6a06 	vmul.f32	s12, s2, s12
 8029446:	ee62 2a87 	vmul.f32	s5, s5, s14
 802944a:	ee21 1a07 	vmul.f32	s2, s2, s14
 802944e:	ee15 aa90 	vmov	sl, s11
 8029452:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029456:	f840 ab08 	str.w	sl, [r0], #8
 802945a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802945e:	ee76 2a22 	vadd.f32	s5, s12, s5
 8029462:	f1b9 0901 	subs.w	r9, r9, #1
 8029466:	ed40 7a01 	vstr	s15, [r0, #-4]
 802946a:	f105 0508 	add.w	r5, r5, #8
 802946e:	ed83 1a02 	vstr	s2, [r3, #8]
 8029472:	edc3 2a01 	vstr	s5, [r3, #4]
 8029476:	f108 0808 	add.w	r8, r8, #8
 802947a:	f1a2 0208 	sub.w	r2, r2, #8
 802947e:	f10c 0c10 	add.w	ip, ip, #16
 8029482:	f104 0408 	add.w	r4, r4, #8
 8029486:	f10e 0e18 	add.w	lr, lr, #24
 802948a:	f1a3 0308 	sub.w	r3, r3, #8
 802948e:	f47f aefc 	bne.w	802928a <arm_cfft_radix8by4_f32+0x13e>
 8029492:	9908      	ldr	r1, [sp, #32]
 8029494:	9802      	ldr	r0, [sp, #8]
 8029496:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802949a:	00cb      	lsls	r3, r1, #3
 802949c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 80294a0:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80294a4:	9102      	str	r1, [sp, #8]
 80294a6:	9904      	ldr	r1, [sp, #16]
 80294a8:	4419      	add	r1, r3
 80294aa:	9104      	str	r1, [sp, #16]
 80294ac:	9905      	ldr	r1, [sp, #20]
 80294ae:	4419      	add	r1, r3
 80294b0:	9105      	str	r1, [sp, #20]
 80294b2:	9907      	ldr	r1, [sp, #28]
 80294b4:	449b      	add	fp, r3
 80294b6:	4419      	add	r1, r3
 80294b8:	449a      	add	sl, r3
 80294ba:	9b06      	ldr	r3, [sp, #24]
 80294bc:	9107      	str	r1, [sp, #28]
 80294be:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80294c2:	9306      	str	r3, [sp, #24]
 80294c4:	9a04      	ldr	r2, [sp, #16]
 80294c6:	9807      	ldr	r0, [sp, #28]
 80294c8:	edd2 3a00 	vldr	s7, [r2]
 80294cc:	ed90 4a00 	vldr	s8, [r0]
 80294d0:	eddb 7a00 	vldr	s15, [fp]
 80294d4:	ed9a 3a00 	vldr	s6, [sl]
 80294d8:	edd2 4a01 	vldr	s9, [r2, #4]
 80294dc:	ed90 7a01 	vldr	s14, [r0, #4]
 80294e0:	ed9b 2a01 	vldr	s4, [fp, #4]
 80294e4:	edda 5a01 	vldr	s11, [sl, #4]
 80294e8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80294ec:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80294ee:	ee73 6a84 	vadd.f32	s13, s7, s8
 80294f2:	ee34 6a87 	vadd.f32	s12, s9, s14
 80294f6:	ee36 5aa7 	vadd.f32	s10, s13, s15
 80294fa:	ee34 7ac7 	vsub.f32	s14, s9, s14
 80294fe:	ee33 5a05 	vadd.f32	s10, s6, s10
 8029502:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8029506:	ed82 5a00 	vstr	s10, [r2]
 802950a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802950e:	edda 4a01 	vldr	s9, [sl, #4]
 8029512:	ee36 5a05 	vadd.f32	s10, s12, s10
 8029516:	ee72 3a04 	vadd.f32	s7, s4, s8
 802951a:	ee35 5a24 	vadd.f32	s10, s10, s9
 802951e:	ee77 4a67 	vsub.f32	s9, s14, s15
 8029522:	ed82 5a01 	vstr	s10, [r2, #4]
 8029526:	9a05      	ldr	r2, [sp, #20]
 8029528:	ee34 5a83 	vadd.f32	s10, s9, s6
 802952c:	edd2 1a00 	vldr	s3, [r2]
 8029530:	edd2 2a01 	vldr	s5, [r2, #4]
 8029534:	9a02      	ldr	r2, [sp, #8]
 8029536:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802953a:	ee36 6a42 	vsub.f32	s12, s12, s4
 802953e:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8029542:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8029546:	ee65 2a22 	vmul.f32	s5, s10, s5
 802954a:	ee25 5a21 	vmul.f32	s10, s10, s3
 802954e:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8029552:	ee35 5a63 	vsub.f32	s10, s10, s7
 8029556:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802955a:	edcb 2a00 	vstr	s5, [fp]
 802955e:	ed8b 5a01 	vstr	s10, [fp, #4]
 8029562:	edd2 3a01 	vldr	s7, [r2, #4]
 8029566:	ed92 5a00 	vldr	s10, [r2]
 802956a:	9a06      	ldr	r2, [sp, #24]
 802956c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029570:	ee36 6a65 	vsub.f32	s12, s12, s11
 8029574:	ee66 4a85 	vmul.f32	s9, s13, s10
 8029578:	ee26 5a05 	vmul.f32	s10, s12, s10
 802957c:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029580:	ee26 6a23 	vmul.f32	s12, s12, s7
 8029584:	ee75 6a66 	vsub.f32	s13, s10, s13
 8029588:	ee34 6a86 	vadd.f32	s12, s9, s12
 802958c:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029590:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029594:	edc0 6a01 	vstr	s13, [r0, #4]
 8029598:	ed80 6a00 	vstr	s12, [r0]
 802959c:	ed92 6a01 	vldr	s12, [r2, #4]
 80295a0:	9803      	ldr	r0, [sp, #12]
 80295a2:	ee77 7a43 	vsub.f32	s15, s14, s6
 80295a6:	ee75 5a84 	vadd.f32	s11, s11, s8
 80295aa:	ed92 7a00 	vldr	s14, [r2]
 80295ae:	ee65 6a87 	vmul.f32	s13, s11, s14
 80295b2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80295b6:	ee65 5a86 	vmul.f32	s11, s11, s12
 80295ba:	ee67 7a86 	vmul.f32	s15, s15, s12
 80295be:	ee77 5a65 	vsub.f32	s11, s14, s11
 80295c2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80295c6:	edca 5a01 	vstr	s11, [sl, #4]
 80295ca:	edca 7a00 	vstr	s15, [sl]
 80295ce:	6872      	ldr	r2, [r6, #4]
 80295d0:	4621      	mov	r1, r4
 80295d2:	2304      	movs	r3, #4
 80295d4:	f000 f97a 	bl	80298cc <arm_radix8_butterfly_f32>
 80295d8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80295da:	6872      	ldr	r2, [r6, #4]
 80295dc:	4621      	mov	r1, r4
 80295de:	2304      	movs	r3, #4
 80295e0:	f000 f974 	bl	80298cc <arm_radix8_butterfly_f32>
 80295e4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80295e6:	6872      	ldr	r2, [r6, #4]
 80295e8:	4621      	mov	r1, r4
 80295ea:	2304      	movs	r3, #4
 80295ec:	f000 f96e 	bl	80298cc <arm_radix8_butterfly_f32>
 80295f0:	9801      	ldr	r0, [sp, #4]
 80295f2:	6872      	ldr	r2, [r6, #4]
 80295f4:	4621      	mov	r1, r4
 80295f6:	2304      	movs	r3, #4
 80295f8:	b00f      	add	sp, #60	; 0x3c
 80295fa:	ecbd 8b0a 	vpop	{d8-d12}
 80295fe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029602:	f000 b963 	b.w	80298cc <arm_radix8_butterfly_f32>
 8029606:	bf00      	nop

08029608 <arm_cfft_f32>:
 8029608:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802960c:	2a01      	cmp	r2, #1
 802960e:	4606      	mov	r6, r0
 8029610:	4617      	mov	r7, r2
 8029612:	460c      	mov	r4, r1
 8029614:	4698      	mov	r8, r3
 8029616:	8805      	ldrh	r5, [r0, #0]
 8029618:	d054      	beq.n	80296c4 <arm_cfft_f32+0xbc>
 802961a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802961e:	d04c      	beq.n	80296ba <arm_cfft_f32+0xb2>
 8029620:	d916      	bls.n	8029650 <arm_cfft_f32+0x48>
 8029622:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8029626:	d01a      	beq.n	802965e <arm_cfft_f32+0x56>
 8029628:	d95c      	bls.n	80296e4 <arm_cfft_f32+0xdc>
 802962a:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802962e:	d044      	beq.n	80296ba <arm_cfft_f32+0xb2>
 8029630:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8029634:	d105      	bne.n	8029642 <arm_cfft_f32+0x3a>
 8029636:	4620      	mov	r0, r4
 8029638:	4629      	mov	r1, r5
 802963a:	6872      	ldr	r2, [r6, #4]
 802963c:	2301      	movs	r3, #1
 802963e:	f000 f945 	bl	80298cc <arm_radix8_butterfly_f32>
 8029642:	f1b8 0f00 	cmp.w	r8, #0
 8029646:	d111      	bne.n	802966c <arm_cfft_f32+0x64>
 8029648:	2f01      	cmp	r7, #1
 802964a:	d016      	beq.n	802967a <arm_cfft_f32+0x72>
 802964c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029650:	2d20      	cmp	r5, #32
 8029652:	d032      	beq.n	80296ba <arm_cfft_f32+0xb2>
 8029654:	d94a      	bls.n	80296ec <arm_cfft_f32+0xe4>
 8029656:	2d40      	cmp	r5, #64	; 0x40
 8029658:	d0ed      	beq.n	8029636 <arm_cfft_f32+0x2e>
 802965a:	2d80      	cmp	r5, #128	; 0x80
 802965c:	d1f1      	bne.n	8029642 <arm_cfft_f32+0x3a>
 802965e:	4630      	mov	r0, r6
 8029660:	4621      	mov	r1, r4
 8029662:	f7ff fca1 	bl	8028fa8 <arm_cfft_radix8by2_f32>
 8029666:	f1b8 0f00 	cmp.w	r8, #0
 802966a:	d0ed      	beq.n	8029648 <arm_cfft_f32+0x40>
 802966c:	4620      	mov	r0, r4
 802966e:	89b1      	ldrh	r1, [r6, #12]
 8029670:	68b2      	ldr	r2, [r6, #8]
 8029672:	f7d6 fdbd 	bl	80001f0 <arm_bitreversal_32>
 8029676:	2f01      	cmp	r7, #1
 8029678:	d1e8      	bne.n	802964c <arm_cfft_f32+0x44>
 802967a:	ee07 5a90 	vmov	s15, r5
 802967e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8029682:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029686:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802968a:	2d00      	cmp	r5, #0
 802968c:	d0de      	beq.n	802964c <arm_cfft_f32+0x44>
 802968e:	f104 0108 	add.w	r1, r4, #8
 8029692:	2300      	movs	r3, #0
 8029694:	3301      	adds	r3, #1
 8029696:	429d      	cmp	r5, r3
 8029698:	f101 0108 	add.w	r1, r1, #8
 802969c:	ed11 7a04 	vldr	s14, [r1, #-16]
 80296a0:	ed51 7a03 	vldr	s15, [r1, #-12]
 80296a4:	ee27 7a26 	vmul.f32	s14, s14, s13
 80296a8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80296ac:	ed01 7a04 	vstr	s14, [r1, #-16]
 80296b0:	ed41 7a03 	vstr	s15, [r1, #-12]
 80296b4:	d1ee      	bne.n	8029694 <arm_cfft_f32+0x8c>
 80296b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80296ba:	4630      	mov	r0, r6
 80296bc:	4621      	mov	r1, r4
 80296be:	f7ff fd45 	bl	802914c <arm_cfft_radix8by4_f32>
 80296c2:	e7be      	b.n	8029642 <arm_cfft_f32+0x3a>
 80296c4:	b1ad      	cbz	r5, 80296f2 <arm_cfft_f32+0xea>
 80296c6:	f101 030c 	add.w	r3, r1, #12
 80296ca:	2200      	movs	r2, #0
 80296cc:	ed53 7a02 	vldr	s15, [r3, #-8]
 80296d0:	3201      	adds	r2, #1
 80296d2:	eef1 7a67 	vneg.f32	s15, s15
 80296d6:	4295      	cmp	r5, r2
 80296d8:	ed43 7a02 	vstr	s15, [r3, #-8]
 80296dc:	f103 0308 	add.w	r3, r3, #8
 80296e0:	d1f4      	bne.n	80296cc <arm_cfft_f32+0xc4>
 80296e2:	e79a      	b.n	802961a <arm_cfft_f32+0x12>
 80296e4:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80296e8:	d0a5      	beq.n	8029636 <arm_cfft_f32+0x2e>
 80296ea:	e7aa      	b.n	8029642 <arm_cfft_f32+0x3a>
 80296ec:	2d10      	cmp	r5, #16
 80296ee:	d0b6      	beq.n	802965e <arm_cfft_f32+0x56>
 80296f0:	e7a7      	b.n	8029642 <arm_cfft_f32+0x3a>
 80296f2:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80296f6:	d894      	bhi.n	8029622 <arm_cfft_f32+0x1a>
 80296f8:	e7aa      	b.n	8029650 <arm_cfft_f32+0x48>
 80296fa:	bf00      	nop

080296fc <arm_cmplx_mag_f32>:
 80296fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029700:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8029704:	b084      	sub	sp, #16
 8029706:	d07f      	beq.n	8029808 <arm_cmplx_mag_f32+0x10c>
 8029708:	2700      	movs	r7, #0
 802970a:	f100 0420 	add.w	r4, r0, #32
 802970e:	f101 0510 	add.w	r5, r1, #16
 8029712:	4646      	mov	r6, r8
 8029714:	e05a      	b.n	80297cc <arm_cmplx_mag_f32+0xd0>
 8029716:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802971a:	eeb4 0a40 	vcmp.f32	s0, s0
 802971e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029722:	f040 80a4 	bne.w	802986e <arm_cmplx_mag_f32+0x172>
 8029726:	ed05 0a04 	vstr	s0, [r5, #-16]
 802972a:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802972e:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8029732:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029736:	ee20 0a00 	vmul.f32	s0, s0, s0
 802973a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802973e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029742:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029746:	f2c0 808f 	blt.w	8029868 <arm_cmplx_mag_f32+0x16c>
 802974a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802974e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029752:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029756:	f040 80af 	bne.w	80298b8 <arm_cmplx_mag_f32+0x1bc>
 802975a:	ed05 0a03 	vstr	s0, [r5, #-12]
 802975e:	ed54 7a04 	vldr	s15, [r4, #-16]
 8029762:	ed14 0a03 	vldr	s0, [r4, #-12]
 8029766:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802976a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802976e:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029772:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802977a:	db72      	blt.n	8029862 <arm_cmplx_mag_f32+0x166>
 802977c:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029780:	eeb4 0a40 	vcmp.f32	s0, s0
 8029784:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029788:	f040 808c 	bne.w	80298a4 <arm_cmplx_mag_f32+0x1a8>
 802978c:	ed05 0a02 	vstr	s0, [r5, #-8]
 8029790:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029794:	ed14 0a01 	vldr	s0, [r4, #-4]
 8029798:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802979c:	ee20 0a00 	vmul.f32	s0, s0, s0
 80297a0:	ee77 7a80 	vadd.f32	s15, s15, s0
 80297a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80297a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297ac:	db20      	blt.n	80297f0 <arm_cmplx_mag_f32+0xf4>
 80297ae:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80297b2:	eeb4 0a40 	vcmp.f32	s0, s0
 80297b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297ba:	d169      	bne.n	8029890 <arm_cmplx_mag_f32+0x194>
 80297bc:	3e01      	subs	r6, #1
 80297be:	ed05 0a01 	vstr	s0, [r5, #-4]
 80297c2:	f104 0420 	add.w	r4, r4, #32
 80297c6:	f105 0510 	add.w	r5, r5, #16
 80297ca:	d019      	beq.n	8029800 <arm_cmplx_mag_f32+0x104>
 80297cc:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 80297d0:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 80297d4:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80297d8:	ee20 0a00 	vmul.f32	s0, s0, s0
 80297dc:	ee77 7a80 	vadd.f32	s15, s15, s0
 80297e0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80297e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297e8:	da95      	bge.n	8029716 <arm_cmplx_mag_f32+0x1a>
 80297ea:	f845 7c10 	str.w	r7, [r5, #-16]
 80297ee:	e79c      	b.n	802972a <arm_cmplx_mag_f32+0x2e>
 80297f0:	3e01      	subs	r6, #1
 80297f2:	f845 7c04 	str.w	r7, [r5, #-4]
 80297f6:	f104 0420 	add.w	r4, r4, #32
 80297fa:	f105 0510 	add.w	r5, r5, #16
 80297fe:	d1e5      	bne.n	80297cc <arm_cmplx_mag_f32+0xd0>
 8029800:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8029804:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 8029808:	f012 0503 	ands.w	r5, r2, #3
 802980c:	d026      	beq.n	802985c <arm_cmplx_mag_f32+0x160>
 802980e:	2600      	movs	r6, #0
 8029810:	f100 0408 	add.w	r4, r0, #8
 8029814:	e00c      	b.n	8029830 <arm_cmplx_mag_f32+0x134>
 8029816:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802981a:	eeb4 0a40 	vcmp.f32	s0, s0
 802981e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029822:	d12e      	bne.n	8029882 <arm_cmplx_mag_f32+0x186>
 8029824:	3d01      	subs	r5, #1
 8029826:	ed01 0a01 	vstr	s0, [r1, #-4]
 802982a:	f104 0408 	add.w	r4, r4, #8
 802982e:	d015      	beq.n	802985c <arm_cmplx_mag_f32+0x160>
 8029830:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029834:	ed14 0a01 	vldr	s0, [r4, #-4]
 8029838:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802983c:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029840:	3104      	adds	r1, #4
 8029842:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029846:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802984a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802984e:	dae2      	bge.n	8029816 <arm_cmplx_mag_f32+0x11a>
 8029850:	3d01      	subs	r5, #1
 8029852:	f841 6c04 	str.w	r6, [r1, #-4]
 8029856:	f104 0408 	add.w	r4, r4, #8
 802985a:	d1e9      	bne.n	8029830 <arm_cmplx_mag_f32+0x134>
 802985c:	b004      	add	sp, #16
 802985e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029862:	f845 7c08 	str.w	r7, [r5, #-8]
 8029866:	e793      	b.n	8029790 <arm_cmplx_mag_f32+0x94>
 8029868:	f845 7c0c 	str.w	r7, [r5, #-12]
 802986c:	e777      	b.n	802975e <arm_cmplx_mag_f32+0x62>
 802986e:	eeb0 0a67 	vmov.f32	s0, s15
 8029872:	9203      	str	r2, [sp, #12]
 8029874:	9102      	str	r1, [sp, #8]
 8029876:	9001      	str	r0, [sp, #4]
 8029878:	f000 fb38 	bl	8029eec <sqrtf>
 802987c:	a801      	add	r0, sp, #4
 802987e:	c807      	ldmia	r0, {r0, r1, r2}
 8029880:	e751      	b.n	8029726 <arm_cmplx_mag_f32+0x2a>
 8029882:	eeb0 0a67 	vmov.f32	s0, s15
 8029886:	9101      	str	r1, [sp, #4]
 8029888:	f000 fb30 	bl	8029eec <sqrtf>
 802988c:	9901      	ldr	r1, [sp, #4]
 802988e:	e7c9      	b.n	8029824 <arm_cmplx_mag_f32+0x128>
 8029890:	eeb0 0a67 	vmov.f32	s0, s15
 8029894:	9203      	str	r2, [sp, #12]
 8029896:	9102      	str	r1, [sp, #8]
 8029898:	9001      	str	r0, [sp, #4]
 802989a:	f000 fb27 	bl	8029eec <sqrtf>
 802989e:	a801      	add	r0, sp, #4
 80298a0:	c807      	ldmia	r0, {r0, r1, r2}
 80298a2:	e78b      	b.n	80297bc <arm_cmplx_mag_f32+0xc0>
 80298a4:	eeb0 0a67 	vmov.f32	s0, s15
 80298a8:	9203      	str	r2, [sp, #12]
 80298aa:	9102      	str	r1, [sp, #8]
 80298ac:	9001      	str	r0, [sp, #4]
 80298ae:	f000 fb1d 	bl	8029eec <sqrtf>
 80298b2:	a801      	add	r0, sp, #4
 80298b4:	c807      	ldmia	r0, {r0, r1, r2}
 80298b6:	e769      	b.n	802978c <arm_cmplx_mag_f32+0x90>
 80298b8:	eeb0 0a67 	vmov.f32	s0, s15
 80298bc:	9203      	str	r2, [sp, #12]
 80298be:	9102      	str	r1, [sp, #8]
 80298c0:	9001      	str	r0, [sp, #4]
 80298c2:	f000 fb13 	bl	8029eec <sqrtf>
 80298c6:	a801      	add	r0, sp, #4
 80298c8:	c807      	ldmia	r0, {r0, r1, r2}
 80298ca:	e746      	b.n	802975a <arm_cmplx_mag_f32+0x5e>

080298cc <arm_radix8_butterfly_f32>:
 80298cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80298d0:	ed2d 8b10 	vpush	{d8-d15}
 80298d4:	b09d      	sub	sp, #116	; 0x74
 80298d6:	461c      	mov	r4, r3
 80298d8:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029bfc <arm_radix8_butterfly_f32+0x330>
 80298dc:	921a      	str	r2, [sp, #104]	; 0x68
 80298de:	1d03      	adds	r3, r0, #4
 80298e0:	4682      	mov	sl, r0
 80298e2:	4689      	mov	r9, r1
 80298e4:	468b      	mov	fp, r1
 80298e6:	931b      	str	r3, [sp, #108]	; 0x6c
 80298e8:	9400      	str	r4, [sp, #0]
 80298ea:	469e      	mov	lr, r3
 80298ec:	ea4f 03db 	mov.w	r3, fp, lsr #3
 80298f0:	005a      	lsls	r2, r3, #1
 80298f2:	18d6      	adds	r6, r2, r3
 80298f4:	18f5      	adds	r5, r6, r3
 80298f6:	9203      	str	r2, [sp, #12]
 80298f8:	195a      	adds	r2, r3, r5
 80298fa:	18d0      	adds	r0, r2, r3
 80298fc:	00df      	lsls	r7, r3, #3
 80298fe:	1819      	adds	r1, r3, r0
 8029900:	463c      	mov	r4, r7
 8029902:	9701      	str	r7, [sp, #4]
 8029904:	4457      	add	r7, sl
 8029906:	930c      	str	r3, [sp, #48]	; 0x30
 8029908:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802990c:	011b      	lsls	r3, r3, #4
 802990e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8029912:	eb07 0c04 	add.w	ip, r7, r4
 8029916:	9c00      	ldr	r4, [sp, #0]
 8029918:	9302      	str	r3, [sp, #8]
 802991a:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802991e:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8029922:	3204      	adds	r2, #4
 8029924:	3104      	adds	r1, #4
 8029926:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802992a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802992e:	f04f 0800 	mov.w	r8, #0
 8029932:	eddc 7a00 	vldr	s15, [ip]
 8029936:	edd7 6a00 	vldr	s13, [r7]
 802993a:	edd6 3a00 	vldr	s7, [r6]
 802993e:	ed5e aa01 	vldr	s21, [lr, #-4]
 8029942:	edd5 4a00 	vldr	s9, [r5]
 8029946:	ed90 2a00 	vldr	s4, [r0]
 802994a:	ed12 7a01 	vldr	s14, [r2, #-4]
 802994e:	ed51 0a01 	vldr	s1, [r1, #-4]
 8029952:	ee77 8a82 	vadd.f32	s17, s15, s4
 8029956:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802995a:	ee76 1a87 	vadd.f32	s3, s13, s14
 802995e:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8029962:	ee31 6a84 	vadd.f32	s12, s3, s8
 8029966:	ee33 5a28 	vadd.f32	s10, s6, s17
 802996a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802996e:	ee75 6a06 	vadd.f32	s13, s10, s12
 8029972:	ee35 5a46 	vsub.f32	s10, s10, s12
 8029976:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802997a:	ed85 5a00 	vstr	s10, [r5]
 802997e:	ed96 1a01 	vldr	s2, [r6, #4]
 8029982:	edd7 5a01 	vldr	s11, [r7, #4]
 8029986:	ed92 aa00 	vldr	s20, [r2]
 802998a:	ed91 6a00 	vldr	s12, [r1]
 802998e:	ed9e 9a00 	vldr	s18, [lr]
 8029992:	ed95 5a01 	vldr	s10, [r5, #4]
 8029996:	eddc 6a01 	vldr	s13, [ip, #4]
 802999a:	edd0 9a01 	vldr	s19, [r0, #4]
 802999e:	ee73 0ae0 	vsub.f32	s1, s7, s1
 80299a2:	ee71 2a46 	vsub.f32	s5, s2, s12
 80299a6:	ee75 3aca 	vsub.f32	s7, s11, s20
 80299aa:	ee37 0a60 	vsub.f32	s0, s14, s1
 80299ae:	ee33 8aa2 	vadd.f32	s16, s7, s5
 80299b2:	ee37 7a20 	vadd.f32	s14, s14, s1
 80299b6:	ee73 2ae2 	vsub.f32	s5, s7, s5
 80299ba:	ee37 2ac2 	vsub.f32	s4, s15, s4
 80299be:	ee79 3a05 	vadd.f32	s7, s18, s10
 80299c2:	ee60 0a0b 	vmul.f32	s1, s0, s22
 80299c6:	ee39 5a45 	vsub.f32	s10, s18, s10
 80299ca:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 80299ce:	ee36 9aa9 	vadd.f32	s18, s13, s19
 80299d2:	ee75 5a8a 	vadd.f32	s11, s11, s20
 80299d6:	ee31 6a06 	vadd.f32	s12, s2, s12
 80299da:	ee76 6ae9 	vsub.f32	s13, s13, s19
 80299de:	ee28 8a0b 	vmul.f32	s16, s16, s22
 80299e2:	ee62 2a8b 	vmul.f32	s5, s5, s22
 80299e6:	ee67 7a0b 	vmul.f32	s15, s14, s22
 80299ea:	ee33 3a68 	vsub.f32	s6, s6, s17
 80299ee:	ee36 0a88 	vadd.f32	s0, s13, s16
 80299f2:	ee75 8a86 	vadd.f32	s17, s11, s12
 80299f6:	ee36 7ac8 	vsub.f32	s14, s13, s16
 80299fa:	ee71 1ac4 	vsub.f32	s3, s3, s8
 80299fe:	ee75 6a62 	vsub.f32	s13, s10, s5
 8029a02:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8029a06:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8029a0a:	ee33 1a89 	vadd.f32	s2, s7, s18
 8029a0e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8029a12:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8029a16:	ee75 4a22 	vadd.f32	s9, s10, s5
 8029a1a:	ee32 5a27 	vadd.f32	s10, s4, s15
 8029a1e:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029a22:	ee33 8a06 	vadd.f32	s16, s6, s12
 8029a26:	ee75 2a87 	vadd.f32	s5, s11, s14
 8029a2a:	ee31 9a28 	vadd.f32	s18, s2, s17
 8029a2e:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029a32:	ee74 0a61 	vsub.f32	s1, s8, s3
 8029a36:	ee33 2a80 	vadd.f32	s4, s7, s0
 8029a3a:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8029a3e:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8029a42:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8029a46:	ee31 1a68 	vsub.f32	s2, s2, s17
 8029a4a:	ee34 4a21 	vadd.f32	s8, s8, s3
 8029a4e:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8029a52:	ee74 4a85 	vadd.f32	s9, s9, s10
 8029a56:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8029a5a:	44d8      	add	r8, fp
 8029a5c:	45c1      	cmp	r9, r8
 8029a5e:	ed8e 9a00 	vstr	s18, [lr]
 8029a62:	ed85 1a01 	vstr	s2, [r5, #4]
 8029a66:	449e      	add	lr, r3
 8029a68:	ed8c 8a00 	vstr	s16, [ip]
 8029a6c:	441d      	add	r5, r3
 8029a6e:	ed80 6a00 	vstr	s12, [r0]
 8029a72:	edcc 0a01 	vstr	s1, [ip, #4]
 8029a76:	ed80 4a01 	vstr	s8, [r0, #4]
 8029a7a:	449c      	add	ip, r3
 8029a7c:	ed87 2a00 	vstr	s4, [r7]
 8029a80:	4418      	add	r0, r3
 8029a82:	ed41 3a01 	vstr	s7, [r1, #-4]
 8029a86:	ed42 2a01 	vstr	s5, [r2, #-4]
 8029a8a:	ed86 7a00 	vstr	s14, [r6]
 8029a8e:	ed87 3a01 	vstr	s6, [r7, #4]
 8029a92:	edc1 4a00 	vstr	s9, [r1]
 8029a96:	441f      	add	r7, r3
 8029a98:	edc2 5a00 	vstr	s11, [r2]
 8029a9c:	4419      	add	r1, r3
 8029a9e:	edc6 6a01 	vstr	s13, [r6, #4]
 8029aa2:	441a      	add	r2, r3
 8029aa4:	441e      	add	r6, r3
 8029aa6:	f63f af44 	bhi.w	8029932 <arm_radix8_butterfly_f32+0x66>
 8029aaa:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029aac:	2907      	cmp	r1, #7
 8029aae:	4620      	mov	r0, r4
 8029ab0:	f240 81e9 	bls.w	8029e86 <arm_radix8_butterfly_f32+0x5ba>
 8029ab4:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8029ab8:	193e      	adds	r6, r7, r4
 8029aba:	1935      	adds	r5, r6, r4
 8029abc:	9c03      	ldr	r4, [sp, #12]
 8029abe:	9000      	str	r0, [sp, #0]
 8029ac0:	4622      	mov	r2, r4
 8029ac2:	3201      	adds	r2, #1
 8029ac4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8029ac8:	9900      	ldr	r1, [sp, #0]
 8029aca:	1828      	adds	r0, r5, r0
 8029acc:	eb00 0e01 	add.w	lr, r0, r1
 8029ad0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029ad2:	440a      	add	r2, r1
 8029ad4:	eb04 0c01 	add.w	ip, r4, r1
 8029ad8:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8029adc:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8029ae0:	9a00      	ldr	r2, [sp, #0]
 8029ae2:	940f      	str	r4, [sp, #60]	; 0x3c
 8029ae4:	00ed      	lsls	r5, r5, #3
 8029ae6:	9511      	str	r5, [sp, #68]	; 0x44
 8029ae8:	00d5      	lsls	r5, r2, #3
 8029aea:	950d      	str	r5, [sp, #52]	; 0x34
 8029aec:	9d01      	ldr	r5, [sp, #4]
 8029aee:	3508      	adds	r5, #8
 8029af0:	9516      	str	r5, [sp, #88]	; 0x58
 8029af2:	9d02      	ldr	r5, [sp, #8]
 8029af4:	3508      	adds	r5, #8
 8029af6:	0114      	lsls	r4, r2, #4
 8029af8:	9517      	str	r5, [sp, #92]	; 0x5c
 8029afa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029afc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029afe:	940e      	str	r4, [sp, #56]	; 0x38
 8029b00:	00c0      	lsls	r0, r0, #3
 8029b02:	9010      	str	r0, [sp, #64]	; 0x40
 8029b04:	18aa      	adds	r2, r5, r2
 8029b06:	9207      	str	r2, [sp, #28]
 8029b08:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8029b0a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029b0c:	18aa      	adds	r2, r5, r2
 8029b0e:	9208      	str	r2, [sp, #32]
 8029b10:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029b12:	18aa      	adds	r2, r5, r2
 8029b14:	9209      	str	r2, [sp, #36]	; 0x24
 8029b16:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8029b1a:	f10e 0204 	add.w	r2, lr, #4
 8029b1e:	920a      	str	r2, [sp, #40]	; 0x28
 8029b20:	00c9      	lsls	r1, r1, #3
 8029b22:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8029b24:	310c      	adds	r1, #12
 8029b26:	00f6      	lsls	r6, r6, #3
 8029b28:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029b2c:	9114      	str	r1, [sp, #80]	; 0x50
 8029b2e:	18a9      	adds	r1, r5, r2
 8029b30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029b32:	9612      	str	r6, [sp, #72]	; 0x48
 8029b34:	00ff      	lsls	r7, r7, #3
 8029b36:	19ae      	adds	r6, r5, r6
 8029b38:	3008      	adds	r0, #8
 8029b3a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029b3e:	9606      	str	r6, [sp, #24]
 8029b40:	9019      	str	r0, [sp, #100]	; 0x64
 8029b42:	18aa      	adds	r2, r5, r2
 8029b44:	0164      	lsls	r4, r4, #5
 8029b46:	19ee      	adds	r6, r5, r7
 8029b48:	f10c 000c 	add.w	r0, ip, #12
 8029b4c:	9713      	str	r7, [sp, #76]	; 0x4c
 8029b4e:	9604      	str	r6, [sp, #16]
 8029b50:	9015      	str	r0, [sp, #84]	; 0x54
 8029b52:	9103      	str	r1, [sp, #12]
 8029b54:	9205      	str	r2, [sp, #20]
 8029b56:	f104 0208 	add.w	r2, r4, #8
 8029b5a:	9218      	str	r2, [sp, #96]	; 0x60
 8029b5c:	f04f 0801 	mov.w	r8, #1
 8029b60:	2200      	movs	r2, #0
 8029b62:	f102 0108 	add.w	r1, r2, #8
 8029b66:	460f      	mov	r7, r1
 8029b68:	910b      	str	r1, [sp, #44]	; 0x2c
 8029b6a:	9918      	ldr	r1, [sp, #96]	; 0x60
 8029b6c:	188e      	adds	r6, r1, r2
 8029b6e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8029b70:	188d      	adds	r5, r1, r2
 8029b72:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8029b74:	188c      	adds	r4, r1, r2
 8029b76:	9919      	ldr	r1, [sp, #100]	; 0x64
 8029b78:	1888      	adds	r0, r1, r2
 8029b7a:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029b7c:	eb01 0c02 	add.w	ip, r1, r2
 8029b80:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029b82:	440a      	add	r2, r1
 8029b84:	9903      	ldr	r1, [sp, #12]
 8029b86:	edd1 fa00 	vldr	s31, [r1]
 8029b8a:	9905      	ldr	r1, [sp, #20]
 8029b8c:	ed91 fa00 	vldr	s30, [r1]
 8029b90:	9904      	ldr	r1, [sp, #16]
 8029b92:	edd1 ea00 	vldr	s29, [r1]
 8029b96:	9906      	ldr	r1, [sp, #24]
 8029b98:	ed91 ea00 	vldr	s28, [r1]
 8029b9c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029b9e:	edd1 da00 	vldr	s27, [r1]
 8029ba2:	9908      	ldr	r1, [sp, #32]
 8029ba4:	ed91 da00 	vldr	s26, [r1]
 8029ba8:	9907      	ldr	r1, [sp, #28]
 8029baa:	edd1 ca00 	vldr	s25, [r1]
 8029bae:	9903      	ldr	r1, [sp, #12]
 8029bb0:	ed91 ca01 	vldr	s24, [r1, #4]
 8029bb4:	9905      	ldr	r1, [sp, #20]
 8029bb6:	edd1 ba01 	vldr	s23, [r1, #4]
 8029bba:	9904      	ldr	r1, [sp, #16]
 8029bbc:	edd1 aa01 	vldr	s21, [r1, #4]
 8029bc0:	9906      	ldr	r1, [sp, #24]
 8029bc2:	ed91 aa01 	vldr	s20, [r1, #4]
 8029bc6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029bc8:	edd1 7a01 	vldr	s15, [r1, #4]
 8029bcc:	9908      	ldr	r1, [sp, #32]
 8029bce:	edcd 7a00 	vstr	s15, [sp]
 8029bd2:	edd1 7a01 	vldr	s15, [r1, #4]
 8029bd6:	9907      	ldr	r1, [sp, #28]
 8029bd8:	edcd 7a01 	vstr	s15, [sp, #4]
 8029bdc:	edd1 7a01 	vldr	s15, [r1, #4]
 8029be0:	eb0a 0e07 	add.w	lr, sl, r7
 8029be4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8029be6:	edcd 7a02 	vstr	s15, [sp, #8]
 8029bea:	eb0c 010a 	add.w	r1, ip, sl
 8029bee:	4456      	add	r6, sl
 8029bf0:	4455      	add	r5, sl
 8029bf2:	4454      	add	r4, sl
 8029bf4:	4450      	add	r0, sl
 8029bf6:	4452      	add	r2, sl
 8029bf8:	46c4      	mov	ip, r8
 8029bfa:	e001      	b.n	8029c00 <arm_radix8_butterfly_f32+0x334>
 8029bfc:	3f3504f3 	.word	0x3f3504f3
 8029c00:	ed96 5a00 	vldr	s10, [r6]
 8029c04:	ed52 9a01 	vldr	s19, [r2, #-4]
 8029c08:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029c0c:	edd0 7a00 	vldr	s15, [r0]
 8029c10:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029c14:	edde 3a00 	vldr	s7, [lr]
 8029c18:	ed94 3a00 	vldr	s6, [r4]
 8029c1c:	ed95 2a00 	vldr	s4, [r5]
 8029c20:	ed9e 0a01 	vldr	s0, [lr, #4]
 8029c24:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029c28:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029c2c:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029c30:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029c34:	ee78 1a04 	vadd.f32	s3, s16, s8
 8029c38:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029c3c:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029c40:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029c44:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029c48:	ed8e 6a00 	vstr	s12, [lr]
 8029c4c:	edd0 8a01 	vldr	s17, [r0, #4]
 8029c50:	ed95 9a01 	vldr	s18, [r5, #4]
 8029c54:	edd1 2a00 	vldr	s5, [r1]
 8029c58:	ed97 7a00 	vldr	s14, [r7]
 8029c5c:	edd4 0a01 	vldr	s1, [r4, #4]
 8029c60:	ed96 6a01 	vldr	s12, [r6, #4]
 8029c64:	edd2 5a00 	vldr	s11, [r2]
 8029c68:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029c6c:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029c70:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029c74:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8029c78:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029c7c:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029c80:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029c84:	ee79 2a22 	vadd.f32	s5, s18, s5
 8029c88:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029c8c:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029c90:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029c94:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029c98:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029c9c:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029ca0:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029ca4:	ee32 9a08 	vadd.f32	s18, s4, s16
 8029ca8:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029cac:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029cb0:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029cb4:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8029cb8:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029cbc:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029cc0:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029cc4:	ee30 6a46 	vsub.f32	s12, s0, s12
 8029cc8:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029ccc:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029cd0:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029cd4:	ee32 7a64 	vsub.f32	s14, s4, s9
 8029cd8:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029cdc:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029ce0:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029ce4:	ee75 8a85 	vadd.f32	s17, s11, s10
 8029ce8:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029cec:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029cf0:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029cf4:	ee79 1a41 	vsub.f32	s3, s18, s2
 8029cf8:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029cfc:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029d00:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029d04:	ee72 4a24 	vadd.f32	s9, s4, s9
 8029d08:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029d0c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029d10:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029d14:	ee77 9a85 	vadd.f32	s19, s15, s10
 8029d18:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029d1c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029d20:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029d24:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8029d28:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029d2c:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029d30:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029d34:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8029d38:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029d3c:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029d40:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029d44:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8029d48:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029d4c:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029d50:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029d54:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8029d58:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029d5c:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029d60:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029d64:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8029d68:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029d6c:	ed86 3a00 	vstr	s6, [r6]
 8029d70:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029d74:	ee32 2a05 	vadd.f32	s4, s4, s10
 8029d78:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029d7c:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029d80:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029d84:	ee64 1a00 	vmul.f32	s3, s8, s0
 8029d88:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029d8c:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029d90:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029d94:	ee64 8a28 	vmul.f32	s17, s8, s17
 8029d98:	ed9d 4a00 	vldr	s8, [sp]
 8029d9c:	edc6 6a01 	vstr	s13, [r6, #4]
 8029da0:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029da4:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8029da8:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029dac:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029db0:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029db4:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029db8:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029dbc:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029dc0:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029dc4:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8029dc8:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029dcc:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029dd0:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029dd4:	ee30 0a68 	vsub.f32	s0, s0, s17
 8029dd8:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8029ddc:	ee70 0a84 	vadd.f32	s1, s1, s8
 8029de0:	ee36 6a67 	vsub.f32	s12, s12, s15
 8029de4:	44dc      	add	ip, fp
 8029de6:	45e1      	cmp	r9, ip
 8029de8:	ed84 9a00 	vstr	s18, [r4]
 8029dec:	edc4 3a01 	vstr	s7, [r4, #4]
 8029df0:	449e      	add	lr, r3
 8029df2:	ed02 7a01 	vstr	s14, [r2, #-4]
 8029df6:	edc2 2a00 	vstr	s5, [r2]
 8029dfa:	441e      	add	r6, r3
 8029dfc:	ed85 2a00 	vstr	s4, [r5]
 8029e00:	ed85 8a01 	vstr	s16, [r5, #4]
 8029e04:	441c      	add	r4, r3
 8029e06:	ed47 1a01 	vstr	s3, [r7, #-4]
 8029e0a:	ed87 0a00 	vstr	s0, [r7]
 8029e0e:	441a      	add	r2, r3
 8029e10:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029e14:	edc1 9a00 	vstr	s19, [r1]
 8029e18:	441d      	add	r5, r3
 8029e1a:	edc0 0a00 	vstr	s1, [r0]
 8029e1e:	441f      	add	r7, r3
 8029e20:	ed80 6a01 	vstr	s12, [r0, #4]
 8029e24:	4419      	add	r1, r3
 8029e26:	4418      	add	r0, r3
 8029e28:	f63f aeea 	bhi.w	8029c00 <arm_radix8_butterfly_f32+0x334>
 8029e2c:	9a03      	ldr	r2, [sp, #12]
 8029e2e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029e30:	440a      	add	r2, r1
 8029e32:	9203      	str	r2, [sp, #12]
 8029e34:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029e36:	9a05      	ldr	r2, [sp, #20]
 8029e38:	440a      	add	r2, r1
 8029e3a:	9205      	str	r2, [sp, #20]
 8029e3c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029e3e:	9a04      	ldr	r2, [sp, #16]
 8029e40:	440a      	add	r2, r1
 8029e42:	9204      	str	r2, [sp, #16]
 8029e44:	9912      	ldr	r1, [sp, #72]	; 0x48
 8029e46:	9a06      	ldr	r2, [sp, #24]
 8029e48:	440a      	add	r2, r1
 8029e4a:	9206      	str	r2, [sp, #24]
 8029e4c:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029e4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029e50:	440a      	add	r2, r1
 8029e52:	9209      	str	r2, [sp, #36]	; 0x24
 8029e54:	9910      	ldr	r1, [sp, #64]	; 0x40
 8029e56:	9a08      	ldr	r2, [sp, #32]
 8029e58:	440a      	add	r2, r1
 8029e5a:	9208      	str	r2, [sp, #32]
 8029e5c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029e5e:	9a07      	ldr	r2, [sp, #28]
 8029e60:	440a      	add	r2, r1
 8029e62:	9207      	str	r2, [sp, #28]
 8029e64:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029e66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029e68:	f108 0801 	add.w	r8, r8, #1
 8029e6c:	3208      	adds	r2, #8
 8029e6e:	4588      	cmp	r8, r1
 8029e70:	920a      	str	r2, [sp, #40]	; 0x28
 8029e72:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029e74:	f47f ae75 	bne.w	8029b62 <arm_radix8_butterfly_f32+0x296>
 8029e78:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029e7c:	9300      	str	r3, [sp, #0]
 8029e7e:	46c3      	mov	fp, r8
 8029e80:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029e84:	e532      	b.n	80298ec <arm_radix8_butterfly_f32+0x20>
 8029e86:	b01d      	add	sp, #116	; 0x74
 8029e88:	ecbd 8b10 	vpop	{d8-d15}
 8029e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029e90 <__aeabi_atexit>:
 8029e90:	460b      	mov	r3, r1
 8029e92:	4601      	mov	r1, r0
 8029e94:	4618      	mov	r0, r3
 8029e96:	f000 bef3 	b.w	802ac80 <__cxa_atexit>

08029e9a <_ZdlPvj>:
 8029e9a:	f000 b812 	b.w	8029ec2 <_ZdlPv>

08029e9e <__cxa_guard_acquire>:
 8029e9e:	6803      	ldr	r3, [r0, #0]
 8029ea0:	07db      	lsls	r3, r3, #31
 8029ea2:	d406      	bmi.n	8029eb2 <__cxa_guard_acquire+0x14>
 8029ea4:	7843      	ldrb	r3, [r0, #1]
 8029ea6:	b103      	cbz	r3, 8029eaa <__cxa_guard_acquire+0xc>
 8029ea8:	deff      	udf	#255	; 0xff
 8029eaa:	2301      	movs	r3, #1
 8029eac:	7043      	strb	r3, [r0, #1]
 8029eae:	4618      	mov	r0, r3
 8029eb0:	4770      	bx	lr
 8029eb2:	2000      	movs	r0, #0
 8029eb4:	4770      	bx	lr

08029eb6 <__cxa_guard_release>:
 8029eb6:	2301      	movs	r3, #1
 8029eb8:	6003      	str	r3, [r0, #0]
 8029eba:	4770      	bx	lr

08029ebc <__cxa_pure_virtual>:
 8029ebc:	b508      	push	{r3, lr}
 8029ebe:	f000 f80f 	bl	8029ee0 <_ZSt9terminatev>

08029ec2 <_ZdlPv>:
 8029ec2:	f000 be29 	b.w	802ab18 <free>

08029ec6 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029ec6:	b508      	push	{r3, lr}
 8029ec8:	4780      	blx	r0
 8029eca:	f000 fdf1 	bl	802aab0 <abort>
	...

08029ed0 <_ZSt13get_terminatev>:
 8029ed0:	4b02      	ldr	r3, [pc, #8]	; (8029edc <_ZSt13get_terminatev+0xc>)
 8029ed2:	6818      	ldr	r0, [r3, #0]
 8029ed4:	f3bf 8f5b 	dmb	ish
 8029ed8:	4770      	bx	lr
 8029eda:	bf00      	nop
 8029edc:	20000120 	.word	0x20000120

08029ee0 <_ZSt9terminatev>:
 8029ee0:	b508      	push	{r3, lr}
 8029ee2:	f7ff fff5 	bl	8029ed0 <_ZSt13get_terminatev>
 8029ee6:	f7ff ffee 	bl	8029ec6 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029eec <sqrtf>:
 8029eec:	b508      	push	{r3, lr}
 8029eee:	ed2d 8b02 	vpush	{d8}
 8029ef2:	eeb0 8a40 	vmov.f32	s16, s0
 8029ef6:	f000 f8a1 	bl	802a03c <__ieee754_sqrtf>
 8029efa:	eeb4 8a48 	vcmp.f32	s16, s16
 8029efe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029f02:	d60c      	bvs.n	8029f1e <sqrtf+0x32>
 8029f04:	eddf 8a07 	vldr	s17, [pc, #28]	; 8029f24 <sqrtf+0x38>
 8029f08:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029f0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029f10:	d505      	bpl.n	8029f1e <sqrtf+0x32>
 8029f12:	f001 f8d3 	bl	802b0bc <__errno>
 8029f16:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029f1a:	2321      	movs	r3, #33	; 0x21
 8029f1c:	6003      	str	r3, [r0, #0]
 8029f1e:	ecbd 8b02 	vpop	{d8}
 8029f22:	bd08      	pop	{r3, pc}
 8029f24:	00000000 	.word	0x00000000

08029f28 <cosf>:
 8029f28:	ee10 3a10 	vmov	r3, s0
 8029f2c:	b507      	push	{r0, r1, r2, lr}
 8029f2e:	4a1e      	ldr	r2, [pc, #120]	; (8029fa8 <cosf+0x80>)
 8029f30:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029f34:	4293      	cmp	r3, r2
 8029f36:	dc06      	bgt.n	8029f46 <cosf+0x1e>
 8029f38:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8029fac <cosf+0x84>
 8029f3c:	b003      	add	sp, #12
 8029f3e:	f85d eb04 	ldr.w	lr, [sp], #4
 8029f42:	f000 b903 	b.w	802a14c <__kernel_cosf>
 8029f46:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029f4a:	db04      	blt.n	8029f56 <cosf+0x2e>
 8029f4c:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029f50:	b003      	add	sp, #12
 8029f52:	f85d fb04 	ldr.w	pc, [sp], #4
 8029f56:	4668      	mov	r0, sp
 8029f58:	f000 f99e 	bl	802a298 <__ieee754_rem_pio2f>
 8029f5c:	f000 0003 	and.w	r0, r0, #3
 8029f60:	2801      	cmp	r0, #1
 8029f62:	d009      	beq.n	8029f78 <cosf+0x50>
 8029f64:	2802      	cmp	r0, #2
 8029f66:	d010      	beq.n	8029f8a <cosf+0x62>
 8029f68:	b9b0      	cbnz	r0, 8029f98 <cosf+0x70>
 8029f6a:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f6e:	ed9d 0a00 	vldr	s0, [sp]
 8029f72:	f000 f8eb 	bl	802a14c <__kernel_cosf>
 8029f76:	e7eb      	b.n	8029f50 <cosf+0x28>
 8029f78:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f7c:	ed9d 0a00 	vldr	s0, [sp]
 8029f80:	f000 f942 	bl	802a208 <__kernel_sinf>
 8029f84:	eeb1 0a40 	vneg.f32	s0, s0
 8029f88:	e7e2      	b.n	8029f50 <cosf+0x28>
 8029f8a:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f8e:	ed9d 0a00 	vldr	s0, [sp]
 8029f92:	f000 f8db 	bl	802a14c <__kernel_cosf>
 8029f96:	e7f5      	b.n	8029f84 <cosf+0x5c>
 8029f98:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f9c:	ed9d 0a00 	vldr	s0, [sp]
 8029fa0:	2001      	movs	r0, #1
 8029fa2:	f000 f931 	bl	802a208 <__kernel_sinf>
 8029fa6:	e7d3      	b.n	8029f50 <cosf+0x28>
 8029fa8:	3f490fd8 	.word	0x3f490fd8
 8029fac:	00000000 	.word	0x00000000

08029fb0 <sinf>:
 8029fb0:	ee10 3a10 	vmov	r3, s0
 8029fb4:	b507      	push	{r0, r1, r2, lr}
 8029fb6:	4a1f      	ldr	r2, [pc, #124]	; (802a034 <sinf+0x84>)
 8029fb8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029fbc:	4293      	cmp	r3, r2
 8029fbe:	dc07      	bgt.n	8029fd0 <sinf+0x20>
 8029fc0:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a038 <sinf+0x88>
 8029fc4:	2000      	movs	r0, #0
 8029fc6:	b003      	add	sp, #12
 8029fc8:	f85d eb04 	ldr.w	lr, [sp], #4
 8029fcc:	f000 b91c 	b.w	802a208 <__kernel_sinf>
 8029fd0:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029fd4:	db04      	blt.n	8029fe0 <sinf+0x30>
 8029fd6:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029fda:	b003      	add	sp, #12
 8029fdc:	f85d fb04 	ldr.w	pc, [sp], #4
 8029fe0:	4668      	mov	r0, sp
 8029fe2:	f000 f959 	bl	802a298 <__ieee754_rem_pio2f>
 8029fe6:	f000 0003 	and.w	r0, r0, #3
 8029fea:	2801      	cmp	r0, #1
 8029fec:	d00a      	beq.n	802a004 <sinf+0x54>
 8029fee:	2802      	cmp	r0, #2
 8029ff0:	d00f      	beq.n	802a012 <sinf+0x62>
 8029ff2:	b9c0      	cbnz	r0, 802a026 <sinf+0x76>
 8029ff4:	eddd 0a01 	vldr	s1, [sp, #4]
 8029ff8:	ed9d 0a00 	vldr	s0, [sp]
 8029ffc:	2001      	movs	r0, #1
 8029ffe:	f000 f903 	bl	802a208 <__kernel_sinf>
 802a002:	e7ea      	b.n	8029fda <sinf+0x2a>
 802a004:	eddd 0a01 	vldr	s1, [sp, #4]
 802a008:	ed9d 0a00 	vldr	s0, [sp]
 802a00c:	f000 f89e 	bl	802a14c <__kernel_cosf>
 802a010:	e7e3      	b.n	8029fda <sinf+0x2a>
 802a012:	eddd 0a01 	vldr	s1, [sp, #4]
 802a016:	ed9d 0a00 	vldr	s0, [sp]
 802a01a:	2001      	movs	r0, #1
 802a01c:	f000 f8f4 	bl	802a208 <__kernel_sinf>
 802a020:	eeb1 0a40 	vneg.f32	s0, s0
 802a024:	e7d9      	b.n	8029fda <sinf+0x2a>
 802a026:	eddd 0a01 	vldr	s1, [sp, #4]
 802a02a:	ed9d 0a00 	vldr	s0, [sp]
 802a02e:	f000 f88d 	bl	802a14c <__kernel_cosf>
 802a032:	e7f5      	b.n	802a020 <sinf+0x70>
 802a034:	3f490fd8 	.word	0x3f490fd8
 802a038:	00000000 	.word	0x00000000

0802a03c <__ieee754_sqrtf>:
 802a03c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802a040:	4770      	bx	lr
	...

0802a044 <ceilf>:
 802a044:	ee10 3a10 	vmov	r3, s0
 802a048:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a04c:	3a7f      	subs	r2, #127	; 0x7f
 802a04e:	2a16      	cmp	r2, #22
 802a050:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a054:	dc2a      	bgt.n	802a0ac <ceilf+0x68>
 802a056:	2a00      	cmp	r2, #0
 802a058:	da11      	bge.n	802a07e <ceilf+0x3a>
 802a05a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a0c0 <ceilf+0x7c>
 802a05e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a062:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a066:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a06a:	dd05      	ble.n	802a078 <ceilf+0x34>
 802a06c:	2b00      	cmp	r3, #0
 802a06e:	db23      	blt.n	802a0b8 <ceilf+0x74>
 802a070:	2900      	cmp	r1, #0
 802a072:	bf18      	it	ne
 802a074:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a078:	ee00 3a10 	vmov	s0, r3
 802a07c:	4770      	bx	lr
 802a07e:	4911      	ldr	r1, [pc, #68]	; (802a0c4 <ceilf+0x80>)
 802a080:	4111      	asrs	r1, r2
 802a082:	420b      	tst	r3, r1
 802a084:	d0fa      	beq.n	802a07c <ceilf+0x38>
 802a086:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a0c0 <ceilf+0x7c>
 802a08a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a08e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a092:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a096:	ddef      	ble.n	802a078 <ceilf+0x34>
 802a098:	2b00      	cmp	r3, #0
 802a09a:	bfc2      	ittt	gt
 802a09c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a0a0:	fa40 f202 	asrgt.w	r2, r0, r2
 802a0a4:	189b      	addgt	r3, r3, r2
 802a0a6:	ea23 0301 	bic.w	r3, r3, r1
 802a0aa:	e7e5      	b.n	802a078 <ceilf+0x34>
 802a0ac:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a0b0:	d3e4      	bcc.n	802a07c <ceilf+0x38>
 802a0b2:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a0b6:	4770      	bx	lr
 802a0b8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a0bc:	e7dc      	b.n	802a078 <ceilf+0x34>
 802a0be:	bf00      	nop
 802a0c0:	7149f2ca 	.word	0x7149f2ca
 802a0c4:	007fffff 	.word	0x007fffff

0802a0c8 <floorf>:
 802a0c8:	ee10 3a10 	vmov	r3, s0
 802a0cc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a0d0:	3a7f      	subs	r2, #127	; 0x7f
 802a0d2:	2a16      	cmp	r2, #22
 802a0d4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a0d8:	dc2a      	bgt.n	802a130 <floorf+0x68>
 802a0da:	2a00      	cmp	r2, #0
 802a0dc:	da11      	bge.n	802a102 <floorf+0x3a>
 802a0de:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a140 <floorf+0x78>
 802a0e2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a0e6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a0ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a0ee:	dd05      	ble.n	802a0fc <floorf+0x34>
 802a0f0:	2b00      	cmp	r3, #0
 802a0f2:	da23      	bge.n	802a13c <floorf+0x74>
 802a0f4:	4a13      	ldr	r2, [pc, #76]	; (802a144 <floorf+0x7c>)
 802a0f6:	2900      	cmp	r1, #0
 802a0f8:	bf18      	it	ne
 802a0fa:	4613      	movne	r3, r2
 802a0fc:	ee00 3a10 	vmov	s0, r3
 802a100:	4770      	bx	lr
 802a102:	4911      	ldr	r1, [pc, #68]	; (802a148 <floorf+0x80>)
 802a104:	4111      	asrs	r1, r2
 802a106:	420b      	tst	r3, r1
 802a108:	d0fa      	beq.n	802a100 <floorf+0x38>
 802a10a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a140 <floorf+0x78>
 802a10e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a112:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a116:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a11a:	ddef      	ble.n	802a0fc <floorf+0x34>
 802a11c:	2b00      	cmp	r3, #0
 802a11e:	bfbe      	ittt	lt
 802a120:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a124:	fa40 f202 	asrlt.w	r2, r0, r2
 802a128:	189b      	addlt	r3, r3, r2
 802a12a:	ea23 0301 	bic.w	r3, r3, r1
 802a12e:	e7e5      	b.n	802a0fc <floorf+0x34>
 802a130:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a134:	d3e4      	bcc.n	802a100 <floorf+0x38>
 802a136:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a13a:	4770      	bx	lr
 802a13c:	2300      	movs	r3, #0
 802a13e:	e7dd      	b.n	802a0fc <floorf+0x34>
 802a140:	7149f2ca 	.word	0x7149f2ca
 802a144:	bf800000 	.word	0xbf800000
 802a148:	007fffff 	.word	0x007fffff

0802a14c <__kernel_cosf>:
 802a14c:	ee10 3a10 	vmov	r3, s0
 802a150:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a154:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a158:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a15c:	da05      	bge.n	802a16a <__kernel_cosf+0x1e>
 802a15e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a162:	ee17 2a90 	vmov	r2, s15
 802a166:	2a00      	cmp	r2, #0
 802a168:	d03b      	beq.n	802a1e2 <__kernel_cosf+0x96>
 802a16a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a16e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a1e8 <__kernel_cosf+0x9c>
 802a172:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a1ec <__kernel_cosf+0xa0>
 802a176:	4a1e      	ldr	r2, [pc, #120]	; (802a1f0 <__kernel_cosf+0xa4>)
 802a178:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a17c:	4293      	cmp	r3, r2
 802a17e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a1f4 <__kernel_cosf+0xa8>
 802a182:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a186:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a1f8 <__kernel_cosf+0xac>
 802a18a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a18e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a1fc <__kernel_cosf+0xb0>
 802a192:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a196:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a200 <__kernel_cosf+0xb4>
 802a19a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a19e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a1a2:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a1a6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a1aa:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a1ae:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a1b2:	dc04      	bgt.n	802a1be <__kernel_cosf+0x72>
 802a1b4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a1b8:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a1bc:	4770      	bx	lr
 802a1be:	4a11      	ldr	r2, [pc, #68]	; (802a204 <__kernel_cosf+0xb8>)
 802a1c0:	4293      	cmp	r3, r2
 802a1c2:	bfda      	itte	le
 802a1c4:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a1c8:	ee07 3a10 	vmovle	s14, r3
 802a1cc:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a1d0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a1d4:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a1d8:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a1dc:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a1e0:	4770      	bx	lr
 802a1e2:	eeb0 0a66 	vmov.f32	s0, s13
 802a1e6:	4770      	bx	lr
 802a1e8:	ad47d74e 	.word	0xad47d74e
 802a1ec:	310f74f6 	.word	0x310f74f6
 802a1f0:	3e999999 	.word	0x3e999999
 802a1f4:	b493f27c 	.word	0xb493f27c
 802a1f8:	37d00d01 	.word	0x37d00d01
 802a1fc:	bab60b61 	.word	0xbab60b61
 802a200:	3d2aaaab 	.word	0x3d2aaaab
 802a204:	3f480000 	.word	0x3f480000

0802a208 <__kernel_sinf>:
 802a208:	ee10 3a10 	vmov	r3, s0
 802a20c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a210:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a214:	da04      	bge.n	802a220 <__kernel_sinf+0x18>
 802a216:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a21a:	ee17 3a90 	vmov	r3, s15
 802a21e:	b35b      	cbz	r3, 802a278 <__kernel_sinf+0x70>
 802a220:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a224:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a27c <__kernel_sinf+0x74>
 802a228:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a280 <__kernel_sinf+0x78>
 802a22c:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a230:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a284 <__kernel_sinf+0x7c>
 802a234:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a238:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a288 <__kernel_sinf+0x80>
 802a23c:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a240:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a28c <__kernel_sinf+0x84>
 802a244:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a248:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a24c:	b930      	cbnz	r0, 802a25c <__kernel_sinf+0x54>
 802a24e:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a290 <__kernel_sinf+0x88>
 802a252:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a256:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a25a:	4770      	bx	lr
 802a25c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a260:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a264:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a268:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a26c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a294 <__kernel_sinf+0x8c>
 802a270:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a274:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a278:	4770      	bx	lr
 802a27a:	bf00      	nop
 802a27c:	2f2ec9d3 	.word	0x2f2ec9d3
 802a280:	b2d72f34 	.word	0xb2d72f34
 802a284:	3638ef1b 	.word	0x3638ef1b
 802a288:	b9500d01 	.word	0xb9500d01
 802a28c:	3c088889 	.word	0x3c088889
 802a290:	be2aaaab 	.word	0xbe2aaaab
 802a294:	3e2aaaab 	.word	0x3e2aaaab

0802a298 <__ieee754_rem_pio2f>:
 802a298:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a29a:	ee10 6a10 	vmov	r6, s0
 802a29e:	4b86      	ldr	r3, [pc, #536]	; (802a4b8 <__ieee754_rem_pio2f+0x220>)
 802a2a0:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a2a4:	429d      	cmp	r5, r3
 802a2a6:	b087      	sub	sp, #28
 802a2a8:	4604      	mov	r4, r0
 802a2aa:	dc05      	bgt.n	802a2b8 <__ieee754_rem_pio2f+0x20>
 802a2ac:	2300      	movs	r3, #0
 802a2ae:	ed80 0a00 	vstr	s0, [r0]
 802a2b2:	6043      	str	r3, [r0, #4]
 802a2b4:	2000      	movs	r0, #0
 802a2b6:	e020      	b.n	802a2fa <__ieee754_rem_pio2f+0x62>
 802a2b8:	4b80      	ldr	r3, [pc, #512]	; (802a4bc <__ieee754_rem_pio2f+0x224>)
 802a2ba:	429d      	cmp	r5, r3
 802a2bc:	dc38      	bgt.n	802a330 <__ieee754_rem_pio2f+0x98>
 802a2be:	2e00      	cmp	r6, #0
 802a2c0:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802a4c0 <__ieee754_rem_pio2f+0x228>
 802a2c4:	4b7f      	ldr	r3, [pc, #508]	; (802a4c4 <__ieee754_rem_pio2f+0x22c>)
 802a2c6:	f025 050f 	bic.w	r5, r5, #15
 802a2ca:	dd18      	ble.n	802a2fe <__ieee754_rem_pio2f+0x66>
 802a2cc:	429d      	cmp	r5, r3
 802a2ce:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a2d2:	bf09      	itett	eq
 802a2d4:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802a4c8 <__ieee754_rem_pio2f+0x230>
 802a2d8:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802a4cc <__ieee754_rem_pio2f+0x234>
 802a2dc:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a2e0:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802a4d0 <__ieee754_rem_pio2f+0x238>
 802a2e4:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802a2e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a2ec:	edc0 6a00 	vstr	s13, [r0]
 802a2f0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a2f4:	edc0 7a01 	vstr	s15, [r0, #4]
 802a2f8:	2001      	movs	r0, #1
 802a2fa:	b007      	add	sp, #28
 802a2fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a2fe:	429d      	cmp	r5, r3
 802a300:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a304:	bf09      	itett	eq
 802a306:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802a4c8 <__ieee754_rem_pio2f+0x230>
 802a30a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802a4cc <__ieee754_rem_pio2f+0x234>
 802a30e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a312:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802a4d0 <__ieee754_rem_pio2f+0x238>
 802a316:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a31a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a31e:	edc0 6a00 	vstr	s13, [r0]
 802a322:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a326:	edc0 7a01 	vstr	s15, [r0, #4]
 802a32a:	f04f 30ff 	mov.w	r0, #4294967295
 802a32e:	e7e4      	b.n	802a2fa <__ieee754_rem_pio2f+0x62>
 802a330:	4b68      	ldr	r3, [pc, #416]	; (802a4d4 <__ieee754_rem_pio2f+0x23c>)
 802a332:	429d      	cmp	r5, r3
 802a334:	dc71      	bgt.n	802a41a <__ieee754_rem_pio2f+0x182>
 802a336:	f000 f8db 	bl	802a4f0 <fabsf>
 802a33a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802a4d8 <__ieee754_rem_pio2f+0x240>
 802a33e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a342:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a346:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a34a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a34e:	ee17 0a90 	vmov	r0, s15
 802a352:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a4c0 <__ieee754_rem_pio2f+0x228>
 802a356:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a35a:	281f      	cmp	r0, #31
 802a35c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a4cc <__ieee754_rem_pio2f+0x234>
 802a360:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a364:	eeb1 6a47 	vneg.f32	s12, s14
 802a368:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a36c:	ee16 2a90 	vmov	r2, s13
 802a370:	dc1c      	bgt.n	802a3ac <__ieee754_rem_pio2f+0x114>
 802a372:	495a      	ldr	r1, [pc, #360]	; (802a4dc <__ieee754_rem_pio2f+0x244>)
 802a374:	1e47      	subs	r7, r0, #1
 802a376:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802a37a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802a37e:	428b      	cmp	r3, r1
 802a380:	d014      	beq.n	802a3ac <__ieee754_rem_pio2f+0x114>
 802a382:	6022      	str	r2, [r4, #0]
 802a384:	ed94 7a00 	vldr	s14, [r4]
 802a388:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a38c:	2e00      	cmp	r6, #0
 802a38e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a392:	ed84 0a01 	vstr	s0, [r4, #4]
 802a396:	dab0      	bge.n	802a2fa <__ieee754_rem_pio2f+0x62>
 802a398:	eeb1 7a47 	vneg.f32	s14, s14
 802a39c:	eeb1 0a40 	vneg.f32	s0, s0
 802a3a0:	ed84 7a00 	vstr	s14, [r4]
 802a3a4:	ed84 0a01 	vstr	s0, [r4, #4]
 802a3a8:	4240      	negs	r0, r0
 802a3aa:	e7a6      	b.n	802a2fa <__ieee754_rem_pio2f+0x62>
 802a3ac:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a3b0:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802a3b4:	2908      	cmp	r1, #8
 802a3b6:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a3ba:	dde2      	ble.n	802a382 <__ieee754_rem_pio2f+0xea>
 802a3bc:	eddf 5a42 	vldr	s11, [pc, #264]	; 802a4c8 <__ieee754_rem_pio2f+0x230>
 802a3c0:	eef0 6a40 	vmov.f32	s13, s0
 802a3c4:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a3c8:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a3cc:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a3d0:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802a4d0 <__ieee754_rem_pio2f+0x238>
 802a3d4:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a3d8:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a3dc:	ee15 2a90 	vmov	r2, s11
 802a3e0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a3e4:	1a5b      	subs	r3, r3, r1
 802a3e6:	2b19      	cmp	r3, #25
 802a3e8:	dc04      	bgt.n	802a3f4 <__ieee754_rem_pio2f+0x15c>
 802a3ea:	edc4 5a00 	vstr	s11, [r4]
 802a3ee:	eeb0 0a66 	vmov.f32	s0, s13
 802a3f2:	e7c7      	b.n	802a384 <__ieee754_rem_pio2f+0xec>
 802a3f4:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802a4e0 <__ieee754_rem_pio2f+0x248>
 802a3f8:	eeb0 0a66 	vmov.f32	s0, s13
 802a3fc:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a400:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a404:	eddf 6a37 	vldr	s13, [pc, #220]	; 802a4e4 <__ieee754_rem_pio2f+0x24c>
 802a408:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a40c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a410:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a414:	ed84 7a00 	vstr	s14, [r4]
 802a418:	e7b4      	b.n	802a384 <__ieee754_rem_pio2f+0xec>
 802a41a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802a41e:	db06      	blt.n	802a42e <__ieee754_rem_pio2f+0x196>
 802a420:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a424:	edc0 7a01 	vstr	s15, [r0, #4]
 802a428:	edc0 7a00 	vstr	s15, [r0]
 802a42c:	e742      	b.n	802a2b4 <__ieee754_rem_pio2f+0x1c>
 802a42e:	15ea      	asrs	r2, r5, #23
 802a430:	3a86      	subs	r2, #134	; 0x86
 802a432:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a436:	ee07 3a90 	vmov	s15, r3
 802a43a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a43e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802a4e8 <__ieee754_rem_pio2f+0x250>
 802a442:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a446:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a44a:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a44e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a452:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a456:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a45a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a45e:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a462:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a466:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a46a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a46e:	edcd 7a05 	vstr	s15, [sp, #20]
 802a472:	d11e      	bne.n	802a4b2 <__ieee754_rem_pio2f+0x21a>
 802a474:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a47c:	bf14      	ite	ne
 802a47e:	2302      	movne	r3, #2
 802a480:	2301      	moveq	r3, #1
 802a482:	491a      	ldr	r1, [pc, #104]	; (802a4ec <__ieee754_rem_pio2f+0x254>)
 802a484:	9101      	str	r1, [sp, #4]
 802a486:	2102      	movs	r1, #2
 802a488:	9100      	str	r1, [sp, #0]
 802a48a:	a803      	add	r0, sp, #12
 802a48c:	4621      	mov	r1, r4
 802a48e:	f000 f89d 	bl	802a5cc <__kernel_rem_pio2f>
 802a492:	2e00      	cmp	r6, #0
 802a494:	f6bf af31 	bge.w	802a2fa <__ieee754_rem_pio2f+0x62>
 802a498:	edd4 7a00 	vldr	s15, [r4]
 802a49c:	eef1 7a67 	vneg.f32	s15, s15
 802a4a0:	edc4 7a00 	vstr	s15, [r4]
 802a4a4:	edd4 7a01 	vldr	s15, [r4, #4]
 802a4a8:	eef1 7a67 	vneg.f32	s15, s15
 802a4ac:	edc4 7a01 	vstr	s15, [r4, #4]
 802a4b0:	e77a      	b.n	802a3a8 <__ieee754_rem_pio2f+0x110>
 802a4b2:	2303      	movs	r3, #3
 802a4b4:	e7e5      	b.n	802a482 <__ieee754_rem_pio2f+0x1ea>
 802a4b6:	bf00      	nop
 802a4b8:	3f490fd8 	.word	0x3f490fd8
 802a4bc:	4016cbe3 	.word	0x4016cbe3
 802a4c0:	3fc90f80 	.word	0x3fc90f80
 802a4c4:	3fc90fd0 	.word	0x3fc90fd0
 802a4c8:	37354400 	.word	0x37354400
 802a4cc:	37354443 	.word	0x37354443
 802a4d0:	2e85a308 	.word	0x2e85a308
 802a4d4:	43490f80 	.word	0x43490f80
 802a4d8:	3f22f984 	.word	0x3f22f984
 802a4dc:	08042938 	.word	0x08042938
 802a4e0:	2e85a300 	.word	0x2e85a300
 802a4e4:	248d3132 	.word	0x248d3132
 802a4e8:	43800000 	.word	0x43800000
 802a4ec:	080429b8 	.word	0x080429b8

0802a4f0 <fabsf>:
 802a4f0:	ee10 3a10 	vmov	r3, s0
 802a4f4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a4f8:	ee00 3a10 	vmov	s0, r3
 802a4fc:	4770      	bx	lr
	...

0802a500 <scalbnf>:
 802a500:	ee10 3a10 	vmov	r3, s0
 802a504:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802a508:	d02b      	beq.n	802a562 <scalbnf+0x62>
 802a50a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802a50e:	d302      	bcc.n	802a516 <scalbnf+0x16>
 802a510:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a514:	4770      	bx	lr
 802a516:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802a51a:	d123      	bne.n	802a564 <scalbnf+0x64>
 802a51c:	4b24      	ldr	r3, [pc, #144]	; (802a5b0 <scalbnf+0xb0>)
 802a51e:	eddf 7a25 	vldr	s15, [pc, #148]	; 802a5b4 <scalbnf+0xb4>
 802a522:	4298      	cmp	r0, r3
 802a524:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a528:	db17      	blt.n	802a55a <scalbnf+0x5a>
 802a52a:	ee10 3a10 	vmov	r3, s0
 802a52e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a532:	3a19      	subs	r2, #25
 802a534:	f24c 3150 	movw	r1, #50000	; 0xc350
 802a538:	4288      	cmp	r0, r1
 802a53a:	dd15      	ble.n	802a568 <scalbnf+0x68>
 802a53c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a5b8 <scalbnf+0xb8>
 802a540:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802a5bc <scalbnf+0xbc>
 802a544:	ee10 3a10 	vmov	r3, s0
 802a548:	eeb0 7a67 	vmov.f32	s14, s15
 802a54c:	2b00      	cmp	r3, #0
 802a54e:	bfb8      	it	lt
 802a550:	eef0 7a66 	vmovlt.f32	s15, s13
 802a554:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a558:	4770      	bx	lr
 802a55a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a5c0 <scalbnf+0xc0>
 802a55e:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a562:	4770      	bx	lr
 802a564:	0dd2      	lsrs	r2, r2, #23
 802a566:	e7e5      	b.n	802a534 <scalbnf+0x34>
 802a568:	4410      	add	r0, r2
 802a56a:	28fe      	cmp	r0, #254	; 0xfe
 802a56c:	dce6      	bgt.n	802a53c <scalbnf+0x3c>
 802a56e:	2800      	cmp	r0, #0
 802a570:	dd06      	ble.n	802a580 <scalbnf+0x80>
 802a572:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a576:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a57a:	ee00 3a10 	vmov	s0, r3
 802a57e:	4770      	bx	lr
 802a580:	f110 0f16 	cmn.w	r0, #22
 802a584:	da09      	bge.n	802a59a <scalbnf+0x9a>
 802a586:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a5c0 <scalbnf+0xc0>
 802a58a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802a5c4 <scalbnf+0xc4>
 802a58e:	ee10 3a10 	vmov	r3, s0
 802a592:	eeb0 7a67 	vmov.f32	s14, s15
 802a596:	2b00      	cmp	r3, #0
 802a598:	e7d9      	b.n	802a54e <scalbnf+0x4e>
 802a59a:	3019      	adds	r0, #25
 802a59c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a5a0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a5a4:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802a5c8 <scalbnf+0xc8>
 802a5a8:	ee07 3a90 	vmov	s15, r3
 802a5ac:	e7d7      	b.n	802a55e <scalbnf+0x5e>
 802a5ae:	bf00      	nop
 802a5b0:	ffff3cb0 	.word	0xffff3cb0
 802a5b4:	4c000000 	.word	0x4c000000
 802a5b8:	7149f2ca 	.word	0x7149f2ca
 802a5bc:	f149f2ca 	.word	0xf149f2ca
 802a5c0:	0da24260 	.word	0x0da24260
 802a5c4:	8da24260 	.word	0x8da24260
 802a5c8:	33000000 	.word	0x33000000

0802a5cc <__kernel_rem_pio2f>:
 802a5cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a5d0:	ed2d 8b04 	vpush	{d8-d9}
 802a5d4:	b0d9      	sub	sp, #356	; 0x164
 802a5d6:	4688      	mov	r8, r1
 802a5d8:	9002      	str	r0, [sp, #8]
 802a5da:	49b8      	ldr	r1, [pc, #736]	; (802a8bc <__kernel_rem_pio2f+0x2f0>)
 802a5dc:	9866      	ldr	r0, [sp, #408]	; 0x198
 802a5de:	9301      	str	r3, [sp, #4]
 802a5e0:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802a5e4:	9901      	ldr	r1, [sp, #4]
 802a5e6:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802a5e8:	f101 3bff 	add.w	fp, r1, #4294967295
 802a5ec:	1d11      	adds	r1, r2, #4
 802a5ee:	db25      	blt.n	802a63c <__kernel_rem_pio2f+0x70>
 802a5f0:	1ed0      	subs	r0, r2, #3
 802a5f2:	bf48      	it	mi
 802a5f4:	1d10      	addmi	r0, r2, #4
 802a5f6:	10c0      	asrs	r0, r0, #3
 802a5f8:	1c45      	adds	r5, r0, #1
 802a5fa:	00e9      	lsls	r1, r5, #3
 802a5fc:	eba0 070b 	sub.w	r7, r0, fp
 802a600:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802a8cc <__kernel_rem_pio2f+0x300>
 802a604:	9103      	str	r1, [sp, #12]
 802a606:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802a60a:	eb0a 0c0b 	add.w	ip, sl, fp
 802a60e:	ae1c      	add	r6, sp, #112	; 0x70
 802a610:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802a614:	2400      	movs	r4, #0
 802a616:	4564      	cmp	r4, ip
 802a618:	dd12      	ble.n	802a640 <__kernel_rem_pio2f+0x74>
 802a61a:	9901      	ldr	r1, [sp, #4]
 802a61c:	ac1c      	add	r4, sp, #112	; 0x70
 802a61e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802a622:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802a626:	f04f 0c00 	mov.w	ip, #0
 802a62a:	45d4      	cmp	ip, sl
 802a62c:	dc27      	bgt.n	802a67e <__kernel_rem_pio2f+0xb2>
 802a62e:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a632:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802a8cc <__kernel_rem_pio2f+0x300>
 802a636:	4627      	mov	r7, r4
 802a638:	2600      	movs	r6, #0
 802a63a:	e016      	b.n	802a66a <__kernel_rem_pio2f+0x9e>
 802a63c:	2000      	movs	r0, #0
 802a63e:	e7db      	b.n	802a5f8 <__kernel_rem_pio2f+0x2c>
 802a640:	42e7      	cmn	r7, r4
 802a642:	bf5d      	ittte	pl
 802a644:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802a648:	ee07 1a90 	vmovpl	s15, r1
 802a64c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a650:	eef0 7a47 	vmovmi.f32	s15, s14
 802a654:	ece6 7a01 	vstmia	r6!, {s15}
 802a658:	3401      	adds	r4, #1
 802a65a:	e7dc      	b.n	802a616 <__kernel_rem_pio2f+0x4a>
 802a65c:	ecfe 6a01 	vldmia	lr!, {s13}
 802a660:	ed97 7a00 	vldr	s14, [r7]
 802a664:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a668:	3601      	adds	r6, #1
 802a66a:	455e      	cmp	r6, fp
 802a66c:	f1a7 0704 	sub.w	r7, r7, #4
 802a670:	ddf4      	ble.n	802a65c <__kernel_rem_pio2f+0x90>
 802a672:	ece9 7a01 	vstmia	r9!, {s15}
 802a676:	f10c 0c01 	add.w	ip, ip, #1
 802a67a:	3404      	adds	r4, #4
 802a67c:	e7d5      	b.n	802a62a <__kernel_rem_pio2f+0x5e>
 802a67e:	a908      	add	r1, sp, #32
 802a680:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a684:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802a688:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802a8c8 <__kernel_rem_pio2f+0x2fc>
 802a68c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802a8c4 <__kernel_rem_pio2f+0x2f8>
 802a690:	9105      	str	r1, [sp, #20]
 802a692:	9304      	str	r3, [sp, #16]
 802a694:	4656      	mov	r6, sl
 802a696:	00b3      	lsls	r3, r6, #2
 802a698:	9306      	str	r3, [sp, #24]
 802a69a:	ab58      	add	r3, sp, #352	; 0x160
 802a69c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a6a0:	ac08      	add	r4, sp, #32
 802a6a2:	ab44      	add	r3, sp, #272	; 0x110
 802a6a4:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802a6a8:	46a4      	mov	ip, r4
 802a6aa:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a6ae:	4637      	mov	r7, r6
 802a6b0:	2f00      	cmp	r7, #0
 802a6b2:	f1a0 0004 	sub.w	r0, r0, #4
 802a6b6:	dc4a      	bgt.n	802a74e <__kernel_rem_pio2f+0x182>
 802a6b8:	4628      	mov	r0, r5
 802a6ba:	9207      	str	r2, [sp, #28]
 802a6bc:	f7ff ff20 	bl	802a500 <scalbnf>
 802a6c0:	eeb0 8a40 	vmov.f32	s16, s0
 802a6c4:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802a6c8:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a6cc:	f7ff fcfc 	bl	802a0c8 <floorf>
 802a6d0:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802a6d4:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a6d8:	2d00      	cmp	r5, #0
 802a6da:	9a07      	ldr	r2, [sp, #28]
 802a6dc:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a6e0:	ee17 9a90 	vmov	r9, s15
 802a6e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a6e8:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a6ec:	dd41      	ble.n	802a772 <__kernel_rem_pio2f+0x1a6>
 802a6ee:	f106 3cff 	add.w	ip, r6, #4294967295
 802a6f2:	ab08      	add	r3, sp, #32
 802a6f4:	f1c5 0e08 	rsb	lr, r5, #8
 802a6f8:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802a6fc:	fa47 f00e 	asr.w	r0, r7, lr
 802a700:	4481      	add	r9, r0
 802a702:	fa00 f00e 	lsl.w	r0, r0, lr
 802a706:	1a3f      	subs	r7, r7, r0
 802a708:	f1c5 0007 	rsb	r0, r5, #7
 802a70c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802a710:	4107      	asrs	r7, r0
 802a712:	2f00      	cmp	r7, #0
 802a714:	dd3c      	ble.n	802a790 <__kernel_rem_pio2f+0x1c4>
 802a716:	f04f 0e00 	mov.w	lr, #0
 802a71a:	f109 0901 	add.w	r9, r9, #1
 802a71e:	4671      	mov	r1, lr
 802a720:	4576      	cmp	r6, lr
 802a722:	dc67      	bgt.n	802a7f4 <__kernel_rem_pio2f+0x228>
 802a724:	2d00      	cmp	r5, #0
 802a726:	dd03      	ble.n	802a730 <__kernel_rem_pio2f+0x164>
 802a728:	2d01      	cmp	r5, #1
 802a72a:	d074      	beq.n	802a816 <__kernel_rem_pio2f+0x24a>
 802a72c:	2d02      	cmp	r5, #2
 802a72e:	d07b      	beq.n	802a828 <__kernel_rem_pio2f+0x25c>
 802a730:	2f02      	cmp	r7, #2
 802a732:	d12d      	bne.n	802a790 <__kernel_rem_pio2f+0x1c4>
 802a734:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a738:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a73c:	b341      	cbz	r1, 802a790 <__kernel_rem_pio2f+0x1c4>
 802a73e:	4628      	mov	r0, r5
 802a740:	9207      	str	r2, [sp, #28]
 802a742:	f7ff fedd 	bl	802a500 <scalbnf>
 802a746:	9a07      	ldr	r2, [sp, #28]
 802a748:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a74c:	e020      	b.n	802a790 <__kernel_rem_pio2f+0x1c4>
 802a74e:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a752:	3f01      	subs	r7, #1
 802a754:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a758:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a75c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a760:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a764:	ecac 0a01 	vstmia	ip!, {s0}
 802a768:	ed90 0a00 	vldr	s0, [r0]
 802a76c:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a770:	e79e      	b.n	802a6b0 <__kernel_rem_pio2f+0xe4>
 802a772:	d105      	bne.n	802a780 <__kernel_rem_pio2f+0x1b4>
 802a774:	1e70      	subs	r0, r6, #1
 802a776:	ab08      	add	r3, sp, #32
 802a778:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802a77c:	11ff      	asrs	r7, r7, #7
 802a77e:	e7c8      	b.n	802a712 <__kernel_rem_pio2f+0x146>
 802a780:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a784:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a78c:	da30      	bge.n	802a7f0 <__kernel_rem_pio2f+0x224>
 802a78e:	2700      	movs	r7, #0
 802a790:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a798:	f040 809a 	bne.w	802a8d0 <__kernel_rem_pio2f+0x304>
 802a79c:	1e74      	subs	r4, r6, #1
 802a79e:	46a4      	mov	ip, r4
 802a7a0:	2100      	movs	r1, #0
 802a7a2:	45d4      	cmp	ip, sl
 802a7a4:	da47      	bge.n	802a836 <__kernel_rem_pio2f+0x26a>
 802a7a6:	2900      	cmp	r1, #0
 802a7a8:	d063      	beq.n	802a872 <__kernel_rem_pio2f+0x2a6>
 802a7aa:	ab08      	add	r3, sp, #32
 802a7ac:	3d08      	subs	r5, #8
 802a7ae:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a7b2:	2b00      	cmp	r3, #0
 802a7b4:	d07f      	beq.n	802a8b6 <__kernel_rem_pio2f+0x2ea>
 802a7b6:	4628      	mov	r0, r5
 802a7b8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a7bc:	f7ff fea0 	bl	802a500 <scalbnf>
 802a7c0:	1c63      	adds	r3, r4, #1
 802a7c2:	aa44      	add	r2, sp, #272	; 0x110
 802a7c4:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802a8c8 <__kernel_rem_pio2f+0x2fc>
 802a7c8:	0099      	lsls	r1, r3, #2
 802a7ca:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a7ce:	4623      	mov	r3, r4
 802a7d0:	2b00      	cmp	r3, #0
 802a7d2:	f280 80ad 	bge.w	802a930 <__kernel_rem_pio2f+0x364>
 802a7d6:	4623      	mov	r3, r4
 802a7d8:	2b00      	cmp	r3, #0
 802a7da:	f2c0 80cb 	blt.w	802a974 <__kernel_rem_pio2f+0x3a8>
 802a7de:	aa44      	add	r2, sp, #272	; 0x110
 802a7e0:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802a7e4:	4e36      	ldr	r6, [pc, #216]	; (802a8c0 <__kernel_rem_pio2f+0x2f4>)
 802a7e6:	eddf 7a39 	vldr	s15, [pc, #228]	; 802a8cc <__kernel_rem_pio2f+0x300>
 802a7ea:	2000      	movs	r0, #0
 802a7ec:	1ae2      	subs	r2, r4, r3
 802a7ee:	e0b6      	b.n	802a95e <__kernel_rem_pio2f+0x392>
 802a7f0:	2702      	movs	r7, #2
 802a7f2:	e790      	b.n	802a716 <__kernel_rem_pio2f+0x14a>
 802a7f4:	6820      	ldr	r0, [r4, #0]
 802a7f6:	b949      	cbnz	r1, 802a80c <__kernel_rem_pio2f+0x240>
 802a7f8:	b118      	cbz	r0, 802a802 <__kernel_rem_pio2f+0x236>
 802a7fa:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802a7fe:	6020      	str	r0, [r4, #0]
 802a800:	2001      	movs	r0, #1
 802a802:	f10e 0e01 	add.w	lr, lr, #1
 802a806:	3404      	adds	r4, #4
 802a808:	4601      	mov	r1, r0
 802a80a:	e789      	b.n	802a720 <__kernel_rem_pio2f+0x154>
 802a80c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802a810:	6020      	str	r0, [r4, #0]
 802a812:	4608      	mov	r0, r1
 802a814:	e7f5      	b.n	802a802 <__kernel_rem_pio2f+0x236>
 802a816:	1e74      	subs	r4, r6, #1
 802a818:	ab08      	add	r3, sp, #32
 802a81a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a81e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802a822:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802a826:	e783      	b.n	802a730 <__kernel_rem_pio2f+0x164>
 802a828:	1e74      	subs	r4, r6, #1
 802a82a:	ab08      	add	r3, sp, #32
 802a82c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a830:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802a834:	e7f5      	b.n	802a822 <__kernel_rem_pio2f+0x256>
 802a836:	ab08      	add	r3, sp, #32
 802a838:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802a83c:	f10c 3cff 	add.w	ip, ip, #4294967295
 802a840:	4301      	orrs	r1, r0
 802a842:	e7ae      	b.n	802a7a2 <__kernel_rem_pio2f+0x1d6>
 802a844:	3001      	adds	r0, #1
 802a846:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802a84a:	2f00      	cmp	r7, #0
 802a84c:	d0fa      	beq.n	802a844 <__kernel_rem_pio2f+0x278>
 802a84e:	9b06      	ldr	r3, [sp, #24]
 802a850:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802a854:	eb0d 0403 	add.w	r4, sp, r3
 802a858:	9b01      	ldr	r3, [sp, #4]
 802a85a:	18f7      	adds	r7, r6, r3
 802a85c:	ab1c      	add	r3, sp, #112	; 0x70
 802a85e:	f106 0c01 	add.w	ip, r6, #1
 802a862:	3c4c      	subs	r4, #76	; 0x4c
 802a864:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802a868:	4430      	add	r0, r6
 802a86a:	4560      	cmp	r0, ip
 802a86c:	da04      	bge.n	802a878 <__kernel_rem_pio2f+0x2ac>
 802a86e:	4606      	mov	r6, r0
 802a870:	e711      	b.n	802a696 <__kernel_rem_pio2f+0xca>
 802a872:	9c05      	ldr	r4, [sp, #20]
 802a874:	2001      	movs	r0, #1
 802a876:	e7e6      	b.n	802a846 <__kernel_rem_pio2f+0x27a>
 802a878:	9b04      	ldr	r3, [sp, #16]
 802a87a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a87e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802a882:	9306      	str	r3, [sp, #24]
 802a884:	ee07 3a90 	vmov	s15, r3
 802a888:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a88c:	2600      	movs	r6, #0
 802a88e:	ece7 7a01 	vstmia	r7!, {s15}
 802a892:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a8cc <__kernel_rem_pio2f+0x300>
 802a896:	46b9      	mov	r9, r7
 802a898:	455e      	cmp	r6, fp
 802a89a:	dd04      	ble.n	802a8a6 <__kernel_rem_pio2f+0x2da>
 802a89c:	ece4 7a01 	vstmia	r4!, {s15}
 802a8a0:	f10c 0c01 	add.w	ip, ip, #1
 802a8a4:	e7e1      	b.n	802a86a <__kernel_rem_pio2f+0x29e>
 802a8a6:	ecfe 6a01 	vldmia	lr!, {s13}
 802a8aa:	ed39 7a01 	vldmdb	r9!, {s14}
 802a8ae:	3601      	adds	r6, #1
 802a8b0:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a8b4:	e7f0      	b.n	802a898 <__kernel_rem_pio2f+0x2cc>
 802a8b6:	3c01      	subs	r4, #1
 802a8b8:	e777      	b.n	802a7aa <__kernel_rem_pio2f+0x1de>
 802a8ba:	bf00      	nop
 802a8bc:	08042cfc 	.word	0x08042cfc
 802a8c0:	08042cd0 	.word	0x08042cd0
 802a8c4:	43800000 	.word	0x43800000
 802a8c8:	3b800000 	.word	0x3b800000
 802a8cc:	00000000 	.word	0x00000000
 802a8d0:	9b03      	ldr	r3, [sp, #12]
 802a8d2:	eeb0 0a48 	vmov.f32	s0, s16
 802a8d6:	1a98      	subs	r0, r3, r2
 802a8d8:	f7ff fe12 	bl	802a500 <scalbnf>
 802a8dc:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802a8c4 <__kernel_rem_pio2f+0x2f8>
 802a8e0:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802a8e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a8e8:	db19      	blt.n	802a91e <__kernel_rem_pio2f+0x352>
 802a8ea:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802a8c8 <__kernel_rem_pio2f+0x2fc>
 802a8ee:	ee60 7a27 	vmul.f32	s15, s0, s15
 802a8f2:	aa08      	add	r2, sp, #32
 802a8f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a8f8:	1c74      	adds	r4, r6, #1
 802a8fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a8fe:	3508      	adds	r5, #8
 802a900:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802a904:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a908:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a90c:	ee10 3a10 	vmov	r3, s0
 802a910:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a914:	ee17 3a90 	vmov	r3, s15
 802a918:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802a91c:	e74b      	b.n	802a7b6 <__kernel_rem_pio2f+0x1ea>
 802a91e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a922:	aa08      	add	r2, sp, #32
 802a924:	ee10 3a10 	vmov	r3, s0
 802a928:	4634      	mov	r4, r6
 802a92a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a92e:	e742      	b.n	802a7b6 <__kernel_rem_pio2f+0x1ea>
 802a930:	a808      	add	r0, sp, #32
 802a932:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802a936:	9001      	str	r0, [sp, #4]
 802a938:	ee07 0a90 	vmov	s15, r0
 802a93c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a940:	3b01      	subs	r3, #1
 802a942:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a946:	ee20 0a07 	vmul.f32	s0, s0, s14
 802a94a:	ed62 7a01 	vstmdb	r2!, {s15}
 802a94e:	e73f      	b.n	802a7d0 <__kernel_rem_pio2f+0x204>
 802a950:	ecf6 6a01 	vldmia	r6!, {s13}
 802a954:	ecb5 7a01 	vldmia	r5!, {s14}
 802a958:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a95c:	3001      	adds	r0, #1
 802a95e:	4550      	cmp	r0, sl
 802a960:	dc01      	bgt.n	802a966 <__kernel_rem_pio2f+0x39a>
 802a962:	4290      	cmp	r0, r2
 802a964:	ddf4      	ble.n	802a950 <__kernel_rem_pio2f+0x384>
 802a966:	a858      	add	r0, sp, #352	; 0x160
 802a968:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802a96c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802a970:	3b01      	subs	r3, #1
 802a972:	e731      	b.n	802a7d8 <__kernel_rem_pio2f+0x20c>
 802a974:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a976:	2b02      	cmp	r3, #2
 802a978:	dc09      	bgt.n	802a98e <__kernel_rem_pio2f+0x3c2>
 802a97a:	2b00      	cmp	r3, #0
 802a97c:	dc2b      	bgt.n	802a9d6 <__kernel_rem_pio2f+0x40a>
 802a97e:	d044      	beq.n	802aa0a <__kernel_rem_pio2f+0x43e>
 802a980:	f009 0007 	and.w	r0, r9, #7
 802a984:	b059      	add	sp, #356	; 0x164
 802a986:	ecbd 8b04 	vpop	{d8-d9}
 802a98a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a98e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a990:	2b03      	cmp	r3, #3
 802a992:	d1f5      	bne.n	802a980 <__kernel_rem_pio2f+0x3b4>
 802a994:	aa30      	add	r2, sp, #192	; 0xc0
 802a996:	1f0b      	subs	r3, r1, #4
 802a998:	4413      	add	r3, r2
 802a99a:	461a      	mov	r2, r3
 802a99c:	4620      	mov	r0, r4
 802a99e:	2800      	cmp	r0, #0
 802a9a0:	f1a2 0204 	sub.w	r2, r2, #4
 802a9a4:	dc52      	bgt.n	802aa4c <__kernel_rem_pio2f+0x480>
 802a9a6:	4622      	mov	r2, r4
 802a9a8:	2a01      	cmp	r2, #1
 802a9aa:	f1a3 0304 	sub.w	r3, r3, #4
 802a9ae:	dc5d      	bgt.n	802aa6c <__kernel_rem_pio2f+0x4a0>
 802a9b0:	ab30      	add	r3, sp, #192	; 0xc0
 802a9b2:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802a8cc <__kernel_rem_pio2f+0x300>
 802a9b6:	440b      	add	r3, r1
 802a9b8:	2c01      	cmp	r4, #1
 802a9ba:	dc67      	bgt.n	802aa8c <__kernel_rem_pio2f+0x4c0>
 802a9bc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802a9c0:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802a9c4:	2f00      	cmp	r7, #0
 802a9c6:	d167      	bne.n	802aa98 <__kernel_rem_pio2f+0x4cc>
 802a9c8:	edc8 6a00 	vstr	s13, [r8]
 802a9cc:	ed88 7a01 	vstr	s14, [r8, #4]
 802a9d0:	edc8 7a02 	vstr	s15, [r8, #8]
 802a9d4:	e7d4      	b.n	802a980 <__kernel_rem_pio2f+0x3b4>
 802a9d6:	ab30      	add	r3, sp, #192	; 0xc0
 802a9d8:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802a8cc <__kernel_rem_pio2f+0x300>
 802a9dc:	440b      	add	r3, r1
 802a9de:	4622      	mov	r2, r4
 802a9e0:	2a00      	cmp	r2, #0
 802a9e2:	da24      	bge.n	802aa2e <__kernel_rem_pio2f+0x462>
 802a9e4:	b34f      	cbz	r7, 802aa3a <__kernel_rem_pio2f+0x46e>
 802a9e6:	eef1 7a47 	vneg.f32	s15, s14
 802a9ea:	edc8 7a00 	vstr	s15, [r8]
 802a9ee:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802a9f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a9f6:	aa31      	add	r2, sp, #196	; 0xc4
 802a9f8:	2301      	movs	r3, #1
 802a9fa:	429c      	cmp	r4, r3
 802a9fc:	da20      	bge.n	802aa40 <__kernel_rem_pio2f+0x474>
 802a9fe:	b10f      	cbz	r7, 802aa04 <__kernel_rem_pio2f+0x438>
 802aa00:	eef1 7a67 	vneg.f32	s15, s15
 802aa04:	edc8 7a01 	vstr	s15, [r8, #4]
 802aa08:	e7ba      	b.n	802a980 <__kernel_rem_pio2f+0x3b4>
 802aa0a:	ab30      	add	r3, sp, #192	; 0xc0
 802aa0c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802a8cc <__kernel_rem_pio2f+0x300>
 802aa10:	440b      	add	r3, r1
 802aa12:	2c00      	cmp	r4, #0
 802aa14:	da05      	bge.n	802aa22 <__kernel_rem_pio2f+0x456>
 802aa16:	b10f      	cbz	r7, 802aa1c <__kernel_rem_pio2f+0x450>
 802aa18:	eef1 7a67 	vneg.f32	s15, s15
 802aa1c:	edc8 7a00 	vstr	s15, [r8]
 802aa20:	e7ae      	b.n	802a980 <__kernel_rem_pio2f+0x3b4>
 802aa22:	ed33 7a01 	vldmdb	r3!, {s14}
 802aa26:	3c01      	subs	r4, #1
 802aa28:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aa2c:	e7f1      	b.n	802aa12 <__kernel_rem_pio2f+0x446>
 802aa2e:	ed73 7a01 	vldmdb	r3!, {s15}
 802aa32:	3a01      	subs	r2, #1
 802aa34:	ee37 7a27 	vadd.f32	s14, s14, s15
 802aa38:	e7d2      	b.n	802a9e0 <__kernel_rem_pio2f+0x414>
 802aa3a:	eef0 7a47 	vmov.f32	s15, s14
 802aa3e:	e7d4      	b.n	802a9ea <__kernel_rem_pio2f+0x41e>
 802aa40:	ecb2 7a01 	vldmia	r2!, {s14}
 802aa44:	3301      	adds	r3, #1
 802aa46:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aa4a:	e7d6      	b.n	802a9fa <__kernel_rem_pio2f+0x42e>
 802aa4c:	edd2 7a00 	vldr	s15, [r2]
 802aa50:	edd2 6a01 	vldr	s13, [r2, #4]
 802aa54:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802aa58:	3801      	subs	r0, #1
 802aa5a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aa5e:	ed82 7a00 	vstr	s14, [r2]
 802aa62:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802aa66:	edc2 7a01 	vstr	s15, [r2, #4]
 802aa6a:	e798      	b.n	802a99e <__kernel_rem_pio2f+0x3d2>
 802aa6c:	edd3 7a00 	vldr	s15, [r3]
 802aa70:	edd3 6a01 	vldr	s13, [r3, #4]
 802aa74:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802aa78:	3a01      	subs	r2, #1
 802aa7a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aa7e:	ed83 7a00 	vstr	s14, [r3]
 802aa82:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802aa86:	edc3 7a01 	vstr	s15, [r3, #4]
 802aa8a:	e78d      	b.n	802a9a8 <__kernel_rem_pio2f+0x3dc>
 802aa8c:	ed33 7a01 	vldmdb	r3!, {s14}
 802aa90:	3c01      	subs	r4, #1
 802aa92:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aa96:	e78f      	b.n	802a9b8 <__kernel_rem_pio2f+0x3ec>
 802aa98:	eef1 6a66 	vneg.f32	s13, s13
 802aa9c:	eeb1 7a47 	vneg.f32	s14, s14
 802aaa0:	edc8 6a00 	vstr	s13, [r8]
 802aaa4:	ed88 7a01 	vstr	s14, [r8, #4]
 802aaa8:	eef1 7a67 	vneg.f32	s15, s15
 802aaac:	e790      	b.n	802a9d0 <__kernel_rem_pio2f+0x404>
 802aaae:	bf00      	nop

0802aab0 <abort>:
 802aab0:	b508      	push	{r3, lr}
 802aab2:	2006      	movs	r0, #6
 802aab4:	f000 fa3a 	bl	802af2c <raise>
 802aab8:	2001      	movs	r0, #1
 802aaba:	f7d7 f85f 	bl	8001b7c <_exit>
	...

0802aac0 <__assert_func>:
 802aac0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802aac2:	4614      	mov	r4, r2
 802aac4:	461a      	mov	r2, r3
 802aac6:	4b09      	ldr	r3, [pc, #36]	; (802aaec <__assert_func+0x2c>)
 802aac8:	681b      	ldr	r3, [r3, #0]
 802aaca:	4605      	mov	r5, r0
 802aacc:	68d8      	ldr	r0, [r3, #12]
 802aace:	b14c      	cbz	r4, 802aae4 <__assert_func+0x24>
 802aad0:	4b07      	ldr	r3, [pc, #28]	; (802aaf0 <__assert_func+0x30>)
 802aad2:	9100      	str	r1, [sp, #0]
 802aad4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802aad8:	4906      	ldr	r1, [pc, #24]	; (802aaf4 <__assert_func+0x34>)
 802aada:	462b      	mov	r3, r5
 802aadc:	f000 f982 	bl	802ade4 <fiprintf>
 802aae0:	f7ff ffe6 	bl	802aab0 <abort>
 802aae4:	4b04      	ldr	r3, [pc, #16]	; (802aaf8 <__assert_func+0x38>)
 802aae6:	461c      	mov	r4, r3
 802aae8:	e7f3      	b.n	802aad2 <__assert_func+0x12>
 802aaea:	bf00      	nop
 802aaec:	2000017c 	.word	0x2000017c
 802aaf0:	08042d08 	.word	0x08042d08
 802aaf4:	08042d15 	.word	0x08042d15
 802aaf8:	08042d43 	.word	0x08042d43

0802aafc <atexit>:
 802aafc:	2300      	movs	r3, #0
 802aafe:	4601      	mov	r1, r0
 802ab00:	461a      	mov	r2, r3
 802ab02:	4618      	mov	r0, r3
 802ab04:	f000 bb16 	b.w	802b134 <__register_exitproc>

0802ab08 <malloc>:
 802ab08:	4b02      	ldr	r3, [pc, #8]	; (802ab14 <malloc+0xc>)
 802ab0a:	4601      	mov	r1, r0
 802ab0c:	6818      	ldr	r0, [r3, #0]
 802ab0e:	f000 b82b 	b.w	802ab68 <_malloc_r>
 802ab12:	bf00      	nop
 802ab14:	2000017c 	.word	0x2000017c

0802ab18 <free>:
 802ab18:	4b02      	ldr	r3, [pc, #8]	; (802ab24 <free+0xc>)
 802ab1a:	4601      	mov	r1, r0
 802ab1c:	6818      	ldr	r0, [r3, #0]
 802ab1e:	f000 bb67 	b.w	802b1f0 <_free_r>
 802ab22:	bf00      	nop
 802ab24:	2000017c 	.word	0x2000017c

0802ab28 <sbrk_aligned>:
 802ab28:	b570      	push	{r4, r5, r6, lr}
 802ab2a:	4e0e      	ldr	r6, [pc, #56]	; (802ab64 <sbrk_aligned+0x3c>)
 802ab2c:	460c      	mov	r4, r1
 802ab2e:	6831      	ldr	r1, [r6, #0]
 802ab30:	4605      	mov	r5, r0
 802ab32:	b911      	cbnz	r1, 802ab3a <sbrk_aligned+0x12>
 802ab34:	f000 faa0 	bl	802b078 <_sbrk_r>
 802ab38:	6030      	str	r0, [r6, #0]
 802ab3a:	4621      	mov	r1, r4
 802ab3c:	4628      	mov	r0, r5
 802ab3e:	f000 fa9b 	bl	802b078 <_sbrk_r>
 802ab42:	1c43      	adds	r3, r0, #1
 802ab44:	d00a      	beq.n	802ab5c <sbrk_aligned+0x34>
 802ab46:	1cc4      	adds	r4, r0, #3
 802ab48:	f024 0403 	bic.w	r4, r4, #3
 802ab4c:	42a0      	cmp	r0, r4
 802ab4e:	d007      	beq.n	802ab60 <sbrk_aligned+0x38>
 802ab50:	1a21      	subs	r1, r4, r0
 802ab52:	4628      	mov	r0, r5
 802ab54:	f000 fa90 	bl	802b078 <_sbrk_r>
 802ab58:	3001      	adds	r0, #1
 802ab5a:	d101      	bne.n	802ab60 <sbrk_aligned+0x38>
 802ab5c:	f04f 34ff 	mov.w	r4, #4294967295
 802ab60:	4620      	mov	r0, r4
 802ab62:	bd70      	pop	{r4, r5, r6, pc}
 802ab64:	20013c14 	.word	0x20013c14

0802ab68 <_malloc_r>:
 802ab68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ab6c:	1ccd      	adds	r5, r1, #3
 802ab6e:	f025 0503 	bic.w	r5, r5, #3
 802ab72:	3508      	adds	r5, #8
 802ab74:	2d0c      	cmp	r5, #12
 802ab76:	bf38      	it	cc
 802ab78:	250c      	movcc	r5, #12
 802ab7a:	2d00      	cmp	r5, #0
 802ab7c:	4607      	mov	r7, r0
 802ab7e:	db01      	blt.n	802ab84 <_malloc_r+0x1c>
 802ab80:	42a9      	cmp	r1, r5
 802ab82:	d905      	bls.n	802ab90 <_malloc_r+0x28>
 802ab84:	230c      	movs	r3, #12
 802ab86:	603b      	str	r3, [r7, #0]
 802ab88:	2600      	movs	r6, #0
 802ab8a:	4630      	mov	r0, r6
 802ab8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ab90:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802ac64 <_malloc_r+0xfc>
 802ab94:	f000 f868 	bl	802ac68 <__malloc_lock>
 802ab98:	f8d8 3000 	ldr.w	r3, [r8]
 802ab9c:	461c      	mov	r4, r3
 802ab9e:	bb5c      	cbnz	r4, 802abf8 <_malloc_r+0x90>
 802aba0:	4629      	mov	r1, r5
 802aba2:	4638      	mov	r0, r7
 802aba4:	f7ff ffc0 	bl	802ab28 <sbrk_aligned>
 802aba8:	1c43      	adds	r3, r0, #1
 802abaa:	4604      	mov	r4, r0
 802abac:	d155      	bne.n	802ac5a <_malloc_r+0xf2>
 802abae:	f8d8 4000 	ldr.w	r4, [r8]
 802abb2:	4626      	mov	r6, r4
 802abb4:	2e00      	cmp	r6, #0
 802abb6:	d145      	bne.n	802ac44 <_malloc_r+0xdc>
 802abb8:	2c00      	cmp	r4, #0
 802abba:	d048      	beq.n	802ac4e <_malloc_r+0xe6>
 802abbc:	6823      	ldr	r3, [r4, #0]
 802abbe:	4631      	mov	r1, r6
 802abc0:	4638      	mov	r0, r7
 802abc2:	eb04 0903 	add.w	r9, r4, r3
 802abc6:	f000 fa57 	bl	802b078 <_sbrk_r>
 802abca:	4581      	cmp	r9, r0
 802abcc:	d13f      	bne.n	802ac4e <_malloc_r+0xe6>
 802abce:	6821      	ldr	r1, [r4, #0]
 802abd0:	1a6d      	subs	r5, r5, r1
 802abd2:	4629      	mov	r1, r5
 802abd4:	4638      	mov	r0, r7
 802abd6:	f7ff ffa7 	bl	802ab28 <sbrk_aligned>
 802abda:	3001      	adds	r0, #1
 802abdc:	d037      	beq.n	802ac4e <_malloc_r+0xe6>
 802abde:	6823      	ldr	r3, [r4, #0]
 802abe0:	442b      	add	r3, r5
 802abe2:	6023      	str	r3, [r4, #0]
 802abe4:	f8d8 3000 	ldr.w	r3, [r8]
 802abe8:	2b00      	cmp	r3, #0
 802abea:	d038      	beq.n	802ac5e <_malloc_r+0xf6>
 802abec:	685a      	ldr	r2, [r3, #4]
 802abee:	42a2      	cmp	r2, r4
 802abf0:	d12b      	bne.n	802ac4a <_malloc_r+0xe2>
 802abf2:	2200      	movs	r2, #0
 802abf4:	605a      	str	r2, [r3, #4]
 802abf6:	e00f      	b.n	802ac18 <_malloc_r+0xb0>
 802abf8:	6822      	ldr	r2, [r4, #0]
 802abfa:	1b52      	subs	r2, r2, r5
 802abfc:	d41f      	bmi.n	802ac3e <_malloc_r+0xd6>
 802abfe:	2a0b      	cmp	r2, #11
 802ac00:	d917      	bls.n	802ac32 <_malloc_r+0xca>
 802ac02:	1961      	adds	r1, r4, r5
 802ac04:	42a3      	cmp	r3, r4
 802ac06:	6025      	str	r5, [r4, #0]
 802ac08:	bf18      	it	ne
 802ac0a:	6059      	strne	r1, [r3, #4]
 802ac0c:	6863      	ldr	r3, [r4, #4]
 802ac0e:	bf08      	it	eq
 802ac10:	f8c8 1000 	streq.w	r1, [r8]
 802ac14:	5162      	str	r2, [r4, r5]
 802ac16:	604b      	str	r3, [r1, #4]
 802ac18:	4638      	mov	r0, r7
 802ac1a:	f104 060b 	add.w	r6, r4, #11
 802ac1e:	f000 f829 	bl	802ac74 <__malloc_unlock>
 802ac22:	f026 0607 	bic.w	r6, r6, #7
 802ac26:	1d23      	adds	r3, r4, #4
 802ac28:	1af2      	subs	r2, r6, r3
 802ac2a:	d0ae      	beq.n	802ab8a <_malloc_r+0x22>
 802ac2c:	1b9b      	subs	r3, r3, r6
 802ac2e:	50a3      	str	r3, [r4, r2]
 802ac30:	e7ab      	b.n	802ab8a <_malloc_r+0x22>
 802ac32:	42a3      	cmp	r3, r4
 802ac34:	6862      	ldr	r2, [r4, #4]
 802ac36:	d1dd      	bne.n	802abf4 <_malloc_r+0x8c>
 802ac38:	f8c8 2000 	str.w	r2, [r8]
 802ac3c:	e7ec      	b.n	802ac18 <_malloc_r+0xb0>
 802ac3e:	4623      	mov	r3, r4
 802ac40:	6864      	ldr	r4, [r4, #4]
 802ac42:	e7ac      	b.n	802ab9e <_malloc_r+0x36>
 802ac44:	4634      	mov	r4, r6
 802ac46:	6876      	ldr	r6, [r6, #4]
 802ac48:	e7b4      	b.n	802abb4 <_malloc_r+0x4c>
 802ac4a:	4613      	mov	r3, r2
 802ac4c:	e7cc      	b.n	802abe8 <_malloc_r+0x80>
 802ac4e:	230c      	movs	r3, #12
 802ac50:	603b      	str	r3, [r7, #0]
 802ac52:	4638      	mov	r0, r7
 802ac54:	f000 f80e 	bl	802ac74 <__malloc_unlock>
 802ac58:	e797      	b.n	802ab8a <_malloc_r+0x22>
 802ac5a:	6025      	str	r5, [r4, #0]
 802ac5c:	e7dc      	b.n	802ac18 <_malloc_r+0xb0>
 802ac5e:	605b      	str	r3, [r3, #4]
 802ac60:	deff      	udf	#255	; 0xff
 802ac62:	bf00      	nop
 802ac64:	20013c10 	.word	0x20013c10

0802ac68 <__malloc_lock>:
 802ac68:	4801      	ldr	r0, [pc, #4]	; (802ac70 <__malloc_lock+0x8>)
 802ac6a:	f000 ba52 	b.w	802b112 <__retarget_lock_acquire_recursive>
 802ac6e:	bf00      	nop
 802ac70:	20013d59 	.word	0x20013d59

0802ac74 <__malloc_unlock>:
 802ac74:	4801      	ldr	r0, [pc, #4]	; (802ac7c <__malloc_unlock+0x8>)
 802ac76:	f000 ba4d 	b.w	802b114 <__retarget_lock_release_recursive>
 802ac7a:	bf00      	nop
 802ac7c:	20013d59 	.word	0x20013d59

0802ac80 <__cxa_atexit>:
 802ac80:	b510      	push	{r4, lr}
 802ac82:	4c05      	ldr	r4, [pc, #20]	; (802ac98 <__cxa_atexit+0x18>)
 802ac84:	4613      	mov	r3, r2
 802ac86:	b12c      	cbz	r4, 802ac94 <__cxa_atexit+0x14>
 802ac88:	460a      	mov	r2, r1
 802ac8a:	4601      	mov	r1, r0
 802ac8c:	2002      	movs	r0, #2
 802ac8e:	f000 fa51 	bl	802b134 <__register_exitproc>
 802ac92:	bd10      	pop	{r4, pc}
 802ac94:	4620      	mov	r0, r4
 802ac96:	e7fc      	b.n	802ac92 <__cxa_atexit+0x12>
 802ac98:	0802b135 	.word	0x0802b135

0802ac9c <std>:
 802ac9c:	2300      	movs	r3, #0
 802ac9e:	b510      	push	{r4, lr}
 802aca0:	4604      	mov	r4, r0
 802aca2:	e9c0 3300 	strd	r3, r3, [r0]
 802aca6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802acaa:	6083      	str	r3, [r0, #8]
 802acac:	8181      	strh	r1, [r0, #12]
 802acae:	6643      	str	r3, [r0, #100]	; 0x64
 802acb0:	81c2      	strh	r2, [r0, #14]
 802acb2:	6183      	str	r3, [r0, #24]
 802acb4:	4619      	mov	r1, r3
 802acb6:	2208      	movs	r2, #8
 802acb8:	305c      	adds	r0, #92	; 0x5c
 802acba:	f000 f906 	bl	802aeca <memset>
 802acbe:	4b0d      	ldr	r3, [pc, #52]	; (802acf4 <std+0x58>)
 802acc0:	6263      	str	r3, [r4, #36]	; 0x24
 802acc2:	4b0d      	ldr	r3, [pc, #52]	; (802acf8 <std+0x5c>)
 802acc4:	62a3      	str	r3, [r4, #40]	; 0x28
 802acc6:	4b0d      	ldr	r3, [pc, #52]	; (802acfc <std+0x60>)
 802acc8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802acca:	4b0d      	ldr	r3, [pc, #52]	; (802ad00 <std+0x64>)
 802accc:	6323      	str	r3, [r4, #48]	; 0x30
 802acce:	4b0d      	ldr	r3, [pc, #52]	; (802ad04 <std+0x68>)
 802acd0:	6224      	str	r4, [r4, #32]
 802acd2:	429c      	cmp	r4, r3
 802acd4:	d006      	beq.n	802ace4 <std+0x48>
 802acd6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802acda:	4294      	cmp	r4, r2
 802acdc:	d002      	beq.n	802ace4 <std+0x48>
 802acde:	33d0      	adds	r3, #208	; 0xd0
 802ace0:	429c      	cmp	r4, r3
 802ace2:	d105      	bne.n	802acf0 <std+0x54>
 802ace4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802ace8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802acec:	f000 ba10 	b.w	802b110 <__retarget_lock_init_recursive>
 802acf0:	bd10      	pop	{r4, pc}
 802acf2:	bf00      	nop
 802acf4:	0802ae45 	.word	0x0802ae45
 802acf8:	0802ae67 	.word	0x0802ae67
 802acfc:	0802ae9f 	.word	0x0802ae9f
 802ad00:	0802aec3 	.word	0x0802aec3
 802ad04:	20013c18 	.word	0x20013c18

0802ad08 <stdio_exit_handler>:
 802ad08:	4a02      	ldr	r2, [pc, #8]	; (802ad14 <stdio_exit_handler+0xc>)
 802ad0a:	4903      	ldr	r1, [pc, #12]	; (802ad18 <stdio_exit_handler+0x10>)
 802ad0c:	4803      	ldr	r0, [pc, #12]	; (802ad1c <stdio_exit_handler+0x14>)
 802ad0e:	f000 b87b 	b.w	802ae08 <_fwalk_sglue>
 802ad12:	bf00      	nop
 802ad14:	20000124 	.word	0x20000124
 802ad18:	0802b93d 	.word	0x0802b93d
 802ad1c:	20000130 	.word	0x20000130

0802ad20 <cleanup_stdio>:
 802ad20:	6841      	ldr	r1, [r0, #4]
 802ad22:	4b0c      	ldr	r3, [pc, #48]	; (802ad54 <cleanup_stdio+0x34>)
 802ad24:	4299      	cmp	r1, r3
 802ad26:	b510      	push	{r4, lr}
 802ad28:	4604      	mov	r4, r0
 802ad2a:	d001      	beq.n	802ad30 <cleanup_stdio+0x10>
 802ad2c:	f000 fe06 	bl	802b93c <_fflush_r>
 802ad30:	68a1      	ldr	r1, [r4, #8]
 802ad32:	4b09      	ldr	r3, [pc, #36]	; (802ad58 <cleanup_stdio+0x38>)
 802ad34:	4299      	cmp	r1, r3
 802ad36:	d002      	beq.n	802ad3e <cleanup_stdio+0x1e>
 802ad38:	4620      	mov	r0, r4
 802ad3a:	f000 fdff 	bl	802b93c <_fflush_r>
 802ad3e:	68e1      	ldr	r1, [r4, #12]
 802ad40:	4b06      	ldr	r3, [pc, #24]	; (802ad5c <cleanup_stdio+0x3c>)
 802ad42:	4299      	cmp	r1, r3
 802ad44:	d004      	beq.n	802ad50 <cleanup_stdio+0x30>
 802ad46:	4620      	mov	r0, r4
 802ad48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad4c:	f000 bdf6 	b.w	802b93c <_fflush_r>
 802ad50:	bd10      	pop	{r4, pc}
 802ad52:	bf00      	nop
 802ad54:	20013c18 	.word	0x20013c18
 802ad58:	20013c80 	.word	0x20013c80
 802ad5c:	20013ce8 	.word	0x20013ce8

0802ad60 <global_stdio_init.part.0>:
 802ad60:	b510      	push	{r4, lr}
 802ad62:	4b0b      	ldr	r3, [pc, #44]	; (802ad90 <global_stdio_init.part.0+0x30>)
 802ad64:	4c0b      	ldr	r4, [pc, #44]	; (802ad94 <global_stdio_init.part.0+0x34>)
 802ad66:	4a0c      	ldr	r2, [pc, #48]	; (802ad98 <global_stdio_init.part.0+0x38>)
 802ad68:	601a      	str	r2, [r3, #0]
 802ad6a:	4620      	mov	r0, r4
 802ad6c:	2200      	movs	r2, #0
 802ad6e:	2104      	movs	r1, #4
 802ad70:	f7ff ff94 	bl	802ac9c <std>
 802ad74:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802ad78:	2201      	movs	r2, #1
 802ad7a:	2109      	movs	r1, #9
 802ad7c:	f7ff ff8e 	bl	802ac9c <std>
 802ad80:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802ad84:	2202      	movs	r2, #2
 802ad86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad8a:	2112      	movs	r1, #18
 802ad8c:	f7ff bf86 	b.w	802ac9c <std>
 802ad90:	20013d50 	.word	0x20013d50
 802ad94:	20013c18 	.word	0x20013c18
 802ad98:	0802ad09 	.word	0x0802ad09

0802ad9c <__sfp_lock_acquire>:
 802ad9c:	4801      	ldr	r0, [pc, #4]	; (802ada4 <__sfp_lock_acquire+0x8>)
 802ad9e:	f000 b9b8 	b.w	802b112 <__retarget_lock_acquire_recursive>
 802ada2:	bf00      	nop
 802ada4:	20013d5a 	.word	0x20013d5a

0802ada8 <__sfp_lock_release>:
 802ada8:	4801      	ldr	r0, [pc, #4]	; (802adb0 <__sfp_lock_release+0x8>)
 802adaa:	f000 b9b3 	b.w	802b114 <__retarget_lock_release_recursive>
 802adae:	bf00      	nop
 802adb0:	20013d5a 	.word	0x20013d5a

0802adb4 <__sinit>:
 802adb4:	b510      	push	{r4, lr}
 802adb6:	4604      	mov	r4, r0
 802adb8:	f7ff fff0 	bl	802ad9c <__sfp_lock_acquire>
 802adbc:	6a23      	ldr	r3, [r4, #32]
 802adbe:	b11b      	cbz	r3, 802adc8 <__sinit+0x14>
 802adc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802adc4:	f7ff bff0 	b.w	802ada8 <__sfp_lock_release>
 802adc8:	4b04      	ldr	r3, [pc, #16]	; (802addc <__sinit+0x28>)
 802adca:	6223      	str	r3, [r4, #32]
 802adcc:	4b04      	ldr	r3, [pc, #16]	; (802ade0 <__sinit+0x2c>)
 802adce:	681b      	ldr	r3, [r3, #0]
 802add0:	2b00      	cmp	r3, #0
 802add2:	d1f5      	bne.n	802adc0 <__sinit+0xc>
 802add4:	f7ff ffc4 	bl	802ad60 <global_stdio_init.part.0>
 802add8:	e7f2      	b.n	802adc0 <__sinit+0xc>
 802adda:	bf00      	nop
 802addc:	0802ad21 	.word	0x0802ad21
 802ade0:	20013d50 	.word	0x20013d50

0802ade4 <fiprintf>:
 802ade4:	b40e      	push	{r1, r2, r3}
 802ade6:	b503      	push	{r0, r1, lr}
 802ade8:	4601      	mov	r1, r0
 802adea:	ab03      	add	r3, sp, #12
 802adec:	4805      	ldr	r0, [pc, #20]	; (802ae04 <fiprintf+0x20>)
 802adee:	f853 2b04 	ldr.w	r2, [r3], #4
 802adf2:	6800      	ldr	r0, [r0, #0]
 802adf4:	9301      	str	r3, [sp, #4]
 802adf6:	f000 fa71 	bl	802b2dc <_vfiprintf_r>
 802adfa:	b002      	add	sp, #8
 802adfc:	f85d eb04 	ldr.w	lr, [sp], #4
 802ae00:	b003      	add	sp, #12
 802ae02:	4770      	bx	lr
 802ae04:	2000017c 	.word	0x2000017c

0802ae08 <_fwalk_sglue>:
 802ae08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ae0c:	4607      	mov	r7, r0
 802ae0e:	4688      	mov	r8, r1
 802ae10:	4614      	mov	r4, r2
 802ae12:	2600      	movs	r6, #0
 802ae14:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802ae18:	f1b9 0901 	subs.w	r9, r9, #1
 802ae1c:	d505      	bpl.n	802ae2a <_fwalk_sglue+0x22>
 802ae1e:	6824      	ldr	r4, [r4, #0]
 802ae20:	2c00      	cmp	r4, #0
 802ae22:	d1f7      	bne.n	802ae14 <_fwalk_sglue+0xc>
 802ae24:	4630      	mov	r0, r6
 802ae26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ae2a:	89ab      	ldrh	r3, [r5, #12]
 802ae2c:	2b01      	cmp	r3, #1
 802ae2e:	d907      	bls.n	802ae40 <_fwalk_sglue+0x38>
 802ae30:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802ae34:	3301      	adds	r3, #1
 802ae36:	d003      	beq.n	802ae40 <_fwalk_sglue+0x38>
 802ae38:	4629      	mov	r1, r5
 802ae3a:	4638      	mov	r0, r7
 802ae3c:	47c0      	blx	r8
 802ae3e:	4306      	orrs	r6, r0
 802ae40:	3568      	adds	r5, #104	; 0x68
 802ae42:	e7e9      	b.n	802ae18 <_fwalk_sglue+0x10>

0802ae44 <__sread>:
 802ae44:	b510      	push	{r4, lr}
 802ae46:	460c      	mov	r4, r1
 802ae48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ae4c:	f000 f8ee 	bl	802b02c <_read_r>
 802ae50:	2800      	cmp	r0, #0
 802ae52:	bfab      	itete	ge
 802ae54:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802ae56:	89a3      	ldrhlt	r3, [r4, #12]
 802ae58:	181b      	addge	r3, r3, r0
 802ae5a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802ae5e:	bfac      	ite	ge
 802ae60:	6563      	strge	r3, [r4, #84]	; 0x54
 802ae62:	81a3      	strhlt	r3, [r4, #12]
 802ae64:	bd10      	pop	{r4, pc}

0802ae66 <__swrite>:
 802ae66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ae6a:	461f      	mov	r7, r3
 802ae6c:	898b      	ldrh	r3, [r1, #12]
 802ae6e:	05db      	lsls	r3, r3, #23
 802ae70:	4605      	mov	r5, r0
 802ae72:	460c      	mov	r4, r1
 802ae74:	4616      	mov	r6, r2
 802ae76:	d505      	bpl.n	802ae84 <__swrite+0x1e>
 802ae78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ae7c:	2302      	movs	r3, #2
 802ae7e:	2200      	movs	r2, #0
 802ae80:	f000 f8c2 	bl	802b008 <_lseek_r>
 802ae84:	89a3      	ldrh	r3, [r4, #12]
 802ae86:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ae8a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802ae8e:	81a3      	strh	r3, [r4, #12]
 802ae90:	4632      	mov	r2, r6
 802ae92:	463b      	mov	r3, r7
 802ae94:	4628      	mov	r0, r5
 802ae96:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802ae9a:	f000 b8fd 	b.w	802b098 <_write_r>

0802ae9e <__sseek>:
 802ae9e:	b510      	push	{r4, lr}
 802aea0:	460c      	mov	r4, r1
 802aea2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802aea6:	f000 f8af 	bl	802b008 <_lseek_r>
 802aeaa:	1c43      	adds	r3, r0, #1
 802aeac:	89a3      	ldrh	r3, [r4, #12]
 802aeae:	bf15      	itete	ne
 802aeb0:	6560      	strne	r0, [r4, #84]	; 0x54
 802aeb2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802aeb6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802aeba:	81a3      	strheq	r3, [r4, #12]
 802aebc:	bf18      	it	ne
 802aebe:	81a3      	strhne	r3, [r4, #12]
 802aec0:	bd10      	pop	{r4, pc}

0802aec2 <__sclose>:
 802aec2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802aec6:	f000 b839 	b.w	802af3c <_close_r>

0802aeca <memset>:
 802aeca:	4402      	add	r2, r0
 802aecc:	4603      	mov	r3, r0
 802aece:	4293      	cmp	r3, r2
 802aed0:	d100      	bne.n	802aed4 <memset+0xa>
 802aed2:	4770      	bx	lr
 802aed4:	f803 1b01 	strb.w	r1, [r3], #1
 802aed8:	e7f9      	b.n	802aece <memset+0x4>

0802aeda <_raise_r>:
 802aeda:	291f      	cmp	r1, #31
 802aedc:	b538      	push	{r3, r4, r5, lr}
 802aede:	4604      	mov	r4, r0
 802aee0:	460d      	mov	r5, r1
 802aee2:	d904      	bls.n	802aeee <_raise_r+0x14>
 802aee4:	2316      	movs	r3, #22
 802aee6:	6003      	str	r3, [r0, #0]
 802aee8:	f04f 30ff 	mov.w	r0, #4294967295
 802aeec:	bd38      	pop	{r3, r4, r5, pc}
 802aeee:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802aef0:	b112      	cbz	r2, 802aef8 <_raise_r+0x1e>
 802aef2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802aef6:	b94b      	cbnz	r3, 802af0c <_raise_r+0x32>
 802aef8:	4620      	mov	r0, r4
 802aefa:	f000 f8bb 	bl	802b074 <_getpid_r>
 802aefe:	462a      	mov	r2, r5
 802af00:	4601      	mov	r1, r0
 802af02:	4620      	mov	r0, r4
 802af04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802af08:	f000 b8a2 	b.w	802b050 <_kill_r>
 802af0c:	2b01      	cmp	r3, #1
 802af0e:	d00a      	beq.n	802af26 <_raise_r+0x4c>
 802af10:	1c59      	adds	r1, r3, #1
 802af12:	d103      	bne.n	802af1c <_raise_r+0x42>
 802af14:	2316      	movs	r3, #22
 802af16:	6003      	str	r3, [r0, #0]
 802af18:	2001      	movs	r0, #1
 802af1a:	e7e7      	b.n	802aeec <_raise_r+0x12>
 802af1c:	2400      	movs	r4, #0
 802af1e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802af22:	4628      	mov	r0, r5
 802af24:	4798      	blx	r3
 802af26:	2000      	movs	r0, #0
 802af28:	e7e0      	b.n	802aeec <_raise_r+0x12>
	...

0802af2c <raise>:
 802af2c:	4b02      	ldr	r3, [pc, #8]	; (802af38 <raise+0xc>)
 802af2e:	4601      	mov	r1, r0
 802af30:	6818      	ldr	r0, [r3, #0]
 802af32:	f7ff bfd2 	b.w	802aeda <_raise_r>
 802af36:	bf00      	nop
 802af38:	2000017c 	.word	0x2000017c

0802af3c <_close_r>:
 802af3c:	b538      	push	{r3, r4, r5, lr}
 802af3e:	4d06      	ldr	r5, [pc, #24]	; (802af58 <_close_r+0x1c>)
 802af40:	2300      	movs	r3, #0
 802af42:	4604      	mov	r4, r0
 802af44:	4608      	mov	r0, r1
 802af46:	602b      	str	r3, [r5, #0]
 802af48:	f7d6 fe3a 	bl	8001bc0 <_close>
 802af4c:	1c43      	adds	r3, r0, #1
 802af4e:	d102      	bne.n	802af56 <_close_r+0x1a>
 802af50:	682b      	ldr	r3, [r5, #0]
 802af52:	b103      	cbz	r3, 802af56 <_close_r+0x1a>
 802af54:	6023      	str	r3, [r4, #0]
 802af56:	bd38      	pop	{r3, r4, r5, pc}
 802af58:	20013d54 	.word	0x20013d54

0802af5c <_reclaim_reent>:
 802af5c:	4b29      	ldr	r3, [pc, #164]	; (802b004 <_reclaim_reent+0xa8>)
 802af5e:	681b      	ldr	r3, [r3, #0]
 802af60:	4283      	cmp	r3, r0
 802af62:	b570      	push	{r4, r5, r6, lr}
 802af64:	4604      	mov	r4, r0
 802af66:	d04b      	beq.n	802b000 <_reclaim_reent+0xa4>
 802af68:	69c3      	ldr	r3, [r0, #28]
 802af6a:	b143      	cbz	r3, 802af7e <_reclaim_reent+0x22>
 802af6c:	68db      	ldr	r3, [r3, #12]
 802af6e:	2b00      	cmp	r3, #0
 802af70:	d144      	bne.n	802affc <_reclaim_reent+0xa0>
 802af72:	69e3      	ldr	r3, [r4, #28]
 802af74:	6819      	ldr	r1, [r3, #0]
 802af76:	b111      	cbz	r1, 802af7e <_reclaim_reent+0x22>
 802af78:	4620      	mov	r0, r4
 802af7a:	f000 f939 	bl	802b1f0 <_free_r>
 802af7e:	6961      	ldr	r1, [r4, #20]
 802af80:	b111      	cbz	r1, 802af88 <_reclaim_reent+0x2c>
 802af82:	4620      	mov	r0, r4
 802af84:	f000 f934 	bl	802b1f0 <_free_r>
 802af88:	69e1      	ldr	r1, [r4, #28]
 802af8a:	b111      	cbz	r1, 802af92 <_reclaim_reent+0x36>
 802af8c:	4620      	mov	r0, r4
 802af8e:	f000 f92f 	bl	802b1f0 <_free_r>
 802af92:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802af94:	b111      	cbz	r1, 802af9c <_reclaim_reent+0x40>
 802af96:	4620      	mov	r0, r4
 802af98:	f000 f92a 	bl	802b1f0 <_free_r>
 802af9c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802af9e:	b111      	cbz	r1, 802afa6 <_reclaim_reent+0x4a>
 802afa0:	4620      	mov	r0, r4
 802afa2:	f000 f925 	bl	802b1f0 <_free_r>
 802afa6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802afa8:	b111      	cbz	r1, 802afb0 <_reclaim_reent+0x54>
 802afaa:	4620      	mov	r0, r4
 802afac:	f000 f920 	bl	802b1f0 <_free_r>
 802afb0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802afb2:	b111      	cbz	r1, 802afba <_reclaim_reent+0x5e>
 802afb4:	4620      	mov	r0, r4
 802afb6:	f000 f91b 	bl	802b1f0 <_free_r>
 802afba:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802afbc:	b111      	cbz	r1, 802afc4 <_reclaim_reent+0x68>
 802afbe:	4620      	mov	r0, r4
 802afc0:	f000 f916 	bl	802b1f0 <_free_r>
 802afc4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802afc6:	b111      	cbz	r1, 802afce <_reclaim_reent+0x72>
 802afc8:	4620      	mov	r0, r4
 802afca:	f000 f911 	bl	802b1f0 <_free_r>
 802afce:	6a23      	ldr	r3, [r4, #32]
 802afd0:	b1b3      	cbz	r3, 802b000 <_reclaim_reent+0xa4>
 802afd2:	4620      	mov	r0, r4
 802afd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802afd8:	4718      	bx	r3
 802afda:	5949      	ldr	r1, [r1, r5]
 802afdc:	b941      	cbnz	r1, 802aff0 <_reclaim_reent+0x94>
 802afde:	3504      	adds	r5, #4
 802afe0:	69e3      	ldr	r3, [r4, #28]
 802afe2:	2d80      	cmp	r5, #128	; 0x80
 802afe4:	68d9      	ldr	r1, [r3, #12]
 802afe6:	d1f8      	bne.n	802afda <_reclaim_reent+0x7e>
 802afe8:	4620      	mov	r0, r4
 802afea:	f000 f901 	bl	802b1f0 <_free_r>
 802afee:	e7c0      	b.n	802af72 <_reclaim_reent+0x16>
 802aff0:	680e      	ldr	r6, [r1, #0]
 802aff2:	4620      	mov	r0, r4
 802aff4:	f000 f8fc 	bl	802b1f0 <_free_r>
 802aff8:	4631      	mov	r1, r6
 802affa:	e7ef      	b.n	802afdc <_reclaim_reent+0x80>
 802affc:	2500      	movs	r5, #0
 802affe:	e7ef      	b.n	802afe0 <_reclaim_reent+0x84>
 802b000:	bd70      	pop	{r4, r5, r6, pc}
 802b002:	bf00      	nop
 802b004:	2000017c 	.word	0x2000017c

0802b008 <_lseek_r>:
 802b008:	b538      	push	{r3, r4, r5, lr}
 802b00a:	4d07      	ldr	r5, [pc, #28]	; (802b028 <_lseek_r+0x20>)
 802b00c:	4604      	mov	r4, r0
 802b00e:	4608      	mov	r0, r1
 802b010:	4611      	mov	r1, r2
 802b012:	2200      	movs	r2, #0
 802b014:	602a      	str	r2, [r5, #0]
 802b016:	461a      	mov	r2, r3
 802b018:	f7d6 fdde 	bl	8001bd8 <_lseek>
 802b01c:	1c43      	adds	r3, r0, #1
 802b01e:	d102      	bne.n	802b026 <_lseek_r+0x1e>
 802b020:	682b      	ldr	r3, [r5, #0]
 802b022:	b103      	cbz	r3, 802b026 <_lseek_r+0x1e>
 802b024:	6023      	str	r3, [r4, #0]
 802b026:	bd38      	pop	{r3, r4, r5, pc}
 802b028:	20013d54 	.word	0x20013d54

0802b02c <_read_r>:
 802b02c:	b538      	push	{r3, r4, r5, lr}
 802b02e:	4d07      	ldr	r5, [pc, #28]	; (802b04c <_read_r+0x20>)
 802b030:	4604      	mov	r4, r0
 802b032:	4608      	mov	r0, r1
 802b034:	4611      	mov	r1, r2
 802b036:	2200      	movs	r2, #0
 802b038:	602a      	str	r2, [r5, #0]
 802b03a:	461a      	mov	r2, r3
 802b03c:	f7d6 fda4 	bl	8001b88 <_read>
 802b040:	1c43      	adds	r3, r0, #1
 802b042:	d102      	bne.n	802b04a <_read_r+0x1e>
 802b044:	682b      	ldr	r3, [r5, #0]
 802b046:	b103      	cbz	r3, 802b04a <_read_r+0x1e>
 802b048:	6023      	str	r3, [r4, #0]
 802b04a:	bd38      	pop	{r3, r4, r5, pc}
 802b04c:	20013d54 	.word	0x20013d54

0802b050 <_kill_r>:
 802b050:	b538      	push	{r3, r4, r5, lr}
 802b052:	4d07      	ldr	r5, [pc, #28]	; (802b070 <_kill_r+0x20>)
 802b054:	2300      	movs	r3, #0
 802b056:	4604      	mov	r4, r0
 802b058:	4608      	mov	r0, r1
 802b05a:	4611      	mov	r1, r2
 802b05c:	602b      	str	r3, [r5, #0]
 802b05e:	f7d6 fd85 	bl	8001b6c <_kill>
 802b062:	1c43      	adds	r3, r0, #1
 802b064:	d102      	bne.n	802b06c <_kill_r+0x1c>
 802b066:	682b      	ldr	r3, [r5, #0]
 802b068:	b103      	cbz	r3, 802b06c <_kill_r+0x1c>
 802b06a:	6023      	str	r3, [r4, #0]
 802b06c:	bd38      	pop	{r3, r4, r5, pc}
 802b06e:	bf00      	nop
 802b070:	20013d54 	.word	0x20013d54

0802b074 <_getpid_r>:
 802b074:	f7d6 bd78 	b.w	8001b68 <_getpid>

0802b078 <_sbrk_r>:
 802b078:	b538      	push	{r3, r4, r5, lr}
 802b07a:	4d06      	ldr	r5, [pc, #24]	; (802b094 <_sbrk_r+0x1c>)
 802b07c:	2300      	movs	r3, #0
 802b07e:	4604      	mov	r4, r0
 802b080:	4608      	mov	r0, r1
 802b082:	602b      	str	r3, [r5, #0]
 802b084:	f7d6 fdaa 	bl	8001bdc <_sbrk>
 802b088:	1c43      	adds	r3, r0, #1
 802b08a:	d102      	bne.n	802b092 <_sbrk_r+0x1a>
 802b08c:	682b      	ldr	r3, [r5, #0]
 802b08e:	b103      	cbz	r3, 802b092 <_sbrk_r+0x1a>
 802b090:	6023      	str	r3, [r4, #0]
 802b092:	bd38      	pop	{r3, r4, r5, pc}
 802b094:	20013d54 	.word	0x20013d54

0802b098 <_write_r>:
 802b098:	b538      	push	{r3, r4, r5, lr}
 802b09a:	4d07      	ldr	r5, [pc, #28]	; (802b0b8 <_write_r+0x20>)
 802b09c:	4604      	mov	r4, r0
 802b09e:	4608      	mov	r0, r1
 802b0a0:	4611      	mov	r1, r2
 802b0a2:	2200      	movs	r2, #0
 802b0a4:	602a      	str	r2, [r5, #0]
 802b0a6:	461a      	mov	r2, r3
 802b0a8:	f7d6 fd7c 	bl	8001ba4 <_write>
 802b0ac:	1c43      	adds	r3, r0, #1
 802b0ae:	d102      	bne.n	802b0b6 <_write_r+0x1e>
 802b0b0:	682b      	ldr	r3, [r5, #0]
 802b0b2:	b103      	cbz	r3, 802b0b6 <_write_r+0x1e>
 802b0b4:	6023      	str	r3, [r4, #0]
 802b0b6:	bd38      	pop	{r3, r4, r5, pc}
 802b0b8:	20013d54 	.word	0x20013d54

0802b0bc <__errno>:
 802b0bc:	4b01      	ldr	r3, [pc, #4]	; (802b0c4 <__errno+0x8>)
 802b0be:	6818      	ldr	r0, [r3, #0]
 802b0c0:	4770      	bx	lr
 802b0c2:	bf00      	nop
 802b0c4:	2000017c 	.word	0x2000017c

0802b0c8 <__libc_init_array>:
 802b0c8:	b570      	push	{r4, r5, r6, lr}
 802b0ca:	4d0d      	ldr	r5, [pc, #52]	; (802b100 <__libc_init_array+0x38>)
 802b0cc:	4c0d      	ldr	r4, [pc, #52]	; (802b104 <__libc_init_array+0x3c>)
 802b0ce:	1b64      	subs	r4, r4, r5
 802b0d0:	10a4      	asrs	r4, r4, #2
 802b0d2:	2600      	movs	r6, #0
 802b0d4:	42a6      	cmp	r6, r4
 802b0d6:	d109      	bne.n	802b0ec <__libc_init_array+0x24>
 802b0d8:	4d0b      	ldr	r5, [pc, #44]	; (802b108 <__libc_init_array+0x40>)
 802b0da:	4c0c      	ldr	r4, [pc, #48]	; (802b10c <__libc_init_array+0x44>)
 802b0dc:	f000 fd70 	bl	802bbc0 <_init>
 802b0e0:	1b64      	subs	r4, r4, r5
 802b0e2:	10a4      	asrs	r4, r4, #2
 802b0e4:	2600      	movs	r6, #0
 802b0e6:	42a6      	cmp	r6, r4
 802b0e8:	d105      	bne.n	802b0f6 <__libc_init_array+0x2e>
 802b0ea:	bd70      	pop	{r4, r5, r6, pc}
 802b0ec:	f855 3b04 	ldr.w	r3, [r5], #4
 802b0f0:	4798      	blx	r3
 802b0f2:	3601      	adds	r6, #1
 802b0f4:	e7ee      	b.n	802b0d4 <__libc_init_array+0xc>
 802b0f6:	f855 3b04 	ldr.w	r3, [r5], #4
 802b0fa:	4798      	blx	r3
 802b0fc:	3601      	adds	r6, #1
 802b0fe:	e7f2      	b.n	802b0e6 <__libc_init_array+0x1e>
 802b100:	080cc3f4 	.word	0x080cc3f4
 802b104:	080cc3f4 	.word	0x080cc3f4
 802b108:	080cc3f4 	.word	0x080cc3f4
 802b10c:	080cc408 	.word	0x080cc408

0802b110 <__retarget_lock_init_recursive>:
 802b110:	4770      	bx	lr

0802b112 <__retarget_lock_acquire_recursive>:
 802b112:	4770      	bx	lr

0802b114 <__retarget_lock_release_recursive>:
 802b114:	4770      	bx	lr

0802b116 <memcpy>:
 802b116:	440a      	add	r2, r1
 802b118:	4291      	cmp	r1, r2
 802b11a:	f100 33ff 	add.w	r3, r0, #4294967295
 802b11e:	d100      	bne.n	802b122 <memcpy+0xc>
 802b120:	4770      	bx	lr
 802b122:	b510      	push	{r4, lr}
 802b124:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b128:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b12c:	4291      	cmp	r1, r2
 802b12e:	d1f9      	bne.n	802b124 <memcpy+0xe>
 802b130:	bd10      	pop	{r4, pc}
	...

0802b134 <__register_exitproc>:
 802b134:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b138:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b1ec <__register_exitproc+0xb8>
 802b13c:	4606      	mov	r6, r0
 802b13e:	f8d8 0000 	ldr.w	r0, [r8]
 802b142:	461f      	mov	r7, r3
 802b144:	460d      	mov	r5, r1
 802b146:	4691      	mov	r9, r2
 802b148:	f7ff ffe3 	bl	802b112 <__retarget_lock_acquire_recursive>
 802b14c:	4b23      	ldr	r3, [pc, #140]	; (802b1dc <__register_exitproc+0xa8>)
 802b14e:	681c      	ldr	r4, [r3, #0]
 802b150:	b934      	cbnz	r4, 802b160 <__register_exitproc+0x2c>
 802b152:	4c23      	ldr	r4, [pc, #140]	; (802b1e0 <__register_exitproc+0xac>)
 802b154:	601c      	str	r4, [r3, #0]
 802b156:	4b23      	ldr	r3, [pc, #140]	; (802b1e4 <__register_exitproc+0xb0>)
 802b158:	b113      	cbz	r3, 802b160 <__register_exitproc+0x2c>
 802b15a:	681b      	ldr	r3, [r3, #0]
 802b15c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b160:	6863      	ldr	r3, [r4, #4]
 802b162:	2b1f      	cmp	r3, #31
 802b164:	dd07      	ble.n	802b176 <__register_exitproc+0x42>
 802b166:	f8d8 0000 	ldr.w	r0, [r8]
 802b16a:	f7ff ffd3 	bl	802b114 <__retarget_lock_release_recursive>
 802b16e:	f04f 30ff 	mov.w	r0, #4294967295
 802b172:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b176:	b32e      	cbz	r6, 802b1c4 <__register_exitproc+0x90>
 802b178:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b17c:	b968      	cbnz	r0, 802b19a <__register_exitproc+0x66>
 802b17e:	4b1a      	ldr	r3, [pc, #104]	; (802b1e8 <__register_exitproc+0xb4>)
 802b180:	2b00      	cmp	r3, #0
 802b182:	d0f0      	beq.n	802b166 <__register_exitproc+0x32>
 802b184:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b188:	f7ff fcbe 	bl	802ab08 <malloc>
 802b18c:	2800      	cmp	r0, #0
 802b18e:	d0ea      	beq.n	802b166 <__register_exitproc+0x32>
 802b190:	2300      	movs	r3, #0
 802b192:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b196:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b19a:	6863      	ldr	r3, [r4, #4]
 802b19c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b1a0:	2201      	movs	r2, #1
 802b1a2:	409a      	lsls	r2, r3
 802b1a4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b1a8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b1ac:	4313      	orrs	r3, r2
 802b1ae:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b1b2:	2e02      	cmp	r6, #2
 802b1b4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b1b8:	bf02      	ittt	eq
 802b1ba:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b1be:	4313      	orreq	r3, r2
 802b1c0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b1c4:	6863      	ldr	r3, [r4, #4]
 802b1c6:	f8d8 0000 	ldr.w	r0, [r8]
 802b1ca:	1c5a      	adds	r2, r3, #1
 802b1cc:	3302      	adds	r3, #2
 802b1ce:	6062      	str	r2, [r4, #4]
 802b1d0:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b1d4:	f7ff ff9e 	bl	802b114 <__retarget_lock_release_recursive>
 802b1d8:	2000      	movs	r0, #0
 802b1da:	e7ca      	b.n	802b172 <__register_exitproc+0x3e>
 802b1dc:	20013de8 	.word	0x20013de8
 802b1e0:	20013d5c 	.word	0x20013d5c
 802b1e4:	08042d44 	.word	0x08042d44
 802b1e8:	0802ab09 	.word	0x0802ab09
 802b1ec:	20000180 	.word	0x20000180

0802b1f0 <_free_r>:
 802b1f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b1f2:	2900      	cmp	r1, #0
 802b1f4:	d044      	beq.n	802b280 <_free_r+0x90>
 802b1f6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b1fa:	9001      	str	r0, [sp, #4]
 802b1fc:	2b00      	cmp	r3, #0
 802b1fe:	f1a1 0404 	sub.w	r4, r1, #4
 802b202:	bfb8      	it	lt
 802b204:	18e4      	addlt	r4, r4, r3
 802b206:	f7ff fd2f 	bl	802ac68 <__malloc_lock>
 802b20a:	4a1e      	ldr	r2, [pc, #120]	; (802b284 <_free_r+0x94>)
 802b20c:	9801      	ldr	r0, [sp, #4]
 802b20e:	6813      	ldr	r3, [r2, #0]
 802b210:	b933      	cbnz	r3, 802b220 <_free_r+0x30>
 802b212:	6063      	str	r3, [r4, #4]
 802b214:	6014      	str	r4, [r2, #0]
 802b216:	b003      	add	sp, #12
 802b218:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b21c:	f7ff bd2a 	b.w	802ac74 <__malloc_unlock>
 802b220:	42a3      	cmp	r3, r4
 802b222:	d908      	bls.n	802b236 <_free_r+0x46>
 802b224:	6825      	ldr	r5, [r4, #0]
 802b226:	1961      	adds	r1, r4, r5
 802b228:	428b      	cmp	r3, r1
 802b22a:	bf01      	itttt	eq
 802b22c:	6819      	ldreq	r1, [r3, #0]
 802b22e:	685b      	ldreq	r3, [r3, #4]
 802b230:	1949      	addeq	r1, r1, r5
 802b232:	6021      	streq	r1, [r4, #0]
 802b234:	e7ed      	b.n	802b212 <_free_r+0x22>
 802b236:	461a      	mov	r2, r3
 802b238:	685b      	ldr	r3, [r3, #4]
 802b23a:	b10b      	cbz	r3, 802b240 <_free_r+0x50>
 802b23c:	42a3      	cmp	r3, r4
 802b23e:	d9fa      	bls.n	802b236 <_free_r+0x46>
 802b240:	6811      	ldr	r1, [r2, #0]
 802b242:	1855      	adds	r5, r2, r1
 802b244:	42a5      	cmp	r5, r4
 802b246:	d10b      	bne.n	802b260 <_free_r+0x70>
 802b248:	6824      	ldr	r4, [r4, #0]
 802b24a:	4421      	add	r1, r4
 802b24c:	1854      	adds	r4, r2, r1
 802b24e:	42a3      	cmp	r3, r4
 802b250:	6011      	str	r1, [r2, #0]
 802b252:	d1e0      	bne.n	802b216 <_free_r+0x26>
 802b254:	681c      	ldr	r4, [r3, #0]
 802b256:	685b      	ldr	r3, [r3, #4]
 802b258:	6053      	str	r3, [r2, #4]
 802b25a:	440c      	add	r4, r1
 802b25c:	6014      	str	r4, [r2, #0]
 802b25e:	e7da      	b.n	802b216 <_free_r+0x26>
 802b260:	d902      	bls.n	802b268 <_free_r+0x78>
 802b262:	230c      	movs	r3, #12
 802b264:	6003      	str	r3, [r0, #0]
 802b266:	e7d6      	b.n	802b216 <_free_r+0x26>
 802b268:	6825      	ldr	r5, [r4, #0]
 802b26a:	1961      	adds	r1, r4, r5
 802b26c:	428b      	cmp	r3, r1
 802b26e:	bf04      	itt	eq
 802b270:	6819      	ldreq	r1, [r3, #0]
 802b272:	685b      	ldreq	r3, [r3, #4]
 802b274:	6063      	str	r3, [r4, #4]
 802b276:	bf04      	itt	eq
 802b278:	1949      	addeq	r1, r1, r5
 802b27a:	6021      	streq	r1, [r4, #0]
 802b27c:	6054      	str	r4, [r2, #4]
 802b27e:	e7ca      	b.n	802b216 <_free_r+0x26>
 802b280:	b003      	add	sp, #12
 802b282:	bd30      	pop	{r4, r5, pc}
 802b284:	20013c10 	.word	0x20013c10

0802b288 <__sfputc_r>:
 802b288:	6893      	ldr	r3, [r2, #8]
 802b28a:	3b01      	subs	r3, #1
 802b28c:	2b00      	cmp	r3, #0
 802b28e:	b410      	push	{r4}
 802b290:	6093      	str	r3, [r2, #8]
 802b292:	da08      	bge.n	802b2a6 <__sfputc_r+0x1e>
 802b294:	6994      	ldr	r4, [r2, #24]
 802b296:	42a3      	cmp	r3, r4
 802b298:	db01      	blt.n	802b29e <__sfputc_r+0x16>
 802b29a:	290a      	cmp	r1, #10
 802b29c:	d103      	bne.n	802b2a6 <__sfputc_r+0x1e>
 802b29e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b2a2:	f000 bb73 	b.w	802b98c <__swbuf_r>
 802b2a6:	6813      	ldr	r3, [r2, #0]
 802b2a8:	1c58      	adds	r0, r3, #1
 802b2aa:	6010      	str	r0, [r2, #0]
 802b2ac:	7019      	strb	r1, [r3, #0]
 802b2ae:	4608      	mov	r0, r1
 802b2b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b2b4:	4770      	bx	lr

0802b2b6 <__sfputs_r>:
 802b2b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b2b8:	4606      	mov	r6, r0
 802b2ba:	460f      	mov	r7, r1
 802b2bc:	4614      	mov	r4, r2
 802b2be:	18d5      	adds	r5, r2, r3
 802b2c0:	42ac      	cmp	r4, r5
 802b2c2:	d101      	bne.n	802b2c8 <__sfputs_r+0x12>
 802b2c4:	2000      	movs	r0, #0
 802b2c6:	e007      	b.n	802b2d8 <__sfputs_r+0x22>
 802b2c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b2cc:	463a      	mov	r2, r7
 802b2ce:	4630      	mov	r0, r6
 802b2d0:	f7ff ffda 	bl	802b288 <__sfputc_r>
 802b2d4:	1c43      	adds	r3, r0, #1
 802b2d6:	d1f3      	bne.n	802b2c0 <__sfputs_r+0xa>
 802b2d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b2dc <_vfiprintf_r>:
 802b2dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b2e0:	460d      	mov	r5, r1
 802b2e2:	b09d      	sub	sp, #116	; 0x74
 802b2e4:	4614      	mov	r4, r2
 802b2e6:	4698      	mov	r8, r3
 802b2e8:	4606      	mov	r6, r0
 802b2ea:	b118      	cbz	r0, 802b2f4 <_vfiprintf_r+0x18>
 802b2ec:	6a03      	ldr	r3, [r0, #32]
 802b2ee:	b90b      	cbnz	r3, 802b2f4 <_vfiprintf_r+0x18>
 802b2f0:	f7ff fd60 	bl	802adb4 <__sinit>
 802b2f4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b2f6:	07d9      	lsls	r1, r3, #31
 802b2f8:	d405      	bmi.n	802b306 <_vfiprintf_r+0x2a>
 802b2fa:	89ab      	ldrh	r3, [r5, #12]
 802b2fc:	059a      	lsls	r2, r3, #22
 802b2fe:	d402      	bmi.n	802b306 <_vfiprintf_r+0x2a>
 802b300:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b302:	f7ff ff06 	bl	802b112 <__retarget_lock_acquire_recursive>
 802b306:	89ab      	ldrh	r3, [r5, #12]
 802b308:	071b      	lsls	r3, r3, #28
 802b30a:	d501      	bpl.n	802b310 <_vfiprintf_r+0x34>
 802b30c:	692b      	ldr	r3, [r5, #16]
 802b30e:	b99b      	cbnz	r3, 802b338 <_vfiprintf_r+0x5c>
 802b310:	4629      	mov	r1, r5
 802b312:	4630      	mov	r0, r6
 802b314:	f000 fb78 	bl	802ba08 <__swsetup_r>
 802b318:	b170      	cbz	r0, 802b338 <_vfiprintf_r+0x5c>
 802b31a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b31c:	07dc      	lsls	r4, r3, #31
 802b31e:	d504      	bpl.n	802b32a <_vfiprintf_r+0x4e>
 802b320:	f04f 30ff 	mov.w	r0, #4294967295
 802b324:	b01d      	add	sp, #116	; 0x74
 802b326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b32a:	89ab      	ldrh	r3, [r5, #12]
 802b32c:	0598      	lsls	r0, r3, #22
 802b32e:	d4f7      	bmi.n	802b320 <_vfiprintf_r+0x44>
 802b330:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b332:	f7ff feef 	bl	802b114 <__retarget_lock_release_recursive>
 802b336:	e7f3      	b.n	802b320 <_vfiprintf_r+0x44>
 802b338:	2300      	movs	r3, #0
 802b33a:	9309      	str	r3, [sp, #36]	; 0x24
 802b33c:	2320      	movs	r3, #32
 802b33e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b342:	f8cd 800c 	str.w	r8, [sp, #12]
 802b346:	2330      	movs	r3, #48	; 0x30
 802b348:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b4fc <_vfiprintf_r+0x220>
 802b34c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b350:	f04f 0901 	mov.w	r9, #1
 802b354:	4623      	mov	r3, r4
 802b356:	469a      	mov	sl, r3
 802b358:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b35c:	b10a      	cbz	r2, 802b362 <_vfiprintf_r+0x86>
 802b35e:	2a25      	cmp	r2, #37	; 0x25
 802b360:	d1f9      	bne.n	802b356 <_vfiprintf_r+0x7a>
 802b362:	ebba 0b04 	subs.w	fp, sl, r4
 802b366:	d00b      	beq.n	802b380 <_vfiprintf_r+0xa4>
 802b368:	465b      	mov	r3, fp
 802b36a:	4622      	mov	r2, r4
 802b36c:	4629      	mov	r1, r5
 802b36e:	4630      	mov	r0, r6
 802b370:	f7ff ffa1 	bl	802b2b6 <__sfputs_r>
 802b374:	3001      	adds	r0, #1
 802b376:	f000 80a9 	beq.w	802b4cc <_vfiprintf_r+0x1f0>
 802b37a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b37c:	445a      	add	r2, fp
 802b37e:	9209      	str	r2, [sp, #36]	; 0x24
 802b380:	f89a 3000 	ldrb.w	r3, [sl]
 802b384:	2b00      	cmp	r3, #0
 802b386:	f000 80a1 	beq.w	802b4cc <_vfiprintf_r+0x1f0>
 802b38a:	2300      	movs	r3, #0
 802b38c:	f04f 32ff 	mov.w	r2, #4294967295
 802b390:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b394:	f10a 0a01 	add.w	sl, sl, #1
 802b398:	9304      	str	r3, [sp, #16]
 802b39a:	9307      	str	r3, [sp, #28]
 802b39c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b3a0:	931a      	str	r3, [sp, #104]	; 0x68
 802b3a2:	4654      	mov	r4, sl
 802b3a4:	2205      	movs	r2, #5
 802b3a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b3aa:	4854      	ldr	r0, [pc, #336]	; (802b4fc <_vfiprintf_r+0x220>)
 802b3ac:	f7d4 ff80 	bl	80002b0 <memchr>
 802b3b0:	9a04      	ldr	r2, [sp, #16]
 802b3b2:	b9d8      	cbnz	r0, 802b3ec <_vfiprintf_r+0x110>
 802b3b4:	06d1      	lsls	r1, r2, #27
 802b3b6:	bf44      	itt	mi
 802b3b8:	2320      	movmi	r3, #32
 802b3ba:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b3be:	0713      	lsls	r3, r2, #28
 802b3c0:	bf44      	itt	mi
 802b3c2:	232b      	movmi	r3, #43	; 0x2b
 802b3c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b3c8:	f89a 3000 	ldrb.w	r3, [sl]
 802b3cc:	2b2a      	cmp	r3, #42	; 0x2a
 802b3ce:	d015      	beq.n	802b3fc <_vfiprintf_r+0x120>
 802b3d0:	9a07      	ldr	r2, [sp, #28]
 802b3d2:	4654      	mov	r4, sl
 802b3d4:	2000      	movs	r0, #0
 802b3d6:	f04f 0c0a 	mov.w	ip, #10
 802b3da:	4621      	mov	r1, r4
 802b3dc:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b3e0:	3b30      	subs	r3, #48	; 0x30
 802b3e2:	2b09      	cmp	r3, #9
 802b3e4:	d94d      	bls.n	802b482 <_vfiprintf_r+0x1a6>
 802b3e6:	b1b0      	cbz	r0, 802b416 <_vfiprintf_r+0x13a>
 802b3e8:	9207      	str	r2, [sp, #28]
 802b3ea:	e014      	b.n	802b416 <_vfiprintf_r+0x13a>
 802b3ec:	eba0 0308 	sub.w	r3, r0, r8
 802b3f0:	fa09 f303 	lsl.w	r3, r9, r3
 802b3f4:	4313      	orrs	r3, r2
 802b3f6:	9304      	str	r3, [sp, #16]
 802b3f8:	46a2      	mov	sl, r4
 802b3fa:	e7d2      	b.n	802b3a2 <_vfiprintf_r+0xc6>
 802b3fc:	9b03      	ldr	r3, [sp, #12]
 802b3fe:	1d19      	adds	r1, r3, #4
 802b400:	681b      	ldr	r3, [r3, #0]
 802b402:	9103      	str	r1, [sp, #12]
 802b404:	2b00      	cmp	r3, #0
 802b406:	bfbb      	ittet	lt
 802b408:	425b      	neglt	r3, r3
 802b40a:	f042 0202 	orrlt.w	r2, r2, #2
 802b40e:	9307      	strge	r3, [sp, #28]
 802b410:	9307      	strlt	r3, [sp, #28]
 802b412:	bfb8      	it	lt
 802b414:	9204      	strlt	r2, [sp, #16]
 802b416:	7823      	ldrb	r3, [r4, #0]
 802b418:	2b2e      	cmp	r3, #46	; 0x2e
 802b41a:	d10c      	bne.n	802b436 <_vfiprintf_r+0x15a>
 802b41c:	7863      	ldrb	r3, [r4, #1]
 802b41e:	2b2a      	cmp	r3, #42	; 0x2a
 802b420:	d134      	bne.n	802b48c <_vfiprintf_r+0x1b0>
 802b422:	9b03      	ldr	r3, [sp, #12]
 802b424:	1d1a      	adds	r2, r3, #4
 802b426:	681b      	ldr	r3, [r3, #0]
 802b428:	9203      	str	r2, [sp, #12]
 802b42a:	2b00      	cmp	r3, #0
 802b42c:	bfb8      	it	lt
 802b42e:	f04f 33ff 	movlt.w	r3, #4294967295
 802b432:	3402      	adds	r4, #2
 802b434:	9305      	str	r3, [sp, #20]
 802b436:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802b50c <_vfiprintf_r+0x230>
 802b43a:	7821      	ldrb	r1, [r4, #0]
 802b43c:	2203      	movs	r2, #3
 802b43e:	4650      	mov	r0, sl
 802b440:	f7d4 ff36 	bl	80002b0 <memchr>
 802b444:	b138      	cbz	r0, 802b456 <_vfiprintf_r+0x17a>
 802b446:	9b04      	ldr	r3, [sp, #16]
 802b448:	eba0 000a 	sub.w	r0, r0, sl
 802b44c:	2240      	movs	r2, #64	; 0x40
 802b44e:	4082      	lsls	r2, r0
 802b450:	4313      	orrs	r3, r2
 802b452:	3401      	adds	r4, #1
 802b454:	9304      	str	r3, [sp, #16]
 802b456:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b45a:	4829      	ldr	r0, [pc, #164]	; (802b500 <_vfiprintf_r+0x224>)
 802b45c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b460:	2206      	movs	r2, #6
 802b462:	f7d4 ff25 	bl	80002b0 <memchr>
 802b466:	2800      	cmp	r0, #0
 802b468:	d03f      	beq.n	802b4ea <_vfiprintf_r+0x20e>
 802b46a:	4b26      	ldr	r3, [pc, #152]	; (802b504 <_vfiprintf_r+0x228>)
 802b46c:	bb1b      	cbnz	r3, 802b4b6 <_vfiprintf_r+0x1da>
 802b46e:	9b03      	ldr	r3, [sp, #12]
 802b470:	3307      	adds	r3, #7
 802b472:	f023 0307 	bic.w	r3, r3, #7
 802b476:	3308      	adds	r3, #8
 802b478:	9303      	str	r3, [sp, #12]
 802b47a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b47c:	443b      	add	r3, r7
 802b47e:	9309      	str	r3, [sp, #36]	; 0x24
 802b480:	e768      	b.n	802b354 <_vfiprintf_r+0x78>
 802b482:	fb0c 3202 	mla	r2, ip, r2, r3
 802b486:	460c      	mov	r4, r1
 802b488:	2001      	movs	r0, #1
 802b48a:	e7a6      	b.n	802b3da <_vfiprintf_r+0xfe>
 802b48c:	2300      	movs	r3, #0
 802b48e:	3401      	adds	r4, #1
 802b490:	9305      	str	r3, [sp, #20]
 802b492:	4619      	mov	r1, r3
 802b494:	f04f 0c0a 	mov.w	ip, #10
 802b498:	4620      	mov	r0, r4
 802b49a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b49e:	3a30      	subs	r2, #48	; 0x30
 802b4a0:	2a09      	cmp	r2, #9
 802b4a2:	d903      	bls.n	802b4ac <_vfiprintf_r+0x1d0>
 802b4a4:	2b00      	cmp	r3, #0
 802b4a6:	d0c6      	beq.n	802b436 <_vfiprintf_r+0x15a>
 802b4a8:	9105      	str	r1, [sp, #20]
 802b4aa:	e7c4      	b.n	802b436 <_vfiprintf_r+0x15a>
 802b4ac:	fb0c 2101 	mla	r1, ip, r1, r2
 802b4b0:	4604      	mov	r4, r0
 802b4b2:	2301      	movs	r3, #1
 802b4b4:	e7f0      	b.n	802b498 <_vfiprintf_r+0x1bc>
 802b4b6:	ab03      	add	r3, sp, #12
 802b4b8:	9300      	str	r3, [sp, #0]
 802b4ba:	462a      	mov	r2, r5
 802b4bc:	4b12      	ldr	r3, [pc, #72]	; (802b508 <_vfiprintf_r+0x22c>)
 802b4be:	a904      	add	r1, sp, #16
 802b4c0:	4630      	mov	r0, r6
 802b4c2:	f3af 8000 	nop.w
 802b4c6:	4607      	mov	r7, r0
 802b4c8:	1c78      	adds	r0, r7, #1
 802b4ca:	d1d6      	bne.n	802b47a <_vfiprintf_r+0x19e>
 802b4cc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b4ce:	07d9      	lsls	r1, r3, #31
 802b4d0:	d405      	bmi.n	802b4de <_vfiprintf_r+0x202>
 802b4d2:	89ab      	ldrh	r3, [r5, #12]
 802b4d4:	059a      	lsls	r2, r3, #22
 802b4d6:	d402      	bmi.n	802b4de <_vfiprintf_r+0x202>
 802b4d8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b4da:	f7ff fe1b 	bl	802b114 <__retarget_lock_release_recursive>
 802b4de:	89ab      	ldrh	r3, [r5, #12]
 802b4e0:	065b      	lsls	r3, r3, #25
 802b4e2:	f53f af1d 	bmi.w	802b320 <_vfiprintf_r+0x44>
 802b4e6:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b4e8:	e71c      	b.n	802b324 <_vfiprintf_r+0x48>
 802b4ea:	ab03      	add	r3, sp, #12
 802b4ec:	9300      	str	r3, [sp, #0]
 802b4ee:	462a      	mov	r2, r5
 802b4f0:	4b05      	ldr	r3, [pc, #20]	; (802b508 <_vfiprintf_r+0x22c>)
 802b4f2:	a904      	add	r1, sp, #16
 802b4f4:	4630      	mov	r0, r6
 802b4f6:	f000 f879 	bl	802b5ec <_printf_i>
 802b4fa:	e7e4      	b.n	802b4c6 <_vfiprintf_r+0x1ea>
 802b4fc:	08042d48 	.word	0x08042d48
 802b500:	08042d52 	.word	0x08042d52
 802b504:	00000000 	.word	0x00000000
 802b508:	0802b2b7 	.word	0x0802b2b7
 802b50c:	08042d4e 	.word	0x08042d4e

0802b510 <_printf_common>:
 802b510:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b514:	4616      	mov	r6, r2
 802b516:	4699      	mov	r9, r3
 802b518:	688a      	ldr	r2, [r1, #8]
 802b51a:	690b      	ldr	r3, [r1, #16]
 802b51c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b520:	4293      	cmp	r3, r2
 802b522:	bfb8      	it	lt
 802b524:	4613      	movlt	r3, r2
 802b526:	6033      	str	r3, [r6, #0]
 802b528:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b52c:	4607      	mov	r7, r0
 802b52e:	460c      	mov	r4, r1
 802b530:	b10a      	cbz	r2, 802b536 <_printf_common+0x26>
 802b532:	3301      	adds	r3, #1
 802b534:	6033      	str	r3, [r6, #0]
 802b536:	6823      	ldr	r3, [r4, #0]
 802b538:	0699      	lsls	r1, r3, #26
 802b53a:	bf42      	ittt	mi
 802b53c:	6833      	ldrmi	r3, [r6, #0]
 802b53e:	3302      	addmi	r3, #2
 802b540:	6033      	strmi	r3, [r6, #0]
 802b542:	6825      	ldr	r5, [r4, #0]
 802b544:	f015 0506 	ands.w	r5, r5, #6
 802b548:	d106      	bne.n	802b558 <_printf_common+0x48>
 802b54a:	f104 0a19 	add.w	sl, r4, #25
 802b54e:	68e3      	ldr	r3, [r4, #12]
 802b550:	6832      	ldr	r2, [r6, #0]
 802b552:	1a9b      	subs	r3, r3, r2
 802b554:	42ab      	cmp	r3, r5
 802b556:	dc26      	bgt.n	802b5a6 <_printf_common+0x96>
 802b558:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b55c:	1e13      	subs	r3, r2, #0
 802b55e:	6822      	ldr	r2, [r4, #0]
 802b560:	bf18      	it	ne
 802b562:	2301      	movne	r3, #1
 802b564:	0692      	lsls	r2, r2, #26
 802b566:	d42b      	bmi.n	802b5c0 <_printf_common+0xb0>
 802b568:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b56c:	4649      	mov	r1, r9
 802b56e:	4638      	mov	r0, r7
 802b570:	47c0      	blx	r8
 802b572:	3001      	adds	r0, #1
 802b574:	d01e      	beq.n	802b5b4 <_printf_common+0xa4>
 802b576:	6823      	ldr	r3, [r4, #0]
 802b578:	6922      	ldr	r2, [r4, #16]
 802b57a:	f003 0306 	and.w	r3, r3, #6
 802b57e:	2b04      	cmp	r3, #4
 802b580:	bf02      	ittt	eq
 802b582:	68e5      	ldreq	r5, [r4, #12]
 802b584:	6833      	ldreq	r3, [r6, #0]
 802b586:	1aed      	subeq	r5, r5, r3
 802b588:	68a3      	ldr	r3, [r4, #8]
 802b58a:	bf0c      	ite	eq
 802b58c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b590:	2500      	movne	r5, #0
 802b592:	4293      	cmp	r3, r2
 802b594:	bfc4      	itt	gt
 802b596:	1a9b      	subgt	r3, r3, r2
 802b598:	18ed      	addgt	r5, r5, r3
 802b59a:	2600      	movs	r6, #0
 802b59c:	341a      	adds	r4, #26
 802b59e:	42b5      	cmp	r5, r6
 802b5a0:	d11a      	bne.n	802b5d8 <_printf_common+0xc8>
 802b5a2:	2000      	movs	r0, #0
 802b5a4:	e008      	b.n	802b5b8 <_printf_common+0xa8>
 802b5a6:	2301      	movs	r3, #1
 802b5a8:	4652      	mov	r2, sl
 802b5aa:	4649      	mov	r1, r9
 802b5ac:	4638      	mov	r0, r7
 802b5ae:	47c0      	blx	r8
 802b5b0:	3001      	adds	r0, #1
 802b5b2:	d103      	bne.n	802b5bc <_printf_common+0xac>
 802b5b4:	f04f 30ff 	mov.w	r0, #4294967295
 802b5b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b5bc:	3501      	adds	r5, #1
 802b5be:	e7c6      	b.n	802b54e <_printf_common+0x3e>
 802b5c0:	18e1      	adds	r1, r4, r3
 802b5c2:	1c5a      	adds	r2, r3, #1
 802b5c4:	2030      	movs	r0, #48	; 0x30
 802b5c6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b5ca:	4422      	add	r2, r4
 802b5cc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b5d0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b5d4:	3302      	adds	r3, #2
 802b5d6:	e7c7      	b.n	802b568 <_printf_common+0x58>
 802b5d8:	2301      	movs	r3, #1
 802b5da:	4622      	mov	r2, r4
 802b5dc:	4649      	mov	r1, r9
 802b5de:	4638      	mov	r0, r7
 802b5e0:	47c0      	blx	r8
 802b5e2:	3001      	adds	r0, #1
 802b5e4:	d0e6      	beq.n	802b5b4 <_printf_common+0xa4>
 802b5e6:	3601      	adds	r6, #1
 802b5e8:	e7d9      	b.n	802b59e <_printf_common+0x8e>
	...

0802b5ec <_printf_i>:
 802b5ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b5f0:	7e0f      	ldrb	r7, [r1, #24]
 802b5f2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b5f4:	2f78      	cmp	r7, #120	; 0x78
 802b5f6:	4691      	mov	r9, r2
 802b5f8:	4680      	mov	r8, r0
 802b5fa:	460c      	mov	r4, r1
 802b5fc:	469a      	mov	sl, r3
 802b5fe:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b602:	d807      	bhi.n	802b614 <_printf_i+0x28>
 802b604:	2f62      	cmp	r7, #98	; 0x62
 802b606:	d80a      	bhi.n	802b61e <_printf_i+0x32>
 802b608:	2f00      	cmp	r7, #0
 802b60a:	f000 80d4 	beq.w	802b7b6 <_printf_i+0x1ca>
 802b60e:	2f58      	cmp	r7, #88	; 0x58
 802b610:	f000 80c0 	beq.w	802b794 <_printf_i+0x1a8>
 802b614:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b618:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b61c:	e03a      	b.n	802b694 <_printf_i+0xa8>
 802b61e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b622:	2b15      	cmp	r3, #21
 802b624:	d8f6      	bhi.n	802b614 <_printf_i+0x28>
 802b626:	a101      	add	r1, pc, #4	; (adr r1, 802b62c <_printf_i+0x40>)
 802b628:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b62c:	0802b685 	.word	0x0802b685
 802b630:	0802b699 	.word	0x0802b699
 802b634:	0802b615 	.word	0x0802b615
 802b638:	0802b615 	.word	0x0802b615
 802b63c:	0802b615 	.word	0x0802b615
 802b640:	0802b615 	.word	0x0802b615
 802b644:	0802b699 	.word	0x0802b699
 802b648:	0802b615 	.word	0x0802b615
 802b64c:	0802b615 	.word	0x0802b615
 802b650:	0802b615 	.word	0x0802b615
 802b654:	0802b615 	.word	0x0802b615
 802b658:	0802b79d 	.word	0x0802b79d
 802b65c:	0802b6c5 	.word	0x0802b6c5
 802b660:	0802b757 	.word	0x0802b757
 802b664:	0802b615 	.word	0x0802b615
 802b668:	0802b615 	.word	0x0802b615
 802b66c:	0802b7bf 	.word	0x0802b7bf
 802b670:	0802b615 	.word	0x0802b615
 802b674:	0802b6c5 	.word	0x0802b6c5
 802b678:	0802b615 	.word	0x0802b615
 802b67c:	0802b615 	.word	0x0802b615
 802b680:	0802b75f 	.word	0x0802b75f
 802b684:	682b      	ldr	r3, [r5, #0]
 802b686:	1d1a      	adds	r2, r3, #4
 802b688:	681b      	ldr	r3, [r3, #0]
 802b68a:	602a      	str	r2, [r5, #0]
 802b68c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b690:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b694:	2301      	movs	r3, #1
 802b696:	e09f      	b.n	802b7d8 <_printf_i+0x1ec>
 802b698:	6820      	ldr	r0, [r4, #0]
 802b69a:	682b      	ldr	r3, [r5, #0]
 802b69c:	0607      	lsls	r7, r0, #24
 802b69e:	f103 0104 	add.w	r1, r3, #4
 802b6a2:	6029      	str	r1, [r5, #0]
 802b6a4:	d501      	bpl.n	802b6aa <_printf_i+0xbe>
 802b6a6:	681e      	ldr	r6, [r3, #0]
 802b6a8:	e003      	b.n	802b6b2 <_printf_i+0xc6>
 802b6aa:	0646      	lsls	r6, r0, #25
 802b6ac:	d5fb      	bpl.n	802b6a6 <_printf_i+0xba>
 802b6ae:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b6b2:	2e00      	cmp	r6, #0
 802b6b4:	da03      	bge.n	802b6be <_printf_i+0xd2>
 802b6b6:	232d      	movs	r3, #45	; 0x2d
 802b6b8:	4276      	negs	r6, r6
 802b6ba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b6be:	485a      	ldr	r0, [pc, #360]	; (802b828 <_printf_i+0x23c>)
 802b6c0:	230a      	movs	r3, #10
 802b6c2:	e012      	b.n	802b6ea <_printf_i+0xfe>
 802b6c4:	682b      	ldr	r3, [r5, #0]
 802b6c6:	6820      	ldr	r0, [r4, #0]
 802b6c8:	1d19      	adds	r1, r3, #4
 802b6ca:	6029      	str	r1, [r5, #0]
 802b6cc:	0605      	lsls	r5, r0, #24
 802b6ce:	d501      	bpl.n	802b6d4 <_printf_i+0xe8>
 802b6d0:	681e      	ldr	r6, [r3, #0]
 802b6d2:	e002      	b.n	802b6da <_printf_i+0xee>
 802b6d4:	0641      	lsls	r1, r0, #25
 802b6d6:	d5fb      	bpl.n	802b6d0 <_printf_i+0xe4>
 802b6d8:	881e      	ldrh	r6, [r3, #0]
 802b6da:	4853      	ldr	r0, [pc, #332]	; (802b828 <_printf_i+0x23c>)
 802b6dc:	2f6f      	cmp	r7, #111	; 0x6f
 802b6de:	bf0c      	ite	eq
 802b6e0:	2308      	moveq	r3, #8
 802b6e2:	230a      	movne	r3, #10
 802b6e4:	2100      	movs	r1, #0
 802b6e6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b6ea:	6865      	ldr	r5, [r4, #4]
 802b6ec:	60a5      	str	r5, [r4, #8]
 802b6ee:	2d00      	cmp	r5, #0
 802b6f0:	bfa2      	ittt	ge
 802b6f2:	6821      	ldrge	r1, [r4, #0]
 802b6f4:	f021 0104 	bicge.w	r1, r1, #4
 802b6f8:	6021      	strge	r1, [r4, #0]
 802b6fa:	b90e      	cbnz	r6, 802b700 <_printf_i+0x114>
 802b6fc:	2d00      	cmp	r5, #0
 802b6fe:	d04b      	beq.n	802b798 <_printf_i+0x1ac>
 802b700:	4615      	mov	r5, r2
 802b702:	fbb6 f1f3 	udiv	r1, r6, r3
 802b706:	fb03 6711 	mls	r7, r3, r1, r6
 802b70a:	5dc7      	ldrb	r7, [r0, r7]
 802b70c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802b710:	4637      	mov	r7, r6
 802b712:	42bb      	cmp	r3, r7
 802b714:	460e      	mov	r6, r1
 802b716:	d9f4      	bls.n	802b702 <_printf_i+0x116>
 802b718:	2b08      	cmp	r3, #8
 802b71a:	d10b      	bne.n	802b734 <_printf_i+0x148>
 802b71c:	6823      	ldr	r3, [r4, #0]
 802b71e:	07de      	lsls	r6, r3, #31
 802b720:	d508      	bpl.n	802b734 <_printf_i+0x148>
 802b722:	6923      	ldr	r3, [r4, #16]
 802b724:	6861      	ldr	r1, [r4, #4]
 802b726:	4299      	cmp	r1, r3
 802b728:	bfde      	ittt	le
 802b72a:	2330      	movle	r3, #48	; 0x30
 802b72c:	f805 3c01 	strble.w	r3, [r5, #-1]
 802b730:	f105 35ff 	addle.w	r5, r5, #4294967295
 802b734:	1b52      	subs	r2, r2, r5
 802b736:	6122      	str	r2, [r4, #16]
 802b738:	f8cd a000 	str.w	sl, [sp]
 802b73c:	464b      	mov	r3, r9
 802b73e:	aa03      	add	r2, sp, #12
 802b740:	4621      	mov	r1, r4
 802b742:	4640      	mov	r0, r8
 802b744:	f7ff fee4 	bl	802b510 <_printf_common>
 802b748:	3001      	adds	r0, #1
 802b74a:	d14a      	bne.n	802b7e2 <_printf_i+0x1f6>
 802b74c:	f04f 30ff 	mov.w	r0, #4294967295
 802b750:	b004      	add	sp, #16
 802b752:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b756:	6823      	ldr	r3, [r4, #0]
 802b758:	f043 0320 	orr.w	r3, r3, #32
 802b75c:	6023      	str	r3, [r4, #0]
 802b75e:	4833      	ldr	r0, [pc, #204]	; (802b82c <_printf_i+0x240>)
 802b760:	2778      	movs	r7, #120	; 0x78
 802b762:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802b766:	6823      	ldr	r3, [r4, #0]
 802b768:	6829      	ldr	r1, [r5, #0]
 802b76a:	061f      	lsls	r7, r3, #24
 802b76c:	f851 6b04 	ldr.w	r6, [r1], #4
 802b770:	d402      	bmi.n	802b778 <_printf_i+0x18c>
 802b772:	065f      	lsls	r7, r3, #25
 802b774:	bf48      	it	mi
 802b776:	b2b6      	uxthmi	r6, r6
 802b778:	07df      	lsls	r7, r3, #31
 802b77a:	bf48      	it	mi
 802b77c:	f043 0320 	orrmi.w	r3, r3, #32
 802b780:	6029      	str	r1, [r5, #0]
 802b782:	bf48      	it	mi
 802b784:	6023      	strmi	r3, [r4, #0]
 802b786:	b91e      	cbnz	r6, 802b790 <_printf_i+0x1a4>
 802b788:	6823      	ldr	r3, [r4, #0]
 802b78a:	f023 0320 	bic.w	r3, r3, #32
 802b78e:	6023      	str	r3, [r4, #0]
 802b790:	2310      	movs	r3, #16
 802b792:	e7a7      	b.n	802b6e4 <_printf_i+0xf8>
 802b794:	4824      	ldr	r0, [pc, #144]	; (802b828 <_printf_i+0x23c>)
 802b796:	e7e4      	b.n	802b762 <_printf_i+0x176>
 802b798:	4615      	mov	r5, r2
 802b79a:	e7bd      	b.n	802b718 <_printf_i+0x12c>
 802b79c:	682b      	ldr	r3, [r5, #0]
 802b79e:	6826      	ldr	r6, [r4, #0]
 802b7a0:	6961      	ldr	r1, [r4, #20]
 802b7a2:	1d18      	adds	r0, r3, #4
 802b7a4:	6028      	str	r0, [r5, #0]
 802b7a6:	0635      	lsls	r5, r6, #24
 802b7a8:	681b      	ldr	r3, [r3, #0]
 802b7aa:	d501      	bpl.n	802b7b0 <_printf_i+0x1c4>
 802b7ac:	6019      	str	r1, [r3, #0]
 802b7ae:	e002      	b.n	802b7b6 <_printf_i+0x1ca>
 802b7b0:	0670      	lsls	r0, r6, #25
 802b7b2:	d5fb      	bpl.n	802b7ac <_printf_i+0x1c0>
 802b7b4:	8019      	strh	r1, [r3, #0]
 802b7b6:	2300      	movs	r3, #0
 802b7b8:	6123      	str	r3, [r4, #16]
 802b7ba:	4615      	mov	r5, r2
 802b7bc:	e7bc      	b.n	802b738 <_printf_i+0x14c>
 802b7be:	682b      	ldr	r3, [r5, #0]
 802b7c0:	1d1a      	adds	r2, r3, #4
 802b7c2:	602a      	str	r2, [r5, #0]
 802b7c4:	681d      	ldr	r5, [r3, #0]
 802b7c6:	6862      	ldr	r2, [r4, #4]
 802b7c8:	2100      	movs	r1, #0
 802b7ca:	4628      	mov	r0, r5
 802b7cc:	f7d4 fd70 	bl	80002b0 <memchr>
 802b7d0:	b108      	cbz	r0, 802b7d6 <_printf_i+0x1ea>
 802b7d2:	1b40      	subs	r0, r0, r5
 802b7d4:	6060      	str	r0, [r4, #4]
 802b7d6:	6863      	ldr	r3, [r4, #4]
 802b7d8:	6123      	str	r3, [r4, #16]
 802b7da:	2300      	movs	r3, #0
 802b7dc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b7e0:	e7aa      	b.n	802b738 <_printf_i+0x14c>
 802b7e2:	6923      	ldr	r3, [r4, #16]
 802b7e4:	462a      	mov	r2, r5
 802b7e6:	4649      	mov	r1, r9
 802b7e8:	4640      	mov	r0, r8
 802b7ea:	47d0      	blx	sl
 802b7ec:	3001      	adds	r0, #1
 802b7ee:	d0ad      	beq.n	802b74c <_printf_i+0x160>
 802b7f0:	6823      	ldr	r3, [r4, #0]
 802b7f2:	079b      	lsls	r3, r3, #30
 802b7f4:	d413      	bmi.n	802b81e <_printf_i+0x232>
 802b7f6:	68e0      	ldr	r0, [r4, #12]
 802b7f8:	9b03      	ldr	r3, [sp, #12]
 802b7fa:	4298      	cmp	r0, r3
 802b7fc:	bfb8      	it	lt
 802b7fe:	4618      	movlt	r0, r3
 802b800:	e7a6      	b.n	802b750 <_printf_i+0x164>
 802b802:	2301      	movs	r3, #1
 802b804:	4632      	mov	r2, r6
 802b806:	4649      	mov	r1, r9
 802b808:	4640      	mov	r0, r8
 802b80a:	47d0      	blx	sl
 802b80c:	3001      	adds	r0, #1
 802b80e:	d09d      	beq.n	802b74c <_printf_i+0x160>
 802b810:	3501      	adds	r5, #1
 802b812:	68e3      	ldr	r3, [r4, #12]
 802b814:	9903      	ldr	r1, [sp, #12]
 802b816:	1a5b      	subs	r3, r3, r1
 802b818:	42ab      	cmp	r3, r5
 802b81a:	dcf2      	bgt.n	802b802 <_printf_i+0x216>
 802b81c:	e7eb      	b.n	802b7f6 <_printf_i+0x20a>
 802b81e:	2500      	movs	r5, #0
 802b820:	f104 0619 	add.w	r6, r4, #25
 802b824:	e7f5      	b.n	802b812 <_printf_i+0x226>
 802b826:	bf00      	nop
 802b828:	08042d59 	.word	0x08042d59
 802b82c:	08042d6a 	.word	0x08042d6a

0802b830 <__sflush_r>:
 802b830:	898a      	ldrh	r2, [r1, #12]
 802b832:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b836:	4605      	mov	r5, r0
 802b838:	0710      	lsls	r0, r2, #28
 802b83a:	460c      	mov	r4, r1
 802b83c:	d458      	bmi.n	802b8f0 <__sflush_r+0xc0>
 802b83e:	684b      	ldr	r3, [r1, #4]
 802b840:	2b00      	cmp	r3, #0
 802b842:	dc05      	bgt.n	802b850 <__sflush_r+0x20>
 802b844:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802b846:	2b00      	cmp	r3, #0
 802b848:	dc02      	bgt.n	802b850 <__sflush_r+0x20>
 802b84a:	2000      	movs	r0, #0
 802b84c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b850:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b852:	2e00      	cmp	r6, #0
 802b854:	d0f9      	beq.n	802b84a <__sflush_r+0x1a>
 802b856:	2300      	movs	r3, #0
 802b858:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802b85c:	682f      	ldr	r7, [r5, #0]
 802b85e:	6a21      	ldr	r1, [r4, #32]
 802b860:	602b      	str	r3, [r5, #0]
 802b862:	d032      	beq.n	802b8ca <__sflush_r+0x9a>
 802b864:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802b866:	89a3      	ldrh	r3, [r4, #12]
 802b868:	075a      	lsls	r2, r3, #29
 802b86a:	d505      	bpl.n	802b878 <__sflush_r+0x48>
 802b86c:	6863      	ldr	r3, [r4, #4]
 802b86e:	1ac0      	subs	r0, r0, r3
 802b870:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802b872:	b10b      	cbz	r3, 802b878 <__sflush_r+0x48>
 802b874:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802b876:	1ac0      	subs	r0, r0, r3
 802b878:	2300      	movs	r3, #0
 802b87a:	4602      	mov	r2, r0
 802b87c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b87e:	6a21      	ldr	r1, [r4, #32]
 802b880:	4628      	mov	r0, r5
 802b882:	47b0      	blx	r6
 802b884:	1c43      	adds	r3, r0, #1
 802b886:	89a3      	ldrh	r3, [r4, #12]
 802b888:	d106      	bne.n	802b898 <__sflush_r+0x68>
 802b88a:	6829      	ldr	r1, [r5, #0]
 802b88c:	291d      	cmp	r1, #29
 802b88e:	d82b      	bhi.n	802b8e8 <__sflush_r+0xb8>
 802b890:	4a29      	ldr	r2, [pc, #164]	; (802b938 <__sflush_r+0x108>)
 802b892:	410a      	asrs	r2, r1
 802b894:	07d6      	lsls	r6, r2, #31
 802b896:	d427      	bmi.n	802b8e8 <__sflush_r+0xb8>
 802b898:	2200      	movs	r2, #0
 802b89a:	6062      	str	r2, [r4, #4]
 802b89c:	04d9      	lsls	r1, r3, #19
 802b89e:	6922      	ldr	r2, [r4, #16]
 802b8a0:	6022      	str	r2, [r4, #0]
 802b8a2:	d504      	bpl.n	802b8ae <__sflush_r+0x7e>
 802b8a4:	1c42      	adds	r2, r0, #1
 802b8a6:	d101      	bne.n	802b8ac <__sflush_r+0x7c>
 802b8a8:	682b      	ldr	r3, [r5, #0]
 802b8aa:	b903      	cbnz	r3, 802b8ae <__sflush_r+0x7e>
 802b8ac:	6560      	str	r0, [r4, #84]	; 0x54
 802b8ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b8b0:	602f      	str	r7, [r5, #0]
 802b8b2:	2900      	cmp	r1, #0
 802b8b4:	d0c9      	beq.n	802b84a <__sflush_r+0x1a>
 802b8b6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b8ba:	4299      	cmp	r1, r3
 802b8bc:	d002      	beq.n	802b8c4 <__sflush_r+0x94>
 802b8be:	4628      	mov	r0, r5
 802b8c0:	f7ff fc96 	bl	802b1f0 <_free_r>
 802b8c4:	2000      	movs	r0, #0
 802b8c6:	6360      	str	r0, [r4, #52]	; 0x34
 802b8c8:	e7c0      	b.n	802b84c <__sflush_r+0x1c>
 802b8ca:	2301      	movs	r3, #1
 802b8cc:	4628      	mov	r0, r5
 802b8ce:	47b0      	blx	r6
 802b8d0:	1c41      	adds	r1, r0, #1
 802b8d2:	d1c8      	bne.n	802b866 <__sflush_r+0x36>
 802b8d4:	682b      	ldr	r3, [r5, #0]
 802b8d6:	2b00      	cmp	r3, #0
 802b8d8:	d0c5      	beq.n	802b866 <__sflush_r+0x36>
 802b8da:	2b1d      	cmp	r3, #29
 802b8dc:	d001      	beq.n	802b8e2 <__sflush_r+0xb2>
 802b8de:	2b16      	cmp	r3, #22
 802b8e0:	d101      	bne.n	802b8e6 <__sflush_r+0xb6>
 802b8e2:	602f      	str	r7, [r5, #0]
 802b8e4:	e7b1      	b.n	802b84a <__sflush_r+0x1a>
 802b8e6:	89a3      	ldrh	r3, [r4, #12]
 802b8e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b8ec:	81a3      	strh	r3, [r4, #12]
 802b8ee:	e7ad      	b.n	802b84c <__sflush_r+0x1c>
 802b8f0:	690f      	ldr	r7, [r1, #16]
 802b8f2:	2f00      	cmp	r7, #0
 802b8f4:	d0a9      	beq.n	802b84a <__sflush_r+0x1a>
 802b8f6:	0793      	lsls	r3, r2, #30
 802b8f8:	680e      	ldr	r6, [r1, #0]
 802b8fa:	bf08      	it	eq
 802b8fc:	694b      	ldreq	r3, [r1, #20]
 802b8fe:	600f      	str	r7, [r1, #0]
 802b900:	bf18      	it	ne
 802b902:	2300      	movne	r3, #0
 802b904:	eba6 0807 	sub.w	r8, r6, r7
 802b908:	608b      	str	r3, [r1, #8]
 802b90a:	f1b8 0f00 	cmp.w	r8, #0
 802b90e:	dd9c      	ble.n	802b84a <__sflush_r+0x1a>
 802b910:	6a21      	ldr	r1, [r4, #32]
 802b912:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802b914:	4643      	mov	r3, r8
 802b916:	463a      	mov	r2, r7
 802b918:	4628      	mov	r0, r5
 802b91a:	47b0      	blx	r6
 802b91c:	2800      	cmp	r0, #0
 802b91e:	dc06      	bgt.n	802b92e <__sflush_r+0xfe>
 802b920:	89a3      	ldrh	r3, [r4, #12]
 802b922:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b926:	81a3      	strh	r3, [r4, #12]
 802b928:	f04f 30ff 	mov.w	r0, #4294967295
 802b92c:	e78e      	b.n	802b84c <__sflush_r+0x1c>
 802b92e:	4407      	add	r7, r0
 802b930:	eba8 0800 	sub.w	r8, r8, r0
 802b934:	e7e9      	b.n	802b90a <__sflush_r+0xda>
 802b936:	bf00      	nop
 802b938:	dfbffffe 	.word	0xdfbffffe

0802b93c <_fflush_r>:
 802b93c:	b538      	push	{r3, r4, r5, lr}
 802b93e:	690b      	ldr	r3, [r1, #16]
 802b940:	4605      	mov	r5, r0
 802b942:	460c      	mov	r4, r1
 802b944:	b913      	cbnz	r3, 802b94c <_fflush_r+0x10>
 802b946:	2500      	movs	r5, #0
 802b948:	4628      	mov	r0, r5
 802b94a:	bd38      	pop	{r3, r4, r5, pc}
 802b94c:	b118      	cbz	r0, 802b956 <_fflush_r+0x1a>
 802b94e:	6a03      	ldr	r3, [r0, #32]
 802b950:	b90b      	cbnz	r3, 802b956 <_fflush_r+0x1a>
 802b952:	f7ff fa2f 	bl	802adb4 <__sinit>
 802b956:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b95a:	2b00      	cmp	r3, #0
 802b95c:	d0f3      	beq.n	802b946 <_fflush_r+0xa>
 802b95e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802b960:	07d0      	lsls	r0, r2, #31
 802b962:	d404      	bmi.n	802b96e <_fflush_r+0x32>
 802b964:	0599      	lsls	r1, r3, #22
 802b966:	d402      	bmi.n	802b96e <_fflush_r+0x32>
 802b968:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b96a:	f7ff fbd2 	bl	802b112 <__retarget_lock_acquire_recursive>
 802b96e:	4628      	mov	r0, r5
 802b970:	4621      	mov	r1, r4
 802b972:	f7ff ff5d 	bl	802b830 <__sflush_r>
 802b976:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802b978:	07da      	lsls	r2, r3, #31
 802b97a:	4605      	mov	r5, r0
 802b97c:	d4e4      	bmi.n	802b948 <_fflush_r+0xc>
 802b97e:	89a3      	ldrh	r3, [r4, #12]
 802b980:	059b      	lsls	r3, r3, #22
 802b982:	d4e1      	bmi.n	802b948 <_fflush_r+0xc>
 802b984:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b986:	f7ff fbc5 	bl	802b114 <__retarget_lock_release_recursive>
 802b98a:	e7dd      	b.n	802b948 <_fflush_r+0xc>

0802b98c <__swbuf_r>:
 802b98c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b98e:	460e      	mov	r6, r1
 802b990:	4614      	mov	r4, r2
 802b992:	4605      	mov	r5, r0
 802b994:	b118      	cbz	r0, 802b99e <__swbuf_r+0x12>
 802b996:	6a03      	ldr	r3, [r0, #32]
 802b998:	b90b      	cbnz	r3, 802b99e <__swbuf_r+0x12>
 802b99a:	f7ff fa0b 	bl	802adb4 <__sinit>
 802b99e:	69a3      	ldr	r3, [r4, #24]
 802b9a0:	60a3      	str	r3, [r4, #8]
 802b9a2:	89a3      	ldrh	r3, [r4, #12]
 802b9a4:	071a      	lsls	r2, r3, #28
 802b9a6:	d525      	bpl.n	802b9f4 <__swbuf_r+0x68>
 802b9a8:	6923      	ldr	r3, [r4, #16]
 802b9aa:	b31b      	cbz	r3, 802b9f4 <__swbuf_r+0x68>
 802b9ac:	6823      	ldr	r3, [r4, #0]
 802b9ae:	6922      	ldr	r2, [r4, #16]
 802b9b0:	1a98      	subs	r0, r3, r2
 802b9b2:	6963      	ldr	r3, [r4, #20]
 802b9b4:	b2f6      	uxtb	r6, r6
 802b9b6:	4283      	cmp	r3, r0
 802b9b8:	4637      	mov	r7, r6
 802b9ba:	dc04      	bgt.n	802b9c6 <__swbuf_r+0x3a>
 802b9bc:	4621      	mov	r1, r4
 802b9be:	4628      	mov	r0, r5
 802b9c0:	f7ff ffbc 	bl	802b93c <_fflush_r>
 802b9c4:	b9e0      	cbnz	r0, 802ba00 <__swbuf_r+0x74>
 802b9c6:	68a3      	ldr	r3, [r4, #8]
 802b9c8:	3b01      	subs	r3, #1
 802b9ca:	60a3      	str	r3, [r4, #8]
 802b9cc:	6823      	ldr	r3, [r4, #0]
 802b9ce:	1c5a      	adds	r2, r3, #1
 802b9d0:	6022      	str	r2, [r4, #0]
 802b9d2:	701e      	strb	r6, [r3, #0]
 802b9d4:	6962      	ldr	r2, [r4, #20]
 802b9d6:	1c43      	adds	r3, r0, #1
 802b9d8:	429a      	cmp	r2, r3
 802b9da:	d004      	beq.n	802b9e6 <__swbuf_r+0x5a>
 802b9dc:	89a3      	ldrh	r3, [r4, #12]
 802b9de:	07db      	lsls	r3, r3, #31
 802b9e0:	d506      	bpl.n	802b9f0 <__swbuf_r+0x64>
 802b9e2:	2e0a      	cmp	r6, #10
 802b9e4:	d104      	bne.n	802b9f0 <__swbuf_r+0x64>
 802b9e6:	4621      	mov	r1, r4
 802b9e8:	4628      	mov	r0, r5
 802b9ea:	f7ff ffa7 	bl	802b93c <_fflush_r>
 802b9ee:	b938      	cbnz	r0, 802ba00 <__swbuf_r+0x74>
 802b9f0:	4638      	mov	r0, r7
 802b9f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b9f4:	4621      	mov	r1, r4
 802b9f6:	4628      	mov	r0, r5
 802b9f8:	f000 f806 	bl	802ba08 <__swsetup_r>
 802b9fc:	2800      	cmp	r0, #0
 802b9fe:	d0d5      	beq.n	802b9ac <__swbuf_r+0x20>
 802ba00:	f04f 37ff 	mov.w	r7, #4294967295
 802ba04:	e7f4      	b.n	802b9f0 <__swbuf_r+0x64>
	...

0802ba08 <__swsetup_r>:
 802ba08:	b538      	push	{r3, r4, r5, lr}
 802ba0a:	4b2a      	ldr	r3, [pc, #168]	; (802bab4 <__swsetup_r+0xac>)
 802ba0c:	4605      	mov	r5, r0
 802ba0e:	6818      	ldr	r0, [r3, #0]
 802ba10:	460c      	mov	r4, r1
 802ba12:	b118      	cbz	r0, 802ba1c <__swsetup_r+0x14>
 802ba14:	6a03      	ldr	r3, [r0, #32]
 802ba16:	b90b      	cbnz	r3, 802ba1c <__swsetup_r+0x14>
 802ba18:	f7ff f9cc 	bl	802adb4 <__sinit>
 802ba1c:	89a3      	ldrh	r3, [r4, #12]
 802ba1e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ba22:	0718      	lsls	r0, r3, #28
 802ba24:	d422      	bmi.n	802ba6c <__swsetup_r+0x64>
 802ba26:	06d9      	lsls	r1, r3, #27
 802ba28:	d407      	bmi.n	802ba3a <__swsetup_r+0x32>
 802ba2a:	2309      	movs	r3, #9
 802ba2c:	602b      	str	r3, [r5, #0]
 802ba2e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802ba32:	81a3      	strh	r3, [r4, #12]
 802ba34:	f04f 30ff 	mov.w	r0, #4294967295
 802ba38:	e034      	b.n	802baa4 <__swsetup_r+0x9c>
 802ba3a:	0758      	lsls	r0, r3, #29
 802ba3c:	d512      	bpl.n	802ba64 <__swsetup_r+0x5c>
 802ba3e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ba40:	b141      	cbz	r1, 802ba54 <__swsetup_r+0x4c>
 802ba42:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802ba46:	4299      	cmp	r1, r3
 802ba48:	d002      	beq.n	802ba50 <__swsetup_r+0x48>
 802ba4a:	4628      	mov	r0, r5
 802ba4c:	f7ff fbd0 	bl	802b1f0 <_free_r>
 802ba50:	2300      	movs	r3, #0
 802ba52:	6363      	str	r3, [r4, #52]	; 0x34
 802ba54:	89a3      	ldrh	r3, [r4, #12]
 802ba56:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802ba5a:	81a3      	strh	r3, [r4, #12]
 802ba5c:	2300      	movs	r3, #0
 802ba5e:	6063      	str	r3, [r4, #4]
 802ba60:	6923      	ldr	r3, [r4, #16]
 802ba62:	6023      	str	r3, [r4, #0]
 802ba64:	89a3      	ldrh	r3, [r4, #12]
 802ba66:	f043 0308 	orr.w	r3, r3, #8
 802ba6a:	81a3      	strh	r3, [r4, #12]
 802ba6c:	6923      	ldr	r3, [r4, #16]
 802ba6e:	b94b      	cbnz	r3, 802ba84 <__swsetup_r+0x7c>
 802ba70:	89a3      	ldrh	r3, [r4, #12]
 802ba72:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802ba76:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802ba7a:	d003      	beq.n	802ba84 <__swsetup_r+0x7c>
 802ba7c:	4621      	mov	r1, r4
 802ba7e:	4628      	mov	r0, r5
 802ba80:	f000 f840 	bl	802bb04 <__smakebuf_r>
 802ba84:	89a0      	ldrh	r0, [r4, #12]
 802ba86:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ba8a:	f010 0301 	ands.w	r3, r0, #1
 802ba8e:	d00a      	beq.n	802baa6 <__swsetup_r+0x9e>
 802ba90:	2300      	movs	r3, #0
 802ba92:	60a3      	str	r3, [r4, #8]
 802ba94:	6963      	ldr	r3, [r4, #20]
 802ba96:	425b      	negs	r3, r3
 802ba98:	61a3      	str	r3, [r4, #24]
 802ba9a:	6923      	ldr	r3, [r4, #16]
 802ba9c:	b943      	cbnz	r3, 802bab0 <__swsetup_r+0xa8>
 802ba9e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802baa2:	d1c4      	bne.n	802ba2e <__swsetup_r+0x26>
 802baa4:	bd38      	pop	{r3, r4, r5, pc}
 802baa6:	0781      	lsls	r1, r0, #30
 802baa8:	bf58      	it	pl
 802baaa:	6963      	ldrpl	r3, [r4, #20]
 802baac:	60a3      	str	r3, [r4, #8]
 802baae:	e7f4      	b.n	802ba9a <__swsetup_r+0x92>
 802bab0:	2000      	movs	r0, #0
 802bab2:	e7f7      	b.n	802baa4 <__swsetup_r+0x9c>
 802bab4:	2000017c 	.word	0x2000017c

0802bab8 <__swhatbuf_r>:
 802bab8:	b570      	push	{r4, r5, r6, lr}
 802baba:	460c      	mov	r4, r1
 802babc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bac0:	2900      	cmp	r1, #0
 802bac2:	b096      	sub	sp, #88	; 0x58
 802bac4:	4615      	mov	r5, r2
 802bac6:	461e      	mov	r6, r3
 802bac8:	da0d      	bge.n	802bae6 <__swhatbuf_r+0x2e>
 802baca:	89a3      	ldrh	r3, [r4, #12]
 802bacc:	f013 0f80 	tst.w	r3, #128	; 0x80
 802bad0:	f04f 0100 	mov.w	r1, #0
 802bad4:	bf0c      	ite	eq
 802bad6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802bada:	2340      	movne	r3, #64	; 0x40
 802badc:	2000      	movs	r0, #0
 802bade:	6031      	str	r1, [r6, #0]
 802bae0:	602b      	str	r3, [r5, #0]
 802bae2:	b016      	add	sp, #88	; 0x58
 802bae4:	bd70      	pop	{r4, r5, r6, pc}
 802bae6:	466a      	mov	r2, sp
 802bae8:	f000 f848 	bl	802bb7c <_fstat_r>
 802baec:	2800      	cmp	r0, #0
 802baee:	dbec      	blt.n	802baca <__swhatbuf_r+0x12>
 802baf0:	9901      	ldr	r1, [sp, #4]
 802baf2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802baf6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802bafa:	4259      	negs	r1, r3
 802bafc:	4159      	adcs	r1, r3
 802bafe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802bb02:	e7eb      	b.n	802badc <__swhatbuf_r+0x24>

0802bb04 <__smakebuf_r>:
 802bb04:	898b      	ldrh	r3, [r1, #12]
 802bb06:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802bb08:	079d      	lsls	r5, r3, #30
 802bb0a:	4606      	mov	r6, r0
 802bb0c:	460c      	mov	r4, r1
 802bb0e:	d507      	bpl.n	802bb20 <__smakebuf_r+0x1c>
 802bb10:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802bb14:	6023      	str	r3, [r4, #0]
 802bb16:	6123      	str	r3, [r4, #16]
 802bb18:	2301      	movs	r3, #1
 802bb1a:	6163      	str	r3, [r4, #20]
 802bb1c:	b002      	add	sp, #8
 802bb1e:	bd70      	pop	{r4, r5, r6, pc}
 802bb20:	ab01      	add	r3, sp, #4
 802bb22:	466a      	mov	r2, sp
 802bb24:	f7ff ffc8 	bl	802bab8 <__swhatbuf_r>
 802bb28:	9900      	ldr	r1, [sp, #0]
 802bb2a:	4605      	mov	r5, r0
 802bb2c:	4630      	mov	r0, r6
 802bb2e:	f7ff f81b 	bl	802ab68 <_malloc_r>
 802bb32:	b948      	cbnz	r0, 802bb48 <__smakebuf_r+0x44>
 802bb34:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bb38:	059a      	lsls	r2, r3, #22
 802bb3a:	d4ef      	bmi.n	802bb1c <__smakebuf_r+0x18>
 802bb3c:	f023 0303 	bic.w	r3, r3, #3
 802bb40:	f043 0302 	orr.w	r3, r3, #2
 802bb44:	81a3      	strh	r3, [r4, #12]
 802bb46:	e7e3      	b.n	802bb10 <__smakebuf_r+0xc>
 802bb48:	89a3      	ldrh	r3, [r4, #12]
 802bb4a:	6020      	str	r0, [r4, #0]
 802bb4c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802bb50:	81a3      	strh	r3, [r4, #12]
 802bb52:	9b00      	ldr	r3, [sp, #0]
 802bb54:	6163      	str	r3, [r4, #20]
 802bb56:	9b01      	ldr	r3, [sp, #4]
 802bb58:	6120      	str	r0, [r4, #16]
 802bb5a:	b15b      	cbz	r3, 802bb74 <__smakebuf_r+0x70>
 802bb5c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bb60:	4630      	mov	r0, r6
 802bb62:	f000 f81d 	bl	802bba0 <_isatty_r>
 802bb66:	b128      	cbz	r0, 802bb74 <__smakebuf_r+0x70>
 802bb68:	89a3      	ldrh	r3, [r4, #12]
 802bb6a:	f023 0303 	bic.w	r3, r3, #3
 802bb6e:	f043 0301 	orr.w	r3, r3, #1
 802bb72:	81a3      	strh	r3, [r4, #12]
 802bb74:	89a3      	ldrh	r3, [r4, #12]
 802bb76:	431d      	orrs	r5, r3
 802bb78:	81a5      	strh	r5, [r4, #12]
 802bb7a:	e7cf      	b.n	802bb1c <__smakebuf_r+0x18>

0802bb7c <_fstat_r>:
 802bb7c:	b538      	push	{r3, r4, r5, lr}
 802bb7e:	4d07      	ldr	r5, [pc, #28]	; (802bb9c <_fstat_r+0x20>)
 802bb80:	2300      	movs	r3, #0
 802bb82:	4604      	mov	r4, r0
 802bb84:	4608      	mov	r0, r1
 802bb86:	4611      	mov	r1, r2
 802bb88:	602b      	str	r3, [r5, #0]
 802bb8a:	f7d6 f81d 	bl	8001bc8 <_fstat>
 802bb8e:	1c43      	adds	r3, r0, #1
 802bb90:	d102      	bne.n	802bb98 <_fstat_r+0x1c>
 802bb92:	682b      	ldr	r3, [r5, #0]
 802bb94:	b103      	cbz	r3, 802bb98 <_fstat_r+0x1c>
 802bb96:	6023      	str	r3, [r4, #0]
 802bb98:	bd38      	pop	{r3, r4, r5, pc}
 802bb9a:	bf00      	nop
 802bb9c:	20013d54 	.word	0x20013d54

0802bba0 <_isatty_r>:
 802bba0:	b538      	push	{r3, r4, r5, lr}
 802bba2:	4d06      	ldr	r5, [pc, #24]	; (802bbbc <_isatty_r+0x1c>)
 802bba4:	2300      	movs	r3, #0
 802bba6:	4604      	mov	r4, r0
 802bba8:	4608      	mov	r0, r1
 802bbaa:	602b      	str	r3, [r5, #0]
 802bbac:	f7d6 f812 	bl	8001bd4 <_isatty>
 802bbb0:	1c43      	adds	r3, r0, #1
 802bbb2:	d102      	bne.n	802bbba <_isatty_r+0x1a>
 802bbb4:	682b      	ldr	r3, [r5, #0]
 802bbb6:	b103      	cbz	r3, 802bbba <_isatty_r+0x1a>
 802bbb8:	6023      	str	r3, [r4, #0]
 802bbba:	bd38      	pop	{r3, r4, r5, pc}
 802bbbc:	20013d54 	.word	0x20013d54

0802bbc0 <_init>:
 802bbc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bbc2:	bf00      	nop
 802bbc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bbc6:	bc08      	pop	{r3}
 802bbc8:	469e      	mov	lr, r3
 802bbca:	4770      	bx	lr

0802bbcc <_fini>:
 802bbcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bbce:	bf00      	nop
 802bbd0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bbd2:	bc08      	pop	{r3}
 802bbd4:	469e      	mov	lr, r3
 802bbd6:	4770      	bx	lr

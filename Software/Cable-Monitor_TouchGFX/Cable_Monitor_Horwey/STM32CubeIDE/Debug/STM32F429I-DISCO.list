
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002ba14  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000175b0  0802bbc4  0802bbc4  0003bbc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043174  08043174  00053174  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08046e6c  08046e6c  00056e6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000007c4  080470b8  080470b8  000570b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  0804787c  0804787c  0005787c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  081608ac  081608ac  00180168  2**0
                  CONTENTS
  8 .ARM          00000008  081608ac  081608ac  001708ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  081608b4  081608b4  00180168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  081608b4  081608b4  001708b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  081608c8  081608c8  001708c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  081608cc  00180000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013874  20000168  08160a34  00180168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200139dc  08160a34  001839dc  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00180168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00190000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00180198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009c6db  00000000  00000000  001802ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 000000a9  00000000  00000000  0021c9a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   002996d1  00000000  00000000  0021ca4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0003270c  00000000  00000000  004b611f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004810  00000000  00000000  004e8830  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0012116d  00000000  00000000  004ed040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008265  00000000  00000000  0060e1ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00032483  00000000  00000000  00616412  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003ced2  00000000  00000000  00648895  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d4d8  00000000  00000000  00685768  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00692c40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  00695fb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802bbac 	.word	0x0802bbac

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802bbac 	.word	0x0802bbac

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f009 f96f 	bl	8009fc4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02a f9e5 	bl	802b0b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f000 fb21 	bl	8001330 <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	081608cc 	.word	0x081608cc
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000d00:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000d04:	200139dc 	.word	0x200139dc

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(float32_t input_samples[]) {
 8000d0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d10:	ed2d 8b02 	vpush	{d8}
 8000d14:	b088      	sub	sp, #32
 8000d16:	af00      	add	r7, sp, #0
 8000d18:	4605      	mov	r5, r0
 8000d1a:	460e      	mov	r6, r1
    // Perform FFT using CMSIS-DSP library
    const uint8_t fft_size = MEAS_get_num_of_samples();
 8000d1c:	f000 ff8a 	bl	8001c34 <MEAS_get_num_of_samples>
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d20:	4604      	mov	r4, r0
 8000d22:	2800      	cmp	r0, #0
 8000d24:	f000 8089 	beq.w	8000e3a <calculate_freq_and_signalstrength+0x12e>
 8000d28:	2204      	movs	r2, #4
        input_samples[i] -= 2047.5;
 8000d2a:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8000e40 <calculate_freq_and_signalstrength+0x134>
 8000d2e:	4633      	mov	r3, r6
 8000d30:	fb12 6200 	smlabb	r2, r2, r0, r6
 8000d34:	edd3 7a00 	vldr	s15, [r3]
 8000d38:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000d3c:	ece3 7a01 	vstmia	r3!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d40:	429a      	cmp	r2, r3
 8000d42:	d1f7      	bne.n	8000d34 <calculate_freq_and_signalstrength+0x28>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * fft_size];
 8000d44:	b223      	sxth	r3, r4
 8000d46:	00db      	lsls	r3, r3, #3
 8000d48:	ebad 0d03 	sub.w	sp, sp, r3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d4c:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * fft_size];
 8000d50:	46e8      	mov	r8, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000d52:	b2a1      	uxth	r1, r4
 8000d54:	f107 0008 	add.w	r0, r7, #8
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d58:	eef8 8ae7 	vcvt.f32.s32	s17, s15
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000d5c:	f027 fefe 	bl	8028b5c <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000d60:	2300      	movs	r3, #0
 8000d62:	4631      	mov	r1, r6
 8000d64:	f107 0008 	add.w	r0, r7, #8
 8000d68:	4642      	mov	r2, r8
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000d6a:	f3c4 0647 	ubfx	r6, r4, #1, #8
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000d6e:	f027 ff79 	bl	8028c64 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000d72:	4632      	mov	r2, r6
 8000d74:	4641      	mov	r1, r8
 8000d76:	4640      	mov	r0, r8
 8000d78:	f028 fbe2 	bl	8029540 <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000d7c:	463b      	mov	r3, r7
 8000d7e:	1d3a      	adds	r2, r7, #4
 8000d80:	4631      	mov	r1, r6
 8000d82:	4640      	mov	r0, r8
 8000d84:	f027 fe82 	bl	8028a8c <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d88:	edd7 7a00 	vldr	s15, [r7]
 8000d8c:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000d90:	f000 ff52 	bl	8001c38 <MEAS_get_samp_freq>
 8000d94:	ee07 0a90 	vmov	s15, r0
 8000d98:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000d9c:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8000e44 <calculate_freq_and_signalstrength+0x138>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000da0:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8000da4:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000da8:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8000dac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000db0:	d817      	bhi.n	8000de2 <calculate_freq_and_signalstrength+0xd6>
 8000db2:	eddf 7a25 	vldr	s15, [pc, #148]	; 8000e48 <calculate_freq_and_signalstrength+0x13c>
 8000db6:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000dba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000dbe:	db28      	blt.n	8000e12 <calculate_freq_and_signalstrength+0x106>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000dc0:	f000 ff3a 	bl	8001c38 <MEAS_get_samp_freq>
 8000dc4:	2332      	movs	r3, #50	; 0x32
 8000dc6:	fb04 f303 	mul.w	r3, r4, r3
 8000dca:	fbb3 f0f0 	udiv	r0, r3, r0
    // set the signal strength to 0
    float signal_strength = 0; 
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000dce:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8000dd2:	edd0 7a00 	vldr	s15, [r0]
 8000dd6:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8000dda:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000ddc:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8000de0:	e00b      	b.n	8000dfa <calculate_freq_and_signalstrength+0xee>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000de2:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8000e4c <calculate_freq_and_signalstrength+0x140>
 8000de6:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000dea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000dee:	d91c      	bls.n	8000e2a <calculate_freq_and_signalstrength+0x11e>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000df0:	f000 ff22 	bl	8001c38 <MEAS_get_samp_freq>
    float signal_strength = 0; 
 8000df4:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8000e50 <calculate_freq_and_signalstrength+0x144>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8000df8:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
}
 8000dfa:	4628      	mov	r0, r5
 8000dfc:	3720      	adds	r7, #32
    return fft;
 8000dfe:	ed85 8a00 	vstr	s16, [r5]
 8000e02:	ed85 7a01 	vstr	s14, [r5, #4]
 8000e06:	722b      	strb	r3, [r5, #8]
}
 8000e08:	46bd      	mov	sp, r7
 8000e0a:	ecbd 8b02 	vpop	{d8}
 8000e0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000e12:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8000e4c <calculate_freq_and_signalstrength+0x140>
 8000e16:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000e1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e1e:	d8e7      	bhi.n	8000df0 <calculate_freq_and_signalstrength+0xe4>
 8000e20:	eeb4 8a47 	vcmp.f32	s16, s14
 8000e24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e28:	d1e2      	bne.n	8000df0 <calculate_freq_and_signalstrength+0xe4>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000e2a:	f000 ff05 	bl	8001c38 <MEAS_get_samp_freq>
 8000e2e:	ebc4 1304 	rsb	r3, r4, r4, lsl #4
 8000e32:	009b      	lsls	r3, r3, #2
 8000e34:	fbb3 f0f0 	udiv	r0, r3, r0
    if (given_frequency != 0) {
 8000e38:	e7c9      	b.n	8000dce <calculate_freq_and_signalstrength+0xc2>
    for (uint32_t i = 0; i < fft_size; i++) {
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	e784      	b.n	8000d48 <calculate_freq_and_signalstrength+0x3c>
 8000e3e:	bf00      	nop
 8000e40:	44fff000 	.word	0x44fff000
 8000e44:	425c0000 	.word	0x425c0000
 8000e48:	42340000 	.word	0x42340000
 8000e4c:	42820000 	.word	0x42820000
 8000e50:	00000000 	.word	0x00000000

08000e54 <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8000e54:	ed90 6a02 	vldr	s12, [r0, #8]
 8000e58:	edd0 7a01 	vldr	s15, [r0, #4]
 8000e5c:	ed90 5a00 	vldr	s10, [r0]
 8000e60:	ed91 7a02 	vldr	s14, [r1, #8]
 8000e64:	edd1 4a00 	vldr	s9, [r1]
 8000e68:	ed91 4a01 	vldr	s8, [r1, #4]
 8000e6c:	ee66 6a06 	vmul.f32	s13, s12, s12
 8000e70:	ee77 5ac6 	vsub.f32	s11, s15, s12
 8000e74:	ee65 4a24 	vmul.f32	s9, s10, s9
 8000e78:	ee66 6a87 	vmul.f32	s13, s13, s14
 8000e7c:	ee27 7a46 	vnmul.f32	s14, s14, s12
 8000e80:	eee5 6aa4 	vfma.f32	s13, s11, s9
 8000e84:	eea7 7a84 	vfma.f32	s14, s15, s8
 8000e88:	ee67 3aa7 	vmul.f32	s7, s15, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000e8c:	ee77 4a86 	vadd.f32	s9, s15, s12
 8000e90:	eee4 6a63 	vfms.f32	s13, s8, s7
 8000e94:	ee67 7a86 	vmul.f32	s15, s15, s12
 8000e98:	ee35 6a64 	vsub.f32	s12, s10, s9
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8000e9c:	ee27 7a27 	vmul.f32	s14, s14, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ea0:	eee5 7a06 	vfma.f32	s15, s10, s12
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8000ea4:	eea5 7a26 	vfma.f32	s14, s10, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ea8:	ee65 5aa7 	vmul.f32	s11, s11, s15
 8000eac:	eec7 7a25 	vdiv.f32	s15, s14, s11
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8000eb0:	edc2 7a00 	vstr	s15, [r2]
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000eb4:	edd0 7a01 	vldr	s15, [r0, #4]
 8000eb8:	ed91 3a01 	vldr	s6, [r1, #4]
 8000ebc:	ed91 7a00 	vldr	s14, [r1]
 8000ec0:	edd0 6a02 	vldr	s13, [r0, #8]
 8000ec4:	edd1 5a02 	vldr	s11, [r1, #8]
 8000ec8:	edd0 4a00 	vldr	s9, [r0]
 8000ecc:	ee67 2aa7 	vmul.f32	s5, s15, s15
 8000ed0:	ee33 6a47 	vsub.f32	s12, s6, s14
 8000ed4:	ee26 5aa6 	vmul.f32	s10, s13, s13
 8000ed8:	ee37 7a65 	vsub.f32	s14, s14, s11
 8000edc:	ee26 6a22 	vmul.f32	s12, s12, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ee0:	ee77 3aa6 	vadd.f32	s7, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000ee4:	eea7 6a05 	vfma.f32	s12, s14, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ee8:	ee27 4aa6 	vmul.f32	s8, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000eec:	ee24 7aa4 	vmul.f32	s14, s9, s9
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ef0:	ee74 3ae3 	vsub.f32	s7, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000ef4:	ee25 5a22 	vmul.f32	s10, s10, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ef8:	eea4 4aa3 	vfma.f32	s8, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000efc:	ee75 5ac3 	vsub.f32	s11, s11, s6
 8000f00:	ee27 7a06 	vmul.f32	s14, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f04:	ee77 7ae6 	vsub.f32	s15, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000f08:	eea5 7a25 	vfma.f32	s14, s10, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f0c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8000f10:	eec7 6a27 	vdiv.f32	s13, s14, s15
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000f14:	edc3 6a00 	vstr	s13, [r3]

    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f18:	edd1 7a00 	vldr	s15, [r1]
 8000f1c:	ed91 4a02 	vldr	s8, [r1, #8]
 8000f20:	ed90 6a02 	vldr	s12, [r0, #8]
 8000f24:	edd1 6a01 	vldr	s13, [r1, #4]
 8000f28:	ed90 7a01 	vldr	s14, [r0, #4]
 8000f2c:	9b00      	ldr	r3, [sp, #0]
 8000f2e:	ee74 5a67 	vsub.f32	s11, s8, s15
 8000f32:	ee77 4ae6 	vsub.f32	s9, s15, s13
 8000f36:	ee65 5a86 	vmul.f32	s11, s11, s12
 8000f3a:	edd0 7a00 	vldr	s15, [r0]
 8000f3e:	eee7 5a24 	vfma.f32	s11, s14, s9
 8000f42:	ee27 5a06 	vmul.f32	s10, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f46:	ee77 4a06 	vadd.f32	s9, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f4a:	ee76 6ac4 	vsub.f32	s13, s13, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f4e:	ee77 4ae4 	vsub.f32	s9, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f52:	ee66 6a85 	vmul.f32	s13, s13, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f56:	eea7 5aa4 	vfma.f32	s10, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f5a:	eee7 6aa5 	vfma.f32	s13, s15, s11
 8000f5e:	ee67 7a87 	vmul.f32	s15, s15, s14
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f62:	ee37 7a46 	vsub.f32	s14, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f66:	ee67 7a86 	vmul.f32	s15, s15, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f6a:	ee27 7a05 	vmul.f32	s14, s14, s10
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f6e:	ee67 7aa6 	vmul.f32	s15, s15, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f72:	eec7 6a87 	vdiv.f32	s13, s15, s14
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f76:	edc3 6a00 	vstr	s13, [r3]
}
 8000f7a:	4770      	bx	lr
 8000f7c:	0000      	movs	r0, r0
	...

08000f80 <calculate_distance_and_angle>:
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 8000f80:	b530      	push	{r4, r5, lr}
    float32_t distance[3] = {10, 50, 100};
 8000f82:	4b37      	ldr	r3, [pc, #220]	; (8001060 <calculate_distance_and_angle+0xe0>)
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 8000f84:	ed2d 8b02 	vpush	{d8}
    float32_t distance[3] = {10, 50, 100};
 8000f88:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 8000f8c:	b097      	sub	sp, #92	; 0x5c
    float32_t distance[3] = {10, 50, 100};
 8000f8e:	f10d 0e1c 	add.w	lr, sp, #28
 8000f92:	e88e 0007 	stmia.w	lr, {r0, r1, r2}
    float32_t signal_r[3] = {1030, 717, 543};
 8000f96:	f103 020c 	add.w	r2, r3, #12
 8000f9a:	ca07      	ldmia	r2, {r0, r1, r2}
 8000f9c:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8000fa0:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    float32_t signal_l[3] = {920, 655, 553};
 8000fa4:	f103 0218 	add.w	r2, r3, #24
 8000fa8:	ca07      	ldmia	r2, {r0, r1, r2}
 8000faa:	ac0d      	add	r4, sp, #52	; 0x34
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 8000fac:	ab12      	add	r3, sp, #72	; 0x48
 8000fae:	9300      	str	r3, [sp, #0]
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 8000fb0:	ad15      	add	r5, sp, #84	; 0x54
    float32_t signal_l[3] = {920, 655, 553};
 8000fb2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 8000fb6:	ab11      	add	r3, sp, #68	; 0x44
 8000fb8:	4660      	mov	r0, ip
 8000fba:	4671      	mov	r1, lr
 8000fbc:	aa10      	add	r2, sp, #64	; 0x40
 8000fbe:	f7ff ff49 	bl	8000e54 <calculate_coefficients_single_pad>
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 8000fc2:	ab14      	add	r3, sp, #80	; 0x50
 8000fc4:	aa13      	add	r2, sp, #76	; 0x4c
 8000fc6:	4620      	mov	r0, r4
 8000fc8:	9500      	str	r5, [sp, #0]
 8000fca:	f7ff ff43 	bl	8000e54 <calculate_coefficients_single_pad>
    return calibration;
 8000fce:	ed9d 7a11 	vldr	s14, [sp, #68]	; 0x44
 8000fd2:	eddd 7a14 	vldr	s15, [sp, #80]	; 0x50
 8000fd6:	eddd 6a15 	vldr	s13, [sp, #84]	; 0x54
 8000fda:	ed9d 6a10 	vldr	s12, [sp, #64]	; 0x40
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8000fde:	ee87 8a00 	vdiv.f32	s16, s14, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8000fe2:	eec7 8aa0 	vdiv.f32	s17, s15, s1
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8000fe6:	ee20 0a00 	vmul.f32	s0, s0, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8000fea:	ee60 0aa0 	vmul.f32	s1, s1, s1
    return calibration;
 8000fee:	eddd 7a12 	vldr	s15, [sp, #72]	; 0x48
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8000ff2:	ee87 7a80 	vdiv.f32	s14, s15, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8000ff6:	eec6 7aa0 	vdiv.f32	s15, s13, s1
    return calibration;
 8000ffa:	eddd 6a13 	vldr	s13, [sp, #76]	; 0x4c
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8000ffe:	ee38 8a06 	vadd.f32	s16, s16, s12
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8001002:	ee78 8aa6 	vadd.f32	s17, s17, s13
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8001006:	ee38 8a07 	vadd.f32	s16, s16, s14
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800100a:	ee78 8aa7 	vadd.f32	s17, s17, s15
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 800100e:	ee78 7ac8 	vsub.f32	s15, s17, s16
 8001012:	ee17 0a90 	vmov	r0, s15
 8001016:	f7ff fc29 	bl	800086c <__aeabi_f2d>
 800101a:	a30f      	add	r3, pc, #60	; (adr r3, 8001058 <calculate_distance_and_angle+0xd8>)
 800101c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001020:	f7ff f996 	bl	8000350 <__aeabi_dmul>
 8001024:	f7ff fc7a 	bl	800091c <__aeabi_d2f>
 8001028:	ee00 0a10 	vmov	s0, r0
 800102c:	f028 fe9e 	bl	8029d6c <atanf>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 8001030:	ee38 1a28 	vadd.f32	s2, s16, s17
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001034:	eddf 1a0b 	vldr	s3, [pc, #44]	; 8001064 <calculate_distance_and_angle+0xe4>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 8001038:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
}
 800103c:	ee60 1a21 	vmul.f32	s3, s0, s3
 8001040:	ee21 1a07 	vmul.f32	s2, s2, s14
 8001044:	eef0 0a68 	vmov.f32	s1, s17
 8001048:	eeb0 0a48 	vmov.f32	s0, s16
 800104c:	b017      	add	sp, #92	; 0x5c
 800104e:	ecbd 8b02 	vpop	{d8}
 8001052:	bd30      	pop	{r4, r5, pc}
 8001054:	f3af 8000 	nop.w
 8001058:	a8ef1b4a 	.word	0xa8ef1b4a
 800105c:	3f99fd66 	.word	0x3f99fd66
 8001060:	0802bbc4 	.word	0x0802bbc4
 8001064:	42652ee0 	.word	0x42652ee0

08001068 <single_measurement>:
SINGLE_MEAS single_measurement(uint32_t* samples) {
 8001068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800106c:	ed2d 8b04 	vpush	{d8-d9}
 8001070:	b093      	sub	sp, #76	; 0x4c
 8001072:	af00      	add	r7, sp, #0
 8001074:	4605      	mov	r5, r0
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001076:	f000 fddd 	bl	8001c34 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800107a:	b203      	sxth	r3, r0
 800107c:	009b      	lsls	r3, r3, #2
 800107e:	3307      	adds	r3, #7
 8001080:	f023 0307 	bic.w	r3, r3, #7
 8001084:	ebad 0d03 	sub.w	sp, sp, r3
 8001088:	46e9      	mov	r9, sp
    float32_t samples_PL[buffer_size];
 800108a:	ebad 0d03 	sub.w	sp, sp, r3
 800108e:	46e8      	mov	r8, sp
    float32_t samples_HSR[buffer_size];
 8001090:	ebad 0d03 	sub.w	sp, sp, r3
 8001094:	466e      	mov	r6, sp
    float32_t samples_HSL[buffer_size];
 8001096:	ebad 0d03 	sub.w	sp, sp, r3
 800109a:	46eb      	mov	fp, sp
    float32_t samples_PR[buffer_size];
 800109c:	ee08 9a10 	vmov	s16, r9
    float32_t samples_PL[buffer_size];
 80010a0:	ee08 8a90 	vmov	s17, r8
    float32_t samples_HSR[buffer_size];
 80010a4:	ee09 6a10 	vmov	s18, r6
    float32_t samples_HSL[buffer_size];
 80010a8:	ee09 ba90 	vmov	s19, fp
    for (uint32_t i = 0; i < buffer_size; i++) {
 80010ac:	b3b8      	cbz	r0, 800111e <single_measurement+0xb6>
 80010ae:	4682      	mov	sl, r0
 80010b0:	2400      	movs	r4, #0
        samples_PR[i] = (float32_t)samples[i * MEAS_get_num_of_chan()];
 80010b2:	f000 fdbd 	bl	8001c30 <MEAS_get_num_of_chan>
 80010b6:	fb04 f000 	mul.w	r0, r4, r0
 80010ba:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010be:	edd3 7a00 	vldr	s15, [r3]
 80010c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010c6:	ece9 7a01 	vstmia	r9!, {s15}
        samples_PL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 1];
 80010ca:	f000 fdb1 	bl	8001c30 <MEAS_get_num_of_chan>
 80010ce:	fb04 f000 	mul.w	r0, r4, r0
 80010d2:	3001      	adds	r0, #1
 80010d4:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010d8:	edd3 7a00 	vldr	s15, [r3]
 80010dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010e0:	ece8 7a01 	vstmia	r8!, {s15}
        samples_HSR[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 2];
 80010e4:	f000 fda4 	bl	8001c30 <MEAS_get_num_of_chan>
 80010e8:	fb04 f000 	mul.w	r0, r4, r0
 80010ec:	3002      	adds	r0, #2
 80010ee:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010f2:	edd3 7a00 	vldr	s15, [r3]
 80010f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010fa:	ece6 7a01 	vstmia	r6!, {s15}
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 80010fe:	f000 fd97 	bl	8001c30 <MEAS_get_num_of_chan>
 8001102:	fb04 f000 	mul.w	r0, r4, r0
 8001106:	3003      	adds	r0, #3
 8001108:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800110c:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001110:	3401      	adds	r4, #1
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001112:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001116:	45a2      	cmp	sl, r4
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001118:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < buffer_size; i++) {
 800111c:	d1c9      	bne.n	80010b2 <single_measurement+0x4a>
    fft = calculate_freq_and_signalstrength(samples_PR);
 800111e:	ee18 1a10 	vmov	r1, s16
 8001122:	f107 001c 	add.w	r0, r7, #28
 8001126:	f7ff fdf1 	bl	8000d0c <calculate_freq_and_signalstrength>
 800112a:	ed97 0a08 	vldr	s0, [r7, #32]
 800112e:	ed97 8a07 	vldr	s16, [r7, #28]
 8001132:	ed87 0a00 	vstr	s0, [r7]
    fft = calculate_freq_and_signalstrength(samples_PL);
 8001136:	ee18 1a90 	vmov	r1, s17
 800113a:	f107 001c 	add.w	r0, r7, #28
 800113e:	f7ff fde5 	bl	8000d0c <calculate_freq_and_signalstrength>
 8001142:	edd7 0a08 	vldr	s1, [r7, #32]
 8001146:	edd7 8a07 	vldr	s17, [r7, #28]
 800114a:	edc7 0a01 	vstr	s1, [r7, #4]
    fft = calculate_freq_and_signalstrength(samples_HSR);
 800114e:	ee19 1a10 	vmov	r1, s18
 8001152:	f107 001c 	add.w	r0, r7, #28
 8001156:	f7ff fdd9 	bl	8000d0c <calculate_freq_and_signalstrength>
    fft = calculate_freq_and_signalstrength(samples_HSL);
 800115a:	f107 001c 	add.w	r0, r7, #28
 800115e:	ee19 1a90 	vmov	r1, s19
 8001162:	f7ff fdd3 	bl	8000d0c <calculate_freq_and_signalstrength>
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 8001166:	edd7 0a01 	vldr	s1, [r7, #4]
 800116a:	ed97 0a00 	vldr	s0, [r7]
 800116e:	f7ff ff07 	bl	8000f80 <calculate_distance_and_angle>
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 8001172:	ee38 8a28 	vadd.f32	s16, s16, s17
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 8001176:	eeb0 0a41 	vmov.f32	s0, s2
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 800117a:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
}
 800117e:	eef0 0a61 	vmov.f32	s1, s3
 8001182:	ee28 1a01 	vmul.f32	s2, s16, s2
 8001186:	eddf 1a04 	vldr	s3, [pc, #16]	; 8001198 <single_measurement+0x130>
 800118a:	374c      	adds	r7, #76	; 0x4c
 800118c:	46bd      	mov	sp, r7
 800118e:	ecbd 8b04 	vpop	{d8-d9}
 8001192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001196:	bf00      	nop
 8001198:	00000000 	.word	0x00000000

0800119c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800119c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800119e:	2064      	movs	r0, #100	; 0x64
 80011a0:	f00c fb22 	bl	800d7e8 <osDelay>
  for(;;)
 80011a4:	e7fb      	b.n	800119e <StartDefaultTask+0x2>
 80011a6:	bf00      	nop

080011a8 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 80011a8:	b580      	push	{r7, lr}
 80011aa:	4c10      	ldr	r4, [pc, #64]	; (80011ec <StartTimeoutTask+0x44>)
 80011ac:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80011f8 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80011b0:	4f0f      	ldr	r7, [pc, #60]	; (80011f0 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80011b2:	4e10      	ldr	r6, [pc, #64]	; (80011f4 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80011b4:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80011b6:	2300      	movs	r3, #0
 80011b8:	461a      	mov	r2, r3
 80011ba:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80011bc:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80011be:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80011c2:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80011c4:	f00c fc0c 	bl	800d9e0 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80011c8:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80011ca:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80011cc:	4638      	mov	r0, r7
 80011ce:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80011d0:	b912      	cbnz	r2, 80011d8 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80011d2:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80011d4:	f009 f90e 	bl	800a3f4 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80011d8:	4630      	mov	r0, r6
 80011da:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011de:	f009 f90d 	bl	800a3fc <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80011e2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80011e6:	f00c faff 	bl	800d7e8 <osDelay>
	  sleep_timeout_value--;
 80011ea:	e7e3      	b.n	80011b4 <StartTimeoutTask+0xc>
 80011ec:	2000000c 	.word	0x2000000c
 80011f0:	40021000 	.word	0x40021000
 80011f4:	40021800 	.word	0x40021800
 80011f8:	2000018c 	.word	0x2000018c

080011fc <updateGUI_test>:
	return sleep_timeout_value;
 80011fc:	4b01      	ldr	r3, [pc, #4]	; (8001204 <updateGUI_test+0x8>)
}
 80011fe:	6818      	ldr	r0, [r3, #0]
 8001200:	4770      	bx	lr
 8001202:	bf00      	nop
 8001204:	2000000c 	.word	0x2000000c

08001208 <gyro_disable>:
{
 8001208:	b5f0      	push	{r4, r5, r6, r7, lr}
 800120a:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800120c:	4e1f      	ldr	r6, [pc, #124]	; (800128c <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800120e:	4d20      	ldr	r5, [pc, #128]	; (8001290 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001210:	4c20      	ldr	r4, [pc, #128]	; (8001294 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001212:	2700      	movs	r7, #0
 8001214:	9700      	str	r7, [sp, #0]
 8001216:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001218:	f043 0304 	orr.w	r3, r3, #4
 800121c:	6333      	str	r3, [r6, #48]	; 0x30
 800121e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001220:	f003 0304 	and.w	r3, r3, #4
 8001224:	9300      	str	r3, [sp, #0]
 8001226:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001228:	682b      	ldr	r3, [r5, #0]
 800122a:	f023 030c 	bic.w	r3, r3, #12
 800122e:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8001230:	682b      	ldr	r3, [r5, #0]
 8001232:	f043 0304 	orr.w	r3, r3, #4
 8001236:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001238:	69ab      	ldr	r3, [r5, #24]
 800123a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800123e:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8001240:	200a      	movs	r0, #10
 8001242:	f008 fef9 	bl	800a038 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001246:	682b      	ldr	r3, [r5, #0]
 8001248:	f043 030c 	orr.w	r3, r3, #12
 800124c:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800124e:	9701      	str	r7, [sp, #4]
 8001250:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001252:	f043 0320 	orr.w	r3, r3, #32
 8001256:	6333      	str	r3, [r6, #48]	; 0x30
 8001258:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800125a:	f003 0320 	and.w	r3, r3, #32
 800125e:	9301      	str	r3, [sp, #4]
 8001260:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001262:	68a3      	ldr	r3, [r4, #8]
 8001264:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001268:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 800126a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800126c:	f023 030f 	bic.w	r3, r3, #15
 8001270:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8001272:	68e3      	ldr	r3, [r4, #12]
 8001274:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001278:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 800127a:	200a      	movs	r0, #10
 800127c:	f008 fedc 	bl	800a038 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8001280:	6823      	ldr	r3, [r4, #0]
 8001282:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001286:	6023      	str	r3, [r4, #0]
}
 8001288:	b003      	add	sp, #12
 800128a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800128c:	40023800 	.word	0x40023800
 8001290:	40020800 	.word	0x40020800
 8001294:	40021400 	.word	0x40021400

08001298 <SystemClock_Config>:
{
 8001298:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800129a:	2400      	movs	r4, #0
{
 800129c:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800129e:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80012a2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80012a6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80012aa:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80012ae:	4a1e      	ldr	r2, [pc, #120]	; (8001328 <SystemClock_Config+0x90>)
 80012b0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80012b2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80012b4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80012b6:	4b1d      	ldr	r3, [pc, #116]	; (800132c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80012b8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80012bc:	6411      	str	r1, [r2, #64]	; 0x40
 80012be:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80012c0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80012c4:	9201      	str	r2, [sp, #4]
 80012c6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80012c8:	9402      	str	r4, [sp, #8]
 80012ca:	681a      	ldr	r2, [r3, #0]
 80012cc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80012d0:	601a      	str	r2, [r3, #0]
 80012d2:	681b      	ldr	r3, [r3, #0]
 80012d4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80012d8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80012da:	2201      	movs	r2, #1
 80012dc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80012e0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80012e4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80012e6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80012e8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80012ea:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80012ee:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80012f2:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80012f6:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80012f8:	2202      	movs	r2, #2
 80012fa:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012fc:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80012fe:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001302:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001304:	f00a feb4 	bl	800c070 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001308:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800130a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800130e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001312:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001316:	a803      	add	r0, sp, #12
 8001318:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800131a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800131e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001320:	f00b f8be 	bl	800c4a0 <HAL_RCC_ClockConfig>
}
 8001324:	b015      	add	sp, #84	; 0x54
 8001326:	bd30      	pop	{r4, r5, pc}
 8001328:	40023800 	.word	0x40023800
 800132c:	40007000 	.word	0x40007000

08001330 <main>:
{
 8001330:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001334:	2400      	movs	r4, #0
{
 8001336:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001338:	f008 fe52 	bl	8009fe0 <HAL_Init>
  SystemClock_Config();
 800133c:	f7ff ffac 	bl	8001298 <SystemClock_Config>
  gyro_disable();
 8001340:	f7ff ff62 	bl	8001208 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001344:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 8001348:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800134c:	4bbe      	ldr	r3, [pc, #760]	; (8001648 <main+0x318>)
 800134e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001350:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001352:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001354:	48bd      	ldr	r0, [pc, #756]	; (800164c <main+0x31c>)
  hi2c3.Instance = I2C3;
 8001356:	4dbe      	ldr	r5, [pc, #760]	; (8001650 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001358:	f041 0110 	orr.w	r1, r1, #16
 800135c:	6319      	str	r1, [r3, #48]	; 0x30
 800135e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001360:	f001 0110 	and.w	r1, r1, #16
 8001364:	9100      	str	r1, [sp, #0]
 8001366:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001368:	9401      	str	r4, [sp, #4]
 800136a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800136c:	f041 0120 	orr.w	r1, r1, #32
 8001370:	6319      	str	r1, [r3, #48]	; 0x30
 8001372:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001374:	f001 0120 	and.w	r1, r1, #32
 8001378:	9101      	str	r1, [sp, #4]
 800137a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800137c:	9402      	str	r4, [sp, #8]
 800137e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001380:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001384:	6319      	str	r1, [r3, #48]	; 0x30
 8001386:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001388:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800138c:	9102      	str	r1, [sp, #8]
 800138e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001390:	9403      	str	r4, [sp, #12]
 8001392:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001394:	f041 0104 	orr.w	r1, r1, #4
 8001398:	6319      	str	r1, [r3, #48]	; 0x30
 800139a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800139c:	f001 0104 	and.w	r1, r1, #4
 80013a0:	9103      	str	r1, [sp, #12]
 80013a2:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80013a4:	9404      	str	r4, [sp, #16]
 80013a6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013a8:	f041 0101 	orr.w	r1, r1, #1
 80013ac:	6319      	str	r1, [r3, #48]	; 0x30
 80013ae:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013b0:	f001 0101 	and.w	r1, r1, #1
 80013b4:	9104      	str	r1, [sp, #16]
 80013b6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80013b8:	9405      	str	r4, [sp, #20]
 80013ba:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013bc:	f041 0102 	orr.w	r1, r1, #2
 80013c0:	6319      	str	r1, [r3, #48]	; 0x30
 80013c2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013c4:	f001 0102 	and.w	r1, r1, #2
 80013c8:	9105      	str	r1, [sp, #20]
 80013ca:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80013cc:	9406      	str	r4, [sp, #24]
 80013ce:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013d0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80013d4:	6319      	str	r1, [r3, #48]	; 0x30
 80013d6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013d8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80013dc:	9106      	str	r1, [sp, #24]
 80013de:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80013e0:	9407      	str	r4, [sp, #28]
 80013e2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013e4:	f041 0108 	orr.w	r1, r1, #8
 80013e8:	6319      	str	r1, [r3, #48]	; 0x30
 80013ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013ec:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80013f0:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80013f2:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80013f4:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80013f6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80013f8:	f008 fffc 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80013fc:	4893      	ldr	r0, [pc, #588]	; (800164c <main+0x31c>)
 80013fe:	2120      	movs	r1, #32
 8001400:	2201      	movs	r2, #1
 8001402:	f008 fff7 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001406:	4893      	ldr	r0, [pc, #588]	; (8001654 <main+0x324>)
 8001408:	4622      	mov	r2, r4
 800140a:	2114      	movs	r1, #20
 800140c:	f008 fff2 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8001410:	4891      	ldr	r0, [pc, #580]	; (8001658 <main+0x328>)
 8001412:	4622      	mov	r2, r4
 8001414:	2180      	movs	r1, #128	; 0x80
 8001416:	f008 ffed 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800141a:	4890      	ldr	r0, [pc, #576]	; (800165c <main+0x32c>)
 800141c:	4622      	mov	r2, r4
 800141e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001422:	f008 ffe7 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001426:	488e      	ldr	r0, [pc, #568]	; (8001660 <main+0x330>)
 8001428:	4622      	mov	r2, r4
 800142a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800142e:	f008 ffe1 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8001432:	488c      	ldr	r0, [pc, #560]	; (8001664 <main+0x334>)
 8001434:	4622      	mov	r2, r4
 8001436:	2104      	movs	r1, #4
 8001438:	f008 ffdc 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 800143c:	2201      	movs	r2, #1
 800143e:	4889      	ldr	r0, [pc, #548]	; (8001664 <main+0x334>)
 8001440:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001444:	f008 ffd6 	bl	800a3f4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001448:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800144a:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800144e:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001450:	487e      	ldr	r0, [pc, #504]	; (800164c <main+0x31c>)
 8001452:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001454:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001458:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800145c:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001460:	f008 fe84 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001464:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001468:	4878      	ldr	r0, [pc, #480]	; (800164c <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800146a:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800146c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800146e:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001472:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001474:	f008 fe7a 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001478:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800147a:	4874      	ldr	r0, [pc, #464]	; (800164c <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800147c:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800147e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001480:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001482:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001486:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800148a:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800148c:	f008 fe6e 	bl	800a16c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001490:	4870      	ldr	r0, [pc, #448]	; (8001654 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001492:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001496:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001498:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800149c:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800149e:	f008 fe65 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 80014a2:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80014a4:	486c      	ldr	r0, [pc, #432]	; (8001658 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 80014a6:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80014a8:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80014aa:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014ae:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014b2:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80014b4:	f008 fe5a 	bl	800a16c <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80014b8:	4866      	ldr	r0, [pc, #408]	; (8001654 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014ba:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80014bc:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014be:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80014c2:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80014c6:	f008 fe51 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80014ca:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014ce:	4863      	ldr	r0, [pc, #396]	; (800165c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80014d0:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014d2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014d4:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014d8:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014da:	f008 fe47 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014de:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014e2:	485f      	ldr	r0, [pc, #380]	; (8001660 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014e4:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014e6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014e8:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014ec:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014ee:	f008 fe3d 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80014f2:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80014f6:	485b      	ldr	r0, [pc, #364]	; (8001664 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80014f8:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80014fa:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014fc:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001500:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001502:	f008 fe33 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001506:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800150a:	4853      	ldr	r0, [pc, #332]	; (8001658 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 800150c:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800150e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8001510:	230f      	movs	r3, #15
 8001512:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001514:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001518:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800151a:	f008 fe27 	bl	800a16c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 800151e:	4622      	mov	r2, r4
 8001520:	2105      	movs	r1, #5
 8001522:	2009      	movs	r0, #9
 8001524:	f008 fdac 	bl	800a080 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001528:	2009      	movs	r0, #9
 800152a:	f008 fde7 	bl	800a0fc <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 800152e:	484e      	ldr	r0, [pc, #312]	; (8001668 <main+0x338>)
 8001530:	4b4e      	ldr	r3, [pc, #312]	; (800166c <main+0x33c>)
 8001532:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001534:	f008 fdf0 	bl	800a118 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001538:	494d      	ldr	r1, [pc, #308]	; (8001670 <main+0x340>)
 800153a:	4b4e      	ldr	r3, [pc, #312]	; (8001674 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800153c:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 800153e:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001542:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001546:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001548:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800154c:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001550:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001554:	f009 f9b4 	bl	800a8c0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001558:	4651      	mov	r1, sl
 800155a:	4628      	mov	r0, r5
 800155c:	f00a fb7c 	bl	800bc58 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001560:	4621      	mov	r1, r4
 8001562:	4628      	mov	r0, r5
 8001564:	f00a fb98 	bl	800bc98 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001568:	f8df c118 	ldr.w	ip, [pc, #280]	; 8001684 <main+0x354>
  hspi5.Instance = SPI5;
 800156c:	4842      	ldr	r0, [pc, #264]	; (8001678 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800156e:	4d43      	ldr	r5, [pc, #268]	; (800167c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001570:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001572:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001576:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800157a:	f44f 7e00 	mov.w	lr, #512	; 0x200
 800157e:	2318      	movs	r3, #24
 8001580:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001584:	230a      	movs	r3, #10
 8001586:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001588:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800158c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001590:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001594:	f00b fa72 	bl	800ca7c <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001598:	2307      	movs	r3, #7
 800159a:	930e      	str	r3, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800159c:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800159e:	4b38      	ldr	r3, [pc, #224]	; (8001680 <main+0x350>)
 80015a0:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80015a2:	2040      	movs	r0, #64	; 0x40
 80015a4:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80015a8:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80015ac:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80015b0:	622b      	str	r3, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015b2:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80015b4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015b8:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80015ba:	62ab      	str	r3, [r5, #40]	; 0x28
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80015bc:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80015c0:	e9c5 ba03 	strd	fp, sl, [r5, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80015c4:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80015c6:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80015c8:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 80015cc:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 80015d0:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 80015d2:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015d4:	f00b f960 	bl	800c898 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015dc:	a909      	add	r1, sp, #36	; 0x24
 80015de:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015e0:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015e4:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 80015e8:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015ea:	f00b f977 	bl	800c8dc <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80015ee:	4630      	mov	r0, r6
 80015f0:	f008 fd22 	bl	800a038 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015f4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015f8:	a909      	add	r1, sp, #36	; 0x24
 80015fa:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 80015fc:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001600:	e9cd 7809 	strd	r7, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001604:	f00b f96a 	bl	800c8dc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001608:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800160c:	a909      	add	r1, sp, #36	; 0x24
 800160e:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8001610:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001614:	e9cd 9809 	strd	r9, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001618:	f00b f960 	bl	800c8dc <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800161c:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001620:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001622:	9b08      	ldr	r3, [sp, #32]
 8001624:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001626:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800162a:	a909      	add	r1, sp, #36	; 0x24
 800162c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800162e:	e9cd b809 	strd	fp, r8, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8001632:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001634:	f00b f952 	bl	800c8dc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001638:	4628      	mov	r0, r5
 800163a:	f240 516a 	movw	r1, #1386	; 0x56a
 800163e:	f00b f96b 	bl	800c918 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001642:	2234      	movs	r2, #52	; 0x34
 8001644:	e020      	b.n	8001688 <main+0x358>
 8001646:	bf00      	nop
 8001648:	40023800 	.word	0x40023800
 800164c:	40021000 	.word	0x40021000
 8001650:	200001a0 	.word	0x200001a0
 8001654:	40020800 	.word	0x40020800
 8001658:	40020000 	.word	0x40020000
 800165c:	40020400 	.word	0x40020400
 8001660:	40020c00 	.word	0x40020c00
 8001664:	40021800 	.word	0x40021800
 8001668:	20000198 	.word	0x20000198
 800166c:	40023000 	.word	0x40023000
 8001670:	40005c00 	.word	0x40005c00
 8001674:	000186a0 	.word	0x000186a0
 8001678:	200002d0 	.word	0x200002d0
 800167c:	2000029c 	.word	0x2000029c
 8001680:	a0000140 	.word	0xa0000140
 8001684:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 8001688:	4d3a      	ldr	r5, [pc, #232]	; (8001774 <main+0x444>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800168a:	4621      	mov	r1, r4
 800168c:	eb0d 0002 	add.w	r0, sp, r2
 8001690:	f029 fc11 	bl	802aeb6 <memset>
  hltdc.Instance = LTDC;
 8001694:	4b38      	ldr	r3, [pc, #224]	; (8001778 <main+0x448>)
 8001696:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8001698:	2309      	movs	r3, #9
 800169a:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800169c:	231d      	movs	r3, #29
 800169e:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80016a0:	f240 1b0d 	movw	fp, #269	; 0x10d
 80016a4:	f240 1343 	movw	r3, #323	; 0x143
 80016a8:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80016ac:	f240 1217 	movw	r2, #279	; 0x117
 80016b0:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 80016b4:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016b6:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80016b8:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 80016bc:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80016be:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80016c2:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 80016c6:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 80016ca:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016ce:	f00a fb07 	bl	800bce0 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 80016d2:	23f0      	movs	r3, #240	; 0xf0
 80016d4:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 80016d6:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 80016d8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80016dc:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 80016de:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 80016e0:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016e2:	a90d      	add	r1, sp, #52	; 0x34
 80016e4:	4622      	mov	r2, r4
 80016e6:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80016e8:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80016ea:	f44f 6680 	mov.w	r6, #1024	; 0x400
 80016ee:	2305      	movs	r3, #5
  LcdDrv = &ili9341_drv;
 80016f0:	4d22      	ldr	r5, [pc, #136]	; (800177c <main+0x44c>)
  pLayerCfg.WindowX0 = 0;
 80016f2:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80016f4:	e9cd 6314 	strd	r6, r3, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 80016f8:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80016fa:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 80016fc:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 80016fe:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 8001700:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001704:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001708:	f00a fbc0 	bl	800be8c <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800170c:	4b1c      	ldr	r3, [pc, #112]	; (8001780 <main+0x450>)
 800170e:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001714:	682b      	ldr	r3, [r5, #0]
 8001716:	68db      	ldr	r3, [r3, #12]
 8001718:	4798      	blx	r3
  MX_TouchGFX_Init();
 800171a:	f000 fde9 	bl	80022f0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800171e:	f000 fde5 	bl	80022ec <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001722:	f7ff fd71 	bl	8001208 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001726:	f000 f945 	bl	80019b4 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 800172a:	f000 f977 	bl	8001a1c <MEAS_timer_init>
  osKernelInitialize();
 800172e:	f00b ffe3 	bl	800d6f8 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001732:	4a14      	ldr	r2, [pc, #80]	; (8001784 <main+0x454>)
 8001734:	4639      	mov	r1, r7
 8001736:	4650      	mov	r0, sl
 8001738:	f00c f918 	bl	800d96c <osMessageQueueNew>
 800173c:	4b12      	ldr	r3, [pc, #72]	; (8001788 <main+0x458>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800173e:	4a13      	ldr	r2, [pc, #76]	; (800178c <main+0x45c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001740:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001742:	4621      	mov	r1, r4
 8001744:	4812      	ldr	r0, [pc, #72]	; (8001790 <main+0x460>)
 8001746:	f00c f803 	bl	800d750 <osThreadNew>
 800174a:	4b12      	ldr	r3, [pc, #72]	; (8001794 <main+0x464>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800174c:	4a12      	ldr	r2, [pc, #72]	; (8001798 <main+0x468>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800174e:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001750:	4621      	mov	r1, r4
 8001752:	4812      	ldr	r0, [pc, #72]	; (800179c <main+0x46c>)
 8001754:	f00b fffc 	bl	800d750 <osThreadNew>
 8001758:	4b11      	ldr	r3, [pc, #68]	; (80017a0 <main+0x470>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800175a:	4a12      	ldr	r2, [pc, #72]	; (80017a4 <main+0x474>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800175c:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800175e:	4621      	mov	r1, r4
 8001760:	4811      	ldr	r0, [pc, #68]	; (80017a8 <main+0x478>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001762:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001764:	f00b fff4 	bl	800d750 <osThreadNew>
 8001768:	4b10      	ldr	r3, [pc, #64]	; (80017ac <main+0x47c>)
 800176a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800176c:	f00b ffd6 	bl	800d71c <osKernelStart>
  while (1)
 8001770:	e7fe      	b.n	8001770 <main+0x440>
 8001772:	bf00      	nop
 8001774:	200001f4 	.word	0x200001f4
 8001778:	40016800 	.word	0x40016800
 800177c:	20000188 	.word	0x20000188
 8001780:	20000018 	.word	0x20000018
 8001784:	0802bc80 	.word	0x0802bc80
 8001788:	2000018c 	.word	0x2000018c
 800178c:	0802bcbc 	.word	0x0802bcbc
 8001790:	0800119d 	.word	0x0800119d
 8001794:	20000194 	.word	0x20000194
 8001798:	0802bc5c 	.word	0x0802bc5c
 800179c:	08002301 	.word	0x08002301
 80017a0:	20000184 	.word	0x20000184
 80017a4:	0802bc98 	.word	0x0802bc98
 80017a8:	080011a9 	.word	0x080011a9
 80017ac:	20000190 	.word	0x20000190

080017b0 <IOE_Init>:
 80017b0:	4770      	bx	lr
 80017b2:	bf00      	nop

080017b4 <IOE_ITConfig>:
 80017b4:	4770      	bx	lr
 80017b6:	bf00      	nop

080017b8 <IOE_Write>:
{
 80017b8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80017ba:	4c09      	ldr	r4, [pc, #36]	; (80017e0 <IOE_Write+0x28>)
{
 80017bc:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80017be:	6824      	ldr	r4, [r4, #0]
 80017c0:	9402      	str	r4, [sp, #8]
{
 80017c2:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80017c4:	2301      	movs	r3, #1
 80017c6:	f88d 4017 	strb.w	r4, [sp, #23]
 80017ca:	f10d 0417 	add.w	r4, sp, #23
 80017ce:	460a      	mov	r2, r1
 80017d0:	9301      	str	r3, [sp, #4]
 80017d2:	4601      	mov	r1, r0
 80017d4:	9400      	str	r4, [sp, #0]
 80017d6:	4803      	ldr	r0, [pc, #12]	; (80017e4 <IOE_Write+0x2c>)
 80017d8:	f009 f93a 	bl	800aa50 <HAL_I2C_Mem_Write>
}
 80017dc:	b006      	add	sp, #24
 80017de:	bd10      	pop	{r4, pc}
 80017e0:	20000004 	.word	0x20000004
 80017e4:	200001a0 	.word	0x200001a0

080017e8 <IOE_Read>:
{
 80017e8:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80017ea:	4b0b      	ldr	r3, [pc, #44]	; (8001818 <IOE_Read+0x30>)
{
 80017ec:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	9302      	str	r3, [sp, #8]
{
 80017f2:	4684      	mov	ip, r0
 80017f4:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80017f6:	2301      	movs	r3, #1
 80017f8:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80017fc:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80017fe:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001802:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001806:	4661      	mov	r1, ip
 8001808:	4804      	ldr	r0, [pc, #16]	; (800181c <IOE_Read+0x34>)
 800180a:	f009 fa13 	bl	800ac34 <HAL_I2C_Mem_Read>
}
 800180e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001812:	b007      	add	sp, #28
 8001814:	f85d fb04 	ldr.w	pc, [sp], #4
 8001818:	20000004 	.word	0x20000004
 800181c:	200001a0 	.word	0x200001a0

08001820 <IOE_ReadMultiple>:
{
 8001820:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001822:	4c09      	ldr	r4, [pc, #36]	; (8001848 <IOE_ReadMultiple+0x28>)
{
 8001824:	b084      	sub	sp, #16
 8001826:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001828:	6820      	ldr	r0, [r4, #0]
 800182a:	9002      	str	r0, [sp, #8]
 800182c:	e9cd 2300 	strd	r2, r3, [sp]
 8001830:	4806      	ldr	r0, [pc, #24]	; (800184c <IOE_ReadMultiple+0x2c>)
 8001832:	460a      	mov	r2, r1
 8001834:	2301      	movs	r3, #1
 8001836:	4661      	mov	r1, ip
 8001838:	f009 f9fc 	bl	800ac34 <HAL_I2C_Mem_Read>
}
 800183c:	3800      	subs	r0, #0
 800183e:	bf18      	it	ne
 8001840:	2001      	movne	r0, #1
 8001842:	b004      	add	sp, #16
 8001844:	bd10      	pop	{r4, pc}
 8001846:	bf00      	nop
 8001848:	20000004 	.word	0x20000004
 800184c:	200001a0 	.word	0x200001a0

08001850 <IOE_Delay>:
 8001850:	f008 bbf2 	b.w	800a038 <HAL_Delay>

08001854 <LCD_IO_Init>:
{
 8001854:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001856:	4806      	ldr	r0, [pc, #24]	; (8001870 <LCD_IO_Init+0x1c>)
 8001858:	2200      	movs	r2, #0
 800185a:	2104      	movs	r1, #4
 800185c:	f008 fdca 	bl	800a3f4 <HAL_GPIO_WritePin>
}
 8001860:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001864:	4802      	ldr	r0, [pc, #8]	; (8001870 <LCD_IO_Init+0x1c>)
 8001866:	2201      	movs	r2, #1
 8001868:	2104      	movs	r1, #4
 800186a:	f008 bdc3 	b.w	800a3f4 <HAL_GPIO_WritePin>
 800186e:	bf00      	nop
 8001870:	40020800 	.word	0x40020800

08001874 <LCD_IO_WriteData>:
{
 8001874:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001876:	4d10      	ldr	r5, [pc, #64]	; (80018b8 <LCD_IO_WriteData+0x44>)
{
 8001878:	b083      	sub	sp, #12
 800187a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800187c:	2201      	movs	r2, #1
 800187e:	480f      	ldr	r0, [pc, #60]	; (80018bc <LCD_IO_WriteData+0x48>)
 8001880:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001884:	f008 fdb6 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001888:	4628      	mov	r0, r5
 800188a:	2200      	movs	r2, #0
 800188c:	2104      	movs	r1, #4
 800188e:	f008 fdb1 	bl	800a3f4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001892:	4b0b      	ldr	r3, [pc, #44]	; (80018c0 <LCD_IO_WriteData+0x4c>)
 8001894:	480b      	ldr	r0, [pc, #44]	; (80018c4 <LCD_IO_WriteData+0x50>)
 8001896:	681b      	ldr	r3, [r3, #0]
 8001898:	f8ad 4006 	strh.w	r4, [sp, #6]
 800189c:	f10d 0106 	add.w	r1, sp, #6
 80018a0:	2201      	movs	r2, #1
 80018a2:	f00b f94d 	bl	800cb40 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018a6:	2201      	movs	r2, #1
 80018a8:	2104      	movs	r1, #4
 80018aa:	4628      	mov	r0, r5
}
 80018ac:	b003      	add	sp, #12
 80018ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018b2:	f008 bd9f 	b.w	800a3f4 <HAL_GPIO_WritePin>
 80018b6:	bf00      	nop
 80018b8:	40020800 	.word	0x40020800
 80018bc:	40020c00 	.word	0x40020c00
 80018c0:	20000008 	.word	0x20000008
 80018c4:	200002d0 	.word	0x200002d0

080018c8 <LCD_IO_WriteReg>:
{
 80018c8:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ca:	4d10      	ldr	r5, [pc, #64]	; (800190c <LCD_IO_WriteReg+0x44>)
{
 80018cc:	b083      	sub	sp, #12
 80018ce:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018d0:	2200      	movs	r2, #0
 80018d2:	480f      	ldr	r0, [pc, #60]	; (8001910 <LCD_IO_WriteReg+0x48>)
 80018d4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018d8:	f008 fd8c 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018dc:	4628      	mov	r0, r5
 80018de:	2200      	movs	r2, #0
 80018e0:	2104      	movs	r1, #4
 80018e2:	f008 fd87 	bl	800a3f4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80018e6:	4b0b      	ldr	r3, [pc, #44]	; (8001914 <LCD_IO_WriteReg+0x4c>)
 80018e8:	480b      	ldr	r0, [pc, #44]	; (8001918 <LCD_IO_WriteReg+0x50>)
 80018ea:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80018ec:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80018f0:	f10d 0106 	add.w	r1, sp, #6
 80018f4:	2201      	movs	r2, #1
 80018f6:	f00b f923 	bl	800cb40 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018fa:	2201      	movs	r2, #1
 80018fc:	2104      	movs	r1, #4
 80018fe:	4628      	mov	r0, r5
}
 8001900:	b003      	add	sp, #12
 8001902:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001906:	f008 bd75 	b.w	800a3f4 <HAL_GPIO_WritePin>
 800190a:	bf00      	nop
 800190c:	40020800 	.word	0x40020800
 8001910:	40020c00 	.word	0x40020c00
 8001914:	20000008 	.word	0x20000008
 8001918:	200002d0 	.word	0x200002d0

0800191c <LCD_IO_ReadData>:
{
 800191c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001920:	4e19      	ldr	r6, [pc, #100]	; (8001988 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001922:	4f1a      	ldr	r7, [pc, #104]	; (800198c <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001924:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001990 <LCD_IO_ReadData+0x74>
 8001928:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001994 <LCD_IO_ReadData+0x78>
{
 800192c:	b083      	sub	sp, #12
 800192e:	460c      	mov	r4, r1
 8001930:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001932:	2200      	movs	r2, #0
 8001934:	4630      	mov	r0, r6
 8001936:	2104      	movs	r1, #4
 8001938:	f008 fd5c 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800193c:	4638      	mov	r0, r7
 800193e:	2200      	movs	r2, #0
 8001940:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001944:	f008 fd56 	bl	800a3f4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001948:	f8d9 3000 	ldr.w	r3, [r9]
 800194c:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001950:	a901      	add	r1, sp, #4
 8001952:	2201      	movs	r2, #1
 8001954:	4640      	mov	r0, r8
 8001956:	f00b f8f3 	bl	800cb40 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800195a:	f8d9 3000 	ldr.w	r3, [r9]
 800195e:	4622      	mov	r2, r4
 8001960:	a901      	add	r1, sp, #4
 8001962:	4640      	mov	r0, r8
 8001964:	f00b fb94 	bl	800d090 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001968:	4638      	mov	r0, r7
 800196a:	2201      	movs	r2, #1
 800196c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001970:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001972:	f008 fd3f 	bl	800a3f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001976:	4630      	mov	r0, r6
 8001978:	2201      	movs	r2, #1
 800197a:	2104      	movs	r1, #4
 800197c:	f008 fd3a 	bl	800a3f4 <HAL_GPIO_WritePin>
}
 8001980:	4620      	mov	r0, r4
 8001982:	b003      	add	sp, #12
 8001984:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001988:	40020800 	.word	0x40020800
 800198c:	40020c00 	.word	0x40020c00
 8001990:	20000008 	.word	0x20000008
 8001994:	200002d0 	.word	0x200002d0

08001998 <LCD_Delay>:
  HAL_Delay(Delay);
 8001998:	f008 bb4e 	b.w	800a038 <HAL_Delay>

0800199c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 800199c:	4b03      	ldr	r3, [pc, #12]	; (80019ac <HAL_TIM_PeriodElapsedCallback+0x10>)
 800199e:	6802      	ldr	r2, [r0, #0]
 80019a0:	429a      	cmp	r2, r3
 80019a2:	d000      	beq.n	80019a6 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80019a4:	4770      	bx	lr
    HAL_IncTick();
 80019a6:	f008 bb35 	b.w	800a014 <HAL_IncTick>
 80019aa:	bf00      	nop
 80019ac:	40001000 	.word	0x40001000

080019b0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80019b0:	4770      	bx	lr
 80019b2:	bf00      	nop

080019b4 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 80019b4:	b410      	push	{r4}
 80019b6:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80019b8:	4b15      	ldr	r3, [pc, #84]	; (8001a10 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80019ba:	4916      	ldr	r1, [pc, #88]	; (8001a14 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80019bc:	2400      	movs	r4, #0
 80019be:	9400      	str	r4, [sp, #0]
 80019c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019c2:	f042 0220 	orr.w	r2, r2, #32
 80019c6:	631a      	str	r2, [r3, #48]	; 0x30
 80019c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ca:	f002 0220 	and.w	r2, r2, #32
 80019ce:	9200      	str	r2, [sp, #0]
 80019d0:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80019d2:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80019d4:	4a10      	ldr	r2, [pc, #64]	; (8001a18 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80019d6:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80019da:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 80019dc:	6808      	ldr	r0, [r1, #0]
 80019de:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 80019e2:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80019e4:	9401      	str	r4, [sp, #4]
 80019e6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80019e8:	f041 0104 	orr.w	r1, r1, #4
 80019ec:	6319      	str	r1, [r3, #48]	; 0x30
 80019ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019f0:	f003 0304 	and.w	r3, r3, #4
 80019f4:	9301      	str	r3, [sp, #4]
 80019f6:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80019f8:	6813      	ldr	r3, [r2, #0]
 80019fa:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80019fe:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001a00:	6813      	ldr	r3, [r2, #0]
 8001a02:	f043 030c 	orr.w	r3, r3, #12
 8001a06:	6013      	str	r3, [r2, #0]
}
 8001a08:	b003      	add	sp, #12
 8001a0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001a0e:	4770      	bx	lr
 8001a10:	40023800 	.word	0x40023800
 8001a14:	40021400 	.word	0x40021400
 8001a18:	40020800 	.word	0x40020800

08001a1c <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001a1c:	b410      	push	{r4}
 8001a1e:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001a20:	4a0e      	ldr	r2, [pc, #56]	; (8001a5c <MEAS_timer_init+0x40>)
 8001a22:	2000      	movs	r0, #0
 8001a24:	9001      	str	r0, [sp, #4]
 8001a26:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001a28:	f041 0101 	orr.w	r1, r1, #1
 8001a2c:	6411      	str	r1, [r2, #64]	; 0x40
 8001a2e:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001a30:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001a34:	f002 0201 	and.w	r2, r2, #1
 8001a38:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001a3a:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001a3e:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001a40:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001a42:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001a44:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001a46:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001a48:	4905      	ldr	r1, [pc, #20]	; (8001a60 <MEAS_timer_init+0x44>)
 8001a4a:	f042 0220 	orr.w	r2, r2, #32
 8001a4e:	605a      	str	r2, [r3, #4]
 8001a50:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001a54:	b003      	add	sp, #12
 8001a56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001a5a:	4770      	bx	lr
 8001a5c:	40023800 	.word	0x40023800
 8001a60:	e000e100 	.word	0xe000e100

08001a64 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001a64:	b410      	push	{r4}
 8001a66:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001a68:	4a36      	ldr	r2, [pc, #216]	; (8001b44 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001a6a:	4b37      	ldr	r3, [pc, #220]	; (8001b48 <MEAS_ADC3_scan_init+0xe4>)
 8001a6c:	4c37      	ldr	r4, [pc, #220]	; (8001b4c <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001a6e:	2100      	movs	r1, #0
 8001a70:	9100      	str	r1, [sp, #0]
 8001a72:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001a74:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001a78:	6450      	str	r0, [r2, #68]	; 0x44
 8001a7a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001a7c:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001a80:	9000      	str	r0, [sp, #0]
 8001a82:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001a84:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001a86:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001a8a:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001a8c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001a8e:	f040 0004 	orr.w	r0, r0, #4
 8001a92:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001a94:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001a96:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001a9a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001a9c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001a9e:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001aa2:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001aa4:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001aa6:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001aaa:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001aac:	6858      	ldr	r0, [r3, #4]
 8001aae:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001ab2:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001ab4:	6898      	ldr	r0, [r3, #8]
 8001ab6:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001aba:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001abc:	6898      	ldr	r0, [r3, #8]
 8001abe:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001ac2:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001ac4:	6898      	ldr	r0, [r3, #8]
 8001ac6:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001aca:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001acc:	9101      	str	r1, [sp, #4]
 8001ace:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001ad0:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001ad4:	6310      	str	r0, [r2, #48]	; 0x30
 8001ad6:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001ad8:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001adc:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001ade:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001ae2:	9a01      	ldr	r2, [sp, #4]
 8001ae4:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001ae8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001aea:	f022 0201 	bic.w	r2, r2, #1
 8001aee:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN);     // Wait for DMA to finish
 8001af0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001af2:	07d2      	lsls	r2, r2, #31
 8001af4:	d4fc      	bmi.n	8001af0 <MEAS_ADC3_scan_init+0x8c>
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001af6:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001af8:	4815      	ldr	r0, [pc, #84]	; (8001b50 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001afa:	4916      	ldr	r1, [pc, #88]	; (8001b54 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001afc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001b00:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001b02:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b04:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001b08:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001b0a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b0c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001b10:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001b12:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b14:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001b18:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001b1a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b1c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001b20:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001b22:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b24:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001b28:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001b2a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001b2c:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001b30:	f042 0210 	orr.w	r2, r2, #16
 8001b34:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001b36:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001b38:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001b3a:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001b3c:	b003      	add	sp, #12
 8001b3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001b42:	4770      	bx	lr
 8001b44:	40023800 	.word	0x40023800
 8001b48:	40012200 	.word	0x40012200
 8001b4c:	e000e100 	.word	0xe000e100
 8001b50:	4001224c 	.word	0x4001224c
 8001b54:	20000328 	.word	0x20000328

08001b58 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001b58:	4b1b      	ldr	r3, [pc, #108]	; (8001bc8 <DMA2_Stream1_IRQHandler+0x70>)
 8001b5a:	681a      	ldr	r2, [r3, #0]
 8001b5c:	0511      	lsls	r1, r2, #20
 8001b5e:	d400      	bmi.n	8001b62 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001b60:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b62:	4a1a      	ldr	r2, [pc, #104]	; (8001bcc <DMA2_Stream1_IRQHandler+0x74>)
 8001b64:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001b68:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001b6c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b70:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b74:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001b78:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b7a:	f022 0201 	bic.w	r2, r2, #1
 8001b7e:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN);	  // Wait for DMA to finish
 8001b80:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b82:	07d2      	lsls	r2, r2, #31
 8001b84:	d4fc      	bmi.n	8001b80 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001b86:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001b88:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001b8c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001b90:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001b92:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001b94:	490e      	ldr	r1, [pc, #56]	; (8001bd0 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001b96:	f023 0301 	bic.w	r3, r3, #1
 8001b9a:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001b9c:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001b9e:	4b0d      	ldr	r3, [pc, #52]	; (8001bd4 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001ba0:	f020 0001 	bic.w	r0, r0, #1
 8001ba4:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001ba6:	6888      	ldr	r0, [r1, #8]
 8001ba8:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001bac:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001bae:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001bb0:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001bb4:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001bb6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001bb8:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001bbc:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001bbe:	6813      	ldr	r3, [r2, #0]
 8001bc0:	f023 0301 	bic.w	r3, r3, #1
 8001bc4:	6013      	str	r3, [r2, #0]
}
 8001bc6:	4770      	bx	lr
 8001bc8:	40026400 	.word	0x40026400
 8001bcc:	e000e100 	.word	0xe000e100
 8001bd0:	40012200 	.word	0x40012200
 8001bd4:	40023800 	.word	0x40023800

08001bd8 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001bd8:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8001bda:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001bde:	2100      	movs	r1, #0
 8001be0:	480f      	ldr	r0, [pc, #60]	; (8001c20 <MEAS_start_measure+0x48>)
 8001be2:	f029 f968 	bl	802aeb6 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8001be6:	f7ff ff3d 	bl	8001a64 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001bea:	4a0e      	ldr	r2, [pc, #56]	; (8001c24 <MEAS_start_measure+0x4c>)
 8001bec:	490e      	ldr	r1, [pc, #56]	; (8001c28 <MEAS_start_measure+0x50>)
 8001bee:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001bf0:	480e      	ldr	r0, [pc, #56]	; (8001c2c <MEAS_start_measure+0x54>)
 8001bf2:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001bf6:	f043 0301 	orr.w	r3, r3, #1
 8001bfa:	6293      	str	r3, [r2, #40]	; 0x28
 8001bfc:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c00:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001c02:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001c04:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001c08:	f043 0301 	orr.w	r3, r3, #1
 8001c0c:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001c0e:	680b      	ldr	r3, [r1, #0]
 8001c10:	f043 0301 	orr.w	r3, r3, #1
 8001c14:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001c16:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001c18:	07db      	lsls	r3, r3, #31
 8001c1a:	d4fc      	bmi.n	8001c16 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001c1c:	4800      	ldr	r0, [pc, #0]	; (8001c20 <MEAS_start_measure+0x48>)
 8001c1e:	bd10      	pop	{r4, pc}
 8001c20:	20000328 	.word	0x20000328
 8001c24:	40026400 	.word	0x40026400
 8001c28:	e000e100 	.word	0xe000e100
 8001c2c:	40012200 	.word	0x40012200

08001c30 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001c30:	2004      	movs	r0, #4
 8001c32:	4770      	bx	lr

08001c34 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001c34:	2040      	movs	r0, #64	; 0x40
 8001c36:	4770      	bx	lr

08001c38 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001c38:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001c3c:	4770      	bx	lr
 8001c3e:	bf00      	nop

08001c40 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001c40:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001c42:	4b0e      	ldr	r3, [pc, #56]	; (8001c7c <HAL_MspInit+0x3c>)
 8001c44:	2200      	movs	r2, #0
 8001c46:	9200      	str	r2, [sp, #0]
 8001c48:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c4a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001c4e:	6459      	str	r1, [r3, #68]	; 0x44
 8001c50:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001c52:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001c56:	9000      	str	r0, [sp, #0]
 8001c58:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001c5a:	9201      	str	r2, [sp, #4]
 8001c5c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001c5e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001c62:	6418      	str	r0, [r3, #64]	; 0x40
 8001c64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c66:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c6a:	9301      	str	r3, [sp, #4]
 8001c6c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001c6e:	210f      	movs	r1, #15
 8001c70:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001c74:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001c76:	f008 ba03 	b.w	800a080 <HAL_NVIC_SetPriority>
 8001c7a:	bf00      	nop
 8001c7c:	40023800 	.word	0x40023800

08001c80 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001c80:	4b0b      	ldr	r3, [pc, #44]	; (8001cb0 <HAL_CRC_MspInit+0x30>)
 8001c82:	6802      	ldr	r2, [r0, #0]
 8001c84:	429a      	cmp	r2, r3
 8001c86:	d000      	beq.n	8001c8a <HAL_CRC_MspInit+0xa>
 8001c88:	4770      	bx	lr
{
 8001c8a:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001c8c:	2200      	movs	r2, #0
 8001c8e:	9201      	str	r2, [sp, #4]
 8001c90:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001c94:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001c98:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001c9c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001ca0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ca2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001ca6:	9301      	str	r3, [sp, #4]
 8001ca8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001caa:	b002      	add	sp, #8
 8001cac:	4770      	bx	lr
 8001cae:	bf00      	nop
 8001cb0:	40023000 	.word	0x40023000

08001cb4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001cb4:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001cb8:	4b2e      	ldr	r3, [pc, #184]	; (8001d74 <HAL_I2C_MspInit+0xc0>)
 8001cba:	6802      	ldr	r2, [r0, #0]
{
 8001cbc:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cbe:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001cc0:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cc2:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001cc6:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001cca:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001ccc:	d002      	beq.n	8001cd4 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001cce:	b00a      	add	sp, #40	; 0x28
 8001cd0:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cd4:	4d28      	ldr	r5, [pc, #160]	; (8001d78 <HAL_I2C_MspInit+0xc4>)
 8001cd6:	9401      	str	r4, [sp, #4]
 8001cd8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cda:	4828      	ldr	r0, [pc, #160]	; (8001d7c <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cdc:	f043 0304 	orr.w	r3, r3, #4
 8001ce0:	632b      	str	r3, [r5, #48]	; 0x30
 8001ce2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ce4:	f003 0304 	and.w	r3, r3, #4
 8001ce8:	9301      	str	r3, [sp, #4]
 8001cea:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cec:	9402      	str	r4, [sp, #8]
 8001cee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001cf0:	f043 0301 	orr.w	r3, r3, #1
 8001cf4:	632b      	str	r3, [r5, #48]	; 0x30
 8001cf6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001cf8:	f003 0301 	and.w	r3, r3, #1
 8001cfc:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001cfe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001d02:	f04f 0801 	mov.w	r8, #1
 8001d06:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d0a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d0c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001d0e:	2312      	movs	r3, #18
 8001d10:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001d14:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d18:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d1a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d1c:	f008 fa26 	bl	800a16c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d20:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001d22:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001d26:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d28:	4815      	ldr	r0, [pc, #84]	; (8001d80 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d2a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001d2c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001d30:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d34:	f008 fa1a 	bl	800a16c <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001d38:	9403      	str	r4, [sp, #12]
 8001d3a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001d3c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d40:	642b      	str	r3, [r5, #64]	; 0x40
 8001d42:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001d44:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001d48:	4622      	mov	r2, r4
 8001d4a:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001d4c:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001d4e:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001d50:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001d52:	f008 f995 	bl	800a080 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001d56:	2048      	movs	r0, #72	; 0x48
 8001d58:	f008 f9d0 	bl	800a0fc <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001d5c:	6a2b      	ldr	r3, [r5, #32]
 8001d5e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d62:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001d64:	6a2b      	ldr	r3, [r5, #32]
 8001d66:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001d6a:	622b      	str	r3, [r5, #32]
}
 8001d6c:	b00a      	add	sp, #40	; 0x28
 8001d6e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001d72:	bf00      	nop
 8001d74:	40005c00 	.word	0x40005c00
 8001d78:	40023800 	.word	0x40023800
 8001d7c:	40020800 	.word	0x40020800
 8001d80:	40020000 	.word	0x40020000

08001d84 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001d84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001d88:	4604      	mov	r4, r0
 8001d8a:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d8c:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d8e:	2230      	movs	r2, #48	; 0x30
 8001d90:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d92:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001d96:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001d9a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d9c:	f029 f88b 	bl	802aeb6 <memset>
  if(hltdc->Instance==LTDC)
 8001da0:	4b67      	ldr	r3, [pc, #412]	; (8001f40 <HAL_LTDC_MspInit+0x1bc>)
 8001da2:	6822      	ldr	r2, [r4, #0]
 8001da4:	429a      	cmp	r2, r3
 8001da6:	d002      	beq.n	8001dae <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001da8:	b01a      	add	sp, #104	; 0x68
 8001daa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001dae:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001db0:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001db2:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001db4:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001db6:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001db8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001dbc:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001dbe:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001dc0:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001dc2:	f00a fc3d 	bl	800c640 <HAL_RCCEx_PeriphCLKConfig>
 8001dc6:	2800      	cmp	r0, #0
 8001dc8:	f040 80b7 	bne.w	8001f3a <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001dcc:	4b5d      	ldr	r3, [pc, #372]	; (8001f44 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dce:	485e      	ldr	r0, [pc, #376]	; (8001f48 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001dd0:	2400      	movs	r4, #0
 8001dd2:	9401      	str	r4, [sp, #4]
 8001dd4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001dd6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001dda:	645a      	str	r2, [r3, #68]	; 0x44
 8001ddc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001dde:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001de2:	9201      	str	r2, [sp, #4]
 8001de4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001de6:	9402      	str	r4, [sp, #8]
 8001de8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dea:	f042 0220 	orr.w	r2, r2, #32
 8001dee:	631a      	str	r2, [r3, #48]	; 0x30
 8001df0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001df2:	f002 0220 	and.w	r2, r2, #32
 8001df6:	9202      	str	r2, [sp, #8]
 8001df8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001dfa:	9403      	str	r4, [sp, #12]
 8001dfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dfe:	f042 0201 	orr.w	r2, r2, #1
 8001e02:	631a      	str	r2, [r3, #48]	; 0x30
 8001e04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e06:	f002 0201 	and.w	r2, r2, #1
 8001e0a:	9203      	str	r2, [sp, #12]
 8001e0c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001e0e:	9404      	str	r4, [sp, #16]
 8001e10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e12:	f042 0202 	orr.w	r2, r2, #2
 8001e16:	631a      	str	r2, [r3, #48]	; 0x30
 8001e18:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e1a:	f002 0202 	and.w	r2, r2, #2
 8001e1e:	9204      	str	r2, [sp, #16]
 8001e20:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001e22:	9405      	str	r4, [sp, #20]
 8001e24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e26:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001e2a:	631a      	str	r2, [r3, #48]	; 0x30
 8001e2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e2e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001e32:	9205      	str	r2, [sp, #20]
 8001e34:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e36:	9406      	str	r4, [sp, #24]
 8001e38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e3a:	f042 0204 	orr.w	r2, r2, #4
 8001e3e:	631a      	str	r2, [r3, #48]	; 0x30
 8001e40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e42:	f002 0204 	and.w	r2, r2, #4
 8001e46:	9206      	str	r2, [sp, #24]
 8001e48:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e4a:	9407      	str	r4, [sp, #28]
 8001e4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e4e:	f042 0208 	orr.w	r2, r2, #8
 8001e52:	631a      	str	r2, [r3, #48]	; 0x30
 8001e54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e56:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001e5a:	2600      	movs	r6, #0
 8001e5c:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e5e:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e60:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e62:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001e64:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001e68:	2302      	movs	r3, #2
 8001e6a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e6e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e72:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e74:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e76:	f008 f979 	bl	800a16c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e7a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e7c:	f641 0258 	movw	r2, #6232	; 0x1858
 8001e80:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e82:	4832      	ldr	r0, [pc, #200]	; (8001f4c <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e84:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e86:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e8a:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e8e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e92:	f008 f96b 	bl	800a16c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e96:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e98:	2203      	movs	r2, #3
 8001e9a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e9c:	482c      	ldr	r0, [pc, #176]	; (8001f50 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e9e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001ea2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001ea6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001eaa:	f008 f95f 	bl	800a16c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001eae:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001eb0:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001eb4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001eb6:	4826      	ldr	r0, [pc, #152]	; (8001f50 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001eb8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001eba:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001ebe:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ec2:	f008 f953 	bl	800a16c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ec6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001ec8:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001ecc:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ece:	4821      	ldr	r0, [pc, #132]	; (8001f54 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ed0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001ed2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001ed6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001eda:	f008 f947 	bl	800a16c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ede:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001ee0:	22c0      	movs	r2, #192	; 0xc0
 8001ee2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ee4:	481c      	ldr	r0, [pc, #112]	; (8001f58 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ee6:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001ee8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001eec:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ef0:	f008 f93c 	bl	800a16c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ef4:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001ef6:	2208      	movs	r2, #8
 8001ef8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001efa:	4818      	ldr	r0, [pc, #96]	; (8001f5c <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001efc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001efe:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f02:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f06:	f008 f931 	bl	800a16c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001f0a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f0c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001f0e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f12:	4810      	ldr	r0, [pc, #64]	; (8001f54 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f14:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001f18:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f1c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f20:	f008 f924 	bl	800a16c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001f24:	4622      	mov	r2, r4
 8001f26:	2105      	movs	r1, #5
 8001f28:	2058      	movs	r0, #88	; 0x58
 8001f2a:	f008 f8a9 	bl	800a080 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001f2e:	2058      	movs	r0, #88	; 0x58
 8001f30:	f008 f8e4 	bl	800a0fc <HAL_NVIC_EnableIRQ>
}
 8001f34:	b01a      	add	sp, #104	; 0x68
 8001f36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001f3a:	f7ff fd39 	bl	80019b0 <Error_Handler>
 8001f3e:	e745      	b.n	8001dcc <HAL_LTDC_MspInit+0x48>
 8001f40:	40016800 	.word	0x40016800
 8001f44:	40023800 	.word	0x40023800
 8001f48:	40021400 	.word	0x40021400
 8001f4c:	40020000 	.word	0x40020000
 8001f50:	40020400 	.word	0x40020400
 8001f54:	40021800 	.word	0x40021800
 8001f58:	40020800 	.word	0x40020800
 8001f5c:	40020c00 	.word	0x40020c00

08001f60 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001f60:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001f62:	4a1b      	ldr	r2, [pc, #108]	; (8001fd0 <HAL_SPI_MspInit+0x70>)
 8001f64:	6801      	ldr	r1, [r0, #0]
{
 8001f66:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f68:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001f6a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f6c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001f70:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001f74:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001f76:	d001      	beq.n	8001f7c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001f78:	b008      	add	sp, #32
 8001f7a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001f7c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001f80:	9300      	str	r3, [sp, #0]
 8001f82:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f84:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001f88:	6450      	str	r0, [r2, #68]	; 0x44
 8001f8a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f8c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001f90:	9000      	str	r0, [sp, #0]
 8001f92:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f94:	9301      	str	r3, [sp, #4]
 8001f96:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f98:	480e      	ldr	r0, [pc, #56]	; (8001fd4 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f9a:	f043 0320 	orr.w	r3, r3, #32
 8001f9e:	6313      	str	r3, [r2, #48]	; 0x30
 8001fa0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001fa2:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001fc8 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001fa6:	f003 0320 	and.w	r3, r3, #32
 8001faa:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fac:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001fae:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fb0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001fb2:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001fb6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001fba:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fbc:	f008 f8d6 	bl	800a16c <HAL_GPIO_Init>
}
 8001fc0:	b008      	add	sp, #32
 8001fc2:	bd10      	pop	{r4, pc}
 8001fc4:	f3af 8000 	nop.w
 8001fc8:	00000380 	.word	0x00000380
 8001fcc:	00000002 	.word	0x00000002
 8001fd0:	40015000 	.word	0x40015000
 8001fd4:	40021400 	.word	0x40021400

08001fd8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001fd8:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 8001fda:	4a21      	ldr	r2, [pc, #132]	; (8002060 <HAL_TIM_Base_MspInit+0x88>)
 8001fdc:	6803      	ldr	r3, [r0, #0]
 8001fde:	4293      	cmp	r3, r2
{
 8001fe0:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 8001fe2:	d008      	beq.n	8001ff6 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 8001fe4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001fe8:	d023      	beq.n	8002032 <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001fea:	4a1e      	ldr	r2, [pc, #120]	; (8002064 <HAL_TIM_Base_MspInit+0x8c>)
 8001fec:	4293      	cmp	r3, r2
 8001fee:	d011      	beq.n	8002014 <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001ff0:	b005      	add	sp, #20
 8001ff2:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001ff6:	4b1c      	ldr	r3, [pc, #112]	; (8002068 <HAL_TIM_Base_MspInit+0x90>)
 8001ff8:	2200      	movs	r2, #0
 8001ffa:	9201      	str	r2, [sp, #4]
 8001ffc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ffe:	f042 0201 	orr.w	r2, r2, #1
 8002002:	645a      	str	r2, [r3, #68]	; 0x44
 8002004:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002006:	f003 0301 	and.w	r3, r3, #1
 800200a:	9301      	str	r3, [sp, #4]
 800200c:	9b01      	ldr	r3, [sp, #4]
}
 800200e:	b005      	add	sp, #20
 8002010:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002014:	4b14      	ldr	r3, [pc, #80]	; (8002068 <HAL_TIM_Base_MspInit+0x90>)
 8002016:	2200      	movs	r2, #0
 8002018:	9203      	str	r2, [sp, #12]
 800201a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800201c:	f042 0202 	orr.w	r2, r2, #2
 8002020:	641a      	str	r2, [r3, #64]	; 0x40
 8002022:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002024:	f003 0302 	and.w	r3, r3, #2
 8002028:	9303      	str	r3, [sp, #12]
 800202a:	9b03      	ldr	r3, [sp, #12]
}
 800202c:	b005      	add	sp, #20
 800202e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002032:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8002036:	2200      	movs	r2, #0
 8002038:	9202      	str	r2, [sp, #8]
 800203a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800203c:	f041 0101 	orr.w	r1, r1, #1
 8002040:	6419      	str	r1, [r3, #64]	; 0x40
 8002042:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002044:	f003 0301 	and.w	r3, r3, #1
 8002048:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 800204a:	201c      	movs	r0, #28
 800204c:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 800204e:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002050:	f008 f816 	bl	800a080 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002054:	201c      	movs	r0, #28
}
 8002056:	b005      	add	sp, #20
 8002058:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800205c:	f008 b84e 	b.w	800a0fc <HAL_NVIC_EnableIRQ>
 8002060:	40010000 	.word	0x40010000
 8002064:	40000400 	.word	0x40000400
 8002068:	40023800 	.word	0x40023800

0800206c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800206c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 800206e:	4b2b      	ldr	r3, [pc, #172]	; (800211c <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002070:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002072:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002074:	2200      	movs	r2, #0
 8002076:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002078:	2c00      	cmp	r4, #0
 800207a:	d14c      	bne.n	8002116 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 800207c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 800207e:	4a28      	ldr	r2, [pc, #160]	; (8002120 <HAL_SDRAM_MspInit+0xb4>)
 8002080:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002082:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002084:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002086:	4827      	ldr	r0, [pc, #156]	; (8002124 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002088:	433b      	orrs	r3, r7
 800208a:	6393      	str	r3, [r2, #56]	; 0x38
 800208c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800208e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002090:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002092:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002094:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002098:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800209a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800209c:	2302      	movs	r3, #2
 800209e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020a2:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80020a6:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020a8:	f008 f860 	bl	800a16c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020ac:	481e      	ldr	r0, [pc, #120]	; (8002128 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80020ae:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020b0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020b2:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020b4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020b8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020bc:	f008 f856 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80020c0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020c4:	4819      	ldr	r0, [pc, #100]	; (800212c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80020c6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020c8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020ca:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020ce:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020d2:	f008 f84b 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80020d6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020da:	4815      	ldr	r0, [pc, #84]	; (8002130 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80020dc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020de:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020e0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020e4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020e8:	f008 f840 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80020ec:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020f0:	4810      	ldr	r0, [pc, #64]	; (8002134 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80020f2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020f4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020f6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020fa:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020fe:	f008 f835 	bl	800a16c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002102:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002104:	480c      	ldr	r0, [pc, #48]	; (8002138 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002106:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002108:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800210a:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800210e:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002110:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002112:	f008 f82b 	bl	800a16c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002116:	b009      	add	sp, #36	; 0x24
 8002118:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800211a:	bf00      	nop
 800211c:	20000728 	.word	0x20000728
 8002120:	40023800 	.word	0x40023800
 8002124:	40021400 	.word	0x40021400
 8002128:	40020800 	.word	0x40020800
 800212c:	40021800 	.word	0x40021800
 8002130:	40021000 	.word	0x40021000
 8002134:	40020c00 	.word	0x40020c00
 8002138:	40020400 	.word	0x40020400

0800213c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800213c:	b570      	push	{r4, r5, r6, lr}
 800213e:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002140:	4b23      	ldr	r3, [pc, #140]	; (80021d0 <HAL_InitTick+0x94>)
 8002142:	2200      	movs	r2, #0
 8002144:	9202      	str	r2, [sp, #8]
 8002146:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002148:	f042 0210 	orr.w	r2, r2, #16
 800214c:	641a      	str	r2, [r3, #64]	; 0x40
 800214e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002150:	f003 0310 	and.w	r3, r3, #16
 8002154:	9302      	str	r3, [sp, #8]
{
 8002156:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002158:	a901      	add	r1, sp, #4
 800215a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800215c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800215e:	f00a fa4d 	bl	800c5fc <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002162:	9b06      	ldr	r3, [sp, #24]
 8002164:	b9d3      	cbnz	r3, 800219c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002166:	f00a fa39 	bl	800c5dc <HAL_RCC_GetPCLK1Freq>
 800216a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800216c:	4a19      	ldr	r2, [pc, #100]	; (80021d4 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800216e:	4c1a      	ldr	r4, [pc, #104]	; (80021d8 <HAL_InitTick+0x9c>)
 8002170:	491a      	ldr	r1, [pc, #104]	; (80021dc <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002172:	fba2 2303 	umull	r2, r3, r2, r3
 8002176:	0c9b      	lsrs	r3, r3, #18
 8002178:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800217a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 800217c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002180:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002182:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8002186:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002188:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800218a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800218c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 800218e:	f00b f865 	bl	800d25c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002192:	4606      	mov	r6, r0
 8002194:	b130      	cbz	r0, 80021a4 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8002196:	4630      	mov	r0, r6
 8002198:	b008      	add	sp, #32
 800219a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800219c:	f00a fa1e 	bl	800c5dc <HAL_RCC_GetPCLK1Freq>
 80021a0:	0043      	lsls	r3, r0, #1
 80021a2:	e7e3      	b.n	800216c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80021a4:	4620      	mov	r0, r4
 80021a6:	f00b f8e7 	bl	800d378 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80021aa:	4606      	mov	r6, r0
 80021ac:	2800      	cmp	r0, #0
 80021ae:	d1f2      	bne.n	8002196 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80021b0:	2036      	movs	r0, #54	; 0x36
 80021b2:	f007 ffa3 	bl	800a0fc <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80021b6:	2d0f      	cmp	r5, #15
 80021b8:	d901      	bls.n	80021be <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80021ba:	2601      	movs	r6, #1
 80021bc:	e7eb      	b.n	8002196 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80021be:	4632      	mov	r2, r6
 80021c0:	4629      	mov	r1, r5
 80021c2:	2036      	movs	r0, #54	; 0x36
 80021c4:	f007 ff5c 	bl	800a080 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80021c8:	4b05      	ldr	r3, [pc, #20]	; (80021e0 <HAL_InitTick+0xa4>)
 80021ca:	601d      	str	r5, [r3, #0]
 80021cc:	e7e3      	b.n	8002196 <HAL_InitTick+0x5a>
 80021ce:	bf00      	nop
 80021d0:	40023800 	.word	0x40023800
 80021d4:	431bde83 	.word	0x431bde83
 80021d8:	2000072c 	.word	0x2000072c
 80021dc:	40001000 	.word	0x40001000
 80021e0:	20000080 	.word	0x20000080

080021e4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80021e4:	4770      	bx	lr
 80021e6:	bf00      	nop

080021e8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80021e8:	e7fe      	b.n	80021e8 <HardFault_Handler>
 80021ea:	bf00      	nop

080021ec <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80021ec:	e7fe      	b.n	80021ec <MemManage_Handler>
 80021ee:	bf00      	nop

080021f0 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80021f0:	e7fe      	b.n	80021f0 <BusFault_Handler>
 80021f2:	bf00      	nop

080021f4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80021f4:	e7fe      	b.n	80021f4 <UsageFault_Handler>
 80021f6:	bf00      	nop

080021f8 <DebugMon_Handler>:
 80021f8:	4770      	bx	lr
 80021fa:	bf00      	nop

080021fc <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80021fc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80021fe:	20c8      	movs	r0, #200	; 0xc8
 8002200:	f007 ff1a 	bl	800a038 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002204:	4804      	ldr	r0, [pc, #16]	; (8002218 <EXTI3_IRQHandler+0x1c>)
 8002206:	2200      	movs	r2, #0
 8002208:	2120      	movs	r1, #32
 800220a:	f008 f8f3 	bl	800a3f4 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 800220e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002212:	2008      	movs	r0, #8
 8002214:	f008 b8fe 	b.w	800a414 <HAL_GPIO_EXTI_IRQHandler>
 8002218:	40021000 	.word	0x40021000

0800221c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800221c:	4801      	ldr	r0, [pc, #4]	; (8002224 <TIM6_DAC_IRQHandler+0x8>)
 800221e:	f00b b8ef 	b.w	800d400 <HAL_TIM_IRQHandler>
 8002222:	bf00      	nop
 8002224:	2000072c 	.word	0x2000072c

08002228 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002228:	4801      	ldr	r0, [pc, #4]	; (8002230 <I2C3_EV_IRQHandler+0x8>)
 800222a:	f009 b853 	b.w	800b2d4 <HAL_I2C_EV_IRQHandler>
 800222e:	bf00      	nop
 8002230:	200001a0 	.word	0x200001a0

08002234 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002234:	4801      	ldr	r0, [pc, #4]	; (800223c <LTDC_IRQHandler+0x8>)
 8002236:	f009 bdc7 	b.w	800bdc8 <HAL_LTDC_IRQHandler>
 800223a:	bf00      	nop
 800223c:	200001f4 	.word	0x200001f4

08002240 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002240:	2001      	movs	r0, #1
 8002242:	4770      	bx	lr

08002244 <_kill>:

int _kill(int pid, int sig)
{
 8002244:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002246:	f028 ff2f 	bl	802b0a8 <__errno>
 800224a:	2316      	movs	r3, #22
 800224c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800224e:	f04f 30ff 	mov.w	r0, #4294967295
 8002252:	bd08      	pop	{r3, pc}

08002254 <_exit>:

void _exit (int status)
{
 8002254:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002256:	f028 ff27 	bl	802b0a8 <__errno>
 800225a:	2316      	movs	r3, #22
 800225c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800225e:	e7fe      	b.n	800225e <_exit+0xa>

08002260 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002260:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002262:	1e16      	subs	r6, r2, #0
 8002264:	dd07      	ble.n	8002276 <_read+0x16>
 8002266:	460c      	mov	r4, r1
 8002268:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 800226a:	f3af 8000 	nop.w
 800226e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002272:	42a5      	cmp	r5, r4
 8002274:	d1f9      	bne.n	800226a <_read+0xa>
	}

return len;
}
 8002276:	4630      	mov	r0, r6
 8002278:	bd70      	pop	{r4, r5, r6, pc}
 800227a:	bf00      	nop

0800227c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800227c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800227e:	1e16      	subs	r6, r2, #0
 8002280:	dd07      	ble.n	8002292 <_write+0x16>
 8002282:	460c      	mov	r4, r1
 8002284:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8002286:	f814 0b01 	ldrb.w	r0, [r4], #1
 800228a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800228e:	42ac      	cmp	r4, r5
 8002290:	d1f9      	bne.n	8002286 <_write+0xa>
	}
	return len;
}
 8002292:	4630      	mov	r0, r6
 8002294:	bd70      	pop	{r4, r5, r6, pc}
 8002296:	bf00      	nop

08002298 <_close>:

int _close(int file)
{
	return -1;
}
 8002298:	f04f 30ff 	mov.w	r0, #4294967295
 800229c:	4770      	bx	lr
 800229e:	bf00      	nop

080022a0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80022a0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80022a4:	604b      	str	r3, [r1, #4]
	return 0;
}
 80022a6:	2000      	movs	r0, #0
 80022a8:	4770      	bx	lr
 80022aa:	bf00      	nop

080022ac <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80022ac:	2001      	movs	r0, #1
 80022ae:	4770      	bx	lr

080022b0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80022b0:	2000      	movs	r0, #0
 80022b2:	4770      	bx	lr

080022b4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80022b4:	4a0b      	ldr	r2, [pc, #44]	; (80022e4 <_sbrk+0x30>)
{
 80022b6:	b508      	push	{r3, lr}
 80022b8:	4603      	mov	r3, r0
	if (heap_end == 0)
 80022ba:	6810      	ldr	r0, [r2, #0]
 80022bc:	b128      	cbz	r0, 80022ca <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80022be:	4403      	add	r3, r0
 80022c0:	4669      	mov	r1, sp
 80022c2:	428b      	cmp	r3, r1
 80022c4:	d807      	bhi.n	80022d6 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 80022c6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 80022c8:	bd08      	pop	{r3, pc}
		heap_end = &end;
 80022ca:	4807      	ldr	r0, [pc, #28]	; (80022e8 <_sbrk+0x34>)
 80022cc:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80022ce:	4403      	add	r3, r0
 80022d0:	4669      	mov	r1, sp
 80022d2:	428b      	cmp	r3, r1
 80022d4:	d9f7      	bls.n	80022c6 <_sbrk+0x12>
		errno = ENOMEM;
 80022d6:	f028 fee7 	bl	802b0a8 <__errno>
 80022da:	230c      	movs	r3, #12
 80022dc:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80022de:	f04f 30ff 	mov.w	r0, #4294967295
}
 80022e2:	bd08      	pop	{r3, pc}
 80022e4:	20000774 	.word	0x20000774
 80022e8:	200139e0 	.word	0x200139e0

080022ec <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80022ec:	4770      	bx	lr
 80022ee:	bf00      	nop

080022f0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80022f0:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80022f2:	f000 fba9 	bl	8002a48 <touchgfx_components_init>
  touchgfx_init();
}
 80022f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80022fa:	f000 bb33 	b.w	8002964 <touchgfx_init>
 80022fe:	bf00      	nop

08002300 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8002300:	f000 bba4 	b.w	8002a4c <touchgfx_taskEntry>

08002304 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8002304:	4770      	bx	lr

08002306 <_ZN20STM32TouchControllerD0Ev>:
 8002306:	b510      	push	{r4, lr}
 8002308:	2104      	movs	r1, #4
 800230a:	4604      	mov	r4, r0
 800230c:	f027 fce7 	bl	8029cde <_ZdlPvj>
 8002310:	4620      	mov	r0, r4
 8002312:	bd10      	pop	{r4, pc}

08002314 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8002314:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8002316:	4b0c      	ldr	r3, [pc, #48]	; (8002348 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002318:	4c0c      	ldr	r4, [pc, #48]	; (800234c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800231a:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 800231c:	4b0c      	ldr	r3, [pc, #48]	; (8002350 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800231e:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8002320:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002322:	6863      	ldr	r3, [r4, #4]
 8002324:	4798      	blx	r3
 8002326:	f640 0311 	movw	r3, #2065	; 0x811
 800232a:	4298      	cmp	r0, r3
 800232c:	d10a      	bne.n	8002344 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800232e:	4d09      	ldr	r5, [pc, #36]	; (8002354 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8002330:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8002332:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8002334:	2082      	movs	r0, #130	; 0x82
 8002336:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8002338:	682b      	ldr	r3, [r5, #0]
 800233a:	2082      	movs	r0, #130	; 0x82
 800233c:	68db      	ldr	r3, [r3, #12]
 800233e:	4798      	blx	r3
 8002340:	2000      	movs	r0, #0
    }

    return ret;
}
 8002342:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8002344:	2001      	movs	r0, #1
 8002346:	e7fc      	b.n	8002342 <_Z11BSP_TS_Inittt+0x2e>
 8002348:	20000778 	.word	0x20000778
 800234c:	20000050 	.word	0x20000050
 8002350:	2000077a 	.word	0x2000077a
 8002354:	2000077c 	.word	0x2000077c

08002358 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8002358:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800235c:	20f0      	movs	r0, #240	; 0xf0
 800235e:	f7ff bfd9 	b.w	8002314 <_Z11BSP_TS_Inittt>
	...

08002364 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8002364:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8002366:	4d33      	ldr	r5, [pc, #204]	; (8002434 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8002368:	682b      	ldr	r3, [r5, #0]
{
 800236a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800236c:	691b      	ldr	r3, [r3, #16]
 800236e:	2082      	movs	r0, #130	; 0x82
 8002370:	4798      	blx	r3
 8002372:	b280      	uxth	r0, r0
 8002374:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8002376:	2800      	cmp	r0, #0
 8002378:	d04a      	beq.n	8002410 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800237a:	682b      	ldr	r3, [r5, #0]
 800237c:	f10d 0206 	add.w	r2, sp, #6
 8002380:	695b      	ldr	r3, [r3, #20]
 8002382:	a901      	add	r1, sp, #4
 8002384:	2082      	movs	r0, #130	; 0x82
 8002386:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8002388:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800238c:	f640 6274 	movw	r2, #3700	; 0xe74
 8002390:	4293      	cmp	r3, r2
 8002392:	d93f      	bls.n	8002414 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8002394:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8002398:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800239c:	1ad2      	subs	r2, r2, r3
 800239e:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80023a0:	2a0a      	cmp	r2, #10
 80023a2:	d93d      	bls.n	8002420 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 80023a4:	230b      	movs	r3, #11
 80023a6:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80023aa:	4b23      	ldr	r3, [pc, #140]	; (8002438 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80023ac:	881b      	ldrh	r3, [r3, #0]
 80023ae:	429a      	cmp	r2, r3
 80023b0:	d901      	bls.n	80023b6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80023b2:	3b01      	subs	r3, #1
 80023b4:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80023b6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80023ba:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80023be:	428b      	cmp	r3, r1
 80023c0:	d830      	bhi.n	8002424 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80023c2:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80023c6:	330e      	adds	r3, #14
 80023c8:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80023ca:	210f      	movs	r1, #15
 80023cc:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80023d0:	491a      	ldr	r1, [pc, #104]	; (800243c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80023d2:	8809      	ldrh	r1, [r1, #0]
 80023d4:	428b      	cmp	r3, r1
 80023d6:	d901      	bls.n	80023dc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 80023d8:	3901      	subs	r1, #1
 80023da:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80023dc:	4e18      	ldr	r6, [pc, #96]	; (8002440 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80023de:	4d19      	ldr	r5, [pc, #100]	; (8002444 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80023e0:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80023e2:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80023e4:	4283      	cmp	r3, r0
 80023e6:	b281      	uxth	r1, r0
 80023e8:	bf8c      	ite	hi
 80023ea:	1a59      	subhi	r1, r3, r1
 80023ec:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80023ee:	b2b8      	uxth	r0, r7
 80023f0:	42ba      	cmp	r2, r7
 80023f2:	bf8c      	ite	hi
 80023f4:	1a10      	subhi	r0, r2, r0
 80023f6:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80023f8:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80023fa:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80023fc:	4401      	add	r1, r0
 80023fe:	2905      	cmp	r1, #5
        {
            _x = x;
 8002400:	bfc8      	it	gt
 8002402:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8002404:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8002406:	bfc8      	it	gt
 8002408:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 800240a:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 800240c:	682b      	ldr	r3, [r5, #0]
 800240e:	80a3      	strh	r3, [r4, #4]
    }
}
 8002410:	b003      	add	sp, #12
 8002412:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8002414:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8002416:	bf9c      	itt	ls
 8002418:	23b4      	movls	r3, #180	; 0xb4
 800241a:	f8ad 3006 	strhls.w	r3, [sp, #6]
 800241e:	e7bb      	b.n	8002398 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8002420:	2200      	movs	r2, #0
 8002422:	e7c8      	b.n	80023b6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8002424:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8002428:	3308      	adds	r3, #8
 800242a:	b29b      	uxth	r3, r3
        if (xr <= 0)
 800242c:	2b0e      	cmp	r3, #14
 800242e:	d8cc      	bhi.n	80023ca <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8002430:	2300      	movs	r3, #0
 8002432:	e7d3      	b.n	80023dc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8002434:	2000077c 	.word	0x2000077c
 8002438:	2000077a 	.word	0x2000077a
 800243c:	20000778 	.word	0x20000778
 8002440:	20000780 	.word	0x20000780
 8002444:	20000784 	.word	0x20000784

08002448 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8002448:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800244a:	4668      	mov	r0, sp
{
 800244c:	460d      	mov	r5, r1
 800244e:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8002450:	f7ff ff88 	bl	8002364 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8002454:	f8bd 0000 	ldrh.w	r0, [sp]
 8002458:	b148      	cbz	r0, 800246e <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800245a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800245e:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8002460:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002464:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8002466:	4b03      	ldr	r3, [pc, #12]	; (8002474 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8002468:	223c      	movs	r2, #60	; 0x3c
 800246a:	601a      	str	r2, [r3, #0]
        return true;
 800246c:	2001      	movs	r0, #1
}
 800246e:	b003      	add	sp, #12
 8002470:	bd30      	pop	{r4, r5, pc}
 8002472:	bf00      	nop
 8002474:	2000000c 	.word	0x2000000c

08002478 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8002478:	b110      	cbz	r0, 8002480 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800247a:	2802      	cmp	r0, #2
 800247c:	d009      	beq.n	8002492 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800247e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002480:	4b07      	ldr	r3, [pc, #28]	; (80024a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002482:	681a      	ldr	r2, [r3, #0]
 8002484:	fab2 f282 	clz	r2, r2
 8002488:	0952      	lsrs	r2, r2, #5
 800248a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 800248c:	4805      	ldr	r0, [pc, #20]	; (80024a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800248e:	f007 bfb1 	b.w	800a3f4 <HAL_GPIO_WritePin>
 8002492:	4b03      	ldr	r3, [pc, #12]	; (80024a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002494:	689a      	ldr	r2, [r3, #8]
 8002496:	fab2 f282 	clz	r2, r2
 800249a:	0952      	lsrs	r2, r2, #5
 800249c:	2110      	movs	r1, #16
 800249e:	e7f5      	b.n	800248c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 80024a0:	20000788 	.word	0x20000788
 80024a4:	40021000 	.word	0x40021000

080024a8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80024a8:	b110      	cbz	r0, 80024b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 80024aa:	2802      	cmp	r0, #2
 80024ac:	d009      	beq.n	80024c2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80024ae:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80024b0:	4b07      	ldr	r3, [pc, #28]	; (80024d0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80024b2:	681a      	ldr	r2, [r3, #0]
 80024b4:	3a00      	subs	r2, #0
 80024b6:	bf18      	it	ne
 80024b8:	2201      	movne	r2, #1
 80024ba:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80024bc:	4805      	ldr	r0, [pc, #20]	; (80024d4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80024be:	f007 bf99 	b.w	800a3f4 <HAL_GPIO_WritePin>
 80024c2:	4b03      	ldr	r3, [pc, #12]	; (80024d0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80024c4:	689a      	ldr	r2, [r3, #8]
 80024c6:	3a00      	subs	r2, #0
 80024c8:	bf18      	it	ne
 80024ca:	2201      	movne	r2, #1
 80024cc:	2110      	movs	r1, #16
 80024ce:	e7f5      	b.n	80024bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 80024d0:	20000788 	.word	0x20000788
 80024d4:	40021000 	.word	0x40021000

080024d8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80024d8:	b110      	cbz	r0, 80024e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80024da:	2802      	cmp	r0, #2
 80024dc:	d004      	beq.n	80024e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80024de:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80024e0:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80024e2:	4802      	ldr	r0, [pc, #8]	; (80024ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80024e4:	f007 bf8a 	b.w	800a3fc <HAL_GPIO_TogglePin>
 80024e8:	2110      	movs	r1, #16
 80024ea:	e7fa      	b.n	80024e2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80024ec:	40021000 	.word	0x40021000

080024f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80024f0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80024f2:	b130      	cbz	r0, 8002502 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80024f4:	2802      	cmp	r0, #2
 80024f6:	d009      	beq.n	800250c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80024f8:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80024fa:	1e43      	subs	r3, r0, #1
 80024fc:	4258      	negs	r0, r3
 80024fe:	4158      	adcs	r0, r3
 8002500:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002502:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002504:	4802      	ldr	r0, [pc, #8]	; (8002510 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8002506:	f007 ff6f 	bl	800a3e8 <HAL_GPIO_ReadPin>
        break;
 800250a:	e7f6      	b.n	80024fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800250c:	2110      	movs	r1, #16
 800250e:	e7f9      	b.n	8002504 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8002510:	40021000 	.word	0x40021000

08002514 <_ZN8touchgfx4GPIO4initEv>:
{
 8002514:	b570      	push	{r4, r5, r6, lr}
 8002516:	4d08      	ldr	r5, [pc, #32]	; (8002538 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8002518:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800251a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800251c:	b2e0      	uxtb	r0, r4
 800251e:	f7ff ffe7 	bl	80024f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8002522:	b118      	cbz	r0, 800252c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8002524:	682b      	ldr	r3, [r5, #0]
 8002526:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8002528:	bf18      	it	ne
 800252a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800252c:	3401      	adds	r4, #1
 800252e:	2c05      	cmp	r4, #5
 8002530:	f105 0504 	add.w	r5, r5, #4
 8002534:	d1f2      	bne.n	800251c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8002536:	bd70      	pop	{r4, r5, r6, pc}
 8002538:	20000788 	.word	0x20000788

0800253c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800253c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800253e:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8002542:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8002546:	4770      	bx	lr

08002548 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002548:	2000      	movs	r0, #0
 800254a:	4770      	bx	lr

0800254c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800254c:	4b03      	ldr	r3, [pc, #12]	; (800255c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800254e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002550:	3900      	subs	r1, #0
 8002552:	bf18      	it	ne
 8002554:	2101      	movne	r1, #1
 8002556:	7019      	strb	r1, [r3, #0]
    }
 8002558:	4770      	bx	lr
 800255a:	bf00      	nop
 800255c:	20012da3 	.word	0x20012da3

08002560 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002560:	2000      	movs	r0, #0
 8002562:	4770      	bx	lr

08002564 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002564:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002566:	b10b      	cbz	r3, 800256c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002568:	4608      	mov	r0, r1
 800256a:	4718      	bx	r3
        }
    }
 800256c:	4770      	bx	lr

0800256e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800256e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002572:	4770      	bx	lr

08002574 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002574:	6840      	ldr	r0, [r0, #4]
 8002576:	6803      	ldr	r3, [r0, #0]
 8002578:	699b      	ldr	r3, [r3, #24]
 800257a:	4718      	bx	r3

0800257c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 800257c:	4770      	bx	lr

0800257e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800257e:	4770      	bx	lr

08002580 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002580:	4770      	bx	lr
	...

08002584 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002584:	b510      	push	{r4, lr}
 8002586:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002588:	f000 fb4c 	bl	8002c24 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 800258c:	6823      	ldr	r3, [r4, #0]
 800258e:	4903      	ldr	r1, [pc, #12]	; (800259c <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002590:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002594:	4620      	mov	r0, r4
}
 8002596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800259a:	4718      	bx	r3
 800259c:	d0000000 	.word	0xd0000000

080025a0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80025a0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80025a2:	6803      	ldr	r3, [r0, #0]
{
 80025a4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80025a6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80025aa:	4798      	blx	r3
    enableInterrupts();
 80025ac:	6823      	ldr	r3, [r4, #0]
 80025ae:	4620      	mov	r0, r4
 80025b0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80025b2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80025b4:	f000 f8ec 	bl	8002790 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80025b8:	6823      	ldr	r3, [r4, #0]
 80025ba:	4620      	mov	r0, r4
 80025bc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80025be:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80025c0:	2029      	movs	r0, #41	; 0x29
 80025c2:	f7ff f981 	bl	80018c8 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80025c6:	f000 f8e3 	bl	8002790 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80025ca:	6823      	ldr	r3, [r4, #0]
 80025cc:	4620      	mov	r0, r4
 80025ce:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80025d0:	4798      	blx	r3
    for (;;)
 80025d2:	e7f8      	b.n	80025c6 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080025d4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80025d4:	b510      	push	{r4, lr}
 80025d6:	4604      	mov	r4, r0
        swapFrameBuffers();
 80025d8:	f00f f89c 	bl	8011714 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80025dc:	6823      	ldr	r3, [r4, #0]
 80025de:	4620      	mov	r0, r4
 80025e0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80025e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80025e8:	4718      	bx	r3

080025ea <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80025ea:	f000 bb0d 	b.w	8002c08 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080025ee <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80025ee:	f000 bb11 	b.w	8002c14 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080025f2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80025f2:	f000 bb35 	b.w	8002c60 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080025f6 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80025f6:	f000 badd 	b.w	8002bb4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080025fa <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80025fa:	f000 bae3 	b.w	8002bc4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080025fe <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80025fe:	f000 bb3b 	b.w	8002c78 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08002602 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002602:	f000 bae7 	b.w	8002bd4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08002606 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8002606:	f00e baf1 	b.w	8010bec <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800260a <_ZN11TouchGFXHALD0Ev>:
 800260a:	b510      	push	{r4, lr}
 800260c:	217c      	movs	r1, #124	; 0x7c
 800260e:	4604      	mov	r4, r0
 8002610:	f027 fb65 	bl	8029cde <_ZdlPvj>
 8002614:	4620      	mov	r0, r4
 8002616:	bd10      	pop	{r4, pc}

08002618 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002618:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 800261c:	b11b      	cbz	r3, 8002626 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 800261e:	6840      	ldr	r0, [r0, #4]
 8002620:	6803      	ldr	r3, [r0, #0]
 8002622:	681b      	ldr	r3, [r3, #0]
 8002624:	4718      	bx	r3
    }
 8002626:	4618      	mov	r0, r3
 8002628:	4770      	bx	lr
	...

0800262c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800262c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800262e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8002632:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002636:	4b0c      	ldr	r3, [pc, #48]	; (8002668 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002638:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800263a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800263c:	d009      	beq.n	8002652 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800263e:	b93a      	cbnz	r2, 8002650 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002640:	4a0a      	ldr	r2, [pc, #40]	; (800266c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002642:	490b      	ldr	r1, [pc, #44]	; (8002670 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002644:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002646:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002648:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800264a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800264c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800264e:	701a      	strb	r2, [r3, #0]
    }
 8002650:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002652:	2a00      	cmp	r2, #0
 8002654:	d0fc      	beq.n	8002650 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002656:	4a05      	ldr	r2, [pc, #20]	; (800266c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002658:	4905      	ldr	r1, [pc, #20]	; (8002670 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800265a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800265c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800265e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002660:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002662:	2200      	movs	r2, #0
 8002664:	e7f3      	b.n	800264e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002666:	bf00      	nop
 8002668:	20012d9c 	.word	0x20012d9c
 800266c:	20012d98 	.word	0x20012d98
 8002670:	20012d9a 	.word	0x20012d9a

08002674 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002674:	b570      	push	{r4, r5, r6, lr}
 8002676:	460d      	mov	r5, r1
 8002678:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800267a:	b935      	cbnz	r5, 800268a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800267c:	4b09      	ldr	r3, [pc, #36]	; (80026a4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800267e:	4a0a      	ldr	r2, [pc, #40]	; (80026a8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002680:	480a      	ldr	r0, [pc, #40]	; (80026ac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002682:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002686:	f028 fa11 	bl	802aaac <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800268a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800268e:	4b08      	ldr	r3, [pc, #32]	; (80026b0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002690:	3a00      	subs	r2, #0
 8002692:	bf18      	it	ne
 8002694:	2201      	movne	r2, #1
 8002696:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002698:	6803      	ldr	r3, [r0, #0]
    }
 800269a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800269e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80026a2:	4718      	bx	r3
 80026a4:	0802bcf8 	.word	0x0802bcf8
 80026a8:	0802bd30 	.word	0x0802bd30
 80026ac:	0802bd7e 	.word	0x0802bd7e
 80026b0:	20012da2 	.word	0x20012da2

080026b4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80026b4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80026b6:	4b09      	ldr	r3, [pc, #36]	; (80026dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80026b8:	881b      	ldrh	r3, [r3, #0]
 80026ba:	428b      	cmp	r3, r1
 80026bc:	d803      	bhi.n	80026c6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80026be:	4b08      	ldr	r3, [pc, #32]	; (80026e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80026c0:	881b      	ldrh	r3, [r3, #0]
 80026c2:	4293      	cmp	r3, r2
 80026c4:	d905      	bls.n	80026d2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80026c6:	4b07      	ldr	r3, [pc, #28]	; (80026e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80026c8:	4a07      	ldr	r2, [pc, #28]	; (80026e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80026ca:	4808      	ldr	r0, [pc, #32]	; (80026ec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80026cc:	219e      	movs	r1, #158	; 0x9e
 80026ce:	f028 f9ed 	bl	802aaac <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80026d2:	4b07      	ldr	r3, [pc, #28]	; (80026f0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80026d4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80026d6:	4b07      	ldr	r3, [pc, #28]	; (80026f4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80026d8:	801a      	strh	r2, [r3, #0]
    }
 80026da:	bd08      	pop	{r3, pc}
 80026dc:	20012d98 	.word	0x20012d98
 80026e0:	20012d9a 	.word	0x20012d9a
 80026e4:	0802bdc3 	.word	0x0802bdc3
 80026e8:	0802be26 	.word	0x0802be26
 80026ec:	0802bd7e 	.word	0x0802bd7e
 80026f0:	20012d9e 	.word	0x20012d9e
 80026f4:	20012da0 	.word	0x20012da0

080026f8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80026f8:	2101      	movs	r1, #1
{
 80026fa:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80026fc:	2200      	movs	r2, #0
 80026fe:	4608      	mov	r0, r1
 8002700:	f00b f880 	bl	800d804 <osSemaphoreNew>
 8002704:	4b0a      	ldr	r3, [pc, #40]	; (8002730 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002706:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002708:	b928      	cbnz	r0, 8002716 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800270a:	4b0a      	ldr	r3, [pc, #40]	; (8002734 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800270c:	4a0a      	ldr	r2, [pc, #40]	; (8002738 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800270e:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002710:	480a      	ldr	r0, [pc, #40]	; (800273c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002712:	f028 f9cb 	bl	802aaac <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002716:	2200      	movs	r2, #0
 8002718:	2104      	movs	r1, #4
 800271a:	2001      	movs	r0, #1
 800271c:	f00b f926 	bl	800d96c <osMessageQueueNew>
 8002720:	4b07      	ldr	r3, [pc, #28]	; (8002740 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002722:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002724:	b918      	cbnz	r0, 800272e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002726:	4b07      	ldr	r3, [pc, #28]	; (8002744 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002728:	4a03      	ldr	r2, [pc, #12]	; (8002738 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800272a:	212c      	movs	r1, #44	; 0x2c
 800272c:	e7f0      	b.n	8002710 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800272e:	bd08      	pop	{r3, pc}
 8002730:	2000079c 	.word	0x2000079c
 8002734:	0802bf44 	.word	0x0802bf44
 8002738:	0802bf8d 	.word	0x0802bf8d
 800273c:	0802bfbc 	.word	0x0802bfbc
 8002740:	20000798 	.word	0x20000798
 8002744:	0802c04c 	.word	0x0802c04c

08002748 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002748:	4b02      	ldr	r3, [pc, #8]	; (8002754 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800274a:	f04f 31ff 	mov.w	r1, #4294967295
 800274e:	6818      	ldr	r0, [r3, #0]
 8002750:	f00b b8ac 	b.w	800d8ac <osSemaphoreAcquire>
 8002754:	2000079c 	.word	0x2000079c

08002758 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002758:	4b01      	ldr	r3, [pc, #4]	; (8002760 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800275a:	6818      	ldr	r0, [r3, #0]
 800275c:	f00b b8da 	b.w	800d914 <osSemaphoreRelease>
 8002760:	2000079c 	.word	0x2000079c

08002764 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002764:	4b02      	ldr	r3, [pc, #8]	; (8002770 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002766:	2100      	movs	r1, #0
 8002768:	6818      	ldr	r0, [r3, #0]
 800276a:	f00b b89f 	b.w	800d8ac <osSemaphoreAcquire>
 800276e:	bf00      	nop
 8002770:	2000079c 	.word	0x2000079c

08002774 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002774:	f7ff bff0 	b.w	8002758 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002778 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002778:	4803      	ldr	r0, [pc, #12]	; (8002788 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800277a:	4904      	ldr	r1, [pc, #16]	; (800278c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800277c:	6800      	ldr	r0, [r0, #0]
 800277e:	2300      	movs	r3, #0
 8002780:	461a      	mov	r2, r3
 8002782:	f00b b92d 	b.w	800d9e0 <osMessageQueuePut>
 8002786:	bf00      	nop
 8002788:	20000798 	.word	0x20000798
 800278c:	20000010 	.word	0x20000010

08002790 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002790:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002792:	4c08      	ldr	r4, [pc, #32]	; (80027b4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002794:	2300      	movs	r3, #0
 8002796:	461a      	mov	r2, r3
 8002798:	a901      	add	r1, sp, #4
 800279a:	6820      	ldr	r0, [r4, #0]
 800279c:	f00b f956 	bl	800da4c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80027a0:	6820      	ldr	r0, [r4, #0]
 80027a2:	f04f 33ff 	mov.w	r3, #4294967295
 80027a6:	2200      	movs	r2, #0
 80027a8:	a901      	add	r1, sp, #4
 80027aa:	f00b f94f 	bl	800da4c <osMessageQueueGet>
}
 80027ae:	b002      	add	sp, #8
 80027b0:	bd10      	pop	{r4, pc}
 80027b2:	bf00      	nop
 80027b4:	20000798 	.word	0x20000798

080027b8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80027b8:	4770      	bx	lr

080027ba <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80027ba:	2000      	movs	r0, #0
 80027bc:	4770      	bx	lr

080027be <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80027be:	4770      	bx	lr

080027c0 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80027c0:	4770      	bx	lr

080027c2 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80027c2:	2000      	movs	r0, #0
 80027c4:	4770      	bx	lr

080027c6 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80027c6:	4770      	bx	lr

080027c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80027c8:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80027ca:	4a03      	ldr	r2, [pc, #12]	; (80027d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80027cc:	4b03      	ldr	r3, [pc, #12]	; (80027dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80027ce:	4804      	ldr	r0, [pc, #16]	; (80027e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80027d0:	2122      	movs	r1, #34	; 0x22
 80027d2:	f028 f96b 	bl	802aaac <__assert_func>
 80027d6:	bf00      	nop
 80027d8:	0802c0b1 	.word	0x0802c0b1
 80027dc:	0802c08e 	.word	0x0802c08e
 80027e0:	0802c0ef 	.word	0x0802c0ef

080027e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80027e4:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80027e6:	4a03      	ldr	r2, [pc, #12]	; (80027f4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 80027e8:	4b03      	ldr	r3, [pc, #12]	; (80027f8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 80027ea:	4804      	ldr	r0, [pc, #16]	; (80027fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80027ec:	2127      	movs	r1, #39	; 0x27
 80027ee:	f028 f95d 	bl	802aaac <__assert_func>
 80027f2:	bf00      	nop
 80027f4:	0802c17d 	.word	0x0802c17d
 80027f8:	0802c08e 	.word	0x0802c08e
 80027fc:	0802c0ef 	.word	0x0802c0ef

08002800 <_ZN8STM32DMAD0Ev>:
 8002800:	b510      	push	{r4, lr}
 8002802:	2144      	movs	r1, #68	; 0x44
 8002804:	4604      	mov	r4, r0
 8002806:	f027 fa6a 	bl	8029cde <_ZdlPvj>
 800280a:	4620      	mov	r0, r4
 800280c:	bd10      	pop	{r4, pc}
	...

08002810 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002810:	b538      	push	{r3, r4, r5, lr}
 8002812:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002814:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002816:	2500      	movs	r5, #0
 8002818:	4b06      	ldr	r3, [pc, #24]	; (8002834 <_ZN8STM32DMAC1Ev+0x24>)
 800281a:	7225      	strb	r5, [r4, #8]
 800281c:	300c      	adds	r0, #12
 800281e:	6060      	str	r0, [r4, #4]
 8002820:	7265      	strb	r5, [r4, #9]
 8002822:	2201      	movs	r2, #1
 8002824:	f841 3b20 	str.w	r3, [r1], #32
 8002828:	f00f f8cc 	bl	80119c4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800282c:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 800282e:	4620      	mov	r0, r4
 8002830:	bd38      	pop	{r3, r4, r5, pc}
 8002832:	bf00      	nop
 8002834:	0802c1c4 	.word	0x0802c1c4

08002838 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002838:	2001      	movs	r0, #1
 800283a:	4770      	bx	lr

0800283c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 800283c:	2038      	movs	r0, #56	; 0x38
 800283e:	4770      	bx	lr

08002840 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002840:	2338      	movs	r3, #56	; 0x38
 8002842:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002846:	3008      	adds	r0, #8
 8002848:	4770      	bx	lr

0800284a <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 800284a:	2338      	movs	r3, #56	; 0x38
 800284c:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002850:	3008      	adds	r0, #8
 8002852:	4770      	bx	lr

08002854 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002854:	2001      	movs	r0, #1
 8002856:	4770      	bx	lr

08002858 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002858:	f241 30f8 	movw	r0, #5112	; 0x13f8
 800285c:	4770      	bx	lr

0800285e <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800285e:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8002862:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002866:	3008      	adds	r0, #8
 8002868:	4770      	bx	lr

0800286a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800286a:	f241 33f8 	movw	r3, #5112	; 0x13f8
 800286e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002872:	3008      	adds	r0, #8
 8002874:	4770      	bx	lr

08002876 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002876:	2001      	movs	r0, #1
 8002878:	4770      	bx	lr

0800287a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800287a:	2010      	movs	r0, #16
 800287c:	4770      	bx	lr

0800287e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800287e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002882:	3008      	adds	r0, #8
 8002884:	4770      	bx	lr

08002886 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002886:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800288a:	3008      	adds	r0, #8
 800288c:	4770      	bx	lr

0800288e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 800288e:	4608      	mov	r0, r1
 8002890:	f001 bfa4 	b.w	80047dc <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002894 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002894:	b510      	push	{r4, lr}
 8002896:	4b03      	ldr	r3, [pc, #12]	; (80028a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002898:	6003      	str	r3, [r0, #0]
 800289a:	4604      	mov	r4, r0
 800289c:	f00d fd2f 	bl	80102fe <_ZN8touchgfx17AbstractPartitionD1Ev>
 80028a0:	4620      	mov	r0, r4
 80028a2:	bd10      	pop	{r4, pc}
 80028a4:	0802c27c 	.word	0x0802c27c

080028a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80028a8:	b510      	push	{r4, lr}
 80028aa:	4604      	mov	r4, r0
 80028ac:	f7ff fff2 	bl	8002894 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80028b0:	4620      	mov	r0, r4
 80028b2:	2140      	movs	r1, #64	; 0x40
 80028b4:	f027 fa13 	bl	8029cde <_ZdlPvj>
 80028b8:	4620      	mov	r0, r4
 80028ba:	bd10      	pop	{r4, pc}

080028bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80028bc:	b510      	push	{r4, lr}
 80028be:	4b03      	ldr	r3, [pc, #12]	; (80028cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80028c0:	6003      	str	r3, [r0, #0]
 80028c2:	4604      	mov	r4, r0
 80028c4:	f00d fd1b 	bl	80102fe <_ZN8touchgfx17AbstractPartitionD1Ev>
 80028c8:	4620      	mov	r0, r4
 80028ca:	bd10      	pop	{r4, pc}
 80028cc:	0802c248 	.word	0x0802c248

080028d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80028d0:	b510      	push	{r4, lr}
 80028d2:	4604      	mov	r4, r0
 80028d4:	f7ff fff2 	bl	80028bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80028d8:	4620      	mov	r0, r4
 80028da:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80028de:	f027 f9fe 	bl	8029cde <_ZdlPvj>
 80028e2:	4620      	mov	r0, r4
 80028e4:	bd10      	pop	{r4, pc}
	...

080028e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80028e8:	b510      	push	{r4, lr}
 80028ea:	4b03      	ldr	r3, [pc, #12]	; (80028f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80028ec:	6003      	str	r3, [r0, #0]
 80028ee:	4604      	mov	r4, r0
 80028f0:	f00d fd05 	bl	80102fe <_ZN8touchgfx17AbstractPartitionD1Ev>
 80028f4:	4620      	mov	r0, r4
 80028f6:	bd10      	pop	{r4, pc}
 80028f8:	0802c214 	.word	0x0802c214

080028fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80028fc:	b510      	push	{r4, lr}
 80028fe:	4604      	mov	r4, r0
 8002900:	f7ff fff2 	bl	80028e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002904:	4620      	mov	r0, r4
 8002906:	2118      	movs	r1, #24
 8002908:	f027 f9e9 	bl	8029cde <_ZdlPvj>
 800290c:	4620      	mov	r0, r4
 800290e:	bd10      	pop	{r4, pc}

08002910 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002910:	b510      	push	{r4, lr}
 8002912:	4b09      	ldr	r3, [pc, #36]	; (8002938 <_ZN12FrontendHeapD1Ev+0x28>)
 8002914:	6003      	str	r3, [r0, #0]
 8002916:	4604      	mov	r4, r0
 8002918:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 800291c:	300c      	adds	r0, #12
 800291e:	f7ff ffb9 	bl	8002894 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002922:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002926:	f7ff ffc9 	bl	80028bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800292a:	f104 0014 	add.w	r0, r4, #20
 800292e:	f7ff ffdb 	bl	80028e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002932:	4620      	mov	r0, r4
 8002934:	bd10      	pop	{r4, pc}
 8002936:	bf00      	nop
 8002938:	0802c2b0 	.word	0x0802c2b0

0800293c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800293c:	b508      	push	{r3, lr}
 800293e:	4802      	ldr	r0, [pc, #8]	; (8002948 <__tcf_0+0xc>)
 8002940:	f7ff ffe6 	bl	8002910 <_ZN12FrontendHeapD1Ev>
 8002944:	bd08      	pop	{r3, pc}
 8002946:	bf00      	nop
 8002948:	200007a4 	.word	0x200007a4

0800294c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800294c:	b510      	push	{r4, lr}
 800294e:	4604      	mov	r4, r0
 8002950:	f7ff ffde 	bl	8002910 <_ZN12FrontendHeapD1Ev>
 8002954:	4620      	mov	r0, r4
 8002956:	f241 51d0 	movw	r1, #5584	; 0x15d0
 800295a:	f027 f9c0 	bl	8029cde <_ZdlPvj>
 800295e:	4620      	mov	r0, r4
 8002960:	bd10      	pop	{r4, pc}
	...

08002964 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002964:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002968:	f000 fa5a 	bl	8002e20 <_ZN14BitmapDatabase11getInstanceEv>
 800296c:	4605      	mov	r5, r0
 800296e:	f000 fa5b 	bl	8002e28 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002972:	2400      	movs	r4, #0
 8002974:	4601      	mov	r1, r0
 8002976:	4623      	mov	r3, r4
 8002978:	4628      	mov	r0, r5
 800297a:	4622      	mov	r2, r4
 800297c:	9400      	str	r4, [sp, #0]
 800297e:	f016 fd35 	bl	80193ec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002982:	4b26      	ldr	r3, [pc, #152]	; (8002a1c <touchgfx_init+0xb8>)
 8002984:	4a26      	ldr	r2, [pc, #152]	; (8002a20 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002986:	4d27      	ldr	r5, [pc, #156]	; (8002a24 <touchgfx_init+0xc0>)
 8002988:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800298a:	4620      	mov	r0, r4
 800298c:	f006 fb06 	bl	8008f9c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002990:	4825      	ldr	r0, [pc, #148]	; (8002a28 <touchgfx_init+0xc4>)
 8002992:	f016 fc93 	bl	80192bc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002996:	682b      	ldr	r3, [r5, #0]
 8002998:	f3bf 8f5b 	dmb	ish
 800299c:	07db      	lsls	r3, r3, #31
 800299e:	d437      	bmi.n	8002a10 <touchgfx_init+0xac>
 80029a0:	4628      	mov	r0, r5
 80029a2:	f027 f99e 	bl	8029ce2 <__cxa_guard_acquire>
 80029a6:	b398      	cbz	r0, 8002a10 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80029a8:	4c20      	ldr	r4, [pc, #128]	; (8002a2c <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80029aa:	4b21      	ldr	r3, [pc, #132]	; (8002a30 <touchgfx_init+0xcc>)
 80029ac:	6023      	str	r3, [r4, #0]
 80029ae:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80029b2:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 80029b6:	f500 56a3 	add.w	r6, r0, #5216	; 0x1460
          transitionStorage(tra),
 80029ba:	f508 57a0 	add.w	r7, r8, #5120	; 0x1400
        : presenterStorage(pres),
 80029be:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80029c0:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80029c4:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80029c6:	6126      	str	r6, [r4, #16]
 80029c8:	f00d fc9a 	bl	8010300 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80029cc:	4b19      	ldr	r3, [pc, #100]	; (8002a34 <touchgfx_init+0xd0>)
 80029ce:	6163      	str	r3, [r4, #20]
 80029d0:	4640      	mov	r0, r8
 80029d2:	f00d fc95 	bl	8010300 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80029d6:	4b18      	ldr	r3, [pc, #96]	; (8002a38 <touchgfx_init+0xd4>)
 80029d8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80029da:	4638      	mov	r0, r7
 80029dc:	f00d fc90 	bl	8010300 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80029e0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80029e4:	4a15      	ldr	r2, [pc, #84]	; (8002a3c <touchgfx_init+0xd8>)
 80029e6:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
 80029ea:	f203 406c 	addw	r0, r3, #1132	; 0x46c
 80029ee:	f006 ffa9 	bl	8009944 <_ZN5ModelC1Ev>
 80029f2:	4622      	mov	r2, r4
 80029f4:	f1a6 0108 	sub.w	r1, r6, #8
 80029f8:	4630      	mov	r0, r6
 80029fa:	f006 fc99 	bl	8009330 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80029fe:	4630      	mov	r0, r6
 8002a00:	f001 feec 	bl	80047dc <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002a04:	480e      	ldr	r0, [pc, #56]	; (8002a40 <touchgfx_init+0xdc>)
 8002a06:	f028 f86f 	bl	802aae8 <atexit>
 8002a0a:	4628      	mov	r0, r5
 8002a0c:	f027 f975 	bl	8029cfa <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002a10:	480c      	ldr	r0, [pc, #48]	; (8002a44 <touchgfx_init+0xe0>)
}
 8002a12:	b002      	add	sp, #8
 8002a14:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002a18:	f7ff bdb4 	b.w	8002584 <_ZN11TouchGFXHAL10initializeEv>
 8002a1c:	20012e08 	.word	0x20012e08
 8002a20:	20001e38 	.word	0x20001e38
 8002a24:	200007a0 	.word	0x200007a0
 8002a28:	20000014 	.word	0x20000014
 8002a2c:	200007a4 	.word	0x200007a4
 8002a30:	0802c2b0 	.word	0x0802c2b0
 8002a34:	0802c214 	.word	0x0802c214
 8002a38:	0802c248 	.word	0x0802c248
 8002a3c:	0802c27c 	.word	0x0802c27c
 8002a40:	0800293d 	.word	0x0800293d
 8002a44:	20001dbc 	.word	0x20001dbc

08002a48 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002a48:	4770      	bx	lr
	...

08002a4c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002a4c:	4801      	ldr	r0, [pc, #4]	; (8002a54 <touchgfx_taskEntry+0x8>)
 8002a4e:	f7ff bda7 	b.w	80025a0 <_ZN11TouchGFXHAL9taskEntryEv>
 8002a52:	bf00      	nop
 8002a54:	20001dbc 	.word	0x20001dbc

08002a58 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002a58:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8002a5a:	4e22      	ldr	r6, [pc, #136]	; (8002ae4 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002a5c:	4c22      	ldr	r4, [pc, #136]	; (8002ae8 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002a5e:	4d23      	ldr	r5, [pc, #140]	; (8002aec <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002a60:	4b23      	ldr	r3, [pc, #140]	; (8002af0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002a62:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002a64:	4630      	mov	r0, r6
 8002a66:	f7ff fed3 	bl	8002810 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002a6a:	4628      	mov	r0, r5
 8002a6c:	f01a ff8a 	bl	801d984 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002a70:	4b20      	ldr	r3, [pc, #128]	; (8002af4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002a72:	4821      	ldr	r0, [pc, #132]	; (8002af8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002a74:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002a76:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002a78:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8002a7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002a80:	491e      	ldr	r1, [pc, #120]	; (8002afc <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002a82:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002a84:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002a88:	491d      	ldr	r1, [pc, #116]	; (8002b00 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8002a8a:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8002a8c:	491d      	ldr	r1, [pc, #116]	; (8002b04 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8002a8e:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8002a92:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002a94:	21f0      	movs	r1, #240	; 0xf0
 8002a96:	8001      	strh	r1, [r0, #0]
 8002a98:	481b      	ldr	r0, [pc, #108]	; (8002b08 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8002a9a:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002a9c:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002a9e:	481b      	ldr	r0, [pc, #108]	; (8002b0c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8002aa0:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002aa4:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8002aa8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8002aac:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8002ab0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8002ab4:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8002ab8:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8002abc:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8002ac0:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8002ac4:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8002ac8:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8002aca:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002ace:	8001      	strh	r1, [r0, #0]
 8002ad0:	480f      	ldr	r0, [pc, #60]	; (8002b10 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8002ad2:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8002ad4:	490f      	ldr	r1, [pc, #60]	; (8002b14 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8002ad6:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002ad8:	2201      	movs	r2, #1
 8002ada:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002ade:	4a0e      	ldr	r2, [pc, #56]	; (8002b18 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8002ae0:	601a      	str	r2, [r3, #0]
}
 8002ae2:	bd70      	pop	{r4, r5, r6, pc}
 8002ae4:	20001d78 	.word	0x20001d78
 8002ae8:	20001d74 	.word	0x20001d74
 8002aec:	20001e3c 	.word	0x20001e3c
 8002af0:	0802bce8 	.word	0x0802bce8
 8002af4:	20001dbc 	.word	0x20001dbc
 8002af8:	20012d98 	.word	0x20012d98
 8002afc:	01000001 	.word	0x01000001
 8002b00:	01010000 	.word	0x01010000
 8002b04:	20012da4 	.word	0x20012da4
 8002b08:	20012d9e 	.word	0x20012d9e
 8002b0c:	20012d9a 	.word	0x20012d9a
 8002b10:	20012da0 	.word	0x20012da0
 8002b14:	20012d9c 	.word	0x20012d9c
 8002b18:	0802be74 	.word	0x0802be74

08002b1c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002b1c:	2000      	movs	r0, #0
 8002b1e:	4770      	bx	lr

08002b20 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002b20:	8081      	strh	r1, [r0, #4]
    }
 8002b22:	4770      	bx	lr

08002b24 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002b24:	80c1      	strh	r1, [r0, #6]
    }
 8002b26:	4770      	bx	lr

08002b28 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002b28:	8101      	strh	r1, [r0, #8]
    }
 8002b2a:	4770      	bx	lr

08002b2c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002b2c:	8141      	strh	r1, [r0, #10]
    }
 8002b2e:	4770      	bx	lr

08002b30 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002b30:	4770      	bx	lr

08002b32 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002b32:	4770      	bx	lr

08002b34 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002b34:	4770      	bx	lr

08002b36 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002b36:	4770      	bx	lr

08002b38 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002b38:	4770      	bx	lr

08002b3a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002b3a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002b3c:	88c4      	ldrh	r4, [r0, #6]
 8002b3e:	6803      	ldr	r3, [r0, #0]
 8002b40:	1b12      	subs	r2, r2, r4
 8002b42:	8884      	ldrh	r4, [r0, #4]
 8002b44:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002b46:	1b09      	subs	r1, r1, r4
 8002b48:	b212      	sxth	r2, r2
    }
 8002b4a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002b4e:	b209      	sxth	r1, r1
 8002b50:	4718      	bx	r3

08002b52 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002b52:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b56:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002b58:	f04f 33ff 	mov.w	r3, #4294967295
 8002b5c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002b5e:	6813      	ldr	r3, [r2, #0]
 8002b60:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002b62:	6010      	str	r0, [r2, #0]
    }
 8002b64:	4770      	bx	lr

08002b66 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002b66:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002b6a:	b11a      	cbz	r2, 8002b74 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002b6c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002b70:	b102      	cbz	r2, 8002b74 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002b72:	6018      	str	r0, [r3, #0]
        }
    }
 8002b74:	4770      	bx	lr

08002b76 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002b76:	2000      	movs	r0, #0
 8002b78:	4770      	bx	lr

08002b7a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002b7a:	888b      	ldrh	r3, [r1, #4]
 8002b7c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002b7e:	2001      	movs	r0, #1
 8002b80:	4770      	bx	lr

08002b82 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002b82:	4770      	bx	lr

08002b84 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b84:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8002b88:	4770      	bx	lr

08002b8a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002b8a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8002b8e:	4770      	bx	lr

08002b90 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002b90:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002b92:	2200      	movs	r2, #0
        return rect.width;
 8002b94:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002b98:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002b9c:	8002      	strh	r2, [r0, #0]
 8002b9e:	8042      	strh	r2, [r0, #2]
 8002ba0:	8084      	strh	r4, [r0, #4]
 8002ba2:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002ba4:	bd10      	pop	{r4, pc}

08002ba6 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002ba6:	2200      	movs	r2, #0
 8002ba8:	8002      	strh	r2, [r0, #0]
 8002baa:	8042      	strh	r2, [r0, #2]
 8002bac:	8082      	strh	r2, [r0, #4]
 8002bae:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002bb0:	4770      	bx	lr
	...

08002bb4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002bb4:	4b02      	ldr	r3, [pc, #8]	; (8002bc0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8002bb6:	2290      	movs	r2, #144	; 0x90
 8002bb8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8002bbc:	4770      	bx	lr
 8002bbe:	bf00      	nop
 8002bc0:	e000e100 	.word	0xe000e100

08002bc4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002bc4:	4b02      	ldr	r3, [pc, #8]	; (8002bd0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8002bc6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002bca:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8002bcc:	4770      	bx	lr
 8002bce:	bf00      	nop
 8002bd0:	e000e100 	.word	0xe000e100

08002bd4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002bd4:	4a09      	ldr	r2, [pc, #36]	; (8002bfc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8002bd6:	490a      	ldr	r1, [pc, #40]	; (8002c00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002bd8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002bda:	480a      	ldr	r0, [pc, #40]	; (8002c04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002bdc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002be0:	3b01      	subs	r3, #1
 8002be2:	b29b      	uxth	r3, r3
 8002be4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002be6:	6911      	ldr	r1, [r2, #16]
 8002be8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002bec:	3901      	subs	r1, #1
 8002bee:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002bf0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002bf2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002bf4:	f043 0301 	orr.w	r3, r3, #1
 8002bf8:	6353      	str	r3, [r2, #52]	; 0x34
}
 8002bfa:	4770      	bx	lr
 8002bfc:	40016800 	.word	0x40016800
 8002c00:	20001ec2 	.word	0x20001ec2
 8002c04:	20001ec0 	.word	0x20001ec0

08002c08 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002c08:	4b01      	ldr	r3, [pc, #4]	; (8002c10 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8002c0a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002c0e:	4770      	bx	lr
 8002c10:	40016800 	.word	0x40016800

08002c14 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002c14:	4b02      	ldr	r3, [pc, #8]	; (8002c20 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002c16:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002c18:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002c1c:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002c1e:	4770      	bx	lr
 8002c20:	40016800 	.word	0x40016800

08002c24 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002c24:	b570      	push	{r4, r5, r6, lr}
 8002c26:	4604      	mov	r4, r0
    HAL::initialize();
 8002c28:	f00e f835 	bl	8010c96 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002c2c:	6823      	ldr	r3, [r4, #0]
 8002c2e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002c30:	f012 ffde 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
 8002c34:	4601      	mov	r1, r0
 8002c36:	4620      	mov	r0, r4
 8002c38:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002c3a:	6823      	ldr	r3, [r4, #0]
 8002c3c:	4a05      	ldr	r2, [pc, #20]	; (8002c54 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002c3e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002c42:	4620      	mov	r0, r4
 8002c44:	46ac      	mov	ip, r5
 8002c46:	2300      	movs	r3, #0
}
 8002c48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002c4c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002c50:	4760      	bx	ip
 8002c52:	bf00      	nop
 8002c54:	d004b000 	.word	0xd004b000

08002c58 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002c58:	f00e b804 	b.w	8010c64 <_ZN8touchgfx3HAL10beginFrameEv>

08002c5c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002c5c:	f00e b80e 	b.w	8010c7c <_ZN8touchgfx3HAL8endFrameEv>

08002c60 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002c60:	f00d bfca 	b.w	8010bf8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002c64 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002c64:	f00e b92b 	b.w	8010ebe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002c68 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002c68:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002c6c:	b112      	cbz	r2, 8002c74 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002c6e:	6803      	ldr	r3, [r0, #0]
 8002c70:	695b      	ldr	r3, [r3, #20]
 8002c72:	4718      	bx	r3
    }
 8002c74:	4770      	bx	lr
	...

08002c78 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c78:	4b04      	ldr	r3, [pc, #16]	; (8002c8c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8002c7a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002c7e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002c82:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002c86:	f3bf 8f6f 	isb	sy
}
 8002c8a:	4770      	bx	lr
 8002c8c:	e000e100 	.word	0xe000e100

08002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002c90:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002c92:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002c94:	4e12      	ldr	r6, [pc, #72]	; (8002ce0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8002c96:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002c98:	4b12      	ldr	r3, [pc, #72]	; (8002ce4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8002c9a:	6003      	str	r3, [r0, #0]
 8002c9c:	6833      	ldr	r3, [r6, #0]
 8002c9e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8002ca2:	4605      	mov	r5, r0
 8002ca4:	b10a      	cbz	r2, 8002caa <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8002ca6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002ca8:	b900      	cbnz	r0, 8002cac <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8002caa:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002cac:	6803      	ldr	r3, [r0, #0]
 8002cae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cb0:	4798      	blx	r3
        return auxiliaryLCD;
 8002cb2:	6833      	ldr	r3, [r6, #0]
 8002cb4:	fab0 f480 	clz	r4, r0
 8002cb8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002cba:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002cbc:	b130      	cbz	r0, 8002ccc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8002cbe:	6803      	ldr	r3, [r0, #0]
 8002cc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cc2:	4798      	blx	r3
 8002cc4:	2800      	cmp	r0, #0
 8002cc6:	bf08      	it	eq
 8002cc8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8002ccc:	b92c      	cbnz	r4, 8002cda <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8002cce:	4b06      	ldr	r3, [pc, #24]	; (8002ce8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002cd0:	4a06      	ldr	r2, [pc, #24]	; (8002cec <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8002cd2:	4807      	ldr	r0, [pc, #28]	; (8002cf0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8002cd4:	212c      	movs	r1, #44	; 0x2c
 8002cd6:	f027 fee9 	bl	802aaac <__assert_func>
    }
 8002cda:	4628      	mov	r0, r5
 8002cdc:	bd70      	pop	{r4, r5, r6, pc}
 8002cde:	bf00      	nop
 8002ce0:	20012da4 	.word	0x20012da4
 8002ce4:	0802c3c0 	.word	0x0802c3c0
 8002ce8:	0802c2bc 	.word	0x0802c2bc
 8002cec:	0802c31a 	.word	0x0802c31a
 8002cf0:	0802c353 	.word	0x0802c353

08002cf4 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8002cf4:	4770      	bx	lr
	...

08002cf8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8002cf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8002cfc:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 8002cfe:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8002d02:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8002d06:	d105      	bne.n	8002d14 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8002d08:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8002d0c:	4281      	cmp	r1, r0
 8002d0e:	d8fb      	bhi.n	8002d08 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002d10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002d14:	4f17      	ldr	r7, [pc, #92]	; (8002d74 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002d16:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002d1a:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002d1e:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002d22:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002d26:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002d28:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 8002d2a:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002d2c:	b2db      	uxtb	r3, r3
 8002d2e:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002d30:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002d34:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002d38:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002d3c:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002d40:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002d44:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002d48:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002d4c:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002d50:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002d52:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002d56:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002d5a:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002d5e:	fbbe fef5 	udiv	lr, lr, r5
 8002d62:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002d66:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002d6a:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002d6e:	4281      	cmp	r1, r0
 8002d70:	d8de      	bhi.n	8002d30 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002d72:	e7cd      	b.n	8002d10 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002d74:	fffff800 	.word	0xfffff800

08002d78 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002d78:	b510      	push	{r4, lr}
        return instance;
 8002d7a:	4c14      	ldr	r4, [pc, #80]	; (8002dcc <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002d7c:	6823      	ldr	r3, [r4, #0]
 8002d7e:	b323      	cbz	r3, 8002dca <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002d80:	4b13      	ldr	r3, [pc, #76]	; (8002dd0 <HAL_LTDC_LineEventCallback+0x58>)
 8002d82:	4a14      	ldr	r2, [pc, #80]	; (8002dd4 <HAL_LTDC_LineEventCallback+0x5c>)
 8002d84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d86:	8811      	ldrh	r1, [r2, #0]
 8002d88:	428b      	cmp	r3, r1
 8002d8a:	d113      	bne.n	8002db4 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002d8c:	4b12      	ldr	r3, [pc, #72]	; (8002dd8 <HAL_LTDC_LineEventCallback+0x60>)
 8002d8e:	8819      	ldrh	r1, [r3, #0]
 8002d90:	f009 f94c 	bl	800c02c <HAL_LTDC_ProgramLineEvent>
 8002d94:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002d96:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8002d9a:	3301      	adds	r3, #1
 8002d9c:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002da0:	f7ff fcea 	bl	8002778 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002da4:	6820      	ldr	r0, [r4, #0]
 8002da6:	f00e fcb5 	bl	8011714 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002daa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002dae:	2000      	movs	r0, #0
 8002db0:	f7ff bb62 	b.w	8002478 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002db4:	f009 f93a 	bl	800c02c <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002db8:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002dba:	6803      	ldr	r3, [r0, #0]
 8002dbc:	6a1b      	ldr	r3, [r3, #32]
 8002dbe:	4798      	blx	r3
    }
 8002dc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002dc4:	2000      	movs	r0, #0
 8002dc6:	f7ff bb6f 	b.w	80024a8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002dca:	bd10      	pop	{r4, pc}
 8002dcc:	20012da4 	.word	0x20012da4
 8002dd0:	40016800 	.word	0x40016800
 8002dd4:	20001ec2 	.word	0x20001ec2
 8002dd8:	20001ec0 	.word	0x20001ec0

08002ddc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002ddc:	4770      	bx	lr

08002dde <_ZN23ApplicationFontProviderD0Ev>:
 8002dde:	b510      	push	{r4, lr}
 8002de0:	2104      	movs	r1, #4
 8002de2:	4604      	mov	r4, r0
 8002de4:	f026 ff7b 	bl	8029cde <_ZdlPvj>
 8002de8:	4620      	mov	r0, r4
 8002dea:	bd10      	pop	{r4, pc}

08002dec <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002dec:	b508      	push	{r3, lr}
    switch (typography)
 8002dee:	2903      	cmp	r1, #3
 8002df0:	d813      	bhi.n	8002e1a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002df2:	e8df f001 	tbb	[pc, r1]
 8002df6:	0602      	.short	0x0602
 8002df8:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002dfa:	f006 f91b 	bl	8009034 <_ZN17TypedTextDatabase8getFontsEv>
 8002dfe:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002e00:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002e02:	f006 f917 	bl	8009034 <_ZN17TypedTextDatabase8getFontsEv>
 8002e06:	6840      	ldr	r0, [r0, #4]
 8002e08:	e7fa      	b.n	8002e00 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002e0a:	f006 f913 	bl	8009034 <_ZN17TypedTextDatabase8getFontsEv>
 8002e0e:	6880      	ldr	r0, [r0, #8]
 8002e10:	e7f6      	b.n	8002e00 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002e12:	f006 f90f 	bl	8009034 <_ZN17TypedTextDatabase8getFontsEv>
 8002e16:	68c0      	ldr	r0, [r0, #12]
 8002e18:	e7f2      	b.n	8002e00 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002e1a:	2000      	movs	r0, #0
 8002e1c:	e7f0      	b.n	8002e00 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002e20 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002e20:	4800      	ldr	r0, [pc, #0]	; (8002e24 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002e22:	4770      	bx	lr
 8002e24:	0802c3ec 	.word	0x0802c3ec

08002e28 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002e28:	200d      	movs	r0, #13
 8002e2a:	4770      	bx	lr

08002e2c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002e2c:	b513      	push	{r0, r1, r4, lr}
 8002e2e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002e30:	b151      	cbz	r1, 8002e48 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002e32:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002e34:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002e36:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002e3a:	aa01      	add	r2, sp, #4
 8002e3c:	689c      	ldr	r4, [r3, #8]
 8002e3e:	f10d 0303 	add.w	r3, sp, #3
 8002e42:	47a0      	blx	r4
        return glyph;
    }
 8002e44:	b002      	add	sp, #8
 8002e46:	bd10      	pop	{r4, pc}
            return 0;
 8002e48:	4608      	mov	r0, r1
 8002e4a:	e7fb      	b.n	8002e44 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002e4c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002e4c:	89c0      	ldrh	r0, [r0, #14]
 8002e4e:	4770      	bx	lr

08002e50 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002e50:	8a00      	ldrh	r0, [r0, #16]
 8002e52:	4770      	bx	lr

08002e54 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002e54:	88c0      	ldrh	r0, [r0, #6]
 8002e56:	4770      	bx	lr

08002e58 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002e58:	8880      	ldrh	r0, [r0, #4]
 8002e5a:	4770      	bx	lr

08002e5c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002e5c:	7a80      	ldrb	r0, [r0, #10]
    }
 8002e5e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002e62:	4770      	bx	lr

08002e64 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002e64:	7a80      	ldrb	r0, [r0, #10]
    }
 8002e66:	09c0      	lsrs	r0, r0, #7
 8002e68:	4770      	bx	lr

08002e6a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002e6a:	4770      	bx	lr

08002e6c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002e6c:	4770      	bx	lr

08002e6e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002e6e:	4770      	bx	lr

08002e70 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002e70:	4770      	bx	lr

08002e72 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002e72:	4770      	bx	lr

08002e74 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002e74:	4770      	bx	lr

08002e76 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002e76:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002e78:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002e7a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002e7c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002e7e:	466d      	mov	r5, sp
 8002e80:	4601      	mov	r1, r0
 8002e82:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002e86:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002e88:	4628      	mov	r0, r5
 8002e8a:	4798      	blx	r3
 8002e8c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e90:	343c      	adds	r4, #60	; 0x3c
 8002e92:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002e96:	b005      	add	sp, #20
 8002e98:	bd30      	pop	{r4, r5, pc}

08002e9a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002e9a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002e9c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002e9e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002ea0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002ea2:	466d      	mov	r5, sp
 8002ea4:	4601      	mov	r1, r0
 8002ea6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002eaa:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002eac:	4628      	mov	r0, r5
 8002eae:	4798      	blx	r3
 8002eb0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002eb4:	343c      	adds	r4, #60	; 0x3c
 8002eb6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002eba:	b005      	add	sp, #20
 8002ebc:	bd30      	pop	{r4, r5, pc}

08002ebe <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002ebe:	2200      	movs	r2, #0
 8002ec0:	8002      	strh	r2, [r0, #0]
 8002ec2:	8042      	strh	r2, [r0, #2]
 8002ec4:	8082      	strh	r2, [r0, #4]
 8002ec6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002ec8:	4770      	bx	lr

08002eca <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002eca:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002ece:	4770      	bx	lr

08002ed0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002ed0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002ed2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002ed4:	4604      	mov	r4, r0
        setX(x);
 8002ed6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002ed8:	4615      	mov	r5, r2
        setX(x);
 8002eda:	4798      	blx	r3
        setBaselineY(baselineY);
 8002edc:	6823      	ldr	r3, [r4, #0]
 8002ede:	4629      	mov	r1, r5
 8002ee0:	4620      	mov	r0, r4
 8002ee2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002ee4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002ee8:	4718      	bx	r3

08002eea <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002eea:	2000      	movs	r0, #0
 8002eec:	4770      	bx	lr

08002eee <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002eee:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002ef0:	4770      	bx	lr

08002ef2 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002ef2:	4770      	bx	lr

08002ef4 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ef4:	4770      	bx	lr

08002ef6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002ef6:	4770      	bx	lr

08002ef8 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002ef8:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002efa:	68c2      	ldr	r2, [r0, #12]
 8002efc:	6844      	ldr	r4, [r0, #4]
 8002efe:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002f00:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002f02:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002f06:	07d2      	lsls	r2, r2, #31
 8002f08:	bf48      	it	mi
 8002f0a:	5962      	ldrmi	r2, [r4, r5]
 8002f0c:	689b      	ldr	r3, [r3, #8]
    }
 8002f0e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f10:	bf48      	it	mi
 8002f12:	58d3      	ldrmi	r3, [r2, r3]
 8002f14:	4718      	bx	r3

08002f16 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002f16:	6843      	ldr	r3, [r0, #4]
 8002f18:	b12b      	cbz	r3, 8002f26 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002f1a:	6883      	ldr	r3, [r0, #8]
 8002f1c:	b92b      	cbnz	r3, 8002f2a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002f1e:	68c0      	ldr	r0, [r0, #12]
 8002f20:	f000 0001 	and.w	r0, r0, #1
 8002f24:	4770      	bx	lr
 8002f26:	4618      	mov	r0, r3
 8002f28:	4770      	bx	lr
 8002f2a:	2001      	movs	r0, #1
    }
 8002f2c:	4770      	bx	lr

08002f2e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002f2e:	b510      	push	{r4, lr}
    }
 8002f30:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002f32:	4604      	mov	r4, r0
    }
 8002f34:	f026 fed3 	bl	8029cde <_ZdlPvj>
 8002f38:	4620      	mov	r0, r4
 8002f3a:	bd10      	pop	{r4, pc}

08002f3c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002f3c:	b510      	push	{r4, lr}
 8002f3e:	214c      	movs	r1, #76	; 0x4c
 8002f40:	4604      	mov	r4, r0
 8002f42:	f026 fecc 	bl	8029cde <_ZdlPvj>
 8002f46:	4620      	mov	r0, r4
 8002f48:	bd10      	pop	{r4, pc}

08002f4a <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f4a:	b510      	push	{r4, lr}
 8002f4c:	2110      	movs	r1, #16
 8002f4e:	4604      	mov	r4, r0
 8002f50:	f026 fec5 	bl	8029cde <_ZdlPvj>
 8002f54:	4620      	mov	r0, r4
 8002f56:	bd10      	pop	{r4, pc}

08002f58 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002f58:	b510      	push	{r4, lr}
 8002f5a:	4b03      	ldr	r3, [pc, #12]	; (8002f68 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002f5c:	6003      	str	r3, [r0, #0]
 8002f5e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002f60:	f011 f944 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002f64:	4620      	mov	r0, r4
 8002f66:	bd10      	pop	{r4, pc}
 8002f68:	0802c758 	.word	0x0802c758

08002f6c <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002f6c:	b507      	push	{r0, r1, r2, lr}
 8002f6e:	4b07      	ldr	r3, [pc, #28]	; (8002f8c <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002f70:	6003      	str	r3, [r0, #0]
 8002f72:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002f74:	f011 f93a 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002f78:	9801      	ldr	r0, [sp, #4]
 8002f7a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8002f7e:	f026 feae 	bl	8029cde <_ZdlPvj>
 8002f82:	9801      	ldr	r0, [sp, #4]
 8002f84:	b003      	add	sp, #12
 8002f86:	f85d fb04 	ldr.w	pc, [sp], #4
 8002f8a:	bf00      	nop
 8002f8c:	0802c758 	.word	0x0802c758

08002f90 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002f90:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002f92:	f7ff fe69 	bl	8002c68 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002f96:	bd08      	pop	{r3, pc}

08002f98 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002f98:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002f9a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002f9c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002f9e:	4b12      	ldr	r3, [pc, #72]	; (8002fe8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002fa0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002fa2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002fa4:	b28d      	uxth	r5, r1
 8002fa6:	b92b      	cbnz	r3, 8002fb4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002fa8:	4b10      	ldr	r3, [pc, #64]	; (8002fec <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002faa:	4a11      	ldr	r2, [pc, #68]	; (8002ff0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002fac:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002fae:	4811      	ldr	r0, [pc, #68]	; (8002ff4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002fb0:	f027 fd7c 	bl	802aaac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002fb4:	4910      	ldr	r1, [pc, #64]	; (8002ff8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002fb6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002fb8:	8809      	ldrh	r1, [r1, #0]
 8002fba:	4291      	cmp	r1, r2
 8002fbc:	d803      	bhi.n	8002fc6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002fbe:	4b0f      	ldr	r3, [pc, #60]	; (8002ffc <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002fc0:	4a0b      	ldr	r2, [pc, #44]	; (8002ff0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002fc2:	216d      	movs	r1, #109	; 0x6d
 8002fc4:	e7f3      	b.n	8002fae <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002fc6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002fca:	4b0d      	ldr	r3, [pc, #52]	; (8003000 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002fd2:	6803      	ldr	r3, [r0, #0]
 8002fd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002fd6:	4798      	blx	r3
 8002fd8:	1a28      	subs	r0, r5, r0
 8002fda:	b201      	sxth	r1, r0
 8002fdc:	4633      	mov	r3, r6
 8002fde:	4620      	mov	r0, r4
    }
 8002fe0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002fe4:	4718      	bx	r3
 8002fe6:	bf00      	nop
 8002fe8:	20012dfc 	.word	0x20012dfc
 8002fec:	0802c4f0 	.word	0x0802c4f0
 8002ff0:	0802c532 	.word	0x0802c532
 8002ff4:	0802c56d 	.word	0x0802c56d
 8002ff8:	20012e00 	.word	0x20012e00
 8002ffc:	0802c5b4 	.word	0x0802c5b4
 8003000:	20012e04 	.word	0x20012e04

08003004 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8003004:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8003006:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800300a:	4299      	cmp	r1, r3
{
 800300c:	4604      	mov	r4, r0
 800300e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8003010:	d103      	bne.n	800301a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003012:	f012 fded 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8003016:	f001 fbf1 	bl	80047fc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800301a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800301e:	429d      	cmp	r5, r3
 8003020:	d103      	bne.n	800302a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8003022:	f012 fde5 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8003026:	f001 fca9 	bl	800497c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800302a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800302e:	42a5      	cmp	r5, r4
 8003030:	d105      	bne.n	800303e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8003032:	f012 fddd 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8003036:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 800303a:	f001 bcaf 	b.w	800499c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800303e:	bd38      	pop	{r3, r4, r5, pc}

08003040 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003040:	2200      	movs	r2, #0
 8003042:	f04f 31ff 	mov.w	r1, #4294967295
 8003046:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800304a:	6082      	str	r2, [r0, #8]
    }
 800304c:	4770      	bx	lr

0800304e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800304e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8003050:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8003052:	4604      	mov	r4, r0
        setX(x);
 8003054:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8003056:	4615      	mov	r5, r2
        setX(x);
 8003058:	4798      	blx	r3
        setY(y);
 800305a:	6823      	ldr	r3, [r4, #0]
 800305c:	4629      	mov	r1, r5
 800305e:	4620      	mov	r0, r4
 8003060:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8003062:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003066:	4718      	bx	r3

08003068 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003068:	b570      	push	{r4, r5, r6, lr}
 800306a:	4604      	mov	r4, r0
 800306c:	461d      	mov	r5, r3
 800306e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003072:	f7ff ffec 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003076:	6823      	ldr	r3, [r4, #0]
 8003078:	4629      	mov	r1, r5
 800307a:	4620      	mov	r0, r4
 800307c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800307e:	4798      	blx	r3
        setHeight(height);
 8003080:	6823      	ldr	r3, [r4, #0]
 8003082:	4631      	mov	r1, r6
 8003084:	4620      	mov	r0, r4
 8003086:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003088:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800308c:	4718      	bx	r3
	...

08003090 <_ZN8touchgfx6WidgetC1Ev>:
 8003090:	2200      	movs	r2, #0
 8003092:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003096:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800309a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800309e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80030a2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80030a6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80030a8:	4a01      	ldr	r2, [pc, #4]	; (80030b0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80030aa:	6002      	str	r2, [r0, #0]
 80030ac:	4770      	bx	lr
 80030ae:	bf00      	nop
 80030b0:	0802c638 	.word	0x0802c638

080030b4 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80030b4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80030b6:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80030b8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80030ba:	2100      	movs	r1, #0
 80030bc:	f027 fefb 	bl	802aeb6 <memset>
 80030c0:	4620      	mov	r0, r4
 80030c2:	f7ff ffe5 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80030c6:	4b0a      	ldr	r3, [pc, #40]	; (80030f0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80030c8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80030ca:	4b0a      	ldr	r3, [pc, #40]	; (80030f4 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80030cc:	62a3      	str	r3, [r4, #40]	; 0x28
 80030ce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80030d2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80030d4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80030d8:	2300      	movs	r3, #0
 80030da:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80030de:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80030e2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80030e6:	8723      	strh	r3, [r4, #56]	; 0x38
 80030e8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80030ea:	4620      	mov	r0, r4
 80030ec:	bd10      	pop	{r4, pc}
 80030ee:	bf00      	nop
 80030f0:	0802ef70 	.word	0x0802ef70
 80030f4:	0802c6a0 	.word	0x0802c6a0

080030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80030f8:	4b1a      	ldr	r3, [pc, #104]	; (8003164 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80030fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80030fc:	881b      	ldrh	r3, [r3, #0]
 80030fe:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8003100:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003102:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003104:	d92b      	bls.n	800315e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003106:	4b18      	ldr	r3, [pc, #96]	; (8003168 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	b92b      	cbnz	r3, 8003118 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800310c:	4b17      	ldr	r3, [pc, #92]	; (800316c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800310e:	4a18      	ldr	r2, [pc, #96]	; (8003170 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003110:	4818      	ldr	r0, [pc, #96]	; (8003174 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003112:	216c      	movs	r1, #108	; 0x6c
 8003114:	f027 fcca 	bl	802aaac <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003118:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800311c:	4b16      	ldr	r3, [pc, #88]	; (8003178 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800311e:	681b      	ldr	r3, [r3, #0]
 8003120:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003124:	4b15      	ldr	r3, [pc, #84]	; (800317c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8003126:	6818      	ldr	r0, [r3, #0]
 8003128:	f005 ff74 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800312c:	682b      	ldr	r3, [r5, #0]
 800312e:	9001      	str	r0, [sp, #4]
 8003130:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003132:	4628      	mov	r0, r5
 8003134:	4798      	blx	r3
 8003136:	682b      	ldr	r3, [r5, #0]
 8003138:	9901      	ldr	r1, [sp, #4]
 800313a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800313c:	4604      	mov	r4, r0
 800313e:	4628      	mov	r0, r5
 8003140:	4798      	blx	r3
 8003142:	682b      	ldr	r3, [r5, #0]
 8003144:	9901      	ldr	r1, [sp, #4]
 8003146:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003148:	fb14 f400 	smulbb	r4, r4, r0
 800314c:	4628      	mov	r0, r5
 800314e:	4798      	blx	r3
 8003150:	b2a4      	uxth	r4, r4
 8003152:	1823      	adds	r3, r4, r0
 8003154:	b21b      	sxth	r3, r3
 8003156:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800315a:	b002      	add	sp, #8
 800315c:	bd70      	pop	{r4, r5, r6, pc}
 800315e:	2300      	movs	r3, #0
 8003160:	e7f9      	b.n	8003156 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8003162:	bf00      	nop
 8003164:	20012e00 	.word	0x20012e00
 8003168:	20012dfc 	.word	0x20012dfc
 800316c:	0802c4f0 	.word	0x0802c4f0
 8003170:	0802c532 	.word	0x0802c532
 8003174:	0802c56d 	.word	0x0802c56d
 8003178:	20012e04 	.word	0x20012e04
 800317c:	20012e08 	.word	0x20012e08

08003180 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8003180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003184:	ed2d 8b06 	vpush	{d8-d10}
 8003188:	4604      	mov	r4, r0
 800318a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 800318c:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800318e:	2500      	movs	r5, #0
 8003190:	f014 f9ae 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 8003194:	4b66      	ldr	r3, [pc, #408]	; (8003330 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 8003196:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003198:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800319c:	2226      	movs	r2, #38	; 0x26
 800319e:	4629      	mov	r1, r5
 80031a0:	4658      	mov	r0, fp
 80031a2:	f027 fe88 	bl	802aeb6 <memset>
 80031a6:	4658      	mov	r0, fp
 80031a8:	f7ff ff72 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80031ac:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80031b0:	26ff      	movs	r6, #255	; 0xff
 80031b2:	4b60      	ldr	r3, [pc, #384]	; (8003334 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80031b4:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80031b6:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80031b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80031bc:	4629      	mov	r1, r5
 80031be:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80031c2:	4650      	mov	r0, sl
        : color(col)
 80031c4:	66a5      	str	r5, [r4, #104]	; 0x68
 80031c6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80031ca:	f027 fe74 	bl	802aeb6 <memset>
 80031ce:	4650      	mov	r0, sl
 80031d0:	f7ff ff5e 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80031d4:	4b58      	ldr	r3, [pc, #352]	; (8003338 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80031d6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80031d8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80031dc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80031e0:	a90a      	add	r1, sp, #40	; 0x28
 80031e2:	4650      	mov	r0, sl
 80031e4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80031e8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80031ec:	f00f fff7 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80031f0:	4648      	mov	r0, r9
 80031f2:	f7ff ff5f 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 80031f6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80031fa:	4b50      	ldr	r3, [pc, #320]	; (800333c <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 80031fc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003200:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8003204:	4638      	mov	r0, r7
 8003206:	f00e feb3 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 800320a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800320e:	4618      	mov	r0, r3
 8003210:	9303      	str	r3, [sp, #12]
 8003212:	f7ff fd3d 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003216:	4b4a      	ldr	r3, [pc, #296]	; (8003340 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8003218:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800321c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8003220:	3324      	adds	r3, #36	; 0x24
 8003222:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003226:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800322a:	4640      	mov	r0, r8
 800322c:	f7ff ff42 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8003230:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8003234:	4618      	mov	r0, r3
 8003236:	ee08 3a10 	vmov	s16, r3
 800323a:	f7ff ff3b 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 800323e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8003242:	4618      	mov	r0, r3
 8003244:	ee08 3a90 	vmov	s17, r3
 8003248:	f7ff ff34 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 800324c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8003250:	4618      	mov	r0, r3
 8003252:	ee09 3a10 	vmov	s18, r3
 8003256:	f010 f903 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800325a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800325e:	4618      	mov	r0, r3
 8003260:	ee09 3a90 	vmov	s19, r3
 8003264:	f010 f8fc 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003268:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800326c:	4618      	mov	r0, r3
 800326e:	ee0a 3a10 	vmov	s20, r3
 8003272:	f010 f8f5 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003276:	4a33      	ldr	r2, [pc, #204]	; (8003344 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8003278:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800327c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8003280:	4a31      	ldr	r2, [pc, #196]	; (8003348 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003282:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003286:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800328a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800328e:	f010 ffa3 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003292:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003296:	462a      	mov	r2, r5
 8003298:	4658      	mov	r0, fp
 800329a:	9300      	str	r3, [sp, #0]
 800329c:	4629      	mov	r1, r5
 800329e:	23f0      	movs	r3, #240	; 0xf0
 80032a0:	f7ff fee2 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80032a4:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80032a6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80032aa:	66a3      	str	r3, [r4, #104]	; 0x68
 80032ac:	4659      	mov	r1, fp
 80032ae:	4630      	mov	r0, r6
 80032b0:	f00d fa06 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80032b4:	462a      	mov	r2, r5
 80032b6:	4650      	mov	r0, sl
 80032b8:	4629      	mov	r1, r5
 80032ba:	f7ff fec8 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80032be:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80032c0:	4650      	mov	r0, sl
 80032c2:	a90a      	add	r1, sp, #40	; 0x28
 80032c4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80032c8:	f00f ff89 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80032cc:	4651      	mov	r1, sl
 80032ce:	4630      	mov	r0, r6
 80032d0:	f00d f9f6 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 80032d4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80032d8:	2159      	movs	r1, #89	; 0x59
 80032da:	4648      	mov	r0, r9
 80032dc:	f7ff feb7 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80032e0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80032e4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80032e8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80032ec:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80032f0:	4650      	mov	r0, sl
 80032f2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80032f6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80032fa:	4649      	mov	r1, r9
 80032fc:	4798      	blx	r3
 80032fe:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8003302:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003306:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800330a:	4b10      	ldr	r3, [pc, #64]	; (800334c <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 800330c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800330e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8003312:	b92b      	cbnz	r3, 8003320 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8003314:	4b0e      	ldr	r3, [pc, #56]	; (8003350 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8003316:	4a0f      	ldr	r2, [pc, #60]	; (8003354 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8003318:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800331a:	480f      	ldr	r0, [pc, #60]	; (8003358 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 800331c:	f027 fbc6 	bl	802aaac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003320:	4b0e      	ldr	r3, [pc, #56]	; (800335c <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003322:	881b      	ldrh	r3, [r3, #0]
 8003324:	2b24      	cmp	r3, #36	; 0x24
 8003326:	d81d      	bhi.n	8003364 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8003328:	4b0d      	ldr	r3, [pc, #52]	; (8003360 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 800332a:	4a0a      	ldr	r2, [pc, #40]	; (8003354 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 800332c:	2161      	movs	r1, #97	; 0x61
 800332e:	e7f4      	b.n	800331a <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8003330:	0802c758 	.word	0x0802c758
 8003334:	0802f000 	.word	0x0802f000
 8003338:	0802f1c8 	.word	0x0802f1c8
 800333c:	0802c6b0 	.word	0x0802c6b0
 8003340:	0802ed34 	.word	0x0802ed34
 8003344:	0802c740 	.word	0x0802c740
 8003348:	08003005 	.word	0x08003005
 800334c:	20012dfc 	.word	0x20012dfc
 8003350:	0802c4f0 	.word	0x0802c4f0
 8003354:	0802c5f2 	.word	0x0802c5f2
 8003358:	0802c56d 	.word	0x0802c56d
 800335c:	20012e00 	.word	0x20012e00
 8003360:	0802c5b4 	.word	0x0802c5b4
        return texts->getText(typedTextId);
 8003364:	4b93      	ldr	r3, [pc, #588]	; (80035b4 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8003366:	2124      	movs	r1, #36	; 0x24
 8003368:	6818      	ldr	r0, [r3, #0]
 800336a:	f005 fe53 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 800336e:	4a92      	ldr	r2, [pc, #584]	; (80035b8 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8003370:	4603      	mov	r3, r0
 8003372:	2104      	movs	r1, #4
 8003374:	4650      	mov	r0, sl
 8003376:	f015 fdab 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800337a:	4648      	mov	r0, r9
        wc1 = value;
 800337c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8003380:	f00f fb32 	bl	80129e8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003384:	4b8d      	ldr	r3, [pc, #564]	; (80035bc <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8003386:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8003388:	a90a      	add	r1, sp, #40	; 0x28
 800338a:	2325      	movs	r3, #37	; 0x25
 800338c:	4648      	mov	r0, r9
 800338e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003392:	f00f fb49 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003396:	4649      	mov	r1, r9
 8003398:	4630      	mov	r0, r6
 800339a:	f00d f991 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800339e:	230a      	movs	r3, #10
 80033a0:	9300      	str	r3, [sp, #0]
 80033a2:	2232      	movs	r2, #50	; 0x32
 80033a4:	23f0      	movs	r3, #240	; 0xf0
 80033a6:	4629      	mov	r1, r5
 80033a8:	4638      	mov	r0, r7
 80033aa:	f7ff fe5d 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 80033ae:	9b03      	ldr	r3, [sp, #12]
 80033b0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80033b4:	22a0      	movs	r2, #160	; 0xa0
 80033b6:	4611      	mov	r1, r2
 80033b8:	4638      	mov	r0, r7
 80033ba:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80033be:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80033c2:	f00e feeb 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80033c6:	22a0      	movs	r2, #160	; 0xa0
 80033c8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80033cc:	4638      	mov	r0, r7
 80033ce:	f00e fef0 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80033d2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80033d6:	2b20      	cmp	r3, #32
 80033d8:	d005      	beq.n	80033e6 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 80033da:	2320      	movs	r3, #32
 80033dc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 80033e0:	4638      	mov	r0, r7
 80033e2:	f00e fde5 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80033e6:	4638      	mov	r0, r7
 80033e8:	2101      	movs	r1, #1
 80033ea:	f00e feed 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80033ee:	4639      	mov	r1, r7
 80033f0:	4630      	mov	r0, r6
 80033f2:	ad04      	add	r5, sp, #16
        color = newColor;
 80033f4:	f04f 37ff 	mov.w	r7, #4294967295
 80033f8:	f00d f962 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80033fc:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8003400:	223c      	movs	r2, #60	; 0x3c
 8003402:	4640      	mov	r0, r8
 8003404:	2146      	movs	r1, #70	; 0x46
 8003406:	f7ff fe22 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800340a:	4641      	mov	r1, r8
 800340c:	4628      	mov	r0, r5
        color = newColor;
 800340e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8003412:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8003416:	f00f f86d 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800341a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800341e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8003422:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003426:	f8df 9194 	ldr.w	r9, [pc, #404]	; 80035bc <_ZN19CalibrationViewBaseC1Ev+0x43c>
 800342a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800342e:	231d      	movs	r3, #29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8003430:	a90a      	add	r1, sp, #40	; 0x28
 8003432:	4640      	mov	r0, r8
 8003434:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003438:	f00f faf6 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800343c:	4641      	mov	r1, r8
 800343e:	4630      	mov	r0, r6
 8003440:	f00d f93e 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8003444:	ee18 0a10 	vmov	r0, s16
 8003448:	2223      	movs	r2, #35	; 0x23
 800344a:	2145      	movs	r1, #69	; 0x45
 800344c:	f7ff fdff 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8003450:	ee18 1a10 	vmov	r1, s16
 8003454:	4628      	mov	r0, r5
        color = newColor;
 8003456:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800345a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800345e:	f00f f849 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003462:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003466:	ee18 3a10 	vmov	r3, s16
 800346a:	333c      	adds	r3, #60	; 0x3c
 800346c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003470:	235a      	movs	r3, #90	; 0x5a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8003472:	ee18 0a10 	vmov	r0, s16
 8003476:	a90a      	add	r1, sp, #40	; 0x28
 8003478:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800347c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003480:	f00f fad2 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003484:	ee18 1a10 	vmov	r1, s16
 8003488:	4630      	mov	r0, r6
 800348a:	f00d f919 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800348e:	ee18 0a90 	vmov	r0, s17
 8003492:	220c      	movs	r2, #12
 8003494:	2136      	movs	r1, #54	; 0x36
 8003496:	f7ff fdda 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800349a:	ee18 1a90 	vmov	r1, s17
 800349e:	4628      	mov	r0, r5
        color = newColor;
 80034a0:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80034a4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80034a8:	f00f f824 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80034ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034b0:	ee18 3a90 	vmov	r3, s17
 80034b4:	333c      	adds	r3, #60	; 0x3c
 80034b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80034ba:	2359      	movs	r3, #89	; 0x59
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 80034bc:	ee18 0a90 	vmov	r0, s17
 80034c0:	a90a      	add	r1, sp, #40	; 0x28
 80034c2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80034c6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80034ca:	f00f faad 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034ce:	ee18 1a90 	vmov	r1, s17
 80034d2:	4630      	mov	r0, r6
 80034d4:	f00d f8f4 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80034d8:	ee19 0a10 	vmov	r0, s18
 80034dc:	22f0      	movs	r2, #240	; 0xf0
 80034de:	2121      	movs	r1, #33	; 0x21
 80034e0:	f7ff fdb5 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80034e4:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80034e8:	aa0a      	add	r2, sp, #40	; 0x28
 80034ea:	f04f 0802 	mov.w	r8, #2
 80034ee:	a909      	add	r1, sp, #36	; 0x24
 80034f0:	ee19 0a10 	vmov	r0, s18
 80034f4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80034f8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80034fc:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003500:	f00f fc77 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003504:	2358      	movs	r3, #88	; 0x58
 8003506:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800350a:	3510      	adds	r5, #16
        updateTextPosition();
 800350c:	ee19 0a10 	vmov	r0, s18
 8003510:	f7ff fdf2 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003514:	ee19 1a10 	vmov	r1, s18
 8003518:	4630      	mov	r0, r6
        colorPressed = col;
 800351a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800351e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8003522:	f00d f8cd 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8003526:	ee19 0a90 	vmov	r0, s19
 800352a:	22aa      	movs	r2, #170	; 0xaa
 800352c:	2121      	movs	r1, #33	; 0x21
 800352e:	f7ff fd8e 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003532:	aa0a      	add	r2, sp, #40	; 0x28
 8003534:	a909      	add	r1, sp, #36	; 0x24
 8003536:	ee19 0a90 	vmov	r0, s19
 800353a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800353e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8003542:	f00f fc56 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003546:	2357      	movs	r3, #87	; 0x57
 8003548:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800354c:	ee19 0a90 	vmov	r0, s19
 8003550:	f7ff fdd2 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003554:	ee19 1a90 	vmov	r1, s19
 8003558:	4630      	mov	r0, r6
        colorPressed = col;
 800355a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800355e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8003562:	f00d f8ad 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8003566:	ee1a 0a10 	vmov	r0, s20
 800356a:	2264      	movs	r2, #100	; 0x64
 800356c:	2121      	movs	r1, #33	; 0x21
 800356e:	f7ff fd6e 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003572:	aa0a      	add	r2, sp, #40	; 0x28
 8003574:	a909      	add	r1, sp, #36	; 0x24
 8003576:	ee1a 0a10 	vmov	r0, s20
 800357a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800357e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8003582:	f00f fc36 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003586:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 8003588:	ee1a 0a10 	vmov	r0, s20
 800358c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8003590:	f7ff fdb2 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003594:	4630      	mov	r0, r6
        colorPressed = col;
 8003596:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800359a:	ee1a 1a10 	vmov	r1, s20
 800359e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80035a2:	f00d f88d 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80035a6:	4620      	mov	r0, r4
 80035a8:	b00d      	add	sp, #52	; 0x34
 80035aa:	ecbd 8b06 	vpop	{d8-d10}
 80035ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035b2:	bf00      	nop
 80035b4:	20012e08 	.word	0x20012e08
 80035b8:	0802c62a 	.word	0x0802c62a
 80035bc:	0802c6a0 	.word	0x0802c6a0

080035c0 <_ZN24Calibration_HallViewBase25function_cali_hall_sensorEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_hall_sensor()
    {
        // Override and implement this function in Calibration_Hall
    }
 80035c0:	4770      	bx	lr

080035c2 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 80035c2:	4770      	bx	lr

080035c4 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80035c4:	4770      	bx	lr

080035c6 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80035c6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80035c8:	68c2      	ldr	r2, [r0, #12]
 80035ca:	6844      	ldr	r4, [r0, #4]
 80035cc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80035ce:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80035d0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80035d4:	07d2      	lsls	r2, r2, #31
 80035d6:	bf48      	it	mi
 80035d8:	5962      	ldrmi	r2, [r4, r5]
 80035da:	689b      	ldr	r3, [r3, #8]
    }
 80035dc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80035de:	bf48      	it	mi
 80035e0:	58d3      	ldrmi	r3, [r2, r3]
 80035e2:	4718      	bx	r3

080035e4 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80035e4:	6843      	ldr	r3, [r0, #4]
 80035e6:	b12b      	cbz	r3, 80035f4 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80035e8:	6883      	ldr	r3, [r0, #8]
 80035ea:	b92b      	cbnz	r3, 80035f8 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80035ec:	68c0      	ldr	r0, [r0, #12]
 80035ee:	f000 0001 	and.w	r0, r0, #1
 80035f2:	4770      	bx	lr
 80035f4:	4618      	mov	r0, r3
 80035f6:	4770      	bx	lr
 80035f8:	2001      	movs	r0, #1
    }
 80035fa:	4770      	bx	lr

080035fc <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80035fc:	b510      	push	{r4, lr}
 80035fe:	2110      	movs	r1, #16
 8003600:	4604      	mov	r4, r0
 8003602:	f026 fb6c 	bl	8029cde <_ZdlPvj>
 8003606:	4620      	mov	r0, r4
 8003608:	bd10      	pop	{r4, pc}
	...

0800360c <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 800360c:	b510      	push	{r4, lr}
 800360e:	4b03      	ldr	r3, [pc, #12]	; (800361c <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8003610:	6003      	str	r3, [r0, #0]
 8003612:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003614:	f010 fdea 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003618:	4620      	mov	r0, r4
 800361a:	bd10      	pop	{r4, pc}
 800361c:	0802c7a4 	.word	0x0802c7a4

08003620 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8003620:	b507      	push	{r0, r1, r2, lr}
 8003622:	4b07      	ldr	r3, [pc, #28]	; (8003640 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8003624:	6003      	str	r3, [r0, #0]
 8003626:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003628:	f010 fde0 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800362c:	9801      	ldr	r0, [sp, #4]
 800362e:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8003632:	f026 fb54 	bl	8029cde <_ZdlPvj>
 8003636:	9801      	ldr	r0, [sp, #4]
 8003638:	b003      	add	sp, #12
 800363a:	f85d fb04 	ldr.w	pc, [sp], #4
 800363e:	bf00      	nop
 8003640:	0802c7a4 	.word	0x0802c7a4

08003644 <_ZN24Calibration_HallViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_HallViewBase::handleTickEvent()
{
 8003644:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8003646:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 800364a:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 800364e:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003650:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8003652:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003656:	d105      	bne.n	8003664 <_ZN24Calibration_HallViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_hall_sensor
        function_cali_hall_sensor();
 8003658:	6803      	ldr	r3, [r0, #0]
 800365a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800365c:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 800365e:	2300      	movs	r3, #0
 8003660:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 8003664:	bd10      	pop	{r4, pc}

08003666 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003666:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 800366a:	4288      	cmp	r0, r1
{
 800366c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800366e:	d105      	bne.n	800367c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003670:	f012 fabe 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003674:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003678:	f001 b970 	b.w	800495c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 800367c:	bd08      	pop	{r3, pc}
	...

08003680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003680:	b510      	push	{r4, lr}
 8003682:	4604      	mov	r4, r0
        : TextArea()
 8003684:	f7ff fd16 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003688:	4b02      	ldr	r3, [pc, #8]	; (8003694 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800368a:	6023      	str	r3, [r4, #0]
 800368c:	2300      	movs	r3, #0
 800368e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003690:	4620      	mov	r0, r4
 8003692:	bd10      	pop	{r4, pc}
 8003694:	0802c6b0 	.word	0x0802c6b0

08003698 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8003698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800369c:	ed2d 8b06 	vpush	{d8-d10}
 80036a0:	4604      	mov	r4, r0
 80036a2:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 80036a4:	46a3      	mov	fp, r4
 80036a6:	2500      	movs	r5, #0
 80036a8:	f013 ff22 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 80036ac:	4b69      	ldr	r3, [pc, #420]	; (8003854 <_ZN24Calibration_HallViewBaseC1Ev+0x1bc>)
 80036ae:	63e5      	str	r5, [r4, #60]	; 0x3c
 80036b0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80036b4:	2226      	movs	r2, #38	; 0x26
 80036b6:	4629      	mov	r1, r5
 80036b8:	4658      	mov	r0, fp
 80036ba:	f027 fbfc 	bl	802aeb6 <memset>
 80036be:	4658      	mov	r0, fp
 80036c0:	f7ff fce6 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80036c4:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 80036c8:	27ff      	movs	r7, #255	; 0xff
 80036ca:	4b63      	ldr	r3, [pc, #396]	; (8003858 <_ZN24Calibration_HallViewBaseC1Ev+0x1c0>)
 80036cc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80036ce:	2226      	movs	r2, #38	; 0x26
 80036d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80036d4:	4629      	mov	r1, r5
 80036d6:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 80036da:	4630      	mov	r0, r6
 80036dc:	66a5      	str	r5, [r4, #104]	; 0x68
 80036de:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80036e2:	f027 fbe8 	bl	802aeb6 <memset>
 80036e6:	4630      	mov	r0, r6
 80036e8:	f7ff fcd2 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80036ec:	4b5b      	ldr	r3, [pc, #364]	; (800385c <_ZN24Calibration_HallViewBaseC1Ev+0x1c4>)
 80036ee:	66e3      	str	r3, [r4, #108]	; 0x6c
 80036f0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80036f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80036f8:	a90a      	add	r1, sp, #40	; 0x28
 80036fa:	4630      	mov	r0, r6
 80036fc:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003700:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003704:	f00f fd6b 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003708:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 800370c:	4650      	mov	r0, sl
 800370e:	f7ff ffb7 	bl	8003680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003712:	4648      	mov	r0, r9
 8003714:	f7ff ffb4 	bl	8003680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003718:	f504 7398 	add.w	r3, r4, #304	; 0x130
 800371c:	4618      	mov	r0, r3
 800371e:	ee09 3a10 	vmov	s18, r3
 8003722:	f7ff ffad 	bl	8003680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003726:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 800372a:	4618      	mov	r0, r3
 800372c:	ee09 3a90 	vmov	s19, r3
 8003730:	f7ff ffa6 	bl	8003680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003734:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8003738:	4618      	mov	r0, r3
 800373a:	ee0a 3a10 	vmov	s20, r3
 800373e:	f00f fe8f 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003742:	f504 7304 	add.w	r3, r4, #528	; 0x210
 8003746:	4618      	mov	r0, r3
 8003748:	f504 7816 	add.w	r8, r4, #600	; 0x258
 800374c:	ee0a 3a90 	vmov	s21, r3
 8003750:	f7ff fcb0 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8003754:	4640      	mov	r0, r8
 8003756:	f00e fc0b 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 800375a:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800375e:	4618      	mov	r0, r3
 8003760:	9302      	str	r3, [sp, #8]
 8003762:	f7ff fa95 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003766:	4b3e      	ldr	r3, [pc, #248]	; (8003860 <_ZN24Calibration_HallViewBaseC1Ev+0x1c8>)
 8003768:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 800376c:	3324      	adds	r3, #36	; 0x24
 800376e:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8003772:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8003776:	4618      	mov	r0, r3
 8003778:	f8c4 52d4 	str.w	r5, [r4, #724]	; 0x2d4
 800377c:	ee08 3a10 	vmov	s16, r3
 8003780:	f7ff fc98 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8003784:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003788:	4618      	mov	r0, r3
 800378a:	ee08 3a90 	vmov	s17, r3
 800378e:	f7ff fc91 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003792:	4a34      	ldr	r2, [pc, #208]	; (8003864 <_ZN24Calibration_HallViewBaseC1Ev+0x1cc>)
 8003794:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003798:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 800379c:	4a32      	ldr	r2, [pc, #200]	; (8003868 <_ZN24Calibration_HallViewBaseC1Ev+0x1d0>)
 800379e:	f8c3 51dc 	str.w	r5, [r3, #476]	; 0x1dc
 80037a2:	e9c3 2575 	strd	r2, r5, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80037a6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80037aa:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 80037ae:	f010 fd13 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80037b2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80037b6:	462a      	mov	r2, r5
 80037b8:	4658      	mov	r0, fp
 80037ba:	9300      	str	r3, [sp, #0]
 80037bc:	4629      	mov	r1, r5
 80037be:	23f0      	movs	r3, #240	; 0xf0
 80037c0:	f7ff fc52 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037c4:	1d27      	adds	r7, r4, #4
        color = newColor;
 80037c6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80037ca:	66a3      	str	r3, [r4, #104]	; 0x68
 80037cc:	4659      	mov	r1, fp
 80037ce:	4638      	mov	r0, r7
 80037d0:	f00c ff76 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80037d4:	462a      	mov	r2, r5
 80037d6:	4630      	mov	r0, r6
 80037d8:	4629      	mov	r1, r5
 80037da:	f7ff fc38 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80037de:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80037e0:	4630      	mov	r0, r6
 80037e2:	a90a      	add	r1, sp, #40	; 0x28
 80037e4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80037e8:	f00f fcf9 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80037ec:	4631      	mov	r1, r6
 80037ee:	4638      	mov	r0, r7
 80037f0:	f00c ff66 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_S.setPosition(0, 160, 207, 27);
 80037f4:	231b      	movs	r3, #27
 80037f6:	22a0      	movs	r2, #160	; 0xa0
 80037f8:	9300      	str	r3, [sp, #0]
 80037fa:	4629      	mov	r1, r5
 80037fc:	23cf      	movs	r3, #207	; 0xcf
 80037fe:	4650      	mov	r0, sl
 8003800:	f7ff fc32 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003804:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8003808:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800380c:	ae04      	add	r6, sp, #16
        color = newColor;
 800380e:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003812:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003816:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800381a:	4651      	mov	r1, sl
 800381c:	4630      	mov	r0, r6
 800381e:	4798      	blx	r3
 8003820:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003824:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003828:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_96IR).getText());
 800382c:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003830:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003832:	4b0e      	ldr	r3, [pc, #56]	; (800386c <_ZN24Calibration_HallViewBaseC1Ev+0x1d4>)
 8003834:	681b      	ldr	r3, [r3, #0]
 8003836:	b92b      	cbnz	r3, 8003844 <_ZN24Calibration_HallViewBaseC1Ev+0x1ac>
 8003838:	4b0d      	ldr	r3, [pc, #52]	; (8003870 <_ZN24Calibration_HallViewBaseC1Ev+0x1d8>)
 800383a:	4a0e      	ldr	r2, [pc, #56]	; (8003874 <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 800383c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800383e:	480e      	ldr	r0, [pc, #56]	; (8003878 <_ZN24Calibration_HallViewBaseC1Ev+0x1e0>)
 8003840:	f027 f934 	bl	802aaac <__assert_func>
 8003844:	4b0d      	ldr	r3, [pc, #52]	; (800387c <_ZN24Calibration_HallViewBaseC1Ev+0x1e4>)
 8003846:	881b      	ldrh	r3, [r3, #0]
 8003848:	b9e3      	cbnz	r3, 8003884 <_ZN24Calibration_HallViewBaseC1Ev+0x1ec>
 800384a:	4b0d      	ldr	r3, [pc, #52]	; (8003880 <_ZN24Calibration_HallViewBaseC1Ev+0x1e8>)
 800384c:	4a09      	ldr	r2, [pc, #36]	; (8003874 <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 800384e:	2161      	movs	r1, #97	; 0x61
 8003850:	e7f5      	b.n	800383e <_ZN24Calibration_HallViewBaseC1Ev+0x1a6>
 8003852:	bf00      	nop
 8003854:	0802c7a4 	.word	0x0802c7a4
 8003858:	0802f000 	.word	0x0802f000
 800385c:	0802f1c8 	.word	0x0802f1c8
 8003860:	0802ed34 	.word	0x0802ed34
 8003864:	0802c78c 	.word	0x0802c78c
 8003868:	08003667 	.word	0x08003667
 800386c:	20012dfc 	.word	0x20012dfc
 8003870:	0802c4f0 	.word	0x0802c4f0
 8003874:	0802c5f2 	.word	0x0802c5f2
 8003878:	0802c56d 	.word	0x0802c56d
 800387c:	20012e00 	.word	0x20012e00
 8003880:	0802c5b4 	.word	0x0802c5b4
        return texts->getText(typedTextId);
 8003884:	4bd7      	ldr	r3, [pc, #860]	; (8003be4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003886:	4629      	mov	r1, r5
 8003888:	6818      	ldr	r0, [r3, #0]
 800388a:	f005 fbc3 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 800388e:	4ad6      	ldr	r2, [pc, #856]	; (8003be8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003890:	4603      	mov	r3, r0
 8003892:	210a      	movs	r1, #10
 8003894:	9803      	ldr	r0, [sp, #12]
 8003896:	f015 fb1b 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800389a:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 800389c:	4bd3      	ldr	r3, [pc, #844]	; (8003bec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 800389e:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_HSL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T1XZ));
 80038a2:	4650      	mov	r0, sl
 80038a4:	930a      	str	r3, [sp, #40]	; 0x28
 80038a6:	a90a      	add	r1, sp, #40	; 0x28
 80038a8:	2301      	movs	r3, #1
 80038aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80038ae:	f00f f8bb 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80038b2:	4651      	mov	r1, sl
 80038b4:	4638      	mov	r0, r7
 80038b6:	f00c ff03 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_F.setPosition(25, 187, 207, 22);
 80038ba:	2116      	movs	r1, #22
 80038bc:	22bb      	movs	r2, #187	; 0xbb
 80038be:	9100      	str	r1, [sp, #0]
 80038c0:	23cf      	movs	r3, #207	; 0xcf
 80038c2:	2119      	movs	r1, #25
 80038c4:	4648      	mov	r0, r9
 80038c6:	f7ff fbcf 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038ca:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 80038ce:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80038d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80038d6:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80038da:	4649      	mov	r1, r9
 80038dc:	4630      	mov	r0, r6
 80038de:	4798      	blx	r3
 80038e0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80038e4:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80038e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80038ec:	49c0      	ldr	r1, [pc, #768]	; (8003bf0 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 80038ee:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PU07).getText());
 80038f0:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	d09f      	beq.n	8003838 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80038f8:	48be      	ldr	r0, [pc, #760]	; (8003bf4 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 80038fa:	8803      	ldrh	r3, [r0, #0]
 80038fc:	2b02      	cmp	r3, #2
 80038fe:	d9a4      	bls.n	800384a <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003900:	4ab8      	ldr	r2, [pc, #736]	; (8003be4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003902:	2102      	movs	r1, #2
 8003904:	6810      	ldr	r0, [r2, #0]
 8003906:	f005 fb85 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 800390a:	4ab7      	ldr	r2, [pc, #732]	; (8003be8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 800390c:	4603      	mov	r3, r0
 800390e:	210a      	movs	r1, #10
 8003910:	4650      	mov	r0, sl
 8003912:	f015 fadd 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AFGX));
 8003916:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 800391a:	4bb4      	ldr	r3, [pc, #720]	; (8003bec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 800391c:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 8003920:	4661      	mov	r1, ip
 8003922:	4648      	mov	r0, r9
 8003924:	f04f 0a03 	mov.w	sl, #3
 8003928:	930a      	str	r3, [sp, #40]	; 0x28
 800392a:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 800392e:	f00f f87b 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003932:	4649      	mov	r1, r9
 8003934:	4638      	mov	r0, r7
 8003936:	f00c fec3 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_F.setPosition(25, 119, 207, 22);
 800393a:	f04f 0c16 	mov.w	ip, #22
 800393e:	2277      	movs	r2, #119	; 0x77
 8003940:	ee19 0a10 	vmov	r0, s18
 8003944:	f8cd c000 	str.w	ip, [sp]
 8003948:	23cf      	movs	r3, #207	; 0xcf
 800394a:	2119      	movs	r1, #25
 800394c:	f7ff fb8c 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003950:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 8003954:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 8003958:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800395c:	f8a4 5164 	strh.w	r5, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 8003960:	ee19 1a10 	vmov	r1, s18
 8003964:	4630      	mov	r0, r6
 8003966:	4798      	blx	r3
 8003968:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800396c:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003970:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003974:	499e      	ldr	r1, [pc, #632]	; (8003bf0 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003976:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IPYE).getText());
 8003978:	f504 7965 	add.w	r9, r4, #916	; 0x394
 800397c:	2b00      	cmp	r3, #0
 800397e:	f43f af5b 	beq.w	8003838 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003982:	489c      	ldr	r0, [pc, #624]	; (8003bf4 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003984:	8803      	ldrh	r3, [r0, #0]
 8003986:	2b04      	cmp	r3, #4
 8003988:	f67f af5f 	bls.w	800384a <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 800398c:	4a95      	ldr	r2, [pc, #596]	; (8003be4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 800398e:	2104      	movs	r1, #4
 8003990:	6810      	ldr	r0, [r2, #0]
 8003992:	f005 fb3f 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8003996:	4a94      	ldr	r2, [pc, #592]	; (8003be8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003998:	4603      	mov	r3, r0
 800399a:	210a      	movs	r1, #10
 800399c:	4648      	mov	r0, r9
 800399e:	f015 fa97 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0EGP));
 80039a2:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 80039a6:	4b91      	ldr	r3, [pc, #580]	; (8003bec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 80039a8:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 80039ac:	4661      	mov	r1, ip
 80039ae:	ee19 0a10 	vmov	r0, s18
 80039b2:	930a      	str	r3, [sp, #40]	; 0x28
 80039b4:	2305      	movs	r3, #5
 80039b6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80039ba:	f00f f835 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039be:	ee19 1a10 	vmov	r1, s18
 80039c2:	4638      	mov	r0, r7
 80039c4:	f00c fe7c 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_S.setPosition(0, 92, 207, 27);
 80039c8:	f04f 0c1b 	mov.w	ip, #27
 80039cc:	225c      	movs	r2, #92	; 0x5c
 80039ce:	ee19 0a90 	vmov	r0, s19
 80039d2:	f8cd c000 	str.w	ip, [sp]
 80039d6:	23cf      	movs	r3, #207	; 0xcf
 80039d8:	4629      	mov	r1, r5
 80039da:	f7ff fb45 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039de:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 80039e2:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 80039e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80039ea:	f8a4 51b0 	strh.w	r5, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 80039ee:	ee19 1a90 	vmov	r1, s19
 80039f2:	4630      	mov	r0, r6
 80039f4:	4798      	blx	r3
 80039f6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80039fa:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 80039fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a02:	497b      	ldr	r1, [pc, #492]	; (8003bf0 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003a04:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KCM3).getText());
 8003a06:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 8003a0a:	2b00      	cmp	r3, #0
 8003a0c:	f43f af14 	beq.w	8003838 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a10:	4878      	ldr	r0, [pc, #480]	; (8003bf4 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003a12:	8803      	ldrh	r3, [r0, #0]
 8003a14:	2b06      	cmp	r3, #6
 8003a16:	f67f af18 	bls.w	800384a <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003a1a:	4a72      	ldr	r2, [pc, #456]	; (8003be4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003a1c:	2106      	movs	r1, #6
 8003a1e:	6810      	ldr	r0, [r2, #0]
 8003a20:	f005 faf8 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8003a24:	4a70      	ldr	r2, [pc, #448]	; (8003be8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003a26:	4603      	mov	r3, r0
 8003a28:	210a      	movs	r1, #10
 8003a2a:	4648      	mov	r0, r9
 8003a2c:	f015 fa50 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003a30:	4b6e      	ldr	r3, [pc, #440]	; (8003bec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003a32:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_HSR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2MWJ));
 8003a34:	ee19 0a90 	vmov	r0, s19
 8003a38:	2307      	movs	r3, #7
 8003a3a:	a90a      	add	r1, sp, #40	; 0x28
 8003a3c:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8003a40:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003a44:	f00e fff0 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a48:	ee19 1a90 	vmov	r1, s19
 8003a4c:	4638      	mov	r0, r7
 8003a4e:	f00c fe37 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003a52:	ee1a 0a10 	vmov	r0, s20
 8003a56:	f240 1201 	movw	r2, #257	; 0x101
 8003a5a:	2121      	movs	r1, #33	; 0x21
 8003a5c:	f7ff faf7 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003a60:	aa0a      	add	r2, sp, #40	; 0x28
 8003a62:	2302      	movs	r3, #2
 8003a64:	a909      	add	r1, sp, #36	; 0x24
 8003a66:	ee1a 0a10 	vmov	r0, s20
 8003a6a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003a6e:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8003a72:	f00f f9be 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003a76:	2319      	movs	r3, #25
        updateTextPosition();
 8003a78:	ee1a 0a10 	vmov	r0, s20
 8003a7c:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 8003a80:	f7ff fb3a 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003a84:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8003a88:	330c      	adds	r3, #12
 8003a8a:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 8003a8e:	ee1a 1a10 	vmov	r1, s20
 8003a92:	4638      	mov	r0, r7
        colorPressed = col;
 8003a94:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 8003a98:	f00c fe12 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(32, 60);
 8003a9c:	223c      	movs	r2, #60	; 0x3c
 8003a9e:	ee1a 0a90 	vmov	r0, s21
 8003aa2:	2120      	movs	r1, #32
 8003aa4:	f7ff fad3 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8003aa8:	ee1a 1a90 	vmov	r1, s21
 8003aac:	4630      	mov	r0, r6
        color = newColor;
 8003aae:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 8003ab2:	f8a4 5244 	strh.w	r5, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 8003ab6:	f00e fd1d 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003aba:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003abe:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8003ac2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003ac6:	4b49      	ldr	r3, [pc, #292]	; (8003bec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003ac8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8003aca:	ee1a 0a90 	vmov	r0, s21
 8003ace:	231a      	movs	r3, #26
 8003ad0:	a90a      	add	r1, sp, #40	; 0x28
 8003ad2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003ad6:	f00e ffa7 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ada:	ee1a 1a90 	vmov	r1, s21
 8003ade:	4638      	mov	r0, r7
 8003ae0:	f00c fdee 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003ae4:	230a      	movs	r3, #10
 8003ae6:	9300      	str	r3, [sp, #0]
 8003ae8:	2232      	movs	r2, #50	; 0x32
 8003aea:	23f0      	movs	r3, #240	; 0xf0
 8003aec:	4629      	mov	r1, r5
 8003aee:	4640      	mov	r0, r8
 8003af0:	f7ff faba 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003af4:	9b02      	ldr	r3, [sp, #8]
 8003af6:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003afa:	22a0      	movs	r2, #160	; 0xa0
 8003afc:	4611      	mov	r1, r2
 8003afe:	4640      	mov	r0, r8
 8003b00:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003b04:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 8003b08:	f00e fb48 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003b0c:	22a0      	movs	r2, #160	; 0xa0
 8003b0e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003b12:	4640      	mov	r0, r8
 8003b14:	f00e fb4d 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003b18:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8003b1c:	2b20      	cmp	r3, #32
 8003b1e:	d005      	beq.n	8003b2c <_ZN24Calibration_HallViewBaseC1Ev+0x494>
        lineWidthQ5 = widthQ5;
 8003b20:	2320      	movs	r3, #32
 8003b22:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 8003b26:	4640      	mov	r0, r8
 8003b28:	f00e fa42 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003b2c:	4640      	mov	r0, r8
 8003b2e:	2101      	movs	r1, #1
 8003b30:	f00e fb4a 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003b34:	4641      	mov	r1, r8
 8003b36:	4638      	mov	r0, r7
 8003b38:	f00c fdc2 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003b3c:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8003b3e:	ee18 0a10 	vmov	r0, s16
 8003b42:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8003b44:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 8003b48:	f04f 0800 	mov.w	r8, #0
 8003b4c:	2145      	movs	r1, #69	; 0x45
 8003b4e:	f7ff fa7e 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003b52:	ee18 1a10 	vmov	r1, s16
 8003b56:	4628      	mov	r0, r5
        color = newColor;
 8003b58:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 8003b5c:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8003b60:	f00e fcc8 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003b64:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003b68:	ee18 3a10 	vmov	r3, s16
 8003b6c:	333c      	adds	r3, #60	; 0x3c
 8003b6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003b72:	4e1e      	ldr	r6, [pc, #120]	; (8003bec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003b74:	960a      	str	r6, [sp, #40]	; 0x28
 8003b76:	231b      	movs	r3, #27
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8003b78:	ee18 0a10 	vmov	r0, s16
 8003b7c:	a90a      	add	r1, sp, #40	; 0x28
 8003b7e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003b82:	f00e ff51 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b86:	ee18 1a10 	vmov	r1, s16
 8003b8a:	4638      	mov	r0, r7
 8003b8c:	f00c fd98 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003b90:	ee18 0a90 	vmov	r0, s17
 8003b94:	220c      	movs	r2, #12
 8003b96:	2136      	movs	r1, #54	; 0x36
 8003b98:	f7ff fa59 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8003b9c:	ee18 1a90 	vmov	r1, s17
 8003ba0:	4628      	mov	r0, r5
        color = newColor;
 8003ba2:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 8003ba6:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8003baa:	f00e fca3 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003bae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003bb2:	ee18 3a90 	vmov	r3, s17
 8003bb6:	333c      	adds	r3, #60	; 0x3c
 8003bb8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003bbc:	231c      	movs	r3, #28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8003bbe:	ee18 0a90 	vmov	r0, s17
 8003bc2:	a90a      	add	r1, sp, #40	; 0x28
 8003bc4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003bc8:	960a      	str	r6, [sp, #40]	; 0x28
 8003bca:	f00e ff2d 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003bce:	4638      	mov	r0, r7
 8003bd0:	ee18 1a90 	vmov	r1, s17
 8003bd4:	f00c fd74 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003bd8:	4620      	mov	r0, r4
 8003bda:	b00d      	add	sp, #52	; 0x34
 8003bdc:	ecbd 8b06 	vpop	{d8-d10}
 8003be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003be4:	20012e08 	.word	0x20012e08
 8003be8:	0802c62a 	.word	0x0802c62a
 8003bec:	0802c6a0 	.word	0x0802c6a0
 8003bf0:	20012dfc 	.word	0x20012dfc
 8003bf4:	20012e00 	.word	0x20012e00

08003bf8 <_ZN23Calibration_PadViewBase17function_cali_padEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_pad()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003bf8:	4770      	bx	lr

08003bfa <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8003bfa:	4770      	bx	lr

08003bfc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003bfc:	4770      	bx	lr

08003bfe <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003bfe:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003c00:	68c2      	ldr	r2, [r0, #12]
 8003c02:	6844      	ldr	r4, [r0, #4]
 8003c04:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003c06:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003c08:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003c0c:	07d2      	lsls	r2, r2, #31
 8003c0e:	bf48      	it	mi
 8003c10:	5962      	ldrmi	r2, [r4, r5]
 8003c12:	689b      	ldr	r3, [r3, #8]
    }
 8003c14:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003c16:	bf48      	it	mi
 8003c18:	58d3      	ldrmi	r3, [r2, r3]
 8003c1a:	4718      	bx	r3

08003c1c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003c1c:	6843      	ldr	r3, [r0, #4]
 8003c1e:	b12b      	cbz	r3, 8003c2c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003c20:	6883      	ldr	r3, [r0, #8]
 8003c22:	b92b      	cbnz	r3, 8003c30 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003c24:	68c0      	ldr	r0, [r0, #12]
 8003c26:	f000 0001 	and.w	r0, r0, #1
 8003c2a:	4770      	bx	lr
 8003c2c:	4618      	mov	r0, r3
 8003c2e:	4770      	bx	lr
 8003c30:	2001      	movs	r0, #1
    }
 8003c32:	4770      	bx	lr

08003c34 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003c34:	b510      	push	{r4, lr}
 8003c36:	2110      	movs	r1, #16
 8003c38:	4604      	mov	r4, r0
 8003c3a:	f026 f850 	bl	8029cde <_ZdlPvj>
 8003c3e:	4620      	mov	r0, r4
 8003c40:	bd10      	pop	{r4, pc}
	...

08003c44 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003c44:	b510      	push	{r4, lr}
 8003c46:	4b03      	ldr	r3, [pc, #12]	; (8003c54 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8003c48:	6003      	str	r3, [r0, #0]
 8003c4a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003c4c:	f010 face 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003c50:	4620      	mov	r0, r4
 8003c52:	bd10      	pop	{r4, pc}
 8003c54:	0802c7f4 	.word	0x0802c7f4

08003c58 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003c58:	b507      	push	{r0, r1, r2, lr}
 8003c5a:	4b07      	ldr	r3, [pc, #28]	; (8003c78 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8003c5c:	6003      	str	r3, [r0, #0]
 8003c5e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003c60:	f010 fac4 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003c64:	9801      	ldr	r0, [sp, #4]
 8003c66:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8003c6a:	f026 f838 	bl	8029cde <_ZdlPvj>
 8003c6e:	9801      	ldr	r0, [sp, #4]
 8003c70:	b003      	add	sp, #12
 8003c72:	f85d fb04 	ldr.w	pc, [sp], #4
 8003c76:	bf00      	nop
 8003c78:	0802c7f4 	.word	0x0802c7f4

08003c7c <_ZN23Calibration_PadViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_PadViewBase::handleTickEvent()
{
 8003c7c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8003c7e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8003c82:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 8003c86:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003c88:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8003c8a:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003c8e:	d105      	bne.n	8003c9c <_ZN23Calibration_PadViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_pad
        function_cali_pad();
 8003c90:	6803      	ldr	r3, [r0, #0]
 8003c92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c94:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8003c96:	2300      	movs	r3, #0
 8003c98:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 8003c9c:	bd10      	pop	{r4, pc}

08003c9e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003c9e:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 8003ca2:	4288      	cmp	r0, r1
{
 8003ca4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8003ca6:	d105      	bne.n	8003cb4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003ca8:	f011 ffa2 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003cac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003cb0:	f000 be54 	b.w	800495c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8003cb4:	bd08      	pop	{r3, pc}
	...

08003cb8 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cbc:	ed2d 8b06 	vpush	{d8-d10}
 8003cc0:	4604      	mov	r4, r0
 8003cc2:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8003cc4:	46a3      	mov	fp, r4
 8003cc6:	2600      	movs	r6, #0
 8003cc8:	f013 fc12 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 8003ccc:	4b6a      	ldr	r3, [pc, #424]	; (8003e78 <_ZN23Calibration_PadViewBaseC1Ev+0x1c0>)
 8003cce:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003cd0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8003cd4:	2226      	movs	r2, #38	; 0x26
 8003cd6:	4631      	mov	r1, r6
 8003cd8:	4658      	mov	r0, fp
 8003cda:	f027 f8ec 	bl	802aeb6 <memset>
 8003cde:	4658      	mov	r0, fp
 8003ce0:	f7ff f9d6 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8003ce4:	f104 056c 	add.w	r5, r4, #108	; 0x6c
 8003ce8:	27ff      	movs	r7, #255	; 0xff
 8003cea:	4b64      	ldr	r3, [pc, #400]	; (8003e7c <_ZN23Calibration_PadViewBaseC1Ev+0x1c4>)
 8003cec:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003cee:	2226      	movs	r2, #38	; 0x26
 8003cf0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003cf4:	4631      	mov	r1, r6
 8003cf6:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8003cfa:	4628      	mov	r0, r5
 8003cfc:	66a6      	str	r6, [r4, #104]	; 0x68
 8003cfe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003d02:	f027 f8d8 	bl	802aeb6 <memset>
 8003d06:	4628      	mov	r0, r5
 8003d08:	f7ff f9c2 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8003d0c:	4b5c      	ldr	r3, [pc, #368]	; (8003e80 <_ZN23Calibration_PadViewBaseC1Ev+0x1c8>)
 8003d0e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003d10:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003d14:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003d18:	a90a      	add	r1, sp, #40	; 0x28
 8003d1a:	4628      	mov	r0, r5
 8003d1c:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003d20:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003d24:	f00f fa5b 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d28:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 8003d2c:	4650      	mov	r0, sl
 8003d2e:	f7ff fca7 	bl	8003680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003d32:	4648      	mov	r0, r9
 8003d34:	f7ff fca4 	bl	8003680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003d38:	f504 7398 	add.w	r3, r4, #304	; 0x130
 8003d3c:	4618      	mov	r0, r3
 8003d3e:	ee09 3a10 	vmov	s18, r3
 8003d42:	f7ff fc9d 	bl	8003680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003d46:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 8003d4a:	4618      	mov	r0, r3
 8003d4c:	ee09 3a90 	vmov	s19, r3
 8003d50:	f7ff fc96 	bl	8003680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003d54:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8003d58:	4618      	mov	r0, r3
 8003d5a:	ee0a 3a10 	vmov	s20, r3
 8003d5e:	f00f fb7f 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003d62:	f504 7304 	add.w	r3, r4, #528	; 0x210
 8003d66:	4618      	mov	r0, r3
 8003d68:	f504 7816 	add.w	r8, r4, #600	; 0x258
 8003d6c:	ee0a 3a90 	vmov	s21, r3
 8003d70:	f7ff f9a0 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8003d74:	4640      	mov	r0, r8
 8003d76:	f00e f8fb 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 8003d7a:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003d7e:	4618      	mov	r0, r3
 8003d80:	9302      	str	r3, [sp, #8]
 8003d82:	f7fe ff85 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003d86:	4b3f      	ldr	r3, [pc, #252]	; (8003e84 <_ZN23Calibration_PadViewBaseC1Ev+0x1cc>)
 8003d88:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 8003d8c:	3324      	adds	r3, #36	; 0x24
 8003d8e:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8003d92:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8003d96:	4618      	mov	r0, r3
 8003d98:	f8c4 62d4 	str.w	r6, [r4, #724]	; 0x2d4
 8003d9c:	ee08 3a10 	vmov	s16, r3
 8003da0:	f7ff f988 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8003da4:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003da8:	4618      	mov	r0, r3
 8003daa:	ee08 3a90 	vmov	s17, r3
 8003dae:	f7ff f981 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003db2:	4a35      	ldr	r2, [pc, #212]	; (8003e88 <_ZN23Calibration_PadViewBaseC1Ev+0x1d0>)
 8003db4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003db8:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 8003dbc:	4a33      	ldr	r2, [pc, #204]	; (8003e8c <_ZN23Calibration_PadViewBaseC1Ev+0x1d4>)
 8003dbe:	f8c3 61dc 	str.w	r6, [r3, #476]	; 0x1dc
 8003dc2:	e9c3 2675 	strd	r2, r6, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003dc6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003dca:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 8003dce:	f010 fa03 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003dd2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003dd6:	4632      	mov	r2, r6
 8003dd8:	4658      	mov	r0, fp
 8003dda:	9300      	str	r3, [sp, #0]
 8003ddc:	4631      	mov	r1, r6
 8003dde:	23f0      	movs	r3, #240	; 0xf0
 8003de0:	f7ff f942 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003de4:	1d27      	adds	r7, r4, #4
        color = newColor;
 8003de6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003dea:	66a3      	str	r3, [r4, #104]	; 0x68
 8003dec:	4659      	mov	r1, fp
 8003dee:	4638      	mov	r0, r7
 8003df0:	f00c fc66 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003df4:	4632      	mov	r2, r6
 8003df6:	4628      	mov	r0, r5
 8003df8:	4631      	mov	r1, r6
 8003dfa:	f7ff f928 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8003dfe:	f04f 0309 	mov.w	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003e02:	4628      	mov	r0, r5
 8003e04:	a90a      	add	r1, sp, #40	; 0x28
 8003e06:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003e0a:	f00f f9e8 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e0e:	4629      	mov	r1, r5
 8003e10:	4638      	mov	r0, r7
 8003e12:	f00c fc55 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_S.setPosition(0, 92, 207, 27);
 8003e16:	231b      	movs	r3, #27
 8003e18:	225c      	movs	r2, #92	; 0x5c
 8003e1a:	9300      	str	r3, [sp, #0]
 8003e1c:	4631      	mov	r1, r6
 8003e1e:	23cf      	movs	r3, #207	; 0xcf
 8003e20:	4650      	mov	r0, sl
 8003e22:	f7ff f921 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e26:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8003e2a:	f8a4 60cc 	strh.w	r6, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003e2e:	ad04      	add	r5, sp, #16
        color = newColor;
 8003e30:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003e34:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003e38:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003e3c:	4651      	mov	r1, sl
 8003e3e:	4628      	mov	r0, r5
 8003e40:	4798      	blx	r3
 8003e42:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e46:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003e4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NNGV).getText());
 8003e4e:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003e52:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e54:	4b0e      	ldr	r3, [pc, #56]	; (8003e90 <_ZN23Calibration_PadViewBaseC1Ev+0x1d8>)
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	b92b      	cbnz	r3, 8003e66 <_ZN23Calibration_PadViewBaseC1Ev+0x1ae>
 8003e5a:	4b0e      	ldr	r3, [pc, #56]	; (8003e94 <_ZN23Calibration_PadViewBaseC1Ev+0x1dc>)
 8003e5c:	4a0e      	ldr	r2, [pc, #56]	; (8003e98 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003e5e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e60:	480e      	ldr	r0, [pc, #56]	; (8003e9c <_ZN23Calibration_PadViewBaseC1Ev+0x1e4>)
 8003e62:	f026 fe23 	bl	802aaac <__assert_func>
 8003e66:	4b0e      	ldr	r3, [pc, #56]	; (8003ea0 <_ZN23Calibration_PadViewBaseC1Ev+0x1e8>)
 8003e68:	881b      	ldrh	r3, [r3, #0]
 8003e6a:	2b0a      	cmp	r3, #10
 8003e6c:	d81c      	bhi.n	8003ea8 <_ZN23Calibration_PadViewBaseC1Ev+0x1f0>
 8003e6e:	4b0d      	ldr	r3, [pc, #52]	; (8003ea4 <_ZN23Calibration_PadViewBaseC1Ev+0x1ec>)
 8003e70:	4a09      	ldr	r2, [pc, #36]	; (8003e98 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003e72:	2161      	movs	r1, #97	; 0x61
 8003e74:	e7f4      	b.n	8003e60 <_ZN23Calibration_PadViewBaseC1Ev+0x1a8>
 8003e76:	bf00      	nop
 8003e78:	0802c7f4 	.word	0x0802c7f4
 8003e7c:	0802f000 	.word	0x0802f000
 8003e80:	0802f1c8 	.word	0x0802f1c8
 8003e84:	0802ed34 	.word	0x0802ed34
 8003e88:	0802c7dc 	.word	0x0802c7dc
 8003e8c:	08003c9f 	.word	0x08003c9f
 8003e90:	20012dfc 	.word	0x20012dfc
 8003e94:	0802c4f0 	.word	0x0802c4f0
 8003e98:	0802c5f2 	.word	0x0802c5f2
 8003e9c:	0802c56d 	.word	0x0802c56d
 8003ea0:	20012e00 	.word	0x20012e00
 8003ea4:	0802c5b4 	.word	0x0802c5b4
        return texts->getText(typedTextId);
 8003ea8:	4bd8      	ldr	r3, [pc, #864]	; (800420c <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003eaa:	210a      	movs	r1, #10
 8003eac:	6818      	ldr	r0, [r3, #0]
 8003eae:	f005 f8b1 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8003eb2:	4ad7      	ldr	r2, [pc, #860]	; (8004210 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003eb4:	4603      	mov	r3, r0
 8003eb6:	210a      	movs	r1, #10
 8003eb8:	9803      	ldr	r0, [sp, #12]
 8003eba:	f015 f809 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003ebe:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8003ec0:	4bd4      	ldr	r3, [pc, #848]	; (8004214 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003ec2:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_PADR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WYEC));
 8003ec6:	4650      	mov	r0, sl
 8003ec8:	930a      	str	r3, [sp, #40]	; 0x28
 8003eca:	a90a      	add	r1, sp, #40	; 0x28
 8003ecc:	230b      	movs	r3, #11
 8003ece:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003ed2:	f00e fda9 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ed6:	4651      	mov	r1, sl
 8003ed8:	4638      	mov	r0, r7
 8003eda:	f00c fbf1 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_F.setPosition(25, 119, 207, 22);
 8003ede:	2116      	movs	r1, #22
 8003ee0:	2277      	movs	r2, #119	; 0x77
 8003ee2:	9100      	str	r1, [sp, #0]
 8003ee4:	23cf      	movs	r3, #207	; 0xcf
 8003ee6:	2119      	movs	r1, #25
 8003ee8:	4648      	mov	r0, r9
 8003eea:	f7ff f8bd 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003eee:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 8003ef2:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8003ef6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003efa:	f8a4 6118 	strh.w	r6, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8003efe:	4649      	mov	r1, r9
 8003f00:	4628      	mov	r0, r5
 8003f02:	4798      	blx	r3
 8003f04:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003f08:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8003f0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f10:	49c1      	ldr	r1, [pc, #772]	; (8004218 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8003f12:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9DMI).getText());
 8003f14:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 8003f18:	2b00      	cmp	r3, #0
 8003f1a:	d09e      	beq.n	8003e5a <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003f1c:	48bf      	ldr	r0, [pc, #764]	; (800421c <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8003f1e:	8803      	ldrh	r3, [r0, #0]
 8003f20:	2b0c      	cmp	r3, #12
 8003f22:	d9a4      	bls.n	8003e6e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8003f24:	4ab9      	ldr	r2, [pc, #740]	; (800420c <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003f26:	210c      	movs	r1, #12
 8003f28:	6810      	ldr	r0, [r2, #0]
 8003f2a:	f005 f873 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8003f2e:	4ab8      	ldr	r2, [pc, #736]	; (8004210 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003f30:	4603      	mov	r3, r0
 8003f32:	210a      	movs	r1, #10
 8003f34:	4650      	mov	r0, sl
 8003f36:	f014 ffcb 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_PADR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MDOA));
 8003f3a:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003f3e:	4bb5      	ldr	r3, [pc, #724]	; (8004214 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003f40:	930a      	str	r3, [sp, #40]	; 0x28
 8003f42:	4661      	mov	r1, ip
 8003f44:	230d      	movs	r3, #13
 8003f46:	4648      	mov	r0, r9
 8003f48:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 8003f4c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003f50:	f00e fd6a 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f54:	4649      	mov	r1, r9
 8003f56:	4638      	mov	r0, r7
 8003f58:	f00c fbb2 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_F.setPosition(25, 187, 207, 22);
 8003f5c:	f04f 0c16 	mov.w	ip, #22
 8003f60:	22bb      	movs	r2, #187	; 0xbb
 8003f62:	ee19 0a10 	vmov	r0, s18
 8003f66:	f8cd c000 	str.w	ip, [sp]
 8003f6a:	23cf      	movs	r3, #207	; 0xcf
 8003f6c:	2119      	movs	r1, #25
 8003f6e:	f7ff f87b 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f72:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 8003f76:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 8003f7a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003f7e:	f8a4 6164 	strh.w	r6, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 8003f82:	ee19 1a10 	vmov	r1, s18
 8003f86:	4628      	mov	r0, r5
 8003f88:	4798      	blx	r3
 8003f8a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003f8e:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003f92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f96:	49a0      	ldr	r1, [pc, #640]	; (8004218 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8003f98:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZTO).getText());
 8003f9a:	f504 7965 	add.w	r9, r4, #916	; 0x394
 8003f9e:	2b00      	cmp	r3, #0
 8003fa0:	f43f af5b 	beq.w	8003e5a <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003fa4:	489d      	ldr	r0, [pc, #628]	; (800421c <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8003fa6:	8803      	ldrh	r3, [r0, #0]
 8003fa8:	2b08      	cmp	r3, #8
 8003faa:	f67f af60 	bls.w	8003e6e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8003fae:	4a97      	ldr	r2, [pc, #604]	; (800420c <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003fb0:	2108      	movs	r1, #8
 8003fb2:	6810      	ldr	r0, [r2, #0]
 8003fb4:	f005 f82e 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8003fb8:	4a95      	ldr	r2, [pc, #596]	; (8004210 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003fba:	4603      	mov	r3, r0
 8003fbc:	210a      	movs	r1, #10
 8003fbe:	4648      	mov	r0, r9
 8003fc0:	f014 ff86 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003fc4:	f04f 0c09 	mov.w	ip, #9
 8003fc8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
    CALIBRATION_PADL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H127));
 8003fcc:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8003fd0:	4b90      	ldr	r3, [pc, #576]	; (8004214 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003fd2:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 8003fd6:	4661      	mov	r1, ip
 8003fd8:	ee19 0a10 	vmov	r0, s18
 8003fdc:	930a      	str	r3, [sp, #40]	; 0x28
 8003fde:	f00e fd23 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003fe2:	ee19 1a10 	vmov	r1, s18
 8003fe6:	4638      	mov	r0, r7
 8003fe8:	f00c fb6a 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_S.setPosition(0, 160, 207, 27);
 8003fec:	f04f 0c1b 	mov.w	ip, #27
 8003ff0:	22a0      	movs	r2, #160	; 0xa0
 8003ff2:	ee19 0a90 	vmov	r0, s19
 8003ff6:	f8cd c000 	str.w	ip, [sp]
 8003ffa:	23cf      	movs	r3, #207	; 0xcf
 8003ffc:	4631      	mov	r1, r6
 8003ffe:	f7ff f833 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004002:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 8004006:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 800400a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800400e:	f8a4 61b0 	strh.w	r6, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 8004012:	ee19 1a90 	vmov	r1, s19
 8004016:	4628      	mov	r0, r5
 8004018:	4798      	blx	r3
 800401a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800401e:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8004022:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004026:	497c      	ldr	r1, [pc, #496]	; (8004218 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8004028:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KIGA).getText());
 800402a:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 800402e:	2b00      	cmp	r3, #0
 8004030:	f43f af13 	beq.w	8003e5a <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004034:	4879      	ldr	r0, [pc, #484]	; (800421c <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8004036:	8803      	ldrh	r3, [r0, #0]
 8004038:	2b0f      	cmp	r3, #15
 800403a:	f67f af18 	bls.w	8003e6e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 800403e:	4a73      	ldr	r2, [pc, #460]	; (800420c <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8004040:	210f      	movs	r1, #15
 8004042:	6810      	ldr	r0, [r2, #0]
 8004044:	f004 ffe6 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8004048:	4a71      	ldr	r2, [pc, #452]	; (8004210 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 800404a:	4603      	mov	r3, r0
 800404c:	210a      	movs	r1, #10
 800404e:	4648      	mov	r0, r9
 8004050:	f014 ff3e 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004054:	4b6f      	ldr	r3, [pc, #444]	; (8004214 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8004056:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_PADL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2BW0));
 8004058:	ee19 0a90 	vmov	r0, s19
 800405c:	230e      	movs	r3, #14
 800405e:	a90a      	add	r1, sp, #40	; 0x28
 8004060:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8004064:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004068:	f00e fcde 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800406c:	ee19 1a90 	vmov	r1, s19
 8004070:	4638      	mov	r0, r7
 8004072:	f00c fb25 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8004076:	ee1a 0a10 	vmov	r0, s20
 800407a:	f240 1201 	movw	r2, #257	; 0x101
 800407e:	2121      	movs	r1, #33	; 0x21
 8004080:	f7fe ffe5 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8004084:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004086:	aa0a      	add	r2, sp, #40	; 0x28
 8004088:	a909      	add	r1, sp, #36	; 0x24
 800408a:	ee1a 0a10 	vmov	r0, s20
 800408e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004092:	2302      	movs	r3, #2
 8004094:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004098:	f00e feab 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800409c:	231f      	movs	r3, #31
        updateTextPosition();
 800409e:	ee1a 0a10 	vmov	r0, s20
 80040a2:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 80040a6:	f7ff f827 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80040aa:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 80040ae:	330c      	adds	r3, #12
 80040b0:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 80040b4:	ee1a 1a10 	vmov	r1, s20
 80040b8:	4638      	mov	r0, r7
        colorPressed = col;
 80040ba:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 80040be:	f00c faff 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(58, 60);
 80040c2:	223c      	movs	r2, #60	; 0x3c
 80040c4:	ee1a 0a90 	vmov	r0, s21
 80040c8:	213a      	movs	r1, #58	; 0x3a
 80040ca:	f7fe ffc0 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80040ce:	ee1a 1a90 	vmov	r1, s21
 80040d2:	4628      	mov	r0, r5
        color = newColor;
 80040d4:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 80040d8:	f8a4 6244 	strh.w	r6, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 80040dc:	f00e fa0a 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80040e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80040e4:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 80040e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80040ec:	4b49      	ldr	r3, [pc, #292]	; (8004214 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 80040ee:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80040f0:	ee1a 0a90 	vmov	r0, s21
 80040f4:	231e      	movs	r3, #30
 80040f6:	a90a      	add	r1, sp, #40	; 0x28
 80040f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80040fc:	f00e fc94 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004100:	ee1a 1a90 	vmov	r1, s21
 8004104:	4638      	mov	r0, r7
 8004106:	f00c fadb 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800410a:	230a      	movs	r3, #10
 800410c:	9300      	str	r3, [sp, #0]
 800410e:	2232      	movs	r2, #50	; 0x32
 8004110:	23f0      	movs	r3, #240	; 0xf0
 8004112:	4631      	mov	r1, r6
 8004114:	4640      	mov	r0, r8
 8004116:	f7fe ffa7 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 800411a:	9b02      	ldr	r3, [sp, #8]
 800411c:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004120:	22a0      	movs	r2, #160	; 0xa0
 8004122:	4611      	mov	r1, r2
 8004124:	4640      	mov	r0, r8
 8004126:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800412a:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 800412e:	f00e f835 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004132:	22a0      	movs	r2, #160	; 0xa0
 8004134:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8004138:	4640      	mov	r0, r8
 800413a:	f00e f83a 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800413e:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8004142:	2b20      	cmp	r3, #32
 8004144:	d005      	beq.n	8004152 <_ZN23Calibration_PadViewBaseC1Ev+0x49a>
        lineWidthQ5 = widthQ5;
 8004146:	2320      	movs	r3, #32
 8004148:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 800414c:	4640      	mov	r0, r8
 800414e:	f00d ff2f 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004152:	4640      	mov	r0, r8
 8004154:	2101      	movs	r1, #1
 8004156:	f00e f837 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800415a:	4641      	mov	r1, r8
 800415c:	4638      	mov	r0, r7
 800415e:	f00c faaf 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004162:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8004164:	ee18 0a10 	vmov	r0, s16
 8004168:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 800416a:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 800416e:	f04f 0800 	mov.w	r8, #0
 8004172:	2145      	movs	r1, #69	; 0x45
 8004174:	f7fe ff6b 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004178:	ee18 1a10 	vmov	r1, s16
 800417c:	4628      	mov	r0, r5
        color = newColor;
 800417e:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 8004182:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8004186:	f00e f9b5 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800418a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800418e:	ee18 3a10 	vmov	r3, s16
 8004192:	333c      	adds	r3, #60	; 0x3c
 8004194:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004198:	4e1e      	ldr	r6, [pc, #120]	; (8004214 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 800419a:	960a      	str	r6, [sp, #40]	; 0x28
 800419c:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800419e:	ee18 0a10 	vmov	r0, s16
 80041a2:	a90a      	add	r1, sp, #40	; 0x28
 80041a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80041a8:	f00e fc3e 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80041ac:	ee18 1a10 	vmov	r1, s16
 80041b0:	4638      	mov	r0, r7
 80041b2:	f00c fa85 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80041b6:	ee18 0a90 	vmov	r0, s17
 80041ba:	220c      	movs	r2, #12
 80041bc:	2136      	movs	r1, #54	; 0x36
 80041be:	f7fe ff46 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80041c2:	ee18 1a90 	vmov	r1, s17
 80041c6:	4628      	mov	r0, r5
        color = newColor;
 80041c8:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 80041cc:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 80041d0:	f00e f990 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80041d4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80041d8:	ee18 3a90 	vmov	r3, s17
 80041dc:	333c      	adds	r3, #60	; 0x3c
 80041de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80041e2:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80041e4:	ee18 0a90 	vmov	r0, s17
 80041e8:	a90a      	add	r1, sp, #40	; 0x28
 80041ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80041ee:	960a      	str	r6, [sp, #40]	; 0x28
 80041f0:	f00e fc1a 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80041f4:	4638      	mov	r0, r7
 80041f6:	ee18 1a90 	vmov	r1, s17
 80041fa:	f00c fa61 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80041fe:	4620      	mov	r0, r4
 8004200:	b00d      	add	sp, #52	; 0x34
 8004202:	ecbd 8b06 	vpop	{d8-d10}
 8004206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800420a:	bf00      	nop
 800420c:	20012e08 	.word	0x20012e08
 8004210:	0802c62a 	.word	0x0802c62a
 8004214:	0802c6a0 	.word	0x0802c6a0
 8004218:	20012dfc 	.word	0x20012dfc
 800421c:	20012e00 	.word	0x20012e00

08004220 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004220:	4770      	bx	lr

08004222 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8004222:	4770      	bx	lr

08004224 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004224:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004228:	6808      	ldr	r0, [r1, #0]
 800422a:	6849      	ldr	r1, [r1, #4]
 800422c:	c303      	stmia	r3!, {r0, r1}
    }
 800422e:	4770      	bx	lr

08004230 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004230:	4770      	bx	lr

08004232 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004232:	4770      	bx	lr

08004234 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004234:	6041      	str	r1, [r0, #4]
    }
 8004236:	4770      	bx	lr

08004238 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004238:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800423a:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 800423c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004240:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004244:	8002      	strh	r2, [r0, #0]
 8004246:	8042      	strh	r2, [r0, #2]
 8004248:	8084      	strh	r4, [r0, #4]
 800424a:	80c1      	strh	r1, [r0, #6]
        }
 800424c:	bd10      	pop	{r4, pc}

0800424e <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800424e:	4770      	bx	lr

08004250 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004250:	4770      	bx	lr
	...

08004254 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004254:	4b06      	ldr	r3, [pc, #24]	; (8004270 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004256:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800425a:	2300      	movs	r3, #0
 800425c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004260:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004264:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004268:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 800426c:	4770      	bx	lr
 800426e:	bf00      	nop
 8004270:	08004611 	.word	0x08004611

08004274 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004274:	2301      	movs	r3, #1
 8004276:	7203      	strb	r3, [r0, #8]
    }
 8004278:	4770      	bx	lr

0800427a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800427a:	4770      	bx	lr

0800427c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800427c:	4770      	bx	lr

0800427e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800427e:	4770      	bx	lr

08004280 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004280:	4770      	bx	lr

08004282 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8004282:	4770      	bx	lr

08004284 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004284:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004286:	6840      	ldr	r0, [r0, #4]
 8004288:	6803      	ldr	r3, [r0, #0]
 800428a:	3110      	adds	r1, #16
 800428c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800428e:	4718      	bx	r3

08004290 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004290:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8004292:	6840      	ldr	r0, [r0, #4]
 8004294:	6803      	ldr	r3, [r0, #0]
 8004296:	3110      	adds	r1, #16
 8004298:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800429a:	4718      	bx	r3

0800429c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800429c:	4770      	bx	lr

0800429e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800429e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 80042a0:	6840      	ldr	r0, [r0, #4]
 80042a2:	6803      	ldr	r3, [r0, #0]
 80042a4:	3110      	adds	r1, #16
 80042a6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80042a8:	4718      	bx	r3

080042aa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 80042aa:	4601      	mov	r1, r0
        screenContainer->add(solid);
 80042ac:	6840      	ldr	r0, [r0, #4]
 80042ae:	6803      	ldr	r3, [r0, #0]
 80042b0:	3110      	adds	r1, #16
 80042b2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80042b4:	4718      	bx	r3

080042b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 80042b6:	4770      	bx	lr

080042b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80042b8:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80042ba:	68c2      	ldr	r2, [r0, #12]
 80042bc:	6841      	ldr	r1, [r0, #4]
 80042be:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80042c0:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80042c2:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80042c6:	07d2      	lsls	r2, r2, #31
 80042c8:	bf48      	it	mi
 80042ca:	590a      	ldrmi	r2, [r1, r4]
 80042cc:	689b      	ldr	r3, [r3, #8]
    }
 80042ce:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80042d2:	bf48      	it	mi
 80042d4:	58d3      	ldrmi	r3, [r2, r3]
 80042d6:	4718      	bx	r3

080042d8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80042d8:	6843      	ldr	r3, [r0, #4]
 80042da:	b12b      	cbz	r3, 80042e8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80042dc:	6883      	ldr	r3, [r0, #8]
 80042de:	b92b      	cbnz	r3, 80042ec <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80042e0:	68c0      	ldr	r0, [r0, #12]
 80042e2:	f000 0001 	and.w	r0, r0, #1
 80042e6:	4770      	bx	lr
 80042e8:	4618      	mov	r0, r3
 80042ea:	4770      	bx	lr
 80042ec:	2001      	movs	r0, #1
    }
 80042ee:	4770      	bx	lr

080042f0 <_ZN8touchgfx12NoTransitionD0Ev>:
 80042f0:	b510      	push	{r4, lr}
 80042f2:	210c      	movs	r1, #12
 80042f4:	4604      	mov	r4, r0
 80042f6:	f025 fcf2 	bl	8029cde <_ZdlPvj>
 80042fa:	4620      	mov	r0, r4
 80042fc:	bd10      	pop	{r4, pc}

080042fe <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80042fe:	b510      	push	{r4, lr}
 8004300:	2110      	movs	r1, #16
 8004302:	4604      	mov	r4, r0
 8004304:	f025 fceb 	bl	8029cde <_ZdlPvj>
 8004308:	4620      	mov	r0, r4
 800430a:	bd10      	pop	{r4, pc}

0800430c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800430c:	b510      	push	{r4, lr}
 800430e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8004312:	4604      	mov	r4, r0
 8004314:	f025 fce3 	bl	8029cde <_ZdlPvj>
 8004318:	4620      	mov	r0, r4
 800431a:	bd10      	pop	{r4, pc}

0800431c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 800431c:	b510      	push	{r4, lr}
 800431e:	2138      	movs	r1, #56	; 0x38
 8004320:	4604      	mov	r4, r0
 8004322:	f025 fcdc 	bl	8029cde <_ZdlPvj>
 8004326:	4620      	mov	r0, r4
 8004328:	bd10      	pop	{r4, pc}

0800432a <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 800432a:	b510      	push	{r4, lr}
 800432c:	2128      	movs	r1, #40	; 0x28
 800432e:	4604      	mov	r4, r0
 8004330:	f025 fcd5 	bl	8029cde <_ZdlPvj>
 8004334:	4620      	mov	r0, r4
 8004336:	bd10      	pop	{r4, pc}

08004338 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8004338:	b510      	push	{r4, lr}
 800433a:	2138      	movs	r1, #56	; 0x38
 800433c:	4604      	mov	r4, r0
 800433e:	f025 fcce 	bl	8029cde <_ZdlPvj>
 8004342:	4620      	mov	r0, r4
 8004344:	bd10      	pop	{r4, pc}

08004346 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8004346:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8004348:	f011 fc52 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
 800434c:	6803      	ldr	r3, [r0, #0]
    }
 800434e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8004352:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004354:	4718      	bx	r3
	...

08004358 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004358:	b513      	push	{r0, r1, r4, lr}
 800435a:	4604      	mov	r4, r0
        animationCounter++;
 800435c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800435e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004360:	3001      	adds	r0, #1
 8004362:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004364:	4298      	cmp	r0, r3
        animationCounter++;
 8004366:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004368:	d905      	bls.n	8004376 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 800436a:	2301      	movs	r3, #1
 800436c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800436e:	2300      	movs	r3, #0
 8004370:	72a3      	strb	r3, [r4, #10]
    }
 8004372:	b002      	add	sp, #8
 8004374:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004376:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800437a:	2100      	movs	r1, #0
 800437c:	f013 fa6a 	bl	8017854 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004380:	f010 0201 	ands.w	r2, r0, #1
 8004384:	b283      	uxth	r3, r0
 8004386:	d12a      	bne.n	80043de <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004388:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800438a:	4a19      	ldr	r2, [pc, #100]	; (80043f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 800438c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004390:	89e3      	ldrh	r3, [r4, #14]
 8004392:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004394:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004398:	82a0      	strh	r0, [r4, #20]
 800439a:	2000      	movs	r0, #0
 800439c:	1ad2      	subs	r2, r2, r3
 800439e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 80043a2:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 80043a4:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 80043a6:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80043a8:	4a12      	ldr	r2, [pc, #72]	; (80043f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 80043aa:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80043ae:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80043b0:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 80043b4:	691b      	ldr	r3, [r3, #16]
 80043b6:	f8ad 1000 	strh.w	r1, [sp]
 80043ba:	f8ad 2006 	strh.w	r2, [sp, #6]
 80043be:	4669      	mov	r1, sp
 80043c0:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80043c2:	7aa3      	ldrb	r3, [r4, #10]
 80043c4:	2b01      	cmp	r3, #1
 80043c6:	d1d4      	bne.n	8004372 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 80043c8:	4b0b      	ldr	r3, [pc, #44]	; (80043f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 80043ca:	781b      	ldrb	r3, [r3, #0]
 80043cc:	2b00      	cmp	r3, #0
 80043ce:	d0d0      	beq.n	8004372 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80043d0:	f011 fc0e 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80043d4:	b002      	add	sp, #8
 80043d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80043da:	f011 bc0f 	b.w	8015bfc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80043de:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80043e2:	2800      	cmp	r0, #0
 80043e4:	bfd8      	it	le
 80043e6:	460a      	movle	r2, r1
 80043e8:	4413      	add	r3, r2
 80043ea:	81e3      	strh	r3, [r4, #14]
 80043ec:	e7cd      	b.n	800438a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80043ee:	bf00      	nop
 80043f0:	20012d98 	.word	0x20012d98
 80043f4:	20012d9a 	.word	0x20012d9a
 80043f8:	20012da2 	.word	0x20012da2

080043fc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80043fc:	b510      	push	{r4, lr}
 80043fe:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004400:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8004404:	b158      	cbz	r0, 800441e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004406:	6803      	ldr	r3, [r0, #0]
 8004408:	68db      	ldr	r3, [r3, #12]
 800440a:	4798      	blx	r3
 800440c:	b138      	cbz	r0, 800441e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800440e:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8004412:	6803      	ldr	r3, [r0, #0]
 8004414:	689b      	ldr	r3, [r3, #8]
 8004416:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004418:	2300      	movs	r3, #0
 800441a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800441e:	bd10      	pop	{r4, pc}

08004420 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8004420:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004424:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004428:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800442a:	68a8      	ldr	r0, [r5, #8]
 800442c:	6803      	ldr	r3, [r0, #0]
 800442e:	6a1b      	ldr	r3, [r3, #32]
 8004430:	4798      	blx	r3
 8004432:	2897      	cmp	r0, #151	; 0x97
 8004434:	d805      	bhi.n	8004442 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8004436:	4b46      	ldr	r3, [pc, #280]	; (8004550 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8004438:	4a46      	ldr	r2, [pc, #280]	; (8004554 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800443a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800443c:	4846      	ldr	r0, [pc, #280]	; (8004558 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 800443e:	f026 fb35 	bl	802aaac <__assert_func>
 8004442:	6868      	ldr	r0, [r5, #4]
 8004444:	6803      	ldr	r3, [r0, #0]
 8004446:	6a1b      	ldr	r3, [r3, #32]
 8004448:	4798      	blx	r3
 800444a:	280f      	cmp	r0, #15
 800444c:	d803      	bhi.n	8004456 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 800444e:	4b43      	ldr	r3, [pc, #268]	; (800455c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8004450:	4a40      	ldr	r2, [pc, #256]	; (8004554 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004452:	21a4      	movs	r1, #164	; 0xa4
 8004454:	e7f2      	b.n	800443c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004456:	68e8      	ldr	r0, [r5, #12]
 8004458:	6803      	ldr	r3, [r0, #0]
 800445a:	6a1b      	ldr	r3, [r3, #32]
 800445c:	4798      	blx	r3
 800445e:	280b      	cmp	r0, #11
 8004460:	d803      	bhi.n	800446a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8004462:	4b3f      	ldr	r3, [pc, #252]	; (8004560 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8004464:	4a3b      	ldr	r2, [pc, #236]	; (8004554 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004466:	21a5      	movs	r1, #165	; 0xa5
 8004468:	e7e8      	b.n	800443c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800446a:	f011 fbc1 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800446e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004568 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8004472:	3004      	adds	r0, #4
 8004474:	f011 fc22 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004478:	f8d9 0000 	ldr.w	r0, [r9]
 800447c:	b110      	cbz	r0, 8004484 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800447e:	6803      	ldr	r3, [r0, #0]
 8004480:	68db      	ldr	r3, [r3, #12]
 8004482:	4798      	blx	r3
    if (*currentTrans)
 8004484:	f8d9 0000 	ldr.w	r0, [r9]
 8004488:	b110      	cbz	r0, 8004490 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800448a:	6803      	ldr	r3, [r0, #0]
 800448c:	681b      	ldr	r3, [r3, #0]
 800448e:	4798      	blx	r3
    if (*currentScreen)
 8004490:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800456c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8004494:	f8d8 0000 	ldr.w	r0, [r8]
 8004498:	b110      	cbz	r0, 80044a0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800449a:	6803      	ldr	r3, [r0, #0]
 800449c:	695b      	ldr	r3, [r3, #20]
 800449e:	4798      	blx	r3
    if (*currentPresenter)
 80044a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80044a4:	b110      	cbz	r0, 80044ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80044a6:	6803      	ldr	r3, [r0, #0]
 80044a8:	685b      	ldr	r3, [r3, #4]
 80044aa:	4798      	blx	r3
    if (*currentScreen)
 80044ac:	f8d8 0000 	ldr.w	r0, [r8]
 80044b0:	b110      	cbz	r0, 80044b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80044b2:	6803      	ldr	r3, [r0, #0]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	4798      	blx	r3
    if (*currentPresenter)
 80044b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80044bc:	b110      	cbz	r0, 80044c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80044be:	6803      	ldr	r3, [r0, #0]
 80044c0:	689b      	ldr	r3, [r3, #8]
 80044c2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80044c4:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80044c6:	6803      	ldr	r3, [r0, #0]
 80044c8:	2100      	movs	r1, #0
 80044ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044cc:	4798      	blx	r3
        : screenContainer(0), done(false)
 80044ce:	f04f 0b00 	mov.w	fp, #0
 80044d2:	4b24      	ldr	r3, [pc, #144]	; (8004564 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 80044d4:	6003      	str	r3, [r0, #0]
 80044d6:	4604      	mov	r4, r0
 80044d8:	f8c0 b004 	str.w	fp, [r0, #4]
 80044dc:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80044e0:	68a8      	ldr	r0, [r5, #8]
 80044e2:	6803      	ldr	r3, [r0, #0]
 80044e4:	4659      	mov	r1, fp
 80044e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044e8:	4798      	blx	r3
 80044ea:	4606      	mov	r6, r0
 80044ec:	f005 fadc 	bl	8009aa8 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80044f0:	6868      	ldr	r0, [r5, #4]
 80044f2:	6803      	ldr	r3, [r0, #0]
 80044f4:	4659      	mov	r1, fp
 80044f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044f8:	4798      	blx	r3
 80044fa:	4631      	mov	r1, r6
 80044fc:	4605      	mov	r5, r0
 80044fe:	f005 faaf 	bl	8009a60 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8004502:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004506:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800450a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800450e:	b1e5      	cbz	r5, 800454a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8004510:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004512:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004516:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004518:	f8c5 a008 	str.w	sl, [r5, #8]
 800451c:	4630      	mov	r0, r6
 800451e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004520:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004522:	4798      	blx	r3
    newPresenter->activate();
 8004524:	682b      	ldr	r3, [r5, #0]
 8004526:	4628      	mov	r0, r5
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800452c:	4621      	mov	r1, r4
 800452e:	4630      	mov	r0, r6
 8004530:	f013 f98a 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004534:	6823      	ldr	r3, [r4, #0]
 8004536:	4620      	mov	r0, r4
 8004538:	691b      	ldr	r3, [r3, #16]
 800453a:	4798      	blx	r3
    newTransition->invalidate();
 800453c:	6823      	ldr	r3, [r4, #0]
 800453e:	695b      	ldr	r3, [r3, #20]
 8004540:	4620      	mov	r0, r4
}
 8004542:	b001      	add	sp, #4
 8004544:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004548:	4718      	bx	r3
    model->bind(newPresenter);
 800454a:	462b      	mov	r3, r5
 800454c:	e7e1      	b.n	8004512 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 800454e:	bf00      	nop
 8004550:	0802c824 	.word	0x0802c824
 8004554:	0802c8b2 	.word	0x0802c8b2
 8004558:	0802c9c0 	.word	0x0802c9c0
 800455c:	0802ca07 	.word	0x0802ca07
 8004560:	0802caaa 	.word	0x0802caaa
 8004564:	0802dec8 	.word	0x0802dec8
 8004568:	20012dec 	.word	0x20012dec
 800456c:	20012de8 	.word	0x20012de8

08004570 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004570:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004572:	4604      	mov	r4, r0
        animationCounter++;
 8004574:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004576:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004578:	3001      	adds	r0, #1
 800457a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800457c:	4298      	cmp	r0, r3
        animationCounter++;
 800457e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004580:	d905      	bls.n	800458e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8004582:	2301      	movs	r3, #1
 8004584:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004586:	2300      	movs	r3, #0
 8004588:	72a3      	strb	r3, [r4, #10]
    }
 800458a:	b003      	add	sp, #12
 800458c:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800458e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004592:	2100      	movs	r1, #0
 8004594:	f013 f95e 	bl	8017854 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004598:	f010 0201 	ands.w	r2, r0, #1
 800459c:	b283      	uxth	r3, r0
 800459e:	d128      	bne.n	80045f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80045a0:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80045a2:	4b18      	ldr	r3, [pc, #96]	; (8004604 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80045a4:	4818      	ldr	r0, [pc, #96]	; (8004608 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80045a6:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80045a8:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80045aa:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80045ac:	f9b0 0000 	ldrsh.w	r0, [r0]
 80045b0:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80045b4:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80045b6:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80045b8:	442b      	add	r3, r5
 80045ba:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80045bc:	b212      	sxth	r2, r2
 80045be:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80045c2:	6803      	ldr	r3, [r0, #0]
 80045c4:	8322      	strh	r2, [r4, #24]
 80045c6:	f8ad 2000 	strh.w	r2, [sp]
 80045ca:	2200      	movs	r2, #0
 80045cc:	691b      	ldr	r3, [r3, #16]
 80045ce:	f8ad 2002 	strh.w	r2, [sp, #2]
 80045d2:	4669      	mov	r1, sp
 80045d4:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80045d6:	7aa3      	ldrb	r3, [r4, #10]
 80045d8:	2b01      	cmp	r3, #1
 80045da:	d1d6      	bne.n	800458a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80045dc:	4b0b      	ldr	r3, [pc, #44]	; (800460c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80045de:	781b      	ldrb	r3, [r3, #0]
 80045e0:	2b00      	cmp	r3, #0
 80045e2:	d0d2      	beq.n	800458a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80045e4:	f011 fb04 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80045e8:	b003      	add	sp, #12
 80045ea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80045ee:	f011 bb05 	b.w	8015bfc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80045f2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80045f6:	2800      	cmp	r0, #0
 80045f8:	bfd8      	it	le
 80045fa:	460a      	movle	r2, r1
 80045fc:	4413      	add	r3, r2
 80045fe:	81e3      	strh	r3, [r4, #14]
 8004600:	e7cf      	b.n	80045a2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8004602:	bf00      	nop
 8004604:	20012d98 	.word	0x20012d98
 8004608:	20012d9a 	.word	0x20012d9a
 800460c:	20012da2 	.word	0x20012da2

08004610 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8004610:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004614:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004618:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800461a:	68a8      	ldr	r0, [r5, #8]
 800461c:	6803      	ldr	r3, [r0, #0]
 800461e:	6a1b      	ldr	r3, [r3, #32]
 8004620:	4798      	blx	r3
 8004622:	f241 137b 	movw	r3, #4475	; 0x117b
 8004626:	4298      	cmp	r0, r3
 8004628:	d805      	bhi.n	8004636 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 800462a:	4b46      	ldr	r3, [pc, #280]	; (8004744 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 800462c:	4a46      	ldr	r2, [pc, #280]	; (8004748 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800462e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004630:	4846      	ldr	r0, [pc, #280]	; (800474c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8004632:	f026 fa3b 	bl	802aaac <__assert_func>
 8004636:	6868      	ldr	r0, [r5, #4]
 8004638:	6803      	ldr	r3, [r0, #0]
 800463a:	6a1b      	ldr	r3, [r3, #32]
 800463c:	4798      	blx	r3
 800463e:	280f      	cmp	r0, #15
 8004640:	d803      	bhi.n	800464a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8004642:	4b43      	ldr	r3, [pc, #268]	; (8004750 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8004644:	4a40      	ldr	r2, [pc, #256]	; (8004748 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004646:	21a4      	movs	r1, #164	; 0xa4
 8004648:	e7f2      	b.n	8004630 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800464a:	68e8      	ldr	r0, [r5, #12]
 800464c:	6803      	ldr	r3, [r0, #0]
 800464e:	6a1b      	ldr	r3, [r3, #32]
 8004650:	4798      	blx	r3
 8004652:	280b      	cmp	r0, #11
 8004654:	d803      	bhi.n	800465e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8004656:	4b3f      	ldr	r3, [pc, #252]	; (8004754 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8004658:	4a3b      	ldr	r2, [pc, #236]	; (8004748 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800465a:	21a5      	movs	r1, #165	; 0xa5
 800465c:	e7e8      	b.n	8004630 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800465e:	f011 fac7 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004662:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800475c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8004666:	3004      	adds	r0, #4
 8004668:	f011 fb28 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800466c:	f8d9 0000 	ldr.w	r0, [r9]
 8004670:	b110      	cbz	r0, 8004678 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8004672:	6803      	ldr	r3, [r0, #0]
 8004674:	68db      	ldr	r3, [r3, #12]
 8004676:	4798      	blx	r3
    if (*currentTrans)
 8004678:	f8d9 0000 	ldr.w	r0, [r9]
 800467c:	b110      	cbz	r0, 8004684 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800467e:	6803      	ldr	r3, [r0, #0]
 8004680:	681b      	ldr	r3, [r3, #0]
 8004682:	4798      	blx	r3
    if (*currentScreen)
 8004684:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004760 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004688:	f8d8 0000 	ldr.w	r0, [r8]
 800468c:	b110      	cbz	r0, 8004694 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800468e:	6803      	ldr	r3, [r0, #0]
 8004690:	695b      	ldr	r3, [r3, #20]
 8004692:	4798      	blx	r3
    if (*currentPresenter)
 8004694:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004698:	b110      	cbz	r0, 80046a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800469a:	6803      	ldr	r3, [r0, #0]
 800469c:	685b      	ldr	r3, [r3, #4]
 800469e:	4798      	blx	r3
    if (*currentScreen)
 80046a0:	f8d8 0000 	ldr.w	r0, [r8]
 80046a4:	b110      	cbz	r0, 80046ac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80046a6:	6803      	ldr	r3, [r0, #0]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	4798      	blx	r3
    if (*currentPresenter)
 80046ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046b0:	b110      	cbz	r0, 80046b8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80046b2:	6803      	ldr	r3, [r0, #0]
 80046b4:	689b      	ldr	r3, [r3, #8]
 80046b6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80046b8:	68e8      	ldr	r0, [r5, #12]
 80046ba:	6803      	ldr	r3, [r0, #0]
 80046bc:	2100      	movs	r1, #0
 80046be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046c0:	4798      	blx	r3
 80046c2:	f04f 0b00 	mov.w	fp, #0
 80046c6:	4b24      	ldr	r3, [pc, #144]	; (8004758 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 80046c8:	6003      	str	r3, [r0, #0]
 80046ca:	4604      	mov	r4, r0
 80046cc:	f8c0 b004 	str.w	fp, [r0, #4]
 80046d0:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046d4:	68a8      	ldr	r0, [r5, #8]
 80046d6:	6803      	ldr	r3, [r0, #0]
 80046d8:	4659      	mov	r1, fp
 80046da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046dc:	4798      	blx	r3
 80046de:	4606      	mov	r6, r0
 80046e0:	f004 fe8e 	bl	8009400 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046e4:	6868      	ldr	r0, [r5, #4]
 80046e6:	6803      	ldr	r3, [r0, #0]
 80046e8:	4659      	mov	r1, fp
 80046ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046ec:	4798      	blx	r3
 80046ee:	4631      	mov	r1, r6
 80046f0:	4605      	mov	r5, r0
 80046f2:	f004 fe5f 	bl	80093b4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80046f6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80046fa:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046fe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004702:	b1e5      	cbz	r5, 800473e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8004704:	1d2b      	adds	r3, r5, #4
 8004706:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800470a:	6833      	ldr	r3, [r6, #0]
 800470c:	f8c5 a008 	str.w	sl, [r5, #8]
 8004710:	4630      	mov	r0, r6
 8004712:	68db      	ldr	r3, [r3, #12]
 8004714:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004716:	4798      	blx	r3
    newPresenter->activate();
 8004718:	682b      	ldr	r3, [r5, #0]
 800471a:	4628      	mov	r0, r5
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004720:	4621      	mov	r1, r4
 8004722:	4630      	mov	r0, r6
 8004724:	f013 f890 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004728:	6823      	ldr	r3, [r4, #0]
 800472a:	4620      	mov	r0, r4
 800472c:	691b      	ldr	r3, [r3, #16]
 800472e:	4798      	blx	r3
    newTransition->invalidate();
 8004730:	6823      	ldr	r3, [r4, #0]
 8004732:	695b      	ldr	r3, [r3, #20]
 8004734:	4620      	mov	r0, r4
}
 8004736:	b001      	add	sp, #4
 8004738:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800473c:	4718      	bx	r3
    model->bind(newPresenter);
 800473e:	462b      	mov	r3, r5
 8004740:	e7e1      	b.n	8004706 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8004742:	bf00      	nop
 8004744:	0802c824 	.word	0x0802c824
 8004748:	0802cb4d 	.word	0x0802cb4d
 800474c:	0802c9c0 	.word	0x0802c9c0
 8004750:	0802ca07 	.word	0x0802ca07
 8004754:	0802caaa 	.word	0x0802caaa
 8004758:	0802dec8 	.word	0x0802dec8
 800475c:	20012dec 	.word	0x20012dec
 8004760:	20012de8 	.word	0x20012de8

08004764 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004764:	4b04      	ldr	r3, [pc, #16]	; (8004778 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800476c:	b10a      	cbz	r2, 8004772 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800476e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004770:	b900      	cbnz	r0, 8004774 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8004772:	6898      	ldr	r0, [r3, #8]
    }
 8004774:	4770      	bx	lr
 8004776:	bf00      	nop
 8004778:	20012da4 	.word	0x20012da4

0800477c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800477c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800477e:	4604      	mov	r4, r0
 8004780:	4617      	mov	r7, r2
 8004782:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004784:	f011 fb68 	bl	8015e58 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004788:	4b10      	ldr	r3, [pc, #64]	; (80047cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800478a:	601c      	str	r4, [r3, #0]
      model(m)
 800478c:	4b10      	ldr	r3, [pc, #64]	; (80047d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800478e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004790:	4b10      	ldr	r3, [pc, #64]	; (80047d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8004792:	2500      	movs	r5, #0
 8004794:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004798:	4b0f      	ldr	r3, [pc, #60]	; (80047d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800479a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800479e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80047a0:	6803      	ldr	r3, [r0, #0]
 80047a2:	2101      	movs	r1, #1
 80047a4:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80047a6:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 80047aa:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80047ae:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80047b0:	4628      	mov	r0, r5
 80047b2:	f004 fbf3 	bl	8008f9c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80047b6:	f7ff ffd5 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 80047ba:	f01a ff12 	bl	801f5e2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80047be:	f7ff ffd1 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 80047c2:	f01a ff89 	bl	801f6d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80047c6:	4620      	mov	r0, r4
 80047c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80047ca:	bf00      	nop
 80047cc:	20012df8 	.word	0x20012df8
 80047d0:	0802de74 	.word	0x0802de74
 80047d4:	0802de5c 	.word	0x0802de5c
 80047d8:	20012da4 	.word	0x20012da4

080047dc <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80047dc:	4b06      	ldr	r3, [pc, #24]	; (80047f8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 80047de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047e2:	2300      	movs	r3, #0
 80047e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047f4:	4770      	bx	lr
 80047f6:	bf00      	nop
 80047f8:	08004611 	.word	0x08004611

080047fc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80047fc:	4b06      	ldr	r3, [pc, #24]	; (8004818 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80047fe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004802:	2300      	movs	r3, #0
 8004804:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004808:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800480c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004810:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004814:	4770      	bx	lr
 8004816:	bf00      	nop
 8004818:	08004e21 	.word	0x08004e21

0800481c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 800481c:	4b06      	ldr	r3, [pc, #24]	; (8004838 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 800481e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004822:	2300      	movs	r3, #0
 8004824:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004828:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800482c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004830:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004834:	4770      	bx	lr
 8004836:	bf00      	nop
 8004838:	08005c45 	.word	0x08005c45

0800483c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 800483c:	4b06      	ldr	r3, [pc, #24]	; (8004858 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 800483e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004842:	2300      	movs	r3, #0
 8004844:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004848:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800484c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004850:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004854:	4770      	bx	lr
 8004856:	bf00      	nop
 8004858:	08004ce1 	.word	0x08004ce1

0800485c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 800485c:	4b06      	ldr	r3, [pc, #24]	; (8004878 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 800485e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004862:	2300      	movs	r3, #0
 8004864:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004868:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800486c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004870:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004874:	4770      	bx	lr
 8004876:	bf00      	nop
 8004878:	08005b05 	.word	0x08005b05

0800487c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 800487c:	4b06      	ldr	r3, [pc, #24]	; (8004898 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 800487e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004882:	2300      	movs	r3, #0
 8004884:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004888:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800488c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004890:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004894:	4770      	bx	lr
 8004896:	bf00      	nop
 8004898:	080059c5 	.word	0x080059c5

0800489c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 800489c:	4b06      	ldr	r3, [pc, #24]	; (80048b8 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800489e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048a2:	2300      	movs	r3, #0
 80048a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048b4:	4770      	bx	lr
 80048b6:	bf00      	nop
 80048b8:	08005885 	.word	0x08005885

080048bc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 80048bc:	4b06      	ldr	r3, [pc, #24]	; (80048d8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 80048be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048c2:	2300      	movs	r3, #0
 80048c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048d4:	4770      	bx	lr
 80048d6:	bf00      	nop
 80048d8:	08005745 	.word	0x08005745

080048dc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 80048dc:	4b06      	ldr	r3, [pc, #24]	; (80048f8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 80048de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048e2:	2300      	movs	r3, #0
 80048e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048f4:	4770      	bx	lr
 80048f6:	bf00      	nop
 80048f8:	08004ba1 	.word	0x08004ba1

080048fc <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80048fc:	4b06      	ldr	r3, [pc, #24]	; (8004918 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80048fe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004902:	2300      	movs	r3, #0
 8004904:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004908:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800490c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004910:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004914:	4770      	bx	lr
 8004916:	bf00      	nop
 8004918:	08005605 	.word	0x08005605

0800491c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 800491c:	4b06      	ldr	r3, [pc, #24]	; (8004938 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 800491e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004922:	2300      	movs	r3, #0
 8004924:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004928:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800492c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004930:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004934:	4770      	bx	lr
 8004936:	bf00      	nop
 8004938:	080054c5 	.word	0x080054c5

0800493c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 800493c:	4b06      	ldr	r3, [pc, #24]	; (8004958 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 800493e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004942:	2300      	movs	r3, #0
 8004944:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004948:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800494c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004950:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004954:	4770      	bx	lr
 8004956:	bf00      	nop
 8004958:	08005385 	.word	0x08005385

0800495c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 800495c:	4b06      	ldr	r3, [pc, #24]	; (8004978 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 800495e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004962:	2300      	movs	r3, #0
 8004964:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004968:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800496c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004970:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004974:	4770      	bx	lr
 8004976:	bf00      	nop
 8004978:	08004a61 	.word	0x08004a61

0800497c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 800497c:	4b06      	ldr	r3, [pc, #24]	; (8004998 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 800497e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004982:	2300      	movs	r3, #0
 8004984:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004988:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800498c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004990:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004994:	4770      	bx	lr
 8004996:	bf00      	nop
 8004998:	08005245 	.word	0x08005245

0800499c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 800499c:	4b06      	ldr	r3, [pc, #24]	; (80049b8 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 800499e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049a2:	2300      	movs	r3, #0
 80049a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049b4:	4770      	bx	lr
 80049b6:	bf00      	nop
 80049b8:	08005105 	.word	0x08005105

080049bc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80049bc:	4b06      	ldr	r3, [pc, #24]	; (80049d8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80049be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049c2:	2300      	movs	r3, #0
 80049c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049d4:	4770      	bx	lr
 80049d6:	bf00      	nop
 80049d8:	08004fc5 	.word	0x08004fc5

080049dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 80049dc:	4b06      	ldr	r3, [pc, #24]	; (80049f8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 80049de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049e2:	2300      	movs	r3, #0
 80049e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049f4:	4770      	bx	lr
 80049f6:	bf00      	nop
 80049f8:	08004421 	.word	0x08004421

080049fc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 80049fc:	6803      	ldr	r3, [r0, #0]
 80049fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a00:	4718      	bx	r3
	...

08004a04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004a04:	4b12      	ldr	r3, [pc, #72]	; (8004a50 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004a06:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004a08:	6003      	str	r3, [r0, #0]
 8004a0a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004a0e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004a10:	4b10      	ldr	r3, [pc, #64]	; (8004a54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004a12:	7241      	strb	r1, [r0, #9]
 8004a14:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004a16:	4910      	ldr	r1, [pc, #64]	; (8004a58 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004a18:	4b10      	ldr	r3, [pc, #64]	; (8004a5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004a1a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004a1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004a22:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004a24:	2200      	movs	r2, #0
 8004a26:	6042      	str	r2, [r0, #4]
 8004a28:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004a2a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004a2c:	81c2      	strh	r2, [r0, #14]
          solid()
 8004a2e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004a32:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004a36:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004a3a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004a3e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004a40:	9100      	str	r1, [sp, #0]
 8004a42:	3010      	adds	r0, #16
 8004a44:	4611      	mov	r1, r2
 8004a46:	f7fe fb0f 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004a4a:	4620      	mov	r0, r4
 8004a4c:	b002      	add	sp, #8
 8004a4e:	bd10      	pop	{r4, pc}
 8004a50:	0802df10 	.word	0x0802df10
 8004a54:	0802ddf4 	.word	0x0802ddf4
 8004a58:	20012d9a 	.word	0x20012d9a
 8004a5c:	20012d98 	.word	0x20012d98

08004a60 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8004a60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a64:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a68:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a6a:	68a0      	ldr	r0, [r4, #8]
 8004a6c:	6803      	ldr	r3, [r0, #0]
 8004a6e:	6a1b      	ldr	r3, [r3, #32]
 8004a70:	4798      	blx	r3
 8004a72:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004a76:	d205      	bcs.n	8004a84 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8004a78:	4b42      	ldr	r3, [pc, #264]	; (8004b84 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8004a7a:	4a43      	ldr	r2, [pc, #268]	; (8004b88 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004a7c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a7e:	4843      	ldr	r0, [pc, #268]	; (8004b8c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8004a80:	f026 f814 	bl	802aaac <__assert_func>
 8004a84:	6860      	ldr	r0, [r4, #4]
 8004a86:	6803      	ldr	r3, [r0, #0]
 8004a88:	6a1b      	ldr	r3, [r3, #32]
 8004a8a:	4798      	blx	r3
 8004a8c:	280f      	cmp	r0, #15
 8004a8e:	d803      	bhi.n	8004a98 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8004a90:	4b3f      	ldr	r3, [pc, #252]	; (8004b90 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8004a92:	4a3d      	ldr	r2, [pc, #244]	; (8004b88 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004a94:	21a4      	movs	r1, #164	; 0xa4
 8004a96:	e7f2      	b.n	8004a7e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a98:	68e0      	ldr	r0, [r4, #12]
 8004a9a:	6803      	ldr	r3, [r0, #0]
 8004a9c:	6a1b      	ldr	r3, [r3, #32]
 8004a9e:	4798      	blx	r3
 8004aa0:	2837      	cmp	r0, #55	; 0x37
 8004aa2:	d803      	bhi.n	8004aac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8004aa4:	4b3b      	ldr	r3, [pc, #236]	; (8004b94 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8004aa6:	4a38      	ldr	r2, [pc, #224]	; (8004b88 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004aa8:	21a5      	movs	r1, #165	; 0xa5
 8004aaa:	e7e8      	b.n	8004a7e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004aac:	f011 f8a0 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ab0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004b98 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8004ab4:	3004      	adds	r0, #4
 8004ab6:	f011 f901 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004aba:	f8d9 0000 	ldr.w	r0, [r9]
 8004abe:	b110      	cbz	r0, 8004ac6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004ac0:	6803      	ldr	r3, [r0, #0]
 8004ac2:	68db      	ldr	r3, [r3, #12]
 8004ac4:	4798      	blx	r3
    if (*currentTrans)
 8004ac6:	f8d9 0000 	ldr.w	r0, [r9]
 8004aca:	b110      	cbz	r0, 8004ad2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004acc:	6803      	ldr	r3, [r0, #0]
 8004ace:	681b      	ldr	r3, [r3, #0]
 8004ad0:	4798      	blx	r3
    if (*currentScreen)
 8004ad2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004b9c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8004ad6:	f8d8 0000 	ldr.w	r0, [r8]
 8004ada:	b110      	cbz	r0, 8004ae2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004adc:	6803      	ldr	r3, [r0, #0]
 8004ade:	695b      	ldr	r3, [r3, #20]
 8004ae0:	4798      	blx	r3
    if (*currentPresenter)
 8004ae2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ae6:	b110      	cbz	r0, 8004aee <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004ae8:	6803      	ldr	r3, [r0, #0]
 8004aea:	685b      	ldr	r3, [r3, #4]
 8004aec:	4798      	blx	r3
    if (*currentScreen)
 8004aee:	f8d8 0000 	ldr.w	r0, [r8]
 8004af2:	b110      	cbz	r0, 8004afa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004af4:	6803      	ldr	r3, [r0, #0]
 8004af6:	681b      	ldr	r3, [r3, #0]
 8004af8:	4798      	blx	r3
    if (*currentPresenter)
 8004afa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004afe:	b110      	cbz	r0, 8004b06 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004b00:	6803      	ldr	r3, [r0, #0]
 8004b02:	689b      	ldr	r3, [r3, #8]
 8004b04:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b06:	68e0      	ldr	r0, [r4, #12]
 8004b08:	2100      	movs	r1, #0
 8004b0a:	f7ff ff77 	bl	80049fc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004b0e:	2114      	movs	r1, #20
 8004b10:	4605      	mov	r5, r0
 8004b12:	f7ff ff77 	bl	8004a04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b16:	68a0      	ldr	r0, [r4, #8]
 8004b18:	6803      	ldr	r3, [r0, #0]
 8004b1a:	2100      	movs	r1, #0
 8004b1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b1e:	4798      	blx	r3
 8004b20:	4606      	mov	r6, r0
 8004b22:	f004 fad9 	bl	80090d8 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b26:	6860      	ldr	r0, [r4, #4]
 8004b28:	6803      	ldr	r3, [r0, #0]
 8004b2a:	2100      	movs	r1, #0
 8004b2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b2e:	4798      	blx	r3
 8004b30:	4631      	mov	r1, r6
 8004b32:	4604      	mov	r4, r0
 8004b34:	f004 faaa 	bl	800908c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004b38:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b3c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b40:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b44:	b1dc      	cbz	r4, 8004b7e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8004b46:	1d23      	adds	r3, r4, #4
 8004b48:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b4c:	6833      	ldr	r3, [r6, #0]
 8004b4e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b52:	4630      	mov	r0, r6
 8004b54:	68db      	ldr	r3, [r3, #12]
 8004b56:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b58:	4798      	blx	r3
    newPresenter->activate();
 8004b5a:	6823      	ldr	r3, [r4, #0]
 8004b5c:	4620      	mov	r0, r4
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b62:	4629      	mov	r1, r5
 8004b64:	4630      	mov	r0, r6
 8004b66:	f012 fe6f 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b6a:	682b      	ldr	r3, [r5, #0]
 8004b6c:	4628      	mov	r0, r5
 8004b6e:	691b      	ldr	r3, [r3, #16]
 8004b70:	4798      	blx	r3
    newTransition->invalidate();
 8004b72:	682b      	ldr	r3, [r5, #0]
 8004b74:	4628      	mov	r0, r5
 8004b76:	695b      	ldr	r3, [r3, #20]
}
 8004b78:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b7c:	4718      	bx	r3
    model->bind(newPresenter);
 8004b7e:	4623      	mov	r3, r4
 8004b80:	e7e2      	b.n	8004b48 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8004b82:	bf00      	nop
 8004b84:	0802c824 	.word	0x0802c824
 8004b88:	0802cc55 	.word	0x0802cc55
 8004b8c:	0802c9c0 	.word	0x0802c9c0
 8004b90:	0802ca07 	.word	0x0802ca07
 8004b94:	0802caaa 	.word	0x0802caaa
 8004b98:	20012dec 	.word	0x20012dec
 8004b9c:	20012de8 	.word	0x20012de8

08004ba0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004ba0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ba4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ba8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004baa:	68a0      	ldr	r0, [r4, #8]
 8004bac:	6803      	ldr	r3, [r0, #0]
 8004bae:	6a1b      	ldr	r3, [r3, #32]
 8004bb0:	4798      	blx	r3
 8004bb2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004bb6:	d205      	bcs.n	8004bc4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004bb8:	4b42      	ldr	r3, [pc, #264]	; (8004cc4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004bba:	4a43      	ldr	r2, [pc, #268]	; (8004cc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004bbc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bbe:	4843      	ldr	r0, [pc, #268]	; (8004ccc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004bc0:	f025 ff74 	bl	802aaac <__assert_func>
 8004bc4:	6860      	ldr	r0, [r4, #4]
 8004bc6:	6803      	ldr	r3, [r0, #0]
 8004bc8:	6a1b      	ldr	r3, [r3, #32]
 8004bca:	4798      	blx	r3
 8004bcc:	280f      	cmp	r0, #15
 8004bce:	d803      	bhi.n	8004bd8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004bd0:	4b3f      	ldr	r3, [pc, #252]	; (8004cd0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004bd2:	4a3d      	ldr	r2, [pc, #244]	; (8004cc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004bd4:	21a4      	movs	r1, #164	; 0xa4
 8004bd6:	e7f2      	b.n	8004bbe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bd8:	68e0      	ldr	r0, [r4, #12]
 8004bda:	6803      	ldr	r3, [r0, #0]
 8004bdc:	6a1b      	ldr	r3, [r3, #32]
 8004bde:	4798      	blx	r3
 8004be0:	2837      	cmp	r0, #55	; 0x37
 8004be2:	d803      	bhi.n	8004bec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004be4:	4b3b      	ldr	r3, [pc, #236]	; (8004cd4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004be6:	4a38      	ldr	r2, [pc, #224]	; (8004cc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004be8:	21a5      	movs	r1, #165	; 0xa5
 8004bea:	e7e8      	b.n	8004bbe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004bec:	f011 f800 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004bf0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004cd8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004bf4:	3004      	adds	r0, #4
 8004bf6:	f011 f861 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004bfa:	f8d9 0000 	ldr.w	r0, [r9]
 8004bfe:	b110      	cbz	r0, 8004c06 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004c00:	6803      	ldr	r3, [r0, #0]
 8004c02:	68db      	ldr	r3, [r3, #12]
 8004c04:	4798      	blx	r3
    if (*currentTrans)
 8004c06:	f8d9 0000 	ldr.w	r0, [r9]
 8004c0a:	b110      	cbz	r0, 8004c12 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004c0c:	6803      	ldr	r3, [r0, #0]
 8004c0e:	681b      	ldr	r3, [r3, #0]
 8004c10:	4798      	blx	r3
    if (*currentScreen)
 8004c12:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004cdc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004c16:	f8d8 0000 	ldr.w	r0, [r8]
 8004c1a:	b110      	cbz	r0, 8004c22 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004c1c:	6803      	ldr	r3, [r0, #0]
 8004c1e:	695b      	ldr	r3, [r3, #20]
 8004c20:	4798      	blx	r3
    if (*currentPresenter)
 8004c22:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c26:	b110      	cbz	r0, 8004c2e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004c28:	6803      	ldr	r3, [r0, #0]
 8004c2a:	685b      	ldr	r3, [r3, #4]
 8004c2c:	4798      	blx	r3
    if (*currentScreen)
 8004c2e:	f8d8 0000 	ldr.w	r0, [r8]
 8004c32:	b110      	cbz	r0, 8004c3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004c34:	6803      	ldr	r3, [r0, #0]
 8004c36:	681b      	ldr	r3, [r3, #0]
 8004c38:	4798      	blx	r3
    if (*currentPresenter)
 8004c3a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c3e:	b110      	cbz	r0, 8004c46 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004c40:	6803      	ldr	r3, [r0, #0]
 8004c42:	689b      	ldr	r3, [r3, #8]
 8004c44:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c46:	68e0      	ldr	r0, [r4, #12]
 8004c48:	2100      	movs	r1, #0
 8004c4a:	f7ff fed7 	bl	80049fc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004c4e:	2114      	movs	r1, #20
 8004c50:	4605      	mov	r5, r0
 8004c52:	f7ff fed7 	bl	8004a04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c56:	68a0      	ldr	r0, [r4, #8]
 8004c58:	6803      	ldr	r3, [r0, #0]
 8004c5a:	2100      	movs	r1, #0
 8004c5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c5e:	4798      	blx	r3
 8004c60:	4606      	mov	r6, r0
 8004c62:	f004 fc8d 	bl	8009580 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c66:	6860      	ldr	r0, [r4, #4]
 8004c68:	6803      	ldr	r3, [r0, #0]
 8004c6a:	2100      	movs	r1, #0
 8004c6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c6e:	4798      	blx	r3
 8004c70:	4631      	mov	r1, r6
 8004c72:	4604      	mov	r4, r0
 8004c74:	f004 fc5e 	bl	8009534 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004c78:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c7c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c80:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c84:	b1dc      	cbz	r4, 8004cbe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004c86:	1d23      	adds	r3, r4, #4
 8004c88:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c8c:	6833      	ldr	r3, [r6, #0]
 8004c8e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c92:	4630      	mov	r0, r6
 8004c94:	68db      	ldr	r3, [r3, #12]
 8004c96:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c98:	4798      	blx	r3
    newPresenter->activate();
 8004c9a:	6823      	ldr	r3, [r4, #0]
 8004c9c:	4620      	mov	r0, r4
 8004c9e:	681b      	ldr	r3, [r3, #0]
 8004ca0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ca2:	4629      	mov	r1, r5
 8004ca4:	4630      	mov	r0, r6
 8004ca6:	f012 fdcf 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004caa:	682b      	ldr	r3, [r5, #0]
 8004cac:	4628      	mov	r0, r5
 8004cae:	691b      	ldr	r3, [r3, #16]
 8004cb0:	4798      	blx	r3
    newTransition->invalidate();
 8004cb2:	682b      	ldr	r3, [r5, #0]
 8004cb4:	4628      	mov	r0, r5
 8004cb6:	695b      	ldr	r3, [r3, #20]
}
 8004cb8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cbc:	4718      	bx	r3
    model->bind(newPresenter);
 8004cbe:	4623      	mov	r3, r4
 8004cc0:	e7e2      	b.n	8004c88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004cc2:	bf00      	nop
 8004cc4:	0802c824 	.word	0x0802c824
 8004cc8:	0802cd73 	.word	0x0802cd73
 8004ccc:	0802c9c0 	.word	0x0802c9c0
 8004cd0:	0802ca07 	.word	0x0802ca07
 8004cd4:	0802caaa 	.word	0x0802caaa
 8004cd8:	20012dec 	.word	0x20012dec
 8004cdc:	20012de8 	.word	0x20012de8

08004ce0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004ce0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ce4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ce8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cea:	68a0      	ldr	r0, [r4, #8]
 8004cec:	6803      	ldr	r3, [r0, #0]
 8004cee:	6a1b      	ldr	r3, [r3, #32]
 8004cf0:	4798      	blx	r3
 8004cf2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004cf6:	d205      	bcs.n	8004d04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004cf8:	4b42      	ldr	r3, [pc, #264]	; (8004e04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004cfa:	4a43      	ldr	r2, [pc, #268]	; (8004e08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004cfc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cfe:	4843      	ldr	r0, [pc, #268]	; (8004e0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004d00:	f025 fed4 	bl	802aaac <__assert_func>
 8004d04:	6860      	ldr	r0, [r4, #4]
 8004d06:	6803      	ldr	r3, [r0, #0]
 8004d08:	6a1b      	ldr	r3, [r3, #32]
 8004d0a:	4798      	blx	r3
 8004d0c:	280f      	cmp	r0, #15
 8004d0e:	d803      	bhi.n	8004d18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004d10:	4b3f      	ldr	r3, [pc, #252]	; (8004e10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004d12:	4a3d      	ldr	r2, [pc, #244]	; (8004e08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d14:	21a4      	movs	r1, #164	; 0xa4
 8004d16:	e7f2      	b.n	8004cfe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d18:	68e0      	ldr	r0, [r4, #12]
 8004d1a:	6803      	ldr	r3, [r0, #0]
 8004d1c:	6a1b      	ldr	r3, [r3, #32]
 8004d1e:	4798      	blx	r3
 8004d20:	2837      	cmp	r0, #55	; 0x37
 8004d22:	d803      	bhi.n	8004d2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004d24:	4b3b      	ldr	r3, [pc, #236]	; (8004e14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004d26:	4a38      	ldr	r2, [pc, #224]	; (8004e08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d28:	21a5      	movs	r1, #165	; 0xa5
 8004d2a:	e7e8      	b.n	8004cfe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d2c:	f010 ff60 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d30:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004d34:	3004      	adds	r0, #4
 8004d36:	f010 ffc1 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d3a:	f8d9 0000 	ldr.w	r0, [r9]
 8004d3e:	b110      	cbz	r0, 8004d46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004d40:	6803      	ldr	r3, [r0, #0]
 8004d42:	68db      	ldr	r3, [r3, #12]
 8004d44:	4798      	blx	r3
    if (*currentTrans)
 8004d46:	f8d9 0000 	ldr.w	r0, [r9]
 8004d4a:	b110      	cbz	r0, 8004d52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004d4c:	6803      	ldr	r3, [r0, #0]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	4798      	blx	r3
    if (*currentScreen)
 8004d52:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004e1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004d56:	f8d8 0000 	ldr.w	r0, [r8]
 8004d5a:	b110      	cbz	r0, 8004d62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d5c:	6803      	ldr	r3, [r0, #0]
 8004d5e:	695b      	ldr	r3, [r3, #20]
 8004d60:	4798      	blx	r3
    if (*currentPresenter)
 8004d62:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d66:	b110      	cbz	r0, 8004d6e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d68:	6803      	ldr	r3, [r0, #0]
 8004d6a:	685b      	ldr	r3, [r3, #4]
 8004d6c:	4798      	blx	r3
    if (*currentScreen)
 8004d6e:	f8d8 0000 	ldr.w	r0, [r8]
 8004d72:	b110      	cbz	r0, 8004d7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d74:	6803      	ldr	r3, [r0, #0]
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	4798      	blx	r3
    if (*currentPresenter)
 8004d7a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d7e:	b110      	cbz	r0, 8004d86 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d80:	6803      	ldr	r3, [r0, #0]
 8004d82:	689b      	ldr	r3, [r3, #8]
 8004d84:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d86:	68e0      	ldr	r0, [r4, #12]
 8004d88:	2100      	movs	r1, #0
 8004d8a:	f7ff fe37 	bl	80049fc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004d8e:	2114      	movs	r1, #20
 8004d90:	4605      	mov	r5, r0
 8004d92:	f7ff fe37 	bl	8004a04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d96:	68a0      	ldr	r0, [r4, #8]
 8004d98:	6803      	ldr	r3, [r0, #0]
 8004d9a:	2100      	movs	r1, #0
 8004d9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d9e:	4798      	blx	r3
 8004da0:	4606      	mov	r6, r0
 8004da2:	f004 fb8d 	bl	80094c0 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004da6:	6860      	ldr	r0, [r4, #4]
 8004da8:	6803      	ldr	r3, [r0, #0]
 8004daa:	2100      	movs	r1, #0
 8004dac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dae:	4798      	blx	r3
 8004db0:	4631      	mov	r1, r6
 8004db2:	4604      	mov	r4, r0
 8004db4:	f004 fb5e 	bl	8009474 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004db8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004dbc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004dc0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004dc4:	b1dc      	cbz	r4, 8004dfe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004dc6:	1d23      	adds	r3, r4, #4
 8004dc8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004dcc:	6833      	ldr	r3, [r6, #0]
 8004dce:	f8c4 a008 	str.w	sl, [r4, #8]
 8004dd2:	4630      	mov	r0, r6
 8004dd4:	68db      	ldr	r3, [r3, #12]
 8004dd6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004dd8:	4798      	blx	r3
    newPresenter->activate();
 8004dda:	6823      	ldr	r3, [r4, #0]
 8004ddc:	4620      	mov	r0, r4
 8004dde:	681b      	ldr	r3, [r3, #0]
 8004de0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004de2:	4629      	mov	r1, r5
 8004de4:	4630      	mov	r0, r6
 8004de6:	f012 fd2f 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004dea:	682b      	ldr	r3, [r5, #0]
 8004dec:	4628      	mov	r0, r5
 8004dee:	691b      	ldr	r3, [r3, #16]
 8004df0:	4798      	blx	r3
    newTransition->invalidate();
 8004df2:	682b      	ldr	r3, [r5, #0]
 8004df4:	4628      	mov	r0, r5
 8004df6:	695b      	ldr	r3, [r3, #20]
}
 8004df8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004dfc:	4718      	bx	r3
    model->bind(newPresenter);
 8004dfe:	4623      	mov	r3, r4
 8004e00:	e7e2      	b.n	8004dc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004e02:	bf00      	nop
 8004e04:	0802c824 	.word	0x0802c824
 8004e08:	0802cea3 	.word	0x0802cea3
 8004e0c:	0802c9c0 	.word	0x0802c9c0
 8004e10:	0802ca07 	.word	0x0802ca07
 8004e14:	0802caaa 	.word	0x0802caaa
 8004e18:	20012dec 	.word	0x20012dec
 8004e1c:	20012de8 	.word	0x20012de8

08004e20 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004e20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e24:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e28:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e2a:	68a0      	ldr	r0, [r4, #8]
 8004e2c:	6803      	ldr	r3, [r0, #0]
 8004e2e:	6a1b      	ldr	r3, [r3, #32]
 8004e30:	4798      	blx	r3
 8004e32:	f241 137b 	movw	r3, #4475	; 0x117b
 8004e36:	4298      	cmp	r0, r3
 8004e38:	d805      	bhi.n	8004e46 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004e3a:	4b42      	ldr	r3, [pc, #264]	; (8004f44 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004e3c:	4a42      	ldr	r2, [pc, #264]	; (8004f48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e3e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e40:	4842      	ldr	r0, [pc, #264]	; (8004f4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004e42:	f025 fe33 	bl	802aaac <__assert_func>
 8004e46:	6860      	ldr	r0, [r4, #4]
 8004e48:	6803      	ldr	r3, [r0, #0]
 8004e4a:	6a1b      	ldr	r3, [r3, #32]
 8004e4c:	4798      	blx	r3
 8004e4e:	280f      	cmp	r0, #15
 8004e50:	d803      	bhi.n	8004e5a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004e52:	4b3f      	ldr	r3, [pc, #252]	; (8004f50 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004e54:	4a3c      	ldr	r2, [pc, #240]	; (8004f48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e56:	21a4      	movs	r1, #164	; 0xa4
 8004e58:	e7f2      	b.n	8004e40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e5a:	68e0      	ldr	r0, [r4, #12]
 8004e5c:	6803      	ldr	r3, [r0, #0]
 8004e5e:	6a1b      	ldr	r3, [r3, #32]
 8004e60:	4798      	blx	r3
 8004e62:	2837      	cmp	r0, #55	; 0x37
 8004e64:	d803      	bhi.n	8004e6e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004e66:	4b3b      	ldr	r3, [pc, #236]	; (8004f54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004e68:	4a37      	ldr	r2, [pc, #220]	; (8004f48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e6a:	21a5      	movs	r1, #165	; 0xa5
 8004e6c:	e7e8      	b.n	8004e40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004e6e:	f010 febf 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e72:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f58 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004e76:	3004      	adds	r0, #4
 8004e78:	f010 ff20 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e7c:	f8d9 0000 	ldr.w	r0, [r9]
 8004e80:	b110      	cbz	r0, 8004e88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004e82:	6803      	ldr	r3, [r0, #0]
 8004e84:	68db      	ldr	r3, [r3, #12]
 8004e86:	4798      	blx	r3
    if (*currentTrans)
 8004e88:	f8d9 0000 	ldr.w	r0, [r9]
 8004e8c:	b110      	cbz	r0, 8004e94 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004e8e:	6803      	ldr	r3, [r0, #0]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	4798      	blx	r3
    if (*currentScreen)
 8004e94:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004f5c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004e98:	f8d8 0000 	ldr.w	r0, [r8]
 8004e9c:	b110      	cbz	r0, 8004ea4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004e9e:	6803      	ldr	r3, [r0, #0]
 8004ea0:	695b      	ldr	r3, [r3, #20]
 8004ea2:	4798      	blx	r3
    if (*currentPresenter)
 8004ea4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ea8:	b110      	cbz	r0, 8004eb0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004eaa:	6803      	ldr	r3, [r0, #0]
 8004eac:	685b      	ldr	r3, [r3, #4]
 8004eae:	4798      	blx	r3
    if (*currentScreen)
 8004eb0:	f8d8 0000 	ldr.w	r0, [r8]
 8004eb4:	b110      	cbz	r0, 8004ebc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004eb6:	6803      	ldr	r3, [r0, #0]
 8004eb8:	681b      	ldr	r3, [r3, #0]
 8004eba:	4798      	blx	r3
    if (*currentPresenter)
 8004ebc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ec0:	b110      	cbz	r0, 8004ec8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004ec2:	6803      	ldr	r3, [r0, #0]
 8004ec4:	689b      	ldr	r3, [r3, #8]
 8004ec6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ec8:	68e0      	ldr	r0, [r4, #12]
 8004eca:	2100      	movs	r1, #0
 8004ecc:	f7ff fd96 	bl	80049fc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004ed0:	2114      	movs	r1, #20
 8004ed2:	4605      	mov	r5, r0
 8004ed4:	f7ff fd96 	bl	8004a04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ed8:	68a0      	ldr	r0, [r4, #8]
 8004eda:	6803      	ldr	r3, [r0, #0]
 8004edc:	2100      	movs	r1, #0
 8004ede:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ee0:	4798      	blx	r3
 8004ee2:	4606      	mov	r6, r0
 8004ee4:	f004 fa8c 	bl	8009400 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ee8:	6860      	ldr	r0, [r4, #4]
 8004eea:	6803      	ldr	r3, [r0, #0]
 8004eec:	2100      	movs	r1, #0
 8004eee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ef0:	4798      	blx	r3
 8004ef2:	4631      	mov	r1, r6
 8004ef4:	4604      	mov	r4, r0
 8004ef6:	f004 fa5d 	bl	80093b4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004efa:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004efe:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f02:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f06:	b1dc      	cbz	r4, 8004f40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004f08:	1d23      	adds	r3, r4, #4
 8004f0a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f0e:	6833      	ldr	r3, [r6, #0]
 8004f10:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f14:	4630      	mov	r0, r6
 8004f16:	68db      	ldr	r3, [r3, #12]
 8004f18:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f1a:	4798      	blx	r3
    newPresenter->activate();
 8004f1c:	6823      	ldr	r3, [r4, #0]
 8004f1e:	4620      	mov	r0, r4
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f24:	4629      	mov	r1, r5
 8004f26:	4630      	mov	r0, r6
 8004f28:	f012 fc8e 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f2c:	682b      	ldr	r3, [r5, #0]
 8004f2e:	4628      	mov	r0, r5
 8004f30:	691b      	ldr	r3, [r3, #16]
 8004f32:	4798      	blx	r3
    newTransition->invalidate();
 8004f34:	682b      	ldr	r3, [r5, #0]
 8004f36:	4628      	mov	r0, r5
 8004f38:	695b      	ldr	r3, [r3, #20]
}
 8004f3a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f3e:	4718      	bx	r3
    model->bind(newPresenter);
 8004f40:	4623      	mov	r3, r4
 8004f42:	e7e2      	b.n	8004f0a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004f44:	0802c824 	.word	0x0802c824
 8004f48:	0802cfc1 	.word	0x0802cfc1
 8004f4c:	0802c9c0 	.word	0x0802c9c0
 8004f50:	0802ca07 	.word	0x0802ca07
 8004f54:	0802caaa 	.word	0x0802caaa
 8004f58:	20012dec 	.word	0x20012dec
 8004f5c:	20012de8 	.word	0x20012de8

08004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004f60:	6803      	ldr	r3, [r0, #0]
 8004f62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f64:	4718      	bx	r3
	...

08004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004f68:	4b12      	ldr	r3, [pc, #72]	; (8004fb4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004f6a:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004f6c:	6003      	str	r3, [r0, #0]
 8004f6e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004f72:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004f74:	4b10      	ldr	r3, [pc, #64]	; (8004fb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004f76:	7241      	strb	r1, [r0, #9]
 8004f78:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004f7a:	4910      	ldr	r1, [pc, #64]	; (8004fbc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004f7c:	4b10      	ldr	r3, [pc, #64]	; (8004fc0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004f7e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004f82:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004f86:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004f88:	2200      	movs	r2, #0
 8004f8a:	6042      	str	r2, [r0, #4]
 8004f8c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004f8e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004f90:	81c2      	strh	r2, [r0, #14]
          solid()
 8004f92:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004f96:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004f9a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004f9e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004fa2:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004fa4:	9100      	str	r1, [sp, #0]
 8004fa6:	3010      	adds	r0, #16
 8004fa8:	4611      	mov	r1, r2
 8004faa:	f7fe f85d 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004fae:	4620      	mov	r0, r4
 8004fb0:	b002      	add	sp, #8
 8004fb2:	bd10      	pop	{r4, pc}
 8004fb4:	0802deec 	.word	0x0802deec
 8004fb8:	0802ddf4 	.word	0x0802ddf4
 8004fbc:	20012d9a 	.word	0x20012d9a
 8004fc0:	20012d98 	.word	0x20012d98

08004fc4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004fc8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004fcc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004fce:	68a0      	ldr	r0, [r4, #8]
 8004fd0:	6803      	ldr	r3, [r0, #0]
 8004fd2:	6a1b      	ldr	r3, [r3, #32]
 8004fd4:	4798      	blx	r3
 8004fd6:	f241 03af 	movw	r3, #4271	; 0x10af
 8004fda:	4298      	cmp	r0, r3
 8004fdc:	d805      	bhi.n	8004fea <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004fde:	4b42      	ldr	r3, [pc, #264]	; (80050e8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004fe0:	4a42      	ldr	r2, [pc, #264]	; (80050ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004fe2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004fe4:	4842      	ldr	r0, [pc, #264]	; (80050f0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004fe6:	f025 fd61 	bl	802aaac <__assert_func>
 8004fea:	6860      	ldr	r0, [r4, #4]
 8004fec:	6803      	ldr	r3, [r0, #0]
 8004fee:	6a1b      	ldr	r3, [r3, #32]
 8004ff0:	4798      	blx	r3
 8004ff2:	280f      	cmp	r0, #15
 8004ff4:	d803      	bhi.n	8004ffe <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004ff6:	4b3f      	ldr	r3, [pc, #252]	; (80050f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004ff8:	4a3c      	ldr	r2, [pc, #240]	; (80050ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004ffa:	21a4      	movs	r1, #164	; 0xa4
 8004ffc:	e7f2      	b.n	8004fe4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ffe:	68e0      	ldr	r0, [r4, #12]
 8005000:	6803      	ldr	r3, [r0, #0]
 8005002:	6a1b      	ldr	r3, [r3, #32]
 8005004:	4798      	blx	r3
 8005006:	2837      	cmp	r0, #55	; 0x37
 8005008:	d803      	bhi.n	8005012 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 800500a:	4b3b      	ldr	r3, [pc, #236]	; (80050f8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 800500c:	4a37      	ldr	r2, [pc, #220]	; (80050ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800500e:	21a5      	movs	r1, #165	; 0xa5
 8005010:	e7e8      	b.n	8004fe4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005012:	f010 fded 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005016:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80050fc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 800501a:	3004      	adds	r0, #4
 800501c:	f010 fe4e 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005020:	f8d9 0000 	ldr.w	r0, [r9]
 8005024:	b110      	cbz	r0, 800502c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005026:	6803      	ldr	r3, [r0, #0]
 8005028:	68db      	ldr	r3, [r3, #12]
 800502a:	4798      	blx	r3
    if (*currentTrans)
 800502c:	f8d9 0000 	ldr.w	r0, [r9]
 8005030:	b110      	cbz	r0, 8005038 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005032:	6803      	ldr	r3, [r0, #0]
 8005034:	681b      	ldr	r3, [r3, #0]
 8005036:	4798      	blx	r3
    if (*currentScreen)
 8005038:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005100 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 800503c:	f8d8 0000 	ldr.w	r0, [r8]
 8005040:	b110      	cbz	r0, 8005048 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005042:	6803      	ldr	r3, [r0, #0]
 8005044:	695b      	ldr	r3, [r3, #20]
 8005046:	4798      	blx	r3
    if (*currentPresenter)
 8005048:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800504c:	b110      	cbz	r0, 8005054 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800504e:	6803      	ldr	r3, [r0, #0]
 8005050:	685b      	ldr	r3, [r3, #4]
 8005052:	4798      	blx	r3
    if (*currentScreen)
 8005054:	f8d8 0000 	ldr.w	r0, [r8]
 8005058:	b110      	cbz	r0, 8005060 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800505a:	6803      	ldr	r3, [r0, #0]
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	4798      	blx	r3
    if (*currentPresenter)
 8005060:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005064:	b110      	cbz	r0, 800506c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005066:	6803      	ldr	r3, [r0, #0]
 8005068:	689b      	ldr	r3, [r3, #8]
 800506a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800506c:	68e0      	ldr	r0, [r4, #12]
 800506e:	2100      	movs	r1, #0
 8005070:	f7ff ff76 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005074:	2114      	movs	r1, #20
 8005076:	4605      	mov	r5, r0
 8005078:	f7ff ff76 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800507c:	68a0      	ldr	r0, [r4, #8]
 800507e:	6803      	ldr	r3, [r0, #0]
 8005080:	2100      	movs	r1, #0
 8005082:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005084:	4798      	blx	r3
 8005086:	4606      	mov	r6, r0
 8005088:	f004 fcb6 	bl	80099f8 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800508c:	6860      	ldr	r0, [r4, #4]
 800508e:	6803      	ldr	r3, [r0, #0]
 8005090:	2100      	movs	r1, #0
 8005092:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005094:	4798      	blx	r3
 8005096:	4631      	mov	r1, r6
 8005098:	4604      	mov	r4, r0
 800509a:	f004 fc87 	bl	80099ac <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 800509e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050a2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050aa:	b1dc      	cbz	r4, 80050e4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 80050ac:	1d23      	adds	r3, r4, #4
 80050ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050b2:	6833      	ldr	r3, [r6, #0]
 80050b4:	f8c4 a008 	str.w	sl, [r4, #8]
 80050b8:	4630      	mov	r0, r6
 80050ba:	68db      	ldr	r3, [r3, #12]
 80050bc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050be:	4798      	blx	r3
    newPresenter->activate();
 80050c0:	6823      	ldr	r3, [r4, #0]
 80050c2:	4620      	mov	r0, r4
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050c8:	4629      	mov	r1, r5
 80050ca:	4630      	mov	r0, r6
 80050cc:	f012 fbbc 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80050d0:	682b      	ldr	r3, [r5, #0]
 80050d2:	4628      	mov	r0, r5
 80050d4:	691b      	ldr	r3, [r3, #16]
 80050d6:	4798      	blx	r3
    newTransition->invalidate();
 80050d8:	682b      	ldr	r3, [r5, #0]
 80050da:	4628      	mov	r0, r5
 80050dc:	695b      	ldr	r3, [r3, #20]
}
 80050de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050e2:	4718      	bx	r3
    model->bind(newPresenter);
 80050e4:	4623      	mov	r3, r4
 80050e6:	e7e2      	b.n	80050ae <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80050e8:	0802c824 	.word	0x0802c824
 80050ec:	0802d0db 	.word	0x0802d0db
 80050f0:	0802c9c0 	.word	0x0802c9c0
 80050f4:	0802ca07 	.word	0x0802ca07
 80050f8:	0802caaa 	.word	0x0802caaa
 80050fc:	20012dec 	.word	0x20012dec
 8005100:	20012de8 	.word	0x20012de8

08005104 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8005104:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005108:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800510c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800510e:	68a0      	ldr	r0, [r4, #8]
 8005110:	6803      	ldr	r3, [r0, #0]
 8005112:	6a1b      	ldr	r3, [r3, #32]
 8005114:	4798      	blx	r3
 8005116:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 800511a:	d205      	bcs.n	8005128 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x24>
 800511c:	4b42      	ldr	r3, [pc, #264]	; (8005228 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 800511e:	4a43      	ldr	r2, [pc, #268]	; (800522c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8005120:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005122:	4843      	ldr	r0, [pc, #268]	; (8005230 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8005124:	f025 fcc2 	bl	802aaac <__assert_func>
 8005128:	6860      	ldr	r0, [r4, #4]
 800512a:	6803      	ldr	r3, [r0, #0]
 800512c:	6a1b      	ldr	r3, [r3, #32]
 800512e:	4798      	blx	r3
 8005130:	280f      	cmp	r0, #15
 8005132:	d803      	bhi.n	800513c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x38>
 8005134:	4b3f      	ldr	r3, [pc, #252]	; (8005234 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8005136:	4a3d      	ldr	r2, [pc, #244]	; (800522c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8005138:	21a4      	movs	r1, #164	; 0xa4
 800513a:	e7f2      	b.n	8005122 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800513c:	68e0      	ldr	r0, [r4, #12]
 800513e:	6803      	ldr	r3, [r0, #0]
 8005140:	6a1b      	ldr	r3, [r3, #32]
 8005142:	4798      	blx	r3
 8005144:	2837      	cmp	r0, #55	; 0x37
 8005146:	d803      	bhi.n	8005150 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4c>
 8005148:	4b3b      	ldr	r3, [pc, #236]	; (8005238 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 800514a:	4a38      	ldr	r2, [pc, #224]	; (800522c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800514c:	21a5      	movs	r1, #165	; 0xa5
 800514e:	e7e8      	b.n	8005122 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005150:	f010 fd4e 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005154:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800523c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 8005158:	3004      	adds	r0, #4
 800515a:	f010 fdaf 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800515e:	f8d9 0000 	ldr.w	r0, [r9]
 8005162:	b110      	cbz	r0, 800516a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005164:	6803      	ldr	r3, [r0, #0]
 8005166:	68db      	ldr	r3, [r3, #12]
 8005168:	4798      	blx	r3
    if (*currentTrans)
 800516a:	f8d9 0000 	ldr.w	r0, [r9]
 800516e:	b110      	cbz	r0, 8005176 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005170:	6803      	ldr	r3, [r0, #0]
 8005172:	681b      	ldr	r3, [r3, #0]
 8005174:	4798      	blx	r3
    if (*currentScreen)
 8005176:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005240 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 800517a:	f8d8 0000 	ldr.w	r0, [r8]
 800517e:	b110      	cbz	r0, 8005186 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005180:	6803      	ldr	r3, [r0, #0]
 8005182:	695b      	ldr	r3, [r3, #20]
 8005184:	4798      	blx	r3
    if (*currentPresenter)
 8005186:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800518a:	b110      	cbz	r0, 8005192 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800518c:	6803      	ldr	r3, [r0, #0]
 800518e:	685b      	ldr	r3, [r3, #4]
 8005190:	4798      	blx	r3
    if (*currentScreen)
 8005192:	f8d8 0000 	ldr.w	r0, [r8]
 8005196:	b110      	cbz	r0, 800519e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005198:	6803      	ldr	r3, [r0, #0]
 800519a:	681b      	ldr	r3, [r3, #0]
 800519c:	4798      	blx	r3
    if (*currentPresenter)
 800519e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051a2:	b110      	cbz	r0, 80051aa <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80051a4:	6803      	ldr	r3, [r0, #0]
 80051a6:	689b      	ldr	r3, [r3, #8]
 80051a8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80051aa:	68e0      	ldr	r0, [r4, #12]
 80051ac:	2100      	movs	r1, #0
 80051ae:	f7ff fed7 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80051b2:	2114      	movs	r1, #20
 80051b4:	4605      	mov	r5, r0
 80051b6:	f7ff fed7 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80051ba:	68a0      	ldr	r0, [r4, #8]
 80051bc:	6803      	ldr	r3, [r0, #0]
 80051be:	2100      	movs	r1, #0
 80051c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051c2:	4798      	blx	r3
 80051c4:	4606      	mov	r6, r0
 80051c6:	f003 ffe1 	bl	800918c <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80051ca:	6860      	ldr	r0, [r4, #4]
 80051cc:	6803      	ldr	r3, [r0, #0]
 80051ce:	2100      	movs	r1, #0
 80051d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051d2:	4798      	blx	r3
 80051d4:	4631      	mov	r1, r6
 80051d6:	4604      	mov	r4, r0
 80051d8:	f003 ffb2 	bl	8009140 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 80051dc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80051e0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80051e4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80051e8:	b1dc      	cbz	r4, 8005222 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x11e>
 80051ea:	1d23      	adds	r3, r4, #4
 80051ec:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80051f0:	6833      	ldr	r3, [r6, #0]
 80051f2:	f8c4 a008 	str.w	sl, [r4, #8]
 80051f6:	4630      	mov	r0, r6
 80051f8:	68db      	ldr	r3, [r3, #12]
 80051fa:	63f4      	str	r4, [r6, #60]	; 0x3c
 80051fc:	4798      	blx	r3
    newPresenter->activate();
 80051fe:	6823      	ldr	r3, [r4, #0]
 8005200:	4620      	mov	r0, r4
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005206:	4629      	mov	r1, r5
 8005208:	4630      	mov	r0, r6
 800520a:	f012 fb1d 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800520e:	682b      	ldr	r3, [r5, #0]
 8005210:	4628      	mov	r0, r5
 8005212:	691b      	ldr	r3, [r3, #16]
 8005214:	4798      	blx	r3
    newTransition->invalidate();
 8005216:	682b      	ldr	r3, [r5, #0]
 8005218:	4628      	mov	r0, r5
 800521a:	695b      	ldr	r3, [r3, #20]
}
 800521c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005220:	4718      	bx	r3
    model->bind(newPresenter);
 8005222:	4623      	mov	r3, r4
 8005224:	e7e2      	b.n	80051ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xe8>
 8005226:	bf00      	nop
 8005228:	0802c824 	.word	0x0802c824
 800522c:	0802d1fb 	.word	0x0802d1fb
 8005230:	0802c9c0 	.word	0x0802c9c0
 8005234:	0802ca07 	.word	0x0802ca07
 8005238:	0802caaa 	.word	0x0802caaa
 800523c:	20012dec 	.word	0x20012dec
 8005240:	20012de8 	.word	0x20012de8

08005244 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005244:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005248:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800524c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800524e:	68a0      	ldr	r0, [r4, #8]
 8005250:	6803      	ldr	r3, [r0, #0]
 8005252:	6a1b      	ldr	r3, [r3, #32]
 8005254:	4798      	blx	r3
 8005256:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 800525a:	d205      	bcs.n	8005268 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x24>
 800525c:	4b42      	ldr	r3, [pc, #264]	; (8005368 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 800525e:	4a43      	ldr	r2, [pc, #268]	; (800536c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005260:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005262:	4843      	ldr	r0, [pc, #268]	; (8005370 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005264:	f025 fc22 	bl	802aaac <__assert_func>
 8005268:	6860      	ldr	r0, [r4, #4]
 800526a:	6803      	ldr	r3, [r0, #0]
 800526c:	6a1b      	ldr	r3, [r3, #32]
 800526e:	4798      	blx	r3
 8005270:	280f      	cmp	r0, #15
 8005272:	d803      	bhi.n	800527c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x38>
 8005274:	4b3f      	ldr	r3, [pc, #252]	; (8005374 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005276:	4a3d      	ldr	r2, [pc, #244]	; (800536c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005278:	21a4      	movs	r1, #164	; 0xa4
 800527a:	e7f2      	b.n	8005262 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800527c:	68e0      	ldr	r0, [r4, #12]
 800527e:	6803      	ldr	r3, [r0, #0]
 8005280:	6a1b      	ldr	r3, [r3, #32]
 8005282:	4798      	blx	r3
 8005284:	2837      	cmp	r0, #55	; 0x37
 8005286:	d803      	bhi.n	8005290 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4c>
 8005288:	4b3b      	ldr	r3, [pc, #236]	; (8005378 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 800528a:	4a38      	ldr	r2, [pc, #224]	; (800536c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800528c:	21a5      	movs	r1, #165	; 0xa5
 800528e:	e7e8      	b.n	8005262 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005290:	f010 fcae 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005294:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800537c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005298:	3004      	adds	r0, #4
 800529a:	f010 fd0f 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800529e:	f8d9 0000 	ldr.w	r0, [r9]
 80052a2:	b110      	cbz	r0, 80052aa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80052a4:	6803      	ldr	r3, [r0, #0]
 80052a6:	68db      	ldr	r3, [r3, #12]
 80052a8:	4798      	blx	r3
    if (*currentTrans)
 80052aa:	f8d9 0000 	ldr.w	r0, [r9]
 80052ae:	b110      	cbz	r0, 80052b6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80052b0:	6803      	ldr	r3, [r0, #0]
 80052b2:	681b      	ldr	r3, [r3, #0]
 80052b4:	4798      	blx	r3
    if (*currentScreen)
 80052b6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005380 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 80052ba:	f8d8 0000 	ldr.w	r0, [r8]
 80052be:	b110      	cbz	r0, 80052c6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80052c0:	6803      	ldr	r3, [r0, #0]
 80052c2:	695b      	ldr	r3, [r3, #20]
 80052c4:	4798      	blx	r3
    if (*currentPresenter)
 80052c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052ca:	b110      	cbz	r0, 80052d2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80052cc:	6803      	ldr	r3, [r0, #0]
 80052ce:	685b      	ldr	r3, [r3, #4]
 80052d0:	4798      	blx	r3
    if (*currentScreen)
 80052d2:	f8d8 0000 	ldr.w	r0, [r8]
 80052d6:	b110      	cbz	r0, 80052de <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80052d8:	6803      	ldr	r3, [r0, #0]
 80052da:	681b      	ldr	r3, [r3, #0]
 80052dc:	4798      	blx	r3
    if (*currentPresenter)
 80052de:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052e2:	b110      	cbz	r0, 80052ea <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80052e4:	6803      	ldr	r3, [r0, #0]
 80052e6:	689b      	ldr	r3, [r3, #8]
 80052e8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80052ea:	68e0      	ldr	r0, [r4, #12]
 80052ec:	2100      	movs	r1, #0
 80052ee:	f7ff fe37 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80052f2:	2114      	movs	r1, #20
 80052f4:	4605      	mov	r5, r0
 80052f6:	f7ff fe37 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80052fa:	68a0      	ldr	r0, [r4, #8]
 80052fc:	6803      	ldr	r3, [r0, #0]
 80052fe:	2100      	movs	r1, #0
 8005300:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005302:	4798      	blx	r3
 8005304:	4606      	mov	r6, r0
 8005306:	f003 ffbb 	bl	8009280 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800530a:	6860      	ldr	r0, [r4, #4]
 800530c:	6803      	ldr	r3, [r0, #0]
 800530e:	2100      	movs	r1, #0
 8005310:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005312:	4798      	blx	r3
 8005314:	4631      	mov	r1, r6
 8005316:	4604      	mov	r4, r0
 8005318:	f003 ff8c 	bl	8009234 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 800531c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005320:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005324:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005328:	b1dc      	cbz	r4, 8005362 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x11e>
 800532a:	1d23      	adds	r3, r4, #4
 800532c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005330:	6833      	ldr	r3, [r6, #0]
 8005332:	f8c4 a008 	str.w	sl, [r4, #8]
 8005336:	4630      	mov	r0, r6
 8005338:	68db      	ldr	r3, [r3, #12]
 800533a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800533c:	4798      	blx	r3
    newPresenter->activate();
 800533e:	6823      	ldr	r3, [r4, #0]
 8005340:	4620      	mov	r0, r4
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005346:	4629      	mov	r1, r5
 8005348:	4630      	mov	r0, r6
 800534a:	f012 fa7d 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800534e:	682b      	ldr	r3, [r5, #0]
 8005350:	4628      	mov	r0, r5
 8005352:	691b      	ldr	r3, [r3, #16]
 8005354:	4798      	blx	r3
    newTransition->invalidate();
 8005356:	682b      	ldr	r3, [r5, #0]
 8005358:	4628      	mov	r0, r5
 800535a:	695b      	ldr	r3, [r3, #20]
}
 800535c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005360:	4718      	bx	r3
    model->bind(newPresenter);
 8005362:	4623      	mov	r3, r4
 8005364:	e7e2      	b.n	800532c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xe8>
 8005366:	bf00      	nop
 8005368:	0802c824 	.word	0x0802c824
 800536c:	0802d323 	.word	0x0802d323
 8005370:	0802c9c0 	.word	0x0802c9c0
 8005374:	0802ca07 	.word	0x0802ca07
 8005378:	0802caaa 	.word	0x0802caaa
 800537c:	20012dec 	.word	0x20012dec
 8005380:	20012de8 	.word	0x20012de8

08005384 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8005384:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005388:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800538c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800538e:	68a0      	ldr	r0, [r4, #8]
 8005390:	6803      	ldr	r3, [r0, #0]
 8005392:	6a1b      	ldr	r3, [r3, #32]
 8005394:	4798      	blx	r3
 8005396:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800539a:	d205      	bcs.n	80053a8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 800539c:	4b42      	ldr	r3, [pc, #264]	; (80054a8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800539e:	4a43      	ldr	r2, [pc, #268]	; (80054ac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80053a0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80053a2:	4843      	ldr	r0, [pc, #268]	; (80054b0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 80053a4:	f025 fb82 	bl	802aaac <__assert_func>
 80053a8:	6860      	ldr	r0, [r4, #4]
 80053aa:	6803      	ldr	r3, [r0, #0]
 80053ac:	6a1b      	ldr	r3, [r3, #32]
 80053ae:	4798      	blx	r3
 80053b0:	280f      	cmp	r0, #15
 80053b2:	d803      	bhi.n	80053bc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 80053b4:	4b3f      	ldr	r3, [pc, #252]	; (80054b4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 80053b6:	4a3d      	ldr	r2, [pc, #244]	; (80054ac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80053b8:	21a4      	movs	r1, #164	; 0xa4
 80053ba:	e7f2      	b.n	80053a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053bc:	68e0      	ldr	r0, [r4, #12]
 80053be:	6803      	ldr	r3, [r0, #0]
 80053c0:	6a1b      	ldr	r3, [r3, #32]
 80053c2:	4798      	blx	r3
 80053c4:	2837      	cmp	r0, #55	; 0x37
 80053c6:	d803      	bhi.n	80053d0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 80053c8:	4b3b      	ldr	r3, [pc, #236]	; (80054b8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 80053ca:	4a38      	ldr	r2, [pc, #224]	; (80054ac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80053cc:	21a5      	movs	r1, #165	; 0xa5
 80053ce:	e7e8      	b.n	80053a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80053d0:	f010 fc0e 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80053d4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80054bc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 80053d8:	3004      	adds	r0, #4
 80053da:	f010 fc6f 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053de:	f8d9 0000 	ldr.w	r0, [r9]
 80053e2:	b110      	cbz	r0, 80053ea <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80053e4:	6803      	ldr	r3, [r0, #0]
 80053e6:	68db      	ldr	r3, [r3, #12]
 80053e8:	4798      	blx	r3
    if (*currentTrans)
 80053ea:	f8d9 0000 	ldr.w	r0, [r9]
 80053ee:	b110      	cbz	r0, 80053f6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80053f0:	6803      	ldr	r3, [r0, #0]
 80053f2:	681b      	ldr	r3, [r3, #0]
 80053f4:	4798      	blx	r3
    if (*currentScreen)
 80053f6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80054c0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 80053fa:	f8d8 0000 	ldr.w	r0, [r8]
 80053fe:	b110      	cbz	r0, 8005406 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005400:	6803      	ldr	r3, [r0, #0]
 8005402:	695b      	ldr	r3, [r3, #20]
 8005404:	4798      	blx	r3
    if (*currentPresenter)
 8005406:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800540a:	b110      	cbz	r0, 8005412 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800540c:	6803      	ldr	r3, [r0, #0]
 800540e:	685b      	ldr	r3, [r3, #4]
 8005410:	4798      	blx	r3
    if (*currentScreen)
 8005412:	f8d8 0000 	ldr.w	r0, [r8]
 8005416:	b110      	cbz	r0, 800541e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005418:	6803      	ldr	r3, [r0, #0]
 800541a:	681b      	ldr	r3, [r3, #0]
 800541c:	4798      	blx	r3
    if (*currentPresenter)
 800541e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005422:	b110      	cbz	r0, 800542a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005424:	6803      	ldr	r3, [r0, #0]
 8005426:	689b      	ldr	r3, [r3, #8]
 8005428:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800542a:	68e0      	ldr	r0, [r4, #12]
 800542c:	2100      	movs	r1, #0
 800542e:	f7ff fd97 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005432:	2114      	movs	r1, #20
 8005434:	4605      	mov	r5, r0
 8005436:	f7ff fd97 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800543a:	68a0      	ldr	r0, [r4, #8]
 800543c:	6803      	ldr	r3, [r0, #0]
 800543e:	2100      	movs	r1, #0
 8005440:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005442:	4798      	blx	r3
 8005444:	4606      	mov	r6, r0
 8005446:	f003 fe47 	bl	80090d8 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800544a:	6860      	ldr	r0, [r4, #4]
 800544c:	6803      	ldr	r3, [r0, #0]
 800544e:	2100      	movs	r1, #0
 8005450:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005452:	4798      	blx	r3
 8005454:	4631      	mov	r1, r6
 8005456:	4604      	mov	r4, r0
 8005458:	f003 fe18 	bl	800908c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 800545c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005460:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005464:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005468:	b1dc      	cbz	r4, 80054a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 800546a:	1d23      	adds	r3, r4, #4
 800546c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005470:	6833      	ldr	r3, [r6, #0]
 8005472:	f8c4 a008 	str.w	sl, [r4, #8]
 8005476:	4630      	mov	r0, r6
 8005478:	68db      	ldr	r3, [r3, #12]
 800547a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800547c:	4798      	blx	r3
    newPresenter->activate();
 800547e:	6823      	ldr	r3, [r4, #0]
 8005480:	4620      	mov	r0, r4
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005486:	4629      	mov	r1, r5
 8005488:	4630      	mov	r0, r6
 800548a:	f012 f9dd 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800548e:	682b      	ldr	r3, [r5, #0]
 8005490:	4628      	mov	r0, r5
 8005492:	691b      	ldr	r3, [r3, #16]
 8005494:	4798      	blx	r3
    newTransition->invalidate();
 8005496:	682b      	ldr	r3, [r5, #0]
 8005498:	4628      	mov	r0, r5
 800549a:	695b      	ldr	r3, [r3, #20]
}
 800549c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054a0:	4718      	bx	r3
    model->bind(newPresenter);
 80054a2:	4623      	mov	r3, r4
 80054a4:	e7e2      	b.n	800546c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 80054a6:	bf00      	nop
 80054a8:	0802c824 	.word	0x0802c824
 80054ac:	0802d449 	.word	0x0802d449
 80054b0:	0802c9c0 	.word	0x0802c9c0
 80054b4:	0802ca07 	.word	0x0802ca07
 80054b8:	0802caaa 	.word	0x0802caaa
 80054bc:	20012dec 	.word	0x20012dec
 80054c0:	20012de8 	.word	0x20012de8

080054c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 80054c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80054c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80054cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80054ce:	68a0      	ldr	r0, [r4, #8]
 80054d0:	6803      	ldr	r3, [r0, #0]
 80054d2:	6a1b      	ldr	r3, [r3, #32]
 80054d4:	4798      	blx	r3
 80054d6:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80054da:	4298      	cmp	r0, r3
 80054dc:	d805      	bhi.n	80054ea <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 80054de:	4b42      	ldr	r3, [pc, #264]	; (80055e8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 80054e0:	4a42      	ldr	r2, [pc, #264]	; (80055ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80054e2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80054e4:	4842      	ldr	r0, [pc, #264]	; (80055f0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 80054e6:	f025 fae1 	bl	802aaac <__assert_func>
 80054ea:	6860      	ldr	r0, [r4, #4]
 80054ec:	6803      	ldr	r3, [r0, #0]
 80054ee:	6a1b      	ldr	r3, [r3, #32]
 80054f0:	4798      	blx	r3
 80054f2:	280f      	cmp	r0, #15
 80054f4:	d803      	bhi.n	80054fe <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 80054f6:	4b3f      	ldr	r3, [pc, #252]	; (80055f4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 80054f8:	4a3c      	ldr	r2, [pc, #240]	; (80055ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80054fa:	21a4      	movs	r1, #164	; 0xa4
 80054fc:	e7f2      	b.n	80054e4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80054fe:	68e0      	ldr	r0, [r4, #12]
 8005500:	6803      	ldr	r3, [r0, #0]
 8005502:	6a1b      	ldr	r3, [r3, #32]
 8005504:	4798      	blx	r3
 8005506:	2837      	cmp	r0, #55	; 0x37
 8005508:	d803      	bhi.n	8005512 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 800550a:	4b3b      	ldr	r3, [pc, #236]	; (80055f8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 800550c:	4a37      	ldr	r2, [pc, #220]	; (80055ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800550e:	21a5      	movs	r1, #165	; 0xa5
 8005510:	e7e8      	b.n	80054e4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005512:	f010 fb6d 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005516:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80055fc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 800551a:	3004      	adds	r0, #4
 800551c:	f010 fbce 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005520:	f8d9 0000 	ldr.w	r0, [r9]
 8005524:	b110      	cbz	r0, 800552c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005526:	6803      	ldr	r3, [r0, #0]
 8005528:	68db      	ldr	r3, [r3, #12]
 800552a:	4798      	blx	r3
    if (*currentTrans)
 800552c:	f8d9 0000 	ldr.w	r0, [r9]
 8005530:	b110      	cbz	r0, 8005538 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005532:	6803      	ldr	r3, [r0, #0]
 8005534:	681b      	ldr	r3, [r3, #0]
 8005536:	4798      	blx	r3
    if (*currentScreen)
 8005538:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005600 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 800553c:	f8d8 0000 	ldr.w	r0, [r8]
 8005540:	b110      	cbz	r0, 8005548 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005542:	6803      	ldr	r3, [r0, #0]
 8005544:	695b      	ldr	r3, [r3, #20]
 8005546:	4798      	blx	r3
    if (*currentPresenter)
 8005548:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800554c:	b110      	cbz	r0, 8005554 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800554e:	6803      	ldr	r3, [r0, #0]
 8005550:	685b      	ldr	r3, [r3, #4]
 8005552:	4798      	blx	r3
    if (*currentScreen)
 8005554:	f8d8 0000 	ldr.w	r0, [r8]
 8005558:	b110      	cbz	r0, 8005560 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800555a:	6803      	ldr	r3, [r0, #0]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	4798      	blx	r3
    if (*currentPresenter)
 8005560:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005564:	b110      	cbz	r0, 800556c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005566:	6803      	ldr	r3, [r0, #0]
 8005568:	689b      	ldr	r3, [r3, #8]
 800556a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800556c:	68e0      	ldr	r0, [r4, #12]
 800556e:	2100      	movs	r1, #0
 8005570:	f7ff fcf6 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005574:	2114      	movs	r1, #20
 8005576:	4605      	mov	r5, r0
 8005578:	f7ff fcf6 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800557c:	68a0      	ldr	r0, [r4, #8]
 800557e:	6803      	ldr	r3, [r0, #0]
 8005580:	2100      	movs	r1, #0
 8005582:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005584:	4798      	blx	r3
 8005586:	4606      	mov	r6, r0
 8005588:	f004 f896 	bl	80096b8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800558c:	6860      	ldr	r0, [r4, #4]
 800558e:	6803      	ldr	r3, [r0, #0]
 8005590:	2100      	movs	r1, #0
 8005592:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005594:	4798      	blx	r3
 8005596:	4631      	mov	r1, r6
 8005598:	4604      	mov	r4, r0
 800559a:	f004 f867 	bl	800966c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800559e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80055a2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80055a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80055aa:	b1dc      	cbz	r4, 80055e4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 80055ac:	1d23      	adds	r3, r4, #4
 80055ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80055b2:	6833      	ldr	r3, [r6, #0]
 80055b4:	f8c4 a008 	str.w	sl, [r4, #8]
 80055b8:	4630      	mov	r0, r6
 80055ba:	68db      	ldr	r3, [r3, #12]
 80055bc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80055be:	4798      	blx	r3
    newPresenter->activate();
 80055c0:	6823      	ldr	r3, [r4, #0]
 80055c2:	4620      	mov	r0, r4
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80055c8:	4629      	mov	r1, r5
 80055ca:	4630      	mov	r0, r6
 80055cc:	f012 f93c 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80055d0:	682b      	ldr	r3, [r5, #0]
 80055d2:	4628      	mov	r0, r5
 80055d4:	691b      	ldr	r3, [r3, #16]
 80055d6:	4798      	blx	r3
    newTransition->invalidate();
 80055d8:	682b      	ldr	r3, [r5, #0]
 80055da:	4628      	mov	r0, r5
 80055dc:	695b      	ldr	r3, [r3, #20]
}
 80055de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80055e2:	4718      	bx	r3
    model->bind(newPresenter);
 80055e4:	4623      	mov	r3, r4
 80055e6:	e7e2      	b.n	80055ae <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 80055e8:	0802c824 	.word	0x0802c824
 80055ec:	0802d567 	.word	0x0802d567
 80055f0:	0802c9c0 	.word	0x0802c9c0
 80055f4:	0802ca07 	.word	0x0802ca07
 80055f8:	0802caaa 	.word	0x0802caaa
 80055fc:	20012dec 	.word	0x20012dec
 8005600:	20012de8 	.word	0x20012de8

08005604 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005608:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800560c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800560e:	68a0      	ldr	r0, [r4, #8]
 8005610:	6803      	ldr	r3, [r0, #0]
 8005612:	6a1b      	ldr	r3, [r3, #32]
 8005614:	4798      	blx	r3
 8005616:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800561a:	4298      	cmp	r0, r3
 800561c:	d805      	bhi.n	800562a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 800561e:	4b42      	ldr	r3, [pc, #264]	; (8005728 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005620:	4a42      	ldr	r2, [pc, #264]	; (800572c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005622:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005624:	4842      	ldr	r0, [pc, #264]	; (8005730 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005626:	f025 fa41 	bl	802aaac <__assert_func>
 800562a:	6860      	ldr	r0, [r4, #4]
 800562c:	6803      	ldr	r3, [r0, #0]
 800562e:	6a1b      	ldr	r3, [r3, #32]
 8005630:	4798      	blx	r3
 8005632:	280f      	cmp	r0, #15
 8005634:	d803      	bhi.n	800563e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8005636:	4b3f      	ldr	r3, [pc, #252]	; (8005734 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005638:	4a3c      	ldr	r2, [pc, #240]	; (800572c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800563a:	21a4      	movs	r1, #164	; 0xa4
 800563c:	e7f2      	b.n	8005624 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800563e:	68e0      	ldr	r0, [r4, #12]
 8005640:	6803      	ldr	r3, [r0, #0]
 8005642:	6a1b      	ldr	r3, [r3, #32]
 8005644:	4798      	blx	r3
 8005646:	2837      	cmp	r0, #55	; 0x37
 8005648:	d803      	bhi.n	8005652 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 800564a:	4b3b      	ldr	r3, [pc, #236]	; (8005738 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 800564c:	4a37      	ldr	r2, [pc, #220]	; (800572c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800564e:	21a5      	movs	r1, #165	; 0xa5
 8005650:	e7e8      	b.n	8005624 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005652:	f010 facd 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005656:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800573c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 800565a:	3004      	adds	r0, #4
 800565c:	f010 fb2e 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005660:	f8d9 0000 	ldr.w	r0, [r9]
 8005664:	b110      	cbz	r0, 800566c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005666:	6803      	ldr	r3, [r0, #0]
 8005668:	68db      	ldr	r3, [r3, #12]
 800566a:	4798      	blx	r3
    if (*currentTrans)
 800566c:	f8d9 0000 	ldr.w	r0, [r9]
 8005670:	b110      	cbz	r0, 8005678 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005672:	6803      	ldr	r3, [r0, #0]
 8005674:	681b      	ldr	r3, [r3, #0]
 8005676:	4798      	blx	r3
    if (*currentScreen)
 8005678:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005740 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 800567c:	f8d8 0000 	ldr.w	r0, [r8]
 8005680:	b110      	cbz	r0, 8005688 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005682:	6803      	ldr	r3, [r0, #0]
 8005684:	695b      	ldr	r3, [r3, #20]
 8005686:	4798      	blx	r3
    if (*currentPresenter)
 8005688:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800568c:	b110      	cbz	r0, 8005694 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800568e:	6803      	ldr	r3, [r0, #0]
 8005690:	685b      	ldr	r3, [r3, #4]
 8005692:	4798      	blx	r3
    if (*currentScreen)
 8005694:	f8d8 0000 	ldr.w	r0, [r8]
 8005698:	b110      	cbz	r0, 80056a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800569a:	6803      	ldr	r3, [r0, #0]
 800569c:	681b      	ldr	r3, [r3, #0]
 800569e:	4798      	blx	r3
    if (*currentPresenter)
 80056a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056a4:	b110      	cbz	r0, 80056ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80056a6:	6803      	ldr	r3, [r0, #0]
 80056a8:	689b      	ldr	r3, [r3, #8]
 80056aa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80056ac:	68e0      	ldr	r0, [r4, #12]
 80056ae:	2100      	movs	r1, #0
 80056b0:	f7ff fc56 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80056b4:	2114      	movs	r1, #20
 80056b6:	4605      	mov	r5, r0
 80056b8:	f7ff fc56 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056bc:	68a0      	ldr	r0, [r4, #8]
 80056be:	6803      	ldr	r3, [r0, #0]
 80056c0:	2100      	movs	r1, #0
 80056c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056c4:	4798      	blx	r3
 80056c6:	4606      	mov	r6, r0
 80056c8:	f003 ffb4 	bl	8009634 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80056cc:	6860      	ldr	r0, [r4, #4]
 80056ce:	6803      	ldr	r3, [r0, #0]
 80056d0:	2100      	movs	r1, #0
 80056d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056d4:	4798      	blx	r3
 80056d6:	4631      	mov	r1, r6
 80056d8:	4604      	mov	r4, r0
 80056da:	f003 ff85 	bl	80095e8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 80056de:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80056e2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80056e6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80056ea:	b1dc      	cbz	r4, 8005724 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80056ec:	1d23      	adds	r3, r4, #4
 80056ee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80056f2:	6833      	ldr	r3, [r6, #0]
 80056f4:	f8c4 a008 	str.w	sl, [r4, #8]
 80056f8:	4630      	mov	r0, r6
 80056fa:	68db      	ldr	r3, [r3, #12]
 80056fc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80056fe:	4798      	blx	r3
    newPresenter->activate();
 8005700:	6823      	ldr	r3, [r4, #0]
 8005702:	4620      	mov	r0, r4
 8005704:	681b      	ldr	r3, [r3, #0]
 8005706:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005708:	4629      	mov	r1, r5
 800570a:	4630      	mov	r0, r6
 800570c:	f012 f89c 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005710:	682b      	ldr	r3, [r5, #0]
 8005712:	4628      	mov	r0, r5
 8005714:	691b      	ldr	r3, [r3, #16]
 8005716:	4798      	blx	r3
    newTransition->invalidate();
 8005718:	682b      	ldr	r3, [r5, #0]
 800571a:	4628      	mov	r0, r5
 800571c:	695b      	ldr	r3, [r3, #20]
}
 800571e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005722:	4718      	bx	r3
    model->bind(newPresenter);
 8005724:	4623      	mov	r3, r4
 8005726:	e7e2      	b.n	80056ee <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8005728:	0802c824 	.word	0x0802c824
 800572c:	0802d6ab 	.word	0x0802d6ab
 8005730:	0802c9c0 	.word	0x0802c9c0
 8005734:	0802ca07 	.word	0x0802ca07
 8005738:	0802caaa 	.word	0x0802caaa
 800573c:	20012dec 	.word	0x20012dec
 8005740:	20012de8 	.word	0x20012de8

08005744 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8005744:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005748:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800574c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800574e:	68a0      	ldr	r0, [r4, #8]
 8005750:	6803      	ldr	r3, [r0, #0]
 8005752:	6a1b      	ldr	r3, [r3, #32]
 8005754:	4798      	blx	r3
 8005756:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800575a:	d205      	bcs.n	8005768 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 800575c:	4b42      	ldr	r3, [pc, #264]	; (8005868 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 800575e:	4a43      	ldr	r2, [pc, #268]	; (800586c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005760:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005762:	4843      	ldr	r0, [pc, #268]	; (8005870 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8005764:	f025 f9a2 	bl	802aaac <__assert_func>
 8005768:	6860      	ldr	r0, [r4, #4]
 800576a:	6803      	ldr	r3, [r0, #0]
 800576c:	6a1b      	ldr	r3, [r3, #32]
 800576e:	4798      	blx	r3
 8005770:	280f      	cmp	r0, #15
 8005772:	d803      	bhi.n	800577c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8005774:	4b3f      	ldr	r3, [pc, #252]	; (8005874 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8005776:	4a3d      	ldr	r2, [pc, #244]	; (800586c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005778:	21a4      	movs	r1, #164	; 0xa4
 800577a:	e7f2      	b.n	8005762 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800577c:	68e0      	ldr	r0, [r4, #12]
 800577e:	6803      	ldr	r3, [r0, #0]
 8005780:	6a1b      	ldr	r3, [r3, #32]
 8005782:	4798      	blx	r3
 8005784:	2837      	cmp	r0, #55	; 0x37
 8005786:	d803      	bhi.n	8005790 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005788:	4b3b      	ldr	r3, [pc, #236]	; (8005878 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 800578a:	4a38      	ldr	r2, [pc, #224]	; (800586c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800578c:	21a5      	movs	r1, #165	; 0xa5
 800578e:	e7e8      	b.n	8005762 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005790:	f010 fa2e 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005794:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800587c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005798:	3004      	adds	r0, #4
 800579a:	f010 fa8f 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800579e:	f8d9 0000 	ldr.w	r0, [r9]
 80057a2:	b110      	cbz	r0, 80057aa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80057a4:	6803      	ldr	r3, [r0, #0]
 80057a6:	68db      	ldr	r3, [r3, #12]
 80057a8:	4798      	blx	r3
    if (*currentTrans)
 80057aa:	f8d9 0000 	ldr.w	r0, [r9]
 80057ae:	b110      	cbz	r0, 80057b6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80057b0:	6803      	ldr	r3, [r0, #0]
 80057b2:	681b      	ldr	r3, [r3, #0]
 80057b4:	4798      	blx	r3
    if (*currentScreen)
 80057b6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005880 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 80057ba:	f8d8 0000 	ldr.w	r0, [r8]
 80057be:	b110      	cbz	r0, 80057c6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80057c0:	6803      	ldr	r3, [r0, #0]
 80057c2:	695b      	ldr	r3, [r3, #20]
 80057c4:	4798      	blx	r3
    if (*currentPresenter)
 80057c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057ca:	b110      	cbz	r0, 80057d2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80057cc:	6803      	ldr	r3, [r0, #0]
 80057ce:	685b      	ldr	r3, [r3, #4]
 80057d0:	4798      	blx	r3
    if (*currentScreen)
 80057d2:	f8d8 0000 	ldr.w	r0, [r8]
 80057d6:	b110      	cbz	r0, 80057de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80057d8:	6803      	ldr	r3, [r0, #0]
 80057da:	681b      	ldr	r3, [r3, #0]
 80057dc:	4798      	blx	r3
    if (*currentPresenter)
 80057de:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057e2:	b110      	cbz	r0, 80057ea <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80057e4:	6803      	ldr	r3, [r0, #0]
 80057e6:	689b      	ldr	r3, [r3, #8]
 80057e8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80057ea:	68e0      	ldr	r0, [r4, #12]
 80057ec:	2100      	movs	r1, #0
 80057ee:	f7ff fbb7 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80057f2:	2114      	movs	r1, #20
 80057f4:	4605      	mov	r5, r0
 80057f6:	f7ff fbb7 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80057fa:	68a0      	ldr	r0, [r4, #8]
 80057fc:	6803      	ldr	r3, [r0, #0]
 80057fe:	2100      	movs	r1, #0
 8005800:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005802:	4798      	blx	r3
 8005804:	4606      	mov	r6, r0
 8005806:	f003 febb 	bl	8009580 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800580a:	6860      	ldr	r0, [r4, #4]
 800580c:	6803      	ldr	r3, [r0, #0]
 800580e:	2100      	movs	r1, #0
 8005810:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005812:	4798      	blx	r3
 8005814:	4631      	mov	r1, r6
 8005816:	4604      	mov	r4, r0
 8005818:	f003 fe8c 	bl	8009534 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800581c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005820:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005824:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005828:	b1dc      	cbz	r4, 8005862 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 800582a:	1d23      	adds	r3, r4, #4
 800582c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005830:	6833      	ldr	r3, [r6, #0]
 8005832:	f8c4 a008 	str.w	sl, [r4, #8]
 8005836:	4630      	mov	r0, r6
 8005838:	68db      	ldr	r3, [r3, #12]
 800583a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800583c:	4798      	blx	r3
    newPresenter->activate();
 800583e:	6823      	ldr	r3, [r4, #0]
 8005840:	4620      	mov	r0, r4
 8005842:	681b      	ldr	r3, [r3, #0]
 8005844:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005846:	4629      	mov	r1, r5
 8005848:	4630      	mov	r0, r6
 800584a:	f011 fffd 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800584e:	682b      	ldr	r3, [r5, #0]
 8005850:	4628      	mov	r0, r5
 8005852:	691b      	ldr	r3, [r3, #16]
 8005854:	4798      	blx	r3
    newTransition->invalidate();
 8005856:	682b      	ldr	r3, [r5, #0]
 8005858:	4628      	mov	r0, r5
 800585a:	695b      	ldr	r3, [r3, #20]
}
 800585c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005860:	4718      	bx	r3
    model->bind(newPresenter);
 8005862:	4623      	mov	r3, r4
 8005864:	e7e2      	b.n	800582c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8005866:	bf00      	nop
 8005868:	0802c824 	.word	0x0802c824
 800586c:	0802d7eb 	.word	0x0802d7eb
 8005870:	0802c9c0 	.word	0x0802c9c0
 8005874:	0802ca07 	.word	0x0802ca07
 8005878:	0802caaa 	.word	0x0802caaa
 800587c:	20012dec 	.word	0x20012dec
 8005880:	20012de8 	.word	0x20012de8

08005884 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8005884:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005888:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800588c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800588e:	68a0      	ldr	r0, [r4, #8]
 8005890:	6803      	ldr	r3, [r0, #0]
 8005892:	6a1b      	ldr	r3, [r3, #32]
 8005894:	4798      	blx	r3
 8005896:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800589a:	4298      	cmp	r0, r3
 800589c:	d805      	bhi.n	80058aa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800589e:	4b42      	ldr	r3, [pc, #264]	; (80059a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 80058a0:	4a42      	ldr	r2, [pc, #264]	; (80059ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80058a2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058a4:	4842      	ldr	r0, [pc, #264]	; (80059b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 80058a6:	f025 f901 	bl	802aaac <__assert_func>
 80058aa:	6860      	ldr	r0, [r4, #4]
 80058ac:	6803      	ldr	r3, [r0, #0]
 80058ae:	6a1b      	ldr	r3, [r3, #32]
 80058b0:	4798      	blx	r3
 80058b2:	280f      	cmp	r0, #15
 80058b4:	d803      	bhi.n	80058be <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 80058b6:	4b3f      	ldr	r3, [pc, #252]	; (80059b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 80058b8:	4a3c      	ldr	r2, [pc, #240]	; (80059ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80058ba:	21a4      	movs	r1, #164	; 0xa4
 80058bc:	e7f2      	b.n	80058a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058be:	68e0      	ldr	r0, [r4, #12]
 80058c0:	6803      	ldr	r3, [r0, #0]
 80058c2:	6a1b      	ldr	r3, [r3, #32]
 80058c4:	4798      	blx	r3
 80058c6:	2837      	cmp	r0, #55	; 0x37
 80058c8:	d803      	bhi.n	80058d2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 80058ca:	4b3b      	ldr	r3, [pc, #236]	; (80059b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 80058cc:	4a37      	ldr	r2, [pc, #220]	; (80059ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80058ce:	21a5      	movs	r1, #165	; 0xa5
 80058d0:	e7e8      	b.n	80058a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80058d2:	f010 f98d 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80058d6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 80058da:	3004      	adds	r0, #4
 80058dc:	f010 f9ee 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80058e0:	f8d9 0000 	ldr.w	r0, [r9]
 80058e4:	b110      	cbz	r0, 80058ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80058e6:	6803      	ldr	r3, [r0, #0]
 80058e8:	68db      	ldr	r3, [r3, #12]
 80058ea:	4798      	blx	r3
    if (*currentTrans)
 80058ec:	f8d9 0000 	ldr.w	r0, [r9]
 80058f0:	b110      	cbz	r0, 80058f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80058f2:	6803      	ldr	r3, [r0, #0]
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	4798      	blx	r3
    if (*currentScreen)
 80058f8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80059c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80058fc:	f8d8 0000 	ldr.w	r0, [r8]
 8005900:	b110      	cbz	r0, 8005908 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005902:	6803      	ldr	r3, [r0, #0]
 8005904:	695b      	ldr	r3, [r3, #20]
 8005906:	4798      	blx	r3
    if (*currentPresenter)
 8005908:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800590c:	b110      	cbz	r0, 8005914 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800590e:	6803      	ldr	r3, [r0, #0]
 8005910:	685b      	ldr	r3, [r3, #4]
 8005912:	4798      	blx	r3
    if (*currentScreen)
 8005914:	f8d8 0000 	ldr.w	r0, [r8]
 8005918:	b110      	cbz	r0, 8005920 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800591a:	6803      	ldr	r3, [r0, #0]
 800591c:	681b      	ldr	r3, [r3, #0]
 800591e:	4798      	blx	r3
    if (*currentPresenter)
 8005920:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005924:	b110      	cbz	r0, 800592c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005926:	6803      	ldr	r3, [r0, #0]
 8005928:	689b      	ldr	r3, [r3, #8]
 800592a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800592c:	68e0      	ldr	r0, [r4, #12]
 800592e:	2100      	movs	r1, #0
 8005930:	f7ff fb16 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005934:	2114      	movs	r1, #20
 8005936:	4605      	mov	r5, r0
 8005938:	f7ff fb16 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800593c:	68a0      	ldr	r0, [r4, #8]
 800593e:	6803      	ldr	r3, [r0, #0]
 8005940:	2100      	movs	r1, #0
 8005942:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005944:	4798      	blx	r3
 8005946:	4606      	mov	r6, r0
 8005948:	f003 fff0 	bl	800992c <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800594c:	6860      	ldr	r0, [r4, #4]
 800594e:	6803      	ldr	r3, [r0, #0]
 8005950:	2100      	movs	r1, #0
 8005952:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005954:	4798      	blx	r3
 8005956:	4631      	mov	r1, r6
 8005958:	4604      	mov	r4, r0
 800595a:	f003 ffc1 	bl	80098e0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 800595e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005962:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005966:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800596a:	b1dc      	cbz	r4, 80059a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 800596c:	1d23      	adds	r3, r4, #4
 800596e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005972:	6833      	ldr	r3, [r6, #0]
 8005974:	f8c4 a008 	str.w	sl, [r4, #8]
 8005978:	4630      	mov	r0, r6
 800597a:	68db      	ldr	r3, [r3, #12]
 800597c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800597e:	4798      	blx	r3
    newPresenter->activate();
 8005980:	6823      	ldr	r3, [r4, #0]
 8005982:	4620      	mov	r0, r4
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005988:	4629      	mov	r1, r5
 800598a:	4630      	mov	r0, r6
 800598c:	f011 ff5c 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005990:	682b      	ldr	r3, [r5, #0]
 8005992:	4628      	mov	r0, r5
 8005994:	691b      	ldr	r3, [r3, #16]
 8005996:	4798      	blx	r3
    newTransition->invalidate();
 8005998:	682b      	ldr	r3, [r5, #0]
 800599a:	4628      	mov	r0, r5
 800599c:	695b      	ldr	r3, [r3, #20]
}
 800599e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059a2:	4718      	bx	r3
    model->bind(newPresenter);
 80059a4:	4623      	mov	r3, r4
 80059a6:	e7e2      	b.n	800596e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 80059a8:	0802c824 	.word	0x0802c824
 80059ac:	0802d91b 	.word	0x0802d91b
 80059b0:	0802c9c0 	.word	0x0802c9c0
 80059b4:	0802ca07 	.word	0x0802ca07
 80059b8:	0802caaa 	.word	0x0802caaa
 80059bc:	20012dec 	.word	0x20012dec
 80059c0:	20012de8 	.word	0x20012de8

080059c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 80059c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80059cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059ce:	68a0      	ldr	r0, [r4, #8]
 80059d0:	6803      	ldr	r3, [r0, #0]
 80059d2:	6a1b      	ldr	r3, [r3, #32]
 80059d4:	4798      	blx	r3
 80059d6:	f241 33f7 	movw	r3, #5111	; 0x13f7
 80059da:	4298      	cmp	r0, r3
 80059dc:	d805      	bhi.n	80059ea <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 80059de:	4b42      	ldr	r3, [pc, #264]	; (8005ae8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 80059e0:	4a42      	ldr	r2, [pc, #264]	; (8005aec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80059e2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80059e4:	4842      	ldr	r0, [pc, #264]	; (8005af0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 80059e6:	f025 f861 	bl	802aaac <__assert_func>
 80059ea:	6860      	ldr	r0, [r4, #4]
 80059ec:	6803      	ldr	r3, [r0, #0]
 80059ee:	6a1b      	ldr	r3, [r3, #32]
 80059f0:	4798      	blx	r3
 80059f2:	280f      	cmp	r0, #15
 80059f4:	d803      	bhi.n	80059fe <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80059f6:	4b3f      	ldr	r3, [pc, #252]	; (8005af4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80059f8:	4a3c      	ldr	r2, [pc, #240]	; (8005aec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80059fa:	21a4      	movs	r1, #164	; 0xa4
 80059fc:	e7f2      	b.n	80059e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80059fe:	68e0      	ldr	r0, [r4, #12]
 8005a00:	6803      	ldr	r3, [r0, #0]
 8005a02:	6a1b      	ldr	r3, [r3, #32]
 8005a04:	4798      	blx	r3
 8005a06:	2837      	cmp	r0, #55	; 0x37
 8005a08:	d803      	bhi.n	8005a12 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8005a0a:	4b3b      	ldr	r3, [pc, #236]	; (8005af8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8005a0c:	4a37      	ldr	r2, [pc, #220]	; (8005aec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005a0e:	21a5      	movs	r1, #165	; 0xa5
 8005a10:	e7e8      	b.n	80059e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005a12:	f010 f8ed 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a16:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005afc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8005a1a:	3004      	adds	r0, #4
 8005a1c:	f010 f94e 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a20:	f8d9 0000 	ldr.w	r0, [r9]
 8005a24:	b110      	cbz	r0, 8005a2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005a26:	6803      	ldr	r3, [r0, #0]
 8005a28:	68db      	ldr	r3, [r3, #12]
 8005a2a:	4798      	blx	r3
    if (*currentTrans)
 8005a2c:	f8d9 0000 	ldr.w	r0, [r9]
 8005a30:	b110      	cbz	r0, 8005a38 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005a32:	6803      	ldr	r3, [r0, #0]
 8005a34:	681b      	ldr	r3, [r3, #0]
 8005a36:	4798      	blx	r3
    if (*currentScreen)
 8005a38:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005b00 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8005a3c:	f8d8 0000 	ldr.w	r0, [r8]
 8005a40:	b110      	cbz	r0, 8005a48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005a42:	6803      	ldr	r3, [r0, #0]
 8005a44:	695b      	ldr	r3, [r3, #20]
 8005a46:	4798      	blx	r3
    if (*currentPresenter)
 8005a48:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a4c:	b110      	cbz	r0, 8005a54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005a4e:	6803      	ldr	r3, [r0, #0]
 8005a50:	685b      	ldr	r3, [r3, #4]
 8005a52:	4798      	blx	r3
    if (*currentScreen)
 8005a54:	f8d8 0000 	ldr.w	r0, [r8]
 8005a58:	b110      	cbz	r0, 8005a60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005a5a:	6803      	ldr	r3, [r0, #0]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	4798      	blx	r3
    if (*currentPresenter)
 8005a60:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a64:	b110      	cbz	r0, 8005a6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005a66:	6803      	ldr	r3, [r0, #0]
 8005a68:	689b      	ldr	r3, [r3, #8]
 8005a6a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a6c:	68e0      	ldr	r0, [r4, #12]
 8005a6e:	2100      	movs	r1, #0
 8005a70:	f7ff fa76 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005a74:	2114      	movs	r1, #20
 8005a76:	4605      	mov	r5, r0
 8005a78:	f7ff fa76 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005a7c:	68a0      	ldr	r0, [r4, #8]
 8005a7e:	6803      	ldr	r3, [r0, #0]
 8005a80:	2100      	movs	r1, #0
 8005a82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a84:	4798      	blx	r3
 8005a86:	4606      	mov	r6, r0
 8005a88:	f003 feb8 	bl	80097fc <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005a8c:	6860      	ldr	r0, [r4, #4]
 8005a8e:	6803      	ldr	r3, [r0, #0]
 8005a90:	2100      	movs	r1, #0
 8005a92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a94:	4798      	blx	r3
 8005a96:	4631      	mov	r1, r6
 8005a98:	4604      	mov	r4, r0
 8005a9a:	f003 fe89 	bl	80097b0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8005a9e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005aa2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005aa6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005aaa:	b1dc      	cbz	r4, 8005ae4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005aac:	1d23      	adds	r3, r4, #4
 8005aae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ab2:	6833      	ldr	r3, [r6, #0]
 8005ab4:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ab8:	4630      	mov	r0, r6
 8005aba:	68db      	ldr	r3, [r3, #12]
 8005abc:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005abe:	4798      	blx	r3
    newPresenter->activate();
 8005ac0:	6823      	ldr	r3, [r4, #0]
 8005ac2:	4620      	mov	r0, r4
 8005ac4:	681b      	ldr	r3, [r3, #0]
 8005ac6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005ac8:	4629      	mov	r1, r5
 8005aca:	4630      	mov	r0, r6
 8005acc:	f011 febc 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ad0:	682b      	ldr	r3, [r5, #0]
 8005ad2:	4628      	mov	r0, r5
 8005ad4:	691b      	ldr	r3, [r3, #16]
 8005ad6:	4798      	blx	r3
    newTransition->invalidate();
 8005ad8:	682b      	ldr	r3, [r5, #0]
 8005ada:	4628      	mov	r0, r5
 8005adc:	695b      	ldr	r3, [r3, #20]
}
 8005ade:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ae2:	4718      	bx	r3
    model->bind(newPresenter);
 8005ae4:	4623      	mov	r3, r4
 8005ae6:	e7e2      	b.n	8005aae <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005ae8:	0802c824 	.word	0x0802c824
 8005aec:	0802da5d 	.word	0x0802da5d
 8005af0:	0802c9c0 	.word	0x0802c9c0
 8005af4:	0802ca07 	.word	0x0802ca07
 8005af8:	0802caaa 	.word	0x0802caaa
 8005afc:	20012dec 	.word	0x20012dec
 8005b00:	20012de8 	.word	0x20012de8

08005b04 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005b04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005b08:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005b0c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005b0e:	68a0      	ldr	r0, [r4, #8]
 8005b10:	6803      	ldr	r3, [r0, #0]
 8005b12:	6a1b      	ldr	r3, [r3, #32]
 8005b14:	4798      	blx	r3
 8005b16:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005b1a:	d205      	bcs.n	8005b28 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8005b1c:	4b42      	ldr	r3, [pc, #264]	; (8005c28 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8005b1e:	4a43      	ldr	r2, [pc, #268]	; (8005c2c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005b20:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005b22:	4843      	ldr	r0, [pc, #268]	; (8005c30 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8005b24:	f024 ffc2 	bl	802aaac <__assert_func>
 8005b28:	6860      	ldr	r0, [r4, #4]
 8005b2a:	6803      	ldr	r3, [r0, #0]
 8005b2c:	6a1b      	ldr	r3, [r3, #32]
 8005b2e:	4798      	blx	r3
 8005b30:	280f      	cmp	r0, #15
 8005b32:	d803      	bhi.n	8005b3c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8005b34:	4b3f      	ldr	r3, [pc, #252]	; (8005c34 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8005b36:	4a3d      	ldr	r2, [pc, #244]	; (8005c2c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005b38:	21a4      	movs	r1, #164	; 0xa4
 8005b3a:	e7f2      	b.n	8005b22 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005b3c:	68e0      	ldr	r0, [r4, #12]
 8005b3e:	6803      	ldr	r3, [r0, #0]
 8005b40:	6a1b      	ldr	r3, [r3, #32]
 8005b42:	4798      	blx	r3
 8005b44:	2837      	cmp	r0, #55	; 0x37
 8005b46:	d803      	bhi.n	8005b50 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8005b48:	4b3b      	ldr	r3, [pc, #236]	; (8005c38 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8005b4a:	4a38      	ldr	r2, [pc, #224]	; (8005c2c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005b4c:	21a5      	movs	r1, #165	; 0xa5
 8005b4e:	e7e8      	b.n	8005b22 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005b50:	f010 f84e 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005b54:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005c3c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8005b58:	3004      	adds	r0, #4
 8005b5a:	f010 f8af 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005b5e:	f8d9 0000 	ldr.w	r0, [r9]
 8005b62:	b110      	cbz	r0, 8005b6a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005b64:	6803      	ldr	r3, [r0, #0]
 8005b66:	68db      	ldr	r3, [r3, #12]
 8005b68:	4798      	blx	r3
    if (*currentTrans)
 8005b6a:	f8d9 0000 	ldr.w	r0, [r9]
 8005b6e:	b110      	cbz	r0, 8005b76 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005b70:	6803      	ldr	r3, [r0, #0]
 8005b72:	681b      	ldr	r3, [r3, #0]
 8005b74:	4798      	blx	r3
    if (*currentScreen)
 8005b76:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005c40 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005b7a:	f8d8 0000 	ldr.w	r0, [r8]
 8005b7e:	b110      	cbz	r0, 8005b86 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005b80:	6803      	ldr	r3, [r0, #0]
 8005b82:	695b      	ldr	r3, [r3, #20]
 8005b84:	4798      	blx	r3
    if (*currentPresenter)
 8005b86:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005b8a:	b110      	cbz	r0, 8005b92 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005b8c:	6803      	ldr	r3, [r0, #0]
 8005b8e:	685b      	ldr	r3, [r3, #4]
 8005b90:	4798      	blx	r3
    if (*currentScreen)
 8005b92:	f8d8 0000 	ldr.w	r0, [r8]
 8005b96:	b110      	cbz	r0, 8005b9e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005b98:	6803      	ldr	r3, [r0, #0]
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	4798      	blx	r3
    if (*currentPresenter)
 8005b9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ba2:	b110      	cbz	r0, 8005baa <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005ba4:	6803      	ldr	r3, [r0, #0]
 8005ba6:	689b      	ldr	r3, [r3, #8]
 8005ba8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005baa:	68e0      	ldr	r0, [r4, #12]
 8005bac:	2100      	movs	r1, #0
 8005bae:	f7ff f9d7 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005bb2:	2114      	movs	r1, #20
 8005bb4:	4605      	mov	r5, r0
 8005bb6:	f7ff f9d7 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005bba:	68a0      	ldr	r0, [r4, #8]
 8005bbc:	6803      	ldr	r3, [r0, #0]
 8005bbe:	2100      	movs	r1, #0
 8005bc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bc2:	4798      	blx	r3
 8005bc4:	4606      	mov	r6, r0
 8005bc6:	f003 fdbf 	bl	8009748 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005bca:	6860      	ldr	r0, [r4, #4]
 8005bcc:	6803      	ldr	r3, [r0, #0]
 8005bce:	2100      	movs	r1, #0
 8005bd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bd2:	4798      	blx	r3
 8005bd4:	4631      	mov	r1, r6
 8005bd6:	4604      	mov	r4, r0
 8005bd8:	f003 fd90 	bl	80096fc <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005bdc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005be0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005be4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005be8:	b1dc      	cbz	r4, 8005c22 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005bea:	1d23      	adds	r3, r4, #4
 8005bec:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005bf0:	6833      	ldr	r3, [r6, #0]
 8005bf2:	f8c4 a008 	str.w	sl, [r4, #8]
 8005bf6:	4630      	mov	r0, r6
 8005bf8:	68db      	ldr	r3, [r3, #12]
 8005bfa:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005bfc:	4798      	blx	r3
    newPresenter->activate();
 8005bfe:	6823      	ldr	r3, [r4, #0]
 8005c00:	4620      	mov	r0, r4
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c06:	4629      	mov	r1, r5
 8005c08:	4630      	mov	r0, r6
 8005c0a:	f011 fe1d 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005c0e:	682b      	ldr	r3, [r5, #0]
 8005c10:	4628      	mov	r0, r5
 8005c12:	691b      	ldr	r3, [r3, #16]
 8005c14:	4798      	blx	r3
    newTransition->invalidate();
 8005c16:	682b      	ldr	r3, [r5, #0]
 8005c18:	4628      	mov	r0, r5
 8005c1a:	695b      	ldr	r3, [r3, #20]
}
 8005c1c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c20:	4718      	bx	r3
    model->bind(newPresenter);
 8005c22:	4623      	mov	r3, r4
 8005c24:	e7e2      	b.n	8005bec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8005c26:	bf00      	nop
 8005c28:	0802c824 	.word	0x0802c824
 8005c2c:	0802db9f 	.word	0x0802db9f
 8005c30:	0802c9c0 	.word	0x0802c9c0
 8005c34:	0802ca07 	.word	0x0802ca07
 8005c38:	0802caaa 	.word	0x0802caaa
 8005c3c:	20012dec 	.word	0x20012dec
 8005c40:	20012de8 	.word	0x20012de8

08005c44 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8005c44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005c48:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005c4c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005c4e:	68a0      	ldr	r0, [r4, #8]
 8005c50:	6803      	ldr	r3, [r0, #0]
 8005c52:	6a1b      	ldr	r3, [r3, #32]
 8005c54:	4798      	blx	r3
 8005c56:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005c5a:	d205      	bcs.n	8005c68 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005c5c:	4b42      	ldr	r3, [pc, #264]	; (8005d68 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8005c5e:	4a43      	ldr	r2, [pc, #268]	; (8005d6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005c60:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005c62:	4843      	ldr	r0, [pc, #268]	; (8005d70 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005c64:	f024 ff22 	bl	802aaac <__assert_func>
 8005c68:	6860      	ldr	r0, [r4, #4]
 8005c6a:	6803      	ldr	r3, [r0, #0]
 8005c6c:	6a1b      	ldr	r3, [r3, #32]
 8005c6e:	4798      	blx	r3
 8005c70:	280f      	cmp	r0, #15
 8005c72:	d803      	bhi.n	8005c7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005c74:	4b3f      	ldr	r3, [pc, #252]	; (8005d74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005c76:	4a3d      	ldr	r2, [pc, #244]	; (8005d6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005c78:	21a4      	movs	r1, #164	; 0xa4
 8005c7a:	e7f2      	b.n	8005c62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005c7c:	68e0      	ldr	r0, [r4, #12]
 8005c7e:	6803      	ldr	r3, [r0, #0]
 8005c80:	6a1b      	ldr	r3, [r3, #32]
 8005c82:	4798      	blx	r3
 8005c84:	2837      	cmp	r0, #55	; 0x37
 8005c86:	d803      	bhi.n	8005c90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005c88:	4b3b      	ldr	r3, [pc, #236]	; (8005d78 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005c8a:	4a38      	ldr	r2, [pc, #224]	; (8005d6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005c8c:	21a5      	movs	r1, #165	; 0xa5
 8005c8e:	e7e8      	b.n	8005c62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005c90:	f00f ffae 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005c94:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005d7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005c98:	3004      	adds	r0, #4
 8005c9a:	f010 f80f 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005c9e:	f8d9 0000 	ldr.w	r0, [r9]
 8005ca2:	b110      	cbz	r0, 8005caa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005ca4:	6803      	ldr	r3, [r0, #0]
 8005ca6:	68db      	ldr	r3, [r3, #12]
 8005ca8:	4798      	blx	r3
    if (*currentTrans)
 8005caa:	f8d9 0000 	ldr.w	r0, [r9]
 8005cae:	b110      	cbz	r0, 8005cb6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005cb0:	6803      	ldr	r3, [r0, #0]
 8005cb2:	681b      	ldr	r3, [r3, #0]
 8005cb4:	4798      	blx	r3
    if (*currentScreen)
 8005cb6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005d80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005cba:	f8d8 0000 	ldr.w	r0, [r8]
 8005cbe:	b110      	cbz	r0, 8005cc6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005cc0:	6803      	ldr	r3, [r0, #0]
 8005cc2:	695b      	ldr	r3, [r3, #20]
 8005cc4:	4798      	blx	r3
    if (*currentPresenter)
 8005cc6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005cca:	b110      	cbz	r0, 8005cd2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005ccc:	6803      	ldr	r3, [r0, #0]
 8005cce:	685b      	ldr	r3, [r3, #4]
 8005cd0:	4798      	blx	r3
    if (*currentScreen)
 8005cd2:	f8d8 0000 	ldr.w	r0, [r8]
 8005cd6:	b110      	cbz	r0, 8005cde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005cd8:	6803      	ldr	r3, [r0, #0]
 8005cda:	681b      	ldr	r3, [r3, #0]
 8005cdc:	4798      	blx	r3
    if (*currentPresenter)
 8005cde:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ce2:	b110      	cbz	r0, 8005cea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005ce4:	6803      	ldr	r3, [r0, #0]
 8005ce6:	689b      	ldr	r3, [r3, #8]
 8005ce8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005cea:	68e0      	ldr	r0, [r4, #12]
 8005cec:	2100      	movs	r1, #0
 8005cee:	f7ff f937 	bl	8004f60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005cf2:	2114      	movs	r1, #20
 8005cf4:	4605      	mov	r5, r0
 8005cf6:	f7ff f937 	bl	8004f68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005cfa:	68a0      	ldr	r0, [r4, #8]
 8005cfc:	6803      	ldr	r3, [r0, #0]
 8005cfe:	2100      	movs	r1, #0
 8005d00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d02:	4798      	blx	r3
 8005d04:	4606      	mov	r6, r0
 8005d06:	f003 fbdb 	bl	80094c0 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005d0a:	6860      	ldr	r0, [r4, #4]
 8005d0c:	6803      	ldr	r3, [r0, #0]
 8005d0e:	2100      	movs	r1, #0
 8005d10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d12:	4798      	blx	r3
 8005d14:	4631      	mov	r1, r6
 8005d16:	4604      	mov	r4, r0
 8005d18:	f003 fbac 	bl	8009474 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005d1c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005d20:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005d24:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005d28:	b1dc      	cbz	r4, 8005d62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005d2a:	1d23      	adds	r3, r4, #4
 8005d2c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005d30:	6833      	ldr	r3, [r6, #0]
 8005d32:	f8c4 a008 	str.w	sl, [r4, #8]
 8005d36:	4630      	mov	r0, r6
 8005d38:	68db      	ldr	r3, [r3, #12]
 8005d3a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005d3c:	4798      	blx	r3
    newPresenter->activate();
 8005d3e:	6823      	ldr	r3, [r4, #0]
 8005d40:	4620      	mov	r0, r4
 8005d42:	681b      	ldr	r3, [r3, #0]
 8005d44:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005d46:	4629      	mov	r1, r5
 8005d48:	4630      	mov	r0, r6
 8005d4a:	f011 fd7d 	bl	8017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005d4e:	682b      	ldr	r3, [r5, #0]
 8005d50:	4628      	mov	r0, r5
 8005d52:	691b      	ldr	r3, [r3, #16]
 8005d54:	4798      	blx	r3
    newTransition->invalidate();
 8005d56:	682b      	ldr	r3, [r5, #0]
 8005d58:	4628      	mov	r0, r5
 8005d5a:	695b      	ldr	r3, [r3, #20]
}
 8005d5c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005d60:	4718      	bx	r3
    model->bind(newPresenter);
 8005d62:	4623      	mov	r3, r4
 8005d64:	e7e2      	b.n	8005d2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005d66:	bf00      	nop
 8005d68:	0802c824 	.word	0x0802c824
 8005d6c:	0802dccb 	.word	0x0802dccb
 8005d70:	0802c9c0 	.word	0x0802c9c0
 8005d74:	0802ca07 	.word	0x0802ca07
 8005d78:	0802caaa 	.word	0x0802caaa
 8005d7c:	20012dec 	.word	0x20012dec
 8005d80:	20012de8 	.word	0x20012de8

08005d84 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8005d84:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005d86:	4770      	bx	lr

08005d88 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8005d88:	4770      	bx	lr

08005d8a <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8005d8a:	4770      	bx	lr

08005d8c <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005d8c:	b510      	push	{r4, lr}
}
 8005d8e:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005d92:	4604      	mov	r4, r0
}
 8005d94:	f023 ffa3 	bl	8029cde <_ZdlPvj>
 8005d98:	4620      	mov	r0, r4
 8005d9a:	bd10      	pop	{r4, pc}

08005d9c <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8005d9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8005da0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005da4:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8005da6:	2600      	movs	r6, #0
 8005da8:	ed2d 8b02 	vpush	{d8}
 8005dac:	8483      	strh	r3, [r0, #36]	; 0x24
 8005dae:	4bb2      	ldr	r3, [pc, #712]	; (8006078 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8005db0:	6286      	str	r6, [r0, #40]	; 0x28
 8005db2:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005db6:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8005dba:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8005dbe:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8005dc2:	f848 3b2c 	str.w	r3, [r8], #44
 8005dc6:	b08b      	sub	sp, #44	; 0x2c
 8005dc8:	4604      	mov	r4, r0
 8005dca:	4640      	mov	r0, r8
 8005dcc:	f7fd f972 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8005dd0:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8005dd4:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8005dd8:	4618      	mov	r0, r3
 8005dda:	9303      	str	r3, [sp, #12]
 8005ddc:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8005de0:	f7fd f968 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8005de4:	4658      	mov	r0, fp
 8005de6:	f7fd f965 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8005dea:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8005dee:	4da3      	ldr	r5, [pc, #652]	; (800607c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8005df0:	4650      	mov	r0, sl
 8005df2:	f7fd f95f 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005df6:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8005dfa:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8005dfe:	4648      	mov	r0, r9
 8005e00:	f7fd f958 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8005e04:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8005e08:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8005e0c:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005e0e:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8005e12:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8005e16:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8005e1a:	f7fd f94b 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005e1e:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8005e22:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8005e26:	4638      	mov	r0, r7
 8005e28:	f00c fe9c 	bl	8012b64 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8005e2c:	4a94      	ldr	r2, [pc, #592]	; (8006080 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8005e2e:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8005e30:	4640      	mov	r0, r8
 8005e32:	226d      	movs	r2, #109	; 0x6d
 8005e34:	21d9      	movs	r1, #217	; 0xd9
 8005e36:	ad04      	add	r5, sp, #16
 8005e38:	f7fd f909 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005e3c:	f04f 33ff 	mov.w	r3, #4294967295
 8005e40:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8005e42:	4641      	mov	r1, r8
 8005e44:	4628      	mov	r0, r5
        linespace = space;
 8005e46:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8005e4a:	f00c fb53 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e4e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e52:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8005e56:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005e5a:	4b8a      	ldr	r3, [pc, #552]	; (8006084 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005e5c:	9308      	str	r3, [sp, #32]
 8005e5e:	223f      	movs	r2, #63	; 0x3f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8005e60:	a908      	add	r1, sp, #32
 8005e62:	4640      	mov	r0, r8
 8005e64:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005e68:	f00c fdde 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8005e6c:	4641      	mov	r1, r8
 8005e6e:	4620      	mov	r0, r4
 8005e70:	f00a fc26 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8005e74:	9b03      	ldr	r3, [sp, #12]
 8005e76:	4631      	mov	r1, r6
 8005e78:	4618      	mov	r0, r3
 8005e7a:	226d      	movs	r2, #109	; 0x6d
 8005e7c:	f7fd f8e7 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8005e80:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8005e82:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8005e86:	f04f 32ff 	mov.w	r2, #4294967295
 8005e8a:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8005e8e:	4619      	mov	r1, r3
 8005e90:	4628      	mov	r0, r5
 8005e92:	f00c fb2f 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e96:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e9a:	4b7a      	ldr	r3, [pc, #488]	; (8006084 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005e9c:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8005e9e:	9b03      	ldr	r3, [sp, #12]
 8005ea0:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8005ea4:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005ea8:	2240      	movs	r2, #64	; 0x40
 8005eaa:	a908      	add	r1, sp, #32
 8005eac:	4618      	mov	r0, r3
 8005eae:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005eb2:	f00c fdb9 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8005eb6:	9b03      	ldr	r3, [sp, #12]
 8005eb8:	4620      	mov	r0, r4
 8005eba:	4619      	mov	r1, r3
 8005ebc:	f00a fc00 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8005ec0:	4632      	mov	r2, r6
 8005ec2:	4658      	mov	r0, fp
 8005ec4:	2171      	movs	r1, #113	; 0x71
 8005ec6:	f7fd f8c2 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005eca:	f04f 32ff 	mov.w	r2, #4294967295
 8005ece:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8005ed2:	4659      	mov	r1, fp
 8005ed4:	4628      	mov	r0, r5
        linespace = space;
 8005ed6:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8005eda:	f00c fb0b 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ede:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ee2:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8005ee6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005eea:	4b66      	ldr	r3, [pc, #408]	; (8006084 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005eec:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8005eee:	a908      	add	r1, sp, #32
 8005ef0:	2341      	movs	r3, #65	; 0x41
 8005ef2:	4658      	mov	r0, fp
 8005ef4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005ef8:	f00c fd96 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8005efc:	4659      	mov	r1, fp
 8005efe:	4620      	mov	r0, r4
 8005f00:	f00a fbde 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8005f04:	4650      	mov	r0, sl
 8005f06:	227c      	movs	r2, #124	; 0x7c
 8005f08:	214c      	movs	r1, #76	; 0x4c
 8005f0a:	f7fd f8a0 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8005f0e:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8005f12:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8005f16:	f04f 32ff 	mov.w	r2, #4294967295
 8005f1a:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8005f1e:	4651      	mov	r1, sl
 8005f20:	4628      	mov	r0, r5
 8005f22:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005f26:	4798      	blx	r3
 8005f28:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f2c:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8005f30:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f34:	4b53      	ldr	r3, [pc, #332]	; (8006084 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005f36:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8005f38:	a908      	add	r1, sp, #32
 8005f3a:	233e      	movs	r3, #62	; 0x3e
 8005f3c:	4650      	mov	r0, sl
 8005f3e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005f42:	f00c fd71 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8005f46:	4651      	mov	r1, sl
 8005f48:	4620      	mov	r0, r4
 8005f4a:	f00a fbb9 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8005f4e:	4648      	mov	r0, r9
 8005f50:	228b      	movs	r2, #139	; 0x8b
 8005f52:	2156      	movs	r1, #86	; 0x56
 8005f54:	f7fd f87b 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8005f58:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8005f5c:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8005f60:	f04f 32ff 	mov.w	r2, #4294967295
 8005f64:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8005f68:	4649      	mov	r1, r9
 8005f6a:	4628      	mov	r0, r5
 8005f6c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005f70:	4798      	blx	r3
 8005f72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f76:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8005f7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f7e:	4b41      	ldr	r3, [pc, #260]	; (8006084 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005f80:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8005f82:	a908      	add	r1, sp, #32
 8005f84:	233d      	movs	r3, #61	; 0x3d
 8005f86:	4648      	mov	r0, r9
 8005f88:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005f8c:	f00c fd4c 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8005f90:	4649      	mov	r1, r9
 8005f92:	4620      	mov	r0, r4
 8005f94:	f00a fb94 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8005f98:	ee18 0a10 	vmov	r0, s16
 8005f9c:	229a      	movs	r2, #154	; 0x9a
 8005f9e:	2156      	movs	r1, #86	; 0x56
 8005fa0:	f7fd f855 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8005fa4:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8005fa8:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8005fac:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8005fb0:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8005fb4:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8005fb8:	4628      	mov	r0, r5
 8005fba:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005fbe:	4798      	blx	r3
 8005fc0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fc4:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8005fc8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005fcc:	4b2d      	ldr	r3, [pc, #180]	; (8006084 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005fce:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8005fd0:	ee18 0a10 	vmov	r0, s16
 8005fd4:	233c      	movs	r3, #60	; 0x3c
 8005fd6:	a908      	add	r1, sp, #32
 8005fd8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005fdc:	f00c fd24 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8005fe0:	ee18 1a10 	vmov	r1, s16
 8005fe4:	4620      	mov	r0, r4
 8005fe6:	f00a fb6b 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005fea:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8005fec:	a908      	add	r1, sp, #32
 8005fee:	4638      	mov	r0, r7
 8005ff0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8005ff4:	f00a faf6 	bl	80105e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8005ff8:	2212      	movs	r2, #18
 8005ffa:	4638      	mov	r0, r7
 8005ffc:	211c      	movs	r1, #28
 8005ffe:	f7fd f826 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8006002:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8006006:	4638      	mov	r0, r7
 8006008:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800600a:	21b8      	movs	r1, #184	; 0xb8
 800600c:	4798      	blx	r3
        setHeight(height);
 800600e:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8006012:	4638      	mov	r0, r7
 8006014:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006016:	216a      	movs	r1, #106	; 0x6a
 8006018:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 800601a:	225c      	movs	r2, #92	; 0x5c
 800601c:	4611      	mov	r1, r2
 800601e:	4638      	mov	r0, r7
 8006020:	f00c fe4b 	bl	8012cba <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8006024:	4638      	mov	r0, r7
 8006026:	225a      	movs	r2, #90	; 0x5a
 8006028:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800602c:	f00c feca 	bl	8012dc4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8006030:	4633      	mov	r3, r6
 8006032:	225a      	movs	r2, #90	; 0x5a
 8006034:	4638      	mov	r0, r7
 8006036:	9600      	str	r6, [sp, #0]
 8006038:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800603c:	f00a f97f 	bl	801033e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8006040:	4631      	mov	r1, r6
 8006042:	4638      	mov	r0, r7
 8006044:	f00c fe68 	bl	8012d18 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8006048:	2335      	movs	r3, #53	; 0x35
 800604a:	2208      	movs	r2, #8
 800604c:	4638      	mov	r0, r7
 800604e:	2105      	movs	r1, #5
 8006050:	f00c fe1e 	bl	8012c90 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8006054:	4638      	mov	r0, r7
 8006056:	2101      	movs	r1, #1
 8006058:	f00c fdbc 	bl	8012bd4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800605c:	4638      	mov	r0, r7
 800605e:	2101      	movs	r1, #1
 8006060:	f00c fdbb 	bl	8012bda <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8006064:	4620      	mov	r0, r4
 8006066:	4639      	mov	r1, r7
 8006068:	f00a fb2a 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800606c:	4620      	mov	r0, r4
 800606e:	b00b      	add	sp, #44	; 0x2c
 8006070:	ecbd 8b02 	vpop	{d8}
 8006074:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006078:	0802df34 	.word	0x0802df34
 800607c:	0802c6b0 	.word	0x0802c6b0
 8006080:	00a900f0 	.word	0x00a900f0
 8006084:	0802c6a0 	.word	0x0802c6a0

08006088 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8006088:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800608a:	4770      	bx	lr

0800608c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800608c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800608e:	4770      	bx	lr

08006090 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8006090:	4770      	bx	lr

08006092 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8006092:	888b      	ldrh	r3, [r1, #4]
 8006094:	69c0      	ldr	r0, [r0, #28]
 8006096:	680a      	ldr	r2, [r1, #0]
 8006098:	0adb      	lsrs	r3, r3, #11
 800609a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800609e:	4410      	add	r0, r2
 80060a0:	4770      	bx	lr

080060a2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80060a2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80060a4:	b1c2      	cbz	r2, 80060d8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80060a6:	7b13      	ldrb	r3, [r2, #12]
 80060a8:	b1b3      	cbz	r3, 80060d8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80060aa:	7b54      	ldrb	r4, [r2, #13]
 80060ac:	7ad2      	ldrb	r2, [r2, #11]
 80060ae:	0224      	lsls	r4, r4, #8
 80060b0:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80060b4:	4314      	orrs	r4, r2
 80060b6:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80060b8:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80060ba:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80060be:	8813      	ldrh	r3, [r2, #0]
 80060c0:	428b      	cmp	r3, r1
 80060c2:	d102      	bne.n	80060ca <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80060c4:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80060c8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80060ca:	d805      	bhi.n	80060d8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80060cc:	3801      	subs	r0, #1
 80060ce:	b280      	uxth	r0, r0
 80060d0:	3204      	adds	r2, #4
 80060d2:	2800      	cmp	r0, #0
 80060d4:	d1f3      	bne.n	80060be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80060d6:	e7f7      	b.n	80060c8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80060d8:	2000      	movs	r0, #0
 80060da:	e7f5      	b.n	80060c8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080060dc <_ZN8touchgfx13GeneratedFontD0Ev>:
 80060dc:	b510      	push	{r4, lr}
 80060de:	212c      	movs	r1, #44	; 0x2c
 80060e0:	4604      	mov	r4, r0
 80060e2:	f023 fdfc 	bl	8029cde <_ZdlPvj>
 80060e6:	4620      	mov	r0, r4
 80060e8:	bd10      	pop	{r4, pc}
	...

080060ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80060ec:	b530      	push	{r4, r5, lr}
 80060ee:	b08b      	sub	sp, #44	; 0x2c
 80060f0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80060f2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 80060f6:	9508      	str	r5, [sp, #32]
 80060f8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80060fc:	9507      	str	r5, [sp, #28]
 80060fe:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8006102:	9506      	str	r5, [sp, #24]
 8006104:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8006108:	9505      	str	r5, [sp, #20]
 800610a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800610e:	9504      	str	r5, [sp, #16]
 8006110:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8006114:	9503      	str	r5, [sp, #12]
 8006116:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800611a:	9502      	str	r5, [sp, #8]
 800611c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006120:	9501      	str	r5, [sp, #4]
 8006122:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8006126:	9500      	str	r5, [sp, #0]
 8006128:	f010 fef8 	bl	8016f1c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800612c:	4b06      	ldr	r3, [pc, #24]	; (8006148 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800612e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006130:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006132:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8006134:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006136:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8006138:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800613a:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800613c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800613e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8006140:	4620      	mov	r0, r4
 8006142:	b00b      	add	sp, #44	; 0x2c
 8006144:	bd30      	pop	{r4, r5, pc}
 8006146:	bf00      	nop
 8006148:	0802dfc8 	.word	0x0802dfc8

0800614c <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 800614c:	4770      	bx	lr

0800614e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800614e:	4770      	bx	lr

08006150 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006150:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006152:	68c2      	ldr	r2, [r0, #12]
 8006154:	6844      	ldr	r4, [r0, #4]
 8006156:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006158:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800615a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800615e:	07d2      	lsls	r2, r2, #31
 8006160:	bf48      	it	mi
 8006162:	5962      	ldrmi	r2, [r4, r5]
 8006164:	689b      	ldr	r3, [r3, #8]
    }
 8006166:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006168:	bf48      	it	mi
 800616a:	58d3      	ldrmi	r3, [r2, r3]
 800616c:	4718      	bx	r3

0800616e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800616e:	6843      	ldr	r3, [r0, #4]
 8006170:	b12b      	cbz	r3, 800617e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006172:	6883      	ldr	r3, [r0, #8]
 8006174:	b92b      	cbnz	r3, 8006182 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006176:	68c0      	ldr	r0, [r0, #12]
 8006178:	f000 0001 	and.w	r0, r0, #1
 800617c:	4770      	bx	lr
 800617e:	4618      	mov	r0, r3
 8006180:	4770      	bx	lr
 8006182:	2001      	movs	r0, #1
    }
 8006184:	4770      	bx	lr

08006186 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006186:	b510      	push	{r4, lr}
 8006188:	2110      	movs	r1, #16
 800618a:	4604      	mov	r4, r0
 800618c:	f023 fda7 	bl	8029cde <_ZdlPvj>
 8006190:	4620      	mov	r0, r4
 8006192:	bd10      	pop	{r4, pc}

08006194 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006194:	b510      	push	{r4, lr}
 8006196:	4b03      	ldr	r3, [pc, #12]	; (80061a4 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8006198:	6003      	str	r3, [r0, #0]
 800619a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800619c:	f00e f826 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80061a0:	4620      	mov	r0, r4
 80061a2:	bd10      	pop	{r4, pc}
 80061a4:	0802e040 	.word	0x0802e040

080061a8 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80061a8:	b507      	push	{r0, r1, r2, lr}
 80061aa:	4b07      	ldr	r3, [pc, #28]	; (80061c8 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80061ac:	6003      	str	r3, [r0, #0]
 80061ae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80061b0:	f00e f81c 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80061b4:	9801      	ldr	r0, [sp, #4]
 80061b6:	f241 117c 	movw	r1, #4476	; 0x117c
 80061ba:	f023 fd90 	bl	8029cde <_ZdlPvj>
 80061be:	9801      	ldr	r0, [sp, #4]
 80061c0:	b003      	add	sp, #12
 80061c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80061c6:	bf00      	nop
 80061c8:	0802e040 	.word	0x0802e040

080061cc <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80061cc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 80061ce:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 80061d2:	4299      	cmp	r1, r3
{
 80061d4:	4604      	mov	r4, r0
 80061d6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 80061d8:	d103      	bne.n	80061e2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80061da:	f00f fd09 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 80061de:	f7fe fb1d 	bl	800481c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80061e2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80061e6:	429d      	cmp	r5, r3
 80061e8:	d103      	bne.n	80061f2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80061ea:	f00f fd01 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 80061ee:	f7fe fba5 	bl	800493c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80061f2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80061f6:	429d      	cmp	r5, r3
 80061f8:	d103      	bne.n	8006202 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80061fa:	f00f fcf9 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80061fe:	f7fe fbdd 	bl	80049bc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8006202:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8006206:	42a5      	cmp	r5, r4
 8006208:	d10a      	bne.n	8006220 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800620a:	4806      	ldr	r0, [pc, #24]	; (8006224 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 800620c:	2200      	movs	r2, #0
 800620e:	2120      	movs	r1, #32
 8006210:	f004 f8f0 	bl	800a3f4 <HAL_GPIO_WritePin>
 8006214:	f00f fcec 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8006218:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800621c:	f7fe bbde 	b.w	80049dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006220:	bd38      	pop	{r3, r4, r5, pc}
 8006222:	bf00      	nop
 8006224:	40021000 	.word	0x40021000

08006228 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8006228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800622c:	ed2d 8b06 	vpush	{d8-d10}
 8006230:	4604      	mov	r4, r0
 8006232:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8006234:	46a3      	mov	fp, r4
        : presenter(0)
 8006236:	2500      	movs	r5, #0
 8006238:	f011 f95a 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 800623c:	4b6a      	ldr	r3, [pc, #424]	; (80063e8 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 800623e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006240:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006244:	2226      	movs	r2, #38	; 0x26
 8006246:	4629      	mov	r1, r5
 8006248:	4658      	mov	r0, fp
 800624a:	f024 fe34 	bl	802aeb6 <memset>
 800624e:	4658      	mov	r0, fp
 8006250:	f7fc ff1e 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8006254:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006258:	26ff      	movs	r6, #255	; 0xff
 800625a:	4b64      	ldr	r3, [pc, #400]	; (80063ec <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 800625c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800625e:	2226      	movs	r2, #38	; 0x26
 8006260:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006264:	4629      	mov	r1, r5
 8006266:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800626a:	4650      	mov	r0, sl
        : color(col)
 800626c:	66a5      	str	r5, [r4, #104]	; 0x68
 800626e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006272:	f024 fe20 	bl	802aeb6 <memset>
 8006276:	4650      	mov	r0, sl
 8006278:	f7fc ff0a 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 800627c:	4b5c      	ldr	r3, [pc, #368]	; (80063f0 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 800627e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006280:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8006284:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006288:	a90c      	add	r1, sp, #48	; 0x30
 800628a:	4650      	mov	r0, sl
 800628c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006290:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006294:	f00c ffa3 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006298:	4648      	mov	r0, r9
 800629a:	f7fc ff0b 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 800629e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80062a2:	4b54      	ldr	r3, [pc, #336]	; (80063f4 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 80062a4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80062a8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80062ac:	4638      	mov	r0, r7
 80062ae:	f00b fe5f 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 80062b2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80062b6:	4618      	mov	r0, r3
 80062b8:	9303      	str	r3, [sp, #12]
 80062ba:	f7fc fce9 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80062be:	4b4e      	ldr	r3, [pc, #312]	; (80063f8 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 80062c0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80062c4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80062c8:	3324      	adds	r3, #36	; 0x24
 80062ca:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80062ce:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80062d2:	4640      	mov	r0, r8
 80062d4:	f7fc feee 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 80062d8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80062dc:	4618      	mov	r0, r3
 80062de:	ee08 3a10 	vmov	s16, r3
 80062e2:	f7fc fee7 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 80062e6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80062ea:	4618      	mov	r0, r3
 80062ec:	ee08 3a90 	vmov	s17, r3
 80062f0:	f7fc fee0 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 80062f4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80062f8:	4618      	mov	r0, r3
 80062fa:	ee09 3a10 	vmov	s18, r3
 80062fe:	f00d f8af 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006302:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006306:	4618      	mov	r0, r3
 8006308:	ee09 3a90 	vmov	s19, r3
 800630c:	f00d f8a8 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006310:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006314:	4618      	mov	r0, r3
 8006316:	ee0a 3a10 	vmov	s20, r3
 800631a:	f00d f8a1 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800631e:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8006322:	4618      	mov	r0, r3
 8006324:	ee0a 3a90 	vmov	s21, r3
 8006328:	f00c ff32 	bl	8013190 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800632c:	4a33      	ldr	r2, [pc, #204]	; (80063fc <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 800632e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006332:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8006336:	4a32      	ldr	r2, [pc, #200]	; (8006400 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006338:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800633c:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8006340:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8006344:	f00d ff48 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006348:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800634c:	462a      	mov	r2, r5
 800634e:	4658      	mov	r0, fp
 8006350:	9300      	str	r3, [sp, #0]
 8006352:	4629      	mov	r1, r5
 8006354:	23f0      	movs	r3, #240	; 0xf0
 8006356:	f7fc fe87 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 800635a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800635c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006360:	66a3      	str	r3, [r4, #104]	; 0x68
 8006362:	4659      	mov	r1, fp
 8006364:	4630      	mov	r0, r6
 8006366:	f00a f9ab 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800636a:	462a      	mov	r2, r5
 800636c:	4650      	mov	r0, sl
 800636e:	4629      	mov	r1, r5
 8006370:	f7fc fe6d 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8006374:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006376:	4650      	mov	r0, sl
 8006378:	a90c      	add	r1, sp, #48	; 0x30
 800637a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800637e:	f00c ff2e 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006382:	4651      	mov	r1, sl
 8006384:	4630      	mov	r0, r6
 8006386:	f00a f99b 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 800638a:	f44f 729a 	mov.w	r2, #308	; 0x134
 800638e:	2156      	movs	r1, #86	; 0x56
 8006390:	4648      	mov	r0, r9
 8006392:	f7fc fe5c 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8006396:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800639a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800639e:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80063a2:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80063a6:	4650      	mov	r0, sl
 80063a8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80063ac:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80063b0:	4649      	mov	r1, r9
 80063b2:	4798      	blx	r3
 80063b4:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80063b8:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80063bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80063c0:	4b10      	ldr	r3, [pc, #64]	; (8006404 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 80063c2:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 80063c4:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 80063c8:	b92b      	cbnz	r3, 80063d6 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 80063ca:	4b0f      	ldr	r3, [pc, #60]	; (8006408 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 80063cc:	4a0f      	ldr	r2, [pc, #60]	; (800640c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80063ce:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063d0:	480f      	ldr	r0, [pc, #60]	; (8006410 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 80063d2:	f024 fb6b 	bl	802aaac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80063d6:	4b0f      	ldr	r3, [pc, #60]	; (8006414 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063d8:	881b      	ldrh	r3, [r3, #0]
 80063da:	2b3a      	cmp	r3, #58	; 0x3a
 80063dc:	d81e      	bhi.n	800641c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 80063de:	4b0e      	ldr	r3, [pc, #56]	; (8006418 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80063e0:	4a0a      	ldr	r2, [pc, #40]	; (800640c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80063e2:	2161      	movs	r1, #97	; 0x61
 80063e4:	e7f4      	b.n	80063d0 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 80063e6:	bf00      	nop
 80063e8:	0802e040 	.word	0x0802e040
 80063ec:	0802f000 	.word	0x0802f000
 80063f0:	0802f1c8 	.word	0x0802f1c8
 80063f4:	0802c6b0 	.word	0x0802c6b0
 80063f8:	0802ed34 	.word	0x0802ed34
 80063fc:	0802e028 	.word	0x0802e028
 8006400:	080061cd 	.word	0x080061cd
 8006404:	20012dfc 	.word	0x20012dfc
 8006408:	0802c4f0 	.word	0x0802c4f0
 800640c:	0802c5f2 	.word	0x0802c5f2
 8006410:	0802c56d 	.word	0x0802c56d
 8006414:	20012e00 	.word	0x20012e00
 8006418:	0802c5b4 	.word	0x0802c5b4
        return texts->getText(typedTextId);
 800641c:	4ba5      	ldr	r3, [pc, #660]	; (80066b4 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 800641e:	213a      	movs	r1, #58	; 0x3a
 8006420:	6818      	ldr	r0, [r3, #0]
 8006422:	f002 fdf7 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8006426:	4aa4      	ldr	r2, [pc, #656]	; (80066b8 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8006428:	4603      	mov	r3, r0
 800642a:	2104      	movs	r1, #4
 800642c:	4650      	mov	r0, sl
 800642e:	f012 fd4f 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8006432:	4648      	mov	r0, r9
        wc1 = value;
 8006434:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006438:	f00c fad6 	bl	80129e8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800643c:	4b9f      	ldr	r3, [pc, #636]	; (80066bc <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 800643e:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006440:	a90c      	add	r1, sp, #48	; 0x30
 8006442:	233b      	movs	r3, #59	; 0x3b
 8006444:	4648      	mov	r0, r9
 8006446:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800644a:	f00c faed 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800644e:	4649      	mov	r1, r9
 8006450:	4630      	mov	r0, r6
 8006452:	f00a f935 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006456:	230a      	movs	r3, #10
 8006458:	9300      	str	r3, [sp, #0]
 800645a:	2232      	movs	r2, #50	; 0x32
 800645c:	23f0      	movs	r3, #240	; 0xf0
 800645e:	4629      	mov	r1, r5
 8006460:	4638      	mov	r0, r7
 8006462:	f7fc fe01 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006466:	9b03      	ldr	r3, [sp, #12]
 8006468:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800646c:	22a0      	movs	r2, #160	; 0xa0
 800646e:	4611      	mov	r1, r2
 8006470:	4638      	mov	r0, r7
 8006472:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006476:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800647a:	f00b fe8f 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800647e:	22a0      	movs	r2, #160	; 0xa0
 8006480:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006484:	4638      	mov	r0, r7
 8006486:	f00b fe94 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800648a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800648e:	2b20      	cmp	r3, #32
 8006490:	d005      	beq.n	800649e <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8006492:	2320      	movs	r3, #32
 8006494:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006498:	4638      	mov	r0, r7
 800649a:	f00b fd89 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800649e:	4638      	mov	r0, r7
 80064a0:	2101      	movs	r1, #1
 80064a2:	f00b fe91 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80064a6:	4639      	mov	r1, r7
 80064a8:	4630      	mov	r0, r6
 80064aa:	ad04      	add	r5, sp, #16
        color = newColor;
 80064ac:	f04f 37ff 	mov.w	r7, #4294967295
 80064b0:	f00a f906 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80064b4:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80064b8:	2223      	movs	r2, #35	; 0x23
 80064ba:	4640      	mov	r0, r8
 80064bc:	2145      	movs	r1, #69	; 0x45
 80064be:	f7fc fdc6 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80064c2:	4641      	mov	r1, r8
 80064c4:	4628      	mov	r0, r5
        color = newColor;
 80064c6:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80064ca:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80064ce:	f00c f811 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064d2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 80064d6:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 80064da:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80064de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064e2:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 80066bc <_ZN17Main_MenuViewBaseC1Ev+0x494>
 80064e6:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80064ea:	2360      	movs	r3, #96	; 0x60
 80064ec:	4649      	mov	r1, r9
 80064ee:	4640      	mov	r0, r8
 80064f0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80064f4:	f00c fa98 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064f8:	4641      	mov	r1, r8
 80064fa:	4630      	mov	r0, r6
 80064fc:	f00a f8e0 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006500:	ee18 0a10 	vmov	r0, s16
 8006504:	220c      	movs	r2, #12
 8006506:	2136      	movs	r1, #54	; 0x36
 8006508:	f7fc fda1 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800650c:	ee18 1a10 	vmov	r1, s16
 8006510:	4628      	mov	r0, r5
        color = newColor;
 8006512:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006516:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800651a:	f00b ffeb 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800651e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006522:	ee18 3a10 	vmov	r3, s16
 8006526:	333c      	adds	r3, #60	; 0x3c
 8006528:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800652c:	2361      	movs	r3, #97	; 0x61
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 800652e:	ee18 0a10 	vmov	r0, s16
 8006532:	4649      	mov	r1, r9
 8006534:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006538:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800653c:	f00c fa74 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006540:	ee18 1a10 	vmov	r1, s16
 8006544:	4630      	mov	r0, r6
 8006546:	f00a f8bb 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 800654a:	ee18 0a90 	vmov	r0, s17
 800654e:	223c      	movs	r2, #60	; 0x3c
 8006550:	2158      	movs	r1, #88	; 0x58
 8006552:	f7fc fd7c 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8006556:	ee18 1a90 	vmov	r1, s17
 800655a:	4628      	mov	r0, r5
        color = newColor;
 800655c:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006560:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006564:	f00b ffc6 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006568:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800656c:	ee18 3a90 	vmov	r3, s17
 8006570:	333c      	adds	r3, #60	; 0x3c
 8006572:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006576:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006578:	ee18 0a90 	vmov	r0, s17
 800657c:	4649      	mov	r1, r9
 800657e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006582:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006586:	f00c fa4f 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800658a:	ee18 1a90 	vmov	r1, s17
 800658e:	4630      	mov	r0, r6
 8006590:	f00a f896 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006594:	ee19 0a10 	vmov	r0, s18
 8006598:	22f0      	movs	r2, #240	; 0xf0
 800659a:	2121      	movs	r1, #33	; 0x21
 800659c:	f7fc fd57 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80065a0:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80065a4:	464a      	mov	r2, r9
 80065a6:	f04f 0802 	mov.w	r8, #2
 80065aa:	a90b      	add	r1, sp, #44	; 0x2c
 80065ac:	ee19 0a10 	vmov	r0, s18
 80065b0:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80065b4:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 80065b8:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80065bc:	f00c fc19 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80065c0:	2362      	movs	r3, #98	; 0x62
 80065c2:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80065c6:	350c      	adds	r5, #12
        updateTextPosition();
 80065c8:	ee19 0a10 	vmov	r0, s18
 80065cc:	f7fc fd94 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80065d0:	ee19 1a10 	vmov	r1, s18
 80065d4:	4630      	mov	r0, r6
        colorPressed = col;
 80065d6:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80065da:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80065de:	f00a f86f 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80065e2:	ee19 0a90 	vmov	r0, s19
 80065e6:	22aa      	movs	r2, #170	; 0xaa
 80065e8:	2121      	movs	r1, #33	; 0x21
 80065ea:	f7fc fd30 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80065ee:	464a      	mov	r2, r9
 80065f0:	a90b      	add	r1, sp, #44	; 0x2c
 80065f2:	ee19 0a90 	vmov	r0, s19
 80065f6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80065fa:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80065fe:	f00c fbf8 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006602:	2363      	movs	r3, #99	; 0x63
 8006604:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006608:	ee19 0a90 	vmov	r0, s19
 800660c:	f7fc fd74 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006610:	ee19 1a90 	vmov	r1, s19
 8006614:	4630      	mov	r0, r6
        colorPressed = col;
 8006616:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800661a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800661e:	f00a f84f 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006622:	ee1a 0a10 	vmov	r0, s20
 8006626:	2264      	movs	r2, #100	; 0x64
 8006628:	2121      	movs	r1, #33	; 0x21
 800662a:	f7fc fd10 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800662e:	464a      	mov	r2, r9
 8006630:	a90b      	add	r1, sp, #44	; 0x2c
 8006632:	ee1a 0a10 	vmov	r0, s20
 8006636:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800663a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800663e:	f00c fbd8 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006642:	2364      	movs	r3, #100	; 0x64
 8006644:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8006648:	ee1a 0a10 	vmov	r0, s20
 800664c:	f7fc fd54 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006650:	ee1a 1a10 	vmov	r1, s20
 8006654:	4630      	mov	r0, r6
        colorPressed = col;
 8006656:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800665a:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800665e:	f00a f82f 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8006662:	ee1a 0a90 	vmov	r0, s21
 8006666:	2205      	movs	r2, #5
 8006668:	21c6      	movs	r1, #198	; 0xc6
 800666a:	f7fc fcf0 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800666e:	2301      	movs	r3, #1
 8006670:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006674:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006676:	ee1a 0a90 	vmov	r0, s21
 800667a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800667e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006682:	aa0a      	add	r2, sp, #40	; 0x28
 8006684:	ab0b      	add	r3, sp, #44	; 0x2c
 8006686:	a909      	add	r1, sp, #36	; 0x24
 8006688:	f8cd 9000 	str.w	r9, [sp]
 800668c:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006690:	f00c fce9 	bl	8013066 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006694:	4630      	mov	r0, r6
 8006696:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800669a:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800669e:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 80066a2:	f00a f80d 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80066a6:	4620      	mov	r0, r4
 80066a8:	b00f      	add	sp, #60	; 0x3c
 80066aa:	ecbd 8b06 	vpop	{d8-d10}
 80066ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066b2:	bf00      	nop
 80066b4:	20012e08 	.word	0x20012e08
 80066b8:	0802c62a 	.word	0x0802c62a
 80066bc:	0802c6a0 	.word	0x0802c6a0

080066c0 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 80066c0:	4770      	bx	lr

080066c2 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066c2:	4770      	bx	lr

080066c4 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80066c4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066c6:	68c2      	ldr	r2, [r0, #12]
 80066c8:	6844      	ldr	r4, [r0, #4]
 80066ca:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80066cc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80066ce:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80066d2:	07d2      	lsls	r2, r2, #31
 80066d4:	bf48      	it	mi
 80066d6:	5962      	ldrmi	r2, [r4, r5]
 80066d8:	689b      	ldr	r3, [r3, #8]
    }
 80066da:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066dc:	bf48      	it	mi
 80066de:	58d3      	ldrmi	r3, [r2, r3]
 80066e0:	4718      	bx	r3

080066e2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80066e2:	6843      	ldr	r3, [r0, #4]
 80066e4:	b12b      	cbz	r3, 80066f2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80066e6:	6883      	ldr	r3, [r0, #8]
 80066e8:	b92b      	cbnz	r3, 80066f6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80066ea:	68c0      	ldr	r0, [r0, #12]
 80066ec:	f000 0001 	and.w	r0, r0, #1
 80066f0:	4770      	bx	lr
 80066f2:	4618      	mov	r0, r3
 80066f4:	4770      	bx	lr
 80066f6:	2001      	movs	r0, #1
    }
 80066f8:	4770      	bx	lr

080066fa <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066fa:	b510      	push	{r4, lr}
 80066fc:	2110      	movs	r1, #16
 80066fe:	4604      	mov	r4, r0
 8006700:	f023 faed 	bl	8029cde <_ZdlPvj>
 8006704:	4620      	mov	r0, r4
 8006706:	bd10      	pop	{r4, pc}

08006708 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006708:	b510      	push	{r4, lr}
 800670a:	4b03      	ldr	r3, [pc, #12]	; (8006718 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 800670c:	6003      	str	r3, [r0, #0]
 800670e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006710:	f00d fd6c 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006714:	4620      	mov	r0, r4
 8006716:	bd10      	pop	{r4, pc}
 8006718:	0802e08c 	.word	0x0802e08c

0800671c <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 800671c:	b507      	push	{r0, r1, r2, lr}
 800671e:	4b07      	ldr	r3, [pc, #28]	; (800673c <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006720:	6003      	str	r3, [r0, #0]
 8006722:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006724:	f00d fd62 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006728:	9801      	ldr	r0, [sp, #4]
 800672a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800672e:	f023 fad6 	bl	8029cde <_ZdlPvj>
 8006732:	9801      	ldr	r0, [sp, #4]
 8006734:	b003      	add	sp, #12
 8006736:	f85d fb04 	ldr.w	pc, [sp], #4
 800673a:	bf00      	nop
 800673c:	0802e08c 	.word	0x0802e08c

08006740 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006740:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006742:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006746:	4299      	cmp	r1, r3
{
 8006748:	4604      	mov	r4, r0
 800674a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800674c:	d103      	bne.n	8006756 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800674e:	f00f fa4f 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006752:	f7fe f853 	bl	80047fc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006756:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800675a:	429d      	cmp	r5, r3
 800675c:	d103      	bne.n	8006766 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800675e:	f00f fa47 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006762:	f7fe f87b 	bl	800485c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006766:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800676a:	42a5      	cmp	r5, r4
 800676c:	d105      	bne.n	800677a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800676e:	f00f fa3f 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006772:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006776:	f7fe b8a1 	b.w	80048bc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 800677a:	bd38      	pop	{r3, r4, r5, pc}

0800677c <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 800677c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006780:	ed2d 8b06 	vpush	{d8-d10}
 8006784:	4604      	mov	r4, r0
 8006786:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006788:	46a3      	mov	fp, r4
 800678a:	2500      	movs	r5, #0
 800678c:	f010 feb0 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 8006790:	4b66      	ldr	r3, [pc, #408]	; (800692c <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8006792:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006794:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006798:	2226      	movs	r2, #38	; 0x26
 800679a:	4629      	mov	r1, r5
 800679c:	4658      	mov	r0, fp
 800679e:	f024 fb8a 	bl	802aeb6 <memset>
 80067a2:	4658      	mov	r0, fp
 80067a4:	f7fc fc74 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80067a8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80067ac:	26ff      	movs	r6, #255	; 0xff
 80067ae:	4b60      	ldr	r3, [pc, #384]	; (8006930 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 80067b0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80067b2:	2226      	movs	r2, #38	; 0x26
 80067b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80067b8:	4629      	mov	r1, r5
 80067ba:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80067be:	4650      	mov	r0, sl
 80067c0:	66a5      	str	r5, [r4, #104]	; 0x68
 80067c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80067c6:	f024 fb76 	bl	802aeb6 <memset>
 80067ca:	4650      	mov	r0, sl
 80067cc:	f7fc fc60 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80067d0:	4b58      	ldr	r3, [pc, #352]	; (8006934 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 80067d2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80067d4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80067d8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80067dc:	a90a      	add	r1, sp, #40	; 0x28
 80067de:	4650      	mov	r0, sl
 80067e0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80067e4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80067e8:	f00c fcf9 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80067ec:	4648      	mov	r0, r9
 80067ee:	f7fc fc61 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80067f2:	4b51      	ldr	r3, [pc, #324]	; (8006938 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 80067f4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80067f8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80067fc:	4618      	mov	r0, r3
 80067fe:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006802:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006806:	ee08 3a90 	vmov	s17, r3
 800680a:	f7fc fc53 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 800680e:	4638      	mov	r0, r7
 8006810:	f00b fbae 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 8006814:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006818:	4618      	mov	r0, r3
 800681a:	9303      	str	r3, [sp, #12]
 800681c:	f7fc fa38 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006820:	4b46      	ldr	r3, [pc, #280]	; (800693c <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8006822:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006826:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800682a:	3324      	adds	r3, #36	; 0x24
 800682c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006830:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006834:	4640      	mov	r0, r8
 8006836:	f7fc fc3d 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 800683a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800683e:	4618      	mov	r0, r3
 8006840:	ee08 3a10 	vmov	s16, r3
 8006844:	f7fc fc36 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8006848:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800684c:	4618      	mov	r0, r3
 800684e:	ee09 3a10 	vmov	s18, r3
 8006852:	f00c fe05 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006856:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800685a:	4618      	mov	r0, r3
 800685c:	ee09 3a90 	vmov	s19, r3
 8006860:	f00c fdfe 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006864:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006868:	4618      	mov	r0, r3
 800686a:	ee0a 3a10 	vmov	s20, r3
 800686e:	f00c fdf7 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006872:	4a33      	ldr	r2, [pc, #204]	; (8006940 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8006874:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006878:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800687c:	4a31      	ldr	r2, [pc, #196]	; (8006944 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800687e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006882:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006886:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800688a:	f00d fca5 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800688e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006892:	462a      	mov	r2, r5
 8006894:	4658      	mov	r0, fp
 8006896:	9300      	str	r3, [sp, #0]
 8006898:	4629      	mov	r1, r5
 800689a:	23f0      	movs	r3, #240	; 0xf0
 800689c:	f7fc fbe4 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80068a0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80068a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80068a6:	66a3      	str	r3, [r4, #104]	; 0x68
 80068a8:	4659      	mov	r1, fp
 80068aa:	4630      	mov	r0, r6
 80068ac:	f009 ff08 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80068b0:	462a      	mov	r2, r5
 80068b2:	4650      	mov	r0, sl
 80068b4:	4629      	mov	r1, r5
 80068b6:	f7fc fbca 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80068ba:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80068bc:	4650      	mov	r0, sl
 80068be:	a90a      	add	r1, sp, #40	; 0x28
 80068c0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80068c4:	f00c fc8b 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80068c8:	4651      	mov	r1, sl
 80068ca:	4630      	mov	r0, r6
 80068cc:	f009 fef8 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80068d0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80068d4:	2156      	movs	r1, #86	; 0x56
 80068d6:	4648      	mov	r0, r9
 80068d8:	f7fc fbb9 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80068dc:	f04f 33ff 	mov.w	r3, #4294967295
 80068e0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80068e4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80068e8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80068ec:	f10d 0b10 	add.w	fp, sp, #16
 80068f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80068f4:	4649      	mov	r1, r9
 80068f6:	4658      	mov	r0, fp
 80068f8:	4798      	blx	r3
 80068fa:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80068fe:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006902:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006906:	4b10      	ldr	r3, [pc, #64]	; (8006948 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8006908:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 800690a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800690e:	b92b      	cbnz	r3, 800691c <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8006910:	4b0e      	ldr	r3, [pc, #56]	; (800694c <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8006912:	4a0f      	ldr	r2, [pc, #60]	; (8006950 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006914:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006916:	480f      	ldr	r0, [pc, #60]	; (8006954 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8006918:	f024 f8c8 	bl	802aaac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800691c:	4b0e      	ldr	r3, [pc, #56]	; (8006958 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800691e:	881b      	ldrh	r3, [r3, #0]
 8006920:	2b2b      	cmp	r3, #43	; 0x2b
 8006922:	d81d      	bhi.n	8006960 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8006924:	4b0d      	ldr	r3, [pc, #52]	; (800695c <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006926:	4a0a      	ldr	r2, [pc, #40]	; (8006950 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006928:	2161      	movs	r1, #97	; 0x61
 800692a:	e7f4      	b.n	8006916 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 800692c:	0802e08c 	.word	0x0802e08c
 8006930:	0802f000 	.word	0x0802f000
 8006934:	0802f1c8 	.word	0x0802f1c8
 8006938:	0802c6b0 	.word	0x0802c6b0
 800693c:	0802ed34 	.word	0x0802ed34
 8006940:	0802e074 	.word	0x0802e074
 8006944:	08006741 	.word	0x08006741
 8006948:	20012dfc 	.word	0x20012dfc
 800694c:	0802c4f0 	.word	0x0802c4f0
 8006950:	0802c5f2 	.word	0x0802c5f2
 8006954:	0802c56d 	.word	0x0802c56d
 8006958:	20012e00 	.word	0x20012e00
 800695c:	0802c5b4 	.word	0x0802c5b4
        return texts->getText(typedTextId);
 8006960:	4b95      	ldr	r3, [pc, #596]	; (8006bb8 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8006962:	212b      	movs	r1, #43	; 0x2b
 8006964:	6818      	ldr	r0, [r3, #0]
 8006966:	f002 fb55 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 800696a:	4a94      	ldr	r2, [pc, #592]	; (8006bbc <_ZN19MeasurementViewBaseC1Ev+0x440>)
 800696c:	4603      	mov	r3, r0
 800696e:	2104      	movs	r1, #4
 8006970:	4650      	mov	r0, sl
 8006972:	f012 faad 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006976:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800697a:	4648      	mov	r0, r9
 800697c:	f00c f834 	bl	80129e8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006980:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006bc0 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006984:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006988:	232c      	movs	r3, #44	; 0x2c
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 800698a:	a90a      	add	r1, sp, #40	; 0x28
 800698c:	4648      	mov	r0, r9
 800698e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006992:	f00c f849 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006996:	4649      	mov	r1, r9
 8006998:	4630      	mov	r0, r6
 800699a:	f009 fe91 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 800699e:	223c      	movs	r2, #60	; 0x3c
 80069a0:	ee18 0a90 	vmov	r0, s17
 80069a4:	213d      	movs	r1, #61	; 0x3d
 80069a6:	f7fc fb52 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80069aa:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80069ae:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80069b2:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80069b6:	4658      	mov	r0, fp
        linespace = space;
 80069b8:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80069bc:	f00b fd9a 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069c0:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80069c4:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80069c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069cc:	2339      	movs	r3, #57	; 0x39
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 80069ce:	ee18 0a90 	vmov	r0, s17
 80069d2:	a90a      	add	r1, sp, #40	; 0x28
 80069d4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069d8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80069dc:	f00c f824 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069e0:	ee18 1a90 	vmov	r1, s17
 80069e4:	4630      	mov	r0, r6
 80069e6:	f009 fe6b 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80069ea:	230a      	movs	r3, #10
 80069ec:	9300      	str	r3, [sp, #0]
 80069ee:	2232      	movs	r2, #50	; 0x32
 80069f0:	23f0      	movs	r3, #240	; 0xf0
 80069f2:	4629      	mov	r1, r5
 80069f4:	4638      	mov	r0, r7
 80069f6:	f7fc fb37 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069fa:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069fe:	22a0      	movs	r2, #160	; 0xa0
 8006a00:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006a04:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006a08:	9b03      	ldr	r3, [sp, #12]
 8006a0a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006a0e:	4611      	mov	r1, r2
 8006a10:	4638      	mov	r0, r7
 8006a12:	f00b fbc3 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a16:	22a0      	movs	r2, #160	; 0xa0
 8006a18:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006a1c:	4638      	mov	r0, r7
 8006a1e:	f00b fbc8 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006a22:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006a26:	2b20      	cmp	r3, #32
 8006a28:	d005      	beq.n	8006a36 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8006a2a:	2320      	movs	r3, #32
 8006a2c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006a30:	4638      	mov	r0, r7
 8006a32:	f00b fabd 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006a36:	4638      	mov	r0, r7
 8006a38:	2101      	movs	r1, #1
 8006a3a:	f00b fbc5 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006a3e:	4639      	mov	r1, r7
 8006a40:	4630      	mov	r0, r6
 8006a42:	f009 fe3d 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006a46:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006a4a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006a4c:	2223      	movs	r2, #35	; 0x23
 8006a4e:	4640      	mov	r0, r8
        linespace = space;
 8006a50:	f04f 0a00 	mov.w	sl, #0
 8006a54:	2145      	movs	r1, #69	; 0x45
 8006a56:	f7fc fafa 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006a5a:	4641      	mov	r1, r8
 8006a5c:	4638      	mov	r0, r7
        color = newColor;
 8006a5e:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006a62:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006a66:	f00b fd45 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a6a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006a6e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006a72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a76:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006bc0 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006a7a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a7e:	235e      	movs	r3, #94	; 0x5e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8006a80:	a90a      	add	r1, sp, #40	; 0x28
 8006a82:	4640      	mov	r0, r8
 8006a84:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a88:	f00b ffce 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a8c:	4641      	mov	r1, r8
 8006a8e:	4630      	mov	r0, r6
 8006a90:	f009 fe16 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006a94:	ee18 0a10 	vmov	r0, s16
 8006a98:	220c      	movs	r2, #12
 8006a9a:	2136      	movs	r1, #54	; 0x36
 8006a9c:	f7fc fad7 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8006aa0:	ee18 1a10 	vmov	r1, s16
 8006aa4:	4638      	mov	r0, r7
        color = newColor;
 8006aa6:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006aaa:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006aae:	f00b fd21 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ab2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006ab6:	ee18 3a10 	vmov	r3, s16
 8006aba:	333c      	adds	r3, #60	; 0x3c
 8006abc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ac0:	235f      	movs	r3, #95	; 0x5f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8006ac2:	ee18 0a10 	vmov	r0, s16
 8006ac6:	a90a      	add	r1, sp, #40	; 0x28
 8006ac8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006acc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006ad0:	f00b ffaa 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ad4:	ee18 1a10 	vmov	r1, s16
 8006ad8:	4630      	mov	r0, r6
 8006ada:	f009 fdf1 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006ade:	ee19 0a10 	vmov	r0, s18
 8006ae2:	22f0      	movs	r2, #240	; 0xf0
 8006ae4:	2121      	movs	r1, #33	; 0x21
 8006ae6:	f7fc fab2 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8006aea:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006aee:	aa0a      	add	r2, sp, #40	; 0x28
 8006af0:	f04f 0802 	mov.w	r8, #2
 8006af4:	a909      	add	r1, sp, #36	; 0x24
 8006af6:	ee19 0a10 	vmov	r0, s18
 8006afa:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006afe:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006b02:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b06:	f00c f974 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006b0a:	235d      	movs	r3, #93	; 0x5d
 8006b0c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006b10:	3710      	adds	r7, #16
        updateTextPosition();
 8006b12:	ee19 0a10 	vmov	r0, s18
 8006b16:	f7fc faef 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b1a:	ee19 1a10 	vmov	r1, s18
 8006b1e:	4630      	mov	r0, r6
        colorPressed = col;
 8006b20:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006b24:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006b28:	f009 fdca 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006b2c:	ee19 0a90 	vmov	r0, s19
 8006b30:	22aa      	movs	r2, #170	; 0xaa
 8006b32:	2121      	movs	r1, #33	; 0x21
 8006b34:	f7fc fa8b 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b38:	aa0a      	add	r2, sp, #40	; 0x28
 8006b3a:	a909      	add	r1, sp, #36	; 0x24
 8006b3c:	ee19 0a90 	vmov	r0, s19
 8006b40:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b44:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b48:	f00c f953 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b4c:	235c      	movs	r3, #92	; 0x5c
 8006b4e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006b52:	ee19 0a90 	vmov	r0, s19
 8006b56:	f7fc facf 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b5a:	ee19 1a90 	vmov	r1, s19
 8006b5e:	4630      	mov	r0, r6
        colorPressed = col;
 8006b60:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006b64:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006b68:	f009 fdaa 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006b6c:	ee1a 0a10 	vmov	r0, s20
 8006b70:	2264      	movs	r2, #100	; 0x64
 8006b72:	2121      	movs	r1, #33	; 0x21
 8006b74:	f7fc fa6b 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b78:	aa0a      	add	r2, sp, #40	; 0x28
 8006b7a:	a909      	add	r1, sp, #36	; 0x24
 8006b7c:	ee1a 0a10 	vmov	r0, s20
 8006b80:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b84:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b88:	f00c f933 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b8c:	235b      	movs	r3, #91	; 0x5b
        updateTextPosition();
 8006b8e:	ee1a 0a10 	vmov	r0, s20
 8006b92:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006b96:	f7fc faaf 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b9a:	4630      	mov	r0, r6
        colorPressed = col;
 8006b9c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006ba0:	ee1a 1a10 	vmov	r1, s20
 8006ba4:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006ba8:	f009 fd8a 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006bac:	4620      	mov	r0, r4
 8006bae:	b00d      	add	sp, #52	; 0x34
 8006bb0:	ecbd 8b06 	vpop	{d8-d10}
 8006bb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006bb8:	20012e08 	.word	0x20012e08
 8006bbc:	0802c62a 	.word	0x0802c62a
 8006bc0:	0802c6a0 	.word	0x0802c6a0

08006bc4 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006bc4:	4770      	bx	lr

08006bc6 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006bc6:	4770      	bx	lr

08006bc8 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006bc8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006bca:	68c2      	ldr	r2, [r0, #12]
 8006bcc:	6844      	ldr	r4, [r0, #4]
 8006bce:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006bd0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006bd2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006bd6:	07d2      	lsls	r2, r2, #31
 8006bd8:	bf48      	it	mi
 8006bda:	5962      	ldrmi	r2, [r4, r5]
 8006bdc:	689b      	ldr	r3, [r3, #8]
    }
 8006bde:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006be0:	bf48      	it	mi
 8006be2:	58d3      	ldrmi	r3, [r2, r3]
 8006be4:	4718      	bx	r3

08006be6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006be6:	6843      	ldr	r3, [r0, #4]
 8006be8:	b12b      	cbz	r3, 8006bf6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006bea:	6883      	ldr	r3, [r0, #8]
 8006bec:	b92b      	cbnz	r3, 8006bfa <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006bee:	68c0      	ldr	r0, [r0, #12]
 8006bf0:	f000 0001 	and.w	r0, r0, #1
 8006bf4:	4770      	bx	lr
 8006bf6:	4618      	mov	r0, r3
 8006bf8:	4770      	bx	lr
 8006bfa:	2001      	movs	r0, #1
    }
 8006bfc:	4770      	bx	lr

08006bfe <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006bfe:	b510      	push	{r4, lr}
 8006c00:	2110      	movs	r1, #16
 8006c02:	4604      	mov	r4, r0
 8006c04:	f023 f86b 	bl	8029cde <_ZdlPvj>
 8006c08:	4620      	mov	r0, r4
 8006c0a:	bd10      	pop	{r4, pc}

08006c0c <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006c0c:	b510      	push	{r4, lr}
 8006c0e:	4b03      	ldr	r3, [pc, #12]	; (8006c1c <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8006c10:	6003      	str	r3, [r0, #0]
 8006c12:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c14:	f00d faea 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c18:	4620      	mov	r0, r4
 8006c1a:	bd10      	pop	{r4, pc}
 8006c1c:	0802e0d8 	.word	0x0802e0d8

08006c20 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006c20:	b507      	push	{r0, r1, r2, lr}
 8006c22:	4b07      	ldr	r3, [pc, #28]	; (8006c40 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8006c24:	6003      	str	r3, [r0, #0]
 8006c26:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c28:	f00d fae0 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c2c:	9801      	ldr	r0, [sp, #4]
 8006c2e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006c32:	f023 f854 	bl	8029cde <_ZdlPvj>
 8006c36:	9801      	ldr	r0, [sp, #4]
 8006c38:	b003      	add	sp, #12
 8006c3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006c3e:	bf00      	nop
 8006c40:	0802e0d8 	.word	0x0802e0d8

08006c44 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006c44:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006c46:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006c4a:	4299      	cmp	r1, r3
{
 8006c4c:	4604      	mov	r4, r0
 8006c4e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006c50:	d103      	bne.n	8006c5a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006c52:	f00e ffcd 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006c56:	f7fd fdf1 	bl	800483c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8006c5a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006c5e:	429d      	cmp	r5, r3
 8006c60:	d103      	bne.n	8006c6a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006c62:	f00e ffc5 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8006c66:	f7fd fe59 	bl	800491c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8006c6a:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8006c6e:	42a5      	cmp	r5, r4
 8006c70:	d105      	bne.n	8006c7e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006c72:	f00e ffbd 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8006c76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006c7a:	f7fd be3f 	b.w	80048fc <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8006c7e:	bd38      	pop	{r3, r4, r5, pc}

08006c80 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8006c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c84:	ed2d 8b06 	vpush	{d8-d10}
 8006c88:	4604      	mov	r4, r0
 8006c8a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006c8c:	46a3      	mov	fp, r4
 8006c8e:	2500      	movs	r5, #0
 8006c90:	f010 fc2e 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 8006c94:	4b66      	ldr	r3, [pc, #408]	; (8006e30 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8006c96:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006c98:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006c9c:	2226      	movs	r2, #38	; 0x26
 8006c9e:	4629      	mov	r1, r5
 8006ca0:	4658      	mov	r0, fp
 8006ca2:	f024 f908 	bl	802aeb6 <memset>
 8006ca6:	4658      	mov	r0, fp
 8006ca8:	f7fc f9f2 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8006cac:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006cb0:	26ff      	movs	r6, #255	; 0xff
 8006cb2:	4b60      	ldr	r3, [pc, #384]	; (8006e34 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006cb4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006cb6:	2226      	movs	r2, #38	; 0x26
 8006cb8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006cbc:	4629      	mov	r1, r5
 8006cbe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006cc2:	4650      	mov	r0, sl
 8006cc4:	66a5      	str	r5, [r4, #104]	; 0x68
 8006cc6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006cca:	f024 f8f4 	bl	802aeb6 <memset>
 8006cce:	4650      	mov	r0, sl
 8006cd0:	f7fc f9de 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8006cd4:	4b58      	ldr	r3, [pc, #352]	; (8006e38 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8006cd6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006cd8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006cdc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006ce0:	a90a      	add	r1, sp, #40	; 0x28
 8006ce2:	4650      	mov	r0, sl
 8006ce4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006ce8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006cec:	f00c fa77 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006cf0:	4648      	mov	r0, r9
 8006cf2:	f7fc f9df 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8006cf6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006cfa:	4b50      	ldr	r3, [pc, #320]	; (8006e3c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006cfc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006d00:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006d04:	4638      	mov	r0, r7
 8006d06:	f00b f933 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 8006d0a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006d0e:	4618      	mov	r0, r3
 8006d10:	9303      	str	r3, [sp, #12]
 8006d12:	f7fb ffbd 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006d16:	4b4a      	ldr	r3, [pc, #296]	; (8006e40 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8006d18:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006d1c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006d20:	3324      	adds	r3, #36	; 0x24
 8006d22:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006d26:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006d2a:	4640      	mov	r0, r8
 8006d2c:	f7fc f9c2 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8006d30:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006d34:	4618      	mov	r0, r3
 8006d36:	ee08 3a10 	vmov	s16, r3
 8006d3a:	f7fc f9bb 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8006d3e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006d42:	4618      	mov	r0, r3
 8006d44:	ee08 3a90 	vmov	s17, r3
 8006d48:	f7fc f9b4 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8006d4c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006d50:	4618      	mov	r0, r3
 8006d52:	ee09 3a10 	vmov	s18, r3
 8006d56:	f00c fb83 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006d5a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006d5e:	4618      	mov	r0, r3
 8006d60:	ee09 3a90 	vmov	s19, r3
 8006d64:	f00c fb7c 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006d68:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006d6c:	4618      	mov	r0, r3
 8006d6e:	ee0a 3a10 	vmov	s20, r3
 8006d72:	f00c fb75 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006d76:	4a33      	ldr	r2, [pc, #204]	; (8006e44 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006d78:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006d7c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006d80:	4a31      	ldr	r2, [pc, #196]	; (8006e48 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006d82:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006d86:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006d8a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006d8e:	f00d fa23 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006d92:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006d96:	462a      	mov	r2, r5
 8006d98:	4658      	mov	r0, fp
 8006d9a:	9300      	str	r3, [sp, #0]
 8006d9c:	4629      	mov	r1, r5
 8006d9e:	23f0      	movs	r3, #240	; 0xf0
 8006da0:	f7fc f962 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006da4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006da6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006daa:	66a3      	str	r3, [r4, #104]	; 0x68
 8006dac:	4659      	mov	r1, fp
 8006dae:	4630      	mov	r0, r6
 8006db0:	f009 fc86 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006db4:	462a      	mov	r2, r5
 8006db6:	4650      	mov	r0, sl
 8006db8:	4629      	mov	r1, r5
 8006dba:	f7fc f948 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8006dbe:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006dc0:	4650      	mov	r0, sl
 8006dc2:	a90a      	add	r1, sp, #40	; 0x28
 8006dc4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006dc8:	f00c fa09 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006dcc:	4651      	mov	r1, sl
 8006dce:	4630      	mov	r0, r6
 8006dd0:	f009 fc76 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006dd4:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006dd8:	2156      	movs	r1, #86	; 0x56
 8006dda:	4648      	mov	r0, r9
 8006ddc:	f7fc f937 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8006de0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006de4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006de8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006dec:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006df0:	4650      	mov	r0, sl
 8006df2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006df6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006dfa:	4649      	mov	r1, r9
 8006dfc:	4798      	blx	r3
 8006dfe:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006e02:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006e06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006e0a:	4b10      	ldr	r3, [pc, #64]	; (8006e4c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006e0c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8006e0e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006e12:	b92b      	cbnz	r3, 8006e20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006e14:	4b0e      	ldr	r3, [pc, #56]	; (8006e50 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8006e16:	4a0f      	ldr	r2, [pc, #60]	; (8006e54 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006e18:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006e1a:	480f      	ldr	r0, [pc, #60]	; (8006e58 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006e1c:	f023 fe46 	bl	802aaac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006e20:	4b0e      	ldr	r3, [pc, #56]	; (8006e5c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006e22:	881b      	ldrh	r3, [r3, #0]
 8006e24:	2b26      	cmp	r3, #38	; 0x26
 8006e26:	d81d      	bhi.n	8006e64 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006e28:	4b0d      	ldr	r3, [pc, #52]	; (8006e60 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8006e2a:	4a0a      	ldr	r2, [pc, #40]	; (8006e54 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006e2c:	2161      	movs	r1, #97	; 0x61
 8006e2e:	e7f4      	b.n	8006e1a <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8006e30:	0802e0d8 	.word	0x0802e0d8
 8006e34:	0802f000 	.word	0x0802f000
 8006e38:	0802f1c8 	.word	0x0802f1c8
 8006e3c:	0802c6b0 	.word	0x0802c6b0
 8006e40:	0802ed34 	.word	0x0802ed34
 8006e44:	0802e0c0 	.word	0x0802e0c0
 8006e48:	08006c45 	.word	0x08006c45
 8006e4c:	20012dfc 	.word	0x20012dfc
 8006e50:	0802c4f0 	.word	0x0802c4f0
 8006e54:	0802c5f2 	.word	0x0802c5f2
 8006e58:	0802c56d 	.word	0x0802c56d
 8006e5c:	20012e00 	.word	0x20012e00
 8006e60:	0802c5b4 	.word	0x0802c5b4
        return texts->getText(typedTextId);
 8006e64:	4b93      	ldr	r3, [pc, #588]	; (80070b4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8006e66:	2126      	movs	r1, #38	; 0x26
 8006e68:	6818      	ldr	r0, [r3, #0]
 8006e6a:	f002 f8d3 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8006e6e:	4a92      	ldr	r2, [pc, #584]	; (80070b8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006e70:	4603      	mov	r3, r0
 8006e72:	2104      	movs	r1, #4
 8006e74:	4650      	mov	r0, sl
 8006e76:	f012 f82b 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006e7a:	4648      	mov	r0, r9
        wc1 = value;
 8006e7c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006e80:	f00b fdb2 	bl	80129e8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006e84:	4b8d      	ldr	r3, [pc, #564]	; (80070bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8006e86:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006e88:	a90a      	add	r1, sp, #40	; 0x28
 8006e8a:	2327      	movs	r3, #39	; 0x27
 8006e8c:	4648      	mov	r0, r9
 8006e8e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e92:	f00b fdc9 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e96:	4649      	mov	r1, r9
 8006e98:	4630      	mov	r0, r6
 8006e9a:	f009 fc11 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006e9e:	230a      	movs	r3, #10
 8006ea0:	9300      	str	r3, [sp, #0]
 8006ea2:	2232      	movs	r2, #50	; 0x32
 8006ea4:	23f0      	movs	r3, #240	; 0xf0
 8006ea6:	4629      	mov	r1, r5
 8006ea8:	4638      	mov	r0, r7
 8006eaa:	f7fc f8dd 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006eae:	9b03      	ldr	r3, [sp, #12]
 8006eb0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006eb4:	22a0      	movs	r2, #160	; 0xa0
 8006eb6:	4611      	mov	r1, r2
 8006eb8:	4638      	mov	r0, r7
 8006eba:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006ebe:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006ec2:	f00b f96b 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006ec6:	22a0      	movs	r2, #160	; 0xa0
 8006ec8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006ecc:	4638      	mov	r0, r7
 8006ece:	f00b f970 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006ed2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006ed6:	2b20      	cmp	r3, #32
 8006ed8:	d005      	beq.n	8006ee6 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006eda:	2320      	movs	r3, #32
 8006edc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006ee0:	4638      	mov	r0, r7
 8006ee2:	f00b f865 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006ee6:	4638      	mov	r0, r7
 8006ee8:	2101      	movs	r1, #1
 8006eea:	f00b f96d 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006eee:	4639      	mov	r1, r7
 8006ef0:	4630      	mov	r0, r6
 8006ef2:	ad04      	add	r5, sp, #16
        color = newColor;
 8006ef4:	f04f 37ff 	mov.w	r7, #4294967295
 8006ef8:	f009 fbe2 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006efc:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006f00:	2223      	movs	r2, #35	; 0x23
 8006f02:	4640      	mov	r0, r8
 8006f04:	2145      	movs	r1, #69	; 0x45
 8006f06:	f7fc f8a2 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006f0a:	4641      	mov	r1, r8
 8006f0c:	4628      	mov	r0, r5
        color = newColor;
 8006f0e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006f12:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006f16:	f00b faed 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006f1a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006f1e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006f22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006f26:	f8df 9194 	ldr.w	r9, [pc, #404]	; 80070bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8006f2a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006f2e:	234c      	movs	r3, #76	; 0x4c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8006f30:	a90a      	add	r1, sp, #40	; 0x28
 8006f32:	4640      	mov	r0, r8
 8006f34:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f38:	f00b fd76 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f3c:	4641      	mov	r1, r8
 8006f3e:	4630      	mov	r0, r6
 8006f40:	f009 fbbe 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006f44:	ee18 0a10 	vmov	r0, s16
 8006f48:	220c      	movs	r2, #12
 8006f4a:	2136      	movs	r1, #54	; 0x36
 8006f4c:	f7fc f87f 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8006f50:	ee18 1a10 	vmov	r1, s16
 8006f54:	4628      	mov	r0, r5
        color = newColor;
 8006f56:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006f5a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006f5e:	f00b fac9 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006f62:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006f66:	ee18 3a10 	vmov	r3, s16
 8006f6a:	333c      	adds	r3, #60	; 0x3c
 8006f6c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006f70:	234b      	movs	r3, #75	; 0x4b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8006f72:	ee18 0a10 	vmov	r0, s16
 8006f76:	a90a      	add	r1, sp, #40	; 0x28
 8006f78:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f7c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006f80:	f00b fd52 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f84:	ee18 1a10 	vmov	r1, s16
 8006f88:	4630      	mov	r0, r6
 8006f8a:	f009 fb99 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006f8e:	ee18 0a90 	vmov	r0, s17
 8006f92:	223c      	movs	r2, #60	; 0x3c
 8006f94:	2121      	movs	r1, #33	; 0x21
 8006f96:	f7fc f85a 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8006f9a:	ee18 1a90 	vmov	r1, s17
 8006f9e:	4628      	mov	r0, r5
        color = newColor;
 8006fa0:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006fa4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006fa8:	f00b faa4 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006fac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006fb0:	ee18 3a90 	vmov	r3, s17
 8006fb4:	333c      	adds	r3, #60	; 0x3c
 8006fb6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006fba:	2335      	movs	r3, #53	; 0x35
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006fbc:	ee18 0a90 	vmov	r0, s17
 8006fc0:	a90a      	add	r1, sp, #40	; 0x28
 8006fc2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006fc6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006fca:	f00b fd2d 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fce:	ee18 1a90 	vmov	r1, s17
 8006fd2:	4630      	mov	r0, r6
 8006fd4:	f009 fb74 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006fd8:	ee19 0a10 	vmov	r0, s18
 8006fdc:	22f0      	movs	r2, #240	; 0xf0
 8006fde:	2121      	movs	r1, #33	; 0x21
 8006fe0:	f7fc f835 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8006fe4:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006fe8:	aa0a      	add	r2, sp, #40	; 0x28
 8006fea:	f04f 0802 	mov.w	r8, #2
 8006fee:	a909      	add	r1, sp, #36	; 0x24
 8006ff0:	ee19 0a10 	vmov	r0, s18
 8006ff4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ff8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006ffc:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007000:	f00b fef7 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007004:	234a      	movs	r3, #74	; 0x4a
 8007006:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800700a:	3510      	adds	r5, #16
        updateTextPosition();
 800700c:	ee19 0a10 	vmov	r0, s18
 8007010:	f7fc f872 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007014:	ee19 1a10 	vmov	r1, s18
 8007018:	4630      	mov	r0, r6
        colorPressed = col;
 800701a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800701e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8007022:	f009 fb4d 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007026:	ee19 0a90 	vmov	r0, s19
 800702a:	22aa      	movs	r2, #170	; 0xaa
 800702c:	2121      	movs	r1, #33	; 0x21
 800702e:	f7fc f80e 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007032:	aa0a      	add	r2, sp, #40	; 0x28
 8007034:	a909      	add	r1, sp, #36	; 0x24
 8007036:	ee19 0a90 	vmov	r0, s19
 800703a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800703e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007042:	f00b fed6 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007046:	2349      	movs	r3, #73	; 0x49
 8007048:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800704c:	ee19 0a90 	vmov	r0, s19
 8007050:	f7fc f852 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007054:	ee19 1a90 	vmov	r1, s19
 8007058:	4630      	mov	r0, r6
        colorPressed = col;
 800705a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800705e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8007062:	f009 fb2d 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007066:	ee1a 0a10 	vmov	r0, s20
 800706a:	2264      	movs	r2, #100	; 0x64
 800706c:	2121      	movs	r1, #33	; 0x21
 800706e:	f7fb ffee 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007072:	aa0a      	add	r2, sp, #40	; 0x28
 8007074:	a909      	add	r1, sp, #36	; 0x24
 8007076:	ee1a 0a10 	vmov	r0, s20
 800707a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800707e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007082:	f00b feb6 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007086:	2348      	movs	r3, #72	; 0x48
        updateTextPosition();
 8007088:	ee1a 0a10 	vmov	r0, s20
 800708c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007090:	f7fc f832 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007094:	4630      	mov	r0, r6
        colorPressed = col;
 8007096:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800709a:	ee1a 1a10 	vmov	r1, s20
 800709e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80070a2:	f009 fb0d 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80070a6:	4620      	mov	r0, r4
 80070a8:	b00d      	add	sp, #52	; 0x34
 80070aa:	ecbd 8b06 	vpop	{d8-d10}
 80070ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80070b2:	bf00      	nop
 80070b4:	20012e08 	.word	0x20012e08
 80070b8:	0802c62a 	.word	0x0802c62a
 80070bc:	0802c6a0 	.word	0x0802c6a0

080070c0 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80070c0:	4770      	bx	lr

080070c2 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80070c2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80070c4:	68c2      	ldr	r2, [r0, #12]
 80070c6:	6844      	ldr	r4, [r0, #4]
 80070c8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80070ca:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80070cc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80070d0:	07d2      	lsls	r2, r2, #31
 80070d2:	bf48      	it	mi
 80070d4:	5962      	ldrmi	r2, [r4, r5]
 80070d6:	689b      	ldr	r3, [r3, #8]
    }
 80070d8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80070da:	bf48      	it	mi
 80070dc:	58d3      	ldrmi	r3, [r2, r3]
 80070de:	4718      	bx	r3

080070e0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80070e0:	6843      	ldr	r3, [r0, #4]
 80070e2:	b12b      	cbz	r3, 80070f0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80070e4:	6883      	ldr	r3, [r0, #8]
 80070e6:	b92b      	cbnz	r3, 80070f4 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80070e8:	68c0      	ldr	r0, [r0, #12]
 80070ea:	f000 0001 	and.w	r0, r0, #1
 80070ee:	4770      	bx	lr
 80070f0:	4618      	mov	r0, r3
 80070f2:	4770      	bx	lr
 80070f4:	2001      	movs	r0, #1
    }
 80070f6:	4770      	bx	lr

080070f8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80070f8:	b510      	push	{r4, lr}
 80070fa:	2110      	movs	r1, #16
 80070fc:	4604      	mov	r4, r0
 80070fe:	f022 fdee 	bl	8029cde <_ZdlPvj>
 8007102:	4620      	mov	r0, r4
 8007104:	bd10      	pop	{r4, pc}

08007106 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8007106:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800710a:	f002 b93b 	b.w	8009384 <_ZN17Gauge_with_Values10initializeEv>

0800710e <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800710e:	3098      	adds	r0, #152	; 0x98
 8007110:	4288      	cmp	r0, r1
{
 8007112:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007114:	d105      	bne.n	8007122 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007116:	f00e fd6b 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800711a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800711e:	f7fd bbdd 	b.w	80048dc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007122:	bd08      	pop	{r3, pc}

08007124 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007124:	b510      	push	{r4, lr}
 8007126:	4b07      	ldr	r3, [pc, #28]	; (8007144 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8007128:	6003      	str	r3, [r0, #0]
 800712a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800712c:	f00d f85e 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8007130:	4b05      	ldr	r3, [pc, #20]	; (8007148 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 8007132:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8007136:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800713a:	f7fe fe25 	bl	8005d88 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800713e:	4620      	mov	r0, r4
 8007140:	bd10      	pop	{r4, pc}
 8007142:	bf00      	nop
 8007144:	0802e124 	.word	0x0802e124
 8007148:	0802e68c 	.word	0x0802e68c

0800714c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800714c:	b510      	push	{r4, lr}
 800714e:	4604      	mov	r4, r0
}
 8007150:	f7ff ffe8 	bl	8007124 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8007154:	4620      	mov	r0, r4
 8007156:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800715a:	f022 fdc0 	bl	8029cde <_ZdlPvj>
 800715e:	4620      	mov	r0, r4
 8007160:	bd10      	pop	{r4, pc}
	...

08007164 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8007164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007168:	ed2d 8b04 	vpush	{d8-d9}
 800716c:	4604      	mov	r4, r0
 800716e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007170:	46a1      	mov	r9, r4
 8007172:	2500      	movs	r5, #0
 8007174:	f010 f9bc 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 8007178:	4bad      	ldr	r3, [pc, #692]	; (8007430 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 800717a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800717c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007180:	2226      	movs	r2, #38	; 0x26
 8007182:	4629      	mov	r1, r5
 8007184:	4648      	mov	r0, r9
 8007186:	f023 fe96 	bl	802aeb6 <memset>
 800718a:	4648      	mov	r0, r9
 800718c:	f7fb ff80 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8007190:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007194:	26ff      	movs	r6, #255	; 0xff
 8007196:	4ba7      	ldr	r3, [pc, #668]	; (8007434 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8007198:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800719a:	2226      	movs	r2, #38	; 0x26
 800719c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80071a0:	4629      	mov	r1, r5
 80071a2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80071a6:	4640      	mov	r0, r8
 80071a8:	66a5      	str	r5, [r4, #104]	; 0x68
 80071aa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80071ae:	f023 fe82 	bl	802aeb6 <memset>
 80071b2:	4640      	mov	r0, r8
 80071b4:	f7fb ff6c 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80071b8:	4b9f      	ldr	r3, [pc, #636]	; (8007438 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 80071ba:	66e3      	str	r3, [r4, #108]	; 0x6c
 80071bc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80071c0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80071c4:	a90a      	add	r1, sp, #40	; 0x28
 80071c6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80071ca:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80071cc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80071d0:	f00c f805 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80071d4:	4658      	mov	r0, fp
 80071d6:	f00c f943 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80071da:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80071de:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80071e2:	4618      	mov	r0, r3
 80071e4:	ee08 3a90 	vmov	s17, r3
 80071e8:	f7fb ff64 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 80071ec:	4638      	mov	r0, r7
 80071ee:	f00a febf 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 80071f2:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80071f6:	4618      	mov	r0, r3
 80071f8:	9303      	str	r3, [sp, #12]
 80071fa:	f7fb fd49 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80071fe:	4b8f      	ldr	r3, [pc, #572]	; (800743c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 8007200:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8007204:	3324      	adds	r3, #36	; 0x24
 8007206:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800720a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800720e:	4618      	mov	r0, r3
 8007210:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8007214:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007218:	ee08 3a10 	vmov	s16, r3
 800721c:	f7fb ff4a 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007220:	4650      	mov	r0, sl
 8007222:	f7fb ff47 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007226:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800722a:	4618      	mov	r0, r3
 800722c:	ee09 3a10 	vmov	s18, r3
 8007230:	f002 f89e 	bl	8009370 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007234:	4a82      	ldr	r2, [pc, #520]	; (8007440 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
 8007236:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800723a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800723e:	4a81      	ldr	r2, [pc, #516]	; (8007444 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007240:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007244:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8007248:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800724c:	f00c ffc4 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007250:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007254:	462a      	mov	r2, r5
 8007256:	4648      	mov	r0, r9
 8007258:	9300      	str	r3, [sp, #0]
 800725a:	4629      	mov	r1, r5
 800725c:	23f0      	movs	r3, #240	; 0xf0
 800725e:	f7fb ff03 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007262:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007264:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007268:	66a3      	str	r3, [r4, #104]	; 0x68
 800726a:	4649      	mov	r1, r9
 800726c:	4630      	mov	r0, r6
 800726e:	f009 fa27 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007272:	462a      	mov	r2, r5
 8007274:	4640      	mov	r0, r8
 8007276:	4629      	mov	r1, r5
 8007278:	f7fb fee9 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800727c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800727e:	4640      	mov	r0, r8
 8007280:	a90a      	add	r1, sp, #40	; 0x28
 8007282:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007286:	f00b ffaa 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800728a:	4641      	mov	r1, r8
 800728c:	4630      	mov	r0, r6
 800728e:	f009 fa17 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007292:	4658      	mov	r0, fp
 8007294:	f240 1201 	movw	r2, #257	; 0x101
 8007298:	2121      	movs	r1, #33	; 0x21
 800729a:	f7fb fed8 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800729e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80072a0:	aa0a      	add	r2, sp, #40	; 0x28
 80072a2:	a909      	add	r1, sp, #36	; 0x24
 80072a4:	4658      	mov	r0, fp
 80072a6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80072aa:	2302      	movs	r3, #2
 80072ac:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80072b0:	f00b fd9f 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80072b4:	2331      	movs	r3, #49	; 0x31
        updateTextPosition();
 80072b6:	4658      	mov	r0, fp
 80072b8:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80072bc:	f7fb ff1c 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80072c0:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80072c4:	3314      	adds	r3, #20
        color = col;
 80072c6:	f04f 39ff 	mov.w	r9, #4294967295
 80072ca:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80072ce:	4659      	mov	r1, fp
 80072d0:	4630      	mov	r0, r6
        colorPressed = col;
 80072d2:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80072d6:	f009 f9f3 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80072da:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80072de:	223c      	movs	r2, #60	; 0x3c
 80072e0:	ee18 0a90 	vmov	r0, s17
 80072e4:	2117      	movs	r1, #23
 80072e6:	f7fb feb2 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80072ea:	ee18 1a90 	vmov	r1, s17
 80072ee:	4640      	mov	r0, r8
        color = newColor;
 80072f0:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80072f4:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80072f8:	f00b f8fc 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072fc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007300:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007304:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007308:	f04f 0b32 	mov.w	fp, #50	; 0x32
 800730c:	4b4e      	ldr	r3, [pc, #312]	; (8007448 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 800730e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8007310:	ee18 0a90 	vmov	r0, s17
 8007314:	a90a      	add	r1, sp, #40	; 0x28
 8007316:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800731a:	f00b fb85 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800731e:	ee18 1a90 	vmov	r1, s17
 8007322:	4630      	mov	r0, r6
 8007324:	f009 f9cc 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007328:	230a      	movs	r3, #10
 800732a:	9300      	str	r3, [sp, #0]
 800732c:	465a      	mov	r2, fp
 800732e:	23f0      	movs	r3, #240	; 0xf0
 8007330:	4629      	mov	r1, r5
 8007332:	4638      	mov	r0, r7
 8007334:	f7fb fe98 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007338:	9b03      	ldr	r3, [sp, #12]
 800733a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800733e:	22a0      	movs	r2, #160	; 0xa0
 8007340:	4611      	mov	r1, r2
 8007342:	4638      	mov	r0, r7
 8007344:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007348:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800734c:	f00a ff26 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007350:	22a0      	movs	r2, #160	; 0xa0
 8007352:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007356:	4638      	mov	r0, r7
 8007358:	f00a ff2b 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800735c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007360:	2b20      	cmp	r3, #32
 8007362:	d005      	beq.n	8007370 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x20c>
        lineWidthQ5 = widthQ5;
 8007364:	2320      	movs	r3, #32
 8007366:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800736a:	4638      	mov	r0, r7
 800736c:	f00a fe20 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007370:	4638      	mov	r0, r7
 8007372:	2101      	movs	r1, #1
 8007374:	f00a ff28 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007378:	4639      	mov	r1, r7
 800737a:	4630      	mov	r0, r6
 800737c:	f009 f9a0 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007380:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8007382:	ee18 0a10 	vmov	r0, s16
 8007386:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8007388:	f04f 39ff 	mov.w	r9, #4294967295
 800738c:	2145      	movs	r1, #69	; 0x45
 800738e:	f7fb fe5e 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007392:	ee18 1a10 	vmov	r1, s16
 8007396:	4640      	mov	r0, r8
        color = newColor;
 8007398:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800739c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80073a0:	f00b f8a8 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073a4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80073a8:	ee18 3a10 	vmov	r3, s16
 80073ac:	333c      	adds	r3, #60	; 0x3c
 80073ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80073b2:	4f25      	ldr	r7, [pc, #148]	; (8007448 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 80073b4:	970a      	str	r7, [sp, #40]	; 0x28
 80073b6:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 80073b8:	ee18 0a10 	vmov	r0, s16
 80073bc:	a90a      	add	r1, sp, #40	; 0x28
 80073be:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073c2:	f00b fb31 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073c6:	ee18 1a10 	vmov	r1, s16
 80073ca:	4630      	mov	r0, r6
 80073cc:	f009 f978 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80073d0:	220c      	movs	r2, #12
 80073d2:	4650      	mov	r0, sl
 80073d4:	2136      	movs	r1, #54	; 0x36
 80073d6:	f7fb fe3a 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80073da:	4651      	mov	r1, sl
 80073dc:	4640      	mov	r0, r8
        color = newColor;
 80073de:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80073e2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80073e6:	f00b f885 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073ea:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80073ee:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80073f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80073f6:	2334      	movs	r3, #52	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 80073f8:	a90a      	add	r1, sp, #40	; 0x28
 80073fa:	4650      	mov	r0, sl
 80073fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007400:	970a      	str	r7, [sp, #40]	; 0x28
 8007402:	f00b fb11 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007406:	4651      	mov	r1, sl
 8007408:	4630      	mov	r0, r6
 800740a:	f009 f959 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800740e:	ee19 0a10 	vmov	r0, s18
 8007412:	224e      	movs	r2, #78	; 0x4e
 8007414:	4629      	mov	r1, r5
 8007416:	f7fb fe1a 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800741a:	4630      	mov	r0, r6
 800741c:	ee19 1a10 	vmov	r1, s18
 8007420:	f009 f94e 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007424:	4620      	mov	r0, r4
 8007426:	b00d      	add	sp, #52	; 0x34
 8007428:	ecbd 8b04 	vpop	{d8-d9}
 800742c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007430:	0802e124 	.word	0x0802e124
 8007434:	0802f000 	.word	0x0802f000
 8007438:	0802f1c8 	.word	0x0802f1c8
 800743c:	0802ed34 	.word	0x0802ed34
 8007440:	0802e10c 	.word	0x0802e10c
 8007444:	0800710f 	.word	0x0800710f
 8007448:	0802c6a0 	.word	0x0802c6a0

0800744c <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800744c:	4770      	bx	lr

0800744e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800744e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007450:	68c2      	ldr	r2, [r0, #12]
 8007452:	6844      	ldr	r4, [r0, #4]
 8007454:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007456:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007458:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800745c:	07d2      	lsls	r2, r2, #31
 800745e:	bf48      	it	mi
 8007460:	5962      	ldrmi	r2, [r4, r5]
 8007462:	689b      	ldr	r3, [r3, #8]
    }
 8007464:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007466:	bf48      	it	mi
 8007468:	58d3      	ldrmi	r3, [r2, r3]
 800746a:	4718      	bx	r3

0800746c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800746c:	6843      	ldr	r3, [r0, #4]
 800746e:	b12b      	cbz	r3, 800747c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007470:	6883      	ldr	r3, [r0, #8]
 8007472:	b92b      	cbnz	r3, 8007480 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007474:	68c0      	ldr	r0, [r0, #12]
 8007476:	f000 0001 	and.w	r0, r0, #1
 800747a:	4770      	bx	lr
 800747c:	4618      	mov	r0, r3
 800747e:	4770      	bx	lr
 8007480:	2001      	movs	r0, #1
    }
 8007482:	4770      	bx	lr

08007484 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007484:	b510      	push	{r4, lr}
 8007486:	2110      	movs	r1, #16
 8007488:	4604      	mov	r4, r0
 800748a:	f022 fc28 	bl	8029cde <_ZdlPvj>
 800748e:	4620      	mov	r0, r4
 8007490:	bd10      	pop	{r4, pc}

08007492 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8007492:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8007496:	f001 bf75 	b.w	8009384 <_ZN17Gauge_with_Values10initializeEv>

0800749a <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800749a:	3098      	adds	r0, #152	; 0x98
 800749c:	4288      	cmp	r0, r1
{
 800749e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80074a0:	d105      	bne.n	80074ae <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80074a2:	f00e fba5 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80074a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80074aa:	f7fd ba17 	b.w	80048dc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80074ae:	bd08      	pop	{r3, pc}

080074b0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80074b0:	b510      	push	{r4, lr}
 80074b2:	4b07      	ldr	r3, [pc, #28]	; (80074d0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 80074b4:	6003      	str	r3, [r0, #0]
 80074b6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80074b8:	f00c fe98 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80074bc:	4b05      	ldr	r3, [pc, #20]	; (80074d4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 80074be:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80074c2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80074c6:	f7fe fc5f 	bl	8005d88 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80074ca:	4620      	mov	r0, r4
 80074cc:	bd10      	pop	{r4, pc}
 80074ce:	bf00      	nop
 80074d0:	0802e170 	.word	0x0802e170
 80074d4:	0802e68c 	.word	0x0802e68c

080074d8 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80074d8:	b510      	push	{r4, lr}
 80074da:	4604      	mov	r4, r0
}
 80074dc:	f7ff ffe8 	bl	80074b0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80074e0:	4620      	mov	r0, r4
 80074e2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80074e6:	f022 fbfa 	bl	8029cde <_ZdlPvj>
 80074ea:	4620      	mov	r0, r4
 80074ec:	bd10      	pop	{r4, pc}
	...

080074f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 80074f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074f4:	ed2d 8b04 	vpush	{d8-d9}
 80074f8:	4604      	mov	r4, r0
 80074fa:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 80074fc:	46a1      	mov	r9, r4
 80074fe:	2500      	movs	r5, #0
 8007500:	f00f fff6 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 8007504:	4bac      	ldr	r3, [pc, #688]	; (80077b8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 8007506:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007508:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800750c:	2226      	movs	r2, #38	; 0x26
 800750e:	4629      	mov	r1, r5
 8007510:	4648      	mov	r0, r9
 8007512:	f023 fcd0 	bl	802aeb6 <memset>
 8007516:	4648      	mov	r0, r9
 8007518:	f7fb fdba 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 800751c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007520:	26ff      	movs	r6, #255	; 0xff
 8007522:	4ba6      	ldr	r3, [pc, #664]	; (80077bc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8007524:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007526:	2226      	movs	r2, #38	; 0x26
 8007528:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800752c:	4629      	mov	r1, r5
 800752e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007532:	4640      	mov	r0, r8
 8007534:	66a5      	str	r5, [r4, #104]	; 0x68
 8007536:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800753a:	f023 fcbc 	bl	802aeb6 <memset>
 800753e:	4640      	mov	r0, r8
 8007540:	f7fb fda6 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8007544:	4b9e      	ldr	r3, [pc, #632]	; (80077c0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 8007546:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007548:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800754c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007550:	a90a      	add	r1, sp, #40	; 0x28
 8007552:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007554:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007558:	f00b fe41 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800755c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8007560:	4618      	mov	r0, r3
 8007562:	ee08 3a10 	vmov	s16, r3
 8007566:	f00b ff7b 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800756a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800756e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8007572:	4618      	mov	r0, r3
 8007574:	ee08 3a90 	vmov	s17, r3
 8007578:	f7fb fd9c 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 800757c:	4638      	mov	r0, r7
 800757e:	f00a fcf7 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 8007582:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007586:	4618      	mov	r0, r3
 8007588:	9303      	str	r3, [sp, #12]
 800758a:	f7fb fb81 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800758e:	4b8d      	ldr	r3, [pc, #564]	; (80077c4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8007590:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8007594:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8007598:	3324      	adds	r3, #36	; 0x24
 800759a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800759e:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80075a2:	4658      	mov	r0, fp
 80075a4:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80075a8:	f7fb fd84 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 80075ac:	4650      	mov	r0, sl
 80075ae:	f7fb fd81 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 80075b2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80075b6:	4618      	mov	r0, r3
 80075b8:	ee09 3a10 	vmov	s18, r3
 80075bc:	f001 fed8 	bl	8009370 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80075c0:	4a81      	ldr	r2, [pc, #516]	; (80077c8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 80075c2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80075c6:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80075ca:	4a80      	ldr	r2, [pc, #512]	; (80077cc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80075cc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80075d0:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80075d4:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80075d8:	f00c fdfe 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80075dc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80075e0:	462a      	mov	r2, r5
 80075e2:	4648      	mov	r0, r9
 80075e4:	9300      	str	r3, [sp, #0]
 80075e6:	4629      	mov	r1, r5
 80075e8:	23f0      	movs	r3, #240	; 0xf0
 80075ea:	f7fb fd3d 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80075ee:	1d26      	adds	r6, r4, #4
        color = newColor;
 80075f0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80075f4:	66a3      	str	r3, [r4, #104]	; 0x68
 80075f6:	4649      	mov	r1, r9
 80075f8:	4630      	mov	r0, r6
 80075fa:	f009 f861 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80075fe:	462a      	mov	r2, r5
 8007600:	4640      	mov	r0, r8
 8007602:	4629      	mov	r1, r5
 8007604:	f7fb fd23 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8007608:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800760a:	4640      	mov	r0, r8
 800760c:	a90a      	add	r1, sp, #40	; 0x28
 800760e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007612:	f00b fde4 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007616:	4641      	mov	r1, r8
 8007618:	4630      	mov	r0, r6
 800761a:	f009 f851 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800761e:	ee18 0a10 	vmov	r0, s16
 8007622:	f240 1201 	movw	r2, #257	; 0x101
 8007626:	2121      	movs	r1, #33	; 0x21
 8007628:	f7fb fd11 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800762c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800762e:	aa0a      	add	r2, sp, #40	; 0x28
 8007630:	a909      	add	r1, sp, #36	; 0x24
 8007632:	ee18 0a10 	vmov	r0, s16
 8007636:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800763a:	2302      	movs	r3, #2
 800763c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007640:	f00b fbd7 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007644:	232d      	movs	r3, #45	; 0x2d
        updateTextPosition();
 8007646:	ee18 0a10 	vmov	r0, s16
 800764a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800764e:	f7fb fd53 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007652:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8007656:	3314      	adds	r3, #20
        color = col;
 8007658:	f04f 39ff 	mov.w	r9, #4294967295
 800765c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007660:	ee18 1a10 	vmov	r1, s16
 8007664:	4630      	mov	r0, r6
        colorPressed = col;
 8007666:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800766a:	f009 f829 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800766e:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8007672:	223c      	movs	r2, #60	; 0x3c
 8007674:	ee18 0a90 	vmov	r0, s17
 8007678:	2117      	movs	r1, #23
 800767a:	f7fb fce8 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800767e:	ee18 1a90 	vmov	r1, s17
 8007682:	4640      	mov	r0, r8
        color = newColor;
 8007684:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8007688:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800768c:	f00a ff32 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007690:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007694:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007698:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800769c:	4b4c      	ldr	r3, [pc, #304]	; (80077d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800769e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80076a0:	ee18 0a90 	vmov	r0, s17
 80076a4:	232e      	movs	r3, #46	; 0x2e
 80076a6:	a90a      	add	r1, sp, #40	; 0x28
 80076a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076ac:	f00b f9bc 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076b0:	ee18 1a90 	vmov	r1, s17
 80076b4:	4630      	mov	r0, r6
 80076b6:	f009 f803 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80076ba:	230a      	movs	r3, #10
 80076bc:	9300      	str	r3, [sp, #0]
 80076be:	2232      	movs	r2, #50	; 0x32
 80076c0:	23f0      	movs	r3, #240	; 0xf0
 80076c2:	4629      	mov	r1, r5
 80076c4:	4638      	mov	r0, r7
 80076c6:	f7fb fccf 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80076ca:	9b03      	ldr	r3, [sp, #12]
 80076cc:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80076d0:	22a0      	movs	r2, #160	; 0xa0
 80076d2:	4611      	mov	r1, r2
 80076d4:	4638      	mov	r0, r7
 80076d6:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80076da:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80076de:	f00a fd5d 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80076e2:	22a0      	movs	r2, #160	; 0xa0
 80076e4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80076e8:	4638      	mov	r0, r7
 80076ea:	f00a fd62 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80076ee:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80076f2:	2b20      	cmp	r3, #32
 80076f4:	d005      	beq.n	8007702 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80076f6:	2320      	movs	r3, #32
 80076f8:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80076fc:	4638      	mov	r0, r7
 80076fe:	f00a fc57 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007702:	4638      	mov	r0, r7
 8007704:	2101      	movs	r1, #1
 8007706:	f00a fd5f 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800770a:	4639      	mov	r1, r7
 800770c:	4630      	mov	r0, r6
 800770e:	f008 ffd7 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007712:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8007714:	2223      	movs	r2, #35	; 0x23
 8007716:	4658      	mov	r0, fp
        color = newColor;
 8007718:	f04f 39ff 	mov.w	r9, #4294967295
 800771c:	2145      	movs	r1, #69	; 0x45
 800771e:	f7fb fc96 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007722:	4659      	mov	r1, fp
 8007724:	4640      	mov	r0, r8
        color = newColor;
 8007726:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800772a:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800772e:	f00a fee1 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007732:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007736:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800773a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800773e:	4f24      	ldr	r7, [pc, #144]	; (80077d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8007740:	970a      	str	r7, [sp, #40]	; 0x28
 8007742:	232f      	movs	r3, #47	; 0x2f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8007744:	a90a      	add	r1, sp, #40	; 0x28
 8007746:	4658      	mov	r0, fp
 8007748:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800774c:	f00b f96c 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007750:	4659      	mov	r1, fp
 8007752:	4630      	mov	r0, r6
 8007754:	f008 ffb4 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007758:	220c      	movs	r2, #12
 800775a:	4650      	mov	r0, sl
 800775c:	2136      	movs	r1, #54	; 0x36
 800775e:	f7fb fc76 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8007762:	4651      	mov	r1, sl
 8007764:	4640      	mov	r0, r8
        color = newColor;
 8007766:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800776a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800776e:	f00a fec1 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007772:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007776:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800777a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800777e:	2330      	movs	r3, #48	; 0x30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8007780:	a90a      	add	r1, sp, #40	; 0x28
 8007782:	4650      	mov	r0, sl
 8007784:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007788:	970a      	str	r7, [sp, #40]	; 0x28
 800778a:	f00b f94d 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800778e:	4651      	mov	r1, sl
 8007790:	4630      	mov	r0, r6
 8007792:	f008 ff95 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8007796:	ee19 0a10 	vmov	r0, s18
 800779a:	224e      	movs	r2, #78	; 0x4e
 800779c:	4629      	mov	r1, r5
 800779e:	f7fb fc56 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80077a2:	4630      	mov	r0, r6
 80077a4:	ee19 1a10 	vmov	r1, s18
 80077a8:	f008 ff8a 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80077ac:	4620      	mov	r0, r4
 80077ae:	b00d      	add	sp, #52	; 0x34
 80077b0:	ecbd 8b04 	vpop	{d8-d9}
 80077b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80077b8:	0802e170 	.word	0x0802e170
 80077bc:	0802f000 	.word	0x0802f000
 80077c0:	0802f1c8 	.word	0x0802f1c8
 80077c4:	0802ed34 	.word	0x0802ed34
 80077c8:	0802e158 	.word	0x0802e158
 80077cc:	0800749b 	.word	0x0800749b
 80077d0:	0802c6a0 	.word	0x0802c6a0

080077d4 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80077d4:	4770      	bx	lr

080077d6 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80077d6:	4770      	bx	lr

080077d8 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80077d8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80077da:	68c2      	ldr	r2, [r0, #12]
 80077dc:	6844      	ldr	r4, [r0, #4]
 80077de:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80077e0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80077e2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80077e6:	07d2      	lsls	r2, r2, #31
 80077e8:	bf48      	it	mi
 80077ea:	5962      	ldrmi	r2, [r4, r5]
 80077ec:	689b      	ldr	r3, [r3, #8]
    }
 80077ee:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80077f0:	bf48      	it	mi
 80077f2:	58d3      	ldrmi	r3, [r2, r3]
 80077f4:	4718      	bx	r3

080077f6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80077f6:	6843      	ldr	r3, [r0, #4]
 80077f8:	b12b      	cbz	r3, 8007806 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80077fa:	6883      	ldr	r3, [r0, #8]
 80077fc:	b92b      	cbnz	r3, 800780a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80077fe:	68c0      	ldr	r0, [r0, #12]
 8007800:	f000 0001 	and.w	r0, r0, #1
 8007804:	4770      	bx	lr
 8007806:	4618      	mov	r0, r3
 8007808:	4770      	bx	lr
 800780a:	2001      	movs	r0, #1
    }
 800780c:	4770      	bx	lr

0800780e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800780e:	b510      	push	{r4, lr}
 8007810:	2110      	movs	r1, #16
 8007812:	4604      	mov	r4, r0
 8007814:	f022 fa63 	bl	8029cde <_ZdlPvj>
 8007818:	4620      	mov	r0, r4
 800781a:	bd10      	pop	{r4, pc}

0800781c <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800781c:	b510      	push	{r4, lr}
 800781e:	4b03      	ldr	r3, [pc, #12]	; (800782c <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007820:	6003      	str	r3, [r0, #0]
 8007822:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007824:	f00c fce2 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007828:	4620      	mov	r0, r4
 800782a:	bd10      	pop	{r4, pc}
 800782c:	0802e1bc 	.word	0x0802e1bc

08007830 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007830:	b507      	push	{r0, r1, r2, lr}
 8007832:	4b07      	ldr	r3, [pc, #28]	; (8007850 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8007834:	6003      	str	r3, [r0, #0]
 8007836:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007838:	f00c fcd8 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800783c:	9801      	ldr	r0, [sp, #4]
 800783e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007842:	f022 fa4c 	bl	8029cde <_ZdlPvj>
 8007846:	9801      	ldr	r0, [sp, #4]
 8007848:	b003      	add	sp, #12
 800784a:	f85d fb04 	ldr.w	pc, [sp], #4
 800784e:	bf00      	nop
 8007850:	0802e1bc 	.word	0x0802e1bc

08007854 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007854:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8007856:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800785a:	4299      	cmp	r1, r3
{
 800785c:	4604      	mov	r4, r0
 800785e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8007860:	d103      	bne.n	800786a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007862:	f00e f9c5 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8007866:	f7fc ffe9 	bl	800483c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800786a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800786e:	429d      	cmp	r5, r3
 8007870:	d103      	bne.n	800787a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8007872:	f00e f9bd 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8007876:	f7fd f801 	bl	800487c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800787a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800787e:	42a5      	cmp	r5, r4
 8007880:	d105      	bne.n	800788e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8007882:	f00e f9b5 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8007886:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 800788a:	f7fd b807 	b.w	800489c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 800788e:	bd38      	pop	{r3, r4, r5, pc}

08007890 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8007890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007894:	ed2d 8b06 	vpush	{d8-d10}
 8007898:	4604      	mov	r4, r0
 800789a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 800789c:	46a3      	mov	fp, r4
 800789e:	2500      	movs	r5, #0
 80078a0:	f00f fe26 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 80078a4:	4b66      	ldr	r3, [pc, #408]	; (8007a40 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80078a6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80078a8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80078ac:	2226      	movs	r2, #38	; 0x26
 80078ae:	4629      	mov	r1, r5
 80078b0:	4658      	mov	r0, fp
 80078b2:	f023 fb00 	bl	802aeb6 <memset>
 80078b6:	4658      	mov	r0, fp
 80078b8:	f7fb fbea 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80078bc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80078c0:	26ff      	movs	r6, #255	; 0xff
 80078c2:	4b60      	ldr	r3, [pc, #384]	; (8007a44 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80078c4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80078c6:	2226      	movs	r2, #38	; 0x26
 80078c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80078cc:	4629      	mov	r1, r5
 80078ce:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80078d2:	4650      	mov	r0, sl
 80078d4:	66a5      	str	r5, [r4, #104]	; 0x68
 80078d6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80078da:	f023 faec 	bl	802aeb6 <memset>
 80078de:	4650      	mov	r0, sl
 80078e0:	f7fb fbd6 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80078e4:	4b58      	ldr	r3, [pc, #352]	; (8007a48 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 80078e6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80078e8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80078ec:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80078f0:	a90a      	add	r1, sp, #40	; 0x28
 80078f2:	4650      	mov	r0, sl
 80078f4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80078f8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80078fc:	f00b fc6f 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007900:	4648      	mov	r0, r9
 8007902:	f7fb fbd7 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007906:	4b51      	ldr	r3, [pc, #324]	; (8007a4c <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8007908:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800790c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007910:	4618      	mov	r0, r3
 8007912:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007916:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800791a:	ee08 3a90 	vmov	s17, r3
 800791e:	f7fb fbc9 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007922:	4638      	mov	r0, r7
 8007924:	f00a fb24 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 8007928:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800792c:	4618      	mov	r0, r3
 800792e:	9303      	str	r3, [sp, #12]
 8007930:	f7fb f9ae 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007934:	4b46      	ldr	r3, [pc, #280]	; (8007a50 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8007936:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800793a:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800793e:	3324      	adds	r3, #36	; 0x24
 8007940:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8007944:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8007948:	4640      	mov	r0, r8
 800794a:	f7fb fbb3 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 800794e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007952:	4618      	mov	r0, r3
 8007954:	ee08 3a10 	vmov	s16, r3
 8007958:	f7fb fbac 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 800795c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007960:	4618      	mov	r0, r3
 8007962:	ee09 3a10 	vmov	s18, r3
 8007966:	f00b fd7b 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800796a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800796e:	4618      	mov	r0, r3
 8007970:	ee09 3a90 	vmov	s19, r3
 8007974:	f00b fd74 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007978:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800797c:	4618      	mov	r0, r3
 800797e:	ee0a 3a10 	vmov	s20, r3
 8007982:	f00b fd6d 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007986:	4a33      	ldr	r2, [pc, #204]	; (8007a54 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8007988:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800798c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8007990:	4a31      	ldr	r2, [pc, #196]	; (8007a58 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007992:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007996:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800799a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800799e:	f00c fc1b 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80079a2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80079a6:	462a      	mov	r2, r5
 80079a8:	4658      	mov	r0, fp
 80079aa:	9300      	str	r3, [sp, #0]
 80079ac:	4629      	mov	r1, r5
 80079ae:	23f0      	movs	r3, #240	; 0xf0
 80079b0:	f7fb fb5a 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80079b4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80079b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80079ba:	66a3      	str	r3, [r4, #104]	; 0x68
 80079bc:	4659      	mov	r1, fp
 80079be:	4630      	mov	r0, r6
 80079c0:	f008 fe7e 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80079c4:	462a      	mov	r2, r5
 80079c6:	4650      	mov	r0, sl
 80079c8:	4629      	mov	r1, r5
 80079ca:	f7fb fb40 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80079ce:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80079d0:	4650      	mov	r0, sl
 80079d2:	a90a      	add	r1, sp, #40	; 0x28
 80079d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079d8:	f00b fc01 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80079dc:	4651      	mov	r1, sl
 80079de:	4630      	mov	r0, r6
 80079e0:	f008 fe6e 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80079e4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80079e8:	2156      	movs	r1, #86	; 0x56
 80079ea:	4648      	mov	r0, r9
 80079ec:	f7fb fb2f 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80079f0:	f04f 33ff 	mov.w	r3, #4294967295
 80079f4:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80079f8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80079fc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007a00:	f10d 0b10 	add.w	fp, sp, #16
 8007a04:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007a08:	4649      	mov	r1, r9
 8007a0a:	4658      	mov	r0, fp
 8007a0c:	4798      	blx	r3
 8007a0e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007a12:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007a16:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a1a:	4b10      	ldr	r3, [pc, #64]	; (8007a5c <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007a1c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007a1e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007a22:	b92b      	cbnz	r3, 8007a30 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007a24:	4b0e      	ldr	r3, [pc, #56]	; (8007a60 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8007a26:	4a0f      	ldr	r2, [pc, #60]	; (8007a64 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007a28:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a2a:	480f      	ldr	r0, [pc, #60]	; (8007a68 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007a2c:	f023 f83e 	bl	802aaac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007a30:	4b0e      	ldr	r3, [pc, #56]	; (8007a6c <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a32:	881b      	ldrh	r3, [r3, #0]
 8007a34:	2b28      	cmp	r3, #40	; 0x28
 8007a36:	d81d      	bhi.n	8007a74 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8007a38:	4b0d      	ldr	r3, [pc, #52]	; (8007a70 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8007a3a:	4a0a      	ldr	r2, [pc, #40]	; (8007a64 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007a3c:	2161      	movs	r1, #97	; 0x61
 8007a3e:	e7f4      	b.n	8007a2a <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007a40:	0802e1bc 	.word	0x0802e1bc
 8007a44:	0802f000 	.word	0x0802f000
 8007a48:	0802f1c8 	.word	0x0802f1c8
 8007a4c:	0802c6b0 	.word	0x0802c6b0
 8007a50:	0802ed34 	.word	0x0802ed34
 8007a54:	0802e1a4 	.word	0x0802e1a4
 8007a58:	08007855 	.word	0x08007855
 8007a5c:	20012dfc 	.word	0x20012dfc
 8007a60:	0802c4f0 	.word	0x0802c4f0
 8007a64:	0802c5f2 	.word	0x0802c5f2
 8007a68:	0802c56d 	.word	0x0802c56d
 8007a6c:	20012e00 	.word	0x20012e00
 8007a70:	0802c5b4 	.word	0x0802c5b4
        return texts->getText(typedTextId);
 8007a74:	4b95      	ldr	r3, [pc, #596]	; (8007ccc <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8007a76:	2128      	movs	r1, #40	; 0x28
 8007a78:	6818      	ldr	r0, [r3, #0]
 8007a7a:	f001 facb 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8007a7e:	4a94      	ldr	r2, [pc, #592]	; (8007cd0 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8007a80:	4603      	mov	r3, r0
 8007a82:	2104      	movs	r1, #4
 8007a84:	4650      	mov	r0, sl
 8007a86:	f011 fa23 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007a8a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8007a8e:	4648      	mov	r0, r9
 8007a90:	f00a ffaa 	bl	80129e8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007a94:	f04f 0a29 	mov.w	sl, #41	; 0x29
 8007a98:	4b8e      	ldr	r3, [pc, #568]	; (8007cd4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8007a9a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8007a9c:	a90a      	add	r1, sp, #40	; 0x28
 8007a9e:	4648      	mov	r0, r9
 8007aa0:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8007aa4:	f00a ffc0 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007aa8:	4649      	mov	r1, r9
 8007aaa:	4630      	mov	r0, r6
 8007aac:	f008 fe08 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8007ab0:	ee18 0a90 	vmov	r0, s17
 8007ab4:	223c      	movs	r2, #60	; 0x3c
 8007ab6:	4651      	mov	r1, sl
 8007ab8:	f7fb fac9 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007abc:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8007ac0:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8007ac4:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007ac8:	4658      	mov	r0, fp
        linespace = space;
 8007aca:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007ace:	f00a fd11 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ad2:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007ad6:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8007ada:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007ade:	4b7d      	ldr	r3, [pc, #500]	; (8007cd4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8007ae0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8007ae2:	ee18 0a90 	vmov	r0, s17
 8007ae6:	2338      	movs	r3, #56	; 0x38
 8007ae8:	a90a      	add	r1, sp, #40	; 0x28
 8007aea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007aee:	f00a ff9b 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007af2:	ee18 1a90 	vmov	r1, s17
 8007af6:	4630      	mov	r0, r6
 8007af8:	f008 fde2 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007afc:	230a      	movs	r3, #10
 8007afe:	9300      	str	r3, [sp, #0]
 8007b00:	2232      	movs	r2, #50	; 0x32
 8007b02:	23f0      	movs	r3, #240	; 0xf0
 8007b04:	4629      	mov	r1, r5
 8007b06:	4638      	mov	r0, r7
 8007b08:	f7fb faae 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b0c:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007b10:	22a0      	movs	r2, #160	; 0xa0
 8007b12:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007b16:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007b1a:	9b03      	ldr	r3, [sp, #12]
 8007b1c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007b20:	4611      	mov	r1, r2
 8007b22:	4638      	mov	r0, r7
 8007b24:	f00a fb3a 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007b28:	22a0      	movs	r2, #160	; 0xa0
 8007b2a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007b2e:	4638      	mov	r0, r7
 8007b30:	f00a fb3f 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007b34:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8007b38:	2b20      	cmp	r3, #32
 8007b3a:	d005      	beq.n	8007b48 <_ZN26Measurement_SingleViewBaseC1Ev+0x2b8>
        lineWidthQ5 = widthQ5;
 8007b3c:	2320      	movs	r3, #32
 8007b3e:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007b42:	4638      	mov	r0, r7
 8007b44:	f00a fa34 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007b48:	4638      	mov	r0, r7
 8007b4a:	2101      	movs	r1, #1
 8007b4c:	f00a fb3c 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007b50:	4639      	mov	r1, r7
 8007b52:	4630      	mov	r0, r6
 8007b54:	f008 fdb4 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007b58:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007b5c:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007b5e:	2223      	movs	r2, #35	; 0x23
 8007b60:	4640      	mov	r0, r8
        linespace = space;
 8007b62:	f04f 0a00 	mov.w	sl, #0
 8007b66:	2145      	movs	r1, #69	; 0x45
 8007b68:	f7fb fa71 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007b6c:	4641      	mov	r1, r8
 8007b6e:	4638      	mov	r0, r7
        color = newColor;
 8007b70:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8007b74:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007b78:	f00a fcbc 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b7c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007b80:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007b84:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007b88:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007cd4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007b8c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007b90:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8007b92:	a90a      	add	r1, sp, #40	; 0x28
 8007b94:	4640      	mov	r0, r8
 8007b96:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b9a:	f00a ff45 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b9e:	4641      	mov	r1, r8
 8007ba0:	4630      	mov	r0, r6
 8007ba2:	f008 fd8d 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007ba6:	ee18 0a10 	vmov	r0, s16
 8007baa:	220c      	movs	r2, #12
 8007bac:	2136      	movs	r1, #54	; 0x36
 8007bae:	f7fb fa4e 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8007bb2:	ee18 1a10 	vmov	r1, s16
 8007bb6:	4638      	mov	r0, r7
        color = newColor;
 8007bb8:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8007bbc:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007bc0:	f00a fc98 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bc4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007bc8:	ee18 3a10 	vmov	r3, s16
 8007bcc:	333c      	adds	r3, #60	; 0x3c
 8007bce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007bd2:	2350      	movs	r3, #80	; 0x50
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8007bd4:	ee18 0a10 	vmov	r0, s16
 8007bd8:	a90a      	add	r1, sp, #40	; 0x28
 8007bda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bde:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007be2:	f00a ff21 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007be6:	ee18 1a10 	vmov	r1, s16
 8007bea:	4630      	mov	r0, r6
 8007bec:	f008 fd68 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007bf0:	ee19 0a10 	vmov	r0, s18
 8007bf4:	22f0      	movs	r2, #240	; 0xf0
 8007bf6:	2121      	movs	r1, #33	; 0x21
 8007bf8:	f7fb fa29 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8007bfc:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c00:	aa0a      	add	r2, sp, #40	; 0x28
 8007c02:	f04f 0802 	mov.w	r8, #2
 8007c06:	a909      	add	r1, sp, #36	; 0x24
 8007c08:	ee19 0a10 	vmov	r0, s18
 8007c0c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007c10:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007c14:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c18:	f00b f8eb 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007c1c:	234f      	movs	r3, #79	; 0x4f
 8007c1e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007c22:	3710      	adds	r7, #16
        updateTextPosition();
 8007c24:	ee19 0a10 	vmov	r0, s18
 8007c28:	f7fb fa66 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007c2c:	ee19 1a10 	vmov	r1, s18
 8007c30:	4630      	mov	r0, r6
        colorPressed = col;
 8007c32:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8007c36:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007c3a:	f008 fd41 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007c3e:	ee19 0a90 	vmov	r0, s19
 8007c42:	22aa      	movs	r2, #170	; 0xaa
 8007c44:	2121      	movs	r1, #33	; 0x21
 8007c46:	f7fb fa02 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c4a:	aa0a      	add	r2, sp, #40	; 0x28
 8007c4c:	a909      	add	r1, sp, #36	; 0x24
 8007c4e:	ee19 0a90 	vmov	r0, s19
 8007c52:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007c56:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007c5a:	f00b f8ca 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007c5e:	234e      	movs	r3, #78	; 0x4e
 8007c60:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007c64:	ee19 0a90 	vmov	r0, s19
 8007c68:	f7fb fa46 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007c6c:	ee19 1a90 	vmov	r1, s19
 8007c70:	4630      	mov	r0, r6
        colorPressed = col;
 8007c72:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007c76:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007c7a:	f008 fd21 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007c7e:	ee1a 0a10 	vmov	r0, s20
 8007c82:	2264      	movs	r2, #100	; 0x64
 8007c84:	2121      	movs	r1, #33	; 0x21
 8007c86:	f7fb f9e2 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c8a:	aa0a      	add	r2, sp, #40	; 0x28
 8007c8c:	a909      	add	r1, sp, #36	; 0x24
 8007c8e:	ee1a 0a10 	vmov	r0, s20
 8007c92:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007c96:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007c9a:	f00b f8aa 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007c9e:	234d      	movs	r3, #77	; 0x4d
        updateTextPosition();
 8007ca0:	ee1a 0a10 	vmov	r0, s20
 8007ca4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007ca8:	f7fb fa26 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007cac:	4630      	mov	r0, r6
        colorPressed = col;
 8007cae:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8007cb2:	ee1a 1a10 	vmov	r1, s20
 8007cb6:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8007cba:	f008 fd01 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007cbe:	4620      	mov	r0, r4
 8007cc0:	b00d      	add	sp, #52	; 0x34
 8007cc2:	ecbd 8b06 	vpop	{d8-d10}
 8007cc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007cca:	bf00      	nop
 8007ccc:	20012e08 	.word	0x20012e08
 8007cd0:	0802c62a 	.word	0x0802c62a
 8007cd4:	0802c6a0 	.word	0x0802c6a0

08007cd8 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007cd8:	4770      	bx	lr

08007cda <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8007cda:	4770      	bx	lr

08007cdc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007cdc:	4770      	bx	lr

08007cde <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007cde:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007ce0:	68c2      	ldr	r2, [r0, #12]
 8007ce2:	6844      	ldr	r4, [r0, #4]
 8007ce4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007ce6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007ce8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007cec:	07d2      	lsls	r2, r2, #31
 8007cee:	bf48      	it	mi
 8007cf0:	5962      	ldrmi	r2, [r4, r5]
 8007cf2:	689b      	ldr	r3, [r3, #8]
    }
 8007cf4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007cf6:	bf48      	it	mi
 8007cf8:	58d3      	ldrmi	r3, [r2, r3]
 8007cfa:	4718      	bx	r3

08007cfc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007cfc:	6843      	ldr	r3, [r0, #4]
 8007cfe:	b12b      	cbz	r3, 8007d0c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007d00:	6883      	ldr	r3, [r0, #8]
 8007d02:	b92b      	cbnz	r3, 8007d10 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007d04:	68c0      	ldr	r0, [r0, #12]
 8007d06:	f000 0001 	and.w	r0, r0, #1
 8007d0a:	4770      	bx	lr
 8007d0c:	4618      	mov	r0, r3
 8007d0e:	4770      	bx	lr
 8007d10:	2001      	movs	r0, #1
    }
 8007d12:	4770      	bx	lr

08007d14 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007d14:	b510      	push	{r4, lr}
 8007d16:	2110      	movs	r1, #16
 8007d18:	4604      	mov	r4, r0
 8007d1a:	f021 ffe0 	bl	8029cde <_ZdlPvj>
 8007d1e:	4620      	mov	r0, r4
 8007d20:	bd10      	pop	{r4, pc}
	...

08007d24 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007d24:	b510      	push	{r4, lr}
 8007d26:	4b03      	ldr	r3, [pc, #12]	; (8007d34 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007d28:	6003      	str	r3, [r0, #0]
 8007d2a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007d2c:	f00c fa5e 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007d30:	4620      	mov	r0, r4
 8007d32:	bd10      	pop	{r4, pc}
 8007d34:	0802e208 	.word	0x0802e208

08007d38 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007d38:	b507      	push	{r0, r1, r2, lr}
 8007d3a:	4b07      	ldr	r3, [pc, #28]	; (8007d58 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007d3c:	6003      	str	r3, [r0, #0]
 8007d3e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007d40:	f00c fa54 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007d44:	9801      	ldr	r0, [sp, #4]
 8007d46:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8007d4a:	f021 ffc8 	bl	8029cde <_ZdlPvj>
 8007d4e:	9801      	ldr	r0, [sp, #4]
 8007d50:	b003      	add	sp, #12
 8007d52:	f85d fb04 	ldr.w	pc, [sp], #4
 8007d56:	bf00      	nop
 8007d58:	0802e208 	.word	0x0802e208

08007d5c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007d5c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007d5e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8007d62:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8007d66:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007d68:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8007d6a:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007d6e:	d105      	bne.n	8007d7c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8007d70:	6803      	ldr	r3, [r0, #0]
 8007d72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007d74:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8007d76:	2300      	movs	r3, #0
 8007d78:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8007d7c:	bd10      	pop	{r4, pc}

08007d7e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8007d7e:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8007d82:	4288      	cmp	r0, r1
{
 8007d84:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007d86:	d105      	bne.n	8007d94 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007d88:	f00d ff32 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007d8c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007d90:	f7fc bd64 	b.w	800485c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007d94:	bd08      	pop	{r3, pc}
	...

08007d98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007d9c:	ed2d 8b0a 	vpush	{d8-d12}
 8007da0:	4604      	mov	r4, r0
 8007da2:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8007da4:	46a1      	mov	r9, r4
 8007da6:	2500      	movs	r5, #0
 8007da8:	f00f fba2 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 8007dac:	4ba9      	ldr	r3, [pc, #676]	; (8008054 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8007dae:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007db0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007db4:	2226      	movs	r2, #38	; 0x26
 8007db6:	4629      	mov	r1, r5
 8007db8:	4648      	mov	r0, r9
 8007dba:	f023 f87c 	bl	802aeb6 <memset>
 8007dbe:	4648      	mov	r0, r9
 8007dc0:	f7fb f966 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8007dc4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007dc8:	26ff      	movs	r6, #255	; 0xff
 8007dca:	4ba3      	ldr	r3, [pc, #652]	; (8008058 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8007dcc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007dce:	2226      	movs	r2, #38	; 0x26
 8007dd0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007dd4:	4629      	mov	r1, r5
 8007dd6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007dda:	4640      	mov	r0, r8
 8007ddc:	66a5      	str	r5, [r4, #104]	; 0x68
 8007dde:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007de2:	f023 f868 	bl	802aeb6 <memset>
 8007de6:	4640      	mov	r0, r8
 8007de8:	f7fb f952 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8007dec:	4b9b      	ldr	r3, [pc, #620]	; (800805c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8007dee:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007df0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007df4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007df8:	a90a      	add	r1, sp, #40	; 0x28
 8007dfa:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007dfe:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007e00:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007e04:	f00b f9eb 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007e08:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8007e0c:	4658      	mov	r0, fp
 8007e0e:	f7fb f951 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007e12:	4638      	mov	r0, r7
 8007e14:	f00a fea6 	bl	8012b64 <_ZN8touchgfx5GaugeC1Ev>
 8007e18:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8007e1c:	4618      	mov	r0, r3
 8007e1e:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007e22:	4e8f      	ldr	r6, [pc, #572]	; (8008060 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
        : TextArea()
 8007e24:	f7fb f946 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007e28:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8007e2c:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8007e30:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007e32:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8007e36:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8007e3a:	f7fb f93b 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007e3e:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007e42:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8007e46:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007e48:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007e4c:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007e50:	f7fb f930 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007e54:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8007e58:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8007e5c:	4618      	mov	r0, r3
 8007e5e:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8007e62:	ee0a 3a90 	vmov	s21, r3
 8007e66:	f7fb f925 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007e6a:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007e6e:	4618      	mov	r0, r3
 8007e70:	ee0b 3a10 	vmov	s22, r3
 8007e74:	f7fb f91e 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007e78:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007e7c:	4618      	mov	r0, r3
 8007e7e:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8007e82:	ee0b 3a90 	vmov	s23, r3
 8007e86:	f7fb f915 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007e8a:	4650      	mov	r0, sl
 8007e8c:	f00a f870 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 8007e90:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007e94:	4618      	mov	r0, r3
 8007e96:	9303      	str	r3, [sp, #12]
 8007e98:	f7fa fefa 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007e9c:	4b71      	ldr	r3, [pc, #452]	; (8008064 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007e9e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8007ea2:	3324      	adds	r3, #36	; 0x24
 8007ea4:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007ea8:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007eac:	4618      	mov	r0, r3
 8007eae:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007eb2:	ee08 3a10 	vmov	s16, r3
 8007eb6:	f7fb f8fd 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007eba:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007ebe:	4618      	mov	r0, r3
 8007ec0:	ee08 3a90 	vmov	s17, r3
 8007ec4:	f7fb f8f6 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8007ec8:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007ecc:	4618      	mov	r0, r3
 8007ece:	ee0c 3a10 	vmov	s24, r3
 8007ed2:	f00b fac5 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007ed6:	4a64      	ldr	r2, [pc, #400]	; (8008068 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8007ed8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007edc:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007ee0:	4a62      	ldr	r2, [pc, #392]	; (800806c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8007ee2:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8007ee6:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007eea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007eee:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007ef2:	f00c f971 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007ef6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007efa:	462a      	mov	r2, r5
 8007efc:	4648      	mov	r0, r9
 8007efe:	9300      	str	r3, [sp, #0]
 8007f00:	4629      	mov	r1, r5
 8007f02:	23f0      	movs	r3, #240	; 0xf0
 8007f04:	f7fb f8b0 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f08:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007f0a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007f0e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007f10:	4649      	mov	r1, r9
 8007f12:	4630      	mov	r0, r6
 8007f14:	f008 fbd4 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007f18:	462a      	mov	r2, r5
 8007f1a:	4640      	mov	r0, r8
 8007f1c:	4629      	mov	r1, r5
 8007f1e:	f7fb f896 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8007f22:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007f24:	4640      	mov	r0, r8
 8007f26:	a90a      	add	r1, sp, #40	; 0x28
 8007f28:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f2c:	f00b f957 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007f30:	4641      	mov	r1, r8
 8007f32:	4630      	mov	r0, r6
 8007f34:	f008 fbc4 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007f38:	223c      	movs	r2, #60	; 0x3c
 8007f3a:	211f      	movs	r1, #31
 8007f3c:	4658      	mov	r0, fp
 8007f3e:	f7fb f886 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8007f42:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 8007f46:	f04f 33ff 	mov.w	r3, #4294967295
 8007f4a:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007f4e:	4659      	mov	r1, fp
 8007f50:	4640      	mov	r0, r8
        linespace = space;
 8007f52:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007f56:	f00a facd 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007f5a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007f5e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007f62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007f66:	4b42      	ldr	r3, [pc, #264]	; (8008070 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007f68:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8007f6a:	a90a      	add	r1, sp, #40	; 0x28
 8007f6c:	2337      	movs	r3, #55	; 0x37
 8007f6e:	4658      	mov	r0, fp
 8007f70:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007f74:	f00a fd58 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007f78:	4659      	mov	r1, fp
 8007f7a:	4630      	mov	r0, r6
 8007f7c:	f008 fba0 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f80:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007f82:	4638      	mov	r0, r7
 8007f84:	a90a      	add	r1, sp, #40	; 0x28
 8007f86:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f8a:	f008 fb2b 	bl	80105e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007f8e:	236a      	movs	r3, #106	; 0x6a
 8007f90:	4638      	mov	r0, r7
 8007f92:	9300      	str	r3, [sp, #0]
 8007f94:	225e      	movs	r2, #94	; 0x5e
 8007f96:	23b8      	movs	r3, #184	; 0xb8
 8007f98:	211c      	movs	r1, #28
 8007f9a:	f7fb f865 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8007f9e:	225c      	movs	r2, #92	; 0x5c
 8007fa0:	4611      	mov	r1, r2
 8007fa2:	4638      	mov	r0, r7
 8007fa4:	f00a fe89 	bl	8012cba <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007fa8:	4638      	mov	r0, r7
 8007faa:	225a      	movs	r2, #90	; 0x5a
 8007fac:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007fb0:	f00a ff08 	bl	8012dc4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8007fb4:	462b      	mov	r3, r5
 8007fb6:	225a      	movs	r2, #90	; 0x5a
 8007fb8:	4638      	mov	r0, r7
 8007fba:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007fbe:	9500      	str	r5, [sp, #0]
 8007fc0:	f008 f9bd 	bl	801033e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8007fc4:	4638      	mov	r0, r7
 8007fc6:	4629      	mov	r1, r5
 8007fc8:	f00a fea6 	bl	8012d18 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007fcc:	2335      	movs	r3, #53	; 0x35
 8007fce:	2208      	movs	r2, #8
 8007fd0:	4638      	mov	r0, r7
 8007fd2:	2105      	movs	r1, #5
 8007fd4:	f00a fe5c 	bl	8012c90 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007fd8:	4638      	mov	r0, r7
 8007fda:	2101      	movs	r1, #1
 8007fdc:	f00a fdfa 	bl	8012bd4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007fe0:	4638      	mov	r0, r7
 8007fe2:	2101      	movs	r1, #1
 8007fe4:	f00a fdf9 	bl	8012bda <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007fe8:	4639      	mov	r1, r7
 8007fea:	4630      	mov	r0, r6
 8007fec:	f008 fb68 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007ff0:	230f      	movs	r3, #15
 8007ff2:	22e6      	movs	r2, #230	; 0xe6
 8007ff4:	ee19 0a10 	vmov	r0, s18
 8007ff8:	9300      	str	r3, [sp, #0]
 8007ffa:	4629      	mov	r1, r5
 8007ffc:	23f0      	movs	r3, #240	; 0xf0
 8007ffe:	f7fb f833 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8008002:	f04f 33ff 	mov.w	r3, #4294967295
 8008006:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 800800a:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 800800e:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8008012:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008016:	4f17      	ldr	r7, [pc, #92]	; (8008074 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8008018:	ee19 1a10 	vmov	r1, s18
 800801c:	4640      	mov	r0, r8
 800801e:	4798      	blx	r3
 8008020:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008024:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8008028:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800802c:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 800802e:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 8008032:	b92b      	cbnz	r3, 8008040 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a8>
 8008034:	4b10      	ldr	r3, [pc, #64]	; (8008078 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8008036:	4a11      	ldr	r2, [pc, #68]	; (800807c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8008038:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800803a:	4811      	ldr	r0, [pc, #68]	; (8008080 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 800803c:	f022 fd36 	bl	802aaac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008040:	f8df b044 	ldr.w	fp, [pc, #68]	; 8008088 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008044:	f8bb 3000 	ldrh.w	r3, [fp]
 8008048:	2b10      	cmp	r3, #16
 800804a:	d81f      	bhi.n	800808c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 800804c:	4b0d      	ldr	r3, [pc, #52]	; (8008084 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 800804e:	4a0b      	ldr	r2, [pc, #44]	; (800807c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8008050:	2161      	movs	r1, #97	; 0x61
 8008052:	e7f2      	b.n	800803a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
 8008054:	0802e208 	.word	0x0802e208
 8008058:	0802f000 	.word	0x0802f000
 800805c:	0802f1c8 	.word	0x0802f1c8
 8008060:	0802c6b0 	.word	0x0802c6b0
 8008064:	0802ed34 	.word	0x0802ed34
 8008068:	0802e1f0 	.word	0x0802e1f0
 800806c:	08007d7f 	.word	0x08007d7f
 8008070:	0802c6a0 	.word	0x0802c6a0
 8008074:	20012dfc 	.word	0x20012dfc
 8008078:	0802c4f0 	.word	0x0802c4f0
 800807c:	0802c5f2 	.word	0x0802c5f2
 8008080:	0802c56d 	.word	0x0802c56d
 8008084:	0802c5b4 	.word	0x0802c5b4
 8008088:	20012e00 	.word	0x20012e00
        return texts->getText(typedTextId);
 800808c:	4bde      	ldr	r3, [pc, #888]	; (8008408 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 800808e:	2110      	movs	r1, #16
 8008090:	6818      	ldr	r0, [r3, #0]
 8008092:	f000 ffbf 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8008096:	4add      	ldr	r2, [pc, #884]	; (800840c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8008098:	4603      	mov	r3, r0
 800809a:	210a      	movs	r1, #10
 800809c:	4648      	mov	r0, r9
 800809e:	f010 ff17 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80080a2:	4bdb      	ldr	r3, [pc, #876]	; (8008410 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        wc1 = value;
 80080a4:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 80080a8:	ee19 0a10 	vmov	r0, s18
 80080ac:	930a      	str	r3, [sp, #40]	; 0x28
 80080ae:	a90a      	add	r1, sp, #40	; 0x28
 80080b0:	2313      	movs	r3, #19
 80080b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80080b6:	f00a fcb7 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080ba:	ee19 1a10 	vmov	r1, s18
 80080be:	4630      	mov	r0, r6
 80080c0:	f008 fafe 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 80080c4:	210f      	movs	r1, #15
 80080c6:	22d7      	movs	r2, #215	; 0xd7
 80080c8:	ee19 0a90 	vmov	r0, s19
 80080cc:	9100      	str	r1, [sp, #0]
 80080ce:	23f0      	movs	r3, #240	; 0xf0
 80080d0:	4629      	mov	r1, r5
 80080d2:	f7fa ffc9 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80080d6:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 80080da:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 80080de:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80080e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80080e6:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 80080ea:	4640      	mov	r0, r8
 80080ec:	ee19 1a90 	vmov	r1, s19
 80080f0:	4798      	blx	r3
 80080f2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80080f6:	f504 7342 	add.w	r3, r4, #776	; 0x308
 80080fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80080fe:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8008100:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8008104:	2b00      	cmp	r3, #0
 8008106:	d095      	beq.n	8008034 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008108:	f8bb 3000 	ldrh.w	r3, [fp]
 800810c:	2b11      	cmp	r3, #17
 800810e:	d99d      	bls.n	800804c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8008110:	4abd      	ldr	r2, [pc, #756]	; (8008408 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8008112:	2111      	movs	r1, #17
 8008114:	6810      	ldr	r0, [r2, #0]
 8008116:	f000 ff7d 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 800811a:	4abc      	ldr	r2, [pc, #752]	; (800840c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 800811c:	4603      	mov	r3, r0
 800811e:	210a      	movs	r1, #10
 8008120:	4648      	mov	r0, r9
 8008122:	f010 fed5 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008126:	4bba      	ldr	r3, [pc, #744]	; (8008410 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8008128:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 800812c:	ee19 0a90 	vmov	r0, s19
 8008130:	930a      	str	r3, [sp, #40]	; 0x28
 8008132:	a90a      	add	r1, sp, #40	; 0x28
 8008134:	2314      	movs	r3, #20
 8008136:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800813a:	f00a fc75 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800813e:	ee19 1a90 	vmov	r1, s19
 8008142:	4630      	mov	r0, r6
 8008144:	f008 fabc 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8008148:	210f      	movs	r1, #15
 800814a:	22c8      	movs	r2, #200	; 0xc8
 800814c:	ee1a 0a10 	vmov	r0, s20
 8008150:	9100      	str	r1, [sp, #0]
 8008152:	23f0      	movs	r3, #240	; 0xf0
 8008154:	4629      	mov	r1, r5
 8008156:	f7fa ff87 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 800815a:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 800815e:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 8008162:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8008166:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800816a:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 800816e:	4640      	mov	r0, r8
 8008170:	ee1a 1a10 	vmov	r1, s20
 8008174:	4798      	blx	r3
 8008176:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800817a:	f504 7355 	add.w	r3, r4, #852	; 0x354
 800817e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008182:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8008184:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8008188:	2b00      	cmp	r3, #0
 800818a:	f43f af53 	beq.w	8008034 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800818e:	f8bb 3000 	ldrh.w	r3, [fp]
 8008192:	2b12      	cmp	r3, #18
 8008194:	f67f af5a 	bls.w	800804c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8008198:	4a9b      	ldr	r2, [pc, #620]	; (8008408 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
        : typedTextId(id)
 800819a:	4f9d      	ldr	r7, [pc, #628]	; (8008410 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        return texts->getText(typedTextId);
 800819c:	6810      	ldr	r0, [r2, #0]
 800819e:	2112      	movs	r1, #18
 80081a0:	f000 ff38 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 80081a4:	4a99      	ldr	r2, [pc, #612]	; (800840c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80081a6:	4603      	mov	r3, r0
 80081a8:	210a      	movs	r1, #10
 80081aa:	4648      	mov	r0, r9
 80081ac:	f010 fe90 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80081b0:	2315      	movs	r3, #21
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 80081b2:	ee1a 0a10 	vmov	r0, s20
 80081b6:	a90a      	add	r1, sp, #40	; 0x28
 80081b8:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 80081bc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80081c0:	970a      	str	r7, [sp, #40]	; 0x28
 80081c2:	f00a fc31 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081c6:	ee1a 1a10 	vmov	r1, s20
 80081ca:	4630      	mov	r0, r6
 80081cc:	f008 fa78 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 80081d0:	224c      	movs	r2, #76	; 0x4c
 80081d2:	ee1a 0a90 	vmov	r0, s21
 80081d6:	2171      	movs	r1, #113	; 0x71
 80081d8:	f7fa ff39 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80081dc:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80081e0:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 80081e4:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80081e8:	4640      	mov	r0, r8
        linespace = space;
 80081ea:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 80081ee:	f00a f981 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80081f2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80081f6:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80081fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80081fe:	2316      	movs	r3, #22
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8008200:	ee1a 0a90 	vmov	r0, s21
 8008204:	a90a      	add	r1, sp, #40	; 0x28
 8008206:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800820a:	970a      	str	r7, [sp, #40]	; 0x28
 800820c:	f00a fc0c 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008210:	ee1a 1a90 	vmov	r1, s21
 8008214:	4630      	mov	r0, r6
 8008216:	f008 fa53 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 800821a:	22b9      	movs	r2, #185	; 0xb9
 800821c:	ee1b 0a10 	vmov	r0, s22
 8008220:	4629      	mov	r1, r5
 8008222:	f7fa ff14 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8008226:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800822a:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 800822e:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 8008232:	4640      	mov	r0, r8
        linespace = space;
 8008234:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8008238:	f00a f95c 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800823c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008240:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8008244:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008248:	2317      	movs	r3, #23
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 800824a:	ee1b 0a10 	vmov	r0, s22
 800824e:	a90a      	add	r1, sp, #40	; 0x28
 8008250:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008254:	970a      	str	r7, [sp, #40]	; 0x28
 8008256:	f00a fbe7 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800825a:	ee1b 1a10 	vmov	r1, s22
 800825e:	4630      	mov	r0, r6
 8008260:	f008 fa2e 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8008264:	22b9      	movs	r2, #185	; 0xb9
 8008266:	ee1b 0a90 	vmov	r0, s23
 800826a:	21d9      	movs	r1, #217	; 0xd9
 800826c:	f7fa feef 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8008270:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8008274:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8008278:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 800827c:	4640      	mov	r0, r8
        linespace = space;
 800827e:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8008282:	f00a f937 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008286:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800828a:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 800828e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008292:	2318      	movs	r3, #24
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8008294:	ee1b 0a90 	vmov	r0, s23
 8008298:	a90a      	add	r1, sp, #40	; 0x28
 800829a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800829e:	970a      	str	r7, [sp, #40]	; 0x28
 80082a0:	f00a fbc2 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80082a4:	ee1b 1a90 	vmov	r1, s23
 80082a8:	4630      	mov	r0, r6
 80082aa:	f008 fa09 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80082ae:	230a      	movs	r3, #10
 80082b0:	9300      	str	r3, [sp, #0]
 80082b2:	2232      	movs	r2, #50	; 0x32
 80082b4:	23f0      	movs	r3, #240	; 0xf0
 80082b6:	4629      	mov	r1, r5
 80082b8:	4650      	mov	r0, sl
 80082ba:	f7fa fed5 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80082be:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80082c2:	22a0      	movs	r2, #160	; 0xa0
 80082c4:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80082c8:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 80082cc:	9b03      	ldr	r3, [sp, #12]
 80082ce:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 80082d2:	4611      	mov	r1, r2
 80082d4:	4650      	mov	r0, sl
 80082d6:	f009 ff61 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80082da:	22a0      	movs	r2, #160	; 0xa0
 80082dc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80082e0:	4650      	mov	r0, sl
 80082e2:	f009 ff66 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80082e6:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80082ea:	2b20      	cmp	r3, #32
 80082ec:	d005      	beq.n	80082fa <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x562>
        lineWidthQ5 = widthQ5;
 80082ee:	2320      	movs	r3, #32
 80082f0:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80082f4:	4650      	mov	r0, sl
 80082f6:	f009 fe5b 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80082fa:	4650      	mov	r0, sl
 80082fc:	2101      	movs	r1, #1
 80082fe:	f009 ff63 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008302:	4651      	mov	r1, sl
 8008304:	4630      	mov	r0, r6
 8008306:	f008 f9db 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800830a:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 800830e:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8008310:	ee18 0a10 	vmov	r0, s16
 8008314:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008316:	f04f 0900 	mov.w	r9, #0
 800831a:	2145      	movs	r1, #69	; 0x45
 800831c:	f7fa fe97 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008320:	ee18 1a10 	vmov	r1, s16
 8008324:	4628      	mov	r0, r5
        color = newColor;
 8008326:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 800832a:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800832e:	f00a f8e1 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008332:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008336:	ee18 3a10 	vmov	r3, s16
 800833a:	333c      	adds	r3, #60	; 0x3c
 800833c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008340:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8008410 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>
 8008344:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8008348:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 800834a:	ee18 0a10 	vmov	r0, s16
 800834e:	a90a      	add	r1, sp, #40	; 0x28
 8008350:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008354:	f00a fb68 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008358:	ee18 1a10 	vmov	r1, s16
 800835c:	4630      	mov	r0, r6
 800835e:	f008 f9af 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008362:	ee18 0a90 	vmov	r0, s17
 8008366:	220c      	movs	r2, #12
 8008368:	2136      	movs	r1, #54	; 0x36
 800836a:	f7fa fe70 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800836e:	ee18 1a90 	vmov	r1, s17
 8008372:	4628      	mov	r0, r5
        color = newColor;
 8008374:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8008378:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 800837c:	f00a f8ba 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008380:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008384:	ee18 3a90 	vmov	r3, s17
 8008388:	333c      	adds	r3, #60	; 0x3c
 800838a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800838e:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8008390:	ee18 0a90 	vmov	r0, s17
 8008394:	a90a      	add	r1, sp, #40	; 0x28
 8008396:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800839a:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800839e:	f00a fb43 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083a2:	ee18 1a90 	vmov	r1, s17
 80083a6:	4630      	mov	r0, r6
 80083a8:	f008 f98a 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 80083ac:	ee1c 0a10 	vmov	r0, s24
 80083b0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80083b4:	2121      	movs	r1, #33	; 0x21
 80083b6:	f7fa fe4a 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80083ba:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80083bc:	aa0a      	add	r2, sp, #40	; 0x28
 80083be:	a909      	add	r1, sp, #36	; 0x24
 80083c0:	ee1c 0a10 	vmov	r0, s24
 80083c4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80083c8:	2302      	movs	r3, #2
 80083ca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80083ce:	f00a fd10 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80083d2:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 80083d4:	ee1c 0a10 	vmov	r0, s24
 80083d8:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 80083dc:	f7fa fe8c 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80083e0:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 80083e4:	3304      	adds	r3, #4
 80083e6:	4630      	mov	r0, r6
 80083e8:	ee1c 1a10 	vmov	r1, s24
        color = col;
 80083ec:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 80083f0:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 80083f4:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 80083f8:	f008 f962 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80083fc:	4620      	mov	r0, r4
 80083fe:	b00d      	add	sp, #52	; 0x34
 8008400:	ecbd 8b0a 	vpop	{d8-d12}
 8008404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008408:	20012e08 	.word	0x20012e08
 800840c:	0802c62a 	.word	0x0802c62a
 8008410:	0802c6a0 	.word	0x0802c6a0

08008414 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008414:	4770      	bx	lr

08008416 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008416:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008418:	68c2      	ldr	r2, [r0, #12]
 800841a:	6844      	ldr	r4, [r0, #4]
 800841c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800841e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008420:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008424:	07d2      	lsls	r2, r2, #31
 8008426:	bf48      	it	mi
 8008428:	5962      	ldrmi	r2, [r4, r5]
 800842a:	689b      	ldr	r3, [r3, #8]
    }
 800842c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800842e:	bf48      	it	mi
 8008430:	58d3      	ldrmi	r3, [r2, r3]
 8008432:	4718      	bx	r3

08008434 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008434:	6843      	ldr	r3, [r0, #4]
 8008436:	b12b      	cbz	r3, 8008444 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008438:	6883      	ldr	r3, [r0, #8]
 800843a:	b92b      	cbnz	r3, 8008448 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800843c:	68c0      	ldr	r0, [r0, #12]
 800843e:	f000 0001 	and.w	r0, r0, #1
 8008442:	4770      	bx	lr
 8008444:	4618      	mov	r0, r3
 8008446:	4770      	bx	lr
 8008448:	2001      	movs	r0, #1
    }
 800844a:	4770      	bx	lr

0800844c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800844c:	b510      	push	{r4, lr}
 800844e:	2110      	movs	r1, #16
 8008450:	4604      	mov	r4, r0
 8008452:	f021 fc44 	bl	8029cde <_ZdlPvj>
 8008456:	4620      	mov	r0, r4
 8008458:	bd10      	pop	{r4, pc}

0800845a <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800845a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800845e:	f000 bf91 	b.w	8009384 <_ZN17Gauge_with_Values10initializeEv>

08008462 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008462:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8008466:	4288      	cmp	r0, r1
{
 8008468:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800846a:	d105      	bne.n	8008478 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800846c:	f00d fbc0 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8008470:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008474:	f7fc b9f2 	b.w	800485c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008478:	bd08      	pop	{r3, pc}
	...

0800847c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800847c:	b510      	push	{r4, lr}
 800847e:	4b07      	ldr	r3, [pc, #28]	; (800849c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8008480:	6003      	str	r3, [r0, #0]
 8008482:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008484:	f00b feb2 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8008488:	4b05      	ldr	r3, [pc, #20]	; (80084a0 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 800848a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800848e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8008492:	f7fd fc79 	bl	8005d88 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8008496:	4620      	mov	r0, r4
 8008498:	bd10      	pop	{r4, pc}
 800849a:	bf00      	nop
 800849c:	0802e258 	.word	0x0802e258
 80084a0:	0802e68c 	.word	0x0802e68c

080084a4 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80084a4:	b510      	push	{r4, lr}
 80084a6:	4604      	mov	r4, r0
}
 80084a8:	f7ff ffe8 	bl	800847c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80084ac:	4620      	mov	r0, r4
 80084ae:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80084b2:	f021 fc14 	bl	8029cde <_ZdlPvj>
 80084b6:	4620      	mov	r0, r4
 80084b8:	bd10      	pop	{r4, pc}
	...

080084bc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 80084bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80084c0:	ed2d 8b04 	vpush	{d8-d9}
 80084c4:	4604      	mov	r4, r0
 80084c6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 80084c8:	46a3      	mov	fp, r4
 80084ca:	2500      	movs	r5, #0
 80084cc:	f00f f810 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 80084d0:	4bae      	ldr	r3, [pc, #696]	; (800878c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 80084d2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80084d4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80084d8:	2226      	movs	r2, #38	; 0x26
 80084da:	4629      	mov	r1, r5
 80084dc:	4658      	mov	r0, fp
 80084de:	f022 fcea 	bl	802aeb6 <memset>
 80084e2:	4658      	mov	r0, fp
 80084e4:	f7fa fdd4 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 80084e8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80084ec:	26ff      	movs	r6, #255	; 0xff
 80084ee:	4ba8      	ldr	r3, [pc, #672]	; (8008790 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 80084f0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80084f2:	2226      	movs	r2, #38	; 0x26
 80084f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80084f8:	4629      	mov	r1, r5
 80084fa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80084fe:	66a5      	str	r5, [r4, #104]	; 0x68
 8008500:	4650      	mov	r0, sl
 8008502:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008506:	f022 fcd6 	bl	802aeb6 <memset>
 800850a:	4650      	mov	r0, sl
 800850c:	f7fa fdc0 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8008510:	4ba0      	ldr	r3, [pc, #640]	; (8008794 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 8008512:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008514:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008518:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800851c:	a90a      	add	r1, sp, #40	; 0x28
 800851e:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008522:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008526:	4650      	mov	r0, sl
 8008528:	f00a fe59 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800852c:	4638      	mov	r0, r7
 800852e:	f009 fd1f 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 8008532:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008536:	4618      	mov	r0, r3
 8008538:	9303      	str	r3, [sp, #12]
 800853a:	f7fa fba9 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800853e:	4b96      	ldr	r3, [pc, #600]	; (8008798 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 8008540:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8008544:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8008548:	3324      	adds	r3, #36	; 0x24
 800854a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800854e:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8008552:	4648      	mov	r0, r9
 8008554:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8008558:	f7fa fdac 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 800855c:	4640      	mov	r0, r8
 800855e:	f7fa fda9 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8008562:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8008566:	4618      	mov	r0, r3
 8008568:	ee08 3a10 	vmov	s16, r3
 800856c:	f7fa fda2 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 8008570:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8008574:	4618      	mov	r0, r3
 8008576:	ee08 3a90 	vmov	s17, r3
 800857a:	f00a ff71 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800857e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8008582:	4618      	mov	r0, r3
 8008584:	ee09 3a10 	vmov	s18, r3
 8008588:	f000 fef2 	bl	8009370 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800858c:	4a83      	ldr	r2, [pc, #524]	; (800879c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 800858e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008592:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8008596:	4a82      	ldr	r2, [pc, #520]	; (80087a0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008598:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800859c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80085a0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80085a4:	f00b fe18 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80085a8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80085ac:	462a      	mov	r2, r5
 80085ae:	9300      	str	r3, [sp, #0]
 80085b0:	4629      	mov	r1, r5
 80085b2:	23f0      	movs	r3, #240	; 0xf0
 80085b4:	4658      	mov	r0, fp
 80085b6:	f7fa fd57 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80085ba:	1d26      	adds	r6, r4, #4
        color = newColor;
 80085bc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80085c0:	66a3      	str	r3, [r4, #104]	; 0x68
 80085c2:	4659      	mov	r1, fp
 80085c4:	4630      	mov	r0, r6
 80085c6:	f008 f87b 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80085ca:	462a      	mov	r2, r5
 80085cc:	4629      	mov	r1, r5
 80085ce:	4650      	mov	r0, sl
 80085d0:	f7fa fd3d 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80085d4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80085d6:	a90a      	add	r1, sp, #40	; 0x28
 80085d8:	4650      	mov	r0, sl
 80085da:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80085de:	f00a fdfe 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80085e2:	4651      	mov	r1, sl
 80085e4:	4630      	mov	r0, r6
 80085e6:	f008 f86b 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80085ea:	230a      	movs	r3, #10
 80085ec:	9300      	str	r3, [sp, #0]
 80085ee:	2232      	movs	r2, #50	; 0x32
 80085f0:	23f0      	movs	r3, #240	; 0xf0
 80085f2:	4629      	mov	r1, r5
 80085f4:	4638      	mov	r0, r7
 80085f6:	f7fa fd37 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 80085fa:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80085fe:	22a0      	movs	r2, #160	; 0xa0
 8008600:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008604:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8008608:	9b03      	ldr	r3, [sp, #12]
 800860a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800860e:	4611      	mov	r1, r2
 8008610:	4638      	mov	r0, r7
 8008612:	f009 fdc3 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008616:	22a0      	movs	r2, #160	; 0xa0
 8008618:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800861c:	4638      	mov	r0, r7
 800861e:	f009 fdc8 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008622:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8008626:	2b20      	cmp	r3, #32
 8008628:	d005      	beq.n	8008636 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 800862a:	2320      	movs	r3, #32
 800862c:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8008630:	4638      	mov	r0, r7
 8008632:	f009 fcbd 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008636:	4638      	mov	r0, r7
 8008638:	2101      	movs	r1, #1
 800863a:	f009 fdc5 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800863e:	4639      	mov	r1, r7
 8008640:	4630      	mov	r0, r6
 8008642:	ad04      	add	r5, sp, #16
 8008644:	f008 f83c 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008648:	f04f 3aff 	mov.w	sl, #4294967295
        linespace = space;
 800864c:	2700      	movs	r7, #0
    textArea2.setXY(69, 35);
 800864e:	2223      	movs	r2, #35	; 0x23
 8008650:	4648      	mov	r0, r9
 8008652:	2145      	movs	r1, #69	; 0x45
 8008654:	f7fa fcfb 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008658:	4649      	mov	r1, r9
 800865a:	4628      	mov	r0, r5
        color = newColor;
 800865c:	f8c4 a14c 	str.w	sl, [r4, #332]	; 0x14c
        linespace = space;
 8008660:	f8a4 7150 	strh.w	r7, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8008664:	f009 ff46 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008668:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800866c:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8008670:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008674:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80087a4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8008678:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800867c:	2347      	movs	r3, #71	; 0x47
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 800867e:	a90a      	add	r1, sp, #40	; 0x28
 8008680:	4648      	mov	r0, r9
 8008682:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008686:	f00a f9cf 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800868a:	4649      	mov	r1, r9
 800868c:	4630      	mov	r0, r6
 800868e:	f008 f817 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8008692:	223c      	movs	r2, #60	; 0x3c
 8008694:	4640      	mov	r0, r8
 8008696:	211f      	movs	r1, #31
 8008698:	f7fa fcd9 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800869c:	4641      	mov	r1, r8
 800869e:	4628      	mov	r0, r5
        color = newColor;
 80086a0:	f8c4 a194 	str.w	sl, [r4, #404]	; 0x194
        linespace = space;
 80086a4:	f8a4 7198 	strh.w	r7, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80086a8:	f009 ff24 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80086ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80086b0:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80086b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80086b8:	f04f 0936 	mov.w	r9, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80086bc:	a90a      	add	r1, sp, #40	; 0x28
 80086be:	4640      	mov	r0, r8
 80086c0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80086c4:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80086c8:	f00a f9ae 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80086cc:	4641      	mov	r1, r8
 80086ce:	4630      	mov	r0, r6
 80086d0:	f007 fff6 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80086d4:	ee18 0a10 	vmov	r0, s16
 80086d8:	220c      	movs	r2, #12
 80086da:	4649      	mov	r1, r9
 80086dc:	f7fa fcb7 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 80086e0:	ee18 1a10 	vmov	r1, s16
 80086e4:	4628      	mov	r0, r5
        color = newColor;
 80086e6:	f8c4 a1dc 	str.w	sl, [r4, #476]	; 0x1dc
        linespace = space;
 80086ea:	f8a4 71e0 	strh.w	r7, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80086ee:	f009 ff01 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80086f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80086f6:	ee18 3a10 	vmov	r3, s16
 80086fa:	333c      	adds	r3, #60	; 0x3c
 80086fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008700:	2346      	movs	r3, #70	; 0x46
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8008702:	ee18 0a10 	vmov	r0, s16
 8008706:	a90a      	add	r1, sp, #40	; 0x28
 8008708:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800870c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8008710:	f00a f98a 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008714:	ee18 1a10 	vmov	r1, s16
 8008718:	4630      	mov	r0, r6
 800871a:	f007 ffd1 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800871e:	ee18 0a90 	vmov	r0, s17
 8008722:	f240 1201 	movw	r2, #257	; 0x101
 8008726:	2121      	movs	r1, #33	; 0x21
 8008728:	f7fa fc91 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 800872c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800872e:	aa0a      	add	r2, sp, #40	; 0x28
 8008730:	a909      	add	r1, sp, #36	; 0x24
 8008732:	ee18 0a90 	vmov	r0, s17
 8008736:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800873a:	2302      	movs	r3, #2
 800873c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008740:	f00a fb57 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008744:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 8008746:	ee18 0a90 	vmov	r0, s17
 800874a:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800874e:	f7fa fcd3 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8008752:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8008756:	3314      	adds	r3, #20
 8008758:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 800875c:	ee18 1a90 	vmov	r1, s17
 8008760:	4630      	mov	r0, r6
        colorPressed = col;
 8008762:	e9c4 aa8c 	strd	sl, sl, [r4, #560]	; 0x230
 8008766:	f007 ffab 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800876a:	ee19 0a10 	vmov	r0, s18
 800876e:	224e      	movs	r2, #78	; 0x4e
 8008770:	4639      	mov	r1, r7
 8008772:	f7fa fc6c 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8008776:	4630      	mov	r0, r6
 8008778:	ee19 1a10 	vmov	r1, s18
 800877c:	f007 ffa0 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008780:	4620      	mov	r0, r4
 8008782:	b00d      	add	sp, #52	; 0x34
 8008784:	ecbd 8b04 	vpop	{d8-d9}
 8008788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800878c:	0802e258 	.word	0x0802e258
 8008790:	0802f000 	.word	0x0802f000
 8008794:	0802f1c8 	.word	0x0802f1c8
 8008798:	0802ed34 	.word	0x0802ed34
 800879c:	0802e240 	.word	0x0802e240
 80087a0:	08008463 	.word	0x08008463
 80087a4:	0802c6a0 	.word	0x0802c6a0

080087a8 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80087a8:	4770      	bx	lr

080087aa <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80087aa:	4770      	bx	lr

080087ac <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80087ac:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80087ae:	68c2      	ldr	r2, [r0, #12]
 80087b0:	6844      	ldr	r4, [r0, #4]
 80087b2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80087b4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80087b6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80087ba:	07d2      	lsls	r2, r2, #31
 80087bc:	bf48      	it	mi
 80087be:	5962      	ldrmi	r2, [r4, r5]
 80087c0:	689b      	ldr	r3, [r3, #8]
    }
 80087c2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80087c4:	bf48      	it	mi
 80087c6:	58d3      	ldrmi	r3, [r2, r3]
 80087c8:	4718      	bx	r3

080087ca <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80087ca:	6843      	ldr	r3, [r0, #4]
 80087cc:	b12b      	cbz	r3, 80087da <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80087ce:	6883      	ldr	r3, [r0, #8]
 80087d0:	b92b      	cbnz	r3, 80087de <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80087d2:	68c0      	ldr	r0, [r0, #12]
 80087d4:	f000 0001 	and.w	r0, r0, #1
 80087d8:	4770      	bx	lr
 80087da:	4618      	mov	r0, r3
 80087dc:	4770      	bx	lr
 80087de:	2001      	movs	r0, #1
    }
 80087e0:	4770      	bx	lr

080087e2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80087e2:	b510      	push	{r4, lr}
 80087e4:	2110      	movs	r1, #16
 80087e6:	4604      	mov	r4, r0
 80087e8:	f021 fa79 	bl	8029cde <_ZdlPvj>
 80087ec:	4620      	mov	r0, r4
 80087ee:	bd10      	pop	{r4, pc}

080087f0 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80087f0:	b510      	push	{r4, lr}
 80087f2:	4b03      	ldr	r3, [pc, #12]	; (8008800 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80087f4:	6003      	str	r3, [r0, #0]
 80087f6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80087f8:	f00b fcf8 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80087fc:	4620      	mov	r0, r4
 80087fe:	bd10      	pop	{r4, pc}
 8008800:	0802e2a4 	.word	0x0802e2a4

08008804 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8008804:	b507      	push	{r0, r1, r2, lr}
 8008806:	4b07      	ldr	r3, [pc, #28]	; (8008824 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8008808:	6003      	str	r3, [r0, #0]
 800880a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800880c:	f00b fcee 	bl	80141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008810:	9801      	ldr	r0, [sp, #4]
 8008812:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008816:	f021 fa62 	bl	8029cde <_ZdlPvj>
 800881a:	9801      	ldr	r0, [sp, #4]
 800881c:	b003      	add	sp, #12
 800881e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008822:	bf00      	nop
 8008824:	0802e2a4 	.word	0x0802e2a4

08008828 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008828:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 800882c:	4288      	cmp	r0, r1
{
 800882e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008830:	d105      	bne.n	800883e <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008832:	f00d f9dd 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8008836:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 800883a:	f7fb bfdf 	b.w	80047fc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800883e:	bd08      	pop	{r3, pc}

08008840 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008844:	ed2d 8b04 	vpush	{d8-d9}
 8008848:	4604      	mov	r4, r0
 800884a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 800884c:	46a3      	mov	fp, r4
 800884e:	2500      	movs	r5, #0
 8008850:	f00e fe4e 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 8008854:	4bd1      	ldr	r3, [pc, #836]	; (8008b9c <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8008856:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008858:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800885c:	2226      	movs	r2, #38	; 0x26
 800885e:	4629      	mov	r1, r5
 8008860:	4658      	mov	r0, fp
 8008862:	f022 fb28 	bl	802aeb6 <memset>
 8008866:	4658      	mov	r0, fp
 8008868:	f7fa fc12 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 800886c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008870:	26ff      	movs	r6, #255	; 0xff
 8008872:	4bcb      	ldr	r3, [pc, #812]	; (8008ba0 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8008874:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008876:	2226      	movs	r2, #38	; 0x26
 8008878:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800887c:	4629      	mov	r1, r5
 800887e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008882:	4650      	mov	r0, sl
 8008884:	66a5      	str	r5, [r4, #104]	; 0x68
 8008886:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800888a:	f022 fb14 	bl	802aeb6 <memset>
 800888e:	4650      	mov	r0, sl
 8008890:	f7fa fbfe 	bl	8003090 <_ZN8touchgfx6WidgetC1Ev>
 8008894:	4bc3      	ldr	r3, [pc, #780]	; (8008ba4 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8008896:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008898:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800889c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80088a0:	a90a      	add	r1, sp, #40	; 0x28
 80088a2:	4650      	mov	r0, sl
 80088a4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80088a8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80088ac:	f00a fc97 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80088b0:	4648      	mov	r0, r9
 80088b2:	f7fa fbff 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 80088b6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80088ba:	4bbb      	ldr	r3, [pc, #748]	; (8008ba8 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80088bc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80088c0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80088c4:	4638      	mov	r0, r7
 80088c6:	f009 fb53 	bl	8011f70 <_ZN8touchgfx4LineC1Ev>
 80088ca:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80088ce:	4618      	mov	r0, r3
 80088d0:	9303      	str	r3, [sp, #12]
 80088d2:	f7fa f9dd 	bl	8002c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80088d6:	4bb5      	ldr	r3, [pc, #724]	; (8008bac <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80088d8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80088dc:	3324      	adds	r3, #36	; 0x24
 80088de:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80088e2:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 80088e6:	4618      	mov	r0, r3
 80088e8:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80088ec:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80088f0:	ee09 3a10 	vmov	s18, r3
 80088f4:	f00a fdb4 	bl	8013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80088f8:	4640      	mov	r0, r8
 80088fa:	f7fa fbdb 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 80088fe:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8008902:	4618      	mov	r0, r3
 8008904:	ee08 3a10 	vmov	s16, r3
 8008908:	f7fa fbd4 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
 800890c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008910:	4618      	mov	r0, r3
 8008912:	ee08 3a90 	vmov	s17, r3
 8008916:	f7fa fbcd 	bl	80030b4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800891a:	4aa5      	ldr	r2, [pc, #660]	; (8008bb0 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 800891c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008920:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8008924:	4aa3      	ldr	r2, [pc, #652]	; (8008bb4 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008926:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800892a:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 800892e:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8008932:	f00b fc51 	bl	80141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008936:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800893a:	462a      	mov	r2, r5
 800893c:	4658      	mov	r0, fp
 800893e:	9300      	str	r3, [sp, #0]
 8008940:	4629      	mov	r1, r5
 8008942:	23f0      	movs	r3, #240	; 0xf0
 8008944:	f7fa fb90 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008948:	1d26      	adds	r6, r4, #4
        color = newColor;
 800894a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800894e:	66a3      	str	r3, [r4, #104]	; 0x68
 8008950:	4659      	mov	r1, fp
 8008952:	4630      	mov	r0, r6
 8008954:	f007 feb4 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008958:	462a      	mov	r2, r5
 800895a:	4650      	mov	r0, sl
 800895c:	4629      	mov	r1, r5
 800895e:	f7fa fb76 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8008962:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008964:	4650      	mov	r0, sl
 8008966:	a90a      	add	r1, sp, #40	; 0x28
 8008968:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800896c:	f00a fc37 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008970:	4651      	mov	r1, sl
 8008972:	4630      	mov	r0, r6
 8008974:	f007 fea4 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008978:	f44f 729a 	mov.w	r2, #308	; 0x134
 800897c:	2156      	movs	r1, #86	; 0x56
 800897e:	4648      	mov	r0, r9
 8008980:	f7fa fb65 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8008984:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008988:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800898c:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8008990:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8008994:	4650      	mov	r0, sl
 8008996:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800899a:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800899e:	4649      	mov	r1, r9
 80089a0:	4798      	blx	r3
 80089a2:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80089a6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80089aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80089ae:	4b82      	ldr	r3, [pc, #520]	; (8008bb8 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 80089b0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80089b2:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80089b6:	b92b      	cbnz	r3, 80089c4 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 80089b8:	4b80      	ldr	r3, [pc, #512]	; (8008bbc <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80089ba:	4a81      	ldr	r2, [pc, #516]	; (8008bc0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80089bc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80089be:	4881      	ldr	r0, [pc, #516]	; (8008bc4 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80089c0:	f022 f874 	bl	802aaac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80089c4:	4b80      	ldr	r3, [pc, #512]	; (8008bc8 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80089c6:	881b      	ldrh	r3, [r3, #0]
 80089c8:	2b22      	cmp	r3, #34	; 0x22
 80089ca:	d803      	bhi.n	80089d4 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80089cc:	4b7f      	ldr	r3, [pc, #508]	; (8008bcc <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80089ce:	4a7c      	ldr	r2, [pc, #496]	; (8008bc0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80089d0:	2161      	movs	r1, #97	; 0x61
 80089d2:	e7f4      	b.n	80089be <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80089d4:	4b7e      	ldr	r3, [pc, #504]	; (8008bd0 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80089d6:	2122      	movs	r1, #34	; 0x22
 80089d8:	6818      	ldr	r0, [r3, #0]
 80089da:	f000 fb1b 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 80089de:	4a7d      	ldr	r2, [pc, #500]	; (8008bd4 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80089e0:	4603      	mov	r3, r0
 80089e2:	2104      	movs	r1, #4
 80089e4:	4650      	mov	r0, sl
 80089e6:	f010 fa73 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80089ea:	4648      	mov	r0, r9
        wc1 = value;
 80089ec:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80089f0:	f009 fffa 	bl	80129e8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80089f4:	4b78      	ldr	r3, [pc, #480]	; (8008bd8 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 80089f6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 80089f8:	a90a      	add	r1, sp, #40	; 0x28
 80089fa:	2323      	movs	r3, #35	; 0x23
 80089fc:	4648      	mov	r0, r9
 80089fe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008a02:	f00a f811 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008a06:	4649      	mov	r1, r9
 8008a08:	4630      	mov	r0, r6
 8008a0a:	f007 fe59 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008a0e:	230a      	movs	r3, #10
 8008a10:	9300      	str	r3, [sp, #0]
 8008a12:	2232      	movs	r2, #50	; 0x32
 8008a14:	23f0      	movs	r3, #240	; 0xf0
 8008a16:	4629      	mov	r1, r5
 8008a18:	4638      	mov	r0, r7
 8008a1a:	f7fa fb25 	bl	8003068 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008a1e:	9b03      	ldr	r3, [sp, #12]
 8008a20:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008a24:	22a0      	movs	r2, #160	; 0xa0
 8008a26:	4611      	mov	r1, r2
 8008a28:	4638      	mov	r0, r7
 8008a2a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008a2e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8008a32:	f009 fbb3 	bl	801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008a36:	22a0      	movs	r2, #160	; 0xa0
 8008a38:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008a3c:	4638      	mov	r0, r7
 8008a3e:	f009 fbb8 	bl	80121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008a42:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8008a46:	2b20      	cmp	r3, #32
 8008a48:	d005      	beq.n	8008a56 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8008a4a:	2320      	movs	r3, #32
 8008a4c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008a50:	4638      	mov	r0, r7
 8008a52:	f009 faad 	bl	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008a56:	4638      	mov	r0, r7
 8008a58:	2101      	movs	r1, #1
 8008a5a:	f009 fbb5 	bl	80121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008a5e:	4639      	mov	r1, r7
 8008a60:	4630      	mov	r0, r6
 8008a62:	f007 fe2d 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8008a66:	ee19 0a10 	vmov	r0, s18
 8008a6a:	22f0      	movs	r2, #240	; 0xf0
 8008a6c:	2121      	movs	r1, #33	; 0x21
 8008a6e:	f7fa faee 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8008a72:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008a74:	aa0a      	add	r2, sp, #40	; 0x28
 8008a76:	a909      	add	r1, sp, #36	; 0x24
 8008a78:	ee19 0a10 	vmov	r0, s18
 8008a7c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008a80:	2302      	movs	r3, #2
 8008a82:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008a86:	f00a f9b4 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008a8a:	2352      	movs	r3, #82	; 0x52
        updateTextPosition();
 8008a8c:	ee19 0a10 	vmov	r0, s18
 8008a90:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8008a94:	f7fa fb30 	bl	80030f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008a98:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8008a9c:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8008aa0:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8008aa4:	ee19 1a10 	vmov	r1, s18
 8008aa8:	4630      	mov	r0, r6
        colorPressed = col;
 8008aaa:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8008aae:	ad04      	add	r5, sp, #16
 8008ab0:	f007 fe06 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8008ab4:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8008ab8:	225b      	movs	r2, #91	; 0x5b
 8008aba:	4640      	mov	r0, r8
 8008abc:	2105      	movs	r1, #5
 8008abe:	f7fa fac6 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008ac2:	4641      	mov	r1, r8
 8008ac4:	4628      	mov	r0, r5
        color = newColor;
 8008ac6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8008aca:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8008ace:	f009 fd11 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008ad2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008ad6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8008ada:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008ade:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8008bd8 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8008ae2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008ae6:	2353      	movs	r3, #83	; 0x53
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8008ae8:	a90a      	add	r1, sp, #40	; 0x28
 8008aea:	4640      	mov	r0, r8
 8008aec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008af0:	f009 ff9a 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008af4:	4641      	mov	r1, r8
 8008af6:	4630      	mov	r0, r6
 8008af8:	f007 fde2 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8008afc:	ee18 0a10 	vmov	r0, s16
 8008b00:	2223      	movs	r2, #35	; 0x23
 8008b02:	2145      	movs	r1, #69	; 0x45
 8008b04:	f7fa faa3 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8008b08:	ee18 1a10 	vmov	r1, s16
 8008b0c:	4628      	mov	r0, r5
        color = newColor;
 8008b0e:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8008b12:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8008b16:	f009 fced 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008b1a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008b1e:	ee18 3a10 	vmov	r3, s16
 8008b22:	333c      	adds	r3, #60	; 0x3c
 8008b24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008b28:	2355      	movs	r3, #85	; 0x55
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008b2a:	ee18 0a10 	vmov	r0, s16
 8008b2e:	a90a      	add	r1, sp, #40	; 0x28
 8008b30:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008b34:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008b38:	f009 ff76 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008b3c:	ee18 1a10 	vmov	r1, s16
 8008b40:	4630      	mov	r0, r6
 8008b42:	f007 fdbd 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008b46:	ee18 0a90 	vmov	r0, s17
 8008b4a:	220c      	movs	r2, #12
 8008b4c:	2136      	movs	r1, #54	; 0x36
 8008b4e:	f7fa fa7e 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8008b52:	ee18 1a90 	vmov	r1, s17
 8008b56:	4628      	mov	r0, r5
        color = newColor;
 8008b58:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008b5c:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008b60:	f009 fcc8 	bl	80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008b64:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008b68:	ee18 3a90 	vmov	r3, s17
 8008b6c:	333c      	adds	r3, #60	; 0x3c
 8008b6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008b72:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8008b74:	ee18 0a90 	vmov	r0, s17
 8008b78:	a90a      	add	r1, sp, #40	; 0x28
 8008b7a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008b7e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008b82:	f009 ff51 	bl	8012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008b86:	4630      	mov	r0, r6
 8008b88:	ee18 1a90 	vmov	r1, s17
 8008b8c:	f007 fd98 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008b90:	4620      	mov	r0, r4
 8008b92:	b00d      	add	sp, #52	; 0x34
 8008b94:	ecbd 8b04 	vpop	{d8-d9}
 8008b98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b9c:	0802e2a4 	.word	0x0802e2a4
 8008ba0:	0802f000 	.word	0x0802f000
 8008ba4:	0802f1c8 	.word	0x0802f1c8
 8008ba8:	0802c6b0 	.word	0x0802c6b0
 8008bac:	0802ed34 	.word	0x0802ed34
 8008bb0:	0802e28c 	.word	0x0802e28c
 8008bb4:	08008829 	.word	0x08008829
 8008bb8:	20012dfc 	.word	0x20012dfc
 8008bbc:	0802c4f0 	.word	0x0802c4f0
 8008bc0:	0802c5f2 	.word	0x0802c5f2
 8008bc4:	0802c56d 	.word	0x0802c56d
 8008bc8:	20012e00 	.word	0x20012e00
 8008bcc:	0802c5b4 	.word	0x0802c5b4
 8008bd0:	20012e08 	.word	0x20012e08
 8008bd4:	0802c62a 	.word	0x0802c62a
 8008bd8:	0802c6a0 	.word	0x0802c6a0

08008bdc <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8008bdc:	4770      	bx	lr

08008bde <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8008bde:	4770      	bx	lr

08008be0 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008be0:	b510      	push	{r4, lr}
}
 8008be2:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008be4:	4604      	mov	r4, r0
}
 8008be6:	f021 f87a 	bl	8029cde <_ZdlPvj>
 8008bea:	4620      	mov	r0, r4
 8008bec:	bd10      	pop	{r4, pc}
	...

08008bf0 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8008bf0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008bf4:	4604      	mov	r4, r0
 8008bf6:	4626      	mov	r6, r4
 8008bf8:	f00e fc7a 	bl	80174f0 <_ZN8touchgfx6ScreenC1Ev>
 8008bfc:	2500      	movs	r5, #0
 8008bfe:	4b2e      	ldr	r3, [pc, #184]	; (8008cb8 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8008c00:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008c02:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8008c06:	4b2d      	ldr	r3, [pc, #180]	; (8008cbc <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008c08:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008c0a:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008c0e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008c12:	23ff      	movs	r3, #255	; 0xff
 8008c14:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008c18:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008c1c:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008c20:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8008c24:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008c28:	4a25      	ldr	r2, [pc, #148]	; (8008cc0 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008c2a:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008c2e:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8008c32:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8008c34:	a901      	add	r1, sp, #4
 8008c36:	4638      	mov	r0, r7
 8008c38:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008c3c:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008c40:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008c44:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008c48:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008c4c:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008c50:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008c54:	66a5      	str	r5, [r4, #104]	; 0x68
 8008c56:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008c5a:	f00a fac0 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008c5e:	462a      	mov	r2, r5
 8008c60:	4629      	mov	r1, r5
 8008c62:	4630      	mov	r0, r6
 8008c64:	f7fa f9f3 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008c68:	4630      	mov	r0, r6
 8008c6a:	21f0      	movs	r1, #240	; 0xf0
 8008c6c:	f7f9 ff5c 	bl	8002b28 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008c70:	4630      	mov	r0, r6
 8008c72:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8008c76:	f7f9 ff59 	bl	8002b2c <_ZN8touchgfx8Drawable9setHeightEs>
 8008c7a:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8008c7e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008c82:	66a3      	str	r3, [r4, #104]	; 0x68
 8008c84:	4631      	mov	r1, r6
 8008c86:	4640      	mov	r0, r8
 8008c88:	f007 fd1a 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008c8c:	462a      	mov	r2, r5
 8008c8e:	4638      	mov	r0, r7
 8008c90:	f06f 0102 	mvn.w	r1, #2
 8008c94:	f7fa f9db 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8008c98:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008c9a:	a901      	add	r1, sp, #4
 8008c9c:	4638      	mov	r0, r7
 8008c9e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008ca2:	f00a fa9c 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008ca6:	4640      	mov	r0, r8
 8008ca8:	4639      	mov	r1, r7
 8008caa:	f007 fd09 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008cae:	4620      	mov	r0, r4
 8008cb0:	b002      	add	sp, #8
 8008cb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008cb6:	bf00      	nop
 8008cb8:	0802e2d8 	.word	0x0802e2d8
 8008cbc:	0802f000 	.word	0x0802f000
 8008cc0:	0802f1c8 	.word	0x0802f1c8

08008cc4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008cc4:	4770      	bx	lr
	...

08008cc8 <_Z23getFont_verdana_10_4bppv>:
{
 8008cc8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008cca:	4d17      	ldr	r5, [pc, #92]	; (8008d28 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008ccc:	682c      	ldr	r4, [r5, #0]
 8008cce:	f3bf 8f5b 	dmb	ish
 8008cd2:	f014 0401 	ands.w	r4, r4, #1
{
 8008cd6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008cd8:	d122      	bne.n	8008d20 <_Z23getFont_verdana_10_4bppv+0x58>
 8008cda:	4628      	mov	r0, r5
 8008cdc:	f021 f801 	bl	8029ce2 <__cxa_guard_acquire>
 8008ce0:	b1f0      	cbz	r0, 8008d20 <_Z23getFont_verdana_10_4bppv+0x58>
 8008ce2:	233f      	movs	r3, #63	; 0x3f
 8008ce4:	9309      	str	r3, [sp, #36]	; 0x24
 8008ce6:	4b11      	ldr	r3, [pc, #68]	; (8008d2c <_Z23getFont_verdana_10_4bppv+0x64>)
 8008ce8:	9308      	str	r3, [sp, #32]
 8008cea:	4b11      	ldr	r3, [pc, #68]	; (8008d30 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008cec:	9307      	str	r3, [sp, #28]
 8008cee:	2301      	movs	r3, #1
 8008cf0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008cf4:	9304      	str	r3, [sp, #16]
 8008cf6:	2304      	movs	r3, #4
 8008cf8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008cfc:	230a      	movs	r3, #10
 8008cfe:	490d      	ldr	r1, [pc, #52]	; (8008d34 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008d00:	9300      	str	r3, [sp, #0]
 8008d02:	225f      	movs	r2, #95	; 0x5f
 8008d04:	230c      	movs	r3, #12
 8008d06:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008d0a:	480b      	ldr	r0, [pc, #44]	; (8008d38 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008d0c:	940a      	str	r4, [sp, #40]	; 0x28
 8008d0e:	9401      	str	r4, [sp, #4]
 8008d10:	f7fd f9ec 	bl	80060ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008d14:	4809      	ldr	r0, [pc, #36]	; (8008d3c <_Z23getFont_verdana_10_4bppv+0x74>)
 8008d16:	f021 fee7 	bl	802aae8 <atexit>
 8008d1a:	4628      	mov	r0, r5
 8008d1c:	f020 ffed 	bl	8029cfa <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008d20:	4805      	ldr	r0, [pc, #20]	; (8008d38 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008d22:	b00f      	add	sp, #60	; 0x3c
 8008d24:	bd30      	pop	{r4, r5, pc}
 8008d26:	bf00      	nop
 8008d28:	20001ec4 	.word	0x20001ec4
 8008d2c:	08046e6c 	.word	0x08046e6c
 8008d30:	080470a8 	.word	0x080470a8
 8008d34:	08045eb4 	.word	0x08045eb4
 8008d38:	20001ec8 	.word	0x20001ec8
 8008d3c:	08008cc5 	.word	0x08008cc5

08008d40 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008d40:	4770      	bx	lr
	...

08008d44 <_Z23getFont_verdana_12_4bppv>:
{
 8008d44:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008d46:	4d17      	ldr	r5, [pc, #92]	; (8008da4 <_Z23getFont_verdana_12_4bppv+0x60>)
 8008d48:	682c      	ldr	r4, [r5, #0]
 8008d4a:	f3bf 8f5b 	dmb	ish
 8008d4e:	f014 0401 	ands.w	r4, r4, #1
{
 8008d52:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008d54:	d122      	bne.n	8008d9c <_Z23getFont_verdana_12_4bppv+0x58>
 8008d56:	4628      	mov	r0, r5
 8008d58:	f020 ffc3 	bl	8029ce2 <__cxa_guard_acquire>
 8008d5c:	b1f0      	cbz	r0, 8008d9c <_Z23getFont_verdana_12_4bppv+0x58>
 8008d5e:	233f      	movs	r3, #63	; 0x3f
 8008d60:	9309      	str	r3, [sp, #36]	; 0x24
 8008d62:	4b11      	ldr	r3, [pc, #68]	; (8008da8 <_Z23getFont_verdana_12_4bppv+0x64>)
 8008d64:	9308      	str	r3, [sp, #32]
 8008d66:	4b11      	ldr	r3, [pc, #68]	; (8008dac <_Z23getFont_verdana_12_4bppv+0x68>)
 8008d68:	9307      	str	r3, [sp, #28]
 8008d6a:	2301      	movs	r3, #1
 8008d6c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008d70:	9304      	str	r3, [sp, #16]
 8008d72:	2304      	movs	r3, #4
 8008d74:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008d78:	230c      	movs	r3, #12
 8008d7a:	490d      	ldr	r1, [pc, #52]	; (8008db0 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008d7c:	9300      	str	r3, [sp, #0]
 8008d7e:	2260      	movs	r2, #96	; 0x60
 8008d80:	230f      	movs	r3, #15
 8008d82:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008d86:	480b      	ldr	r0, [pc, #44]	; (8008db4 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008d88:	940a      	str	r4, [sp, #40]	; 0x28
 8008d8a:	9401      	str	r4, [sp, #4]
 8008d8c:	f7fd f9ae 	bl	80060ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008d90:	4809      	ldr	r0, [pc, #36]	; (8008db8 <_Z23getFont_verdana_12_4bppv+0x74>)
 8008d92:	f021 fea9 	bl	802aae8 <atexit>
 8008d96:	4628      	mov	r0, r5
 8008d98:	f020 ffaf 	bl	8029cfa <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008d9c:	4805      	ldr	r0, [pc, #20]	; (8008db4 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008d9e:	b00f      	add	sp, #60	; 0x3c
 8008da0:	bd30      	pop	{r4, r5, pc}
 8008da2:	bf00      	nop
 8008da4:	20001ef4 	.word	0x20001ef4
 8008da8:	08046ea0 	.word	0x08046ea0
 8008dac:	080470ac 	.word	0x080470ac
 8008db0:	080463e8 	.word	0x080463e8
 8008db4:	20001ef8 	.word	0x20001ef8
 8008db8:	08008d41 	.word	0x08008d41

08008dbc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008dbc:	4770      	bx	lr
	...

08008dc0 <_Z23getFont_verdana_19_4bppv>:
{
 8008dc0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008dc2:	4d17      	ldr	r5, [pc, #92]	; (8008e20 <_Z23getFont_verdana_19_4bppv+0x60>)
 8008dc4:	682c      	ldr	r4, [r5, #0]
 8008dc6:	f3bf 8f5b 	dmb	ish
 8008dca:	f014 0401 	ands.w	r4, r4, #1
{
 8008dce:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008dd0:	d122      	bne.n	8008e18 <_Z23getFont_verdana_19_4bppv+0x58>
 8008dd2:	4628      	mov	r0, r5
 8008dd4:	f020 ff85 	bl	8029ce2 <__cxa_guard_acquire>
 8008dd8:	b1f0      	cbz	r0, 8008e18 <_Z23getFont_verdana_19_4bppv+0x58>
 8008dda:	233f      	movs	r3, #63	; 0x3f
 8008ddc:	9309      	str	r3, [sp, #36]	; 0x24
 8008dde:	4b11      	ldr	r3, [pc, #68]	; (8008e24 <_Z23getFont_verdana_19_4bppv+0x64>)
 8008de0:	9308      	str	r3, [sp, #32]
 8008de2:	4b11      	ldr	r3, [pc, #68]	; (8008e28 <_Z23getFont_verdana_19_4bppv+0x68>)
 8008de4:	9307      	str	r3, [sp, #28]
 8008de6:	2301      	movs	r3, #1
 8008de8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008dec:	9304      	str	r3, [sp, #16]
 8008dee:	2304      	movs	r3, #4
 8008df0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008df4:	2313      	movs	r3, #19
 8008df6:	490d      	ldr	r1, [pc, #52]	; (8008e2c <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008df8:	9300      	str	r3, [sp, #0]
 8008dfa:	225f      	movs	r2, #95	; 0x5f
 8008dfc:	2317      	movs	r3, #23
 8008dfe:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008e02:	480b      	ldr	r0, [pc, #44]	; (8008e30 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008e04:	940a      	str	r4, [sp, #40]	; 0x28
 8008e06:	9401      	str	r4, [sp, #4]
 8008e08:	f7fd f970 	bl	80060ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008e0c:	4809      	ldr	r0, [pc, #36]	; (8008e34 <_Z23getFont_verdana_19_4bppv+0x74>)
 8008e0e:	f021 fe6b 	bl	802aae8 <atexit>
 8008e12:	4628      	mov	r0, r5
 8008e14:	f020 ff71 	bl	8029cfa <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008e18:	4805      	ldr	r0, [pc, #20]	; (8008e30 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008e1a:	b00f      	add	sp, #60	; 0x3c
 8008e1c:	bd30      	pop	{r4, r5, pc}
 8008e1e:	bf00      	nop
 8008e20:	20001f24 	.word	0x20001f24
 8008e24:	08046f24 	.word	0x08046f24
 8008e28:	080470b0 	.word	0x080470b0
 8008e2c:	08046928 	.word	0x08046928
 8008e30:	20001f28 	.word	0x20001f28
 8008e34:	08008dbd 	.word	0x08008dbd

08008e38 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008e38:	4770      	bx	lr
	...

08008e3c <_Z23getFont_verdana_40_4bppv>:
{
 8008e3c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008e3e:	4d16      	ldr	r5, [pc, #88]	; (8008e98 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008e40:	682c      	ldr	r4, [r5, #0]
 8008e42:	f3bf 8f5b 	dmb	ish
 8008e46:	f014 0401 	ands.w	r4, r4, #1
{
 8008e4a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008e4c:	d120      	bne.n	8008e90 <_Z23getFont_verdana_40_4bppv+0x54>
 8008e4e:	4628      	mov	r0, r5
 8008e50:	f020 ff47 	bl	8029ce2 <__cxa_guard_acquire>
 8008e54:	b1e0      	cbz	r0, 8008e90 <_Z23getFont_verdana_40_4bppv+0x54>
 8008e56:	233f      	movs	r3, #63	; 0x3f
 8008e58:	9309      	str	r3, [sp, #36]	; 0x24
 8008e5a:	4b10      	ldr	r3, [pc, #64]	; (8008e9c <_Z23getFont_verdana_40_4bppv+0x60>)
 8008e5c:	9308      	str	r3, [sp, #32]
 8008e5e:	4b10      	ldr	r3, [pc, #64]	; (8008ea0 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008e60:	4910      	ldr	r1, [pc, #64]	; (8008ea4 <_Z23getFont_verdana_40_4bppv+0x68>)
 8008e62:	4811      	ldr	r0, [pc, #68]	; (8008ea8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008e64:	940a      	str	r4, [sp, #40]	; 0x28
 8008e66:	2201      	movs	r2, #1
 8008e68:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008e6c:	2304      	movs	r3, #4
 8008e6e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8008e72:	2328      	movs	r3, #40	; 0x28
 8008e74:	9300      	str	r3, [sp, #0]
 8008e76:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008e7a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8008e7e:	9405      	str	r4, [sp, #20]
 8008e80:	f7fd f934 	bl	80060ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008e84:	4809      	ldr	r0, [pc, #36]	; (8008eac <_Z23getFont_verdana_40_4bppv+0x70>)
 8008e86:	f021 fe2f 	bl	802aae8 <atexit>
 8008e8a:	4628      	mov	r0, r5
 8008e8c:	f020 ff35 	bl	8029cfa <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008e90:	4805      	ldr	r0, [pc, #20]	; (8008ea8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008e92:	b00f      	add	sp, #60	; 0x3c
 8008e94:	bd30      	pop	{r4, r5, pc}
 8008e96:	bf00      	nop
 8008e98:	20001f54 	.word	0x20001f54
 8008e9c:	080470a4 	.word	0x080470a4
 8008ea0:	080470b4 	.word	0x080470b4
 8008ea4:	08046e5c 	.word	0x08046e5c
 8008ea8:	20001f58 	.word	0x20001f58
 8008eac:	08008e39 	.word	0x08008e39

08008eb0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008eb0:	2000      	movs	r0, #0
 8008eb2:	4770      	bx	lr

08008eb4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008eb4:	2000      	movs	r0, #0
 8008eb6:	4770      	bx	lr

08008eb8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008eb8:	b40e      	push	{r1, r2, r3}
 8008eba:	b503      	push	{r0, r1, lr}
 8008ebc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008ebe:	2100      	movs	r1, #0
{
 8008ec0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008ec4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008ec6:	f00d fe51 	bl	8016b6c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008eca:	b002      	add	sp, #8
 8008ecc:	f85d eb04 	ldr.w	lr, [sp], #4
 8008ed0:	b003      	add	sp, #12
 8008ed2:	4770      	bx	lr

08008ed4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008ed4:	b40c      	push	{r2, r3}
 8008ed6:	b507      	push	{r0, r1, r2, lr}
 8008ed8:	ab04      	add	r3, sp, #16
 8008eda:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008ede:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008ee0:	f00d fe44 	bl	8016b6c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008ee4:	b003      	add	sp, #12
 8008ee6:	f85d eb04 	ldr.w	lr, [sp], #4
 8008eea:	b002      	add	sp, #8
 8008eec:	4770      	bx	lr
	...

08008ef0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008ef0:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8008ef2:	b510      	push	{r4, lr}
 8008ef4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008ef6:	b373      	cbz	r3, 8008f56 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008ef8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008efa:	b92b      	cbnz	r3, 8008f08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008efc:	4b18      	ldr	r3, [pc, #96]	; (8008f60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008efe:	4a19      	ldr	r2, [pc, #100]	; (8008f64 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008f00:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8008f02:	4819      	ldr	r0, [pc, #100]	; (8008f68 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008f04:	f021 fdd2 	bl	802aaac <__assert_func>
            return buffer[pos];
 8008f08:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008f0a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008f0e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008f10:	b30b      	cbz	r3, 8008f56 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8008f12:	f00f fa28 	bl	8018366 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8008f16:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008f18:	2b01      	cmp	r3, #1
 8008f1a:	d803      	bhi.n	8008f24 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008f1c:	4b13      	ldr	r3, [pc, #76]	; (8008f6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008f1e:	4a14      	ldr	r2, [pc, #80]	; (8008f70 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008f20:	21cb      	movs	r1, #203	; 0xcb
 8008f22:	e7ee      	b.n	8008f02 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008f24:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008f26:	1c53      	adds	r3, r2, #1
 8008f28:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008f2a:	2b09      	cmp	r3, #9
 8008f2c:	4619      	mov	r1, r3
 8008f2e:	bf88      	it	hi
 8008f30:	f1a3 010a 	subhi.w	r1, r3, #10
 8008f34:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008f38:	f640 103f 	movw	r0, #2367	; 0x93f
 8008f3c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008f3e:	4281      	cmp	r1, r0
 8008f40:	d109      	bne.n	8008f56 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008f42:	2b0a      	cmp	r3, #10
 8008f44:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008f48:	bf28      	it	cs
 8008f4a:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008f4c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008f50:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8008f52:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008f54:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008f56:	4620      	mov	r0, r4
}
 8008f58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008f5c:	f00f b906 	b.w	801816c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008f60:	0802e304 	.word	0x0802e304
 8008f64:	0802e30d 	.word	0x0802e30d
 8008f68:	0802e3b8 	.word	0x0802e3b8
 8008f6c:	0802e402 	.word	0x0802e402
 8008f70:	0802e410 	.word	0x0802e410

08008f74 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008f74:	f00f b8c1 	b.w	80180fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008f78 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008f78:	b510      	push	{r4, lr}
 8008f7a:	b086      	sub	sp, #24
 8008f7c:	ac02      	add	r4, sp, #8
 8008f7e:	e884 0006 	stmia.w	r4, {r1, r2}
 8008f82:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008f84:	ab0a      	add	r3, sp, #40	; 0x28
 8008f86:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008f88:	9301      	str	r3, [sp, #4]
 8008f8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008f8c:	9300      	str	r3, [sp, #0]
 8008f8e:	4621      	mov	r1, r4
 8008f90:	9b08      	ldr	r3, [sp, #32]
 8008f92:	f00c f9af 	bl	80152f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008f96:	b006      	add	sp, #24
 8008f98:	bd10      	pop	{r4, pc}
	...

08008f9c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008f9c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8008f9e:	bb18      	cbnz	r0, 8008fe8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008fa0:	4b12      	ldr	r3, [pc, #72]	; (8008fec <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8008fa2:	4813      	ldr	r0, [pc, #76]	; (8008ff0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008fa4:	681c      	ldr	r4, [r3, #0]
 8008fa6:	4913      	ldr	r1, [pc, #76]	; (8008ff4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008fa8:	b1b4      	cbz	r4, 8008fd8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008faa:	6822      	ldr	r2, [r4, #0]
 8008fac:	4422      	add	r2, r4
 8008fae:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008fb0:	6862      	ldr	r2, [r4, #4]
 8008fb2:	4422      	add	r2, r4
 8008fb4:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008fb6:	68a2      	ldr	r2, [r4, #8]
 8008fb8:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008fba:	4b0f      	ldr	r3, [pc, #60]	; (8008ff8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008fbc:	2200      	movs	r2, #0
 8008fbe:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008fc0:	f000 f838 	bl	8009034 <_ZN17TypedTextDatabase8getFontsEv>
 8008fc4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008fc6:	f000 f833 	bl	8009030 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008fca:	4b0c      	ldr	r3, [pc, #48]	; (8008ffc <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008fcc:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008fce:	4b0c      	ldr	r3, [pc, #48]	; (8009000 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008fd0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008fd2:	4b0c      	ldr	r3, [pc, #48]	; (8009004 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008fd4:	8018      	strh	r0, [r3, #0]
    }
}
 8008fd6:	e007      	b.n	8008fe8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008fd8:	4b0b      	ldr	r3, [pc, #44]	; (8009008 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008fda:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008fdc:	4b0b      	ldr	r3, [pc, #44]	; (800900c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008fde:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008fe0:	4b0b      	ldr	r3, [pc, #44]	; (8009010 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008fe2:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008fe4:	2c00      	cmp	r4, #0
 8008fe6:	d1e8      	bne.n	8008fba <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008fe8:	bd38      	pop	{r3, r4, r5, pc}
 8008fea:	bf00      	nop
 8008fec:	20001f84 	.word	0x20001f84
 8008ff0:	20001f88 	.word	0x20001f88
 8008ff4:	20001f8c 	.word	0x20001f8c
 8008ff8:	20001f90 	.word	0x20001f90
 8008ffc:	20012dfc 	.word	0x20012dfc
 8009000:	20012e04 	.word	0x20012e04
 8009004:	20012e00 	.word	0x20012e00
 8009008:	0804724c 	.word	0x0804724c
 800900c:	080470b8 	.word	0x080470b8
 8009010:	08047878 	.word	0x08047878

08009014 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8009014:	4b04      	ldr	r3, [pc, #16]	; (8009028 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8009016:	681b      	ldr	r3, [r3, #0]
 8009018:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800901c:	4b03      	ldr	r3, [pc, #12]	; (800902c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800901e:	681b      	ldr	r3, [r3, #0]
}
 8009020:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8009024:	4770      	bx	lr
 8009026:	bf00      	nop
 8009028:	20001f8c 	.word	0x20001f8c
 800902c:	20001f88 	.word	0x20001f88

08009030 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8009030:	2065      	movs	r0, #101	; 0x65
 8009032:	4770      	bx	lr

08009034 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8009034:	4800      	ldr	r0, [pc, #0]	; (8009038 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8009036:	4770      	bx	lr
 8009038:	20001f94 	.word	0x20001f94

0800903c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800903c:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800903e:	f7ff febf 	bl	8008dc0 <_Z23getFont_verdana_19_4bppv>
};
 8009042:	4c06      	ldr	r4, [pc, #24]	; (800905c <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8009044:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8009046:	f7ff fef9 	bl	8008e3c <_Z23getFont_verdana_40_4bppv>
};
 800904a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800904c:	f7ff fe3c 	bl	8008cc8 <_Z23getFont_verdana_10_4bppv>
};
 8009050:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8009052:	f7ff fe77 	bl	8008d44 <_Z23getFont_verdana_12_4bppv>
};
 8009056:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8009058:	bd10      	pop	{r4, pc}
 800905a:	bf00      	nop
 800905c:	20001f94 	.word	0x20001f94

08009060 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8009060:	4770      	bx	lr

08009062 <_ZThn4_N20CalibrationPresenterD1Ev>:
 8009062:	3804      	subs	r0, #4
 8009064:	4770      	bx	lr

08009066 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8009066:	4770      	bx	lr

08009068 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009068:	68c0      	ldr	r0, [r0, #12]
 800906a:	6803      	ldr	r3, [r0, #0]
 800906c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800906e:	4718      	bx	r3

08009070 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009070:	f1a0 0004 	sub.w	r0, r0, #4
 8009074:	f7ff bff8 	b.w	8009068 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08009078 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8009078:	b510      	push	{r4, lr}
 800907a:	2110      	movs	r1, #16
 800907c:	4604      	mov	r4, r0
 800907e:	f020 fe2e 	bl	8029cde <_ZdlPvj>
 8009082:	4620      	mov	r0, r4
 8009084:	bd10      	pop	{r4, pc}

08009086 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8009086:	f1a0 0004 	sub.w	r0, r0, #4
 800908a:	e7f5      	b.n	8009078 <_ZN20CalibrationPresenterD0Ev>

0800908c <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 800908c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800908e:	2200      	movs	r2, #0
 8009090:	6082      	str	r2, [r0, #8]
    : view(v)
 8009092:	4a04      	ldr	r2, [pc, #16]	; (80090a4 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8009094:	60c1      	str	r1, [r0, #12]
 8009096:	f102 0408 	add.w	r4, r2, #8
 800909a:	3224      	adds	r2, #36	; 0x24
 800909c:	6004      	str	r4, [r0, #0]
 800909e:	6042      	str	r2, [r0, #4]
}
 80090a0:	bd10      	pop	{r4, pc}
 80090a2:	bf00      	nop
 80090a4:	0802e4e4 	.word	0x0802e4e4

080090a8 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 80090a8:	4770      	bx	lr
	...

080090ac <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 80090ac:	b510      	push	{r4, lr}
 80090ae:	4b03      	ldr	r3, [pc, #12]	; (80090bc <_ZN15CalibrationViewD1Ev+0x10>)
 80090b0:	6003      	str	r3, [r0, #0]
 80090b2:	4604      	mov	r4, r0
 80090b4:	f7f9 ff50 	bl	8002f58 <_ZN19CalibrationViewBaseD1Ev>
 80090b8:	4620      	mov	r0, r4
 80090ba:	bd10      	pop	{r4, pc}
 80090bc:	0802e520 	.word	0x0802e520

080090c0 <_ZN15CalibrationViewD0Ev>:
 80090c0:	b510      	push	{r4, lr}
 80090c2:	4604      	mov	r4, r0
 80090c4:	f7ff fff2 	bl	80090ac <_ZN15CalibrationViewD1Ev>
 80090c8:	4620      	mov	r0, r4
 80090ca:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80090ce:	f020 fe06 	bl	8029cde <_ZdlPvj>
 80090d2:	4620      	mov	r0, r4
 80090d4:	bd10      	pop	{r4, pc}
	...

080090d8 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 80090d8:	b510      	push	{r4, lr}
 80090da:	4604      	mov	r4, r0
 80090dc:	f7fa f850 	bl	8003180 <_ZN19CalibrationViewBaseC1Ev>
 80090e0:	4b01      	ldr	r3, [pc, #4]	; (80090e8 <_ZN15CalibrationViewC1Ev+0x10>)
 80090e2:	6023      	str	r3, [r4, #0]
}
 80090e4:	4620      	mov	r0, r4
 80090e6:	bd10      	pop	{r4, pc}
 80090e8:	0802e520 	.word	0x0802e520

080090ec <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 80090ec:	f7f9 bf01 	b.w	8002ef2 <_ZN19CalibrationViewBase11setupScreenEv>

080090f0 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 80090f0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80090f2:	4a0a      	ldr	r2, [pc, #40]	; (800911c <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 80090f4:	4605      	mov	r5, r0
 80090f6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80090f8:	460b      	mov	r3, r1
 80090fa:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80090fe:	2104      	movs	r1, #4
 8009100:	f00f fee6 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009104:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009108:	f00d fe5a 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800910c:	b92c      	cbnz	r4, 800911a <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 800910e:	f00c fd6f 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009112:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009116:	f7fb bc61 	b.w	80049dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800911a:	bd38      	pop	{r3, r4, r5, pc}
 800911c:	0802e514 	.word	0x0802e514

08009120 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8009120:	4770      	bx	lr

08009122 <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 8009122:	3804      	subs	r0, #4
 8009124:	4770      	bx	lr

08009126 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8009126:	4770      	bx	lr

08009128 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8009128:	4770      	bx	lr

0800912a <_ZN25Calibration_HallPresenterD0Ev>:
 800912a:	b510      	push	{r4, lr}
 800912c:	2110      	movs	r1, #16
 800912e:	4604      	mov	r4, r0
 8009130:	f020 fdd5 	bl	8029cde <_ZdlPvj>
 8009134:	4620      	mov	r0, r4
 8009136:	bd10      	pop	{r4, pc}

08009138 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8009138:	f1a0 0004 	sub.w	r0, r0, #4
 800913c:	e7f5      	b.n	800912a <_ZN25Calibration_HallPresenterD0Ev>

0800913e <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 800913e:	4770      	bx	lr

08009140 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8009140:	b510      	push	{r4, lr}
 8009142:	2200      	movs	r2, #0
 8009144:	6082      	str	r2, [r0, #8]
    : view(v)
 8009146:	4a04      	ldr	r2, [pc, #16]	; (8009158 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8009148:	60c1      	str	r1, [r0, #12]
 800914a:	f102 0408 	add.w	r4, r2, #8
 800914e:	3224      	adds	r2, #36	; 0x24
 8009150:	6004      	str	r4, [r0, #0]
 8009152:	6042      	str	r2, [r0, #4]
}
 8009154:	bd10      	pop	{r4, pc}
 8009156:	bf00      	nop
 8009158:	0802e550 	.word	0x0802e550

0800915c <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 800915c:	4770      	bx	lr

0800915e <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 800915e:	4770      	bx	lr

08009160 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8009160:	b510      	push	{r4, lr}
 8009162:	4b03      	ldr	r3, [pc, #12]	; (8009170 <_ZN20Calibration_HallViewD1Ev+0x10>)
 8009164:	6003      	str	r3, [r0, #0]
 8009166:	4604      	mov	r4, r0
 8009168:	f7fa fa50 	bl	800360c <_ZN24Calibration_HallViewBaseD1Ev>
 800916c:	4620      	mov	r0, r4
 800916e:	bd10      	pop	{r4, pc}
 8009170:	0802e590 	.word	0x0802e590

08009174 <_ZN20Calibration_HallViewD0Ev>:
 8009174:	b510      	push	{r4, lr}
 8009176:	4604      	mov	r4, r0
 8009178:	f7ff fff2 	bl	8009160 <_ZN20Calibration_HallViewD1Ev>
 800917c:	4620      	mov	r0, r4
 800917e:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8009182:	f020 fdac 	bl	8029cde <_ZdlPvj>
 8009186:	4620      	mov	r0, r4
 8009188:	bd10      	pop	{r4, pc}
	...

0800918c <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 800918c:	b510      	push	{r4, lr}
 800918e:	4604      	mov	r4, r0
 8009190:	f7fa fa82 	bl	8003698 <_ZN24Calibration_HallViewBaseC1Ev>
 8009194:	4b01      	ldr	r3, [pc, #4]	; (800919c <_ZN20Calibration_HallViewC1Ev+0x10>)
 8009196:	6023      	str	r3, [r4, #0]
}
 8009198:	4620      	mov	r0, r4
 800919a:	bd10      	pop	{r4, pc}
 800919c:	0802e590 	.word	0x0802e590

080091a0 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 80091a0:	f7fa ba0f 	b.w	80035c2 <_ZN24Calibration_HallViewBase11setupScreenEv>

080091a4 <_ZN20Calibration_HallView25function_cali_hall_sensorEv>:

void Calibration_HallView::function_cali_hall_sensor()
{
 80091a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80091a6:	4604      	mov	r4, r0
 80091a8:	2500      	movs	r5, #0
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80091aa:	ab01      	add	r3, sp, #4
 80091ac:	4a18      	ldr	r2, [pc, #96]	; (8009210 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 80091ae:	9501      	str	r5, [sp, #4]
 80091b0:	210a      	movs	r1, #10
 80091b2:	f500 706a 	add.w	r0, r0, #936	; 0x3a8
 80091b6:	f010 f877 	bl	80192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	//uint32_t* Samples = MEAS_start_measure();
	//FFT fft = calculate_freq_and_signalstrength(3, Samples);

	Unicode::snprintfFloat(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%.2f", 0.0);
	CALIBRATION_HSR_S.invalidate();
 80091ba:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 80091be:	f00d fdff 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80091c2:	ab01      	add	r3, sp, #4
 80091c4:	4a12      	ldr	r2, [pc, #72]	; (8009210 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 80091c6:	9501      	str	r5, [sp, #4]
 80091c8:	210a      	movs	r1, #10
 80091ca:	f504 7065 	add.w	r0, r4, #916	; 0x394
 80091ce:	f010 f86b 	bl	80192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%.2f", 0.0);
	CALIBRATION_HSR_F.invalidate();
 80091d2:	f504 7098 	add.w	r0, r4, #304	; 0x130
 80091d6:	f00d fdf3 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80091da:	ab01      	add	r3, sp, #4
 80091dc:	4a0c      	ldr	r2, [pc, #48]	; (8009210 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 80091de:	9501      	str	r5, [sp, #4]
 80091e0:	210a      	movs	r1, #10
 80091e2:	f504 705b 	add.w	r0, r4, #876	; 0x36c
 80091e6:	f010 f85f 	bl	80192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	//fft = calculate_freq_and_signalstrength(4, Samples);

	Unicode::snprintfFloat(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%.2f", 0.0);
	CALIBRATION_HSL_S.invalidate();
 80091ea:	f104 0098 	add.w	r0, r4, #152	; 0x98
 80091ee:	f00d fde7 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80091f2:	4a07      	ldr	r2, [pc, #28]	; (8009210 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 80091f4:	9501      	str	r5, [sp, #4]
 80091f6:	ab01      	add	r3, sp, #4
 80091f8:	210a      	movs	r1, #10
 80091fa:	f504 7060 	add.w	r0, r4, #896	; 0x380
 80091fe:	f010 f853 	bl	80192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%.2f", 0.0);
	CALIBRATION_HSL_F.invalidate();
 8009202:	f104 00e4 	add.w	r0, r4, #228	; 0xe4

#endif
}
 8009206:	b003      	add	sp, #12
 8009208:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	CALIBRATION_HSL_F.invalidate();
 800920c:	f00d bdd8 	b.w	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009210:	0802e580 	.word	0x0802e580

08009214 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8009214:	4770      	bx	lr

08009216 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8009216:	3804      	subs	r0, #4
 8009218:	4770      	bx	lr

0800921a <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800921a:	4770      	bx	lr

0800921c <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800921c:	4770      	bx	lr

0800921e <_ZN24Calibration_PadPresenterD0Ev>:
 800921e:	b510      	push	{r4, lr}
 8009220:	2110      	movs	r1, #16
 8009222:	4604      	mov	r4, r0
 8009224:	f020 fd5b 	bl	8029cde <_ZdlPvj>
 8009228:	4620      	mov	r0, r4
 800922a:	bd10      	pop	{r4, pc}

0800922c <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800922c:	f1a0 0004 	sub.w	r0, r0, #4
 8009230:	e7f5      	b.n	800921e <_ZN24Calibration_PadPresenterD0Ev>

08009232 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8009232:	4770      	bx	lr

08009234 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8009234:	b510      	push	{r4, lr}
 8009236:	2200      	movs	r2, #0
 8009238:	6082      	str	r2, [r0, #8]
    : view(v)
 800923a:	4a04      	ldr	r2, [pc, #16]	; (800924c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800923c:	60c1      	str	r1, [r0, #12]
 800923e:	f102 0408 	add.w	r4, r2, #8
 8009242:	3224      	adds	r2, #36	; 0x24
 8009244:	6004      	str	r4, [r0, #0]
 8009246:	6042      	str	r2, [r0, #4]
}
 8009248:	bd10      	pop	{r4, pc}
 800924a:	bf00      	nop
 800924c:	0802e5c4 	.word	0x0802e5c4

08009250 <_ZN19Calibration_PadView14tearDownScreenEv>:
    Calibration_PadViewBase::setupScreen();
}

void Calibration_PadView::tearDownScreen() {
    Calibration_PadViewBase::tearDownScreen();
}
 8009250:	4770      	bx	lr

08009252 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value) {}
 8009252:	4770      	bx	lr

08009254 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8009254:	b510      	push	{r4, lr}
 8009256:	4b03      	ldr	r3, [pc, #12]	; (8009264 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8009258:	6003      	str	r3, [r0, #0]
 800925a:	4604      	mov	r4, r0
 800925c:	f7fa fcf2 	bl	8003c44 <_ZN23Calibration_PadViewBaseD1Ev>
 8009260:	4620      	mov	r0, r4
 8009262:	bd10      	pop	{r4, pc}
 8009264:	0802e5fc 	.word	0x0802e5fc

08009268 <_ZN19Calibration_PadViewD0Ev>:
 8009268:	b510      	push	{r4, lr}
 800926a:	4604      	mov	r4, r0
 800926c:	f7ff fff2 	bl	8009254 <_ZN19Calibration_PadViewD1Ev>
 8009270:	4620      	mov	r0, r4
 8009272:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8009276:	f020 fd32 	bl	8029cde <_ZdlPvj>
 800927a:	4620      	mov	r0, r4
 800927c:	bd10      	pop	{r4, pc}
	...

08009280 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView() {}
 8009280:	b510      	push	{r4, lr}
 8009282:	4604      	mov	r4, r0
 8009284:	f7fa fd18 	bl	8003cb8 <_ZN23Calibration_PadViewBaseC1Ev>
 8009288:	4b01      	ldr	r3, [pc, #4]	; (8009290 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800928a:	6023      	str	r3, [r4, #0]
 800928c:	4620      	mov	r0, r4
 800928e:	bd10      	pop	{r4, pc}
 8009290:	0802e5fc 	.word	0x0802e5fc

08009294 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8009294:	f7fa bcb1 	b.w	8003bfa <_ZN23Calibration_PadViewBase11setupScreenEv>

08009298 <_ZN19Calibration_PadView17function_cali_padEv>:

void Calibration_PadView::function_cali_pad() {
 8009298:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800929a:	4604      	mov	r4, r0
 800929c:	2500      	movs	r5, #0
 800929e:	ab01      	add	r3, sp, #4
 80092a0:	4a18      	ldr	r2, [pc, #96]	; (8009304 <_ZN19Calibration_PadView17function_cali_padEv+0x6c>)
 80092a2:	9501      	str	r5, [sp, #4]
 80092a4:	210a      	movs	r1, #10
 80092a6:	f500 705b 	add.w	r0, r0, #876	; 0x36c
 80092aa:	f00f fffd 	bl	80192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
#ifndef SIMULATOR
	
    Unicode::snprintfFloat(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE,
                           "%.2f", 0.0);
    CALIBRATION_PADR_S.invalidate();
 80092ae:	f104 0098 	add.w	r0, r4, #152	; 0x98
 80092b2:	f00d fd85 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80092b6:	ab01      	add	r3, sp, #4
 80092b8:	4a12      	ldr	r2, [pc, #72]	; (8009304 <_ZN19Calibration_PadView17function_cali_padEv+0x6c>)
 80092ba:	9501      	str	r5, [sp, #4]
 80092bc:	210a      	movs	r1, #10
 80092be:	f504 7060 	add.w	r0, r4, #896	; 0x380
 80092c2:	f00f fff1 	bl	80192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE,
                           "%.2f", 0.0);
    CALIBRATION_PADR_F.invalidate();
 80092c6:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 80092ca:	f00d fd79 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80092ce:	ab01      	add	r3, sp, #4
 80092d0:	4a0c      	ldr	r2, [pc, #48]	; (8009304 <_ZN19Calibration_PadView17function_cali_padEv+0x6c>)
 80092d2:	9501      	str	r5, [sp, #4]
 80092d4:	210a      	movs	r1, #10
 80092d6:	f504 706a 	add.w	r0, r4, #936	; 0x3a8
 80092da:	f00f ffe5 	bl	80192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

    Unicode::snprintfFloat(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE,
                           "%.2f", 0.0);
    CALIBRATION_PADL_S.invalidate();
 80092de:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 80092e2:	f00d fd6d 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80092e6:	4a07      	ldr	r2, [pc, #28]	; (8009304 <_ZN19Calibration_PadView17function_cali_padEv+0x6c>)
 80092e8:	9501      	str	r5, [sp, #4]
 80092ea:	ab01      	add	r3, sp, #4
 80092ec:	210a      	movs	r1, #10
 80092ee:	f504 7065 	add.w	r0, r4, #916	; 0x394
 80092f2:	f00f ffd9 	bl	80192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE,
                           "%.2f", 0.0);
    CALIBRATION_PADL_F.invalidate();
 80092f6:	f504 7098 	add.w	r0, r4, #304	; 0x130

#endif
}
 80092fa:	b003      	add	sp, #12
 80092fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    CALIBRATION_PADL_F.invalidate();
 8009300:	f00d bd5e 	b.w	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009304:	0802e580 	.word	0x0802e580

08009308 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009308:	4770      	bx	lr

0800930a <_ZN19FrontendApplicationD0Ev>:
 800930a:	b510      	push	{r4, lr}
 800930c:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8009310:	4604      	mov	r4, r0
 8009312:	f020 fce4 	bl	8029cde <_ZdlPvj>
 8009316:	4620      	mov	r0, r4
 8009318:	bd10      	pop	{r4, pc}

0800931a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800931a:	b510      	push	{r4, lr}
 800931c:	4604      	mov	r4, r0
    {
        model.tick();
 800931e:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8009322:	f000 fb15 	bl	8009950 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009326:	4620      	mov	r0, r4
    }
 8009328:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800932c:	f00c bd24 	b.w	8015d78 <_ZN8touchgfx11Application15handleTickEventEv>

08009330 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8009330:	b510      	push	{r4, lr}
 8009332:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8009334:	f7fb fa22 	bl	800477c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009338:	4b01      	ldr	r3, [pc, #4]	; (8009340 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800933a:	6023      	str	r3, [r4, #0]
{

}
 800933c:	4620      	mov	r0, r4
 800933e:	bd10      	pop	{r4, pc}
 8009340:	0802e638 	.word	0x0802e638

08009344 <_ZN17Gauge_with_ValuesD1Ev>:
 8009344:	b510      	push	{r4, lr}
 8009346:	4b03      	ldr	r3, [pc, #12]	; (8009354 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8009348:	6003      	str	r3, [r0, #0]
 800934a:	4604      	mov	r4, r0
 800934c:	f7fc fd1c 	bl	8005d88 <_ZN21Gauge_with_ValuesBaseD1Ev>
 8009350:	4620      	mov	r0, r4
 8009352:	bd10      	pop	{r4, pc}
 8009354:	0802e68c 	.word	0x0802e68c

08009358 <_ZN17Gauge_with_ValuesD0Ev>:
 8009358:	b510      	push	{r4, lr}
 800935a:	4604      	mov	r4, r0
 800935c:	f7ff fff2 	bl	8009344 <_ZN17Gauge_with_ValuesD1Ev>
 8009360:	4620      	mov	r0, r4
 8009362:	f44f 7162 	mov.w	r1, #904	; 0x388
 8009366:	f020 fcba 	bl	8029cde <_ZdlPvj>
 800936a:	4620      	mov	r0, r4
 800936c:	bd10      	pop	{r4, pc}
	...

08009370 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8009370:	b510      	push	{r4, lr}
 8009372:	4604      	mov	r4, r0
 8009374:	f7fc fd12 	bl	8005d9c <_ZN21Gauge_with_ValuesBaseC1Ev>
 8009378:	4b01      	ldr	r3, [pc, #4]	; (8009380 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 800937a:	6023      	str	r3, [r4, #0]
{

}
 800937c:	4620      	mov	r0, r4
 800937e:	bd10      	pop	{r4, pc}
 8009380:	0802e68c 	.word	0x0802e68c

08009384 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8009384:	f7fc bd01 	b.w	8005d8a <_ZN21Gauge_with_ValuesBase10initializeEv>

08009388 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8009388:	4770      	bx	lr

0800938a <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800938a:	3804      	subs	r0, #4
 800938c:	4770      	bx	lr

0800938e <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800938e:	4770      	bx	lr

08009390 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009390:	68c0      	ldr	r0, [r0, #12]
 8009392:	6803      	ldr	r3, [r0, #0]
 8009394:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009396:	4718      	bx	r3

08009398 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009398:	f1a0 0004 	sub.w	r0, r0, #4
 800939c:	f7ff bff8 	b.w	8009390 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

080093a0 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 80093a0:	b510      	push	{r4, lr}
 80093a2:	2110      	movs	r1, #16
 80093a4:	4604      	mov	r4, r0
 80093a6:	f020 fc9a 	bl	8029cde <_ZdlPvj>
 80093aa:	4620      	mov	r0, r4
 80093ac:	bd10      	pop	{r4, pc}

080093ae <_ZThn4_N18Main_MenuPresenterD0Ev>:
 80093ae:	f1a0 0004 	sub.w	r0, r0, #4
 80093b2:	e7f5      	b.n	80093a0 <_ZN18Main_MenuPresenterD0Ev>

080093b4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 80093b4:	b510      	push	{r4, lr}
 80093b6:	2200      	movs	r2, #0
 80093b8:	6082      	str	r2, [r0, #8]
    : view(v)
 80093ba:	4a04      	ldr	r2, [pc, #16]	; (80093cc <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 80093bc:	60c1      	str	r1, [r0, #12]
 80093be:	f102 0408 	add.w	r4, r2, #8
 80093c2:	3224      	adds	r2, #36	; 0x24
 80093c4:	6004      	str	r4, [r0, #0]
 80093c6:	6042      	str	r2, [r0, #4]
}
 80093c8:	bd10      	pop	{r4, pc}
 80093ca:	bf00      	nop
 80093cc:	0802e718 	.word	0x0802e718

080093d0 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 80093d0:	4770      	bx	lr
	...

080093d4 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 80093d4:	b510      	push	{r4, lr}
 80093d6:	4b03      	ldr	r3, [pc, #12]	; (80093e4 <_ZN13Main_MenuViewD1Ev+0x10>)
 80093d8:	6003      	str	r3, [r0, #0]
 80093da:	4604      	mov	r4, r0
 80093dc:	f7fc feda 	bl	8006194 <_ZN17Main_MenuViewBaseD1Ev>
 80093e0:	4620      	mov	r0, r4
 80093e2:	bd10      	pop	{r4, pc}
 80093e4:	0802e750 	.word	0x0802e750

080093e8 <_ZN13Main_MenuViewD0Ev>:
 80093e8:	b510      	push	{r4, lr}
 80093ea:	4604      	mov	r4, r0
 80093ec:	f7ff fff2 	bl	80093d4 <_ZN13Main_MenuViewD1Ev>
 80093f0:	4620      	mov	r0, r4
 80093f2:	f241 117c 	movw	r1, #4476	; 0x117c
 80093f6:	f020 fc72 	bl	8029cde <_ZdlPvj>
 80093fa:	4620      	mov	r0, r4
 80093fc:	bd10      	pop	{r4, pc}
	...

08009400 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8009400:	b510      	push	{r4, lr}
 8009402:	4604      	mov	r4, r0
 8009404:	f7fc ff10 	bl	8006228 <_ZN17Main_MenuViewBaseC1Ev>
 8009408:	4b01      	ldr	r3, [pc, #4]	; (8009410 <_ZN13Main_MenuViewC1Ev+0x10>)
 800940a:	6023      	str	r3, [r4, #0]
}
 800940c:	4620      	mov	r0, r4
 800940e:	bd10      	pop	{r4, pc}
 8009410:	0802e750 	.word	0x0802e750

08009414 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8009414:	f7fc be9a 	b.w	800614c <_ZN17Main_MenuViewBase11setupScreenEv>

08009418 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8009418:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800941a:	4a0a      	ldr	r2, [pc, #40]	; (8009444 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 800941c:	4605      	mov	r5, r0
 800941e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8009420:	460b      	mov	r3, r1
 8009422:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8009426:	2104      	movs	r1, #4
 8009428:	f00f fd52 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 800942c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009430:	f00d fcc6 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009434:	b92c      	cbnz	r4, 8009442 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8009436:	f00c fbdb 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800943a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800943e:	f7fb bacd 	b.w	80049dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009442:	bd38      	pop	{r3, r4, r5, pc}
 8009444:	0802e514 	.word	0x0802e514

08009448 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8009448:	4770      	bx	lr

0800944a <_ZThn4_N20MeasurementPresenterD1Ev>:
 800944a:	3804      	subs	r0, #4
 800944c:	4770      	bx	lr

0800944e <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800944e:	4770      	bx	lr

08009450 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009450:	68c0      	ldr	r0, [r0, #12]
 8009452:	6803      	ldr	r3, [r0, #0]
 8009454:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009456:	4718      	bx	r3

08009458 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009458:	f1a0 0004 	sub.w	r0, r0, #4
 800945c:	f7ff bff8 	b.w	8009450 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08009460 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8009460:	b510      	push	{r4, lr}
 8009462:	2110      	movs	r1, #16
 8009464:	4604      	mov	r4, r0
 8009466:	f020 fc3a 	bl	8029cde <_ZdlPvj>
 800946a:	4620      	mov	r0, r4
 800946c:	bd10      	pop	{r4, pc}

0800946e <_ZThn4_N20MeasurementPresenterD0Ev>:
 800946e:	f1a0 0004 	sub.w	r0, r0, #4
 8009472:	e7f5      	b.n	8009460 <_ZN20MeasurementPresenterD0Ev>

08009474 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8009474:	b510      	push	{r4, lr}
 8009476:	2200      	movs	r2, #0
 8009478:	6082      	str	r2, [r0, #8]
    : view(v)
 800947a:	4a04      	ldr	r2, [pc, #16]	; (800948c <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800947c:	60c1      	str	r1, [r0, #12]
 800947e:	f102 0408 	add.w	r4, r2, #8
 8009482:	3224      	adds	r2, #36	; 0x24
 8009484:	6004      	str	r4, [r0, #0]
 8009486:	6042      	str	r2, [r0, #4]
}
 8009488:	bd10      	pop	{r4, pc}
 800948a:	bf00      	nop
 800948c:	0802e780 	.word	0x0802e780

08009490 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8009490:	4770      	bx	lr
	...

08009494 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8009494:	b510      	push	{r4, lr}
 8009496:	4b03      	ldr	r3, [pc, #12]	; (80094a4 <_ZN15MeasurementViewD1Ev+0x10>)
 8009498:	6003      	str	r3, [r0, #0]
 800949a:	4604      	mov	r4, r0
 800949c:	f7fd f934 	bl	8006708 <_ZN19MeasurementViewBaseD1Ev>
 80094a0:	4620      	mov	r0, r4
 80094a2:	bd10      	pop	{r4, pc}
 80094a4:	0802e7b8 	.word	0x0802e7b8

080094a8 <_ZN15MeasurementViewD0Ev>:
 80094a8:	b510      	push	{r4, lr}
 80094aa:	4604      	mov	r4, r0
 80094ac:	f7ff fff2 	bl	8009494 <_ZN15MeasurementViewD1Ev>
 80094b0:	4620      	mov	r0, r4
 80094b2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80094b6:	f020 fc12 	bl	8029cde <_ZdlPvj>
 80094ba:	4620      	mov	r0, r4
 80094bc:	bd10      	pop	{r4, pc}
	...

080094c0 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 80094c0:	b510      	push	{r4, lr}
 80094c2:	4604      	mov	r4, r0
 80094c4:	f7fd f95a 	bl	800677c <_ZN19MeasurementViewBaseC1Ev>
 80094c8:	4b01      	ldr	r3, [pc, #4]	; (80094d0 <_ZN15MeasurementViewC1Ev+0x10>)
 80094ca:	6023      	str	r3, [r4, #0]
}
 80094cc:	4620      	mov	r0, r4
 80094ce:	bd10      	pop	{r4, pc}
 80094d0:	0802e7b8 	.word	0x0802e7b8

080094d4 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 80094d4:	f7fd b8f4 	b.w	80066c0 <_ZN19MeasurementViewBase11setupScreenEv>

080094d8 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 80094d8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80094da:	4a0a      	ldr	r2, [pc, #40]	; (8009504 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 80094dc:	4605      	mov	r5, r0
 80094de:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80094e0:	460b      	mov	r3, r1
 80094e2:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80094e6:	2104      	movs	r1, #4
 80094e8:	f00f fcf2 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80094ec:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80094f0:	f00d fc66 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80094f4:	b92c      	cbnz	r4, 8009502 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 80094f6:	f00c fb7b 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80094fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80094fe:	f7fb ba6d 	b.w	80049dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009502:	bd38      	pop	{r3, r4, r5, pc}
 8009504:	0802e514 	.word	0x0802e514

08009508 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8009508:	4770      	bx	lr

0800950a <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800950a:	3804      	subs	r0, #4
 800950c:	4770      	bx	lr

0800950e <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800950e:	4770      	bx	lr

08009510 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009510:	68c0      	ldr	r0, [r0, #12]
 8009512:	6803      	ldr	r3, [r0, #0]
 8009514:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009516:	4718      	bx	r3

08009518 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009518:	f1a0 0004 	sub.w	r0, r0, #4
 800951c:	f7ff bff8 	b.w	8009510 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08009520 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8009520:	b510      	push	{r4, lr}
 8009522:	2110      	movs	r1, #16
 8009524:	4604      	mov	r4, r0
 8009526:	f020 fbda 	bl	8029cde <_ZdlPvj>
 800952a:	4620      	mov	r0, r4
 800952c:	bd10      	pop	{r4, pc}

0800952e <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800952e:	f1a0 0004 	sub.w	r0, r0, #4
 8009532:	e7f5      	b.n	8009520 <_ZN29Measurement_AccuratePresenterD0Ev>

08009534 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8009534:	b510      	push	{r4, lr}
 8009536:	2200      	movs	r2, #0
 8009538:	6082      	str	r2, [r0, #8]
    : view(v)
 800953a:	4a04      	ldr	r2, [pc, #16]	; (800954c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 800953c:	60c1      	str	r1, [r0, #12]
 800953e:	f102 0408 	add.w	r4, r2, #8
 8009542:	3224      	adds	r2, #36	; 0x24
 8009544:	6004      	str	r4, [r0, #0]
 8009546:	6042      	str	r2, [r0, #4]
}
 8009548:	bd10      	pop	{r4, pc}
 800954a:	bf00      	nop
 800954c:	0802e7e8 	.word	0x0802e7e8

08009550 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8009550:	4770      	bx	lr
	...

08009554 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8009554:	b510      	push	{r4, lr}
 8009556:	4b03      	ldr	r3, [pc, #12]	; (8009564 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8009558:	6003      	str	r3, [r0, #0]
 800955a:	4604      	mov	r4, r0
 800955c:	f7fd fb56 	bl	8006c0c <_ZN28Measurement_AccurateViewBaseD1Ev>
 8009560:	4620      	mov	r0, r4
 8009562:	bd10      	pop	{r4, pc}
 8009564:	0802e820 	.word	0x0802e820

08009568 <_ZN24Measurement_AccurateViewD0Ev>:
 8009568:	b510      	push	{r4, lr}
 800956a:	4604      	mov	r4, r0
 800956c:	f7ff fff2 	bl	8009554 <_ZN24Measurement_AccurateViewD1Ev>
 8009570:	4620      	mov	r0, r4
 8009572:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009576:	f020 fbb2 	bl	8029cde <_ZdlPvj>
 800957a:	4620      	mov	r0, r4
 800957c:	bd10      	pop	{r4, pc}
	...

08009580 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8009580:	b510      	push	{r4, lr}
 8009582:	4604      	mov	r4, r0
 8009584:	f7fd fb7c 	bl	8006c80 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8009588:	4b01      	ldr	r3, [pc, #4]	; (8009590 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800958a:	6023      	str	r3, [r4, #0]
}
 800958c:	4620      	mov	r0, r4
 800958e:	bd10      	pop	{r4, pc}
 8009590:	0802e820 	.word	0x0802e820

08009594 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8009594:	f7fd bb16 	b.w	8006bc4 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08009598 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8009598:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800959a:	4a0a      	ldr	r2, [pc, #40]	; (80095c4 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800959c:	4605      	mov	r5, r0
 800959e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80095a0:	460b      	mov	r3, r1
 80095a2:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80095a6:	2104      	movs	r1, #4
 80095a8:	f00f fc92 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80095ac:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80095b0:	f00d fc06 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80095b4:	b92c      	cbnz	r4, 80095c2 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 80095b6:	f00c fb1b 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80095ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80095be:	f7fb ba0d 	b.w	80049dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80095c2:	bd38      	pop	{r3, r4, r5, pc}
 80095c4:	0802e514 	.word	0x0802e514

080095c8 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 80095c8:	4770      	bx	lr

080095ca <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 80095ca:	3804      	subs	r0, #4
 80095cc:	4770      	bx	lr

080095ce <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 80095ce:	4770      	bx	lr

080095d0 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 80095d0:	4770      	bx	lr

080095d2 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 80095d2:	b510      	push	{r4, lr}
 80095d4:	2110      	movs	r1, #16
 80095d6:	4604      	mov	r4, r0
 80095d8:	f020 fb81 	bl	8029cde <_ZdlPvj>
 80095dc:	4620      	mov	r0, r4
 80095de:	bd10      	pop	{r4, pc}

080095e0 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 80095e0:	f1a0 0004 	sub.w	r0, r0, #4
 80095e4:	e7f5      	b.n	80095d2 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

080095e6 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 80095e6:	4770      	bx	lr

080095e8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 80095e8:	b510      	push	{r4, lr}
 80095ea:	2200      	movs	r2, #0
 80095ec:	6082      	str	r2, [r0, #8]
    : view(v)
 80095ee:	4a04      	ldr	r2, [pc, #16]	; (8009600 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 80095f0:	60c1      	str	r1, [r0, #12]
 80095f2:	f102 0408 	add.w	r4, r2, #8
 80095f6:	3224      	adds	r2, #36	; 0x24
 80095f8:	6004      	str	r4, [r0, #0]
 80095fa:	6042      	str	r2, [r0, #4]
}
 80095fc:	bd10      	pop	{r4, pc}
 80095fe:	bf00      	nop
 8009600:	0802e850 	.word	0x0802e850

08009604 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8009604:	4770      	bx	lr
	...

08009608 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8009608:	b510      	push	{r4, lr}
 800960a:	4b03      	ldr	r3, [pc, #12]	; (8009618 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 800960c:	6003      	str	r3, [r0, #0]
 800960e:	4604      	mov	r4, r0
 8009610:	f7fd fd88 	bl	8007124 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8009614:	4620      	mov	r0, r4
 8009616:	bd10      	pop	{r4, pc}
 8009618:	0802e888 	.word	0x0802e888

0800961c <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 800961c:	b510      	push	{r4, lr}
 800961e:	4604      	mov	r4, r0
 8009620:	f7ff fff2 	bl	8009608 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8009624:	4620      	mov	r0, r4
 8009626:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800962a:	f020 fb58 	bl	8029cde <_ZdlPvj>
 800962e:	4620      	mov	r0, r4
 8009630:	bd10      	pop	{r4, pc}
	...

08009634 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8009634:	b510      	push	{r4, lr}
 8009636:	4604      	mov	r4, r0
 8009638:	f7fd fd94 	bl	8007164 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 800963c:	4b01      	ldr	r3, [pc, #4]	; (8009644 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800963e:	6023      	str	r3, [r4, #0]
}
 8009640:	4620      	mov	r0, r4
 8009642:	bd10      	pop	{r4, pc}
 8009644:	0802e888 	.word	0x0802e888

08009648 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8009648:	f7fd bd5d 	b.w	8007106 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800964c <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800964c:	4770      	bx	lr

0800964e <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800964e:	3804      	subs	r0, #4
 8009650:	4770      	bx	lr

08009652 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8009652:	4770      	bx	lr

08009654 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8009654:	4770      	bx	lr

08009656 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8009656:	b510      	push	{r4, lr}
 8009658:	2110      	movs	r1, #16
 800965a:	4604      	mov	r4, r0
 800965c:	f020 fb3f 	bl	8029cde <_ZdlPvj>
 8009660:	4620      	mov	r0, r4
 8009662:	bd10      	pop	{r4, pc}

08009664 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8009664:	f1a0 0004 	sub.w	r0, r0, #4
 8009668:	e7f5      	b.n	8009656 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800966a <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800966a:	4770      	bx	lr

0800966c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800966c:	b510      	push	{r4, lr}
 800966e:	2200      	movs	r2, #0
 8009670:	6082      	str	r2, [r0, #8]
    : view(v)
 8009672:	4a04      	ldr	r2, [pc, #16]	; (8009684 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8009674:	60c1      	str	r1, [r0, #12]
 8009676:	f102 0408 	add.w	r4, r2, #8
 800967a:	3224      	adds	r2, #36	; 0x24
 800967c:	6004      	str	r4, [r0, #0]
 800967e:	6042      	str	r2, [r0, #4]
}
 8009680:	bd10      	pop	{r4, pc}
 8009682:	bf00      	nop
 8009684:	0802e8b4 	.word	0x0802e8b4

08009688 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8009688:	4770      	bx	lr
	...

0800968c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800968c:	b510      	push	{r4, lr}
 800968e:	4b03      	ldr	r3, [pc, #12]	; (800969c <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8009690:	6003      	str	r3, [r0, #0]
 8009692:	4604      	mov	r4, r0
 8009694:	f7fd ff0c 	bl	80074b0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8009698:	4620      	mov	r0, r4
 800969a:	bd10      	pop	{r4, pc}
 800969c:	0802e8ec 	.word	0x0802e8ec

080096a0 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80096a0:	b510      	push	{r4, lr}
 80096a2:	4604      	mov	r4, r0
 80096a4:	f7ff fff2 	bl	800968c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80096a8:	4620      	mov	r0, r4
 80096aa:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80096ae:	f020 fb16 	bl	8029cde <_ZdlPvj>
 80096b2:	4620      	mov	r0, r4
 80096b4:	bd10      	pop	{r4, pc}
	...

080096b8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 80096b8:	b510      	push	{r4, lr}
 80096ba:	4604      	mov	r4, r0
 80096bc:	f7fd ff18 	bl	80074f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 80096c0:	4b01      	ldr	r3, [pc, #4]	; (80096c8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 80096c2:	6023      	str	r3, [r4, #0]
}
 80096c4:	4620      	mov	r0, r4
 80096c6:	bd10      	pop	{r4, pc}
 80096c8:	0802e8ec 	.word	0x0802e8ec

080096cc <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 80096cc:	f7fd bee1 	b.w	8007492 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

080096d0 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 80096d0:	4770      	bx	lr

080096d2 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 80096d2:	3804      	subs	r0, #4
 80096d4:	4770      	bx	lr

080096d6 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 80096d6:	4770      	bx	lr

080096d8 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80096d8:	68c0      	ldr	r0, [r0, #12]
 80096da:	6803      	ldr	r3, [r0, #0]
 80096dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80096de:	4718      	bx	r3

080096e0 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80096e0:	f1a0 0004 	sub.w	r0, r0, #4
 80096e4:	f7ff bff8 	b.w	80096d8 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

080096e8 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 80096e8:	b510      	push	{r4, lr}
 80096ea:	2110      	movs	r1, #16
 80096ec:	4604      	mov	r4, r0
 80096ee:	f020 faf6 	bl	8029cde <_ZdlPvj>
 80096f2:	4620      	mov	r0, r4
 80096f4:	bd10      	pop	{r4, pc}

080096f6 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 80096f6:	f1a0 0004 	sub.w	r0, r0, #4
 80096fa:	e7f5      	b.n	80096e8 <_ZN27Measurement_SinglePresenterD0Ev>

080096fc <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 80096fc:	b510      	push	{r4, lr}
 80096fe:	2200      	movs	r2, #0
 8009700:	6082      	str	r2, [r0, #8]
    : view(v)
 8009702:	4a04      	ldr	r2, [pc, #16]	; (8009714 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8009704:	60c1      	str	r1, [r0, #12]
 8009706:	f102 0408 	add.w	r4, r2, #8
 800970a:	3224      	adds	r2, #36	; 0x24
 800970c:	6004      	str	r4, [r0, #0]
 800970e:	6042      	str	r2, [r0, #4]
}
 8009710:	bd10      	pop	{r4, pc}
 8009712:	bf00      	nop
 8009714:	0802e918 	.word	0x0802e918

08009718 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8009718:	4770      	bx	lr
	...

0800971c <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 800971c:	b510      	push	{r4, lr}
 800971e:	4b03      	ldr	r3, [pc, #12]	; (800972c <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8009720:	6003      	str	r3, [r0, #0]
 8009722:	4604      	mov	r4, r0
 8009724:	f7fe f87a 	bl	800781c <_ZN26Measurement_SingleViewBaseD1Ev>
 8009728:	4620      	mov	r0, r4
 800972a:	bd10      	pop	{r4, pc}
 800972c:	0802e950 	.word	0x0802e950

08009730 <_ZN22Measurement_SingleViewD0Ev>:
 8009730:	b510      	push	{r4, lr}
 8009732:	4604      	mov	r4, r0
 8009734:	f7ff fff2 	bl	800971c <_ZN22Measurement_SingleViewD1Ev>
 8009738:	4620      	mov	r0, r4
 800973a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800973e:	f020 face 	bl	8029cde <_ZdlPvj>
 8009742:	4620      	mov	r0, r4
 8009744:	bd10      	pop	{r4, pc}
	...

08009748 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8009748:	b510      	push	{r4, lr}
 800974a:	4604      	mov	r4, r0
 800974c:	f7fe f8a0 	bl	8007890 <_ZN26Measurement_SingleViewBaseC1Ev>
 8009750:	4b01      	ldr	r3, [pc, #4]	; (8009758 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8009752:	6023      	str	r3, [r4, #0]
}
 8009754:	4620      	mov	r0, r4
 8009756:	bd10      	pop	{r4, pc}
 8009758:	0802e950 	.word	0x0802e950

0800975c <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800975c:	f7fe b83a 	b.w	80077d4 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08009760 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8009760:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009762:	4a0a      	ldr	r2, [pc, #40]	; (800978c <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8009764:	4605      	mov	r5, r0
 8009766:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009768:	460b      	mov	r3, r1
 800976a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800976e:	2104      	movs	r1, #4
 8009770:	f00f fbae 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009774:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009778:	f00d fb22 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800977c:	b92c      	cbnz	r4, 800978a <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800977e:	f00c fa37 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009782:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009786:	f7fb b929 	b.w	80049dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800978a:	bd38      	pop	{r3, r4, r5, pc}
 800978c:	0802e514 	.word	0x0802e514

08009790 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8009790:	4770      	bx	lr

08009792 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8009792:	3804      	subs	r0, #4
 8009794:	4770      	bx	lr

08009796 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8009796:	4770      	bx	lr

08009798 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8009798:	4770      	bx	lr

0800979a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800979a:	b510      	push	{r4, lr}
 800979c:	2110      	movs	r1, #16
 800979e:	4604      	mov	r4, r0
 80097a0:	f020 fa9d 	bl	8029cde <_ZdlPvj>
 80097a4:	4620      	mov	r0, r4
 80097a6:	bd10      	pop	{r4, pc}

080097a8 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80097a8:	f1a0 0004 	sub.w	r0, r0, #4
 80097ac:	e7f5      	b.n	800979a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080097ae <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80097ae:	4770      	bx	lr

080097b0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80097b0:	b510      	push	{r4, lr}
 80097b2:	2200      	movs	r2, #0
 80097b4:	6082      	str	r2, [r0, #8]
    : view(v)
 80097b6:	4a04      	ldr	r2, [pc, #16]	; (80097c8 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80097b8:	60c1      	str	r1, [r0, #12]
 80097ba:	f102 0408 	add.w	r4, r2, #8
 80097be:	3224      	adds	r2, #36	; 0x24
 80097c0:	6004      	str	r4, [r0, #0]
 80097c2:	6042      	str	r2, [r0, #4]
}
 80097c4:	bd10      	pop	{r4, pc}
 80097c6:	bf00      	nop
 80097c8:	0802e980 	.word	0x0802e980

080097cc <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 80097cc:	4770      	bx	lr
	...

080097d0 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 80097d0:	b510      	push	{r4, lr}
 80097d2:	4b03      	ldr	r3, [pc, #12]	; (80097e0 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 80097d4:	6003      	str	r3, [r0, #0]
 80097d6:	4604      	mov	r4, r0
 80097d8:	f7fe faa4 	bl	8007d24 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 80097dc:	4620      	mov	r0, r4
 80097de:	bd10      	pop	{r4, pc}
 80097e0:	0802e9b8 	.word	0x0802e9b8

080097e4 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 80097e4:	b510      	push	{r4, lr}
 80097e6:	4604      	mov	r4, r0
 80097e8:	f7ff fff2 	bl	80097d0 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 80097ec:	4620      	mov	r0, r4
 80097ee:	f241 31f8 	movw	r1, #5112	; 0x13f8
 80097f2:	f020 fa74 	bl	8029cde <_ZdlPvj>
 80097f6:	4620      	mov	r0, r4
 80097f8:	bd10      	pop	{r4, pc}
	...

080097fc <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 80097fc:	b510      	push	{r4, lr}
 80097fe:	4604      	mov	r4, r0
 8009800:	f7fe faca 	bl	8007d98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8009804:	4b01      	ldr	r3, [pc, #4]	; (800980c <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8009806:	6023      	str	r3, [r4, #0]
}
 8009808:	4620      	mov	r0, r4
 800980a:	bd10      	pop	{r4, pc}
 800980c:	0802e9b8 	.word	0x0802e9b8

08009810 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8009810:	f7fe ba63 	b.w	8007cda <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08009814 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8009814:	b530      	push	{r4, r5, lr}
 8009816:	4d27      	ldr	r5, [pc, #156]	; (80098b4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa0>)
 8009818:	4604      	mov	r4, r0
 800981a:	6828      	ldr	r0, [r5, #0]
#ifndef SIMULATOR
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();
 800981c:	6803      	ldr	r3, [r0, #0]
{
 800981e:	b089      	sub	sp, #36	; 0x24
	touchgfx::HAL::getInstance()->disableInterrupts();
 8009820:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009822:	4798      	blx	r3

	int test = 	0;

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);

	test = updateGUI_test();
 8009824:	f7f7 fcea 	bl	80011fc <updateGUI_test>
 8009828:	9001      	str	r0, [sp, #4]

	uint32_t* Samples = MEAS_start_measure();
 800982a:	f7f8 f9d5 	bl	8001bd8 <MEAS_start_measure>

	SINGLE_MEAS single_meas = single_measurement(Samples);
 800982e:	f7f7 fc1b 	bl	8001068 <single_measurement>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(single_meas.angle);
 8009832:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8009836:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 800983a:	ee17 1a90 	vmov	r1, s15
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800983e:	ed8d 0a04 	vstr	s0, [sp, #16]
 8009842:	edcd 0a05 	vstr	s1, [sp, #20]
 8009846:	ed8d 1a06 	vstr	s2, [sp, #24]
 800984a:	edcd 1a07 	vstr	s3, [sp, #28]
	SMD1_gauge.setValue(single_meas.angle);
 800984e:	9000      	str	r0, [sp, #0]
 8009850:	f009 fa62 	bl	8012d18 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8009854:	9800      	ldr	r0, [sp, #0]
 8009856:	f00d fab3 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 800985a:	9b01      	ldr	r3, [sp, #4]
 800985c:	4a16      	ldr	r2, [pc, #88]	; (80098b8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa4>)
 800985e:	210a      	movs	r1, #10
 8009860:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8009864:	f00f fb34 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8009868:	f504 7020 	add.w	r0, r4, #640	; 0x280
 800986c:	f00d faa8 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", single_meas.frequency);
 8009870:	9b06      	ldr	r3, [sp, #24]
 8009872:	4a12      	ldr	r2, [pc, #72]	; (80098bc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa8>)
 8009874:	9303      	str	r3, [sp, #12]
 8009876:	210a      	movs	r1, #10
 8009878:	ab03      	add	r3, sp, #12
 800987a:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 800987e:	f00f fd13 	bl	80192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8009882:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8009886:	f00d fa9b 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	//if(fft.error == CALC_ERROR_NONE)
	//{
		Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", single_meas.distance);
 800988a:	9b04      	ldr	r3, [sp, #16]
 800988c:	4a0b      	ldr	r2, [pc, #44]	; (80098bc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa8>)
 800988e:	9303      	str	r3, [sp, #12]
 8009890:	210a      	movs	r1, #10
 8009892:	ab03      	add	r3, sp, #12
 8009894:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8009898:	f00f fd06 	bl	80192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	//} else Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "Error");
	
	SMD1_Distance.invalidate();
 800989c:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80098a0:	f00d fa8e 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80098a4:	6828      	ldr	r0, [r5, #0]

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80098a6:	6803      	ldr	r3, [r0, #0]
 80098a8:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80098aa:	b009      	add	sp, #36	; 0x24
 80098ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 80098b0:	4718      	bx	r3
 80098b2:	bf00      	nop
 80098b4:	20012da4 	.word	0x20012da4
 80098b8:	0802e514 	.word	0x0802e514
 80098bc:	0802e580 	.word	0x0802e580

080098c0 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 80098c0:	4770      	bx	lr

080098c2 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 80098c2:	3804      	subs	r0, #4
 80098c4:	4770      	bx	lr

080098c6 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 80098c6:	4770      	bx	lr

080098c8 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 80098c8:	4770      	bx	lr

080098ca <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 80098ca:	b510      	push	{r4, lr}
 80098cc:	2110      	movs	r1, #16
 80098ce:	4604      	mov	r4, r0
 80098d0:	f020 fa05 	bl	8029cde <_ZdlPvj>
 80098d4:	4620      	mov	r0, r4
 80098d6:	bd10      	pop	{r4, pc}

080098d8 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 80098d8:	f1a0 0004 	sub.w	r0, r0, #4
 80098dc:	e7f5      	b.n	80098ca <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

080098de <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 80098de:	4770      	bx	lr

080098e0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 80098e0:	b510      	push	{r4, lr}
 80098e2:	2200      	movs	r2, #0
 80098e4:	6082      	str	r2, [r0, #8]
    : view(v)
 80098e6:	4a04      	ldr	r2, [pc, #16]	; (80098f8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 80098e8:	60c1      	str	r1, [r0, #12]
 80098ea:	f102 0408 	add.w	r4, r2, #8
 80098ee:	3224      	adds	r2, #36	; 0x24
 80098f0:	6004      	str	r4, [r0, #0]
 80098f2:	6042      	str	r2, [r0, #4]
}
 80098f4:	bd10      	pop	{r4, pc}
 80098f6:	bf00      	nop
 80098f8:	0802e9e8 	.word	0x0802e9e8

080098fc <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 80098fc:	4770      	bx	lr
	...

08009900 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8009900:	b510      	push	{r4, lr}
 8009902:	4b03      	ldr	r3, [pc, #12]	; (8009910 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009904:	6003      	str	r3, [r0, #0]
 8009906:	4604      	mov	r4, r0
 8009908:	f7fe fdb8 	bl	800847c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800990c:	4620      	mov	r0, r4
 800990e:	bd10      	pop	{r4, pc}
 8009910:	0802ea20 	.word	0x0802ea20

08009914 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009914:	b510      	push	{r4, lr}
 8009916:	4604      	mov	r4, r0
 8009918:	f7ff fff2 	bl	8009900 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800991c:	4620      	mov	r0, r4
 800991e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8009922:	f020 f9dc 	bl	8029cde <_ZdlPvj>
 8009926:	4620      	mov	r0, r4
 8009928:	bd10      	pop	{r4, pc}
	...

0800992c <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800992c:	b510      	push	{r4, lr}
 800992e:	4604      	mov	r4, r0
 8009930:	f7fe fdc4 	bl	80084bc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009934:	4b01      	ldr	r3, [pc, #4]	; (800993c <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8009936:	6023      	str	r3, [r4, #0]
}
 8009938:	4620      	mov	r0, r4
 800993a:	bd10      	pop	{r4, pc}
 800993c:	0802ea20 	.word	0x0802ea20

08009940 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8009940:	f7fe bd8b 	b.w	800845a <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009944 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009944:	2100      	movs	r1, #0
 8009946:	223c      	movs	r2, #60	; 0x3c
 8009948:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800994c:	4770      	bx	lr
	...

08009950 <_ZN5Model4tickEv>:

void Model::tick()
{
 8009950:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009952:	4d0a      	ldr	r5, [pc, #40]	; (800997c <_ZN5Model4tickEv+0x2c>)
{
 8009954:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009956:	6828      	ldr	r0, [r5, #0]
 8009958:	f004 f8ac 	bl	800dab4 <osMessageQueueGetCount>
 800995c:	b168      	cbz	r0, 800997a <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800995e:	2300      	movs	r3, #0
 8009960:	6828      	ldr	r0, [r5, #0]
 8009962:	461a      	mov	r2, r3
 8009964:	1d21      	adds	r1, r4, #4
 8009966:	f004 f871 	bl	800da4c <osMessageQueueGet>
 800996a:	b930      	cbnz	r0, 800997a <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800996c:	6820      	ldr	r0, [r4, #0]
 800996e:	6861      	ldr	r1, [r4, #4]
 8009970:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8009972:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8009976:	689b      	ldr	r3, [r3, #8]
 8009978:	4718      	bx	r3
}
 800997a:	bd70      	pop	{r4, r5, r6, pc}
 800997c:	2000018c 	.word	0x2000018c

08009980 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8009980:	4770      	bx	lr

08009982 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8009982:	3804      	subs	r0, #4
 8009984:	4770      	bx	lr

08009986 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8009986:	4770      	bx	lr

08009988 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009988:	68c0      	ldr	r0, [r0, #12]
 800998a:	6803      	ldr	r3, [r0, #0]
 800998c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800998e:	4718      	bx	r3

08009990 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009990:	f1a0 0004 	sub.w	r0, r0, #4
 8009994:	f7ff bff8 	b.w	8009988 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08009998 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8009998:	b510      	push	{r4, lr}
 800999a:	2110      	movs	r1, #16
 800999c:	4604      	mov	r4, r0
 800999e:	f020 f99e 	bl	8029cde <_ZdlPvj>
 80099a2:	4620      	mov	r0, r4
 80099a4:	bd10      	pop	{r4, pc}

080099a6 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80099a6:	f1a0 0004 	sub.w	r0, r0, #4
 80099aa:	e7f5      	b.n	8009998 <_ZN21Project_InfoPresenterD0Ev>

080099ac <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 80099ac:	b510      	push	{r4, lr}
 80099ae:	2200      	movs	r2, #0
 80099b0:	6082      	str	r2, [r0, #8]
    : view(v)
 80099b2:	4a04      	ldr	r2, [pc, #16]	; (80099c4 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 80099b4:	60c1      	str	r1, [r0, #12]
 80099b6:	f102 0408 	add.w	r4, r2, #8
 80099ba:	3224      	adds	r2, #36	; 0x24
 80099bc:	6004      	str	r4, [r0, #0]
 80099be:	6042      	str	r2, [r0, #4]
}
 80099c0:	bd10      	pop	{r4, pc}
 80099c2:	bf00      	nop
 80099c4:	0802ea4c 	.word	0x0802ea4c

080099c8 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 80099c8:	4770      	bx	lr
	...

080099cc <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 80099cc:	b510      	push	{r4, lr}
 80099ce:	4b03      	ldr	r3, [pc, #12]	; (80099dc <_ZN16Project_InfoViewD1Ev+0x10>)
 80099d0:	6003      	str	r3, [r0, #0]
 80099d2:	4604      	mov	r4, r0
 80099d4:	f7fe ff0c 	bl	80087f0 <_ZN20Project_InfoViewBaseD1Ev>
 80099d8:	4620      	mov	r0, r4
 80099da:	bd10      	pop	{r4, pc}
 80099dc:	0802ea84 	.word	0x0802ea84

080099e0 <_ZN16Project_InfoViewD0Ev>:
 80099e0:	b510      	push	{r4, lr}
 80099e2:	4604      	mov	r4, r0
 80099e4:	f7ff fff2 	bl	80099cc <_ZN16Project_InfoViewD1Ev>
 80099e8:	4620      	mov	r0, r4
 80099ea:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80099ee:	f020 f976 	bl	8029cde <_ZdlPvj>
 80099f2:	4620      	mov	r0, r4
 80099f4:	bd10      	pop	{r4, pc}
	...

080099f8 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 80099f8:	b510      	push	{r4, lr}
 80099fa:	4604      	mov	r4, r0
 80099fc:	f7fe ff20 	bl	8008840 <_ZN20Project_InfoViewBaseC1Ev>
 8009a00:	4b01      	ldr	r3, [pc, #4]	; (8009a08 <_ZN16Project_InfoViewC1Ev+0x10>)
 8009a02:	6023      	str	r3, [r4, #0]
}
 8009a04:	4620      	mov	r0, r4
 8009a06:	bd10      	pop	{r4, pc}
 8009a08:	0802ea84 	.word	0x0802ea84

08009a0c <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009a0c:	f7fe becc 	b.w	80087a8 <_ZN20Project_InfoViewBase11setupScreenEv>

08009a10 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8009a10:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009a12:	4a0a      	ldr	r2, [pc, #40]	; (8009a3c <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009a14:	4605      	mov	r5, r0
 8009a16:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009a18:	460b      	mov	r3, r1
 8009a1a:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8009a1e:	2104      	movs	r1, #4
 8009a20:	f00f fa56 	bl	8018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009a24:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009a28:	f00d f9ca 	bl	8016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8009a2c:	b92c      	cbnz	r4, 8009a3a <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8009a2e:	f00c f8df 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009a32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009a36:	f7fa bfd1 	b.w	80049dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009a3a:	bd38      	pop	{r3, r4, r5, pc}
 8009a3c:	0802e514 	.word	0x0802e514

08009a40 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8009a40:	4770      	bx	lr

08009a42 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8009a42:	3804      	subs	r0, #4
 8009a44:	4770      	bx	lr

08009a46 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8009a46:	4770      	bx	lr

08009a48 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8009a48:	4770      	bx	lr

08009a4a <_ZN21Shutting_OffPresenterD0Ev>:
 8009a4a:	b510      	push	{r4, lr}
 8009a4c:	2110      	movs	r1, #16
 8009a4e:	4604      	mov	r4, r0
 8009a50:	f020 f945 	bl	8029cde <_ZdlPvj>
 8009a54:	4620      	mov	r0, r4
 8009a56:	bd10      	pop	{r4, pc}

08009a58 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8009a58:	f1a0 0004 	sub.w	r0, r0, #4
 8009a5c:	e7f5      	b.n	8009a4a <_ZN21Shutting_OffPresenterD0Ev>

08009a5e <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8009a5e:	4770      	bx	lr

08009a60 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8009a60:	b510      	push	{r4, lr}
 8009a62:	2200      	movs	r2, #0
 8009a64:	6082      	str	r2, [r0, #8]
    : view(v)
 8009a66:	4a04      	ldr	r2, [pc, #16]	; (8009a78 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8009a68:	60c1      	str	r1, [r0, #12]
 8009a6a:	f102 0408 	add.w	r4, r2, #8
 8009a6e:	3224      	adds	r2, #36	; 0x24
 8009a70:	6004      	str	r4, [r0, #0]
 8009a72:	6042      	str	r2, [r0, #4]
}
 8009a74:	bd10      	pop	{r4, pc}
 8009a76:	bf00      	nop
 8009a78:	0802eab4 	.word	0x0802eab4

08009a7c <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8009a7c:	4770      	bx	lr
	...

08009a80 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8009a80:	b510      	push	{r4, lr}
 8009a82:	4b03      	ldr	r3, [pc, #12]	; (8009a90 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8009a84:	6003      	str	r3, [r0, #0]
 8009a86:	4604      	mov	r4, r0
 8009a88:	f7ff f8a8 	bl	8008bdc <_ZN20Shutting_OffViewBaseD1Ev>
 8009a8c:	4620      	mov	r0, r4
 8009a8e:	bd10      	pop	{r4, pc}
 8009a90:	0802eaec 	.word	0x0802eaec

08009a94 <_ZN16Shutting_OffViewD0Ev>:
 8009a94:	b510      	push	{r4, lr}
 8009a96:	4604      	mov	r4, r0
 8009a98:	f7ff fff2 	bl	8009a80 <_ZN16Shutting_OffViewD1Ev>
 8009a9c:	4620      	mov	r0, r4
 8009a9e:	2198      	movs	r1, #152	; 0x98
 8009aa0:	f020 f91d 	bl	8029cde <_ZdlPvj>
 8009aa4:	4620      	mov	r0, r4
 8009aa6:	bd10      	pop	{r4, pc}

08009aa8 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8009aa8:	b510      	push	{r4, lr}
 8009aaa:	4604      	mov	r4, r0
 8009aac:	f7ff f8a0 	bl	8008bf0 <_ZN20Shutting_OffViewBaseC1Ev>
 8009ab0:	4b01      	ldr	r3, [pc, #4]	; (8009ab8 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8009ab2:	6023      	str	r3, [r4, #0]
}
 8009ab4:	4620      	mov	r0, r4
 8009ab6:	bd10      	pop	{r4, pc}
 8009ab8:	0802eaec 	.word	0x0802eaec

08009abc <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009abc:	f7ff b88f 	b.w	8008bde <_ZN20Shutting_OffViewBase11setupScreenEv>

08009ac0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8009ac0:	20f0      	movs	r0, #240	; 0xf0
 8009ac2:	4770      	bx	lr

08009ac4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009ac4:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009ac8:	4770      	bx	lr
 8009aca:	bf00      	nop

08009acc <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009acc:	2029      	movs	r0, #41	; 0x29
 8009ace:	f7f7 befb 	b.w	80018c8 <LCD_IO_WriteReg>
 8009ad2:	bf00      	nop

08009ad4 <ili9341_DisplayOff>:
 8009ad4:	2028      	movs	r0, #40	; 0x28
 8009ad6:	f7f7 bef7 	b.w	80018c8 <LCD_IO_WriteReg>
 8009ada:	bf00      	nop

08009adc <ili9341_Init>:
{
 8009adc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009ade:	f7f7 feb9 	bl	8001854 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8009ae2:	20ca      	movs	r0, #202	; 0xca
 8009ae4:	f7f7 fef0 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ae8:	20c3      	movs	r0, #195	; 0xc3
 8009aea:	f7f7 fec3 	bl	8001874 <LCD_IO_WriteData>
 8009aee:	2008      	movs	r0, #8
 8009af0:	f7f7 fec0 	bl	8001874 <LCD_IO_WriteData>
 8009af4:	2050      	movs	r0, #80	; 0x50
 8009af6:	f7f7 febd 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009afa:	20cf      	movs	r0, #207	; 0xcf
 8009afc:	f7f7 fee4 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b00:	2000      	movs	r0, #0
 8009b02:	f7f7 feb7 	bl	8001874 <LCD_IO_WriteData>
 8009b06:	20c1      	movs	r0, #193	; 0xc1
 8009b08:	f7f7 feb4 	bl	8001874 <LCD_IO_WriteData>
 8009b0c:	2030      	movs	r0, #48	; 0x30
 8009b0e:	f7f7 feb1 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b12:	20ed      	movs	r0, #237	; 0xed
 8009b14:	f7f7 fed8 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b18:	2064      	movs	r0, #100	; 0x64
 8009b1a:	f7f7 feab 	bl	8001874 <LCD_IO_WriteData>
 8009b1e:	2003      	movs	r0, #3
 8009b20:	f7f7 fea8 	bl	8001874 <LCD_IO_WriteData>
 8009b24:	2012      	movs	r0, #18
 8009b26:	f7f7 fea5 	bl	8001874 <LCD_IO_WriteData>
 8009b2a:	2081      	movs	r0, #129	; 0x81
 8009b2c:	f7f7 fea2 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b30:	20e8      	movs	r0, #232	; 0xe8
 8009b32:	f7f7 fec9 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b36:	2085      	movs	r0, #133	; 0x85
 8009b38:	f7f7 fe9c 	bl	8001874 <LCD_IO_WriteData>
 8009b3c:	2000      	movs	r0, #0
 8009b3e:	f7f7 fe99 	bl	8001874 <LCD_IO_WriteData>
 8009b42:	2078      	movs	r0, #120	; 0x78
 8009b44:	f7f7 fe96 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b48:	20cb      	movs	r0, #203	; 0xcb
 8009b4a:	f7f7 febd 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b4e:	2039      	movs	r0, #57	; 0x39
 8009b50:	f7f7 fe90 	bl	8001874 <LCD_IO_WriteData>
 8009b54:	202c      	movs	r0, #44	; 0x2c
 8009b56:	f7f7 fe8d 	bl	8001874 <LCD_IO_WriteData>
 8009b5a:	2000      	movs	r0, #0
 8009b5c:	f7f7 fe8a 	bl	8001874 <LCD_IO_WriteData>
 8009b60:	2034      	movs	r0, #52	; 0x34
 8009b62:	f7f7 fe87 	bl	8001874 <LCD_IO_WriteData>
 8009b66:	2002      	movs	r0, #2
 8009b68:	f7f7 fe84 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b6c:	20f7      	movs	r0, #247	; 0xf7
 8009b6e:	f7f7 feab 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b72:	2020      	movs	r0, #32
 8009b74:	f7f7 fe7e 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b78:	20ea      	movs	r0, #234	; 0xea
 8009b7a:	f7f7 fea5 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b7e:	2000      	movs	r0, #0
 8009b80:	f7f7 fe78 	bl	8001874 <LCD_IO_WriteData>
 8009b84:	2000      	movs	r0, #0
 8009b86:	f7f7 fe75 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b8a:	20b1      	movs	r0, #177	; 0xb1
 8009b8c:	f7f7 fe9c 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b90:	2000      	movs	r0, #0
 8009b92:	f7f7 fe6f 	bl	8001874 <LCD_IO_WriteData>
 8009b96:	201b      	movs	r0, #27
 8009b98:	f7f7 fe6c 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b9c:	20b6      	movs	r0, #182	; 0xb6
 8009b9e:	f7f7 fe93 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ba2:	200a      	movs	r0, #10
 8009ba4:	f7f7 fe66 	bl	8001874 <LCD_IO_WriteData>
 8009ba8:	20a2      	movs	r0, #162	; 0xa2
 8009baa:	f7f7 fe63 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bae:	20c0      	movs	r0, #192	; 0xc0
 8009bb0:	f7f7 fe8a 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bb4:	2010      	movs	r0, #16
 8009bb6:	f7f7 fe5d 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bba:	20c1      	movs	r0, #193	; 0xc1
 8009bbc:	f7f7 fe84 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bc0:	2010      	movs	r0, #16
 8009bc2:	f7f7 fe57 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bc6:	20c5      	movs	r0, #197	; 0xc5
 8009bc8:	f7f7 fe7e 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bcc:	2045      	movs	r0, #69	; 0x45
 8009bce:	f7f7 fe51 	bl	8001874 <LCD_IO_WriteData>
 8009bd2:	2015      	movs	r0, #21
 8009bd4:	f7f7 fe4e 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bd8:	20c7      	movs	r0, #199	; 0xc7
 8009bda:	f7f7 fe75 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bde:	2090      	movs	r0, #144	; 0x90
 8009be0:	f7f7 fe48 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009be4:	2036      	movs	r0, #54	; 0x36
 8009be6:	f7f7 fe6f 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bea:	20c8      	movs	r0, #200	; 0xc8
 8009bec:	f7f7 fe42 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bf0:	20f2      	movs	r0, #242	; 0xf2
 8009bf2:	f7f7 fe69 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bf6:	2000      	movs	r0, #0
 8009bf8:	f7f7 fe3c 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bfc:	20b0      	movs	r0, #176	; 0xb0
 8009bfe:	f7f7 fe63 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c02:	20c2      	movs	r0, #194	; 0xc2
 8009c04:	f7f7 fe36 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c08:	20b6      	movs	r0, #182	; 0xb6
 8009c0a:	f7f7 fe5d 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c0e:	200a      	movs	r0, #10
 8009c10:	f7f7 fe30 	bl	8001874 <LCD_IO_WriteData>
 8009c14:	20a7      	movs	r0, #167	; 0xa7
 8009c16:	f7f7 fe2d 	bl	8001874 <LCD_IO_WriteData>
 8009c1a:	2027      	movs	r0, #39	; 0x27
 8009c1c:	f7f7 fe2a 	bl	8001874 <LCD_IO_WriteData>
 8009c20:	2004      	movs	r0, #4
 8009c22:	f7f7 fe27 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c26:	202a      	movs	r0, #42	; 0x2a
 8009c28:	f7f7 fe4e 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c2c:	2000      	movs	r0, #0
 8009c2e:	f7f7 fe21 	bl	8001874 <LCD_IO_WriteData>
 8009c32:	2000      	movs	r0, #0
 8009c34:	f7f7 fe1e 	bl	8001874 <LCD_IO_WriteData>
 8009c38:	2000      	movs	r0, #0
 8009c3a:	f7f7 fe1b 	bl	8001874 <LCD_IO_WriteData>
 8009c3e:	20ef      	movs	r0, #239	; 0xef
 8009c40:	f7f7 fe18 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c44:	202b      	movs	r0, #43	; 0x2b
 8009c46:	f7f7 fe3f 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c4a:	2000      	movs	r0, #0
 8009c4c:	f7f7 fe12 	bl	8001874 <LCD_IO_WriteData>
 8009c50:	2000      	movs	r0, #0
 8009c52:	f7f7 fe0f 	bl	8001874 <LCD_IO_WriteData>
 8009c56:	2001      	movs	r0, #1
 8009c58:	f7f7 fe0c 	bl	8001874 <LCD_IO_WriteData>
 8009c5c:	203f      	movs	r0, #63	; 0x3f
 8009c5e:	f7f7 fe09 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c62:	20f6      	movs	r0, #246	; 0xf6
 8009c64:	f7f7 fe30 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c68:	2001      	movs	r0, #1
 8009c6a:	f7f7 fe03 	bl	8001874 <LCD_IO_WriteData>
 8009c6e:	2000      	movs	r0, #0
 8009c70:	f7f7 fe00 	bl	8001874 <LCD_IO_WriteData>
 8009c74:	2006      	movs	r0, #6
 8009c76:	f7f7 fdfd 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c7a:	202c      	movs	r0, #44	; 0x2c
 8009c7c:	f7f7 fe24 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009c80:	20c8      	movs	r0, #200	; 0xc8
 8009c82:	f7f7 fe89 	bl	8001998 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009c86:	2026      	movs	r0, #38	; 0x26
 8009c88:	f7f7 fe1e 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c8c:	2001      	movs	r0, #1
 8009c8e:	f7f7 fdf1 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c92:	20e0      	movs	r0, #224	; 0xe0
 8009c94:	f7f7 fe18 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c98:	200f      	movs	r0, #15
 8009c9a:	f7f7 fdeb 	bl	8001874 <LCD_IO_WriteData>
 8009c9e:	2029      	movs	r0, #41	; 0x29
 8009ca0:	f7f7 fde8 	bl	8001874 <LCD_IO_WriteData>
 8009ca4:	2024      	movs	r0, #36	; 0x24
 8009ca6:	f7f7 fde5 	bl	8001874 <LCD_IO_WriteData>
 8009caa:	200c      	movs	r0, #12
 8009cac:	f7f7 fde2 	bl	8001874 <LCD_IO_WriteData>
 8009cb0:	200e      	movs	r0, #14
 8009cb2:	f7f7 fddf 	bl	8001874 <LCD_IO_WriteData>
 8009cb6:	2009      	movs	r0, #9
 8009cb8:	f7f7 fddc 	bl	8001874 <LCD_IO_WriteData>
 8009cbc:	204e      	movs	r0, #78	; 0x4e
 8009cbe:	f7f7 fdd9 	bl	8001874 <LCD_IO_WriteData>
 8009cc2:	2078      	movs	r0, #120	; 0x78
 8009cc4:	f7f7 fdd6 	bl	8001874 <LCD_IO_WriteData>
 8009cc8:	203c      	movs	r0, #60	; 0x3c
 8009cca:	f7f7 fdd3 	bl	8001874 <LCD_IO_WriteData>
 8009cce:	2009      	movs	r0, #9
 8009cd0:	f7f7 fdd0 	bl	8001874 <LCD_IO_WriteData>
 8009cd4:	2013      	movs	r0, #19
 8009cd6:	f7f7 fdcd 	bl	8001874 <LCD_IO_WriteData>
 8009cda:	2005      	movs	r0, #5
 8009cdc:	f7f7 fdca 	bl	8001874 <LCD_IO_WriteData>
 8009ce0:	2017      	movs	r0, #23
 8009ce2:	f7f7 fdc7 	bl	8001874 <LCD_IO_WriteData>
 8009ce6:	2011      	movs	r0, #17
 8009ce8:	f7f7 fdc4 	bl	8001874 <LCD_IO_WriteData>
 8009cec:	2000      	movs	r0, #0
 8009cee:	f7f7 fdc1 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cf2:	20e1      	movs	r0, #225	; 0xe1
 8009cf4:	f7f7 fde8 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cf8:	2000      	movs	r0, #0
 8009cfa:	f7f7 fdbb 	bl	8001874 <LCD_IO_WriteData>
 8009cfe:	2016      	movs	r0, #22
 8009d00:	f7f7 fdb8 	bl	8001874 <LCD_IO_WriteData>
 8009d04:	201b      	movs	r0, #27
 8009d06:	f7f7 fdb5 	bl	8001874 <LCD_IO_WriteData>
 8009d0a:	2004      	movs	r0, #4
 8009d0c:	f7f7 fdb2 	bl	8001874 <LCD_IO_WriteData>
 8009d10:	2011      	movs	r0, #17
 8009d12:	f7f7 fdaf 	bl	8001874 <LCD_IO_WriteData>
 8009d16:	2007      	movs	r0, #7
 8009d18:	f7f7 fdac 	bl	8001874 <LCD_IO_WriteData>
 8009d1c:	2031      	movs	r0, #49	; 0x31
 8009d1e:	f7f7 fda9 	bl	8001874 <LCD_IO_WriteData>
 8009d22:	2033      	movs	r0, #51	; 0x33
 8009d24:	f7f7 fda6 	bl	8001874 <LCD_IO_WriteData>
 8009d28:	2042      	movs	r0, #66	; 0x42
 8009d2a:	f7f7 fda3 	bl	8001874 <LCD_IO_WriteData>
 8009d2e:	2005      	movs	r0, #5
 8009d30:	f7f7 fda0 	bl	8001874 <LCD_IO_WriteData>
 8009d34:	200c      	movs	r0, #12
 8009d36:	f7f7 fd9d 	bl	8001874 <LCD_IO_WriteData>
 8009d3a:	200a      	movs	r0, #10
 8009d3c:	f7f7 fd9a 	bl	8001874 <LCD_IO_WriteData>
 8009d40:	2028      	movs	r0, #40	; 0x28
 8009d42:	f7f7 fd97 	bl	8001874 <LCD_IO_WriteData>
 8009d46:	202f      	movs	r0, #47	; 0x2f
 8009d48:	f7f7 fd94 	bl	8001874 <LCD_IO_WriteData>
 8009d4c:	200f      	movs	r0, #15
 8009d4e:	f7f7 fd91 	bl	8001874 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d52:	2011      	movs	r0, #17
 8009d54:	f7f7 fdb8 	bl	80018c8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009d58:	20c8      	movs	r0, #200	; 0xc8
 8009d5a:	f7f7 fe1d 	bl	8001998 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009d5e:	2029      	movs	r0, #41	; 0x29
 8009d60:	f7f7 fdb2 	bl	80018c8 <LCD_IO_WriteReg>
}
 8009d64:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8009d68:	202c      	movs	r0, #44	; 0x2c
 8009d6a:	f7f7 bdad 	b.w	80018c8 <LCD_IO_WriteReg>
 8009d6e:	bf00      	nop

08009d70 <ili9341_ReadID>:
{
 8009d70:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009d72:	f7f7 fd6f 	bl	8001854 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8009d76:	2103      	movs	r1, #3
 8009d78:	20d3      	movs	r0, #211	; 0xd3
 8009d7a:	f7f7 fdcf 	bl	800191c <LCD_IO_ReadData>
}
 8009d7e:	b280      	uxth	r0, r0
 8009d80:	bd08      	pop	{r3, pc}
 8009d82:	bf00      	nop

08009d84 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8009d84:	221f      	movs	r2, #31
 8009d86:	210b      	movs	r1, #11
 8009d88:	b2c0      	uxtb	r0, r0
 8009d8a:	f7f7 bd15 	b.w	80017b8 <IOE_Write>
 8009d8e:	bf00      	nop

08009d90 <stmpe811_Reset>:
{
 8009d90:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009d92:	b2c4      	uxtb	r4, r0
 8009d94:	2202      	movs	r2, #2
 8009d96:	2103      	movs	r1, #3
 8009d98:	4620      	mov	r0, r4
 8009d9a:	f7f7 fd0d 	bl	80017b8 <IOE_Write>
  IOE_Delay(10); 
 8009d9e:	200a      	movs	r0, #10
 8009da0:	f7f7 fd56 	bl	8001850 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009da4:	4620      	mov	r0, r4
 8009da6:	2200      	movs	r2, #0
 8009da8:	2103      	movs	r1, #3
 8009daa:	f7f7 fd05 	bl	80017b8 <IOE_Write>
}
 8009dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009db2:	2002      	movs	r0, #2
 8009db4:	f7f7 bd4c 	b.w	8001850 <IOE_Delay>

08009db8 <stmpe811_ReadID>:
{
 8009db8:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009dba:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009dbc:	f7f7 fcf8 	bl	80017b0 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009dc0:	2100      	movs	r1, #0
 8009dc2:	4620      	mov	r0, r4
 8009dc4:	f7f7 fd10 	bl	80017e8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009dc8:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009dca:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009dcc:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009dce:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009dd0:	f7f7 fd0a 	bl	80017e8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009dd4:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009dd8:	b280      	uxth	r0, r0
 8009dda:	bd10      	pop	{r4, pc}

08009ddc <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009ddc:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009dde:	b2c4      	uxtb	r4, r0
 8009de0:	2140      	movs	r1, #64	; 0x40
 8009de2:	4620      	mov	r0, r4
 8009de4:	f7f7 fd00 	bl	80017e8 <IOE_Read>
  
  if(state > 0)
 8009de8:	0603      	lsls	r3, r0, #24
 8009dea:	d40b      	bmi.n	8009e04 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009dec:	4620      	mov	r0, r4
 8009dee:	2201      	movs	r2, #1
 8009df0:	214b      	movs	r1, #75	; 0x4b
 8009df2:	f7f7 fce1 	bl	80017b8 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009df6:	4620      	mov	r0, r4
 8009df8:	2200      	movs	r2, #0
 8009dfa:	214b      	movs	r1, #75	; 0x4b
 8009dfc:	f7f7 fcdc 	bl	80017b8 <IOE_Write>
  uint8_t ret = 0;
 8009e00:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8009e02:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009e04:	214c      	movs	r1, #76	; 0x4c
 8009e06:	4620      	mov	r0, r4
 8009e08:	f7f7 fcee 	bl	80017e8 <IOE_Read>
      ret = 1;
 8009e0c:	3800      	subs	r0, #0
 8009e0e:	bf18      	it	ne
 8009e10:	2001      	movne	r0, #1
}
 8009e12:	bd10      	pop	{r4, pc}

08009e14 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009e14:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009e16:	210b      	movs	r1, #11
 8009e18:	b2c0      	uxtb	r0, r0
 8009e1a:	f7f7 fce5 	bl	80017e8 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8009e1e:	f000 001f 	and.w	r0, r0, #31
 8009e22:	bd08      	pop	{r3, pc}

08009e24 <stmpe811_TS_GetXY>:
{
 8009e24:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009e26:	2304      	movs	r3, #4
{
 8009e28:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009e2a:	b2c4      	uxtb	r4, r0
{
 8009e2c:	4615      	mov	r5, r2
 8009e2e:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009e30:	eb0d 0203 	add.w	r2, sp, r3
 8009e34:	21d7      	movs	r1, #215	; 0xd7
 8009e36:	4620      	mov	r0, r4
 8009e38:	f7f7 fcf2 	bl	8001820 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009e3c:	9b01      	ldr	r3, [sp, #4]
 8009e3e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009e40:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009e42:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009e46:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009e48:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009e4a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009e4c:	2201      	movs	r2, #1
 8009e4e:	214b      	movs	r1, #75	; 0x4b
 8009e50:	f7f7 fcb2 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009e54:	2200      	movs	r2, #0
 8009e56:	214b      	movs	r1, #75	; 0x4b
 8009e58:	4620      	mov	r0, r4
 8009e5a:	f7f7 fcad 	bl	80017b8 <IOE_Write>
}
 8009e5e:	b002      	add	sp, #8
 8009e60:	bd70      	pop	{r4, r5, r6, pc}
 8009e62:	bf00      	nop

08009e64 <stmpe811_TS_Start>:
{
 8009e64:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009e66:	b2c4      	uxtb	r4, r0
 8009e68:	2104      	movs	r1, #4
 8009e6a:	4620      	mov	r0, r4
 8009e6c:	f7f7 fcbc 	bl	80017e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009e70:	2104      	movs	r1, #4
 8009e72:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009e76:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009e78:	4620      	mov	r0, r4
 8009e7a:	f7f7 fc9d 	bl	80017b8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8009e7e:	2117      	movs	r1, #23
 8009e80:	4620      	mov	r0, r4
 8009e82:	f7f7 fcb1 	bl	80017e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8009e86:	2117      	movs	r1, #23
 8009e88:	f000 020f 	and.w	r2, r0, #15
 8009e8c:	4620      	mov	r0, r4
 8009e8e:	f7f7 fc93 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009e92:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8009e96:	4620      	mov	r0, r4
 8009e98:	2104      	movs	r1, #4
 8009e9a:	f7f7 fc8d 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8009e9e:	2249      	movs	r2, #73	; 0x49
 8009ea0:	2120      	movs	r1, #32
 8009ea2:	4620      	mov	r0, r4
 8009ea4:	f7f7 fc88 	bl	80017b8 <IOE_Write>
  IOE_Delay(2); 
 8009ea8:	2002      	movs	r0, #2
 8009eaa:	f7f7 fcd1 	bl	8001850 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009eae:	4620      	mov	r0, r4
 8009eb0:	2201      	movs	r2, #1
 8009eb2:	2121      	movs	r1, #33	; 0x21
 8009eb4:	f7f7 fc80 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009eb8:	4620      	mov	r0, r4
 8009eba:	229a      	movs	r2, #154	; 0x9a
 8009ebc:	2141      	movs	r1, #65	; 0x41
 8009ebe:	f7f7 fc7b 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8009ec2:	4620      	mov	r0, r4
 8009ec4:	2201      	movs	r2, #1
 8009ec6:	214a      	movs	r1, #74	; 0x4a
 8009ec8:	f7f7 fc76 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009ecc:	4620      	mov	r0, r4
 8009ece:	2201      	movs	r2, #1
 8009ed0:	214b      	movs	r1, #75	; 0x4b
 8009ed2:	f7f7 fc71 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009ed6:	4620      	mov	r0, r4
 8009ed8:	2200      	movs	r2, #0
 8009eda:	214b      	movs	r1, #75	; 0x4b
 8009edc:	f7f7 fc6c 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009ee0:	4620      	mov	r0, r4
 8009ee2:	2201      	movs	r2, #1
 8009ee4:	2156      	movs	r1, #86	; 0x56
 8009ee6:	f7f7 fc67 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009eea:	4620      	mov	r0, r4
 8009eec:	2201      	movs	r2, #1
 8009eee:	2158      	movs	r1, #88	; 0x58
 8009ef0:	f7f7 fc62 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009ef4:	4620      	mov	r0, r4
 8009ef6:	2201      	movs	r2, #1
 8009ef8:	2140      	movs	r1, #64	; 0x40
 8009efa:	f7f7 fc5d 	bl	80017b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8009efe:	4620      	mov	r0, r4
 8009f00:	22ff      	movs	r2, #255	; 0xff
 8009f02:	210b      	movs	r1, #11
 8009f04:	f7f7 fc58 	bl	80017b8 <IOE_Write>
}
 8009f08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009f0c:	2002      	movs	r0, #2
 8009f0e:	f7f7 bc9f 	b.w	8001850 <IOE_Delay>
 8009f12:	bf00      	nop

08009f14 <stmpe811_TS_DisableIT>:
{
 8009f14:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009f16:	b2c4      	uxtb	r4, r0
 8009f18:	2109      	movs	r1, #9
 8009f1a:	4620      	mov	r0, r4
 8009f1c:	f7f7 fc64 	bl	80017e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009f20:	2109      	movs	r1, #9
 8009f22:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8009f26:	4620      	mov	r0, r4
 8009f28:	f7f7 fc46 	bl	80017b8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009f2c:	210a      	movs	r1, #10
 8009f2e:	4620      	mov	r0, r4
 8009f30:	f7f7 fc5a 	bl	80017e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009f34:	210a      	movs	r1, #10
 8009f36:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8009f3a:	4620      	mov	r0, r4
}
 8009f3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009f40:	f7f7 bc3a 	b.w	80017b8 <IOE_Write>

08009f44 <stmpe811_TS_EnableIT>:
{
 8009f44:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009f46:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009f48:	f7f7 fc34 	bl	80017b4 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009f4c:	210a      	movs	r1, #10
 8009f4e:	4620      	mov	r0, r4
 8009f50:	f7f7 fc4a 	bl	80017e8 <IOE_Read>
  tmp |= Source; 
 8009f54:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009f58:	b2c2      	uxtb	r2, r0
 8009f5a:	210a      	movs	r1, #10
 8009f5c:	4620      	mov	r0, r4
 8009f5e:	f7f7 fc2b 	bl	80017b8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009f62:	2109      	movs	r1, #9
 8009f64:	4620      	mov	r0, r4
 8009f66:	f7f7 fc3f 	bl	80017e8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8009f6a:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009f6e:	b2c2      	uxtb	r2, r0
 8009f70:	2109      	movs	r1, #9
 8009f72:	4620      	mov	r0, r4
}
 8009f74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009f78:	f7f7 bc1e 	b.w	80017b8 <IOE_Write>

08009f7c <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8009f7c:	4a10      	ldr	r2, [pc, #64]	; (8009fc0 <stmpe811_Init+0x44>)
 8009f7e:	7813      	ldrb	r3, [r2, #0]
 8009f80:	4298      	cmp	r0, r3
 8009f82:	d004      	beq.n	8009f8e <stmpe811_Init+0x12>
 8009f84:	7851      	ldrb	r1, [r2, #1]
 8009f86:	4288      	cmp	r0, r1
 8009f88:	d001      	beq.n	8009f8e <stmpe811_Init+0x12>
 8009f8a:	b113      	cbz	r3, 8009f92 <stmpe811_Init+0x16>
 8009f8c:	b101      	cbz	r1, 8009f90 <stmpe811_Init+0x14>
 8009f8e:	4770      	bx	lr
 8009f90:	2301      	movs	r3, #1
{
 8009f92:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8009f94:	b2c4      	uxtb	r4, r0
 8009f96:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8009f98:	f7f7 fc0a 	bl	80017b0 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009f9c:	2202      	movs	r2, #2
 8009f9e:	2103      	movs	r1, #3
 8009fa0:	4620      	mov	r0, r4
 8009fa2:	f7f7 fc09 	bl	80017b8 <IOE_Write>
  IOE_Delay(10); 
 8009fa6:	200a      	movs	r0, #10
 8009fa8:	f7f7 fc52 	bl	8001850 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009fac:	4620      	mov	r0, r4
 8009fae:	2200      	movs	r2, #0
 8009fb0:	2103      	movs	r1, #3
 8009fb2:	f7f7 fc01 	bl	80017b8 <IOE_Write>
}
 8009fb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009fba:	2002      	movs	r0, #2
 8009fbc:	f7f7 bc48 	b.w	8001850 <IOE_Delay>
 8009fc0:	20001fa4 	.word	0x20001fa4

08009fc4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009fc4:	4b05      	ldr	r3, [pc, #20]	; (8009fdc <SystemInit+0x18>)
 8009fc6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009fca:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009fce:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009fd2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009fd6:	6099      	str	r1, [r3, #8]
#endif
}
 8009fd8:	4770      	bx	lr
 8009fda:	bf00      	nop
 8009fdc:	e000ed00 	.word	0xe000ed00

08009fe0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009fe0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009fe2:	4b0b      	ldr	r3, [pc, #44]	; (800a010 <HAL_Init+0x30>)
 8009fe4:	681a      	ldr	r2, [r3, #0]
 8009fe6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009fea:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009fec:	681a      	ldr	r2, [r3, #0]
 8009fee:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009ff2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009ff4:	681a      	ldr	r2, [r3, #0]
 8009ff6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009ffa:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009ffc:	2003      	movs	r0, #3
 8009ffe:	f000 f82d 	bl	800a05c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800a002:	2000      	movs	r0, #0
 800a004:	f7f8 f89a 	bl	800213c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800a008:	f7f7 fe1a 	bl	8001c40 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800a00c:	2000      	movs	r0, #0
 800a00e:	bd08      	pop	{r3, pc}
 800a010:	40023c00 	.word	0x40023c00

0800a014 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800a014:	4a03      	ldr	r2, [pc, #12]	; (800a024 <HAL_IncTick+0x10>)
 800a016:	4b04      	ldr	r3, [pc, #16]	; (800a028 <HAL_IncTick+0x14>)
 800a018:	6811      	ldr	r1, [r2, #0]
 800a01a:	781b      	ldrb	r3, [r3, #0]
 800a01c:	440b      	add	r3, r1
 800a01e:	6013      	str	r3, [r2, #0]
}
 800a020:	4770      	bx	lr
 800a022:	bf00      	nop
 800a024:	20001fa8 	.word	0x20001fa8
 800a028:	2000007c 	.word	0x2000007c

0800a02c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800a02c:	4b01      	ldr	r3, [pc, #4]	; (800a034 <HAL_GetTick+0x8>)
 800a02e:	6818      	ldr	r0, [r3, #0]
}
 800a030:	4770      	bx	lr
 800a032:	bf00      	nop
 800a034:	20001fa8 	.word	0x20001fa8

0800a038 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800a038:	b538      	push	{r3, r4, r5, lr}
 800a03a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800a03c:	f7ff fff6 	bl	800a02c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800a040:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800a042:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800a044:	d002      	beq.n	800a04c <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800a046:	4b04      	ldr	r3, [pc, #16]	; (800a058 <HAL_Delay+0x20>)
 800a048:	781b      	ldrb	r3, [r3, #0]
 800a04a:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800a04c:	f7ff ffee 	bl	800a02c <HAL_GetTick>
 800a050:	1b43      	subs	r3, r0, r5
 800a052:	42a3      	cmp	r3, r4
 800a054:	d3fa      	bcc.n	800a04c <HAL_Delay+0x14>
  {
  }
}
 800a056:	bd38      	pop	{r3, r4, r5, pc}
 800a058:	2000007c 	.word	0x2000007c

0800a05c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800a05c:	4907      	ldr	r1, [pc, #28]	; (800a07c <HAL_NVIC_SetPriorityGrouping+0x20>)
 800a05e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a060:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a062:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a066:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a06a:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800a06c:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800a06e:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800a072:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800a076:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800a078:	4770      	bx	lr
 800a07a:	bf00      	nop
 800a07c:	e000ed00 	.word	0xe000ed00

0800a080 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800a080:	4b1c      	ldr	r3, [pc, #112]	; (800a0f4 <HAL_NVIC_SetPriority+0x74>)
 800a082:	68db      	ldr	r3, [r3, #12]
 800a084:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800a088:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a08a:	f1c3 0e07 	rsb	lr, r3, #7
 800a08e:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a092:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a096:	bf28      	it	cs
 800a098:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a09c:	f1bc 0f06 	cmp.w	ip, #6
 800a0a0:	d91b      	bls.n	800a0da <HAL_NVIC_SetPriority+0x5a>
 800a0a2:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800a0a4:	f04f 3cff 	mov.w	ip, #4294967295
 800a0a8:	fa0c fc03 	lsl.w	ip, ip, r3
 800a0ac:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a0b0:	f04f 3cff 	mov.w	ip, #4294967295
 800a0b4:	fa0c fc0e 	lsl.w	ip, ip, lr
 800a0b8:	ea21 010c 	bic.w	r1, r1, ip
 800a0bc:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800a0be:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a0c0:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800a0c4:	db0c      	blt.n	800a0e0 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a0c6:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800a0ca:	0109      	lsls	r1, r1, #4
 800a0cc:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800a0d0:	b2c9      	uxtb	r1, r1
 800a0d2:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800a0d6:	f85d fb04 	ldr.w	pc, [sp], #4
 800a0da:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a0dc:	4613      	mov	r3, r2
 800a0de:	e7e7      	b.n	800a0b0 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a0e0:	4b05      	ldr	r3, [pc, #20]	; (800a0f8 <HAL_NVIC_SetPriority+0x78>)
 800a0e2:	f000 000f 	and.w	r0, r0, #15
 800a0e6:	0109      	lsls	r1, r1, #4
 800a0e8:	4403      	add	r3, r0
 800a0ea:	b2c9      	uxtb	r1, r1
 800a0ec:	7619      	strb	r1, [r3, #24]
 800a0ee:	f85d fb04 	ldr.w	pc, [sp], #4
 800a0f2:	bf00      	nop
 800a0f4:	e000ed00 	.word	0xe000ed00
 800a0f8:	e000ecfc 	.word	0xe000ecfc

0800a0fc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800a0fc:	2800      	cmp	r0, #0
 800a0fe:	db07      	blt.n	800a110 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a100:	0941      	lsrs	r1, r0, #5
 800a102:	4a04      	ldr	r2, [pc, #16]	; (800a114 <HAL_NVIC_EnableIRQ+0x18>)
 800a104:	f000 001f 	and.w	r0, r0, #31
 800a108:	2301      	movs	r3, #1
 800a10a:	4083      	lsls	r3, r0
 800a10c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800a110:	4770      	bx	lr
 800a112:	bf00      	nop
 800a114:	e000e100 	.word	0xe000e100

0800a118 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800a118:	b180      	cbz	r0, 800a13c <HAL_CRC_Init+0x24>
{
 800a11a:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800a11c:	7943      	ldrb	r3, [r0, #5]
 800a11e:	4604      	mov	r4, r0
 800a120:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a124:	b11b      	cbz	r3, 800a12e <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800a126:	2301      	movs	r3, #1
 800a128:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800a12a:	2000      	movs	r0, #0
}
 800a12c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800a12e:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800a130:	f7f7 fda6 	bl	8001c80 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800a134:	2301      	movs	r3, #1
 800a136:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800a138:	2000      	movs	r0, #0
}
 800a13a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a13c:	2001      	movs	r0, #1
}
 800a13e:	4770      	bx	lr

0800a140 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a140:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a144:	2b02      	cmp	r3, #2
 800a146:	d003      	beq.n	800a150 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800a148:	2380      	movs	r3, #128	; 0x80
 800a14a:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800a14c:	2001      	movs	r0, #1
 800a14e:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800a150:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800a152:	2305      	movs	r3, #5
 800a154:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800a158:	6813      	ldr	r3, [r2, #0]
 800a15a:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800a15e:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800a160:	6013      	str	r3, [r2, #0]
}
 800a162:	4770      	bx	lr

0800a164 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800a164:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800a168:	4770      	bx	lr
 800a16a:	bf00      	nop

0800a16c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800a16c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a170:	2200      	movs	r2, #0
 800a172:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a174:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a3d8 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800a178:	4e90      	ldr	r6, [pc, #576]	; (800a3bc <HAL_GPIO_Init+0x250>)
{
 800a17a:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a17c:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a17e:	4689      	mov	r9, r1
 800a180:	e005      	b.n	800a18e <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a182:	3301      	adds	r3, #1
 800a184:	2b10      	cmp	r3, #16
 800a186:	f102 0202 	add.w	r2, r2, #2
 800a18a:	f000 8095 	beq.w	800a2b8 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800a18e:	2101      	movs	r1, #1
 800a190:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a192:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800a196:	43a1      	bics	r1, r4
 800a198:	d1f3      	bne.n	800a182 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a19a:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800a19e:	f00c 0103 	and.w	r1, ip, #3
 800a1a2:	1e4d      	subs	r5, r1, #1
 800a1a4:	2d01      	cmp	r5, #1
 800a1a6:	f240 808a 	bls.w	800a2be <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800a1aa:	2903      	cmp	r1, #3
 800a1ac:	f040 80ca 	bne.w	800a344 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a1b0:	4091      	lsls	r1, r2
 800a1b2:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800a1b4:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800a1b6:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a1b8:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a1ba:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800a1be:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a1c0:	d0df      	beq.n	800a182 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a1c2:	2100      	movs	r1, #0
 800a1c4:	9103      	str	r1, [sp, #12]
 800a1c6:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a1ca:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800a1ce:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800a1d2:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a1d6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800a1da:	9103      	str	r1, [sp, #12]
 800a1dc:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800a1de:	f023 0103 	bic.w	r1, r3, #3
 800a1e2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800a1e6:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a1ea:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800a1ee:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a1f0:	00bf      	lsls	r7, r7, #2
 800a1f2:	f04f 0e0f 	mov.w	lr, #15
 800a1f6:	fa0e fe07 	lsl.w	lr, lr, r7
 800a1fa:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a1fe:	4d70      	ldr	r5, [pc, #448]	; (800a3c0 <HAL_GPIO_Init+0x254>)
 800a200:	42a8      	cmp	r0, r5
 800a202:	d02e      	beq.n	800a262 <HAL_GPIO_Init+0xf6>
 800a204:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800a208:	42a8      	cmp	r0, r5
 800a20a:	f000 809f 	beq.w	800a34c <HAL_GPIO_Init+0x1e0>
 800a20e:	4d6d      	ldr	r5, [pc, #436]	; (800a3c4 <HAL_GPIO_Init+0x258>)
 800a210:	42a8      	cmp	r0, r5
 800a212:	f000 80a2 	beq.w	800a35a <HAL_GPIO_Init+0x1ee>
 800a216:	4d6c      	ldr	r5, [pc, #432]	; (800a3c8 <HAL_GPIO_Init+0x25c>)
 800a218:	42a8      	cmp	r0, r5
 800a21a:	f000 80a5 	beq.w	800a368 <HAL_GPIO_Init+0x1fc>
 800a21e:	4d6b      	ldr	r5, [pc, #428]	; (800a3cc <HAL_GPIO_Init+0x260>)
 800a220:	42a8      	cmp	r0, r5
 800a222:	f000 80a8 	beq.w	800a376 <HAL_GPIO_Init+0x20a>
 800a226:	4d6a      	ldr	r5, [pc, #424]	; (800a3d0 <HAL_GPIO_Init+0x264>)
 800a228:	42a8      	cmp	r0, r5
 800a22a:	f000 80b2 	beq.w	800a392 <HAL_GPIO_Init+0x226>
 800a22e:	4d69      	ldr	r5, [pc, #420]	; (800a3d4 <HAL_GPIO_Init+0x268>)
 800a230:	42a8      	cmp	r0, r5
 800a232:	f000 80b5 	beq.w	800a3a0 <HAL_GPIO_Init+0x234>
 800a236:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a3dc <HAL_GPIO_Init+0x270>
 800a23a:	4570      	cmp	r0, lr
 800a23c:	f000 80a2 	beq.w	800a384 <HAL_GPIO_Init+0x218>
 800a240:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a3e0 <HAL_GPIO_Init+0x274>
 800a244:	4570      	cmp	r0, lr
 800a246:	f000 80b2 	beq.w	800a3ae <HAL_GPIO_Init+0x242>
 800a24a:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a3e4 <HAL_GPIO_Init+0x278>
 800a24e:	4570      	cmp	r0, lr
 800a250:	bf0c      	ite	eq
 800a252:	f04f 0e09 	moveq.w	lr, #9
 800a256:	f04f 0e0a 	movne.w	lr, #10
 800a25a:	fa0e f707 	lsl.w	r7, lr, r7
 800a25e:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800a262:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800a266:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800a268:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800a26c:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800a270:	bf0c      	ite	eq
 800a272:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a274:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800a278:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800a27a:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800a27c:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800a280:	bf0c      	ite	eq
 800a282:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a284:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800a288:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800a28a:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800a28c:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800a290:	bf0c      	ite	eq
 800a292:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a294:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800a298:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800a29a:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800a29c:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a2a0:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800a2a4:	bf0c      	ite	eq
 800a2a6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a2a8:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a2ac:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800a2ae:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a2b0:	f102 0202 	add.w	r2, r2, #2
 800a2b4:	f47f af6b 	bne.w	800a18e <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800a2b8:	b005      	add	sp, #20
 800a2ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a2be:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800a2c2:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a2c6:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a2ca:	2503      	movs	r5, #3
 800a2cc:	fa05 f802 	lsl.w	r8, r5, r2
 800a2d0:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a2d4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a2d8:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a2da:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a2dc:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a2e0:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a2e4:	409f      	lsls	r7, r3
 800a2e6:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a2ea:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a2ee:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a2f0:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a2f2:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a2f6:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a2fa:	4097      	lsls	r7, r2
 800a2fc:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a300:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a302:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a304:	fa01 f102 	lsl.w	r1, r1, r2
 800a308:	f47f af54 	bne.w	800a1b4 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a30c:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a310:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a314:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a318:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a31c:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a31e:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a322:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a326:	fa07 f708 	lsl.w	r7, r7, r8
 800a32a:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a32c:	270f      	movs	r7, #15
 800a32e:	fa07 f808 	lsl.w	r8, r7, r8
 800a332:	9f00      	ldr	r7, [sp, #0]
 800a334:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a338:	9f01      	ldr	r7, [sp, #4]
 800a33a:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a33e:	f8ce 7020 	str.w	r7, [lr, #32]
 800a342:	e737      	b.n	800a1b4 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a344:	2503      	movs	r5, #3
 800a346:	4095      	lsls	r5, r2
 800a348:	43ed      	mvns	r5, r5
 800a34a:	e7d1      	b.n	800a2f0 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a34c:	f04f 0e01 	mov.w	lr, #1
 800a350:	fa0e f707 	lsl.w	r7, lr, r7
 800a354:	ea48 0807 	orr.w	r8, r8, r7
 800a358:	e783      	b.n	800a262 <HAL_GPIO_Init+0xf6>
 800a35a:	f04f 0e02 	mov.w	lr, #2
 800a35e:	fa0e f707 	lsl.w	r7, lr, r7
 800a362:	ea48 0807 	orr.w	r8, r8, r7
 800a366:	e77c      	b.n	800a262 <HAL_GPIO_Init+0xf6>
 800a368:	f04f 0e03 	mov.w	lr, #3
 800a36c:	fa0e f707 	lsl.w	r7, lr, r7
 800a370:	ea48 0807 	orr.w	r8, r8, r7
 800a374:	e775      	b.n	800a262 <HAL_GPIO_Init+0xf6>
 800a376:	f04f 0e04 	mov.w	lr, #4
 800a37a:	fa0e f707 	lsl.w	r7, lr, r7
 800a37e:	ea48 0807 	orr.w	r8, r8, r7
 800a382:	e76e      	b.n	800a262 <HAL_GPIO_Init+0xf6>
 800a384:	f04f 0e07 	mov.w	lr, #7
 800a388:	fa0e f707 	lsl.w	r7, lr, r7
 800a38c:	ea48 0807 	orr.w	r8, r8, r7
 800a390:	e767      	b.n	800a262 <HAL_GPIO_Init+0xf6>
 800a392:	f04f 0e05 	mov.w	lr, #5
 800a396:	fa0e f707 	lsl.w	r7, lr, r7
 800a39a:	ea48 0807 	orr.w	r8, r8, r7
 800a39e:	e760      	b.n	800a262 <HAL_GPIO_Init+0xf6>
 800a3a0:	f04f 0e06 	mov.w	lr, #6
 800a3a4:	fa0e f707 	lsl.w	r7, lr, r7
 800a3a8:	ea48 0807 	orr.w	r8, r8, r7
 800a3ac:	e759      	b.n	800a262 <HAL_GPIO_Init+0xf6>
 800a3ae:	f04f 0e08 	mov.w	lr, #8
 800a3b2:	fa0e f707 	lsl.w	r7, lr, r7
 800a3b6:	ea48 0807 	orr.w	r8, r8, r7
 800a3ba:	e752      	b.n	800a262 <HAL_GPIO_Init+0xf6>
 800a3bc:	40013c00 	.word	0x40013c00
 800a3c0:	40020000 	.word	0x40020000
 800a3c4:	40020800 	.word	0x40020800
 800a3c8:	40020c00 	.word	0x40020c00
 800a3cc:	40021000 	.word	0x40021000
 800a3d0:	40021400 	.word	0x40021400
 800a3d4:	40021800 	.word	0x40021800
 800a3d8:	40023800 	.word	0x40023800
 800a3dc:	40021c00 	.word	0x40021c00
 800a3e0:	40022000 	.word	0x40022000
 800a3e4:	40022400 	.word	0x40022400

0800a3e8 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a3e8:	6903      	ldr	r3, [r0, #16]
 800a3ea:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a3ec:	bf14      	ite	ne
 800a3ee:	2001      	movne	r0, #1
 800a3f0:	2000      	moveq	r0, #0
 800a3f2:	4770      	bx	lr

0800a3f4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a3f4:	b902      	cbnz	r2, 800a3f8 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a3f6:	0409      	lsls	r1, r1, #16
 800a3f8:	6181      	str	r1, [r0, #24]
  }
}
 800a3fa:	4770      	bx	lr

0800a3fc <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a3fc:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a3fe:	ea01 0203 	and.w	r2, r1, r3
 800a402:	ea21 0103 	bic.w	r1, r1, r3
 800a406:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a40a:	6181      	str	r1, [r0, #24]
}
 800a40c:	4770      	bx	lr
 800a40e:	bf00      	nop

0800a410 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a410:	4770      	bx	lr
 800a412:	bf00      	nop

0800a414 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a414:	4a04      	ldr	r2, [pc, #16]	; (800a428 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a416:	6951      	ldr	r1, [r2, #20]
 800a418:	4201      	tst	r1, r0
 800a41a:	d100      	bne.n	800a41e <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a41c:	4770      	bx	lr
{
 800a41e:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a420:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a422:	f7ff fff5 	bl	800a410 <HAL_GPIO_EXTI_Callback>
}
 800a426:	bd08      	pop	{r3, pc}
 800a428:	40013c00 	.word	0x40013c00

0800a42c <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a42c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a430:	6804      	ldr	r4, [r0, #0]
{
 800a432:	b083      	sub	sp, #12
 800a434:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a436:	6823      	ldr	r3, [r4, #0]
{
 800a438:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a43c:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a440:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a444:	4606      	mov	r6, r0
 800a446:	468a      	mov	sl, r1
 800a448:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a44a:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a44c:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a450:	d136      	bne.n	800a4c0 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a452:	6965      	ldr	r5, [r4, #20]
 800a454:	07e8      	lsls	r0, r5, #31
 800a456:	d5fc      	bpl.n	800a452 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a458:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a45c:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a45e:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a462:	d003      	beq.n	800a46c <I2C_RequestMemoryWrite+0x40>
 800a464:	e04f      	b.n	800a506 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a466:	6961      	ldr	r1, [r4, #20]
 800a468:	054d      	lsls	r5, r1, #21
 800a46a:	d45d      	bmi.n	800a528 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a46c:	6961      	ldr	r1, [r4, #20]
 800a46e:	078b      	lsls	r3, r1, #30
 800a470:	d5f9      	bpl.n	800a466 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a472:	2300      	movs	r3, #0
 800a474:	9301      	str	r3, [sp, #4]
 800a476:	6963      	ldr	r3, [r4, #20]
 800a478:	9301      	str	r3, [sp, #4]
 800a47a:	69a3      	ldr	r3, [r4, #24]
 800a47c:	9301      	str	r3, [sp, #4]
 800a47e:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a480:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a484:	f040 8088 	bne.w	800a598 <I2C_RequestMemoryWrite+0x16c>
 800a488:	6963      	ldr	r3, [r4, #20]
 800a48a:	061a      	lsls	r2, r3, #24
 800a48c:	d464      	bmi.n	800a558 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a48e:	6963      	ldr	r3, [r4, #20]
 800a490:	055b      	lsls	r3, r3, #21
 800a492:	d5f9      	bpl.n	800a488 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a494:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a496:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a49a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a49c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a49e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a4a0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a4a4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a4a8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a4aa:	f043 0304 	orr.w	r3, r3, #4
 800a4ae:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a4b0:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a4b2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a4b4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a4b6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a4ba:	d066      	beq.n	800a58a <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a4bc:	2001      	movs	r0, #1
 800a4be:	e01f      	b.n	800a500 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a4c0:	6963      	ldr	r3, [r4, #20]
 800a4c2:	07d9      	lsls	r1, r3, #31
 800a4c4:	d4c8      	bmi.n	800a458 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4c6:	f7ff fdb1 	bl	800a02c <HAL_GetTick>
 800a4ca:	eba0 000b 	sub.w	r0, r0, fp
 800a4ce:	4581      	cmp	r9, r0
 800a4d0:	d304      	bcc.n	800a4dc <I2C_RequestMemoryWrite+0xb0>
 800a4d2:	f1b9 0f00 	cmp.w	r9, #0
 800a4d6:	d001      	beq.n	800a4dc <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a4d8:	6834      	ldr	r4, [r6, #0]
 800a4da:	e7b7      	b.n	800a44c <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a4dc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a4de:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a4e0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a4e2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a4e6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a4ea:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a4ec:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a4ee:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a4f2:	f042 0220 	orr.w	r2, r2, #32
 800a4f6:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a4f8:	680b      	ldr	r3, [r1, #0]
 800a4fa:	05dc      	lsls	r4, r3, #23
 800a4fc:	d435      	bmi.n	800a56a <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a4fe:	2003      	movs	r0, #3
}
 800a500:	b003      	add	sp, #12
 800a502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a506:	6963      	ldr	r3, [r4, #20]
 800a508:	0798      	lsls	r0, r3, #30
 800a50a:	d4b2      	bmi.n	800a472 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a50c:	6963      	ldr	r3, [r4, #20]
 800a50e:	055a      	lsls	r2, r3, #21
 800a510:	d40a      	bmi.n	800a528 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a512:	f7ff fd8b 	bl	800a02c <HAL_GetTick>
 800a516:	eba0 000b 	sub.w	r0, r0, fp
 800a51a:	4581      	cmp	r9, r0
 800a51c:	d34e      	bcc.n	800a5bc <I2C_RequestMemoryWrite+0x190>
 800a51e:	f1b9 0f00 	cmp.w	r9, #0
 800a522:	d04b      	beq.n	800a5bc <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a524:	6834      	ldr	r4, [r6, #0]
 800a526:	e79a      	b.n	800a45e <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a528:	6823      	ldr	r3, [r4, #0]
 800a52a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a52e:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a530:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a532:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a536:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a538:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a53a:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a53c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a540:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a544:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a546:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a54a:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a54e:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a550:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a552:	b003      	add	sp, #12
 800a554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a558:	f1b8 0f01 	cmp.w	r8, #1
 800a55c:	d109      	bne.n	800a572 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a55e:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a560:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a562:	6127      	str	r7, [r4, #16]
}
 800a564:	b003      	add	sp, #12
 800a566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a56a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a56e:	6433      	str	r3, [r6, #64]	; 0x40
 800a570:	e7c5      	b.n	800a4fe <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a572:	0a3b      	lsrs	r3, r7, #8
 800a574:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a576:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a57a:	d12e      	bne.n	800a5da <I2C_RequestMemoryWrite+0x1ae>
 800a57c:	6963      	ldr	r3, [r4, #20]
 800a57e:	0619      	lsls	r1, r3, #24
 800a580:	d4ed      	bmi.n	800a55e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a582:	6963      	ldr	r3, [r4, #20]
 800a584:	055a      	lsls	r2, r3, #21
 800a586:	d5f9      	bpl.n	800a57c <I2C_RequestMemoryWrite+0x150>
 800a588:	e784      	b.n	800a494 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a58a:	6832      	ldr	r2, [r6, #0]
 800a58c:	6813      	ldr	r3, [r2, #0]
 800a58e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a592:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a594:	6013      	str	r3, [r2, #0]
 800a596:	e7b3      	b.n	800a500 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a598:	6963      	ldr	r3, [r4, #20]
 800a59a:	061d      	lsls	r5, r3, #24
 800a59c:	d4dc      	bmi.n	800a558 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a59e:	6963      	ldr	r3, [r4, #20]
 800a5a0:	0559      	lsls	r1, r3, #21
 800a5a2:	f53f af77 	bmi.w	800a494 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5a6:	f7ff fd41 	bl	800a02c <HAL_GetTick>
 800a5aa:	eba0 000b 	sub.w	r0, r0, fp
 800a5ae:	4581      	cmp	r9, r0
 800a5b0:	d325      	bcc.n	800a5fe <I2C_RequestMemoryWrite+0x1d2>
 800a5b2:	f1b9 0f00 	cmp.w	r9, #0
 800a5b6:	d022      	beq.n	800a5fe <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5b8:	6834      	ldr	r4, [r6, #0]
 800a5ba:	e761      	b.n	800a480 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a5bc:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a5be:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a5c0:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a5c2:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a5c6:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a5ca:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a5cc:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a5d0:	f043 0320 	orr.w	r3, r3, #32
 800a5d4:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a5d6:	2001      	movs	r0, #1
 800a5d8:	e792      	b.n	800a500 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5da:	6963      	ldr	r3, [r4, #20]
 800a5dc:	061b      	lsls	r3, r3, #24
 800a5de:	d4be      	bmi.n	800a55e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a5e0:	6963      	ldr	r3, [r4, #20]
 800a5e2:	0558      	lsls	r0, r3, #21
 800a5e4:	f53f af56 	bmi.w	800a494 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5e8:	f7ff fd20 	bl	800a02c <HAL_GetTick>
 800a5ec:	eba0 000b 	sub.w	r0, r0, fp
 800a5f0:	4581      	cmp	r9, r0
 800a5f2:	d304      	bcc.n	800a5fe <I2C_RequestMemoryWrite+0x1d2>
 800a5f4:	f1b9 0f00 	cmp.w	r9, #0
 800a5f8:	d001      	beq.n	800a5fe <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5fa:	6834      	ldr	r4, [r6, #0]
 800a5fc:	e7bb      	b.n	800a576 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5fe:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a600:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a602:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a604:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a608:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a60c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a60e:	4313      	orrs	r3, r2
 800a610:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a612:	e74d      	b.n	800a4b0 <I2C_RequestMemoryWrite+0x84>

0800a614 <I2C_RequestMemoryRead>:
{
 800a614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a618:	6804      	ldr	r4, [r0, #0]
{
 800a61a:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a61c:	6823      	ldr	r3, [r4, #0]
 800a61e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a622:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a624:	6823      	ldr	r3, [r4, #0]
{
 800a626:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a628:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a62c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a630:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a634:	6023      	str	r3, [r4, #0]
{
 800a636:	4606      	mov	r6, r0
 800a638:	468b      	mov	fp, r1
 800a63a:	4617      	mov	r7, r2
 800a63c:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a640:	d13a      	bne.n	800a6b8 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a642:	6965      	ldr	r5, [r4, #20]
 800a644:	07eb      	lsls	r3, r5, #31
 800a646:	d5fc      	bpl.n	800a642 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a648:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a64c:	6123      	str	r3, [r4, #16]
 800a64e:	fa5f fb8b 	uxtb.w	fp, fp
 800a652:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a656:	d003      	beq.n	800a660 <I2C_RequestMemoryRead+0x4c>
 800a658:	e069      	b.n	800a72e <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a65a:	6965      	ldr	r5, [r4, #20]
 800a65c:	056a      	lsls	r2, r5, #21
 800a65e:	d44e      	bmi.n	800a6fe <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a660:	6965      	ldr	r5, [r4, #20]
 800a662:	07a9      	lsls	r1, r5, #30
 800a664:	d5f9      	bpl.n	800a65a <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a666:	2300      	movs	r3, #0
 800a668:	9301      	str	r3, [sp, #4]
 800a66a:	6963      	ldr	r3, [r4, #20]
 800a66c:	9301      	str	r3, [sp, #4]
 800a66e:	69a3      	ldr	r3, [r4, #24]
 800a670:	9301      	str	r3, [sp, #4]
 800a672:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a674:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a678:	f040 80bd 	bne.w	800a7f6 <I2C_RequestMemoryRead+0x1e2>
 800a67c:	6963      	ldr	r3, [r4, #20]
 800a67e:	0618      	lsls	r0, r3, #24
 800a680:	d468      	bmi.n	800a754 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a682:	6963      	ldr	r3, [r4, #20]
 800a684:	0559      	lsls	r1, r3, #21
 800a686:	d5f9      	bpl.n	800a67c <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a688:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a68a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a68e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a690:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a692:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a694:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a698:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a69c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a69e:	f043 0304 	orr.w	r3, r3, #4
 800a6a2:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a6a4:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a6a6:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a6a8:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a6aa:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a6ae:	d070      	beq.n	800a792 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a6b0:	2001      	movs	r0, #1
}
 800a6b2:	b003      	add	sp, #12
 800a6b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a6b8:	6963      	ldr	r3, [r4, #20]
 800a6ba:	07dd      	lsls	r5, r3, #31
 800a6bc:	d4c4      	bmi.n	800a648 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a6be:	f7ff fcb5 	bl	800a02c <HAL_GetTick>
 800a6c2:	eba0 0009 	sub.w	r0, r0, r9
 800a6c6:	4582      	cmp	sl, r0
 800a6c8:	d304      	bcc.n	800a6d4 <I2C_RequestMemoryRead+0xc0>
 800a6ca:	f1ba 0f00 	cmp.w	sl, #0
 800a6ce:	d001      	beq.n	800a6d4 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a6d0:	6834      	ldr	r4, [r6, #0]
 800a6d2:	e7b3      	b.n	800a63c <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a6d4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a6d6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a6d8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a6da:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a6de:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a6e2:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a6e4:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a6e6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a6ea:	f042 0220 	orr.w	r2, r2, #32
 800a6ee:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a6f0:	680b      	ldr	r3, [r1, #0]
 800a6f2:	05dc      	lsls	r4, r3, #23
 800a6f4:	d43d      	bmi.n	800a772 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a6f6:	2003      	movs	r0, #3
}
 800a6f8:	b003      	add	sp, #12
 800a6fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a6fe:	6823      	ldr	r3, [r4, #0]
 800a700:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a704:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a706:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a708:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a70c:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a70e:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a710:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a712:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a716:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a71a:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a71c:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a720:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a724:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a726:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a728:	b003      	add	sp, #12
 800a72a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a72e:	6963      	ldr	r3, [r4, #20]
 800a730:	079b      	lsls	r3, r3, #30
 800a732:	d498      	bmi.n	800a666 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a734:	6963      	ldr	r3, [r4, #20]
 800a736:	0558      	lsls	r0, r3, #21
 800a738:	d4e1      	bmi.n	800a6fe <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a73a:	f7ff fc77 	bl	800a02c <HAL_GetTick>
 800a73e:	eba0 0009 	sub.w	r0, r0, r9
 800a742:	4582      	cmp	sl, r0
 800a744:	f0c0 808f 	bcc.w	800a866 <I2C_RequestMemoryRead+0x252>
 800a748:	f1ba 0f00 	cmp.w	sl, #0
 800a74c:	f000 808b 	beq.w	800a866 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a750:	6834      	ldr	r4, [r6, #0]
 800a752:	e77e      	b.n	800a652 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a754:	f1b8 0f01 	cmp.w	r8, #1
 800a758:	d10f      	bne.n	800a77a <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a75a:	b2ff      	uxtb	r7, r7
 800a75c:	6127      	str	r7, [r4, #16]
 800a75e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a762:	d16e      	bne.n	800a842 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a764:	6963      	ldr	r3, [r4, #20]
 800a766:	061b      	lsls	r3, r3, #24
 800a768:	d41a      	bmi.n	800a7a0 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a76a:	6963      	ldr	r3, [r4, #20]
 800a76c:	055f      	lsls	r7, r3, #21
 800a76e:	d5f9      	bpl.n	800a764 <I2C_RequestMemoryRead+0x150>
 800a770:	e78a      	b.n	800a688 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a772:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a776:	6433      	str	r3, [r6, #64]	; 0x40
 800a778:	e7bd      	b.n	800a6f6 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a77a:	0a3b      	lsrs	r3, r7, #8
 800a77c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a77e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a782:	d17e      	bne.n	800a882 <I2C_RequestMemoryRead+0x26e>
 800a784:	6963      	ldr	r3, [r4, #20]
 800a786:	061d      	lsls	r5, r3, #24
 800a788:	d4e7      	bmi.n	800a75a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a78a:	6963      	ldr	r3, [r4, #20]
 800a78c:	0558      	lsls	r0, r3, #21
 800a78e:	d5f9      	bpl.n	800a784 <I2C_RequestMemoryRead+0x170>
 800a790:	e77a      	b.n	800a688 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a792:	6832      	ldr	r2, [r6, #0]
 800a794:	6813      	ldr	r3, [r2, #0]
 800a796:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a79a:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a79c:	6013      	str	r3, [r2, #0]
 800a79e:	e7ab      	b.n	800a6f8 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a7a0:	6823      	ldr	r3, [r4, #0]
 800a7a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a7a6:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a7a8:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a7ac:	d113      	bne.n	800a7d6 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7ae:	6963      	ldr	r3, [r4, #20]
 800a7b0:	07d8      	lsls	r0, r3, #31
 800a7b2:	d5fc      	bpl.n	800a7ae <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a7b4:	f04b 0301 	orr.w	r3, fp, #1
 800a7b8:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a7ba:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a7be:	d003      	beq.n	800a7c8 <I2C_RequestMemoryRead+0x1b4>
 800a7c0:	e02b      	b.n	800a81a <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a7c2:	6963      	ldr	r3, [r4, #20]
 800a7c4:	055b      	lsls	r3, r3, #21
 800a7c6:	d49a      	bmi.n	800a6fe <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a7c8:	6963      	ldr	r3, [r4, #20]
 800a7ca:	43db      	mvns	r3, r3
 800a7cc:	f013 0302 	ands.w	r3, r3, #2
 800a7d0:	d1f7      	bne.n	800a7c2 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a7d2:	4618      	mov	r0, r3
 800a7d4:	e790      	b.n	800a6f8 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7d6:	6963      	ldr	r3, [r4, #20]
 800a7d8:	07d9      	lsls	r1, r3, #31
 800a7da:	d4eb      	bmi.n	800a7b4 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7dc:	f7ff fc26 	bl	800a02c <HAL_GetTick>
 800a7e0:	eba0 0009 	sub.w	r0, r0, r9
 800a7e4:	4582      	cmp	sl, r0
 800a7e6:	f4ff af75 	bcc.w	800a6d4 <I2C_RequestMemoryRead+0xc0>
 800a7ea:	f1ba 0f00 	cmp.w	sl, #0
 800a7ee:	f43f af71 	beq.w	800a6d4 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a7f2:	6834      	ldr	r4, [r6, #0]
 800a7f4:	e7d8      	b.n	800a7a8 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a7f6:	6963      	ldr	r3, [r4, #20]
 800a7f8:	061a      	lsls	r2, r3, #24
 800a7fa:	d4ab      	bmi.n	800a754 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a7fc:	6963      	ldr	r3, [r4, #20]
 800a7fe:	055d      	lsls	r5, r3, #21
 800a800:	f53f af42 	bmi.w	800a688 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a804:	f7ff fc12 	bl	800a02c <HAL_GetTick>
 800a808:	eba0 0009 	sub.w	r0, r0, r9
 800a80c:	4582      	cmp	sl, r0
 800a80e:	d34b      	bcc.n	800a8a8 <I2C_RequestMemoryRead+0x294>
 800a810:	f1ba 0f00 	cmp.w	sl, #0
 800a814:	d048      	beq.n	800a8a8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a816:	6834      	ldr	r4, [r6, #0]
 800a818:	e72c      	b.n	800a674 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a81a:	6963      	ldr	r3, [r4, #20]
 800a81c:	43db      	mvns	r3, r3
 800a81e:	f013 0302 	ands.w	r3, r3, #2
 800a822:	d0d6      	beq.n	800a7d2 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a824:	6963      	ldr	r3, [r4, #20]
 800a826:	055a      	lsls	r2, r3, #21
 800a828:	f53f af69 	bmi.w	800a6fe <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a82c:	f7ff fbfe 	bl	800a02c <HAL_GetTick>
 800a830:	eba0 0009 	sub.w	r0, r0, r9
 800a834:	4582      	cmp	sl, r0
 800a836:	d316      	bcc.n	800a866 <I2C_RequestMemoryRead+0x252>
 800a838:	f1ba 0f00 	cmp.w	sl, #0
 800a83c:	d013      	beq.n	800a866 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a83e:	6834      	ldr	r4, [r6, #0]
 800a840:	e7bb      	b.n	800a7ba <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a842:	6963      	ldr	r3, [r4, #20]
 800a844:	061d      	lsls	r5, r3, #24
 800a846:	d4ab      	bmi.n	800a7a0 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a848:	6963      	ldr	r3, [r4, #20]
 800a84a:	055a      	lsls	r2, r3, #21
 800a84c:	f53f af1c 	bmi.w	800a688 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a850:	f7ff fbec 	bl	800a02c <HAL_GetTick>
 800a854:	eba0 0009 	sub.w	r0, r0, r9
 800a858:	4582      	cmp	sl, r0
 800a85a:	d325      	bcc.n	800a8a8 <I2C_RequestMemoryRead+0x294>
 800a85c:	f1ba 0f00 	cmp.w	sl, #0
 800a860:	d022      	beq.n	800a8a8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a862:	6834      	ldr	r4, [r6, #0]
 800a864:	e77b      	b.n	800a75e <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a866:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a868:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a86a:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a86c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a870:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a874:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a876:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a87a:	f043 0320 	orr.w	r3, r3, #32
 800a87e:	6433      	str	r3, [r6, #64]	; 0x40
 800a880:	e716      	b.n	800a6b0 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a882:	6963      	ldr	r3, [r4, #20]
 800a884:	0619      	lsls	r1, r3, #24
 800a886:	f53f af68 	bmi.w	800a75a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a88a:	6963      	ldr	r3, [r4, #20]
 800a88c:	055b      	lsls	r3, r3, #21
 800a88e:	f53f aefb 	bmi.w	800a688 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a892:	f7ff fbcb 	bl	800a02c <HAL_GetTick>
 800a896:	eba0 0009 	sub.w	r0, r0, r9
 800a89a:	4582      	cmp	sl, r0
 800a89c:	d304      	bcc.n	800a8a8 <I2C_RequestMemoryRead+0x294>
 800a89e:	f1ba 0f00 	cmp.w	sl, #0
 800a8a2:	d001      	beq.n	800a8a8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a8a4:	6834      	ldr	r4, [r6, #0]
 800a8a6:	e76a      	b.n	800a77e <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a8a8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a8aa:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a8ac:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a8ae:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a8b2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a8b6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a8b8:	4313      	orrs	r3, r2
 800a8ba:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a8bc:	e6f2      	b.n	800a6a4 <I2C_RequestMemoryRead+0x90>
 800a8be:	bf00      	nop

0800a8c0 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a8c0:	2800      	cmp	r0, #0
 800a8c2:	f000 80b9 	beq.w	800aa38 <HAL_I2C_Init+0x178>
{
 800a8c6:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a8c8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a8cc:	4604      	mov	r4, r0
 800a8ce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a8d2:	2b00      	cmp	r3, #0
 800a8d4:	f000 8098 	beq.w	800aa08 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a8d8:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a8da:	2224      	movs	r2, #36	; 0x24
 800a8dc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a8e0:	681a      	ldr	r2, [r3, #0]
 800a8e2:	f022 0201 	bic.w	r2, r2, #1
 800a8e6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a8e8:	681a      	ldr	r2, [r3, #0]
 800a8ea:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a8ee:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a8f0:	681a      	ldr	r2, [r3, #0]
 800a8f2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a8f6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a8f8:	f001 fe70 	bl	800c5dc <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a8fc:	6865      	ldr	r5, [r4, #4]
 800a8fe:	4b4f      	ldr	r3, [pc, #316]	; (800aa3c <HAL_I2C_Init+0x17c>)
 800a900:	429d      	cmp	r5, r3
 800a902:	d84f      	bhi.n	800a9a4 <HAL_I2C_Init+0xe4>
 800a904:	4b4e      	ldr	r3, [pc, #312]	; (800aa40 <HAL_I2C_Init+0x180>)
 800a906:	4298      	cmp	r0, r3
 800a908:	d97c      	bls.n	800aa04 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a90a:	4b4e      	ldr	r3, [pc, #312]	; (800aa44 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a90c:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a90e:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a912:	1e43      	subs	r3, r0, #1
 800a914:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a918:	6822      	ldr	r2, [r4, #0]
 800a91a:	6851      	ldr	r1, [r2, #4]
 800a91c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a920:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a924:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a926:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a928:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a92c:	f10c 0c01 	add.w	ip, ip, #1
 800a930:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a934:	ea41 010c 	orr.w	r1, r1, ip
 800a938:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a93a:	69d1      	ldr	r1, [r2, #28]
 800a93c:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a940:	3301      	adds	r3, #1
 800a942:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a946:	4203      	tst	r3, r0
 800a948:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a94c:	d161      	bne.n	800aa12 <HAL_I2C_Init+0x152>
 800a94e:	2304      	movs	r3, #4
 800a950:	430b      	orrs	r3, r1
 800a952:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a954:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a958:	6811      	ldr	r1, [r2, #0]
 800a95a:	4303      	orrs	r3, r0
 800a95c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a960:	430b      	orrs	r3, r1
 800a962:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a964:	6891      	ldr	r1, [r2, #8]
 800a966:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a96a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a96e:	4303      	orrs	r3, r0
 800a970:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a974:	430b      	orrs	r3, r1
 800a976:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a978:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a97c:	68d1      	ldr	r1, [r2, #12]
 800a97e:	4303      	orrs	r3, r0
 800a980:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a984:	430b      	orrs	r3, r1
 800a986:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a988:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a98a:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a98c:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a990:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a992:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a994:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a996:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a99a:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a99c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a9a0:	4618      	mov	r0, r3
}
 800a9a2:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a9a4:	4b28      	ldr	r3, [pc, #160]	; (800aa48 <HAL_I2C_Init+0x188>)
 800a9a6:	4298      	cmp	r0, r3
 800a9a8:	d92c      	bls.n	800aa04 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a9aa:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a9ac:	4b25      	ldr	r3, [pc, #148]	; (800aa44 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a9ae:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a9b0:	4e26      	ldr	r6, [pc, #152]	; (800aa4c <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a9b2:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a9b6:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a9ba:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a9be:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a9c0:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a9c4:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a9c8:	fb01 f303 	mul.w	r3, r1, r3
 800a9cc:	fba6 6303 	umull	r6, r3, r6, r3
 800a9d0:	6a11      	ldr	r1, [r2, #32]
 800a9d2:	099b      	lsrs	r3, r3, #6
 800a9d4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a9d8:	3301      	adds	r3, #1
 800a9da:	430b      	orrs	r3, r1
 800a9dc:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a9de:	69d1      	ldr	r1, [r2, #28]
 800a9e0:	68a3      	ldr	r3, [r4, #8]
 800a9e2:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a9e6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a9ea:	b9ab      	cbnz	r3, 800aa18 <HAL_I2C_Init+0x158>
 800a9ec:	1e43      	subs	r3, r0, #1
 800a9ee:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a9f2:	fbb3 f3f5 	udiv	r3, r3, r5
 800a9f6:	3301      	adds	r3, #1
 800a9f8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a9fc:	b1d3      	cbz	r3, 800aa34 <HAL_I2C_Init+0x174>
 800a9fe:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800aa02:	e7a5      	b.n	800a950 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800aa04:	2001      	movs	r0, #1
}
 800aa06:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800aa08:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800aa0c:	f7f7 f952 	bl	8001cb4 <HAL_I2C_MspInit>
 800aa10:	e762      	b.n	800a8d8 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800aa12:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800aa16:	e79b      	b.n	800a950 <HAL_I2C_Init+0x90>
 800aa18:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800aa1c:	1e43      	subs	r3, r0, #1
 800aa1e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800aa22:	fbb3 f3f5 	udiv	r3, r3, r5
 800aa26:	3301      	adds	r3, #1
 800aa28:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800aa2c:	b113      	cbz	r3, 800aa34 <HAL_I2C_Init+0x174>
 800aa2e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800aa32:	e78d      	b.n	800a950 <HAL_I2C_Init+0x90>
 800aa34:	2301      	movs	r3, #1
 800aa36:	e78b      	b.n	800a950 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800aa38:	2001      	movs	r0, #1
}
 800aa3a:	4770      	bx	lr
 800aa3c:	000186a0 	.word	0x000186a0
 800aa40:	001e847f 	.word	0x001e847f
 800aa44:	431bde83 	.word	0x431bde83
 800aa48:	003d08ff 	.word	0x003d08ff
 800aa4c:	10624dd3 	.word	0x10624dd3

0800aa50 <HAL_I2C_Mem_Write>:
{
 800aa50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa54:	4604      	mov	r4, r0
 800aa56:	b083      	sub	sp, #12
 800aa58:	4699      	mov	r9, r3
 800aa5a:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800aa5e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800aa60:	460f      	mov	r7, r1
 800aa62:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800aa64:	f7ff fae2 	bl	800a02c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800aa68:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800aa6c:	2b20      	cmp	r3, #32
 800aa6e:	d004      	beq.n	800aa7a <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800aa70:	2702      	movs	r7, #2
}
 800aa72:	4638      	mov	r0, r7
 800aa74:	b003      	add	sp, #12
 800aa76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa7a:	4605      	mov	r5, r0
 800aa7c:	e005      	b.n	800aa8a <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aa7e:	f7ff fad5 	bl	800a02c <HAL_GetTick>
 800aa82:	1b40      	subs	r0, r0, r5
 800aa84:	2819      	cmp	r0, #25
 800aa86:	f200 80a8 	bhi.w	800abda <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aa8a:	6820      	ldr	r0, [r4, #0]
 800aa8c:	6983      	ldr	r3, [r0, #24]
 800aa8e:	ea6f 0c03 	mvn.w	ip, r3
 800aa92:	f01c 0b02 	ands.w	fp, ip, #2
 800aa96:	d0f2      	beq.n	800aa7e <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800aa98:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800aa9c:	2b01      	cmp	r3, #1
 800aa9e:	d0e7      	beq.n	800aa70 <HAL_I2C_Mem_Write+0x20>
 800aaa0:	2301      	movs	r3, #1
 800aaa2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800aaa6:	6803      	ldr	r3, [r0, #0]
 800aaa8:	07db      	lsls	r3, r3, #31
 800aaaa:	d572      	bpl.n	800ab92 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aaac:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800aaae:	6807      	ldr	r7, [r0, #0]
 800aab0:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800aab4:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800aab6:	980c      	ldr	r0, [sp, #48]	; 0x30
 800aab8:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800aaba:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aabc:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800aac0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800aac4:	2040      	movs	r0, #64	; 0x40
 800aac6:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800aaca:	2000      	movs	r0, #0
 800aacc:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800aace:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800aad2:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800aad4:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800aad6:	4856      	ldr	r0, [pc, #344]	; (800ac30 <HAL_I2C_Mem_Write+0x1e0>)
 800aad8:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aada:	464b      	mov	r3, r9
 800aadc:	4642      	mov	r2, r8
 800aade:	4620      	mov	r0, r4
 800aae0:	f7ff fca4 	bl	800a42c <I2C_RequestMemoryWrite>
 800aae4:	4607      	mov	r7, r0
 800aae6:	bb00      	cbnz	r0, 800ab2a <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800aae8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800aaea:	2b00      	cmp	r3, #0
 800aaec:	f000 809e 	beq.w	800ac2c <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800aaf0:	6823      	ldr	r3, [r4, #0]
 800aaf2:	1c72      	adds	r2, r6, #1
 800aaf4:	d159      	bne.n	800abaa <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aaf6:	695a      	ldr	r2, [r3, #20]
 800aaf8:	0610      	lsls	r0, r2, #24
 800aafa:	d41b      	bmi.n	800ab34 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aafc:	695a      	ldr	r2, [r3, #20]
 800aafe:	0551      	lsls	r1, r2, #21
 800ab00:	d5f9      	bpl.n	800aaf6 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800ab02:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800ab04:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800ab08:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800ab0a:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800ab0c:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800ab0e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ab12:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800ab16:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ab18:	f043 0304 	orr.w	r3, r3, #4
 800ab1c:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ab1e:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800ab20:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ab22:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800ab24:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ab28:	d038      	beq.n	800ab9c <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800ab2a:	2701      	movs	r7, #1
}
 800ab2c:	4638      	mov	r0, r7
 800ab2e:	b003      	add	sp, #12
 800ab30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ab34:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800ab38:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ab3c:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800ab3e:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ab42:	f811 2b01 	ldrb.w	r2, [r1], #1
 800ab46:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800ab48:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ab4a:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ab4c:	3a01      	subs	r2, #1
 800ab4e:	b292      	uxth	r2, r2
 800ab50:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800ab52:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ab54:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800ab56:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ab58:	0740      	lsls	r0, r0, #29
 800ab5a:	d517      	bpl.n	800ab8c <HAL_I2C_Mem_Write+0x13c>
 800ab5c:	b942      	cbnz	r2, 800ab70 <HAL_I2C_Mem_Write+0x120>
 800ab5e:	1c72      	adds	r2, r6, #1
 800ab60:	d156      	bne.n	800ac10 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ab62:	695a      	ldr	r2, [r3, #20]
 800ab64:	0750      	lsls	r0, r2, #29
 800ab66:	d446      	bmi.n	800abf6 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ab68:	695a      	ldr	r2, [r3, #20]
 800ab6a:	0551      	lsls	r1, r2, #21
 800ab6c:	d5f9      	bpl.n	800ab62 <HAL_I2C_Mem_Write+0x112>
 800ab6e:	e7c8      	b.n	800ab02 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ab70:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800ab74:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800ab76:	f10c 0102 	add.w	r1, ip, #2
 800ab7a:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ab7c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800ab7e:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800ab82:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800ab84:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800ab86:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800ab88:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800ab8a:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800ab8c:	2a00      	cmp	r2, #0
 800ab8e:	d1b0      	bne.n	800aaf2 <HAL_I2C_Mem_Write+0xa2>
 800ab90:	e7e5      	b.n	800ab5e <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800ab92:	6803      	ldr	r3, [r0, #0]
 800ab94:	f043 0301 	orr.w	r3, r3, #1
 800ab98:	6003      	str	r3, [r0, #0]
 800ab9a:	e787      	b.n	800aaac <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab9c:	6822      	ldr	r2, [r4, #0]
 800ab9e:	6813      	ldr	r3, [r2, #0]
 800aba0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800aba4:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aba6:	6013      	str	r3, [r2, #0]
 800aba8:	e763      	b.n	800aa72 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800abaa:	695a      	ldr	r2, [r3, #20]
 800abac:	0612      	lsls	r2, r2, #24
 800abae:	d4c1      	bmi.n	800ab34 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800abb0:	695a      	ldr	r2, [r3, #20]
 800abb2:	0551      	lsls	r1, r2, #21
 800abb4:	d4a5      	bmi.n	800ab02 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800abb6:	f7ff fa39 	bl	800a02c <HAL_GetTick>
 800abba:	1b40      	subs	r0, r0, r5
 800abbc:	4286      	cmp	r6, r0
 800abbe:	d301      	bcc.n	800abc4 <HAL_I2C_Mem_Write+0x174>
 800abc0:	2e00      	cmp	r6, #0
 800abc2:	d195      	bne.n	800aaf0 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800abc4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800abc6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800abc8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800abca:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800abce:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800abd2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800abd4:	4313      	orrs	r3, r2
 800abd6:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800abd8:	e7a1      	b.n	800ab1e <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800abda:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800abdc:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800abe0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800abe4:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800abe8:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800abea:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800abee:	f043 0320 	orr.w	r3, r3, #32
 800abf2:	6423      	str	r3, [r4, #64]	; 0x40
 800abf4:	e73c      	b.n	800aa70 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abf6:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800abf8:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abfa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800abfe:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac00:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ac02:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ac06:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac0a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800ac0e:	e730      	b.n	800aa72 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ac10:	695a      	ldr	r2, [r3, #20]
 800ac12:	0752      	lsls	r2, r2, #29
 800ac14:	d4ef      	bmi.n	800abf6 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ac16:	695a      	ldr	r2, [r3, #20]
 800ac18:	0551      	lsls	r1, r2, #21
 800ac1a:	f53f af72 	bmi.w	800ab02 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac1e:	f7ff fa05 	bl	800a02c <HAL_GetTick>
 800ac22:	1b40      	subs	r0, r0, r5
 800ac24:	4286      	cmp	r6, r0
 800ac26:	d3cd      	bcc.n	800abc4 <HAL_I2C_Mem_Write+0x174>
 800ac28:	2e00      	cmp	r6, #0
 800ac2a:	d0cb      	beq.n	800abc4 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ac2c:	6823      	ldr	r3, [r4, #0]
 800ac2e:	e796      	b.n	800ab5e <HAL_I2C_Mem_Write+0x10e>
 800ac30:	ffff0000 	.word	0xffff0000

0800ac34 <HAL_I2C_Mem_Read>:
{
 800ac34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac38:	4604      	mov	r4, r0
 800ac3a:	b087      	sub	sp, #28
 800ac3c:	4699      	mov	r9, r3
 800ac3e:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800ac42:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800ac44:	460f      	mov	r7, r1
 800ac46:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800ac48:	f7ff f9f0 	bl	800a02c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ac4c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800ac50:	2b20      	cmp	r3, #32
 800ac52:	d004      	beq.n	800ac5e <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800ac54:	2702      	movs	r7, #2
}
 800ac56:	4638      	mov	r0, r7
 800ac58:	b007      	add	sp, #28
 800ac5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac5e:	4606      	mov	r6, r0
 800ac60:	e005      	b.n	800ac6e <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac62:	f7ff f9e3 	bl	800a02c <HAL_GetTick>
 800ac66:	1b80      	subs	r0, r0, r6
 800ac68:	2819      	cmp	r0, #25
 800ac6a:	f200 80d2 	bhi.w	800ae12 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ac6e:	f8d4 c000 	ldr.w	ip, [r4]
 800ac72:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800ac76:	43c0      	mvns	r0, r0
 800ac78:	f010 0b02 	ands.w	fp, r0, #2
 800ac7c:	d0f1      	beq.n	800ac62 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800ac7e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800ac82:	2b01      	cmp	r3, #1
 800ac84:	d0e6      	beq.n	800ac54 <HAL_I2C_Mem_Read+0x20>
 800ac86:	2301      	movs	r3, #1
 800ac88:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800ac8c:	f8dc 3000 	ldr.w	r3, [ip]
 800ac90:	07d9      	lsls	r1, r3, #31
 800ac92:	d537      	bpl.n	800ad04 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ac94:	f8dc 0000 	ldr.w	r0, [ip]
 800ac98:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800ac9c:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800aca0:	9810      	ldr	r0, [sp, #64]	; 0x40
 800aca2:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800aca4:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aca6:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800acaa:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800acae:	2040      	movs	r0, #64	; 0x40
 800acb0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800acb4:	2000      	movs	r0, #0
 800acb6:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800acb8:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800acbc:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800acbe:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800acc0:	4893      	ldr	r0, [pc, #588]	; (800af10 <HAL_I2C_Mem_Read+0x2dc>)
 800acc2:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800acc4:	4639      	mov	r1, r7
 800acc6:	464b      	mov	r3, r9
 800acc8:	4642      	mov	r2, r8
 800acca:	4620      	mov	r0, r4
 800accc:	f7ff fca2 	bl	800a614 <I2C_RequestMemoryRead>
 800acd0:	4607      	mov	r7, r0
 800acd2:	2800      	cmp	r0, #0
 800acd4:	f040 80ab 	bne.w	800ae2e <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800acd8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800acda:	b9d2      	cbnz	r2, 800ad12 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acdc:	6823      	ldr	r3, [r4, #0]
 800acde:	9002      	str	r0, [sp, #8]
 800ace0:	695a      	ldr	r2, [r3, #20]
 800ace2:	9202      	str	r2, [sp, #8]
 800ace4:	699a      	ldr	r2, [r3, #24]
 800ace6:	9202      	str	r2, [sp, #8]
 800ace8:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800acea:	681a      	ldr	r2, [r3, #0]
 800acec:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800acf0:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800acf2:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800acf4:	2220      	movs	r2, #32
 800acf6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800acfa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800acfe:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800ad02:	e7a8      	b.n	800ac56 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800ad04:	f8dc 3000 	ldr.w	r3, [ip]
 800ad08:	f043 0301 	orr.w	r3, r3, #1
 800ad0c:	f8cc 3000 	str.w	r3, [ip]
 800ad10:	e7c0      	b.n	800ac94 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800ad12:	2a01      	cmp	r2, #1
 800ad14:	f000 812c 	beq.w	800af70 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800ad18:	2a02      	cmp	r2, #2
 800ad1a:	f000 80bd 	beq.w	800ae98 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad1e:	6823      	ldr	r3, [r4, #0]
 800ad20:	9005      	str	r0, [sp, #20]
 800ad22:	6959      	ldr	r1, [r3, #20]
 800ad24:	9105      	str	r1, [sp, #20]
 800ad26:	6999      	ldr	r1, [r3, #24]
 800ad28:	9105      	str	r1, [sp, #20]
 800ad2a:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800ad2c:	2a03      	cmp	r2, #3
 800ad2e:	d849      	bhi.n	800adc4 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800ad30:	2a01      	cmp	r2, #1
 800ad32:	f000 80eb 	beq.w	800af0c <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800ad36:	2a02      	cmp	r2, #2
 800ad38:	f000 8089 	beq.w	800ae4e <HAL_I2C_Mem_Read+0x21a>
 800ad3c:	1c69      	adds	r1, r5, #1
 800ad3e:	f040 80bb 	bne.w	800aeb8 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ad42:	695a      	ldr	r2, [r3, #20]
 800ad44:	0752      	lsls	r2, r2, #29
 800ad46:	d5fc      	bpl.n	800ad42 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad48:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad4a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad4c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad50:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad52:	691b      	ldr	r3, [r3, #16]
 800ad54:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800ad56:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ad58:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ad5a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ad5c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800ad5e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800ad60:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800ad62:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800ad64:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ad66:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ad68:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800ad6a:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ad6c:	6822      	ldr	r2, [r4, #0]
 800ad6e:	f040 80af 	bne.w	800aed0 <HAL_I2C_Mem_Read+0x29c>
 800ad72:	6953      	ldr	r3, [r2, #20]
 800ad74:	075b      	lsls	r3, r3, #29
 800ad76:	d5fc      	bpl.n	800ad72 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad78:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad7a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad7c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800ad80:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad82:	6913      	ldr	r3, [r2, #16]
 800ad84:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800ad86:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ad88:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ad8a:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad8c:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800ad8e:	3b01      	subs	r3, #1
 800ad90:	b29b      	uxth	r3, r3
 800ad92:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad94:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800ad96:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800ad98:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800ad9c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ad9e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ada2:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800ada4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ada6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ada8:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800adaa:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800adac:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800adae:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800adb0:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800adb2:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800adb4:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800adb6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800adb8:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800adba:	2a00      	cmp	r2, #0
 800adbc:	d099      	beq.n	800acf2 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800adbe:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800adc0:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800adc2:	d9b5      	bls.n	800ad30 <HAL_I2C_Mem_Read+0xfc>
 800adc4:	b95d      	cbnz	r5, 800adde <HAL_I2C_Mem_Read+0x1aa>
 800adc6:	e0c5      	b.n	800af54 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800adc8:	695a      	ldr	r2, [r3, #20]
 800adca:	06d0      	lsls	r0, r2, #27
 800adcc:	f100 80b2 	bmi.w	800af34 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800add0:	f7ff f92c 	bl	800a02c <HAL_GetTick>
 800add4:	1b80      	subs	r0, r0, r6
 800add6:	4285      	cmp	r5, r0
 800add8:	f0c0 8086 	bcc.w	800aee8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800addc:	6823      	ldr	r3, [r4, #0]
 800adde:	695a      	ldr	r2, [r3, #20]
 800ade0:	0652      	lsls	r2, r2, #25
 800ade2:	d5f1      	bpl.n	800adc8 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ade4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ade6:	691b      	ldr	r3, [r3, #16]
 800ade8:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800adea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800adec:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800adee:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800adf0:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800adf2:	3b01      	subs	r3, #1
 800adf4:	b29b      	uxth	r3, r3
 800adf6:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800adf8:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800adfa:	3a01      	subs	r2, #1
 800adfc:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800adfe:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ae02:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800ae04:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ae06:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ae0a:	d5d6      	bpl.n	800adba <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae0c:	6903      	ldr	r3, [r0, #16]
 800ae0e:	704b      	strb	r3, [r1, #1]
 800ae10:	e036      	b.n	800ae80 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ae12:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ae14:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ae18:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ae1c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ae20:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ae22:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ae26:	f043 0320 	orr.w	r3, r3, #32
 800ae2a:	6423      	str	r3, [r4, #64]	; 0x40
 800ae2c:	e712      	b.n	800ac54 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800ae2e:	2701      	movs	r7, #1
}
 800ae30:	4638      	mov	r0, r7
 800ae32:	b007      	add	sp, #28
 800ae34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ae38:	695a      	ldr	r2, [r3, #20]
 800ae3a:	0750      	lsls	r0, r2, #29
 800ae3c:	d40c      	bmi.n	800ae58 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ae3e:	f7ff f8f5 	bl	800a02c <HAL_GetTick>
 800ae42:	1b80      	subs	r0, r0, r6
 800ae44:	4285      	cmp	r5, r0
 800ae46:	d34f      	bcc.n	800aee8 <HAL_I2C_Mem_Read+0x2b4>
 800ae48:	2d00      	cmp	r5, #0
 800ae4a:	d04d      	beq.n	800aee8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ae4c:	6823      	ldr	r3, [r4, #0]
 800ae4e:	1c69      	adds	r1, r5, #1
 800ae50:	d1f2      	bne.n	800ae38 <HAL_I2C_Mem_Read+0x204>
 800ae52:	695a      	ldr	r2, [r3, #20]
 800ae54:	0752      	lsls	r2, r2, #29
 800ae56:	d5fc      	bpl.n	800ae52 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae58:	681a      	ldr	r2, [r3, #0]
 800ae5a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ae5e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae60:	691a      	ldr	r2, [r3, #16]
 800ae62:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ae64:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800ae66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ae68:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800ae6a:	3b01      	subs	r3, #1
 800ae6c:	b29b      	uxth	r3, r3
 800ae6e:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ae70:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800ae72:	3b01      	subs	r3, #1
 800ae74:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae76:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800ae78:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae7a:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800ae7c:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae7e:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800ae80:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ae82:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ae84:	3301      	adds	r3, #1
 800ae86:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800ae88:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ae8a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800ae8c:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800ae8e:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800ae90:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800ae92:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ae94:	8563      	strh	r3, [r4, #42]	; 0x2a
 800ae96:	e790      	b.n	800adba <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae98:	6823      	ldr	r3, [r4, #0]
 800ae9a:	6819      	ldr	r1, [r3, #0]
 800ae9c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800aea0:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800aea2:	6819      	ldr	r1, [r3, #0]
 800aea4:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800aea8:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aeaa:	9004      	str	r0, [sp, #16]
 800aeac:	6959      	ldr	r1, [r3, #20]
 800aeae:	9104      	str	r1, [sp, #16]
 800aeb0:	6999      	ldr	r1, [r3, #24]
 800aeb2:	9104      	str	r1, [sp, #16]
 800aeb4:	9904      	ldr	r1, [sp, #16]
 800aeb6:	e739      	b.n	800ad2c <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aeb8:	695a      	ldr	r2, [r3, #20]
 800aeba:	0750      	lsls	r0, r2, #29
 800aebc:	f53f af44 	bmi.w	800ad48 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aec0:	f7ff f8b4 	bl	800a02c <HAL_GetTick>
 800aec4:	1b80      	subs	r0, r0, r6
 800aec6:	4285      	cmp	r5, r0
 800aec8:	d30e      	bcc.n	800aee8 <HAL_I2C_Mem_Read+0x2b4>
 800aeca:	b16d      	cbz	r5, 800aee8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aecc:	6823      	ldr	r3, [r4, #0]
 800aece:	e735      	b.n	800ad3c <HAL_I2C_Mem_Read+0x108>
 800aed0:	6953      	ldr	r3, [r2, #20]
 800aed2:	0758      	lsls	r0, r3, #29
 800aed4:	f53f af50 	bmi.w	800ad78 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aed8:	f7ff f8a8 	bl	800a02c <HAL_GetTick>
 800aedc:	1b80      	subs	r0, r0, r6
 800aede:	4285      	cmp	r5, r0
 800aee0:	d302      	bcc.n	800aee8 <HAL_I2C_Mem_Read+0x2b4>
 800aee2:	2d00      	cmp	r5, #0
 800aee4:	f47f af41 	bne.w	800ad6a <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800aee8:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800aeea:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800aeec:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800aeee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800aef2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800aef6:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800aef8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800aefc:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800aefe:	f043 0320 	orr.w	r3, r3, #32
}
 800af02:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af04:	6423      	str	r3, [r4, #64]	; 0x40
}
 800af06:	b007      	add	sp, #28
 800af08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af0c:	b95d      	cbnz	r5, 800af26 <HAL_I2C_Mem_Read+0x2f2>
 800af0e:	e02b      	b.n	800af68 <HAL_I2C_Mem_Read+0x334>
 800af10:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800af14:	695a      	ldr	r2, [r3, #20]
 800af16:	06d2      	lsls	r2, r2, #27
 800af18:	d40c      	bmi.n	800af34 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af1a:	f7ff f887 	bl	800a02c <HAL_GetTick>
 800af1e:	1b80      	subs	r0, r0, r6
 800af20:	4285      	cmp	r5, r0
 800af22:	d3e1      	bcc.n	800aee8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800af24:	6823      	ldr	r3, [r4, #0]
 800af26:	695a      	ldr	r2, [r3, #20]
 800af28:	0651      	lsls	r1, r2, #25
 800af2a:	d5f3      	bpl.n	800af14 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af2c:	691a      	ldr	r2, [r3, #16]
 800af2e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800af30:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800af32:	e7a5      	b.n	800ae80 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800af34:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800af36:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800af3a:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800af3c:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800af3e:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800af40:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800af44:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800af48:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800af4a:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800af4c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800af50:	2701      	movs	r7, #1
 800af52:	e680      	b.n	800ac56 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800af54:	695a      	ldr	r2, [r3, #20]
 800af56:	0652      	lsls	r2, r2, #25
 800af58:	f53f af44 	bmi.w	800ade4 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800af5c:	695a      	ldr	r2, [r3, #20]
 800af5e:	06d1      	lsls	r1, r2, #27
 800af60:	d4e8      	bmi.n	800af34 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af62:	f7ff f863 	bl	800a02c <HAL_GetTick>
 800af66:	e7bf      	b.n	800aee8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800af68:	695a      	ldr	r2, [r3, #20]
 800af6a:	0650      	lsls	r0, r2, #25
 800af6c:	d5f6      	bpl.n	800af5c <HAL_I2C_Mem_Read+0x328>
 800af6e:	e7dd      	b.n	800af2c <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af70:	6823      	ldr	r3, [r4, #0]
 800af72:	6819      	ldr	r1, [r3, #0]
 800af74:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800af78:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af7a:	9003      	str	r0, [sp, #12]
 800af7c:	6959      	ldr	r1, [r3, #20]
 800af7e:	9103      	str	r1, [sp, #12]
 800af80:	6999      	ldr	r1, [r3, #24]
 800af82:	9103      	str	r1, [sp, #12]
 800af84:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af86:	6819      	ldr	r1, [r3, #0]
 800af88:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800af8c:	6019      	str	r1, [r3, #0]
 800af8e:	e6cd      	b.n	800ad2c <HAL_I2C_Mem_Read+0xf8>

0800af90 <HAL_I2C_MasterTxCpltCallback>:
 800af90:	4770      	bx	lr
 800af92:	bf00      	nop

0800af94 <HAL_I2C_MasterRxCpltCallback>:
 800af94:	4770      	bx	lr
 800af96:	bf00      	nop

0800af98 <HAL_I2C_SlaveTxCpltCallback>:
 800af98:	4770      	bx	lr
 800af9a:	bf00      	nop

0800af9c <HAL_I2C_SlaveRxCpltCallback>:
 800af9c:	4770      	bx	lr
 800af9e:	bf00      	nop

0800afa0 <HAL_I2C_AddrCallback>:
}
 800afa0:	4770      	bx	lr
 800afa2:	bf00      	nop

0800afa4 <HAL_I2C_ListenCpltCallback>:
 800afa4:	4770      	bx	lr
 800afa6:	bf00      	nop

0800afa8 <HAL_I2C_MemTxCpltCallback>:
 800afa8:	4770      	bx	lr
 800afaa:	bf00      	nop

0800afac <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800afac:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800afb0:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800afb2:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800afb4:	b959      	cbnz	r1, 800afce <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800afb6:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800afb8:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800afba:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800afbc:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800afbe:	d00d      	beq.n	800afdc <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800afc0:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800afc4:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800afc6:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800afc8:	3201      	adds	r2, #1
 800afca:	6502      	str	r2, [r0, #80]	; 0x50
 800afcc:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800afce:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800afd0:	2901      	cmp	r1, #1
 800afd2:	d009      	beq.n	800afe8 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800afd4:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800afd6:	2902      	cmp	r1, #2
 800afd8:	d00e      	beq.n	800aff8 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800afda:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800afdc:	b2d2      	uxtb	r2, r2
 800afde:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800afe0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800afe2:	3202      	adds	r2, #2
 800afe4:	6502      	str	r2, [r0, #80]	; 0x50
 800afe6:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800afe8:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800afea:	6801      	ldr	r1, [r0, #0]
 800afec:	b2d2      	uxtb	r2, r2
 800afee:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800aff0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800aff2:	3201      	adds	r2, #1
 800aff4:	6502      	str	r2, [r0, #80]	; 0x50
 800aff6:	4770      	bx	lr
 800aff8:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800affa:	2a22      	cmp	r2, #34	; 0x22
 800affc:	d01f      	beq.n	800b03e <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800affe:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800b000:	b289      	uxth	r1, r1
 800b002:	b9c1      	cbnz	r1, 800b036 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b004:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800b006:	b289      	uxth	r1, r1
 800b008:	2900      	cmp	r1, #0
 800b00a:	d1e6      	bne.n	800afda <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800b00c:	2a21      	cmp	r2, #33	; 0x21
 800b00e:	d1e4      	bne.n	800afda <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b010:	6802      	ldr	r2, [r0, #0]
{
 800b012:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b014:	6854      	ldr	r4, [r2, #4]
 800b016:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800b01a:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b01c:	6814      	ldr	r4, [r2, #0]
 800b01e:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800b022:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800b024:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b026:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800b028:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b02c:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800b030:	f7ff ffba 	bl	800afa8 <HAL_I2C_MemTxCpltCallback>
}
 800b034:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b036:	2a21      	cmp	r2, #33	; 0x21
 800b038:	d00a      	beq.n	800b050 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b03a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800b03c:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800b03e:	6801      	ldr	r1, [r0, #0]
 800b040:	680a      	ldr	r2, [r1, #0]
 800b042:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b046:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800b048:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b04a:	3201      	adds	r2, #1
 800b04c:	6502      	str	r2, [r0, #80]	; 0x50
 800b04e:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b050:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800b052:	6802      	ldr	r2, [r0, #0]
 800b054:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b058:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800b05a:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b05c:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800b05e:	3a01      	subs	r2, #1
 800b060:	b292      	uxth	r2, r2
 800b062:	855a      	strh	r2, [r3, #42]	; 0x2a
 800b064:	4770      	bx	lr
 800b066:	bf00      	nop

0800b068 <HAL_I2C_MemRxCpltCallback>:
 800b068:	4770      	bx	lr
 800b06a:	bf00      	nop

0800b06c <HAL_I2C_ErrorCallback>:
 800b06c:	4770      	bx	lr
 800b06e:	bf00      	nop

0800b070 <HAL_I2C_AbortCpltCallback>:
 800b070:	4770      	bx	lr
 800b072:	bf00      	nop

0800b074 <I2C_DMAAbort>:
{
 800b074:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b076:	4b3a      	ldr	r3, [pc, #232]	; (800b160 <I2C_DMAAbort+0xec>)
 800b078:	4a3a      	ldr	r2, [pc, #232]	; (800b164 <I2C_DMAAbort+0xf0>)
 800b07a:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800b07c:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800b07e:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b080:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800b082:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b084:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800b088:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b08a:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b08c:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b090:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b092:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800b096:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b09a:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b09c:	9301      	str	r3, [sp, #4]
 800b09e:	e005      	b.n	800b0ac <I2C_DMAAbort+0x38>
    count--;
 800b0a0:	9b01      	ldr	r3, [sp, #4]
 800b0a2:	3b01      	subs	r3, #1
 800b0a4:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b0a6:	6813      	ldr	r3, [r2, #0]
 800b0a8:	059b      	lsls	r3, r3, #22
 800b0aa:	d506      	bpl.n	800b0ba <I2C_DMAAbort+0x46>
    if (count == 0U)
 800b0ac:	9b01      	ldr	r3, [sp, #4]
 800b0ae:	2b00      	cmp	r3, #0
 800b0b0:	d1f6      	bne.n	800b0a0 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800b0b2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b0b4:	f043 0320 	orr.w	r3, r3, #32
 800b0b8:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800b0ba:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800b0bc:	b34c      	cbz	r4, 800b112 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800b0be:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800b0c0:	2500      	movs	r5, #0
 800b0c2:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800b0c4:	b1f3      	cbz	r3, 800b104 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b0c6:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b0c8:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b0ca:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800b0ce:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800b0d0:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b0d2:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800b0d4:	2400      	movs	r4, #0
 800b0d6:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800b0d8:	6813      	ldr	r3, [r2, #0]
 800b0da:	f023 0301 	bic.w	r3, r3, #1
 800b0de:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b0e0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b0e4:	2b60      	cmp	r3, #96	; 0x60
 800b0e6:	d02a      	beq.n	800b13e <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b0e8:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800b0ec:	2928      	cmp	r1, #40	; 0x28
 800b0ee:	d019      	beq.n	800b124 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800b0f0:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0f2:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b0f4:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0f8:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800b0fc:	f7ff ffb6 	bl	800b06c <HAL_I2C_ErrorCallback>
}
 800b100:	b002      	add	sp, #8
 800b102:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b104:	6815      	ldr	r5, [r2, #0]
 800b106:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b10a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b10c:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b10e:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800b110:	e7e2      	b.n	800b0d8 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800b112:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800b114:	b1f3      	cbz	r3, 800b154 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b116:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b118:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b11a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b11e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b120:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b122:	e7d7      	b.n	800b0d4 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800b124:	6813      	ldr	r3, [r2, #0]
 800b126:	f043 0301 	orr.w	r3, r3, #1
 800b12a:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b12c:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b12e:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b130:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800b134:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b136:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b138:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800b13c:	e7de      	b.n	800b0fc <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b13e:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800b140:	2220      	movs	r2, #32
 800b142:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b146:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b14a:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800b14c:	f7ff ff90 	bl	800b070 <HAL_I2C_AbortCpltCallback>
}
 800b150:	b002      	add	sp, #8
 800b152:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b154:	6814      	ldr	r4, [r2, #0]
 800b156:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800b15a:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800b15c:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b15e:	e7bb      	b.n	800b0d8 <I2C_DMAAbort+0x64>
 800b160:	20000078 	.word	0x20000078
 800b164:	14f8b589 	.word	0x14f8b589

0800b168 <I2C_ITError>:
{
 800b168:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b16a:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800b16e:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b172:	2b10      	cmp	r3, #16
{
 800b174:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b176:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b178:	d039      	beq.n	800b1ee <I2C_ITError+0x86>
 800b17a:	b2d9      	uxtb	r1, r3
 800b17c:	2940      	cmp	r1, #64	; 0x40
 800b17e:	d036      	beq.n	800b1ee <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b180:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800b184:	2928      	cmp	r1, #40	; 0x28
 800b186:	d03d      	beq.n	800b204 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b188:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b18a:	6859      	ldr	r1, [r3, #4]
 800b18c:	0508      	lsls	r0, r1, #20
 800b18e:	d407      	bmi.n	800b1a0 <I2C_ITError+0x38>
 800b190:	2a60      	cmp	r2, #96	; 0x60
 800b192:	d005      	beq.n	800b1a0 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800b194:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b196:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b198:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b19c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800b1a0:	2200      	movs	r2, #0
 800b1a2:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b1a4:	685a      	ldr	r2, [r3, #4]
 800b1a6:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b1aa:	d134      	bne.n	800b216 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b1ac:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b1b0:	2960      	cmp	r1, #96	; 0x60
 800b1b2:	d075      	beq.n	800b2a0 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b1b4:	695a      	ldr	r2, [r3, #20]
 800b1b6:	0650      	lsls	r0, r2, #25
 800b1b8:	d505      	bpl.n	800b1c6 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b1ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b1bc:	691b      	ldr	r3, [r3, #16]
 800b1be:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b1c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b1c2:	3301      	adds	r3, #1
 800b1c4:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800b1c6:	4620      	mov	r0, r4
 800b1c8:	f7ff ff50 	bl	800b06c <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800b1cc:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800b1ce:	0719      	lsls	r1, r3, #28
 800b1d0:	d004      	beq.n	800b1dc <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b1d2:	6822      	ldr	r2, [r4, #0]
 800b1d4:	6853      	ldr	r3, [r2, #4]
 800b1d6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b1da:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800b1dc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b1e0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b1e2:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800b1e4:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b1e6:	d501      	bpl.n	800b1ec <I2C_ITError+0x84>
 800b1e8:	2b28      	cmp	r3, #40	; 0x28
 800b1ea:	d02f      	beq.n	800b24c <I2C_ITError+0xe4>
}
 800b1ec:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b1ee:	2a22      	cmp	r2, #34	; 0x22
 800b1f0:	d1c6      	bne.n	800b180 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b1f2:	6823      	ldr	r3, [r4, #0]
 800b1f4:	681a      	ldr	r2, [r3, #0]
 800b1f6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b1fa:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b1fc:	685a      	ldr	r2, [r3, #4]
 800b1fe:	0512      	lsls	r2, r2, #20
 800b200:	d5c8      	bpl.n	800b194 <I2C_ITError+0x2c>
 800b202:	e7cd      	b.n	800b1a0 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b204:	2300      	movs	r3, #0
 800b206:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b208:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800b20a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b20e:	685a      	ldr	r2, [r3, #4]
 800b210:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b214:	d0ca      	beq.n	800b1ac <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b216:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b218:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b21a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b21e:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b220:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b224:	2b01      	cmp	r3, #1
 800b226:	d01e      	beq.n	800b266 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b228:	4b28      	ldr	r3, [pc, #160]	; (800b2cc <I2C_ITError+0x164>)
 800b22a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b22c:	f7fe ff88 	bl	800a140 <HAL_DMA_Abort_IT>
 800b230:	2800      	cmp	r0, #0
 800b232:	d0cb      	beq.n	800b1cc <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800b234:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b236:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800b238:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b23a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b23c:	f023 0301 	bic.w	r3, r3, #1
 800b240:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b242:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b246:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b248:	4798      	blx	r3
 800b24a:	e7bf      	b.n	800b1cc <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b24c:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800b24e:	4920      	ldr	r1, [pc, #128]	; (800b2d0 <I2C_ITError+0x168>)
 800b250:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800b252:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800b254:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800b256:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800b258:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b25c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800b260:	f7ff fea0 	bl	800afa4 <HAL_I2C_ListenCpltCallback>
}
 800b264:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b266:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b268:	4b18      	ldr	r3, [pc, #96]	; (800b2cc <I2C_ITError+0x164>)
 800b26a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b26c:	f7fe ff68 	bl	800a140 <HAL_DMA_Abort_IT>
 800b270:	2800      	cmp	r0, #0
 800b272:	d0ab      	beq.n	800b1cc <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b274:	6823      	ldr	r3, [r4, #0]
 800b276:	695a      	ldr	r2, [r3, #20]
 800b278:	0651      	lsls	r1, r2, #25
 800b27a:	d506      	bpl.n	800b28a <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b27c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b27e:	691b      	ldr	r3, [r3, #16]
 800b280:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800b282:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b284:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800b286:	3201      	adds	r2, #1
 800b288:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b28a:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b28c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800b28e:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b292:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b294:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b296:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b29a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b29c:	4798      	blx	r3
 800b29e:	e795      	b.n	800b1cc <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800b2a0:	2120      	movs	r1, #32
 800b2a2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b2a6:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b2a8:	695a      	ldr	r2, [r3, #20]
 800b2aa:	0652      	lsls	r2, r2, #25
 800b2ac:	d506      	bpl.n	800b2bc <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b2ae:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b2b0:	691b      	ldr	r3, [r3, #16]
 800b2b2:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b2b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b2b6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b2b8:	3201      	adds	r2, #1
 800b2ba:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b2bc:	681a      	ldr	r2, [r3, #0]
 800b2be:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800b2c2:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800b2c4:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800b2c6:	f7ff fed3 	bl	800b070 <HAL_I2C_AbortCpltCallback>
 800b2ca:	e77f      	b.n	800b1cc <I2C_ITError+0x64>
 800b2cc:	0800b075 	.word	0x0800b075
 800b2d0:	ffff0000 	.word	0xffff0000

0800b2d4 <HAL_I2C_EV_IRQHandler>:
{
 800b2d4:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b2d6:	6803      	ldr	r3, [r0, #0]
{
 800b2d8:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b2da:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b2dc:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b2de:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b2e2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b2e6:	2910      	cmp	r1, #16
{
 800b2e8:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b2ea:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b2ec:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b2f0:	d022      	beq.n	800b338 <HAL_I2C_EV_IRQHandler+0x64>
 800b2f2:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b2f6:	d01f      	beq.n	800b338 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b2f8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b2fa:	2900      	cmp	r1, #0
 800b2fc:	f000 8094 	beq.w	800b428 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b300:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b302:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b304:	f011 0602 	ands.w	r6, r1, #2
 800b308:	d059      	beq.n	800b3be <HAL_I2C_EV_IRQHandler+0xea>
 800b30a:	0586      	lsls	r6, r0, #22
 800b30c:	d559      	bpl.n	800b3c2 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b30e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b310:	b102      	cbz	r2, 800b314 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b312:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b314:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b318:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b31c:	2a28      	cmp	r2, #40	; 0x28
 800b31e:	f000 821e 	beq.w	800b75e <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b322:	2200      	movs	r2, #0
 800b324:	920c      	str	r2, [sp, #48]	; 0x30
 800b326:	6959      	ldr	r1, [r3, #20]
 800b328:	910c      	str	r1, [sp, #48]	; 0x30
 800b32a:	699b      	ldr	r3, [r3, #24]
 800b32c:	930c      	str	r3, [sp, #48]	; 0x30
 800b32e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b330:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b334:	b00e      	add	sp, #56	; 0x38
 800b336:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b338:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b33a:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b33c:	f011 0f01 	tst.w	r1, #1
 800b340:	d11a      	bne.n	800b378 <HAL_I2C_EV_IRQHandler+0xa4>
 800b342:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b346:	d0f5      	beq.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800b348:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b34c:	d0f2      	beq.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b34e:	070d      	lsls	r5, r1, #28
 800b350:	d56d      	bpl.n	800b42e <HAL_I2C_EV_IRQHandler+0x15a>
 800b352:	0585      	lsls	r5, r0, #22
 800b354:	f140 8083 	bpl.w	800b45e <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b358:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b35a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b35c:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b35e:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b360:	2900      	cmp	r1, #0
 800b362:	f000 81e3 	beq.w	800b72c <HAL_I2C_EV_IRQHandler+0x458>
 800b366:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b368:	2a00      	cmp	r2, #0
 800b36a:	f000 81df 	beq.w	800b72c <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b36e:	685a      	ldr	r2, [r3, #4]
 800b370:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b374:	605a      	str	r2, [r3, #4]
 800b376:	e7dd      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b378:	0585      	lsls	r5, r0, #22
 800b37a:	d56e      	bpl.n	800b45a <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b37c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b37e:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b382:	f000 81e9 	beq.w	800b758 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b386:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b388:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b38c:	bf04      	itt	eq
 800b38e:	2208      	moveq	r2, #8
 800b390:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b392:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b396:	2a40      	cmp	r2, #64	; 0x40
 800b398:	f000 81d7 	beq.w	800b74a <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b39c:	6922      	ldr	r2, [r4, #16]
 800b39e:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b3a2:	f000 81b2 	beq.w	800b70a <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b3a6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b3a8:	2a00      	cmp	r2, #0
 800b3aa:	f040 81ef 	bne.w	800b78c <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b3ae:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b3b0:	11d2      	asrs	r2, r2, #7
 800b3b2:	f002 0206 	and.w	r2, r2, #6
 800b3b6:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b3ba:	611a      	str	r2, [r3, #16]
 800b3bc:	e7ba      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b3be:	06cd      	lsls	r5, r1, #27
 800b3c0:	d47c      	bmi.n	800b4bc <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b3c2:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b3c6:	2a21      	cmp	r2, #33	; 0x21
 800b3c8:	f000 80f5 	beq.w	800b5b6 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b3cc:	064e      	lsls	r6, r1, #25
 800b3ce:	f140 8132 	bpl.w	800b636 <HAL_I2C_EV_IRQHandler+0x362>
 800b3d2:	0545      	lsls	r5, r0, #21
 800b3d4:	f140 812f 	bpl.w	800b636 <HAL_I2C_EV_IRQHandler+0x362>
 800b3d8:	0749      	lsls	r1, r1, #29
 800b3da:	f100 812f 	bmi.w	800b63c <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b3de:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b3e2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3e4:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b3e6:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b3e8:	2a00      	cmp	r2, #0
 800b3ea:	d0a3      	beq.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3ec:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b3ee:	691b      	ldr	r3, [r3, #16]
 800b3f0:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b3f2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b3f4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3f6:	3b01      	subs	r3, #1
 800b3f8:	b29b      	uxth	r3, r3
 800b3fa:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b3fc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b3fe:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b400:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b402:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b404:	2b00      	cmp	r3, #0
 800b406:	d195      	bne.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800b408:	292a      	cmp	r1, #42	; 0x2a
 800b40a:	d193      	bne.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b40c:	6822      	ldr	r2, [r4, #0]
 800b40e:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b410:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b412:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b414:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b418:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b41a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b41c:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b41e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b422:	f7ff fdbb 	bl	800af9c <HAL_I2C_SlaveRxCpltCallback>
 800b426:	e785      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b428:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b42a:	6959      	ldr	r1, [r3, #20]
 800b42c:	e76a      	b.n	800b304 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b42e:	078d      	lsls	r5, r1, #30
 800b430:	d515      	bpl.n	800b45e <HAL_I2C_EV_IRQHandler+0x18a>
 800b432:	0585      	lsls	r5, r0, #22
 800b434:	d513      	bpl.n	800b45e <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b436:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b43a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b43c:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b43e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b442:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b444:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b446:	f000 81b3 	beq.w	800b7b0 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b44a:	2200      	movs	r2, #0
 800b44c:	920a      	str	r2, [sp, #40]	; 0x28
 800b44e:	695a      	ldr	r2, [r3, #20]
 800b450:	920a      	str	r2, [sp, #40]	; 0x28
 800b452:	699b      	ldr	r3, [r3, #24]
 800b454:	930a      	str	r3, [sp, #40]	; 0x28
 800b456:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b458:	e76c      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b45a:	070d      	lsls	r5, r1, #28
 800b45c:	d5e7      	bpl.n	800b42e <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b45e:	0776      	lsls	r6, r6, #29
 800b460:	f140 80f5 	bpl.w	800b64e <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b464:	685d      	ldr	r5, [r3, #4]
 800b466:	052d      	lsls	r5, r5, #20
 800b468:	f53f af64 	bmi.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b46c:	060e      	lsls	r6, r1, #24
 800b46e:	f140 8115 	bpl.w	800b69c <HAL_I2C_EV_IRQHandler+0x3c8>
 800b472:	0545      	lsls	r5, r0, #21
 800b474:	f140 8112 	bpl.w	800b69c <HAL_I2C_EV_IRQHandler+0x3c8>
 800b478:	074e      	lsls	r6, r1, #29
 800b47a:	f100 8112 	bmi.w	800b6a2 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b47e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b482:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b484:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b488:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b48a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b48c:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b48e:	2800      	cmp	r0, #0
 800b490:	f040 8235 	bne.w	800b8fe <HAL_I2C_EV_IRQHandler+0x62a>
 800b494:	2a21      	cmp	r2, #33	; 0x21
 800b496:	f000 8347 	beq.w	800bb28 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b49a:	2940      	cmp	r1, #64	; 0x40
 800b49c:	f47f af4a 	bne.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b4a0:	2a22      	cmp	r2, #34	; 0x22
 800b4a2:	f47f af47 	bne.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b4a6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b4a8:	b292      	uxth	r2, r2
 800b4aa:	2a00      	cmp	r2, #0
 800b4ac:	f000 8268 	beq.w	800b980 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b4b0:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b4b4:	2a40      	cmp	r2, #64	; 0x40
 800b4b6:	f040 80b4 	bne.w	800b622 <HAL_I2C_EV_IRQHandler+0x34e>
 800b4ba:	e0fc      	b.n	800b6b6 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b4bc:	0585      	lsls	r5, r0, #22
 800b4be:	d580      	bpl.n	800b3c2 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b4c0:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b4c4:	685a      	ldr	r2, [r3, #4]
 800b4c6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b4ca:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b4cc:	960d      	str	r6, [sp, #52]	; 0x34
 800b4ce:	695a      	ldr	r2, [r3, #20]
 800b4d0:	920d      	str	r2, [sp, #52]	; 0x34
 800b4d2:	681a      	ldr	r2, [r3, #0]
 800b4d4:	f042 0201 	orr.w	r2, r2, #1
 800b4d8:	601a      	str	r2, [r3, #0]
 800b4da:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b4dc:	681a      	ldr	r2, [r3, #0]
 800b4de:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b4e2:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b4e4:	685a      	ldr	r2, [r3, #4]
 800b4e6:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b4e8:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b4ea:	d521      	bpl.n	800b530 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b4ec:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b4f0:	2a22      	cmp	r2, #34	; 0x22
 800b4f2:	f000 817a 	beq.w	800b7ea <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b4f6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b4f8:	6802      	ldr	r2, [r0, #0]
 800b4fa:	6852      	ldr	r2, [r2, #4]
 800b4fc:	b292      	uxth	r2, r2
 800b4fe:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b500:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b502:	b292      	uxth	r2, r2
 800b504:	b11a      	cbz	r2, 800b50e <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b506:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b508:	f042 0204 	orr.w	r2, r2, #4
 800b50c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b50e:	685a      	ldr	r2, [r3, #4]
 800b510:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b514:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b516:	f7fe fe25 	bl	800a164 <HAL_DMA_GetState>
 800b51a:	2801      	cmp	r0, #1
 800b51c:	d008      	beq.n	800b530 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b51e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b520:	4b99      	ldr	r3, [pc, #612]	; (800b788 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b522:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b524:	f7fe fe0c 	bl	800a140 <HAL_DMA_Abort_IT>
 800b528:	b110      	cbz	r0, 800b530 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b52a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b52c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b52e:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b530:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b532:	b29b      	uxth	r3, r3
 800b534:	b313      	cbz	r3, 800b57c <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b536:	6823      	ldr	r3, [r4, #0]
 800b538:	695a      	ldr	r2, [r3, #20]
 800b53a:	0752      	lsls	r2, r2, #29
 800b53c:	d50a      	bpl.n	800b554 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b53e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b540:	691b      	ldr	r3, [r3, #16]
 800b542:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b544:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b546:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b548:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b54a:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b54c:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b54e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b550:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b552:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b554:	695a      	ldr	r2, [r3, #20]
 800b556:	0656      	lsls	r6, r2, #25
 800b558:	d509      	bpl.n	800b56e <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b55a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b55c:	691b      	ldr	r3, [r3, #16]
 800b55e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b560:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b562:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b564:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b566:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b568:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b56a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b56c:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b56e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b570:	b29b      	uxth	r3, r3
 800b572:	b11b      	cbz	r3, 800b57c <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b574:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b576:	f043 0304 	orr.w	r3, r3, #4
 800b57a:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b57c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b57e:	2b00      	cmp	r3, #0
 800b580:	f040 80dd 	bne.w	800b73e <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b584:	2d2a      	cmp	r5, #42	; 0x2a
 800b586:	f000 8151 	beq.w	800b82c <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b58a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b58e:	2b28      	cmp	r3, #40	; 0x28
 800b590:	f000 8154 	beq.w	800b83c <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b594:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b596:	2b22      	cmp	r3, #34	; 0x22
 800b598:	d002      	beq.n	800b5a0 <HAL_I2C_EV_IRQHandler+0x2cc>
 800b59a:	2d22      	cmp	r5, #34	; 0x22
 800b59c:	f47f aeca 	bne.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b5a0:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b5a2:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b5a4:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b5a6:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b5a8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b5ac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b5b0:	f7ff fcf4 	bl	800af9c <HAL_I2C_SlaveRxCpltCallback>
 800b5b4:	e6be      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b5b6:	060d      	lsls	r5, r1, #24
 800b5b8:	d528      	bpl.n	800b60c <HAL_I2C_EV_IRQHandler+0x338>
 800b5ba:	0546      	lsls	r6, r0, #21
 800b5bc:	d526      	bpl.n	800b60c <HAL_I2C_EV_IRQHandler+0x338>
 800b5be:	074d      	lsls	r5, r1, #29
 800b5c0:	d427      	bmi.n	800b612 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b5c2:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b5c6:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b5c8:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b5ca:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b5cc:	2900      	cmp	r1, #0
 800b5ce:	f43f aeb1 	beq.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b5d2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b5d4:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b5d8:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b5da:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b5dc:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b5de:	3901      	subs	r1, #1
 800b5e0:	b289      	uxth	r1, r1
 800b5e2:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b5e4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b5e6:	b289      	uxth	r1, r1
 800b5e8:	2900      	cmp	r1, #0
 800b5ea:	f47f aea3 	bne.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800b5ee:	2829      	cmp	r0, #41	; 0x29
 800b5f0:	f47f aea0 	bne.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5f4:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b5f6:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5f8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b5fc:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b5fe:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b600:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b602:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b606:	f7ff fcc7 	bl	800af98 <HAL_I2C_SlaveTxCpltCallback>
 800b60a:	e693      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b60c:	0749      	lsls	r1, r1, #29
 800b60e:	f57f ae91 	bpl.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800b612:	0582      	lsls	r2, r0, #22
 800b614:	f57f ae8e 	bpl.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b618:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b61a:	b292      	uxth	r2, r2
 800b61c:	2a00      	cmp	r2, #0
 800b61e:	f43f ae89 	beq.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b622:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b624:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b628:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b62a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b62c:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b62e:	3b01      	subs	r3, #1
 800b630:	b29b      	uxth	r3, r3
 800b632:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b634:	e67e      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b636:	074a      	lsls	r2, r1, #29
 800b638:	f57f ae7c 	bpl.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800b63c:	0586      	lsls	r6, r0, #22
 800b63e:	f57f ae79 	bpl.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b642:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b644:	b292      	uxth	r2, r2
 800b646:	2a00      	cmp	r2, #0
 800b648:	f43f ae74 	beq.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800b64c:	e01b      	b.n	800b686 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b64e:	685a      	ldr	r2, [r3, #4]
 800b650:	0512      	lsls	r2, r2, #20
 800b652:	f53f ae6f 	bmi.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b656:	064e      	lsls	r6, r1, #25
 800b658:	d433      	bmi.n	800b6c2 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b65a:	0749      	lsls	r1, r1, #29
 800b65c:	f57f ae6a 	bpl.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800b660:	0582      	lsls	r2, r0, #22
 800b662:	f57f ae67 	bpl.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b666:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b668:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b66a:	b292      	uxth	r2, r2
 800b66c:	2a04      	cmp	r2, #4
 800b66e:	f000 8113 	beq.w	800b898 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b672:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b674:	b292      	uxth	r2, r2
 800b676:	2a03      	cmp	r2, #3
 800b678:	f000 8153 	beq.w	800b922 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b67c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b67e:	b292      	uxth	r2, r2
 800b680:	2a02      	cmp	r2, #2
 800b682:	f000 8182 	beq.w	800b98a <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b686:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b688:	691b      	ldr	r3, [r3, #16]
 800b68a:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b68c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b68e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b690:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b692:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b694:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b696:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b698:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b69a:	e64b      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b69c:	074d      	lsls	r5, r1, #29
 800b69e:	f57f ae49 	bpl.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800b6a2:	0581      	lsls	r1, r0, #22
 800b6a4:	f57f ae46 	bpl.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b6a8:	2a21      	cmp	r2, #33	; 0x21
 800b6aa:	f000 80fd 	beq.w	800b8a8 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b6ae:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b6b2:	f47f ae3f 	bne.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b6b6:	4620      	mov	r0, r4
}
 800b6b8:	b00e      	add	sp, #56	; 0x38
 800b6ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b6be:	f7ff bc75 	b.w	800afac <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b6c2:	0545      	lsls	r5, r0, #21
 800b6c4:	d5c9      	bpl.n	800b65a <HAL_I2C_EV_IRQHandler+0x386>
 800b6c6:	f011 0104 	ands.w	r1, r1, #4
 800b6ca:	d1c9      	bne.n	800b660 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b6cc:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b6d0:	2a22      	cmp	r2, #34	; 0x22
 800b6d2:	f47f ae2f 	bne.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b6d6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b6d8:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b6da:	2a03      	cmp	r2, #3
 800b6dc:	f240 81ec 	bls.w	800bab8 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6e0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b6e2:	691b      	ldr	r3, [r3, #16]
 800b6e4:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b6e6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b6e8:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b6ea:	3b01      	subs	r3, #1
 800b6ec:	b29b      	uxth	r3, r3
 800b6ee:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b6f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b6f2:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b6f4:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b6f6:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b6f8:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b6fa:	f47f ae1b 	bne.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b6fe:	6822      	ldr	r2, [r4, #0]
 800b700:	6853      	ldr	r3, [r2, #4]
 800b702:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b706:	6053      	str	r3, [r2, #4]
 800b708:	e614      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b70a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b70e:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b710:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b712:	bf16      	itet	ne
 800b714:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b718:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b71c:	b2d2      	uxtbne	r2, r2
 800b71e:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b720:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b722:	b11a      	cbz	r2, 800b72c <HAL_I2C_EV_IRQHandler+0x458>
 800b724:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b726:	2a00      	cmp	r2, #0
 800b728:	f47f ae21 	bne.w	800b36e <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b72c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b72e:	2a00      	cmp	r2, #0
 800b730:	f43f ae00 	beq.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800b734:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b736:	2a00      	cmp	r2, #0
 800b738:	f47f ae19 	bne.w	800b36e <HAL_I2C_EV_IRQHandler+0x9a>
 800b73c:	e5fa      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b73e:	4620      	mov	r0, r4
}
 800b740:	b00e      	add	sp, #56	; 0x38
 800b742:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b746:	f7ff bd0f 	b.w	800b168 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b74a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b74c:	bb52      	cbnz	r2, 800b7a4 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b74e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b750:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b754:	611a      	str	r2, [r3, #16]
 800b756:	e5ed      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b758:	2201      	movs	r2, #1
 800b75a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b75c:	e619      	b.n	800b392 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b75e:	685a      	ldr	r2, [r3, #4]
 800b760:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b764:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b766:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b768:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b76c:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b770:	bf54      	ite	pl
 800b772:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b774:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b776:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b77a:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b77e:	4620      	mov	r0, r4
 800b780:	f7ff fc0e 	bl	800afa0 <HAL_I2C_AddrCallback>
 800b784:	e5d6      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800b786:	bf00      	nop
 800b788:	0800b075 	.word	0x0800b075
      else if (hi2c->EventCount == 1U)
 800b78c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b78e:	2a01      	cmp	r2, #1
 800b790:	f47f add0 	bne.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b794:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b796:	11d2      	asrs	r2, r2, #7
 800b798:	f002 0206 	and.w	r2, r2, #6
 800b79c:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b7a0:	611a      	str	r2, [r3, #16]
 800b7a2:	e5c7      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b7a4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b7a6:	f042 0201 	orr.w	r2, r2, #1
 800b7aa:	b2d2      	uxtb	r2, r2
 800b7ac:	611a      	str	r2, [r3, #16]
 800b7ae:	e5c1      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b7b0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b7b2:	b911      	cbnz	r1, 800b7ba <HAL_I2C_EV_IRQHandler+0x4e6>
 800b7b4:	2a40      	cmp	r2, #64	; 0x40
 800b7b6:	f000 809b 	beq.w	800b8f0 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b7ba:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b7bc:	b922      	cbnz	r2, 800b7c8 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b7be:	6921      	ldr	r1, [r4, #16]
 800b7c0:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b7c4:	f000 809f 	beq.w	800b906 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b7c8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b7ca:	b292      	uxth	r2, r2
 800b7cc:	2a00      	cmp	r2, #0
 800b7ce:	d142      	bne.n	800b856 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b7d0:	9203      	str	r2, [sp, #12]
 800b7d2:	695a      	ldr	r2, [r3, #20]
 800b7d4:	9203      	str	r2, [sp, #12]
 800b7d6:	699a      	ldr	r2, [r3, #24]
 800b7d8:	9203      	str	r2, [sp, #12]
 800b7da:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7dc:	681a      	ldr	r2, [r3, #0]
 800b7de:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b7e2:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b7e4:	2300      	movs	r3, #0
 800b7e6:	6523      	str	r3, [r4, #80]	; 0x50
 800b7e8:	e5a4      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b7ea:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b7ec:	6802      	ldr	r2, [r0, #0]
 800b7ee:	6852      	ldr	r2, [r2, #4]
 800b7f0:	b292      	uxth	r2, r2
 800b7f2:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b7f4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b7f6:	b292      	uxth	r2, r2
 800b7f8:	b11a      	cbz	r2, 800b802 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b7fa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b7fc:	f042 0204 	orr.w	r2, r2, #4
 800b800:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b802:	685a      	ldr	r2, [r3, #4]
 800b804:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b808:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b80a:	f7fe fcab 	bl	800a164 <HAL_DMA_GetState>
 800b80e:	2801      	cmp	r0, #1
 800b810:	f43f ae8e 	beq.w	800b530 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b814:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b816:	4b98      	ldr	r3, [pc, #608]	; (800ba78 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b818:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b81a:	f7fe fc91 	bl	800a140 <HAL_DMA_Abort_IT>
 800b81e:	2800      	cmp	r0, #0
 800b820:	f43f ae86 	beq.w	800b530 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b824:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b826:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b828:	4798      	blx	r3
 800b82a:	e681      	b.n	800b530 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b82c:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b82e:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b830:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b832:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b836:	f7ff fbb1 	bl	800af9c <HAL_I2C_SlaveRxCpltCallback>
 800b83a:	e6a6      	b.n	800b58a <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b83c:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b83e:	498f      	ldr	r1, [pc, #572]	; (800ba7c <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b840:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b842:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b844:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b846:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b848:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b84c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b850:	f7ff fba8 	bl	800afa4 <HAL_I2C_ListenCpltCallback>
 800b854:	e56e      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b856:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b858:	b292      	uxth	r2, r2
 800b85a:	2a01      	cmp	r2, #1
 800b85c:	d070      	beq.n	800b940 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b85e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b860:	b292      	uxth	r2, r2
 800b862:	2a02      	cmp	r2, #2
 800b864:	f000 80d6 	beq.w	800ba14 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b868:	681a      	ldr	r2, [r3, #0]
 800b86a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b86e:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b870:	685a      	ldr	r2, [r3, #4]
 800b872:	0511      	lsls	r1, r2, #20
 800b874:	d508      	bpl.n	800b888 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b876:	2820      	cmp	r0, #32
 800b878:	f200 80f8 	bhi.w	800ba6c <HAL_I2C_EV_IRQHandler+0x798>
 800b87c:	2807      	cmp	r0, #7
 800b87e:	f200 80ea 	bhi.w	800ba56 <HAL_I2C_EV_IRQHandler+0x782>
 800b882:	2801      	cmp	r0, #1
 800b884:	f000 80ed 	beq.w	800ba62 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b888:	2200      	movs	r2, #0
 800b88a:	9209      	str	r2, [sp, #36]	; 0x24
 800b88c:	695a      	ldr	r2, [r3, #20]
 800b88e:	9209      	str	r2, [sp, #36]	; 0x24
 800b890:	699b      	ldr	r3, [r3, #24]
 800b892:	9309      	str	r3, [sp, #36]	; 0x24
 800b894:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b896:	e7a5      	b.n	800b7e4 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b898:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b89a:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b89c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8a0:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b8a2:	691b      	ldr	r3, [r3, #16]
 800b8a4:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b8a6:	e6f1      	b.n	800b68c <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b8a8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b8aa:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b8ae:	2a21      	cmp	r2, #33	; 0x21
 800b8b0:	f47f ad40 	bne.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b8b4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b8b6:	b292      	uxth	r2, r2
 800b8b8:	2a00      	cmp	r2, #0
 800b8ba:	f47f aeb2 	bne.w	800b622 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b8be:	2908      	cmp	r1, #8
 800b8c0:	f000 80e2 	beq.w	800ba88 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b8c4:	2920      	cmp	r1, #32
 800b8c6:	f000 80df 	beq.w	800ba88 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b8ca:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b8ce:	f000 80db 	beq.w	800ba88 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b8d2:	6859      	ldr	r1, [r3, #4]
 800b8d4:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b8d8:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b8da:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b8dc:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b8de:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b8e0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b8e4:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b8e6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b8ea:	f7ff fb51 	bl	800af90 <HAL_I2C_MasterTxCpltCallback>
 800b8ee:	e521      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8f0:	9101      	str	r1, [sp, #4]
 800b8f2:	695a      	ldr	r2, [r3, #20]
 800b8f4:	9201      	str	r2, [sp, #4]
 800b8f6:	699b      	ldr	r3, [r3, #24]
 800b8f8:	9301      	str	r3, [sp, #4]
 800b8fa:	9b01      	ldr	r3, [sp, #4]
 800b8fc:	e51a      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b8fe:	2a21      	cmp	r2, #33	; 0x21
 800b900:	f43f add1 	beq.w	800b4a6 <HAL_I2C_EV_IRQHandler+0x1d2>
 800b904:	e5c9      	b.n	800b49a <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b906:	9202      	str	r2, [sp, #8]
 800b908:	695a      	ldr	r2, [r3, #20]
 800b90a:	9202      	str	r2, [sp, #8]
 800b90c:	699a      	ldr	r2, [r3, #24]
 800b90e:	9202      	str	r2, [sp, #8]
 800b910:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b912:	681a      	ldr	r2, [r3, #0]
 800b914:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b918:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b91a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b91c:	3301      	adds	r3, #1
 800b91e:	6523      	str	r3, [r4, #80]	; 0x50
 800b920:	e508      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b922:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b924:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b926:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b92a:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b92c:	f43f aeab 	beq.w	800b686 <HAL_I2C_EV_IRQHandler+0x3b2>
 800b930:	2902      	cmp	r1, #2
 800b932:	f43f aea8 	beq.w	800b686 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b936:	681a      	ldr	r2, [r3, #0]
 800b938:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b93c:	601a      	str	r2, [r3, #0]
 800b93e:	e6a2      	b.n	800b686 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b940:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b944:	f000 811b 	beq.w	800bb7e <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b948:	2808      	cmp	r0, #8
 800b94a:	f000 8108 	beq.w	800bb5e <HAL_I2C_EV_IRQHandler+0x88a>
 800b94e:	2820      	cmp	r0, #32
 800b950:	f000 8105 	beq.w	800bb5e <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b954:	2d12      	cmp	r5, #18
 800b956:	f000 80ff 	beq.w	800bb58 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b95a:	2810      	cmp	r0, #16
 800b95c:	d804      	bhi.n	800b968 <HAL_I2C_EV_IRQHandler+0x694>
 800b95e:	4a48      	ldr	r2, [pc, #288]	; (800ba80 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b960:	40c2      	lsrs	r2, r0
 800b962:	07d1      	lsls	r1, r2, #31
 800b964:	f100 814c 	bmi.w	800bc00 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b968:	681a      	ldr	r2, [r3, #0]
 800b96a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b96e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b970:	2200      	movs	r2, #0
 800b972:	9206      	str	r2, [sp, #24]
 800b974:	695a      	ldr	r2, [r3, #20]
 800b976:	9206      	str	r2, [sp, #24]
 800b978:	699b      	ldr	r3, [r3, #24]
 800b97a:	9306      	str	r3, [sp, #24]
 800b97c:	9b06      	ldr	r3, [sp, #24]
 800b97e:	e731      	b.n	800b7e4 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b980:	685a      	ldr	r2, [r3, #4]
 800b982:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b986:	605a      	str	r2, [r3, #4]
 800b988:	e4d4      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b98a:	3901      	subs	r1, #1
 800b98c:	290f      	cmp	r1, #15
 800b98e:	d809      	bhi.n	800b9a4 <HAL_I2C_EV_IRQHandler+0x6d0>
 800b990:	e8df f001 	tbb	[pc, r1]
 800b994:	3608363b 	.word	0x3608363b
 800b998:	08080808 	.word	0x08080808
 800b99c:	08080808 	.word	0x08080808
 800b9a0:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b9a4:	681a      	ldr	r2, [r3, #0]
 800b9a6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b9aa:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b9ac:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b9ae:	691b      	ldr	r3, [r3, #16]
 800b9b0:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b9b2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b9b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b9b6:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b9b8:	3b01      	subs	r3, #1
 800b9ba:	b29b      	uxth	r3, r3
 800b9bc:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b9be:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b9c0:	1c51      	adds	r1, r2, #1
 800b9c2:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b9c4:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b9c6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b9c8:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b9ca:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b9cc:	3b01      	subs	r3, #1
 800b9ce:	b29b      	uxth	r3, r3
 800b9d0:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b9d2:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b9d4:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b9d6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b9da:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b9dc:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b9de:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b9e0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b9e4:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b9e8:	2b40      	cmp	r3, #64	; 0x40
 800b9ea:	f000 80f5 	beq.w	800bbd8 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b9ee:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b9f0:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b9f2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b9f6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b9f8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b9fa:	f7ff facb 	bl	800af94 <HAL_I2C_MasterRxCpltCallback>
 800b9fe:	e499      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba00:	681a      	ldr	r2, [r3, #0]
 800ba02:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ba06:	601a      	str	r2, [r3, #0]
 800ba08:	e7d0      	b.n	800b9ac <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba0a:	681a      	ldr	r2, [r3, #0]
 800ba0c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ba10:	601a      	str	r2, [r3, #0]
 800ba12:	e7cb      	b.n	800b9ac <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800ba14:	2810      	cmp	r0, #16
 800ba16:	d804      	bhi.n	800ba22 <HAL_I2C_EV_IRQHandler+0x74e>
 800ba18:	4a19      	ldr	r2, [pc, #100]	; (800ba80 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800ba1a:	40c2      	lsrs	r2, r0
 800ba1c:	07d2      	lsls	r2, r2, #31
 800ba1e:	f100 80c2 	bmi.w	800bba6 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba22:	681a      	ldr	r2, [r3, #0]
 800ba24:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ba28:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ba2a:	681a      	ldr	r2, [r3, #0]
 800ba2c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ba30:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ba32:	685a      	ldr	r2, [r3, #4]
 800ba34:	0516      	lsls	r6, r2, #20
 800ba36:	d506      	bpl.n	800ba46 <HAL_I2C_EV_IRQHandler+0x772>
 800ba38:	2820      	cmp	r0, #32
 800ba3a:	f240 80bc 	bls.w	800bbb6 <HAL_I2C_EV_IRQHandler+0x8e2>
 800ba3e:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ba42:	f000 80bd 	beq.w	800bbc0 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ba46:	2200      	movs	r2, #0
 800ba48:	9208      	str	r2, [sp, #32]
 800ba4a:	695a      	ldr	r2, [r3, #20]
 800ba4c:	9208      	str	r2, [sp, #32]
 800ba4e:	699b      	ldr	r3, [r3, #24]
 800ba50:	9308      	str	r3, [sp, #32]
 800ba52:	9b08      	ldr	r3, [sp, #32]
 800ba54:	e6c6      	b.n	800b7e4 <HAL_I2C_EV_IRQHandler+0x510>
 800ba56:	4a0b      	ldr	r2, [pc, #44]	; (800ba84 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800ba58:	3808      	subs	r0, #8
 800ba5a:	40c2      	lsrs	r2, r0
 800ba5c:	07d2      	lsls	r2, r2, #31
 800ba5e:	f57f af13 	bpl.w	800b888 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ba62:	685a      	ldr	r2, [r3, #4]
 800ba64:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800ba68:	605a      	str	r2, [r3, #4]
 800ba6a:	e70d      	b.n	800b888 <HAL_I2C_EV_IRQHandler+0x5b4>
 800ba6c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ba70:	f47f af0a 	bne.w	800b888 <HAL_I2C_EV_IRQHandler+0x5b4>
 800ba74:	e7f5      	b.n	800ba62 <HAL_I2C_EV_IRQHandler+0x78e>
 800ba76:	bf00      	nop
 800ba78:	0800b075 	.word	0x0800b075
 800ba7c:	ffff0000 	.word	0xffff0000
 800ba80:	00010014 	.word	0x00010014
 800ba84:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ba88:	6859      	ldr	r1, [r3, #4]
 800ba8a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ba8e:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ba90:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ba92:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800ba94:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ba96:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800ba9a:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ba9c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800ba9e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800baa2:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800baa6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800baaa:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800baac:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800baae:	f47f af1c 	bne.w	800b8ea <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800bab2:	f7ff fa79 	bl	800afa8 <HAL_I2C_MemTxCpltCallback>
 800bab6:	e43d      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800bab8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800baba:	2802      	cmp	r0, #2
 800babc:	f43f af60 	beq.w	800b980 <HAL_I2C_EV_IRQHandler+0x6ac>
 800bac0:	2a01      	cmp	r2, #1
 800bac2:	f63f af5d 	bhi.w	800b980 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800bac6:	4a62      	ldr	r2, [pc, #392]	; (800bc50 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800bac8:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800baca:	6812      	ldr	r2, [r2, #0]
 800bacc:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800bad0:	fbb2 f2f0 	udiv	r2, r2, r0
 800bad4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800bad8:	920b      	str	r2, [sp, #44]	; 0x2c
 800bada:	e004      	b.n	800bae6 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800badc:	681a      	ldr	r2, [r3, #0]
 800bade:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800bae2:	f000 8092 	beq.w	800bc0a <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800bae6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bae8:	3a01      	subs	r2, #1
 800baea:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800baec:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800baee:	2900      	cmp	r1, #0
 800baf0:	d1f4      	bne.n	800badc <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800baf2:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800baf4:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800baf6:	f042 0220 	orr.w	r2, r2, #32
 800bafa:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bafc:	685a      	ldr	r2, [r3, #4]
 800bafe:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bb02:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bb04:	691b      	ldr	r3, [r3, #16]
 800bb06:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800bb08:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800bb0a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800bb0c:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800bb0e:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800bb10:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800bb12:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800bb14:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800bb16:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800bb18:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800bb1c:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb1e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800bb22:	f7ff faa3 	bl	800b06c <HAL_I2C_ErrorCallback>
 800bb26:	e405      	b.n	800b334 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800bb28:	2d08      	cmp	r5, #8
 800bb2a:	d0ad      	beq.n	800ba88 <HAL_I2C_EV_IRQHandler+0x7b4>
 800bb2c:	2d20      	cmp	r5, #32
 800bb2e:	d0ab      	beq.n	800ba88 <HAL_I2C_EV_IRQHandler+0x7b4>
 800bb30:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800bb34:	d0a8      	beq.n	800ba88 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bb36:	685a      	ldr	r2, [r3, #4]
 800bb38:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bb3c:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800bb3e:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb40:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800bb42:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800bb44:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb46:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800bb4a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800bb4c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800bb50:	f7ff fa1e 	bl	800af90 <HAL_I2C_MasterTxCpltCallback>
 800bb54:	f7ff bbee 	b.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800bb58:	2801      	cmp	r0, #1
 800bb5a:	f43f af05 	beq.w	800b968 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb5e:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bb60:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb62:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb66:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bb68:	9107      	str	r1, [sp, #28]
 800bb6a:	695a      	ldr	r2, [r3, #20]
 800bb6c:	9207      	str	r2, [sp, #28]
 800bb6e:	699a      	ldr	r2, [r3, #24]
 800bb70:	9207      	str	r2, [sp, #28]
 800bb72:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bb74:	681a      	ldr	r2, [r3, #0]
 800bb76:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bb7a:	601a      	str	r2, [r3, #0]
 800bb7c:	e632      	b.n	800b7e4 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb7e:	681a      	ldr	r2, [r3, #0]
 800bb80:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb84:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800bb86:	685a      	ldr	r2, [r3, #4]
 800bb88:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800bb8c:	d02d      	beq.n	800bbea <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb8e:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bb90:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb92:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb96:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bb98:	9104      	str	r1, [sp, #16]
 800bb9a:	695a      	ldr	r2, [r3, #20]
 800bb9c:	9204      	str	r2, [sp, #16]
 800bb9e:	699b      	ldr	r3, [r3, #24]
 800bba0:	9304      	str	r3, [sp, #16]
 800bba2:	9b04      	ldr	r3, [sp, #16]
 800bba4:	e61e      	b.n	800b7e4 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bba6:	681a      	ldr	r2, [r3, #0]
 800bba8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bbac:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800bbae:	685a      	ldr	r2, [r3, #4]
 800bbb0:	0515      	lsls	r5, r2, #20
 800bbb2:	f57f af48 	bpl.w	800ba46 <HAL_I2C_EV_IRQHandler+0x772>
 800bbb6:	2807      	cmp	r0, #7
 800bbb8:	d807      	bhi.n	800bbca <HAL_I2C_EV_IRQHandler+0x8f6>
 800bbba:	2801      	cmp	r0, #1
 800bbbc:	f47f af43 	bne.w	800ba46 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800bbc0:	685a      	ldr	r2, [r3, #4]
 800bbc2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800bbc6:	605a      	str	r2, [r3, #4]
 800bbc8:	e73d      	b.n	800ba46 <HAL_I2C_EV_IRQHandler+0x772>
 800bbca:	4a22      	ldr	r2, [pc, #136]	; (800bc54 <HAL_I2C_EV_IRQHandler+0x980>)
 800bbcc:	3808      	subs	r0, #8
 800bbce:	40c2      	lsrs	r2, r0
 800bbd0:	07d0      	lsls	r0, r2, #31
 800bbd2:	f57f af38 	bpl.w	800ba46 <HAL_I2C_EV_IRQHandler+0x772>
 800bbd6:	e7f3      	b.n	800bbc0 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bbd8:	2300      	movs	r3, #0
 800bbda:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bbde:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800bbe0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bbe2:	f7ff fa41 	bl	800b068 <HAL_I2C_MemRxCpltCallback>
 800bbe6:	f7ff bba5 	b.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bbea:	9205      	str	r2, [sp, #20]
 800bbec:	695a      	ldr	r2, [r3, #20]
 800bbee:	9205      	str	r2, [sp, #20]
 800bbf0:	699a      	ldr	r2, [r3, #24]
 800bbf2:	9205      	str	r2, [sp, #20]
 800bbf4:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bbf6:	681a      	ldr	r2, [r3, #0]
 800bbf8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bbfc:	601a      	str	r2, [r3, #0]
 800bbfe:	e5f1      	b.n	800b7e4 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc00:	681a      	ldr	r2, [r3, #0]
 800bc02:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bc06:	601a      	str	r2, [r3, #0]
 800bc08:	e6b2      	b.n	800b970 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc0a:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bc0c:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc0e:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800bc12:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bc14:	6859      	ldr	r1, [r3, #4]
 800bc16:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800bc1a:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bc1c:	691b      	ldr	r3, [r3, #16]
 800bc1e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800bc20:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800bc22:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800bc24:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800bc26:	b29b      	uxth	r3, r3
 800bc28:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800bc2a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800bc2e:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bc30:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800bc34:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bc36:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800bc38:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bc3a:	f47f aed9 	bne.w	800b9f0 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800bc3e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bc42:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800bc44:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bc46:	f7ff fa0f 	bl	800b068 <HAL_I2C_MemRxCpltCallback>
 800bc4a:	f7ff bb73 	b.w	800b334 <HAL_I2C_EV_IRQHandler+0x60>
 800bc4e:	bf00      	nop
 800bc50:	20000078 	.word	0x20000078
 800bc54:	01000101 	.word	0x01000101

0800bc58 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800bc58:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800bc5c:	2a20      	cmp	r2, #32
{
 800bc5e:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800bc60:	fa5f fc82 	uxtb.w	ip, r2
 800bc64:	d001      	beq.n	800bc6a <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800bc66:	2002      	movs	r0, #2
  }
}
 800bc68:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800bc6a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bc6c:	2024      	movs	r0, #36	; 0x24
 800bc6e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800bc72:	6810      	ldr	r0, [r2, #0]
 800bc74:	f020 0001 	bic.w	r0, r0, #1
 800bc78:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800bc7a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bc7c:	f020 0010 	bic.w	r0, r0, #16
 800bc80:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800bc82:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bc84:	4301      	orrs	r1, r0
 800bc86:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bc88:	6811      	ldr	r1, [r2, #0]
 800bc8a:	f041 0101 	orr.w	r1, r1, #1
 800bc8e:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800bc90:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800bc92:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bc96:	4770      	bx	lr

0800bc98 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800bc98:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800bc9c:	2a20      	cmp	r2, #32
 800bc9e:	d001      	beq.n	800bca4 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800bca0:	2002      	movs	r0, #2
  }
}
 800bca2:	4770      	bx	lr
{
 800bca4:	b410      	push	{r4}
 800bca6:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800bcaa:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bcac:	2224      	movs	r2, #36	; 0x24
 800bcae:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800bcb2:	6822      	ldr	r2, [r4, #0]
 800bcb4:	f022 0201 	bic.w	r2, r2, #1
 800bcb8:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800bcba:	4603      	mov	r3, r0
 800bcbc:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800bcbe:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800bcc2:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800bcc4:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800bcc6:	b289      	uxth	r1, r1
 800bcc8:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bcca:	6822      	ldr	r2, [r4, #0]
 800bccc:	f042 0201 	orr.w	r2, r2, #1
 800bcd0:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800bcd2:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bcd6:	2000      	movs	r0, #0
}
 800bcd8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bcdc:	4770      	bx	lr
 800bcde:	bf00      	nop

0800bce0 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800bce0:	2800      	cmp	r0, #0
 800bce2:	d069      	beq.n	800bdb8 <HAL_LTDC_Init+0xd8>
{
 800bce4:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800bce6:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800bcea:	4604      	mov	r4, r0
 800bcec:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800bcf0:	2b00      	cmp	r3, #0
 800bcf2:	d05c      	beq.n	800bdae <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bcf4:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bcf6:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bcf8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bcfc:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bd00:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bd02:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bd04:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bd08:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800bd0c:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bd0e:	6999      	ldr	r1, [r3, #24]
 800bd10:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bd12:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bd14:	430a      	orrs	r2, r1
 800bd16:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bd18:	689a      	ldr	r2, [r3, #8]
 800bd1a:	4928      	ldr	r1, [pc, #160]	; (800bdbc <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800bd1c:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bd1e:	400a      	ands	r2, r1
 800bd20:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800bd22:	689a      	ldr	r2, [r3, #8]
 800bd24:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bd28:	69a0      	ldr	r0, [r4, #24]
 800bd2a:	4302      	orrs	r2, r0
 800bd2c:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bd2e:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800bd30:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bd32:	400a      	ands	r2, r1
 800bd34:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800bd36:	68da      	ldr	r2, [r3, #12]
 800bd38:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bd3c:	6a20      	ldr	r0, [r4, #32]
 800bd3e:	4302      	orrs	r2, r0
 800bd40:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bd42:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800bd44:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bd46:	400a      	ands	r2, r1
 800bd48:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800bd4a:	691a      	ldr	r2, [r3, #16]
 800bd4c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bd50:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bd52:	4302      	orrs	r2, r0
 800bd54:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bd56:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800bd58:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bd5a:	400a      	ands	r2, r1
 800bd5c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800bd5e:	695a      	ldr	r2, [r3, #20]
 800bd60:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bd62:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bd66:	430a      	orrs	r2, r1
 800bd68:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bd6a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800bd6c:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800bd70:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bd74:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800bd78:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800bd7a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800bd7c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800bd80:	432a      	orrs	r2, r5
 800bd82:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800bd86:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bd8a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800bd8c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bd8e:	f042 0206 	orr.w	r2, r2, #6
 800bd92:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800bd94:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd96:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bd9a:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bd9c:	ea42 020c 	orr.w	r2, r2, ip
 800bda0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bda2:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800bda6:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800bdaa:	4608      	mov	r0, r1
}
 800bdac:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800bdae:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800bdb2:	f7f5 ffe7 	bl	8001d84 <HAL_LTDC_MspInit>
 800bdb6:	e79d      	b.n	800bcf4 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800bdb8:	2001      	movs	r0, #1
}
 800bdba:	4770      	bx	lr
 800bdbc:	f000f800 	.word	0xf000f800

0800bdc0 <HAL_LTDC_ErrorCallback>:
 800bdc0:	4770      	bx	lr
 800bdc2:	bf00      	nop

0800bdc4 <HAL_LTDC_ReloadEventCallback>:
 800bdc4:	4770      	bx	lr
 800bdc6:	bf00      	nop

0800bdc8 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bdc8:	6803      	ldr	r3, [r0, #0]
{
 800bdca:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bdcc:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bdce:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bdd0:	076a      	lsls	r2, r5, #29
{
 800bdd2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bdd4:	d501      	bpl.n	800bdda <HAL_LTDC_IRQHandler+0x12>
 800bdd6:	0771      	lsls	r1, r6, #29
 800bdd8:	d41d      	bmi.n	800be16 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800bdda:	07aa      	lsls	r2, r5, #30
 800bddc:	d501      	bpl.n	800bde2 <HAL_LTDC_IRQHandler+0x1a>
 800bdde:	07b3      	lsls	r3, r6, #30
 800bde0:	d42d      	bmi.n	800be3e <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bde2:	07e8      	lsls	r0, r5, #31
 800bde4:	d501      	bpl.n	800bdea <HAL_LTDC_IRQHandler+0x22>
 800bde6:	07f1      	lsls	r1, r6, #31
 800bde8:	d440      	bmi.n	800be6c <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bdea:	072a      	lsls	r2, r5, #28
 800bdec:	d501      	bpl.n	800bdf2 <HAL_LTDC_IRQHandler+0x2a>
 800bdee:	0733      	lsls	r3, r6, #28
 800bdf0:	d400      	bmi.n	800bdf4 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bdf2:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bdf4:	6823      	ldr	r3, [r4, #0]
 800bdf6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bdf8:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bdfa:	f022 0208 	bic.w	r2, r2, #8
 800bdfe:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800be00:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800be02:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800be04:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800be06:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800be0a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800be0e:	4620      	mov	r0, r4
 800be10:	f7ff ffd8 	bl	800bdc4 <HAL_LTDC_ReloadEventCallback>
}
 800be14:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800be16:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800be18:	f022 0204 	bic.w	r2, r2, #4
 800be1c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800be1e:	2204      	movs	r2, #4
 800be20:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800be22:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800be26:	f043 0301 	orr.w	r3, r3, #1
 800be2a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800be2e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800be30:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800be34:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800be38:	f7ff ffc2 	bl	800bdc0 <HAL_LTDC_ErrorCallback>
 800be3c:	e7cd      	b.n	800bdda <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800be3e:	6823      	ldr	r3, [r4, #0]
 800be40:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800be42:	f022 0202 	bic.w	r2, r2, #2
 800be46:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800be48:	2202      	movs	r2, #2
 800be4a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800be4c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800be50:	f043 0302 	orr.w	r3, r3, #2
 800be54:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800be58:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800be5a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800be5c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800be60:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800be64:	4620      	mov	r0, r4
 800be66:	f7ff ffab 	bl	800bdc0 <HAL_LTDC_ErrorCallback>
 800be6a:	e7ba      	b.n	800bde2 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800be6c:	6823      	ldr	r3, [r4, #0]
 800be6e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800be70:	f022 0201 	bic.w	r2, r2, #1
 800be74:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800be76:	2201      	movs	r2, #1
 800be78:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800be7a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800be7c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800be80:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800be84:	4620      	mov	r0, r4
 800be86:	f7f6 ff77 	bl	8002d78 <HAL_LTDC_LineEventCallback>
 800be8a:	e7ae      	b.n	800bdea <HAL_LTDC_IRQHandler+0x22>

0800be8c <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800be8c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800be90:	2b01      	cmp	r3, #1
 800be92:	f000 80c2 	beq.w	800c01a <HAL_LTDC_ConfigLayer+0x18e>
{
 800be96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800be9a:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800be9e:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bea2:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bea6:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bea8:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800beaa:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800beae:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800beb2:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800beb6:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800beba:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bebe:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bec2:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bec4:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bec8:	460c      	mov	r4, r1
 800beca:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800becc:	9301      	str	r3, [sp, #4]
 800bece:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bed0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bed2:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800bed6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800beda:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bedc:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bede:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bee2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bee4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bee8:	6823      	ldr	r3, [r4, #0]
 800beea:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800beee:	9b01      	ldr	r3, [sp, #4]
 800bef0:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bef4:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bef8:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800befa:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800befc:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bf00:	1c51      	adds	r1, r2, #1
 800bf02:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800bf06:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bf08:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bf0a:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bf0e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bf12:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800bf16:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800bf1a:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800bf1e:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bf22:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bf26:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bf28:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bf2a:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800bf2e:	3301      	adds	r3, #1
 800bf30:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800bf34:	4403      	add	r3, r0
 800bf36:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bf3a:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bf3e:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bf42:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bf44:	f023 0307 	bic.w	r3, r3, #7
 800bf48:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bf4c:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bf50:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bf54:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800bf58:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800bf5c:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bf60:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800bf64:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800bf68:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800bf6c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bf70:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bf74:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800bf78:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800bf7c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800bf80:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800bf84:	696b      	ldr	r3, [r5, #20]
 800bf86:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800bf8a:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800bf8e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bf92:	f023 0307 	bic.w	r3, r3, #7
 800bf96:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800bf9a:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800bf9e:	4303      	orrs	r3, r0
 800bfa0:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bfa4:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bfa8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bfaa:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bfae:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bfb2:	bb69      	cbnz	r1, 800c010 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800bfb4:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bfb6:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bfb8:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bfba:	fb03 f707 	mul.w	r7, r3, r7
 800bfbe:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bfc0:	fb02 f303 	mul.w	r3, r2, r3
 800bfc4:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bfc8:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bfcc:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bfce:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800bfd2:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bfd6:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bfda:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800bfde:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800bfe2:	f023 0307 	bic.w	r3, r3, #7
 800bfe6:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bfea:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bfee:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bff2:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bff4:	4313      	orrs	r3, r2
 800bff6:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800bffa:	2300      	movs	r3, #0
  return HAL_OK;
 800bffc:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bffe:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800c002:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800c006:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800c00a:	b003      	add	sp, #12
 800c00c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800c010:	3901      	subs	r1, #1
 800c012:	2906      	cmp	r1, #6
 800c014:	d903      	bls.n	800c01e <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c016:	2301      	movs	r3, #1
 800c018:	e7cd      	b.n	800bfb6 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800c01a:	2002      	movs	r0, #2
}
 800c01c:	4770      	bx	lr
 800c01e:	4b02      	ldr	r3, [pc, #8]	; (800c028 <HAL_LTDC_ConfigLayer+0x19c>)
 800c020:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800c024:	e7c7      	b.n	800bfb6 <HAL_LTDC_ConfigLayer+0x12a>
 800c026:	bf00      	nop
 800c028:	0802eb30 	.word	0x0802eb30

0800c02c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800c02c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800c030:	2b01      	cmp	r3, #1
 800c032:	d019      	beq.n	800c068 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c034:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c036:	2302      	movs	r3, #2
{
 800c038:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c03a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c03e:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800c040:	4c0a      	ldr	r4, [pc, #40]	; (800c06c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c042:	f023 0301 	bic.w	r3, r3, #1
 800c046:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800c048:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c04a:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800c04c:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c04e:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800c052:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c056:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800c058:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800c05c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800c060:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800c064:	4618      	mov	r0, r3
}
 800c066:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800c068:	2002      	movs	r0, #2
}
 800c06a:	4770      	bx	lr
 800c06c:	40016800 	.word	0x40016800

0800c070 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800c070:	2800      	cmp	r0, #0
 800c072:	f000 81a2 	beq.w	800c3ba <HAL_RCC_OscConfig+0x34a>
{
 800c076:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c07a:	6803      	ldr	r3, [r0, #0]
 800c07c:	07dd      	lsls	r5, r3, #31
{
 800c07e:	b082      	sub	sp, #8
 800c080:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c082:	d52f      	bpl.n	800c0e4 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800c084:	499e      	ldr	r1, [pc, #632]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c086:	688a      	ldr	r2, [r1, #8]
 800c088:	f002 020c 	and.w	r2, r2, #12
 800c08c:	2a04      	cmp	r2, #4
 800c08e:	f000 80ed 	beq.w	800c26c <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c092:	688a      	ldr	r2, [r1, #8]
 800c094:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800c098:	2a08      	cmp	r2, #8
 800c09a:	f000 80e3 	beq.w	800c264 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c09e:	6863      	ldr	r3, [r4, #4]
 800c0a0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c0a4:	f000 80ec 	beq.w	800c280 <HAL_RCC_OscConfig+0x210>
 800c0a8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800c0ac:	f000 8175 	beq.w	800c39a <HAL_RCC_OscConfig+0x32a>
 800c0b0:	4d93      	ldr	r5, [pc, #588]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c0b2:	682a      	ldr	r2, [r5, #0]
 800c0b4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800c0b8:	602a      	str	r2, [r5, #0]
 800c0ba:	682a      	ldr	r2, [r5, #0]
 800c0bc:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800c0c0:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c0c2:	2b00      	cmp	r3, #0
 800c0c4:	f040 80e1 	bne.w	800c28a <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c0c8:	f7fd ffb0 	bl	800a02c <HAL_GetTick>
 800c0cc:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c0ce:	e005      	b.n	800c0dc <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c0d0:	f7fd ffac 	bl	800a02c <HAL_GetTick>
 800c0d4:	1b80      	subs	r0, r0, r6
 800c0d6:	2864      	cmp	r0, #100	; 0x64
 800c0d8:	f200 8101 	bhi.w	800c2de <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c0dc:	682b      	ldr	r3, [r5, #0]
 800c0de:	039b      	lsls	r3, r3, #14
 800c0e0:	d4f6      	bmi.n	800c0d0 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c0e2:	6823      	ldr	r3, [r4, #0]
 800c0e4:	079f      	lsls	r7, r3, #30
 800c0e6:	d528      	bpl.n	800c13a <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c0e8:	4a85      	ldr	r2, [pc, #532]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c0ea:	6891      	ldr	r1, [r2, #8]
 800c0ec:	f011 0f0c 	tst.w	r1, #12
 800c0f0:	f000 8090 	beq.w	800c214 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c0f4:	6891      	ldr	r1, [r2, #8]
 800c0f6:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c0fa:	2908      	cmp	r1, #8
 800c0fc:	f000 8086 	beq.w	800c20c <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c100:	68e3      	ldr	r3, [r4, #12]
 800c102:	2b00      	cmp	r3, #0
 800c104:	f000 810e 	beq.w	800c324 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800c108:	4b7e      	ldr	r3, [pc, #504]	; (800c304 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c10a:	4e7d      	ldr	r6, [pc, #500]	; (800c300 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800c10c:	2201      	movs	r2, #1
 800c10e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c110:	f7fd ff8c 	bl	800a02c <HAL_GetTick>
 800c114:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c116:	e005      	b.n	800c124 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c118:	f7fd ff88 	bl	800a02c <HAL_GetTick>
 800c11c:	1b40      	subs	r0, r0, r5
 800c11e:	2802      	cmp	r0, #2
 800c120:	f200 80dd 	bhi.w	800c2de <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c124:	6833      	ldr	r3, [r6, #0]
 800c126:	0798      	lsls	r0, r3, #30
 800c128:	d5f6      	bpl.n	800c118 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c12a:	6833      	ldr	r3, [r6, #0]
 800c12c:	6922      	ldr	r2, [r4, #16]
 800c12e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c132:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c136:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c138:	6823      	ldr	r3, [r4, #0]
 800c13a:	071a      	lsls	r2, r3, #28
 800c13c:	d451      	bmi.n	800c1e2 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c13e:	0758      	lsls	r0, r3, #29
 800c140:	d52f      	bpl.n	800c1a2 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800c142:	4a6f      	ldr	r2, [pc, #444]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c144:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c146:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800c14a:	d07f      	beq.n	800c24c <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800c14c:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c14e:	4e6e      	ldr	r6, [pc, #440]	; (800c308 <HAL_RCC_OscConfig+0x298>)
 800c150:	6833      	ldr	r3, [r6, #0]
 800c152:	05d9      	lsls	r1, r3, #23
 800c154:	f140 80b3 	bpl.w	800c2be <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c158:	68a3      	ldr	r3, [r4, #8]
 800c15a:	2b01      	cmp	r3, #1
 800c15c:	f000 80c3 	beq.w	800c2e6 <HAL_RCC_OscConfig+0x276>
 800c160:	2b05      	cmp	r3, #5
 800c162:	f000 812c 	beq.w	800c3be <HAL_RCC_OscConfig+0x34e>
 800c166:	4e66      	ldr	r6, [pc, #408]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c168:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c16a:	f022 0201 	bic.w	r2, r2, #1
 800c16e:	6732      	str	r2, [r6, #112]	; 0x70
 800c170:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c172:	f022 0204 	bic.w	r2, r2, #4
 800c176:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c178:	2b00      	cmp	r3, #0
 800c17a:	f040 80b9 	bne.w	800c2f0 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800c17e:	f7fd ff55 	bl	800a02c <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c182:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800c186:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c188:	e005      	b.n	800c196 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c18a:	f7fd ff4f 	bl	800a02c <HAL_GetTick>
 800c18e:	1bc0      	subs	r0, r0, r7
 800c190:	4540      	cmp	r0, r8
 800c192:	f200 80a4 	bhi.w	800c2de <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c196:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800c198:	0798      	lsls	r0, r3, #30
 800c19a:	d4f6      	bmi.n	800c18a <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800c19c:	2d00      	cmp	r5, #0
 800c19e:	f040 8106 	bne.w	800c3ae <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c1a2:	69a0      	ldr	r0, [r4, #24]
 800c1a4:	b1c8      	cbz	r0, 800c1da <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800c1a6:	4d56      	ldr	r5, [pc, #344]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c1a8:	68ab      	ldr	r3, [r5, #8]
 800c1aa:	f003 030c 	and.w	r3, r3, #12
 800c1ae:	2b08      	cmp	r3, #8
 800c1b0:	f000 80c9 	beq.w	800c346 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800c1b4:	4b53      	ldr	r3, [pc, #332]	; (800c304 <HAL_RCC_OscConfig+0x294>)
 800c1b6:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c1b8:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800c1ba:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c1bc:	f000 8109 	beq.w	800c3d2 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c1c0:	f7fd ff34 	bl	800a02c <HAL_GetTick>
 800c1c4:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c1c6:	e005      	b.n	800c1d4 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c1c8:	f7fd ff30 	bl	800a02c <HAL_GetTick>
 800c1cc:	1b00      	subs	r0, r0, r4
 800c1ce:	2802      	cmp	r0, #2
 800c1d0:	f200 8085 	bhi.w	800c2de <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c1d4:	682b      	ldr	r3, [r5, #0]
 800c1d6:	019b      	lsls	r3, r3, #6
 800c1d8:	d4f6      	bmi.n	800c1c8 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c1da:	2000      	movs	r0, #0
}
 800c1dc:	b002      	add	sp, #8
 800c1de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800c1e2:	6963      	ldr	r3, [r4, #20]
 800c1e4:	b30b      	cbz	r3, 800c22a <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800c1e6:	4b47      	ldr	r3, [pc, #284]	; (800c304 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c1e8:	4e45      	ldr	r6, [pc, #276]	; (800c300 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800c1ea:	2201      	movs	r2, #1
 800c1ec:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c1f0:	f7fd ff1c 	bl	800a02c <HAL_GetTick>
 800c1f4:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c1f6:	e004      	b.n	800c202 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c1f8:	f7fd ff18 	bl	800a02c <HAL_GetTick>
 800c1fc:	1b40      	subs	r0, r0, r5
 800c1fe:	2802      	cmp	r0, #2
 800c200:	d86d      	bhi.n	800c2de <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c202:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c204:	079b      	lsls	r3, r3, #30
 800c206:	d5f7      	bpl.n	800c1f8 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c208:	6823      	ldr	r3, [r4, #0]
 800c20a:	e798      	b.n	800c13e <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c20c:	6852      	ldr	r2, [r2, #4]
 800c20e:	0256      	lsls	r6, r2, #9
 800c210:	f53f af76 	bmi.w	800c100 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c214:	4a3a      	ldr	r2, [pc, #232]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c216:	6812      	ldr	r2, [r2, #0]
 800c218:	0795      	lsls	r5, r2, #30
 800c21a:	d544      	bpl.n	800c2a6 <HAL_RCC_OscConfig+0x236>
 800c21c:	68e2      	ldr	r2, [r4, #12]
 800c21e:	2a01      	cmp	r2, #1
 800c220:	d041      	beq.n	800c2a6 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800c222:	2001      	movs	r0, #1
}
 800c224:	b002      	add	sp, #8
 800c226:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800c22a:	4a36      	ldr	r2, [pc, #216]	; (800c304 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c22c:	4e34      	ldr	r6, [pc, #208]	; (800c300 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800c22e:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c232:	f7fd fefb 	bl	800a02c <HAL_GetTick>
 800c236:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c238:	e004      	b.n	800c244 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c23a:	f7fd fef7 	bl	800a02c <HAL_GetTick>
 800c23e:	1b40      	subs	r0, r0, r5
 800c240:	2802      	cmp	r0, #2
 800c242:	d84c      	bhi.n	800c2de <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c244:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c246:	079f      	lsls	r7, r3, #30
 800c248:	d4f7      	bmi.n	800c23a <HAL_RCC_OscConfig+0x1ca>
 800c24a:	e7dd      	b.n	800c208 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c24c:	9301      	str	r3, [sp, #4]
 800c24e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c250:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c254:	6413      	str	r3, [r2, #64]	; 0x40
 800c256:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c258:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c25c:	9301      	str	r3, [sp, #4]
 800c25e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c260:	2501      	movs	r5, #1
 800c262:	e774      	b.n	800c14e <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c264:	684a      	ldr	r2, [r1, #4]
 800c266:	0250      	lsls	r0, r2, #9
 800c268:	f57f af19 	bpl.w	800c09e <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c26c:	4a24      	ldr	r2, [pc, #144]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c26e:	6812      	ldr	r2, [r2, #0]
 800c270:	0391      	lsls	r1, r2, #14
 800c272:	f57f af37 	bpl.w	800c0e4 <HAL_RCC_OscConfig+0x74>
 800c276:	6862      	ldr	r2, [r4, #4]
 800c278:	2a00      	cmp	r2, #0
 800c27a:	f47f af33 	bne.w	800c0e4 <HAL_RCC_OscConfig+0x74>
 800c27e:	e7d0      	b.n	800c222 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c280:	4a1f      	ldr	r2, [pc, #124]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c282:	6813      	ldr	r3, [r2, #0]
 800c284:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c288:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c28a:	f7fd fecf 	bl	800a02c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c28e:	4e1c      	ldr	r6, [pc, #112]	; (800c300 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800c290:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c292:	e004      	b.n	800c29e <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c294:	f7fd feca 	bl	800a02c <HAL_GetTick>
 800c298:	1b40      	subs	r0, r0, r5
 800c29a:	2864      	cmp	r0, #100	; 0x64
 800c29c:	d81f      	bhi.n	800c2de <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c29e:	6833      	ldr	r3, [r6, #0]
 800c2a0:	039a      	lsls	r2, r3, #14
 800c2a2:	d5f7      	bpl.n	800c294 <HAL_RCC_OscConfig+0x224>
 800c2a4:	e71d      	b.n	800c0e2 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c2a6:	4916      	ldr	r1, [pc, #88]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c2a8:	6920      	ldr	r0, [r4, #16]
 800c2aa:	680a      	ldr	r2, [r1, #0]
 800c2ac:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800c2b0:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800c2b4:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c2b6:	071a      	lsls	r2, r3, #28
 800c2b8:	f57f af41 	bpl.w	800c13e <HAL_RCC_OscConfig+0xce>
 800c2bc:	e791      	b.n	800c1e2 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c2be:	6833      	ldr	r3, [r6, #0]
 800c2c0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c2c4:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800c2c6:	f7fd feb1 	bl	800a02c <HAL_GetTick>
 800c2ca:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c2cc:	6833      	ldr	r3, [r6, #0]
 800c2ce:	05da      	lsls	r2, r3, #23
 800c2d0:	f53f af42 	bmi.w	800c158 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c2d4:	f7fd feaa 	bl	800a02c <HAL_GetTick>
 800c2d8:	1bc0      	subs	r0, r0, r7
 800c2da:	2802      	cmp	r0, #2
 800c2dc:	d9f6      	bls.n	800c2cc <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c2de:	2003      	movs	r0, #3
}
 800c2e0:	b002      	add	sp, #8
 800c2e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c2e6:	4a06      	ldr	r2, [pc, #24]	; (800c300 <HAL_RCC_OscConfig+0x290>)
 800c2e8:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c2ea:	f043 0301 	orr.w	r3, r3, #1
 800c2ee:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c2f0:	f7fd fe9c 	bl	800a02c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c2f4:	4f02      	ldr	r7, [pc, #8]	; (800c300 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c2f6:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c2f8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c2fc:	e00b      	b.n	800c316 <HAL_RCC_OscConfig+0x2a6>
 800c2fe:	bf00      	nop
 800c300:	40023800 	.word	0x40023800
 800c304:	42470000 	.word	0x42470000
 800c308:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c30c:	f7fd fe8e 	bl	800a02c <HAL_GetTick>
 800c310:	1b80      	subs	r0, r0, r6
 800c312:	4540      	cmp	r0, r8
 800c314:	d8e3      	bhi.n	800c2de <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c316:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c318:	079b      	lsls	r3, r3, #30
 800c31a:	d5f7      	bpl.n	800c30c <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c31c:	2d00      	cmp	r5, #0
 800c31e:	f43f af40 	beq.w	800c1a2 <HAL_RCC_OscConfig+0x132>
 800c322:	e044      	b.n	800c3ae <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c324:	4a42      	ldr	r2, [pc, #264]	; (800c430 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c326:	4e43      	ldr	r6, [pc, #268]	; (800c434 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c328:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c32a:	f7fd fe7f 	bl	800a02c <HAL_GetTick>
 800c32e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c330:	e004      	b.n	800c33c <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c332:	f7fd fe7b 	bl	800a02c <HAL_GetTick>
 800c336:	1b40      	subs	r0, r0, r5
 800c338:	2802      	cmp	r0, #2
 800c33a:	d8d0      	bhi.n	800c2de <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c33c:	6833      	ldr	r3, [r6, #0]
 800c33e:	0799      	lsls	r1, r3, #30
 800c340:	d4f7      	bmi.n	800c332 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c342:	6823      	ldr	r3, [r4, #0]
 800c344:	e6f9      	b.n	800c13a <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c346:	2801      	cmp	r0, #1
 800c348:	f43f af48 	beq.w	800c1dc <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c34c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c34e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c350:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c354:	4291      	cmp	r1, r2
 800c356:	f47f af64 	bne.w	800c222 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c35a:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c35c:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c360:	4291      	cmp	r1, r2
 800c362:	f47f af5e 	bne.w	800c222 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c366:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c368:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c36c:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c36e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c372:	f47f af56 	bne.w	800c222 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c376:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c378:	0852      	lsrs	r2, r2, #1
 800c37a:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c37e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c380:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c384:	f47f af4d 	bne.w	800c222 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c388:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c38a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c38e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c392:	bf14      	ite	ne
 800c394:	2001      	movne	r0, #1
 800c396:	2000      	moveq	r0, #0
 800c398:	e720      	b.n	800c1dc <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c39a:	4b26      	ldr	r3, [pc, #152]	; (800c434 <HAL_RCC_OscConfig+0x3c4>)
 800c39c:	681a      	ldr	r2, [r3, #0]
 800c39e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c3a2:	601a      	str	r2, [r3, #0]
 800c3a4:	681a      	ldr	r2, [r3, #0]
 800c3a6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c3aa:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c3ac:	e76d      	b.n	800c28a <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c3ae:	4a21      	ldr	r2, [pc, #132]	; (800c434 <HAL_RCC_OscConfig+0x3c4>)
 800c3b0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c3b2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c3b6:	6413      	str	r3, [r2, #64]	; 0x40
 800c3b8:	e6f3      	b.n	800c1a2 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c3ba:	2001      	movs	r0, #1
}
 800c3bc:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c3be:	4b1d      	ldr	r3, [pc, #116]	; (800c434 <HAL_RCC_OscConfig+0x3c4>)
 800c3c0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c3c2:	f042 0204 	orr.w	r2, r2, #4
 800c3c6:	671a      	str	r2, [r3, #112]	; 0x70
 800c3c8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c3ca:	f042 0201 	orr.w	r2, r2, #1
 800c3ce:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c3d0:	e78e      	b.n	800c2f0 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c3d2:	f7fd fe2b 	bl	800a02c <HAL_GetTick>
 800c3d6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c3d8:	e005      	b.n	800c3e6 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c3da:	f7fd fe27 	bl	800a02c <HAL_GetTick>
 800c3de:	1b80      	subs	r0, r0, r6
 800c3e0:	2802      	cmp	r0, #2
 800c3e2:	f63f af7c 	bhi.w	800c2de <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c3e6:	682b      	ldr	r3, [r5, #0]
 800c3e8:	0199      	lsls	r1, r3, #6
 800c3ea:	d4f6      	bmi.n	800c3da <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c3ec:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c3f0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c3f2:	430b      	orrs	r3, r1
 800c3f4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c3f8:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c3fc:	0852      	lsrs	r2, r2, #1
 800c3fe:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c402:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c404:	490a      	ldr	r1, [pc, #40]	; (800c430 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c406:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c40a:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c40c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c40e:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c410:	f7fd fe0c 	bl	800a02c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c414:	4d07      	ldr	r5, [pc, #28]	; (800c434 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c416:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c418:	e005      	b.n	800c426 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c41a:	f7fd fe07 	bl	800a02c <HAL_GetTick>
 800c41e:	1b00      	subs	r0, r0, r4
 800c420:	2802      	cmp	r0, #2
 800c422:	f63f af5c 	bhi.w	800c2de <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c426:	682b      	ldr	r3, [r5, #0]
 800c428:	019a      	lsls	r2, r3, #6
 800c42a:	d5f6      	bpl.n	800c41a <HAL_RCC_OscConfig+0x3aa>
 800c42c:	e6d5      	b.n	800c1da <HAL_RCC_OscConfig+0x16a>
 800c42e:	bf00      	nop
 800c430:	42470000 	.word	0x42470000
 800c434:	40023800 	.word	0x40023800

0800c438 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c438:	4916      	ldr	r1, [pc, #88]	; (800c494 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c43a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c43c:	688b      	ldr	r3, [r1, #8]
 800c43e:	f003 030c 	and.w	r3, r3, #12
 800c442:	2b04      	cmp	r3, #4
 800c444:	d01b      	beq.n	800c47e <HAL_RCC_GetSysClockFreq+0x46>
 800c446:	2b08      	cmp	r3, #8
 800c448:	d117      	bne.n	800c47a <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c44a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c44c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c44e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c450:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c454:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c458:	d113      	bne.n	800c482 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c45a:	480f      	ldr	r0, [pc, #60]	; (800c498 <HAL_RCC_GetSysClockFreq+0x60>)
 800c45c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c460:	fba1 0100 	umull	r0, r1, r1, r0
 800c464:	f7f4 faaa 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c468:	4b0a      	ldr	r3, [pc, #40]	; (800c494 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c46a:	685b      	ldr	r3, [r3, #4]
 800c46c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c470:	3301      	adds	r3, #1
 800c472:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c474:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c478:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c47a:	4807      	ldr	r0, [pc, #28]	; (800c498 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c47c:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c47e:	4807      	ldr	r0, [pc, #28]	; (800c49c <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c480:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c482:	4806      	ldr	r0, [pc, #24]	; (800c49c <HAL_RCC_GetSysClockFreq+0x64>)
 800c484:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c488:	2300      	movs	r3, #0
 800c48a:	fba1 0100 	umull	r0, r1, r1, r0
 800c48e:	f7f4 fa95 	bl	80009bc <__aeabi_uldivmod>
 800c492:	e7e9      	b.n	800c468 <HAL_RCC_GetSysClockFreq+0x30>
 800c494:	40023800 	.word	0x40023800
 800c498:	00f42400 	.word	0x00f42400
 800c49c:	007a1200 	.word	0x007a1200

0800c4a0 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c4a0:	2800      	cmp	r0, #0
 800c4a2:	f000 8087 	beq.w	800c5b4 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c4a6:	4a48      	ldr	r2, [pc, #288]	; (800c5c8 <HAL_RCC_ClockConfig+0x128>)
 800c4a8:	6813      	ldr	r3, [r2, #0]
 800c4aa:	f003 030f 	and.w	r3, r3, #15
 800c4ae:	428b      	cmp	r3, r1
{
 800c4b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c4b4:	460d      	mov	r5, r1
 800c4b6:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c4b8:	d209      	bcs.n	800c4ce <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c4ba:	b2cb      	uxtb	r3, r1
 800c4bc:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c4be:	6813      	ldr	r3, [r2, #0]
 800c4c0:	f003 030f 	and.w	r3, r3, #15
 800c4c4:	428b      	cmp	r3, r1
 800c4c6:	d002      	beq.n	800c4ce <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c4c8:	2001      	movs	r0, #1
}
 800c4ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c4ce:	6823      	ldr	r3, [r4, #0]
 800c4d0:	0798      	lsls	r0, r3, #30
 800c4d2:	d514      	bpl.n	800c4fe <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c4d4:	0759      	lsls	r1, r3, #29
 800c4d6:	d504      	bpl.n	800c4e2 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c4d8:	493c      	ldr	r1, [pc, #240]	; (800c5cc <HAL_RCC_ClockConfig+0x12c>)
 800c4da:	688a      	ldr	r2, [r1, #8]
 800c4dc:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c4e0:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c4e2:	071a      	lsls	r2, r3, #28
 800c4e4:	d504      	bpl.n	800c4f0 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c4e6:	4939      	ldr	r1, [pc, #228]	; (800c5cc <HAL_RCC_ClockConfig+0x12c>)
 800c4e8:	688a      	ldr	r2, [r1, #8]
 800c4ea:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c4ee:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c4f0:	4936      	ldr	r1, [pc, #216]	; (800c5cc <HAL_RCC_ClockConfig+0x12c>)
 800c4f2:	68a0      	ldr	r0, [r4, #8]
 800c4f4:	688a      	ldr	r2, [r1, #8]
 800c4f6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c4fa:	4302      	orrs	r2, r0
 800c4fc:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c4fe:	07df      	lsls	r7, r3, #31
 800c500:	d521      	bpl.n	800c546 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c502:	6862      	ldr	r2, [r4, #4]
 800c504:	2a01      	cmp	r2, #1
 800c506:	d057      	beq.n	800c5b8 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c508:	1e93      	subs	r3, r2, #2
 800c50a:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c50c:	4b2f      	ldr	r3, [pc, #188]	; (800c5cc <HAL_RCC_ClockConfig+0x12c>)
 800c50e:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c510:	d94d      	bls.n	800c5ae <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c512:	0799      	lsls	r1, r3, #30
 800c514:	d5d8      	bpl.n	800c4c8 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c516:	4e2d      	ldr	r6, [pc, #180]	; (800c5cc <HAL_RCC_ClockConfig+0x12c>)
 800c518:	68b3      	ldr	r3, [r6, #8]
 800c51a:	f023 0303 	bic.w	r3, r3, #3
 800c51e:	4313      	orrs	r3, r2
 800c520:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c522:	f7fd fd83 	bl	800a02c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c526:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c52a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c52c:	e004      	b.n	800c538 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c52e:	f7fd fd7d 	bl	800a02c <HAL_GetTick>
 800c532:	1bc0      	subs	r0, r0, r7
 800c534:	4540      	cmp	r0, r8
 800c536:	d844      	bhi.n	800c5c2 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c538:	68b3      	ldr	r3, [r6, #8]
 800c53a:	6862      	ldr	r2, [r4, #4]
 800c53c:	f003 030c 	and.w	r3, r3, #12
 800c540:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c544:	d1f3      	bne.n	800c52e <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c546:	4a20      	ldr	r2, [pc, #128]	; (800c5c8 <HAL_RCC_ClockConfig+0x128>)
 800c548:	6813      	ldr	r3, [r2, #0]
 800c54a:	f003 030f 	and.w	r3, r3, #15
 800c54e:	42ab      	cmp	r3, r5
 800c550:	d906      	bls.n	800c560 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c552:	b2eb      	uxtb	r3, r5
 800c554:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c556:	6813      	ldr	r3, [r2, #0]
 800c558:	f003 030f 	and.w	r3, r3, #15
 800c55c:	42ab      	cmp	r3, r5
 800c55e:	d1b3      	bne.n	800c4c8 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c560:	6823      	ldr	r3, [r4, #0]
 800c562:	075a      	lsls	r2, r3, #29
 800c564:	d506      	bpl.n	800c574 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c566:	4919      	ldr	r1, [pc, #100]	; (800c5cc <HAL_RCC_ClockConfig+0x12c>)
 800c568:	68e0      	ldr	r0, [r4, #12]
 800c56a:	688a      	ldr	r2, [r1, #8]
 800c56c:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c570:	4302      	orrs	r2, r0
 800c572:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c574:	071b      	lsls	r3, r3, #28
 800c576:	d507      	bpl.n	800c588 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c578:	4a14      	ldr	r2, [pc, #80]	; (800c5cc <HAL_RCC_ClockConfig+0x12c>)
 800c57a:	6921      	ldr	r1, [r4, #16]
 800c57c:	6893      	ldr	r3, [r2, #8]
 800c57e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c582:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c586:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c588:	f7ff ff56 	bl	800c438 <HAL_RCC_GetSysClockFreq>
 800c58c:	4a0f      	ldr	r2, [pc, #60]	; (800c5cc <HAL_RCC_ClockConfig+0x12c>)
 800c58e:	4c10      	ldr	r4, [pc, #64]	; (800c5d0 <HAL_RCC_ClockConfig+0x130>)
 800c590:	6892      	ldr	r2, [r2, #8]
 800c592:	4910      	ldr	r1, [pc, #64]	; (800c5d4 <HAL_RCC_ClockConfig+0x134>)
 800c594:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c598:	4603      	mov	r3, r0
 800c59a:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c59c:	480e      	ldr	r0, [pc, #56]	; (800c5d8 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c59e:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c5a0:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c5a2:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c5a4:	f7f5 fdca 	bl	800213c <HAL_InitTick>
  return HAL_OK;
 800c5a8:	2000      	movs	r0, #0
}
 800c5aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c5ae:	0198      	lsls	r0, r3, #6
 800c5b0:	d4b1      	bmi.n	800c516 <HAL_RCC_ClockConfig+0x76>
 800c5b2:	e789      	b.n	800c4c8 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c5b4:	2001      	movs	r0, #1
}
 800c5b6:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c5b8:	4b04      	ldr	r3, [pc, #16]	; (800c5cc <HAL_RCC_ClockConfig+0x12c>)
 800c5ba:	681b      	ldr	r3, [r3, #0]
 800c5bc:	039e      	lsls	r6, r3, #14
 800c5be:	d4aa      	bmi.n	800c516 <HAL_RCC_ClockConfig+0x76>
 800c5c0:	e782      	b.n	800c4c8 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c5c2:	2003      	movs	r0, #3
 800c5c4:	e781      	b.n	800c4ca <HAL_RCC_ClockConfig+0x2a>
 800c5c6:	bf00      	nop
 800c5c8:	40023c00 	.word	0x40023c00
 800c5cc:	40023800 	.word	0x40023800
 800c5d0:	0802eb18 	.word	0x0802eb18
 800c5d4:	20000078 	.word	0x20000078
 800c5d8:	20000080 	.word	0x20000080

0800c5dc <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c5dc:	4b04      	ldr	r3, [pc, #16]	; (800c5f0 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c5de:	4905      	ldr	r1, [pc, #20]	; (800c5f4 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c5e0:	689b      	ldr	r3, [r3, #8]
 800c5e2:	4a05      	ldr	r2, [pc, #20]	; (800c5f8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c5e4:	6808      	ldr	r0, [r1, #0]
 800c5e6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c5ea:	5cd3      	ldrb	r3, [r2, r3]
}
 800c5ec:	40d8      	lsrs	r0, r3
 800c5ee:	4770      	bx	lr
 800c5f0:	40023800 	.word	0x40023800
 800c5f4:	20000078 	.word	0x20000078
 800c5f8:	0802eb28 	.word	0x0802eb28

0800c5fc <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c5fc:	4b0e      	ldr	r3, [pc, #56]	; (800c638 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c5fe:	220f      	movs	r2, #15
 800c600:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c602:	689a      	ldr	r2, [r3, #8]
 800c604:	f002 0203 	and.w	r2, r2, #3
 800c608:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c60a:	689a      	ldr	r2, [r3, #8]
 800c60c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c610:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c612:	689a      	ldr	r2, [r3, #8]
 800c614:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c618:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c61a:	689b      	ldr	r3, [r3, #8]
 800c61c:	08db      	lsrs	r3, r3, #3
{
 800c61e:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c620:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c624:	4c05      	ldr	r4, [pc, #20]	; (800c63c <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c626:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c628:	6823      	ldr	r3, [r4, #0]
}
 800c62a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c62e:	f003 030f 	and.w	r3, r3, #15
 800c632:	600b      	str	r3, [r1, #0]
}
 800c634:	4770      	bx	lr
 800c636:	bf00      	nop
 800c638:	40023800 	.word	0x40023800
 800c63c:	40023c00 	.word	0x40023c00

0800c640 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c640:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c642:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c644:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c648:	b083      	sub	sp, #12
 800c64a:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c64c:	d111      	bne.n	800c672 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c64e:	f013 0f0c 	tst.w	r3, #12
 800c652:	d16f      	bne.n	800c734 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c654:	0698      	lsls	r0, r3, #26
 800c656:	f100 80c2 	bmi.w	800c7de <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c65a:	f013 0310 	ands.w	r3, r3, #16
 800c65e:	f000 80bb 	beq.w	800c7d8 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c662:	4b89      	ldr	r3, [pc, #548]	; (800c888 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c664:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c668:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c66c:	2000      	movs	r0, #0
}
 800c66e:	b003      	add	sp, #12
 800c670:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c672:	4b86      	ldr	r3, [pc, #536]	; (800c88c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c674:	4e86      	ldr	r6, [pc, #536]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c676:	2200      	movs	r2, #0
 800c678:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c67a:	f7fd fcd7 	bl	800a02c <HAL_GetTick>
 800c67e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c680:	e004      	b.n	800c68c <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c682:	f7fd fcd3 	bl	800a02c <HAL_GetTick>
 800c686:	1b43      	subs	r3, r0, r5
 800c688:	2b02      	cmp	r3, #2
 800c68a:	d850      	bhi.n	800c72e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c68c:	6833      	ldr	r3, [r6, #0]
 800c68e:	0118      	lsls	r0, r3, #4
 800c690:	d4f7      	bmi.n	800c682 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c692:	6823      	ldr	r3, [r4, #0]
 800c694:	07d9      	lsls	r1, r3, #31
 800c696:	d506      	bpl.n	800c6a6 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c698:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c69c:	0712      	lsls	r2, r2, #28
 800c69e:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c6a2:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c6a6:	079a      	lsls	r2, r3, #30
 800c6a8:	d515      	bpl.n	800c6d6 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c6aa:	4979      	ldr	r1, [pc, #484]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c6ac:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c6ae:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c6b2:	6865      	ldr	r5, [r4, #4]
 800c6b4:	0612      	lsls	r2, r2, #24
 800c6b6:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c6ba:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c6be:	4302      	orrs	r2, r0
 800c6c0:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c6c4:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c6c8:	69e2      	ldr	r2, [r4, #28]
 800c6ca:	f020 001f 	bic.w	r0, r0, #31
 800c6ce:	3a01      	subs	r2, #1
 800c6d0:	4302      	orrs	r2, r0
 800c6d2:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c6d6:	065b      	lsls	r3, r3, #25
 800c6d8:	d509      	bpl.n	800c6ee <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c6da:	1d20      	adds	r0, r4, #4
 800c6dc:	c80b      	ldmia	r0, {r0, r1, r3}
 800c6de:	061b      	lsls	r3, r3, #24
 800c6e0:	4a6b      	ldr	r2, [pc, #428]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c6e2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c6e6:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c6ea:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c6ee:	4b67      	ldr	r3, [pc, #412]	; (800c88c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c6f0:	4e67      	ldr	r6, [pc, #412]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c6f2:	2201      	movs	r2, #1
 800c6f4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c6f6:	f7fd fc99 	bl	800a02c <HAL_GetTick>
 800c6fa:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c6fc:	e004      	b.n	800c708 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c6fe:	f7fd fc95 	bl	800a02c <HAL_GetTick>
 800c702:	1b40      	subs	r0, r0, r5
 800c704:	2802      	cmp	r0, #2
 800c706:	d812      	bhi.n	800c72e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c708:	6833      	ldr	r3, [r6, #0]
 800c70a:	011f      	lsls	r7, r3, #4
 800c70c:	d5f7      	bpl.n	800c6fe <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c70e:	6823      	ldr	r3, [r4, #0]
 800c710:	e79d      	b.n	800c64e <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c712:	f7fd fc8b 	bl	800a02c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c716:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c71a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c71c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c71e:	079b      	lsls	r3, r3, #30
 800c720:	f100 80a5 	bmi.w	800c86e <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c724:	f7fd fc82 	bl	800a02c <HAL_GetTick>
 800c728:	1b80      	subs	r0, r0, r6
 800c72a:	42b8      	cmp	r0, r7
 800c72c:	d9f6      	bls.n	800c71c <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c72e:	2003      	movs	r0, #3
}
 800c730:	b003      	add	sp, #12
 800c732:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c734:	4b55      	ldr	r3, [pc, #340]	; (800c88c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c736:	4e56      	ldr	r6, [pc, #344]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c738:	2200      	movs	r2, #0
 800c73a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c73c:	f7fd fc76 	bl	800a02c <HAL_GetTick>
 800c740:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c742:	e004      	b.n	800c74e <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c744:	f7fd fc72 	bl	800a02c <HAL_GetTick>
 800c748:	1b43      	subs	r3, r0, r5
 800c74a:	2b02      	cmp	r3, #2
 800c74c:	d8ef      	bhi.n	800c72e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c74e:	6833      	ldr	r3, [r6, #0]
 800c750:	0098      	lsls	r0, r3, #2
 800c752:	d4f7      	bmi.n	800c744 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c754:	6822      	ldr	r2, [r4, #0]
 800c756:	0751      	lsls	r1, r2, #29
 800c758:	d515      	bpl.n	800c786 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c75a:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c75c:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c760:	6920      	ldr	r0, [r4, #16]
 800c762:	061b      	lsls	r3, r3, #24
 800c764:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c768:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c76c:	430b      	orrs	r3, r1
 800c76e:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c772:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c776:	6a21      	ldr	r1, [r4, #32]
 800c778:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c77c:	3901      	subs	r1, #1
 800c77e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c782:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c786:	0713      	lsls	r3, r2, #28
 800c788:	d514      	bpl.n	800c7b4 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c78a:	4a41      	ldr	r2, [pc, #260]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c78c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c78e:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c792:	6920      	ldr	r0, [r4, #16]
 800c794:	071b      	lsls	r3, r3, #28
 800c796:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c79a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c79e:	430b      	orrs	r3, r1
 800c7a0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c7a4:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c7a8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c7aa:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c7ae:	430b      	orrs	r3, r1
 800c7b0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c7b4:	4b35      	ldr	r3, [pc, #212]	; (800c88c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c7b6:	4e36      	ldr	r6, [pc, #216]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c7b8:	2201      	movs	r2, #1
 800c7ba:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c7bc:	f7fd fc36 	bl	800a02c <HAL_GetTick>
 800c7c0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c7c2:	e004      	b.n	800c7ce <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c7c4:	f7fd fc32 	bl	800a02c <HAL_GetTick>
 800c7c8:	1b40      	subs	r0, r0, r5
 800c7ca:	2802      	cmp	r0, #2
 800c7cc:	d8af      	bhi.n	800c72e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c7ce:	6833      	ldr	r3, [r6, #0]
 800c7d0:	009f      	lsls	r7, r3, #2
 800c7d2:	d5f7      	bpl.n	800c7c4 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c7d4:	6823      	ldr	r3, [r4, #0]
 800c7d6:	e73d      	b.n	800c654 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c7d8:	4618      	mov	r0, r3
}
 800c7da:	b003      	add	sp, #12
 800c7dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c7de:	4b2c      	ldr	r3, [pc, #176]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c7e0:	4d2c      	ldr	r5, [pc, #176]	; (800c894 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c7e2:	2200      	movs	r2, #0
 800c7e4:	9201      	str	r2, [sp, #4]
 800c7e6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c7e8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c7ec:	641a      	str	r2, [r3, #64]	; 0x40
 800c7ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c7f0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c7f4:	9301      	str	r3, [sp, #4]
 800c7f6:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c7f8:	682b      	ldr	r3, [r5, #0]
 800c7fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c7fe:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c800:	f7fd fc14 	bl	800a02c <HAL_GetTick>
 800c804:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c806:	e004      	b.n	800c812 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c808:	f7fd fc10 	bl	800a02c <HAL_GetTick>
 800c80c:	1b83      	subs	r3, r0, r6
 800c80e:	2b02      	cmp	r3, #2
 800c810:	d88d      	bhi.n	800c72e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c812:	682b      	ldr	r3, [r5, #0]
 800c814:	05d9      	lsls	r1, r3, #23
 800c816:	d5f7      	bpl.n	800c808 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c818:	4d1d      	ldr	r5, [pc, #116]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c81a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c81c:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c81e:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c822:	d111      	bne.n	800c848 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c824:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c828:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c82c:	d021      	beq.n	800c872 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c82e:	4918      	ldr	r1, [pc, #96]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c830:	688a      	ldr	r2, [r1, #8]
 800c832:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c836:	608a      	str	r2, [r1, #8]
 800c838:	4a15      	ldr	r2, [pc, #84]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c83a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c83c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c840:	430b      	orrs	r3, r1
 800c842:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c844:	6823      	ldr	r3, [r4, #0]
 800c846:	e708      	b.n	800c65a <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c848:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c84c:	4291      	cmp	r1, r2
 800c84e:	d0eb      	beq.n	800c828 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c850:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c852:	4a0e      	ldr	r2, [pc, #56]	; (800c88c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c854:	2101      	movs	r1, #1
 800c856:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c85a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c85e:	2100      	movs	r1, #0
 800c860:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c864:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c866:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c868:	07da      	lsls	r2, r3, #31
 800c86a:	f53f af52 	bmi.w	800c712 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c86e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c870:	e7d8      	b.n	800c824 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c872:	4807      	ldr	r0, [pc, #28]	; (800c890 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c874:	6882      	ldr	r2, [r0, #8]
 800c876:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c87a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c87e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c882:	430a      	orrs	r2, r1
 800c884:	6082      	str	r2, [r0, #8]
 800c886:	e7d7      	b.n	800c838 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c888:	42471000 	.word	0x42471000
 800c88c:	42470000 	.word	0x42470000
 800c890:	40023800 	.word	0x40023800
 800c894:	40007000 	.word	0x40007000

0800c898 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c898:	b1f0      	cbz	r0, 800c8d8 <HAL_SDRAM_Init+0x40>
{
 800c89a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c89c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c8a0:	460d      	mov	r5, r1
 800c8a2:	4604      	mov	r4, r0
 800c8a4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c8a8:	b18b      	cbz	r3, 800c8ce <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c8aa:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c8ac:	2302      	movs	r3, #2
 800c8ae:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c8b2:	f851 0b04 	ldr.w	r0, [r1], #4
 800c8b6:	f000 fe51 	bl	800d55c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c8ba:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c8be:	4629      	mov	r1, r5
 800c8c0:	f000 fe8a 	bl	800d5d8 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c8c4:	2301      	movs	r3, #1
 800c8c6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c8ca:	2000      	movs	r0, #0
}
 800c8cc:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c8ce:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c8d2:	f7f5 fbcb 	bl	800206c <HAL_SDRAM_MspInit>
 800c8d6:	e7e8      	b.n	800c8aa <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c8d8:	2001      	movs	r0, #1
}
 800c8da:	4770      	bx	lr

0800c8dc <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c8dc:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c8de:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c8e2:	2b02      	cmp	r3, #2
{
 800c8e4:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c8e6:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c8e8:	d004      	beq.n	800c8f4 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c8ea:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c8ee:	2c01      	cmp	r4, #1
 800c8f0:	d001      	beq.n	800c8f6 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c8f2:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c8f4:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c8f6:	460e      	mov	r6, r1
 800c8f8:	2302      	movs	r3, #2
 800c8fa:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c8fe:	6828      	ldr	r0, [r5, #0]
 800c900:	f000 feb6 	bl	800d670 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c904:	6833      	ldr	r3, [r6, #0]
 800c906:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c908:	bf06      	itte	eq
 800c90a:	2305      	moveq	r3, #5
 800c90c:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c910:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c914:	2000      	movs	r0, #0
}
 800c916:	bd70      	pop	{r4, r5, r6, pc}

0800c918 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c918:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c91a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c91e:	2b02      	cmp	r3, #2
{
 800c920:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c922:	b2d8      	uxtb	r0, r3
 800c924:	d005      	beq.n	800c932 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c926:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c92a:	2b01      	cmp	r3, #1
 800c92c:	b2dd      	uxtb	r5, r3
 800c92e:	d001      	beq.n	800c934 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c930:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c932:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c934:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c936:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c938:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c93c:	f000 fec2 	bl	800d6c4 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c940:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c944:	2000      	movs	r0, #0
}
 800c946:	bd38      	pop	{r3, r4, r5, pc}

0800c948 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c948:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c94c:	b082      	sub	sp, #8
 800c94e:	461d      	mov	r5, r3
 800c950:	4616      	mov	r6, r2
 800c952:	460c      	mov	r4, r1
 800c954:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c956:	f7fd fb69 	bl	800a02c <HAL_GetTick>
 800c95a:	4435      	add	r5, r6
 800c95c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c95e:	f7fd fb65 	bl	800a02c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c962:	4b27      	ldr	r3, [pc, #156]	; (800ca00 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c964:	681b      	ldr	r3, [r3, #0]
 800c966:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c96a:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c96e:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c970:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c972:	1c73      	adds	r3, r6, #1
 800c974:	6839      	ldr	r1, [r7, #0]
 800c976:	d107      	bne.n	800c988 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c978:	688b      	ldr	r3, [r1, #8]
 800c97a:	ea34 0303 	bics.w	r3, r4, r3
 800c97e:	d0fb      	beq.n	800c978 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c980:	2000      	movs	r0, #0
}
 800c982:	b002      	add	sp, #8
 800c984:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c988:	688b      	ldr	r3, [r1, #8]
 800c98a:	ea34 0303 	bics.w	r3, r4, r3
 800c98e:	d1f7      	bne.n	800c980 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c990:	f7fd fb4c 	bl	800a02c <HAL_GetTick>
 800c994:	eba0 0008 	sub.w	r0, r0, r8
 800c998:	42a8      	cmp	r0, r5
 800c99a:	d208      	bcs.n	800c9ae <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c99c:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c99e:	2b00      	cmp	r3, #0
      count--;
 800c9a0:	9b01      	ldr	r3, [sp, #4]
 800c9a2:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c9a6:	bf08      	it	eq
 800c9a8:	2500      	moveq	r5, #0
      count--;
 800c9aa:	9301      	str	r3, [sp, #4]
 800c9ac:	e7e1      	b.n	800c972 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c9ae:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c9b2:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c9b4:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c9b8:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c9bc:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c9be:	d013      	beq.n	800c9e8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c9c0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c9c2:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c9c6:	d107      	bne.n	800c9d8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c9c8:	681a      	ldr	r2, [r3, #0]
 800c9ca:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c9ce:	601a      	str	r2, [r3, #0]
 800c9d0:	681a      	ldr	r2, [r3, #0]
 800c9d2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c9d6:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c9d8:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c9da:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c9dc:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c9e0:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c9e4:	2003      	movs	r0, #3
 800c9e6:	e7cc      	b.n	800c982 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c9e8:	68ba      	ldr	r2, [r7, #8]
 800c9ea:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c9ee:	d002      	beq.n	800c9f6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c9f0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c9f4:	d1e4      	bne.n	800c9c0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c9f6:	681a      	ldr	r2, [r3, #0]
 800c9f8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c9fc:	601a      	str	r2, [r3, #0]
 800c9fe:	e7df      	b.n	800c9c0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800ca00:	20000078 	.word	0x20000078

0800ca04 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800ca04:	b538      	push	{r3, r4, r5, lr}
 800ca06:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ca08:	6842      	ldr	r2, [r0, #4]
 800ca0a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800ca0e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ca10:	d006      	beq.n	800ca20 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800ca12:	460a      	mov	r2, r1
 800ca14:	2101      	movs	r1, #1
 800ca16:	f7ff ff97 	bl	800c948 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ca1a:	b978      	cbnz	r0, 800ca3c <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800ca1c:	2000      	movs	r0, #0
}
 800ca1e:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ca20:	6882      	ldr	r2, [r0, #8]
 800ca22:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800ca26:	d01c      	beq.n	800ca62 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800ca28:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ca2c:	d00c      	beq.n	800ca48 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ca2e:	460a      	mov	r2, r1
 800ca30:	4620      	mov	r0, r4
 800ca32:	2180      	movs	r1, #128	; 0x80
 800ca34:	f7ff ff88 	bl	800c948 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ca38:	2800      	cmp	r0, #0
 800ca3a:	d0ef      	beq.n	800ca1c <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ca3c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800ca3e:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800ca42:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ca44:	6563      	str	r3, [r4, #84]	; 0x54
}
 800ca46:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800ca48:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800ca4a:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800ca4c:	6829      	ldr	r1, [r5, #0]
 800ca4e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ca52:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800ca54:	2101      	movs	r1, #1
 800ca56:	f7ff ff77 	bl	800c948 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ca5a:	2800      	cmp	r0, #0
 800ca5c:	d1ee      	bne.n	800ca3c <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800ca5e:	2000      	movs	r0, #0
 800ca60:	e7dd      	b.n	800ca1e <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800ca62:	6800      	ldr	r0, [r0, #0]
 800ca64:	6802      	ldr	r2, [r0, #0]
 800ca66:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ca6a:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ca6c:	460a      	mov	r2, r1
 800ca6e:	4620      	mov	r0, r4
 800ca70:	2180      	movs	r1, #128	; 0x80
 800ca72:	f7ff ff69 	bl	800c948 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ca76:	2800      	cmp	r0, #0
 800ca78:	d0d0      	beq.n	800ca1c <SPI_EndRxTransaction+0x18>
 800ca7a:	e7df      	b.n	800ca3c <SPI_EndRxTransaction+0x38>

0800ca7c <HAL_SPI_Init>:
  if (hspi == NULL)
 800ca7c:	2800      	cmp	r0, #0
 800ca7e:	d05c      	beq.n	800cb3a <HAL_SPI_Init+0xbe>
{
 800ca80:	b570      	push	{r4, r5, r6, lr}
 800ca82:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800ca84:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800ca86:	2800      	cmp	r0, #0
 800ca88:	d047      	beq.n	800cb1a <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800ca8a:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800ca8c:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ca90:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800ca94:	2200      	movs	r2, #0
 800ca96:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ca98:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800ca9c:	2b00      	cmp	r3, #0
 800ca9e:	d042      	beq.n	800cb26 <HAL_SPI_Init+0xaa>
 800caa0:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800caa2:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800caa4:	68a5      	ldr	r5, [r4, #8]
 800caa6:	69a2      	ldr	r2, [r4, #24]
 800caa8:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800caaa:	2302      	movs	r3, #2
 800caac:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800cab0:	680b      	ldr	r3, [r1, #0]
 800cab2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cab6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cab8:	6863      	ldr	r3, [r4, #4]
 800caba:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800cabe:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800cac2:	432b      	orrs	r3, r5
 800cac4:	68e5      	ldr	r5, [r4, #12]
 800cac6:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800caca:	432b      	orrs	r3, r5
 800cacc:	6925      	ldr	r5, [r4, #16]
 800cace:	f005 0502 	and.w	r5, r5, #2
 800cad2:	432b      	orrs	r3, r5
 800cad4:	6965      	ldr	r5, [r4, #20]
 800cad6:	f005 0501 	and.w	r5, r5, #1
 800cada:	432b      	orrs	r3, r5
 800cadc:	69e5      	ldr	r5, [r4, #28]
 800cade:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800cae2:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800cae6:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800caea:	4333      	orrs	r3, r6
 800caec:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800caee:	0c12      	lsrs	r2, r2, #16
 800caf0:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800caf4:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800caf8:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cafc:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cb00:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cb02:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cb04:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800cb06:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800cb08:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800cb0a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800cb0e:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800cb10:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800cb12:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800cb14:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800cb18:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cb1a:	6863      	ldr	r3, [r4, #4]
 800cb1c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cb20:	d0b6      	beq.n	800ca90 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800cb22:	61e0      	str	r0, [r4, #28]
 800cb24:	e7b4      	b.n	800ca90 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800cb26:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800cb28:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800cb2c:	f7f5 fa18 	bl	8001f60 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cb30:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cb34:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800cb38:	e7b3      	b.n	800caa2 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800cb3a:	2001      	movs	r0, #1
}
 800cb3c:	4770      	bx	lr
 800cb3e:	bf00      	nop

0800cb40 <HAL_SPI_Transmit>:
{
 800cb40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb44:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cb46:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800cb4a:	2801      	cmp	r0, #1
{
 800cb4c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cb4e:	f000 8085 	beq.w	800cc5c <HAL_SPI_Transmit+0x11c>
 800cb52:	461d      	mov	r5, r3
 800cb54:	2301      	movs	r3, #1
 800cb56:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cb5a:	4688      	mov	r8, r1
 800cb5c:	4617      	mov	r7, r2
 800cb5e:	f7fd fa65 	bl	800a02c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cb62:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800cb66:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800cb68:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cb6a:	b2d8      	uxtb	r0, r3
 800cb6c:	d009      	beq.n	800cb82 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800cb6e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cb70:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cb72:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cb74:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cb78:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cb7c:	b002      	add	sp, #8
 800cb7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800cb82:	f1b8 0f00 	cmp.w	r8, #0
 800cb86:	d0f3      	beq.n	800cb70 <HAL_SPI_Transmit+0x30>
 800cb88:	2f00      	cmp	r7, #0
 800cb8a:	d0f1      	beq.n	800cb70 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb8c:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800cb8e:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800cb90:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cb94:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800cb96:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb98:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800cb9c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800cba0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cba4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800cba6:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800cba8:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800cbaa:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800cbac:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800cbae:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cbb0:	f000 8085 	beq.w	800ccbe <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cbb4:	6803      	ldr	r3, [r0, #0]
 800cbb6:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800cbb8:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cbba:	d403      	bmi.n	800cbc4 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800cbbc:	6803      	ldr	r3, [r0, #0]
 800cbbe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cbc2:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cbc4:	68e3      	ldr	r3, [r4, #12]
 800cbc6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800cbca:	d04b      	beq.n	800cc64 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cbcc:	6863      	ldr	r3, [r4, #4]
 800cbce:	2b00      	cmp	r3, #0
 800cbd0:	f000 8097 	beq.w	800cd02 <HAL_SPI_Transmit+0x1c2>
 800cbd4:	2f01      	cmp	r7, #1
 800cbd6:	f000 8094 	beq.w	800cd02 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800cbda:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cbdc:	b29b      	uxth	r3, r3
 800cbde:	b1ab      	cbz	r3, 800cc0c <HAL_SPI_Transmit+0xcc>
 800cbe0:	1c68      	adds	r0, r5, #1
 800cbe2:	f040 8083 	bne.w	800ccec <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cbe6:	6823      	ldr	r3, [r4, #0]
 800cbe8:	689a      	ldr	r2, [r3, #8]
 800cbea:	0791      	lsls	r1, r2, #30
 800cbec:	f140 8094 	bpl.w	800cd18 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cbf0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cbf2:	7812      	ldrb	r2, [r2, #0]
 800cbf4:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cbf6:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cbf8:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cbfa:	3901      	subs	r1, #1
 800cbfc:	b289      	uxth	r1, r1
 800cbfe:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cc00:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc02:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800cc04:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc06:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800cc08:	2900      	cmp	r1, #0
 800cc0a:	d1ec      	bne.n	800cbe6 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cc0c:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cc0e:	4b5b      	ldr	r3, [pc, #364]	; (800cd7c <HAL_SPI_Transmit+0x23c>)
 800cc10:	4a5b      	ldr	r2, [pc, #364]	; (800cd80 <HAL_SPI_Transmit+0x240>)
 800cc12:	681b      	ldr	r3, [r3, #0]
 800cc14:	fba2 2303 	umull	r2, r3, r2, r3
 800cc18:	0d5b      	lsrs	r3, r3, #21
 800cc1a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800cc1e:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cc22:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cc26:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cc28:	d107      	bne.n	800cc3a <HAL_SPI_Transmit+0xfa>
 800cc2a:	e098      	b.n	800cd5e <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800cc2c:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cc2e:	6822      	ldr	r2, [r4, #0]
      count--;
 800cc30:	3b01      	subs	r3, #1
 800cc32:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cc34:	6893      	ldr	r3, [r2, #8]
 800cc36:	061b      	lsls	r3, r3, #24
 800cc38:	d502      	bpl.n	800cc40 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800cc3a:	9b01      	ldr	r3, [sp, #4]
 800cc3c:	2b00      	cmp	r3, #0
 800cc3e:	d1f5      	bne.n	800cc2c <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cc40:	68a3      	ldr	r3, [r4, #8]
 800cc42:	b933      	cbnz	r3, 800cc52 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cc44:	6822      	ldr	r2, [r4, #0]
 800cc46:	9300      	str	r3, [sp, #0]
 800cc48:	68d3      	ldr	r3, [r2, #12]
 800cc4a:	9300      	str	r3, [sp, #0]
 800cc4c:	6893      	ldr	r3, [r2, #8]
 800cc4e:	9300      	str	r3, [sp, #0]
 800cc50:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cc52:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800cc54:	3800      	subs	r0, #0
 800cc56:	bf18      	it	ne
 800cc58:	2001      	movne	r0, #1
error:
 800cc5a:	e789      	b.n	800cb70 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800cc5c:	2002      	movs	r0, #2
}
 800cc5e:	b002      	add	sp, #8
 800cc60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cc64:	6861      	ldr	r1, [r4, #4]
 800cc66:	2900      	cmp	r1, #0
 800cc68:	d176      	bne.n	800cd58 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cc6a:	4643      	mov	r3, r8
 800cc6c:	f833 7b02 	ldrh.w	r7, [r3], #2
 800cc70:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cc72:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc74:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc76:	3b01      	subs	r3, #1
 800cc78:	b29b      	uxth	r3, r3
 800cc7a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cc7c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc7e:	b29b      	uxth	r3, r3
 800cc80:	2b00      	cmp	r3, #0
 800cc82:	d0c4      	beq.n	800cc0e <HAL_SPI_Transmit+0xce>
 800cc84:	1c6b      	adds	r3, r5, #1
 800cc86:	d15e      	bne.n	800cd46 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cc88:	6883      	ldr	r3, [r0, #8]
 800cc8a:	079f      	lsls	r7, r3, #30
 800cc8c:	d50f      	bpl.n	800ccae <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cc8e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cc90:	f832 3b02 	ldrh.w	r3, [r2], #2
 800cc94:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800cc96:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cc98:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc9a:	3b01      	subs	r3, #1
 800cc9c:	b29b      	uxth	r3, r3
 800cc9e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cca0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cca2:	b29b      	uxth	r3, r3
 800cca4:	2b00      	cmp	r3, #0
 800cca6:	d0b1      	beq.n	800cc0c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cca8:	6883      	ldr	r3, [r0, #8]
 800ccaa:	079f      	lsls	r7, r3, #30
 800ccac:	d4ef      	bmi.n	800cc8e <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ccae:	f7fd f9bd 	bl	800a02c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800ccb2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ccb4:	b29b      	uxth	r3, r3
 800ccb6:	2b00      	cmp	r3, #0
 800ccb8:	d0a8      	beq.n	800cc0c <HAL_SPI_Transmit+0xcc>
 800ccba:	6820      	ldr	r0, [r4, #0]
 800ccbc:	e7e4      	b.n	800cc88 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800ccbe:	6803      	ldr	r3, [r0, #0]
 800ccc0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ccc4:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800ccc6:	6803      	ldr	r3, [r0, #0]
 800ccc8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800cccc:	6003      	str	r3, [r0, #0]
 800ccce:	e771      	b.n	800cbb4 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ccd0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ccd2:	7812      	ldrb	r2, [r2, #0]
 800ccd4:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800ccd6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ccd8:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ccda:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ccdc:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ccde:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cce0:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cce2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cce4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cce6:	b29b      	uxth	r3, r3
 800cce8:	2b00      	cmp	r3, #0
 800ccea:	d08f      	beq.n	800cc0c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ccec:	6823      	ldr	r3, [r4, #0]
 800ccee:	689a      	ldr	r2, [r3, #8]
 800ccf0:	0792      	lsls	r2, r2, #30
 800ccf2:	d4ed      	bmi.n	800ccd0 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ccf4:	f7fd f99a 	bl	800a02c <HAL_GetTick>
 800ccf8:	1b80      	subs	r0, r0, r6
 800ccfa:	42a8      	cmp	r0, r5
 800ccfc:	d3f2      	bcc.n	800cce4 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800ccfe:	2003      	movs	r0, #3
 800cd00:	e736      	b.n	800cb70 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cd02:	f898 3000 	ldrb.w	r3, [r8]
 800cd06:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800cd08:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd0a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cd0c:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd0e:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cd10:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd12:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cd14:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cd16:	e760      	b.n	800cbda <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cd18:	f7fd f988 	bl	800a02c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cd1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd1e:	b29b      	uxth	r3, r3
 800cd20:	2b00      	cmp	r3, #0
 800cd22:	f47f af60 	bne.w	800cbe6 <HAL_SPI_Transmit+0xa6>
 800cd26:	e771      	b.n	800cc0c <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cd28:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cd2a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cd2e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cd30:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cd32:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd34:	3b01      	subs	r3, #1
 800cd36:	b29b      	uxth	r3, r3
 800cd38:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cd3a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd3c:	b29b      	uxth	r3, r3
 800cd3e:	2b00      	cmp	r3, #0
 800cd40:	f43f af64 	beq.w	800cc0c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cd44:	6822      	ldr	r2, [r4, #0]
 800cd46:	6893      	ldr	r3, [r2, #8]
 800cd48:	0799      	lsls	r1, r3, #30
 800cd4a:	d4ed      	bmi.n	800cd28 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cd4c:	f7fd f96e 	bl	800a02c <HAL_GetTick>
 800cd50:	1b80      	subs	r0, r0, r6
 800cd52:	42a8      	cmp	r0, r5
 800cd54:	d3f1      	bcc.n	800cd3a <HAL_SPI_Transmit+0x1fa>
 800cd56:	e7d2      	b.n	800ccfe <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cd58:	2f01      	cmp	r7, #1
 800cd5a:	d18f      	bne.n	800cc7c <HAL_SPI_Transmit+0x13c>
 800cd5c:	e785      	b.n	800cc6a <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cd5e:	4633      	mov	r3, r6
 800cd60:	462a      	mov	r2, r5
 800cd62:	2180      	movs	r1, #128	; 0x80
 800cd64:	4620      	mov	r0, r4
 800cd66:	f7ff fdef 	bl	800c948 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cd6a:	2800      	cmp	r0, #0
 800cd6c:	f43f af68 	beq.w	800cc40 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cd70:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cd72:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cd74:	4313      	orrs	r3, r2
 800cd76:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cd78:	6562      	str	r2, [r4, #84]	; 0x54
 800cd7a:	e761      	b.n	800cc40 <HAL_SPI_Transmit+0x100>
 800cd7c:	20000078 	.word	0x20000078
 800cd80:	165e9f81 	.word	0x165e9f81

0800cd84 <HAL_SPI_TransmitReceive>:
{
 800cd84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd88:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cd8a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800cd8e:	2801      	cmp	r0, #1
{
 800cd90:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cd92:	f000 80ac 	beq.w	800ceee <HAL_SPI_TransmitReceive+0x16a>
 800cd96:	461e      	mov	r6, r3
 800cd98:	2301      	movs	r3, #1
 800cd9a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cd9e:	4690      	mov	r8, r2
 800cda0:	460f      	mov	r7, r1
 800cda2:	f7fd f943 	bl	800a02c <HAL_GetTick>
 800cda6:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800cda8:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800cdac:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cdae:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800cdb0:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cdb2:	d011      	beq.n	800cdd8 <HAL_SPI_TransmitReceive+0x54>
 800cdb4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cdb8:	d009      	beq.n	800cdce <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800cdba:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cdbc:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cdbe:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cdc0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cdc4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cdc8:	b002      	add	sp, #8
 800cdca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800cdce:	68a1      	ldr	r1, [r4, #8]
 800cdd0:	2900      	cmp	r1, #0
 800cdd2:	d1f2      	bne.n	800cdba <HAL_SPI_TransmitReceive+0x36>
 800cdd4:	2a04      	cmp	r2, #4
 800cdd6:	d1f0      	bne.n	800cdba <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800cdd8:	2f00      	cmp	r7, #0
 800cdda:	f000 808c 	beq.w	800cef6 <HAL_SPI_TransmitReceive+0x172>
 800cdde:	f1b8 0f00 	cmp.w	r8, #0
 800cde2:	f000 8088 	beq.w	800cef6 <HAL_SPI_TransmitReceive+0x172>
 800cde6:	2e00      	cmp	r6, #0
 800cde8:	f000 8085 	beq.w	800cef6 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cdec:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cdf0:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cdf4:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cdf6:	bf1c      	itt	ne
 800cdf8:	2205      	movne	r2, #5
 800cdfa:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cdfe:	2200      	movs	r2, #0
 800ce00:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800ce02:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce06:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800ce08:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800ce0a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce0c:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800ce0e:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce10:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800ce12:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800ce14:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce16:	d403      	bmi.n	800ce20 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800ce18:	6811      	ldr	r1, [r2, #0]
 800ce1a:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ce1e:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ce20:	68e1      	ldr	r1, [r4, #12]
 800ce22:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800ce26:	f000 809e 	beq.w	800cf66 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ce2a:	2b00      	cmp	r3, #0
 800ce2c:	f000 8091 	beq.w	800cf52 <HAL_SPI_TransmitReceive+0x1ce>
 800ce30:	2e01      	cmp	r6, #1
 800ce32:	f000 808e 	beq.w	800cf52 <HAL_SPI_TransmitReceive+0x1ce>
 800ce36:	9b08      	ldr	r3, [sp, #32]
 800ce38:	3301      	adds	r3, #1
        txallowed = 1U;
 800ce3a:	f04f 0601 	mov.w	r6, #1
 800ce3e:	d028      	beq.n	800ce92 <HAL_SPI_TransmitReceive+0x10e>
 800ce40:	e05b      	b.n	800cefa <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ce42:	6821      	ldr	r1, [r4, #0]
 800ce44:	688b      	ldr	r3, [r1, #8]
 800ce46:	0798      	lsls	r0, r3, #30
 800ce48:	d50f      	bpl.n	800ce6a <HAL_SPI_TransmitReceive+0xe6>
 800ce4a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce4c:	b29b      	uxth	r3, r3
 800ce4e:	b163      	cbz	r3, 800ce6a <HAL_SPI_TransmitReceive+0xe6>
 800ce50:	b15e      	cbz	r6, 800ce6a <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800ce52:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ce54:	781b      	ldrb	r3, [r3, #0]
 800ce56:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800ce58:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ce5a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ce5c:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800ce5e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800ce60:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ce62:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800ce64:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ce66:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ce68:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ce6a:	688a      	ldr	r2, [r1, #8]
 800ce6c:	f012 0201 	ands.w	r2, r2, #1
 800ce70:	d00d      	beq.n	800ce8e <HAL_SPI_TransmitReceive+0x10a>
 800ce72:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce74:	b29b      	uxth	r3, r3
 800ce76:	b153      	cbz	r3, 800ce8e <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800ce78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ce7a:	68c9      	ldr	r1, [r1, #12]
 800ce7c:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800ce7e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800ce80:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce82:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800ce84:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800ce86:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800ce88:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce8a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800ce8c:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ce8e:	f7fd f8cd 	bl	800a02c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ce92:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ce94:	b292      	uxth	r2, r2
 800ce96:	2a00      	cmp	r2, #0
 800ce98:	d1d3      	bne.n	800ce42 <HAL_SPI_TransmitReceive+0xbe>
 800ce9a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce9c:	b29b      	uxth	r3, r3
 800ce9e:	2b00      	cmp	r3, #0
 800cea0:	d1cf      	bne.n	800ce42 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cea2:	4b79      	ldr	r3, [pc, #484]	; (800d088 <HAL_SPI_TransmitReceive+0x304>)
 800cea4:	4a79      	ldr	r2, [pc, #484]	; (800d08c <HAL_SPI_TransmitReceive+0x308>)
 800cea6:	681b      	ldr	r3, [r3, #0]
 800cea8:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ceac:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ceae:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ceb2:	0d5b      	lsrs	r3, r3, #21
 800ceb4:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ceb8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cebc:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cebe:	d107      	bne.n	800ced0 <HAL_SPI_TransmitReceive+0x14c>
 800cec0:	e0d2      	b.n	800d068 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800cec2:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cec4:	6822      	ldr	r2, [r4, #0]
      count--;
 800cec6:	3b01      	subs	r3, #1
 800cec8:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ceca:	6893      	ldr	r3, [r2, #8]
 800cecc:	061b      	lsls	r3, r3, #24
 800cece:	d502      	bpl.n	800ced6 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800ced0:	9b01      	ldr	r3, [sp, #4]
 800ced2:	2b00      	cmp	r3, #0
 800ced4:	d1f5      	bne.n	800cec2 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ced6:	68a0      	ldr	r0, [r4, #8]
 800ced8:	2800      	cmp	r0, #0
 800ceda:	f040 8082 	bne.w	800cfe2 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cede:	6823      	ldr	r3, [r4, #0]
 800cee0:	9000      	str	r0, [sp, #0]
 800cee2:	68da      	ldr	r2, [r3, #12]
 800cee4:	9200      	str	r2, [sp, #0]
 800cee6:	689b      	ldr	r3, [r3, #8]
 800cee8:	9300      	str	r3, [sp, #0]
 800ceea:	9b00      	ldr	r3, [sp, #0]
 800ceec:	e766      	b.n	800cdbc <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800ceee:	2002      	movs	r0, #2
}
 800cef0:	b002      	add	sp, #8
 800cef2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800cef6:	2001      	movs	r0, #1
 800cef8:	e760      	b.n	800cdbc <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cefa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cefc:	b29b      	uxth	r3, r3
 800cefe:	b91b      	cbnz	r3, 800cf08 <HAL_SPI_TransmitReceive+0x184>
 800cf00:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf02:	b29b      	uxth	r3, r3
 800cf04:	2b00      	cmp	r3, #0
 800cf06:	d0cc      	beq.n	800cea2 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cf08:	6822      	ldr	r2, [r4, #0]
 800cf0a:	6893      	ldr	r3, [r2, #8]
 800cf0c:	0799      	lsls	r1, r3, #30
 800cf0e:	d50f      	bpl.n	800cf30 <HAL_SPI_TransmitReceive+0x1ac>
 800cf10:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cf12:	b29b      	uxth	r3, r3
 800cf14:	b163      	cbz	r3, 800cf30 <HAL_SPI_TransmitReceive+0x1ac>
 800cf16:	b15e      	cbz	r6, 800cf30 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cf18:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cf1a:	781b      	ldrb	r3, [r3, #0]
 800cf1c:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800cf1e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cf20:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cf22:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cf24:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cf26:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800cf28:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cf2a:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800cf2c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cf2e:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cf30:	6893      	ldr	r3, [r2, #8]
 800cf32:	f013 0301 	ands.w	r3, r3, #1
 800cf36:	d004      	beq.n	800cf42 <HAL_SPI_TransmitReceive+0x1be>
 800cf38:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cf3a:	b289      	uxth	r1, r1
 800cf3c:	2900      	cmp	r1, #0
 800cf3e:	f040 8087 	bne.w	800d050 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cf42:	f7fd f873 	bl	800a02c <HAL_GetTick>
 800cf46:	9b08      	ldr	r3, [sp, #32]
 800cf48:	1b40      	subs	r0, r0, r5
 800cf4a:	4298      	cmp	r0, r3
 800cf4c:	d3d5      	bcc.n	800cefa <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800cf4e:	2003      	movs	r0, #3
 800cf50:	e734      	b.n	800cdbc <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cf52:	783b      	ldrb	r3, [r7, #0]
 800cf54:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800cf56:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cf58:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cf5a:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cf5c:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cf5e:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cf60:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cf62:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cf64:	e767      	b.n	800ce36 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cf66:	2b00      	cmp	r3, #0
 800cf68:	d13d      	bne.n	800cfe6 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cf6a:	f837 3b02 	ldrh.w	r3, [r7], #2
 800cf6e:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800cf70:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cf72:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cf74:	3b01      	subs	r3, #1
 800cf76:	b29b      	uxth	r3, r3
 800cf78:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cf7a:	9b08      	ldr	r3, [sp, #32]
 800cf7c:	3301      	adds	r3, #1
{
 800cf7e:	f04f 0601 	mov.w	r6, #1
 800cf82:	d025      	beq.n	800cfd0 <HAL_SPI_TransmitReceive+0x24c>
 800cf84:	e032      	b.n	800cfec <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cf86:	6823      	ldr	r3, [r4, #0]
 800cf88:	689a      	ldr	r2, [r3, #8]
 800cf8a:	0792      	lsls	r2, r2, #30
 800cf8c:	d50d      	bpl.n	800cfaa <HAL_SPI_TransmitReceive+0x226>
 800cf8e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cf90:	b292      	uxth	r2, r2
 800cf92:	b152      	cbz	r2, 800cfaa <HAL_SPI_TransmitReceive+0x226>
 800cf94:	b14e      	cbz	r6, 800cfaa <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cf96:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cf98:	f831 2b02 	ldrh.w	r2, [r1], #2
 800cf9c:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800cf9e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cfa0:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cfa2:	3a01      	subs	r2, #1
 800cfa4:	b292      	uxth	r2, r2
        txallowed = 0U;
 800cfa6:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cfa8:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cfaa:	689a      	ldr	r2, [r3, #8]
 800cfac:	f012 0201 	ands.w	r2, r2, #1
 800cfb0:	d00c      	beq.n	800cfcc <HAL_SPI_TransmitReceive+0x248>
 800cfb2:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cfb4:	b289      	uxth	r1, r1
 800cfb6:	b149      	cbz	r1, 800cfcc <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cfb8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cfba:	68db      	ldr	r3, [r3, #12]
 800cfbc:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800cfc0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cfc2:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cfc4:	3b01      	subs	r3, #1
 800cfc6:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800cfc8:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800cfca:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cfcc:	f7fd f82e 	bl	800a02c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cfd0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cfd2:	b29b      	uxth	r3, r3
 800cfd4:	2b00      	cmp	r3, #0
 800cfd6:	d1d6      	bne.n	800cf86 <HAL_SPI_TransmitReceive+0x202>
 800cfd8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cfda:	b29b      	uxth	r3, r3
 800cfdc:	2b00      	cmp	r3, #0
 800cfde:	d1d2      	bne.n	800cf86 <HAL_SPI_TransmitReceive+0x202>
 800cfe0:	e75f      	b.n	800cea2 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800cfe2:	2000      	movs	r0, #0
 800cfe4:	e6ea      	b.n	800cdbc <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cfe6:	2e01      	cmp	r6, #1
 800cfe8:	d1c7      	bne.n	800cf7a <HAL_SPI_TransmitReceive+0x1f6>
 800cfea:	e7be      	b.n	800cf6a <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cfec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cfee:	b29b      	uxth	r3, r3
 800cff0:	b923      	cbnz	r3, 800cffc <HAL_SPI_TransmitReceive+0x278>
 800cff2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cff4:	b29b      	uxth	r3, r3
 800cff6:	2b00      	cmp	r3, #0
 800cff8:	f43f af53 	beq.w	800cea2 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cffc:	6822      	ldr	r2, [r4, #0]
 800cffe:	6893      	ldr	r3, [r2, #8]
 800d000:	079f      	lsls	r7, r3, #30
 800d002:	d50d      	bpl.n	800d020 <HAL_SPI_TransmitReceive+0x29c>
 800d004:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d006:	b29b      	uxth	r3, r3
 800d008:	b153      	cbz	r3, 800d020 <HAL_SPI_TransmitReceive+0x29c>
 800d00a:	b14e      	cbz	r6, 800d020 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d00c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d00e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800d012:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800d014:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d016:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d018:	3b01      	subs	r3, #1
 800d01a:	b29b      	uxth	r3, r3
 800d01c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800d01e:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d020:	6893      	ldr	r3, [r2, #8]
 800d022:	f013 0301 	ands.w	r3, r3, #1
 800d026:	d00c      	beq.n	800d042 <HAL_SPI_TransmitReceive+0x2be>
 800d028:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d02a:	b289      	uxth	r1, r1
 800d02c:	b149      	cbz	r1, 800d042 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d02e:	68d1      	ldr	r1, [r2, #12]
 800d030:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d032:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800d036:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800d038:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d03a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d03c:	3b01      	subs	r3, #1
 800d03e:	b29b      	uxth	r3, r3
 800d040:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800d042:	f7fc fff3 	bl	800a02c <HAL_GetTick>
 800d046:	9b08      	ldr	r3, [sp, #32]
 800d048:	1b40      	subs	r0, r0, r5
 800d04a:	4298      	cmp	r0, r3
 800d04c:	d3ce      	bcc.n	800cfec <HAL_SPI_TransmitReceive+0x268>
 800d04e:	e77e      	b.n	800cf4e <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800d050:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800d052:	68d2      	ldr	r2, [r2, #12]
 800d054:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800d056:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800d058:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d05a:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800d05c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800d05e:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800d060:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d062:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800d064:	461e      	mov	r6, r3
 800d066:	e76c      	b.n	800cf42 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800d068:	9a08      	ldr	r2, [sp, #32]
 800d06a:	462b      	mov	r3, r5
 800d06c:	2180      	movs	r1, #128	; 0x80
 800d06e:	4620      	mov	r0, r4
 800d070:	f7ff fc6a 	bl	800c948 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800d074:	2800      	cmp	r0, #0
 800d076:	f43f af2e 	beq.w	800ced6 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d07a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d07c:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d07e:	4313      	orrs	r3, r2
 800d080:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800d082:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d084:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800d086:	e699      	b.n	800cdbc <HAL_SPI_TransmitReceive+0x38>
 800d088:	20000078 	.word	0x20000078
 800d08c:	165e9f81 	.word	0x165e9f81

0800d090 <HAL_SPI_Receive>:
{
 800d090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d094:	6846      	ldr	r6, [r0, #4]
 800d096:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800d09a:	b082      	sub	sp, #8
 800d09c:	4604      	mov	r4, r0
 800d09e:	4690      	mov	r8, r2
 800d0a0:	461d      	mov	r5, r3
 800d0a2:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d0a4:	d06e      	beq.n	800d184 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800d0a6:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800d0aa:	2b01      	cmp	r3, #1
 800d0ac:	d076      	beq.n	800d19c <HAL_SPI_Receive+0x10c>
 800d0ae:	2301      	movs	r3, #1
 800d0b0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800d0b4:	f7fc ffba 	bl	800a02c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800d0b8:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800d0bc:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800d0c0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800d0c2:	fa5f f08c 	uxtb.w	r0, ip
 800d0c6:	d009      	beq.n	800d0dc <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800d0c8:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800d0ca:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800d0cc:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800d0ce:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800d0d2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800d0d6:	b002      	add	sp, #8
 800d0d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800d0dc:	2f00      	cmp	r7, #0
 800d0de:	d0f4      	beq.n	800d0ca <HAL_SPI_Receive+0x3a>
 800d0e0:	f1b8 0f00 	cmp.w	r8, #0
 800d0e4:	d0f1      	beq.n	800d0ca <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d0e6:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800d0e8:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d0ea:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800d0ee:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800d0f0:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d0f4:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800d0f8:	f04f 0104 	mov.w	r1, #4
 800d0fc:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800d100:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d104:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800d106:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800d108:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800d10a:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800d10e:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800d110:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d112:	d107      	bne.n	800d124 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800d114:	6811      	ldr	r1, [r2, #0]
 800d116:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800d11a:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800d11c:	6811      	ldr	r1, [r2, #0]
 800d11e:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800d122:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d124:	6811      	ldr	r1, [r2, #0]
 800d126:	0648      	lsls	r0, r1, #25
 800d128:	d403      	bmi.n	800d132 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800d12a:	6811      	ldr	r1, [r2, #0]
 800d12c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800d130:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800d132:	68e1      	ldr	r1, [r4, #12]
 800d134:	2900      	cmp	r1, #0
 800d136:	d054      	beq.n	800d1e2 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800d138:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d13a:	b289      	uxth	r1, r1
 800d13c:	b1a9      	cbz	r1, 800d16a <HAL_SPI_Receive+0xda>
 800d13e:	1c69      	adds	r1, r5, #1
 800d140:	d13e      	bne.n	800d1c0 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d142:	6893      	ldr	r3, [r2, #8]
 800d144:	07db      	lsls	r3, r3, #31
 800d146:	d544      	bpl.n	800d1d2 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d148:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d14a:	68d1      	ldr	r1, [r2, #12]
 800d14c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800d150:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d154:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d156:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d15a:	fa1f fc8c 	uxth.w	ip, ip
 800d15e:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d162:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d164:	b29b      	uxth	r3, r3
 800d166:	2b00      	cmp	r3, #0
 800d168:	d1eb      	bne.n	800d142 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800d16a:	4632      	mov	r2, r6
 800d16c:	4629      	mov	r1, r5
 800d16e:	4620      	mov	r0, r4
 800d170:	f7ff fc48 	bl	800ca04 <SPI_EndRxTransaction>
 800d174:	b108      	cbz	r0, 800d17a <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d176:	2320      	movs	r3, #32
 800d178:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d17a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800d17c:	3800      	subs	r0, #0
 800d17e:	bf18      	it	ne
 800d180:	2001      	movne	r0, #1
error :
 800d182:	e7a2      	b.n	800d0ca <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d184:	6883      	ldr	r3, [r0, #8]
 800d186:	2b00      	cmp	r3, #0
 800d188:	d18d      	bne.n	800d0a6 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d18a:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d18c:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d18e:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d190:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d194:	460a      	mov	r2, r1
 800d196:	f7ff fdf5 	bl	800cd84 <HAL_SPI_TransmitReceive>
 800d19a:	e79c      	b.n	800d0d6 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800d19c:	2002      	movs	r0, #2
}
 800d19e:	b002      	add	sp, #8
 800d1a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d1a4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d1a6:	68db      	ldr	r3, [r3, #12]
 800d1a8:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800d1ac:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d1ae:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d1b0:	3b01      	subs	r3, #1
 800d1b2:	b29b      	uxth	r3, r3
 800d1b4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d1b6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d1b8:	b29b      	uxth	r3, r3
 800d1ba:	2b00      	cmp	r3, #0
 800d1bc:	d0d5      	beq.n	800d16a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d1be:	6823      	ldr	r3, [r4, #0]
 800d1c0:	689a      	ldr	r2, [r3, #8]
 800d1c2:	07d2      	lsls	r2, r2, #31
 800d1c4:	d4ee      	bmi.n	800d1a4 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d1c6:	f7fc ff31 	bl	800a02c <HAL_GetTick>
 800d1ca:	1b80      	subs	r0, r0, r6
 800d1cc:	42a8      	cmp	r0, r5
 800d1ce:	d243      	bcs.n	800d258 <HAL_SPI_Receive+0x1c8>
 800d1d0:	e7f1      	b.n	800d1b6 <HAL_SPI_Receive+0x126>
 800d1d2:	f7fc ff2b 	bl	800a02c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d1d6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d1d8:	b29b      	uxth	r3, r3
 800d1da:	2b00      	cmp	r3, #0
 800d1dc:	d0c5      	beq.n	800d16a <HAL_SPI_Receive+0xda>
 800d1de:	6822      	ldr	r2, [r4, #0]
 800d1e0:	e7af      	b.n	800d142 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800d1e2:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800d1e4:	b292      	uxth	r2, r2
 800d1e6:	2a00      	cmp	r2, #0
 800d1e8:	d0bf      	beq.n	800d16a <HAL_SPI_Receive+0xda>
 800d1ea:	1c6f      	adds	r7, r5, #1
 800d1ec:	d013      	beq.n	800d216 <HAL_SPI_Receive+0x186>
 800d1ee:	e02b      	b.n	800d248 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d1f0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d1f2:	7b1b      	ldrb	r3, [r3, #12]
 800d1f4:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d1f6:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d1fa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d1fc:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d200:	fa1f fc8c 	uxth.w	ip, ip
 800d204:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d208:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d20a:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800d20c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d20e:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800d210:	2b00      	cmp	r3, #0
 800d212:	d0aa      	beq.n	800d16a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d214:	6823      	ldr	r3, [r4, #0]
 800d216:	689a      	ldr	r2, [r3, #8]
 800d218:	07d0      	lsls	r0, r2, #31
 800d21a:	d4e9      	bmi.n	800d1f0 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d21c:	f7fc ff06 	bl	800a02c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d220:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d222:	b29b      	uxth	r3, r3
 800d224:	2b00      	cmp	r3, #0
 800d226:	d1f5      	bne.n	800d214 <HAL_SPI_Receive+0x184>
 800d228:	e79f      	b.n	800d16a <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d22a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d22c:	7b1b      	ldrb	r3, [r3, #12]
 800d22e:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d230:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d232:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d234:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d236:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800d238:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d23a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d23c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d23e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d240:	b29b      	uxth	r3, r3
 800d242:	2b00      	cmp	r3, #0
 800d244:	d091      	beq.n	800d16a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d246:	6823      	ldr	r3, [r4, #0]
 800d248:	689a      	ldr	r2, [r3, #8]
 800d24a:	07d1      	lsls	r1, r2, #31
 800d24c:	d4ed      	bmi.n	800d22a <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d24e:	f7fc feed 	bl	800a02c <HAL_GetTick>
 800d252:	1b80      	subs	r0, r0, r6
 800d254:	42a8      	cmp	r0, r5
 800d256:	d3f2      	bcc.n	800d23e <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800d258:	2003      	movs	r0, #3
 800d25a:	e736      	b.n	800d0ca <HAL_SPI_Receive+0x3a>

0800d25c <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800d25c:	2800      	cmp	r0, #0
 800d25e:	f000 8087 	beq.w	800d370 <HAL_TIM_Base_Init+0x114>
{
 800d262:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800d264:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d268:	4604      	mov	r4, r0
 800d26a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d26e:	2b00      	cmp	r3, #0
 800d270:	d079      	beq.n	800d366 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d272:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d274:	493f      	ldr	r1, [pc, #252]	; (800d374 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d276:	2302      	movs	r3, #2
 800d278:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d27c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d27e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d280:	d05d      	beq.n	800d33e <HAL_TIM_Base_Init+0xe2>
 800d282:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d286:	d031      	beq.n	800d2ec <HAL_TIM_Base_Init+0x90>
 800d288:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d28c:	428a      	cmp	r2, r1
 800d28e:	d02d      	beq.n	800d2ec <HAL_TIM_Base_Init+0x90>
 800d290:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d294:	428a      	cmp	r2, r1
 800d296:	d029      	beq.n	800d2ec <HAL_TIM_Base_Init+0x90>
 800d298:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d29c:	428a      	cmp	r2, r1
 800d29e:	d025      	beq.n	800d2ec <HAL_TIM_Base_Init+0x90>
 800d2a0:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d2a4:	428a      	cmp	r2, r1
 800d2a6:	d04a      	beq.n	800d33e <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d2a8:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d2ac:	428a      	cmp	r2, r1
 800d2ae:	d021      	beq.n	800d2f4 <HAL_TIM_Base_Init+0x98>
 800d2b0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d2b4:	428a      	cmp	r2, r1
 800d2b6:	d01d      	beq.n	800d2f4 <HAL_TIM_Base_Init+0x98>
 800d2b8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d2bc:	428a      	cmp	r2, r1
 800d2be:	d019      	beq.n	800d2f4 <HAL_TIM_Base_Init+0x98>
 800d2c0:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d2c4:	428a      	cmp	r2, r1
 800d2c6:	d015      	beq.n	800d2f4 <HAL_TIM_Base_Init+0x98>
 800d2c8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d2cc:	428a      	cmp	r2, r1
 800d2ce:	d011      	beq.n	800d2f4 <HAL_TIM_Base_Init+0x98>
 800d2d0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d2d4:	428a      	cmp	r2, r1
 800d2d6:	d00d      	beq.n	800d2f4 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d2d8:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d2da:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d2dc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d2e0:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d2e2:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d2e4:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d2e6:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d2e8:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d2ea:	e010      	b.n	800d30e <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d2ec:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d2ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d2f2:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d2f4:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d2f6:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d2f8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d2fc:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d2fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d302:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d304:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d306:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d308:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d30a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d30c:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d30e:	2301      	movs	r3, #1
 800d310:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d312:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d316:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d31a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d31e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d322:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d326:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d32a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d32e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d332:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d336:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d33a:	2000      	movs	r0, #0
}
 800d33c:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d33e:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d340:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d342:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d346:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d348:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d34c:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d34e:	69a1      	ldr	r1, [r4, #24]
 800d350:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d354:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d356:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d358:	68e3      	ldr	r3, [r4, #12]
 800d35a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d35c:	6863      	ldr	r3, [r4, #4]
 800d35e:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d360:	6963      	ldr	r3, [r4, #20]
 800d362:	6313      	str	r3, [r2, #48]	; 0x30
 800d364:	e7d3      	b.n	800d30e <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d366:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d36a:	f7f4 fe35 	bl	8001fd8 <HAL_TIM_Base_MspInit>
 800d36e:	e780      	b.n	800d272 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d370:	2001      	movs	r0, #1
}
 800d372:	4770      	bx	lr
 800d374:	40010000 	.word	0x40010000

0800d378 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d378:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d37c:	2b01      	cmp	r3, #1
 800d37e:	d12f      	bne.n	800d3e0 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d380:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d382:	4919      	ldr	r1, [pc, #100]	; (800d3e8 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d384:	2202      	movs	r2, #2
 800d386:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d38a:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d38c:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d38e:	f042 0201 	orr.w	r2, r2, #1
 800d392:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d394:	d019      	beq.n	800d3ca <HAL_TIM_Base_Start_IT+0x52>
 800d396:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d39a:	d016      	beq.n	800d3ca <HAL_TIM_Base_Start_IT+0x52>
 800d39c:	4a13      	ldr	r2, [pc, #76]	; (800d3ec <HAL_TIM_Base_Start_IT+0x74>)
 800d39e:	4293      	cmp	r3, r2
 800d3a0:	d013      	beq.n	800d3ca <HAL_TIM_Base_Start_IT+0x52>
 800d3a2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d3a6:	4293      	cmp	r3, r2
 800d3a8:	d00f      	beq.n	800d3ca <HAL_TIM_Base_Start_IT+0x52>
 800d3aa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d3ae:	4293      	cmp	r3, r2
 800d3b0:	d00b      	beq.n	800d3ca <HAL_TIM_Base_Start_IT+0x52>
 800d3b2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d3b6:	4293      	cmp	r3, r2
 800d3b8:	d007      	beq.n	800d3ca <HAL_TIM_Base_Start_IT+0x52>
 800d3ba:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d3be:	4293      	cmp	r3, r2
 800d3c0:	d003      	beq.n	800d3ca <HAL_TIM_Base_Start_IT+0x52>
 800d3c2:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d3c6:	4293      	cmp	r3, r2
 800d3c8:	d104      	bne.n	800d3d4 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d3ca:	689a      	ldr	r2, [r3, #8]
 800d3cc:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d3d0:	2a06      	cmp	r2, #6
 800d3d2:	d007      	beq.n	800d3e4 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d3d4:	681a      	ldr	r2, [r3, #0]
 800d3d6:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d3da:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d3dc:	601a      	str	r2, [r3, #0]
 800d3de:	4770      	bx	lr
    return HAL_ERROR;
 800d3e0:	2001      	movs	r0, #1
 800d3e2:	4770      	bx	lr
  return HAL_OK;
 800d3e4:	2000      	movs	r0, #0
}
 800d3e6:	4770      	bx	lr
 800d3e8:	40010000 	.word	0x40010000
 800d3ec:	40000400 	.word	0x40000400

0800d3f0 <HAL_TIM_OC_DelayElapsedCallback>:
 800d3f0:	4770      	bx	lr
 800d3f2:	bf00      	nop

0800d3f4 <HAL_TIM_IC_CaptureCallback>:
 800d3f4:	4770      	bx	lr
 800d3f6:	bf00      	nop

0800d3f8 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d3f8:	4770      	bx	lr
 800d3fa:	bf00      	nop

0800d3fc <HAL_TIM_TriggerCallback>:
 800d3fc:	4770      	bx	lr
 800d3fe:	bf00      	nop

0800d400 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d400:	6803      	ldr	r3, [r0, #0]
 800d402:	691a      	ldr	r2, [r3, #16]
 800d404:	0791      	lsls	r1, r2, #30
{
 800d406:	b510      	push	{r4, lr}
 800d408:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d40a:	d502      	bpl.n	800d412 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d40c:	68da      	ldr	r2, [r3, #12]
 800d40e:	0792      	lsls	r2, r2, #30
 800d410:	d45f      	bmi.n	800d4d2 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d412:	691a      	ldr	r2, [r3, #16]
 800d414:	0750      	lsls	r0, r2, #29
 800d416:	d502      	bpl.n	800d41e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d418:	68da      	ldr	r2, [r3, #12]
 800d41a:	0751      	lsls	r1, r2, #29
 800d41c:	d446      	bmi.n	800d4ac <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d41e:	691a      	ldr	r2, [r3, #16]
 800d420:	0712      	lsls	r2, r2, #28
 800d422:	d502      	bpl.n	800d42a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d424:	68da      	ldr	r2, [r3, #12]
 800d426:	0710      	lsls	r0, r2, #28
 800d428:	d42e      	bmi.n	800d488 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d42a:	691a      	ldr	r2, [r3, #16]
 800d42c:	06d2      	lsls	r2, r2, #27
 800d42e:	d502      	bpl.n	800d436 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d430:	68da      	ldr	r2, [r3, #12]
 800d432:	06d0      	lsls	r0, r2, #27
 800d434:	d418      	bmi.n	800d468 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d436:	691a      	ldr	r2, [r3, #16]
 800d438:	07d1      	lsls	r1, r2, #31
 800d43a:	d502      	bpl.n	800d442 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d43c:	68da      	ldr	r2, [r3, #12]
 800d43e:	07d2      	lsls	r2, r2, #31
 800d440:	d45d      	bmi.n	800d4fe <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d442:	691a      	ldr	r2, [r3, #16]
 800d444:	0610      	lsls	r0, r2, #24
 800d446:	d502      	bpl.n	800d44e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d448:	68da      	ldr	r2, [r3, #12]
 800d44a:	0611      	lsls	r1, r2, #24
 800d44c:	d45f      	bmi.n	800d50e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d44e:	691a      	ldr	r2, [r3, #16]
 800d450:	0652      	lsls	r2, r2, #25
 800d452:	d502      	bpl.n	800d45a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d454:	68da      	ldr	r2, [r3, #12]
 800d456:	0650      	lsls	r0, r2, #25
 800d458:	d461      	bmi.n	800d51e <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d45a:	691a      	ldr	r2, [r3, #16]
 800d45c:	0691      	lsls	r1, r2, #26
 800d45e:	d502      	bpl.n	800d466 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d460:	68da      	ldr	r2, [r3, #12]
 800d462:	0692      	lsls	r2, r2, #26
 800d464:	d443      	bmi.n	800d4ee <HAL_TIM_IRQHandler+0xee>
}
 800d466:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d468:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d46c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d46e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d470:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d472:	69db      	ldr	r3, [r3, #28]
 800d474:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d478:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d47a:	d064      	beq.n	800d546 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d47c:	f7ff ffba 	bl	800d3f4 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d480:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d482:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d484:	7722      	strb	r2, [r4, #28]
 800d486:	e7d6      	b.n	800d436 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d488:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d48c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d48e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d490:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d492:	69db      	ldr	r3, [r3, #28]
 800d494:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d496:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d498:	d152      	bne.n	800d540 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d49a:	f7ff ffa9 	bl	800d3f0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d49e:	4620      	mov	r0, r4
 800d4a0:	f7ff ffaa 	bl	800d3f8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d4a4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d4a6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d4a8:	7722      	strb	r2, [r4, #28]
 800d4aa:	e7be      	b.n	800d42a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d4ac:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d4b0:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d4b2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d4b4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d4b6:	699b      	ldr	r3, [r3, #24]
 800d4b8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d4bc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d4be:	d13c      	bne.n	800d53a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d4c0:	f7ff ff96 	bl	800d3f0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d4c4:	4620      	mov	r0, r4
 800d4c6:	f7ff ff97 	bl	800d3f8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d4ca:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d4cc:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d4ce:	7722      	strb	r2, [r4, #28]
 800d4d0:	e7a5      	b.n	800d41e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d4d2:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d4d6:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d4d8:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d4da:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d4dc:	699b      	ldr	r3, [r3, #24]
 800d4de:	079b      	lsls	r3, r3, #30
 800d4e0:	d025      	beq.n	800d52e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d4e2:	f7ff ff87 	bl	800d3f4 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d4e6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d4e8:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d4ea:	7722      	strb	r2, [r4, #28]
 800d4ec:	e791      	b.n	800d412 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d4ee:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d4f2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d4f4:	611a      	str	r2, [r3, #16]
}
 800d4f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d4fa:	f000 b82b 	b.w	800d554 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d4fe:	f06f 0201 	mvn.w	r2, #1
 800d502:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d504:	4620      	mov	r0, r4
 800d506:	f7f4 fa49 	bl	800199c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d50a:	6823      	ldr	r3, [r4, #0]
 800d50c:	e799      	b.n	800d442 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d50e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d512:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d514:	4620      	mov	r0, r4
 800d516:	f000 f81f 	bl	800d558 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d51a:	6823      	ldr	r3, [r4, #0]
 800d51c:	e797      	b.n	800d44e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d51e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d522:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d524:	4620      	mov	r0, r4
 800d526:	f7ff ff69 	bl	800d3fc <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d52a:	6823      	ldr	r3, [r4, #0]
 800d52c:	e795      	b.n	800d45a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d52e:	f7ff ff5f 	bl	800d3f0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d532:	4620      	mov	r0, r4
 800d534:	f7ff ff60 	bl	800d3f8 <HAL_TIM_PWM_PulseFinishedCallback>
 800d538:	e7d5      	b.n	800d4e6 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d53a:	f7ff ff5b 	bl	800d3f4 <HAL_TIM_IC_CaptureCallback>
 800d53e:	e7c4      	b.n	800d4ca <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d540:	f7ff ff58 	bl	800d3f4 <HAL_TIM_IC_CaptureCallback>
 800d544:	e7ae      	b.n	800d4a4 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d546:	f7ff ff53 	bl	800d3f0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d54a:	4620      	mov	r0, r4
 800d54c:	f7ff ff54 	bl	800d3f8 <HAL_TIM_PWM_PulseFinishedCallback>
 800d550:	e796      	b.n	800d480 <HAL_TIM_IRQHandler+0x80>
 800d552:	bf00      	nop

0800d554 <HAL_TIMEx_CommutCallback>:
 800d554:	4770      	bx	lr
 800d556:	bf00      	nop

0800d558 <HAL_TIMEx_BreakCallback>:
 800d558:	4770      	bx	lr
 800d55a:	bf00      	nop

0800d55c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d55c:	680b      	ldr	r3, [r1, #0]
{
 800d55e:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d560:	b9d3      	cbnz	r3, 800d598 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d562:	6803      	ldr	r3, [r0, #0]
 800d564:	684c      	ldr	r4, [r1, #4]
 800d566:	688a      	ldr	r2, [r1, #8]
 800d568:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d56c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d570:	4323      	orrs	r3, r4
 800d572:	4313      	orrs	r3, r2
 800d574:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d578:	4323      	orrs	r3, r4
 800d57a:	4313      	orrs	r3, r2
 800d57c:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d580:	4323      	orrs	r3, r4
 800d582:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d586:	4313      	orrs	r3, r2
 800d588:	432b      	orrs	r3, r5
 800d58a:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d58c:	4323      	orrs	r3, r4
 800d58e:	4313      	orrs	r3, r2
 800d590:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d592:	bc30      	pop	{r4, r5}
 800d594:	2000      	movs	r0, #0
 800d596:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d598:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d59c:	6803      	ldr	r3, [r0, #0]
 800d59e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d5a2:	4323      	orrs	r3, r4
 800d5a4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d5a6:	4313      	orrs	r3, r2
 800d5a8:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d5aa:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d5ac:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d5ae:	6843      	ldr	r3, [r0, #4]
 800d5b0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d5b4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d5b8:	4313      	orrs	r3, r2
 800d5ba:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d5be:	4323      	orrs	r3, r4
 800d5c0:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d5c4:	4313      	orrs	r3, r2
 800d5c6:	432b      	orrs	r3, r5
 800d5c8:	698a      	ldr	r2, [r1, #24]
 800d5ca:	4323      	orrs	r3, r4
 800d5cc:	4313      	orrs	r3, r2
 800d5ce:	6043      	str	r3, [r0, #4]
}
 800d5d0:	bc30      	pop	{r4, r5}
 800d5d2:	2000      	movs	r0, #0
 800d5d4:	4770      	bx	lr
 800d5d6:	bf00      	nop

0800d5d8 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d5d8:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d5da:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d5dc:	bb02      	cbnz	r2, 800d620 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d5de:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d5e2:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d5e6:	3c01      	subs	r4, #1
 800d5e8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d5ec:	3a01      	subs	r2, #1
 800d5ee:	4313      	orrs	r3, r2
 800d5f0:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d5f4:	3c01      	subs	r4, #1
 800d5f6:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d5fa:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d5fe:	3a01      	subs	r2, #1
 800d600:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d604:	698a      	ldr	r2, [r1, #24]
 800d606:	1e69      	subs	r1, r5, #1
 800d608:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d60c:	1e61      	subs	r1, r4, #1
 800d60e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d612:	3a01      	subs	r2, #1
 800d614:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d618:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d61a:	bc30      	pop	{r4, r5}
 800d61c:	2000      	movs	r0, #0
 800d61e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d620:	68cc      	ldr	r4, [r1, #12]
 800d622:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d624:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d626:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d62a:	3c01      	subs	r4, #1
 800d62c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d630:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d634:	3a01      	subs	r2, #1
 800d636:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d63a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d63c:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d640:	68c3      	ldr	r3, [r0, #12]
 800d642:	3c01      	subs	r4, #1
 800d644:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d648:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d64c:	3a01      	subs	r2, #1
 800d64e:	690c      	ldr	r4, [r1, #16]
 800d650:	4313      	orrs	r3, r2
 800d652:	698a      	ldr	r2, [r1, #24]
 800d654:	1e69      	subs	r1, r5, #1
 800d656:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d65a:	1e61      	subs	r1, r4, #1
 800d65c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d660:	3a01      	subs	r2, #1
 800d662:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d666:	60c3      	str	r3, [r0, #12]
}
 800d668:	bc30      	pop	{r4, r5}
 800d66a:	2000      	movs	r0, #0
 800d66c:	4770      	bx	lr
 800d66e:	bf00      	nop

0800d670 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d670:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d672:	680b      	ldr	r3, [r1, #0]
{
 800d674:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d676:	684a      	ldr	r2, [r1, #4]
{
 800d678:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d67a:	4313      	orrs	r3, r2
 800d67c:	6900      	ldr	r0, [r0, #16]
 800d67e:	68ca      	ldr	r2, [r1, #12]
 800d680:	0d80      	lsrs	r0, r0, #22
 800d682:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d686:	688a      	ldr	r2, [r1, #8]
 800d688:	0580      	lsls	r0, r0, #22
 800d68a:	4303      	orrs	r3, r0
 800d68c:	3a01      	subs	r2, #1
 800d68e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d692:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d694:	f7fc fcca 	bl	800a02c <HAL_GetTick>
 800d698:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d69a:	1c6b      	adds	r3, r5, #1
 800d69c:	d105      	bne.n	800d6aa <FMC_SDRAM_SendCommand+0x3a>
 800d69e:	69a3      	ldr	r3, [r4, #24]
 800d6a0:	f013 0320 	ands.w	r3, r3, #32
 800d6a4:	d1fb      	bne.n	800d69e <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d6a6:	4618      	mov	r0, r3
}
 800d6a8:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d6aa:	69a3      	ldr	r3, [r4, #24]
 800d6ac:	f013 0320 	ands.w	r3, r3, #32
 800d6b0:	d0f9      	beq.n	800d6a6 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d6b2:	b125      	cbz	r5, 800d6be <FMC_SDRAM_SendCommand+0x4e>
 800d6b4:	f7fc fcba 	bl	800a02c <HAL_GetTick>
 800d6b8:	1b80      	subs	r0, r0, r6
 800d6ba:	42a8      	cmp	r0, r5
 800d6bc:	d9ed      	bls.n	800d69a <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d6be:	2003      	movs	r0, #3
}
 800d6c0:	bd70      	pop	{r4, r5, r6, pc}
 800d6c2:	bf00      	nop

0800d6c4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d6c4:	6943      	ldr	r3, [r0, #20]
 800d6c6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d6ca:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d6cc:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d6d0:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d6d4:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d6d6:	6151      	str	r1, [r2, #20]
}
 800d6d8:	4770      	bx	lr
 800d6da:	bf00      	nop

0800d6dc <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d6dc:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d6de:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d6e2:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d6e4:	f002 fafe 	bl	800fce4 <xTaskGetSchedulerState>
 800d6e8:	2801      	cmp	r0, #1
 800d6ea:	d100      	bne.n	800d6ee <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d6ec:	bd08      	pop	{r3, pc}
 800d6ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d6f2:	f000 bc3f 	b.w	800df74 <xPortSysTickHandler>
 800d6f6:	bf00      	nop

0800d6f8 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d6f8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d6fc:	b92b      	cbnz	r3, 800d70a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d6fe:	4b06      	ldr	r3, [pc, #24]	; (800d718 <osKernelInitialize+0x20>)
 800d700:	6818      	ldr	r0, [r3, #0]
 800d702:	b928      	cbnz	r0, 800d710 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d704:	2201      	movs	r2, #1
 800d706:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d708:	4770      	bx	lr
    stat = osErrorISR;
 800d70a:	f06f 0005 	mvn.w	r0, #5
 800d70e:	4770      	bx	lr
    } else {
      stat = osError;
 800d710:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d714:	4770      	bx	lr
 800d716:	bf00      	nop
 800d718:	20002258 	.word	0x20002258

0800d71c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d71c:	b510      	push	{r4, lr}
 800d71e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d722:	b974      	cbnz	r4, 800d742 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d724:	4b08      	ldr	r3, [pc, #32]	; (800d748 <osKernelStart+0x2c>)
 800d726:	681a      	ldr	r2, [r3, #0]
 800d728:	2a01      	cmp	r2, #1
 800d72a:	d107      	bne.n	800d73c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d72c:	4907      	ldr	r1, [pc, #28]	; (800d74c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d72e:	2202      	movs	r2, #2
 800d730:	77cc      	strb	r4, [r1, #31]
 800d732:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d734:	f002 f8b0 	bl	800f898 <vTaskStartScheduler>
      stat = osOK;
 800d738:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d73a:	bd10      	pop	{r4, pc}
      stat = osError;
 800d73c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d740:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d742:	f06f 0005 	mvn.w	r0, #5
}
 800d746:	bd10      	pop	{r4, pc}
 800d748:	20002258 	.word	0x20002258
 800d74c:	e000ed00 	.word	0xe000ed00

0800d750 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d750:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d752:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d754:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d756:	4615      	mov	r5, r2
  hTask = NULL;
 800d758:	9405      	str	r4, [sp, #20]
 800d75a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d75e:	b9ea      	cbnz	r2, 800d79c <osThreadNew+0x4c>
 800d760:	b350      	cbz	r0, 800d7b8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d762:	b1f5      	cbz	r5, 800d7a2 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d764:	69ab      	ldr	r3, [r5, #24]
 800d766:	bb5b      	cbnz	r3, 800d7c0 <osThreadNew+0x70>
 800d768:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d76a:	686a      	ldr	r2, [r5, #4]
 800d76c:	07d2      	lsls	r2, r2, #31
 800d76e:	d423      	bmi.n	800d7b8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d770:	696e      	ldr	r6, [r5, #20]
 800d772:	b34e      	cbz	r6, 800d7c8 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d774:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d778:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d77a:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d77c:	b34c      	cbz	r4, 800d7d2 <osThreadNew+0x82>
 800d77e:	68ea      	ldr	r2, [r5, #12]
 800d780:	2aab      	cmp	r2, #171	; 0xab
 800d782:	d919      	bls.n	800d7b8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d784:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d786:	b1bd      	cbz	r5, 800d7b8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d788:	b1b6      	cbz	r6, 800d7b8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d78a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d78e:	9300      	str	r3, [sp, #0]
 800d790:	4662      	mov	r2, ip
 800d792:	460b      	mov	r3, r1
 800d794:	4639      	mov	r1, r7
 800d796:	f001 ffbd 	bl	800f714 <xTaskCreateStatic>
 800d79a:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d79c:	4620      	mov	r0, r4
 800d79e:	b007      	add	sp, #28
 800d7a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d7a2:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d7a4:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d7a6:	ac05      	add	r4, sp, #20
 800d7a8:	9300      	str	r3, [sp, #0]
 800d7aa:	9401      	str	r4, [sp, #4]
 800d7ac:	460b      	mov	r3, r1
 800d7ae:	4629      	mov	r1, r5
 800d7b0:	f001 ffea 	bl	800f788 <xTaskCreate>
 800d7b4:	2801      	cmp	r0, #1
 800d7b6:	d00a      	beq.n	800d7ce <osThreadNew+0x7e>
        return (NULL);
 800d7b8:	2400      	movs	r4, #0
}
 800d7ba:	4620      	mov	r0, r4
 800d7bc:	b007      	add	sp, #28
 800d7be:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d7c0:	1e5c      	subs	r4, r3, #1
 800d7c2:	2c37      	cmp	r4, #55	; 0x37
 800d7c4:	d9d1      	bls.n	800d76a <osThreadNew+0x1a>
 800d7c6:	e7f7      	b.n	800d7b8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d7c8:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d7cc:	e7d4      	b.n	800d778 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d7ce:	9c05      	ldr	r4, [sp, #20]
 800d7d0:	e7e4      	b.n	800d79c <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d7d2:	68ee      	ldr	r6, [r5, #12]
 800d7d4:	2e00      	cmp	r6, #0
 800d7d6:	d1e1      	bne.n	800d79c <osThreadNew+0x4c>
 800d7d8:	692d      	ldr	r5, [r5, #16]
 800d7da:	2d00      	cmp	r5, #0
 800d7dc:	d1de      	bne.n	800d79c <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d7de:	fa1f f28c 	uxth.w	r2, ip
 800d7e2:	463d      	mov	r5, r7
 800d7e4:	e7df      	b.n	800d7a6 <osThreadNew+0x56>
 800d7e6:	bf00      	nop

0800d7e8 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d7e8:	b510      	push	{r4, lr}
 800d7ea:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d7ee:	b92c      	cbnz	r4, 800d7fc <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d7f0:	b900      	cbnz	r0, 800d7f4 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d7f2:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d7f4:	f001 fffa 	bl	800f7ec <vTaskDelay>
    stat = osOK;
 800d7f8:	4620      	mov	r0, r4
}
 800d7fa:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d7fc:	f06f 0005 	mvn.w	r0, #5
}
 800d800:	bd10      	pop	{r4, pc}
 800d802:	bf00      	nop

0800d804 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d804:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d806:	b083      	sub	sp, #12
 800d808:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d80c:	b9fe      	cbnz	r6, 800d84e <osSemaphoreNew+0x4a>
 800d80e:	b1f0      	cbz	r0, 800d84e <osSemaphoreNew+0x4a>
 800d810:	4288      	cmp	r0, r1
 800d812:	460f      	mov	r7, r1
 800d814:	d31b      	bcc.n	800d84e <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d816:	4615      	mov	r5, r2
 800d818:	b192      	cbz	r2, 800d840 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d81a:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d81e:	b1d2      	cbz	r2, 800d856 <osSemaphoreNew+0x52>
 800d820:	2b4f      	cmp	r3, #79	; 0x4f
 800d822:	d914      	bls.n	800d84e <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d824:	2801      	cmp	r0, #1
 800d826:	d038      	beq.n	800d89a <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d828:	f000 fd8a 	bl	800e340 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d82c:	4604      	mov	r4, r0
 800d82e:	b170      	cbz	r0, 800d84e <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d830:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d832:	4620      	mov	r0, r4
 800d834:	4629      	mov	r1, r5
 800d836:	f001 fc35 	bl	800f0a4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d83a:	4620      	mov	r0, r4
 800d83c:	b003      	add	sp, #12
 800d83e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d840:	2801      	cmp	r0, #1
 800d842:	d012      	beq.n	800d86a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d844:	f000 fddc 	bl	800e400 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d848:	4604      	mov	r4, r0
 800d84a:	2800      	cmp	r0, #0
 800d84c:	d1f1      	bne.n	800d832 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d84e:	2400      	movs	r4, #0
}
 800d850:	4620      	mov	r0, r4
 800d852:	b003      	add	sp, #12
 800d854:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d856:	2b00      	cmp	r3, #0
 800d858:	d1f9      	bne.n	800d84e <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d85a:	2801      	cmp	r0, #1
 800d85c:	d005      	beq.n	800d86a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d85e:	f000 fdcf 	bl	800e400 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d862:	4604      	mov	r4, r0
 800d864:	2800      	cmp	r0, #0
 800d866:	d1e3      	bne.n	800d830 <osSemaphoreNew+0x2c>
 800d868:	e7f1      	b.n	800d84e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d86a:	2203      	movs	r2, #3
 800d86c:	2100      	movs	r1, #0
 800d86e:	2001      	movs	r0, #1
 800d870:	f000 fd24 	bl	800e2bc <xQueueGenericCreate>
 800d874:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d876:	2c00      	cmp	r4, #0
 800d878:	d0e9      	beq.n	800d84e <osSemaphoreNew+0x4a>
 800d87a:	b917      	cbnz	r7, 800d882 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d87c:	2d00      	cmp	r5, #0
 800d87e:	d1d7      	bne.n	800d830 <osSemaphoreNew+0x2c>
 800d880:	e7d7      	b.n	800d832 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d882:	2300      	movs	r3, #0
 800d884:	461a      	mov	r2, r3
 800d886:	4619      	mov	r1, r3
 800d888:	4620      	mov	r0, r4
 800d88a:	f000 fdff 	bl	800e48c <xQueueGenericSend>
 800d88e:	2801      	cmp	r0, #1
 800d890:	d0f4      	beq.n	800d87c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d892:	4620      	mov	r0, r4
 800d894:	f001 fbc0 	bl	800f018 <vQueueDelete>
 800d898:	e7d9      	b.n	800d84e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d89a:	4613      	mov	r3, r2
 800d89c:	2203      	movs	r2, #3
 800d89e:	9200      	str	r2, [sp, #0]
 800d8a0:	4631      	mov	r1, r6
 800d8a2:	4632      	mov	r2, r6
 800d8a4:	f000 fc9c 	bl	800e1e0 <xQueueGenericCreateStatic>
 800d8a8:	4604      	mov	r4, r0
 800d8aa:	e7e4      	b.n	800d876 <osSemaphoreNew+0x72>

0800d8ac <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d8ac:	b370      	cbz	r0, 800d90c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d8ae:	b510      	push	{r4, lr}
 800d8b0:	460c      	mov	r4, r1
 800d8b2:	b082      	sub	sp, #8
 800d8b4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d8b8:	b1c3      	cbz	r3, 800d8ec <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d8ba:	bb21      	cbnz	r1, 800d906 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d8bc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d8be:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d8c0:	f001 fb28 	bl	800ef14 <xQueueReceiveFromISR>
 800d8c4:	2801      	cmp	r0, #1
 800d8c6:	d11a      	bne.n	800d8fe <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d8c8:	9b01      	ldr	r3, [sp, #4]
 800d8ca:	b913      	cbnz	r3, 800d8d2 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d8cc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d8ce:	b002      	add	sp, #8
 800d8d0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d8d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d8d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d8da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d8de:	f3bf 8f4f 	dsb	sy
 800d8e2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d8e6:	4620      	mov	r0, r4
}
 800d8e8:	b002      	add	sp, #8
 800d8ea:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d8ec:	f001 f988 	bl	800ec00 <xQueueSemaphoreTake>
 800d8f0:	2801      	cmp	r0, #1
 800d8f2:	d0eb      	beq.n	800d8cc <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d8f4:	b11c      	cbz	r4, 800d8fe <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d8f6:	f06f 0001 	mvn.w	r0, #1
}
 800d8fa:	b002      	add	sp, #8
 800d8fc:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d8fe:	f06f 0002 	mvn.w	r0, #2
}
 800d902:	b002      	add	sp, #8
 800d904:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d906:	f06f 0003 	mvn.w	r0, #3
 800d90a:	e7e0      	b.n	800d8ce <osSemaphoreAcquire+0x22>
 800d90c:	f06f 0003 	mvn.w	r0, #3
}
 800d910:	4770      	bx	lr
 800d912:	bf00      	nop

0800d914 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d914:	b330      	cbz	r0, 800d964 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d916:	b510      	push	{r4, lr}
 800d918:	b082      	sub	sp, #8
 800d91a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d91e:	b1ab      	cbz	r3, 800d94c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d920:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d922:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d924:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d926:	f000 ff95 	bl	800e854 <xQueueGiveFromISR>
 800d92a:	2801      	cmp	r0, #1
 800d92c:	d117      	bne.n	800d95e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d92e:	9b01      	ldr	r3, [sp, #4]
 800d930:	b193      	cbz	r3, 800d958 <osSemaphoreRelease+0x44>
 800d932:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d936:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d93a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d93e:	f3bf 8f4f 	dsb	sy
 800d942:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d946:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d948:	b002      	add	sp, #8
 800d94a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d94c:	461a      	mov	r2, r3
 800d94e:	4619      	mov	r1, r3
 800d950:	f000 fd9c 	bl	800e48c <xQueueGenericSend>
 800d954:	2801      	cmp	r0, #1
 800d956:	d102      	bne.n	800d95e <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d958:	2000      	movs	r0, #0
}
 800d95a:	b002      	add	sp, #8
 800d95c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d95e:	f06f 0002 	mvn.w	r0, #2
 800d962:	e7fa      	b.n	800d95a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d964:	f06f 0003 	mvn.w	r0, #3
}
 800d968:	4770      	bx	lr
 800d96a:	bf00      	nop

0800d96c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d96c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d96e:	b085      	sub	sp, #20
 800d970:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d974:	b987      	cbnz	r7, 800d998 <osMessageQueueNew+0x2c>
 800d976:	4605      	mov	r5, r0
 800d978:	b170      	cbz	r0, 800d998 <osMessageQueueNew+0x2c>
 800d97a:	b169      	cbz	r1, 800d998 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d97c:	4614      	mov	r4, r2
 800d97e:	b1ea      	cbz	r2, 800d9bc <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d980:	6893      	ldr	r3, [r2, #8]
 800d982:	b163      	cbz	r3, 800d99e <osMessageQueueNew+0x32>
 800d984:	68d2      	ldr	r2, [r2, #12]
 800d986:	2a4f      	cmp	r2, #79	; 0x4f
 800d988:	d906      	bls.n	800d998 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d98a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d98c:	b122      	cbz	r2, 800d998 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d98e:	6966      	ldr	r6, [r4, #20]
 800d990:	fb01 f505 	mul.w	r5, r1, r5
 800d994:	42ae      	cmp	r6, r5
 800d996:	d21c      	bcs.n	800d9d2 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d998:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d99a:	b005      	add	sp, #20
 800d99c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d99e:	68d3      	ldr	r3, [r2, #12]
 800d9a0:	2b00      	cmp	r3, #0
 800d9a2:	d1f9      	bne.n	800d998 <osMessageQueueNew+0x2c>
 800d9a4:	6913      	ldr	r3, [r2, #16]
 800d9a6:	2b00      	cmp	r3, #0
 800d9a8:	d1f6      	bne.n	800d998 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d9aa:	6952      	ldr	r2, [r2, #20]
 800d9ac:	2a00      	cmp	r2, #0
 800d9ae:	d1f3      	bne.n	800d998 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d9b0:	f000 fc84 	bl	800e2bc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d9b4:	2800      	cmp	r0, #0
 800d9b6:	d0ef      	beq.n	800d998 <osMessageQueueNew+0x2c>
        name = attr->name;
 800d9b8:	6824      	ldr	r4, [r4, #0]
 800d9ba:	e003      	b.n	800d9c4 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d9bc:	f000 fc7e 	bl	800e2bc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d9c0:	2800      	cmp	r0, #0
 800d9c2:	d0e9      	beq.n	800d998 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d9c4:	4621      	mov	r1, r4
 800d9c6:	9003      	str	r0, [sp, #12]
 800d9c8:	f001 fb6c 	bl	800f0a4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d9cc:	9803      	ldr	r0, [sp, #12]
}
 800d9ce:	b005      	add	sp, #20
 800d9d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d9d2:	9700      	str	r7, [sp, #0]
 800d9d4:	f000 fc04 	bl	800e1e0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d9d8:	2800      	cmp	r0, #0
 800d9da:	d1ed      	bne.n	800d9b8 <osMessageQueueNew+0x4c>
 800d9dc:	e7dc      	b.n	800d998 <osMessageQueueNew+0x2c>
 800d9de:	bf00      	nop

0800d9e0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d9e0:	b570      	push	{r4, r5, r6, lr}
 800d9e2:	461c      	mov	r4, r3
 800d9e4:	b082      	sub	sp, #8
 800d9e6:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d9ea:	b1be      	cbz	r6, 800da1c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d9ec:	b350      	cbz	r0, 800da44 <osMessageQueuePut+0x64>
 800d9ee:	b349      	cbz	r1, 800da44 <osMessageQueuePut+0x64>
 800d9f0:	bb43      	cbnz	r3, 800da44 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d9f2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d9f4:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d9f6:	f000 fec7 	bl	800e788 <xQueueGenericSendFromISR>
 800d9fa:	2801      	cmp	r0, #1
 800d9fc:	d11e      	bne.n	800da3c <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d9fe:	9b01      	ldr	r3, [sp, #4]
 800da00:	b1cb      	cbz	r3, 800da36 <osMessageQueuePut+0x56>
 800da02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da0e:	f3bf 8f4f 	dsb	sy
 800da12:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800da16:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800da18:	b002      	add	sp, #8
 800da1a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800da1c:	b190      	cbz	r0, 800da44 <osMessageQueuePut+0x64>
 800da1e:	b189      	cbz	r1, 800da44 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800da20:	4633      	mov	r3, r6
 800da22:	4622      	mov	r2, r4
 800da24:	f000 fd32 	bl	800e48c <xQueueGenericSend>
 800da28:	2801      	cmp	r0, #1
 800da2a:	d004      	beq.n	800da36 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800da2c:	b134      	cbz	r4, 800da3c <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800da2e:	f06f 0001 	mvn.w	r0, #1
}
 800da32:	b002      	add	sp, #8
 800da34:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800da36:	2000      	movs	r0, #0
}
 800da38:	b002      	add	sp, #8
 800da3a:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800da3c:	f06f 0002 	mvn.w	r0, #2
}
 800da40:	b002      	add	sp, #8
 800da42:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800da44:	f06f 0003 	mvn.w	r0, #3
 800da48:	e7e6      	b.n	800da18 <osMessageQueuePut+0x38>
 800da4a:	bf00      	nop

0800da4c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800da4c:	b530      	push	{r4, r5, lr}
 800da4e:	461c      	mov	r4, r3
 800da50:	b083      	sub	sp, #12
 800da52:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800da56:	b1bb      	cbz	r3, 800da88 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800da58:	b348      	cbz	r0, 800daae <osMessageQueueGet+0x62>
 800da5a:	b341      	cbz	r1, 800daae <osMessageQueueGet+0x62>
 800da5c:	bb3c      	cbnz	r4, 800daae <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800da5e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800da60:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800da62:	f001 fa57 	bl	800ef14 <xQueueReceiveFromISR>
 800da66:	2801      	cmp	r0, #1
 800da68:	d11d      	bne.n	800daa6 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800da6a:	9b01      	ldr	r3, [sp, #4]
 800da6c:	b1c3      	cbz	r3, 800daa0 <osMessageQueueGet+0x54>
 800da6e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da72:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da76:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da7a:	f3bf 8f4f 	dsb	sy
 800da7e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800da82:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800da84:	b003      	add	sp, #12
 800da86:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800da88:	b188      	cbz	r0, 800daae <osMessageQueueGet+0x62>
 800da8a:	b181      	cbz	r1, 800daae <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800da8c:	4622      	mov	r2, r4
 800da8e:	f000 ff39 	bl	800e904 <xQueueReceive>
 800da92:	2801      	cmp	r0, #1
 800da94:	d004      	beq.n	800daa0 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800da96:	b134      	cbz	r4, 800daa6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800da98:	f06f 0001 	mvn.w	r0, #1
}
 800da9c:	b003      	add	sp, #12
 800da9e:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800daa0:	2000      	movs	r0, #0
}
 800daa2:	b003      	add	sp, #12
 800daa4:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800daa6:	f06f 0002 	mvn.w	r0, #2
}
 800daaa:	b003      	add	sp, #12
 800daac:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800daae:	f06f 0003 	mvn.w	r0, #3
 800dab2:	e7e7      	b.n	800da84 <osMessageQueueGet+0x38>

0800dab4 <osMessageQueueGetCount>:
 800dab4:	b130      	cbz	r0, 800dac4 <osMessageQueueGetCount+0x10>
 800dab6:	f3ef 8305 	mrs	r3, IPSR
 800daba:	b10b      	cbz	r3, 800dac0 <osMessageQueueGetCount+0xc>
 800dabc:	f001 ba9e 	b.w	800effc <uxQueueMessagesWaitingFromISR>
 800dac0:	f001 ba86 	b.w	800efd0 <uxQueueMessagesWaiting>
 800dac4:	4770      	bx	lr
 800dac6:	bf00      	nop

0800dac8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800dac8:	4b04      	ldr	r3, [pc, #16]	; (800dadc <vApplicationGetIdleTaskMemory+0x14>)
 800daca:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800dacc:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800dace:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800dad0:	4c03      	ldr	r4, [pc, #12]	; (800dae0 <vApplicationGetIdleTaskMemory+0x18>)
 800dad2:	600c      	str	r4, [r1, #0]
}
 800dad4:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800dad8:	6013      	str	r3, [r2, #0]
}
 800dada:	4770      	bx	lr
 800dadc:	200021ac 	.word	0x200021ac
 800dae0:	20001fac 	.word	0x20001fac

0800dae4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800dae4:	4b05      	ldr	r3, [pc, #20]	; (800dafc <vApplicationGetTimerTaskMemory+0x18>)
 800dae6:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800dae8:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800daea:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800daee:	4c04      	ldr	r4, [pc, #16]	; (800db00 <vApplicationGetTimerTaskMemory+0x1c>)
 800daf0:	600c      	str	r4, [r1, #0]
}
 800daf2:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800daf6:	6013      	str	r3, [r2, #0]
}
 800daf8:	4770      	bx	lr
 800dafa:	bf00      	nop
 800dafc:	2000265c 	.word	0x2000265c
 800db00:	2000225c 	.word	0x2000225c

0800db04 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800db04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db08:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800db0a:	f001 ff41 	bl	800f990 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800db0e:	4a54      	ldr	r2, [pc, #336]	; (800dc60 <pvPortMalloc+0x15c>)
 800db10:	6816      	ldr	r6, [r2, #0]
 800db12:	2e00      	cmp	r6, #0
 800db14:	d06e      	beq.n	800dbf4 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800db16:	4b53      	ldr	r3, [pc, #332]	; (800dc64 <pvPortMalloc+0x160>)
 800db18:	681f      	ldr	r7, [r3, #0]
 800db1a:	423d      	tst	r5, r7
 800db1c:	d12e      	bne.n	800db7c <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800db1e:	b36d      	cbz	r5, 800db7c <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800db20:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800db24:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800db26:	bf1c      	itt	ne
 800db28:	f024 0407 	bicne.w	r4, r4, #7
 800db2c:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800db2e:	b32c      	cbz	r4, 800db7c <pvPortMalloc+0x78>
 800db30:	f8df c144 	ldr.w	ip, [pc, #324]	; 800dc78 <pvPortMalloc+0x174>
 800db34:	f8dc 5000 	ldr.w	r5, [ip]
 800db38:	42a5      	cmp	r5, r4
 800db3a:	d31f      	bcc.n	800db7c <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800db3c:	484a      	ldr	r0, [pc, #296]	; (800dc68 <pvPortMalloc+0x164>)
 800db3e:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800db40:	e003      	b.n	800db4a <pvPortMalloc+0x46>
 800db42:	681a      	ldr	r2, [r3, #0]
 800db44:	b122      	cbz	r2, 800db50 <pvPortMalloc+0x4c>
 800db46:	4618      	mov	r0, r3
 800db48:	4613      	mov	r3, r2
 800db4a:	6859      	ldr	r1, [r3, #4]
 800db4c:	42a1      	cmp	r1, r4
 800db4e:	d3f8      	bcc.n	800db42 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800db50:	42b3      	cmp	r3, r6
 800db52:	d013      	beq.n	800db7c <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800db54:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800db56:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800db58:	f858 eb08 	ldr.w	lr, [r8], #8
 800db5c:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800db60:	2a10      	cmp	r2, #16
 800db62:	d929      	bls.n	800dbb8 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800db64:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800db66:	0748      	lsls	r0, r1, #29
 800db68:	d00f      	beq.n	800db8a <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800db6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db6e:	f383 8811 	msr	BASEPRI, r3
 800db72:	f3bf 8f6f 	isb	sy
 800db76:	f3bf 8f4f 	dsb	sy
 800db7a:	e7fe      	b.n	800db7a <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800db7c:	f001 ff10 	bl	800f9a0 <xTaskResumeAll>
 800db80:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800db84:	4640      	mov	r0, r8
 800db86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800db8a:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800db8c:	4a36      	ldr	r2, [pc, #216]	; (800dc68 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800db8e:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800db90:	4614      	mov	r4, r2
 800db92:	6812      	ldr	r2, [r2, #0]
 800db94:	4291      	cmp	r1, r2
 800db96:	d8fb      	bhi.n	800db90 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800db98:	6860      	ldr	r0, [r4, #4]
 800db9a:	eb04 0e00 	add.w	lr, r4, r0
 800db9e:	4571      	cmp	r1, lr
 800dba0:	d04b      	beq.n	800dc3a <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dba2:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dba6:	eb01 000e 	add.w	r0, r1, lr
 800dbaa:	4282      	cmp	r2, r0
 800dbac:	d051      	beq.n	800dc52 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800dbae:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dbb0:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dbb2:	bf18      	it	ne
 800dbb4:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dbb6:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dbb8:	4a2c      	ldr	r2, [pc, #176]	; (800dc6c <pvPortMalloc+0x168>)
 800dbba:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dbbc:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dbbe:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800dbc0:	bf38      	it	cc
 800dbc2:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800dbc4:	4a2a      	ldr	r2, [pc, #168]	; (800dc70 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dbc6:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800dbca:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800dbcc:	2000      	movs	r0, #0
 800dbce:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800dbd2:	6813      	ldr	r3, [r2, #0]
 800dbd4:	3301      	adds	r3, #1
 800dbd6:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800dbd8:	f001 fee2 	bl	800f9a0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800dbdc:	f018 0f07 	tst.w	r8, #7
 800dbe0:	d0d0      	beq.n	800db84 <pvPortMalloc+0x80>
 800dbe2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbe6:	f383 8811 	msr	BASEPRI, r3
 800dbea:	f3bf 8f6f 	isb	sy
 800dbee:	f3bf 8f4f 	dsb	sy
 800dbf2:	e7fe      	b.n	800dbf2 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800dbf4:	4b1f      	ldr	r3, [pc, #124]	; (800dc74 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800dbf6:	075e      	lsls	r6, r3, #29
 800dbf8:	d118      	bne.n	800dc2c <pvPortMalloc+0x128>
 800dbfa:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800dbfe:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800dc00:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800dc02:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800dc06:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dc08:	4a18      	ldr	r2, [pc, #96]	; (800dc6c <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800dc0a:	4817      	ldr	r0, [pc, #92]	; (800dc68 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dc0c:	4c15      	ldr	r4, [pc, #84]	; (800dc64 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800dc0e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800dc10:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dc12:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dc14:	4a18      	ldr	r2, [pc, #96]	; (800dc78 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dc16:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dc1a:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800dc1c:	2200      	movs	r2, #0
 800dc1e:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dc20:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800dc22:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800dc26:	e9c1 6300 	strd	r6, r3, [r1]
}
 800dc2a:	e776      	b.n	800db1a <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800dc2c:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800dc2e:	f021 0107 	bic.w	r1, r1, #7
 800dc32:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800dc36:	460b      	mov	r3, r1
 800dc38:	e7e2      	b.n	800dc00 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc3a:	6849      	ldr	r1, [r1, #4]
 800dc3c:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc40:	eb04 010e 	add.w	r1, r4, lr
 800dc44:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc46:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc4a:	d001      	beq.n	800dc50 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc4c:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800dc4e:	e7b2      	b.n	800dbb6 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc50:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dc52:	42b2      	cmp	r2, r6
 800dc54:	d0ab      	beq.n	800dbae <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dc56:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc58:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dc5a:	4470      	add	r0, lr
 800dc5c:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc5e:	e7a6      	b.n	800dbae <pvPortMalloc+0xaa>
 800dc60:	20002708 	.word	0x20002708
 800dc64:	2001270c 	.word	0x2001270c
 800dc68:	20012720 	.word	0x20012720
 800dc6c:	20012714 	.word	0x20012714
 800dc70:	20012718 	.word	0x20012718
 800dc74:	2000270c 	.word	0x2000270c
 800dc78:	20012710 	.word	0x20012710

0800dc7c <vPortFree>:
	if( pv != NULL )
 800dc7c:	b1d0      	cbz	r0, 800dcb4 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dc7e:	4a2c      	ldr	r2, [pc, #176]	; (800dd30 <vPortFree+0xb4>)
 800dc80:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800dc84:	6812      	ldr	r2, [r2, #0]
 800dc86:	4213      	tst	r3, r2
 800dc88:	d00b      	beq.n	800dca2 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800dc8a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800dc8e:	b191      	cbz	r1, 800dcb6 <vPortFree+0x3a>
 800dc90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc94:	f383 8811 	msr	BASEPRI, r3
 800dc98:	f3bf 8f6f 	isb	sy
 800dc9c:	f3bf 8f4f 	dsb	sy
 800dca0:	e7fe      	b.n	800dca0 <vPortFree+0x24>
 800dca2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dca6:	f383 8811 	msr	BASEPRI, r3
 800dcaa:	f3bf 8f6f 	isb	sy
 800dcae:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dcb2:	e7fe      	b.n	800dcb2 <vPortFree+0x36>
 800dcb4:	4770      	bx	lr
{
 800dcb6:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dcb8:	ea23 0302 	bic.w	r3, r3, r2
{
 800dcbc:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dcbe:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dcc2:	4c1c      	ldr	r4, [pc, #112]	; (800dd34 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dcc4:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800dcc6:	f001 fe63 	bl	800f990 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dcca:	9801      	ldr	r0, [sp, #4]
 800dccc:	6822      	ldr	r2, [r4, #0]
 800dcce:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dcd2:	4b19      	ldr	r3, [pc, #100]	; (800dd38 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dcd4:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800dcd6:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dcd8:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dcda:	461a      	mov	r2, r3
 800dcdc:	681b      	ldr	r3, [r3, #0]
 800dcde:	4298      	cmp	r0, r3
 800dce0:	d8fb      	bhi.n	800dcda <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dce2:	6854      	ldr	r4, [r2, #4]
 800dce4:	eb02 0e04 	add.w	lr, r2, r4
 800dce8:	4570      	cmp	r0, lr
 800dcea:	d010      	beq.n	800dd0e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dcec:	eb00 0c01 	add.w	ip, r0, r1
 800dcf0:	4563      	cmp	r3, ip
 800dcf2:	d014      	beq.n	800dd1e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800dcf4:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dcf6:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dcf8:	bf18      	it	ne
 800dcfa:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800dcfc:	4a0f      	ldr	r2, [pc, #60]	; (800dd3c <vPortFree+0xc0>)
 800dcfe:	6813      	ldr	r3, [r2, #0]
 800dd00:	3301      	adds	r3, #1
 800dd02:	6013      	str	r3, [r2, #0]
}
 800dd04:	b002      	add	sp, #8
 800dd06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800dd0a:	f001 be49 	b.w	800f9a0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dd0e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd10:	1850      	adds	r0, r2, r1
 800dd12:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dd14:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd16:	d001      	beq.n	800dd1c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd18:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800dd1a:	e7ef      	b.n	800dcfc <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd1c:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dd1e:	4c08      	ldr	r4, [pc, #32]	; (800dd40 <vPortFree+0xc4>)
 800dd20:	6824      	ldr	r4, [r4, #0]
 800dd22:	42a3      	cmp	r3, r4
 800dd24:	d0e6      	beq.n	800dcf4 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd26:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dd2a:	4421      	add	r1, r4
 800dd2c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd2e:	e7e1      	b.n	800dcf4 <vPortFree+0x78>
 800dd30:	2001270c 	.word	0x2001270c
 800dd34:	20012710 	.word	0x20012710
 800dd38:	20012720 	.word	0x20012720
 800dd3c:	2001271c 	.word	0x2001271c
 800dd40:	20002708 	.word	0x20002708

0800dd44 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dd44:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800dd48:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dd4c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800dd4e:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dd52:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dd56:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800dd58:	4770      	bx	lr
 800dd5a:	bf00      	nop

0800dd5c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800dd5c:	2300      	movs	r3, #0
 800dd5e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800dd60:	4770      	bx	lr
 800dd62:	bf00      	nop

0800dd64 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800dd64:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800dd66:	689a      	ldr	r2, [r3, #8]
 800dd68:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dd6a:	6802      	ldr	r2, [r0, #0]
{
 800dd6c:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dd6e:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800dd70:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dd72:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dd74:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800dd76:	6099      	str	r1, [r3, #8]
}
 800dd78:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800dd7c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800dd7e:	6002      	str	r2, [r0, #0]
}
 800dd80:	4770      	bx	lr
 800dd82:	bf00      	nop

0800dd84 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800dd84:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800dd86:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800dd88:	1c6b      	adds	r3, r5, #1
 800dd8a:	d010      	beq.n	800ddae <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800dd8c:	f100 0308 	add.w	r3, r0, #8
 800dd90:	461c      	mov	r4, r3
 800dd92:	685b      	ldr	r3, [r3, #4]
 800dd94:	681a      	ldr	r2, [r3, #0]
 800dd96:	42aa      	cmp	r2, r5
 800dd98:	d9fa      	bls.n	800dd90 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dd9a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800dd9c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dd9e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800dda0:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800dda2:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800dda4:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800dda6:	6108      	str	r0, [r1, #16]
}
 800dda8:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800ddaa:	6002      	str	r2, [r0, #0]
}
 800ddac:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800ddae:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800ddb0:	6863      	ldr	r3, [r4, #4]
 800ddb2:	e7f2      	b.n	800dd9a <vListInsert+0x16>

0800ddb4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800ddb4:	6903      	ldr	r3, [r0, #16]
{
 800ddb6:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ddb8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800ddbc:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ddbe:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800ddc0:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800ddc2:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800ddc4:	bf08      	it	eq
 800ddc6:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800ddc8:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800ddca:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800ddce:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800ddd0:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800ddd2:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800ddd4:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800ddd6:	6818      	ldr	r0, [r3, #0]
}
 800ddd8:	4770      	bx	lr
 800ddda:	bf00      	nop

0800dddc <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800dddc:	4808      	ldr	r0, [pc, #32]	; (800de00 <prvPortStartFirstTask+0x24>)
 800ddde:	6800      	ldr	r0, [r0, #0]
 800dde0:	6800      	ldr	r0, [r0, #0]
 800dde2:	f380 8808 	msr	MSP, r0
 800dde6:	f04f 0000 	mov.w	r0, #0
 800ddea:	f380 8814 	msr	CONTROL, r0
 800ddee:	b662      	cpsie	i
 800ddf0:	b661      	cpsie	f
 800ddf2:	f3bf 8f4f 	dsb	sy
 800ddf6:	f3bf 8f6f 	isb	sy
 800ddfa:	df00      	svc	0
 800ddfc:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800ddfe:	0000      	.short	0x0000
 800de00:	e000ed08 	.word	0xe000ed08

0800de04 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800de04:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800de14 <vPortEnableVFP+0x10>
 800de08:	6801      	ldr	r1, [r0, #0]
 800de0a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800de0e:	6001      	str	r1, [r0, #0]
 800de10:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800de12:	0000      	.short	0x0000
 800de14:	e000ed88 	.word	0xe000ed88

0800de18 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800de18:	4b0e      	ldr	r3, [pc, #56]	; (800de54 <prvTaskExitError+0x3c>)
 800de1a:	681b      	ldr	r3, [r3, #0]
{
 800de1c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800de1e:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800de20:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800de22:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800de24:	d008      	beq.n	800de38 <prvTaskExitError+0x20>
 800de26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de2a:	f383 8811 	msr	BASEPRI, r3
 800de2e:	f3bf 8f6f 	isb	sy
 800de32:	f3bf 8f4f 	dsb	sy
 800de36:	e7fe      	b.n	800de36 <prvTaskExitError+0x1e>
 800de38:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de3c:	f383 8811 	msr	BASEPRI, r3
 800de40:	f3bf 8f6f 	isb	sy
 800de44:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800de48:	9b01      	ldr	r3, [sp, #4]
 800de4a:	2b00      	cmp	r3, #0
 800de4c:	d0fc      	beq.n	800de48 <prvTaskExitError+0x30>
}
 800de4e:	b002      	add	sp, #8
 800de50:	4770      	bx	lr
 800de52:	bf00      	nop
 800de54:	20000084 	.word	0x20000084

0800de58 <pxPortInitialiseStack>:
{
 800de58:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800de5a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800de5e:	4c07      	ldr	r4, [pc, #28]	; (800de7c <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800de60:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800de64:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800de68:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800de6c:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800de70:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800de74:	f85d 4b04 	ldr.w	r4, [sp], #4
 800de78:	3844      	subs	r0, #68	; 0x44
 800de7a:	4770      	bx	lr
 800de7c:	0800de19 	.word	0x0800de19

0800de80 <SVC_Handler>:
	__asm volatile (
 800de80:	4b07      	ldr	r3, [pc, #28]	; (800dea0 <pxCurrentTCBConst2>)
 800de82:	6819      	ldr	r1, [r3, #0]
 800de84:	6808      	ldr	r0, [r1, #0]
 800de86:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de8a:	f380 8809 	msr	PSP, r0
 800de8e:	f3bf 8f6f 	isb	sy
 800de92:	f04f 0000 	mov.w	r0, #0
 800de96:	f380 8811 	msr	BASEPRI, r0
 800de9a:	4770      	bx	lr
 800de9c:	f3af 8000 	nop.w

0800dea0 <pxCurrentTCBConst2>:
 800dea0:	20012770 	.word	0x20012770

0800dea4 <vPortEnterCritical>:
 800dea4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dea8:	f383 8811 	msr	BASEPRI, r3
 800deac:	f3bf 8f6f 	isb	sy
 800deb0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800deb4:	4a0b      	ldr	r2, [pc, #44]	; (800dee4 <vPortEnterCritical+0x40>)
 800deb6:	6813      	ldr	r3, [r2, #0]
 800deb8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800deba:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800debc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800debe:	d000      	beq.n	800dec2 <vPortEnterCritical+0x1e>
}
 800dec0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800dec2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dec6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800deca:	b2db      	uxtb	r3, r3
 800decc:	2b00      	cmp	r3, #0
 800dece:	d0f7      	beq.n	800dec0 <vPortEnterCritical+0x1c>
 800ded0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ded4:	f383 8811 	msr	BASEPRI, r3
 800ded8:	f3bf 8f6f 	isb	sy
 800dedc:	f3bf 8f4f 	dsb	sy
 800dee0:	e7fe      	b.n	800dee0 <vPortEnterCritical+0x3c>
 800dee2:	bf00      	nop
 800dee4:	20000084 	.word	0x20000084

0800dee8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800dee8:	4a08      	ldr	r2, [pc, #32]	; (800df0c <vPortExitCritical+0x24>)
 800deea:	6813      	ldr	r3, [r2, #0]
 800deec:	b943      	cbnz	r3, 800df00 <vPortExitCritical+0x18>
 800deee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800def2:	f383 8811 	msr	BASEPRI, r3
 800def6:	f3bf 8f6f 	isb	sy
 800defa:	f3bf 8f4f 	dsb	sy
 800defe:	e7fe      	b.n	800defe <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800df00:	3b01      	subs	r3, #1
 800df02:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800df04:	b90b      	cbnz	r3, 800df0a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800df06:	f383 8811 	msr	BASEPRI, r3
}
 800df0a:	4770      	bx	lr
 800df0c:	20000084 	.word	0x20000084

0800df10 <PendSV_Handler>:
	__asm volatile
 800df10:	f3ef 8009 	mrs	r0, PSP
 800df14:	f3bf 8f6f 	isb	sy
 800df18:	4b15      	ldr	r3, [pc, #84]	; (800df70 <pxCurrentTCBConst>)
 800df1a:	681a      	ldr	r2, [r3, #0]
 800df1c:	f01e 0f10 	tst.w	lr, #16
 800df20:	bf08      	it	eq
 800df22:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800df26:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df2a:	6010      	str	r0, [r2, #0]
 800df2c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800df30:	f04f 0050 	mov.w	r0, #80	; 0x50
 800df34:	f380 8811 	msr	BASEPRI, r0
 800df38:	f3bf 8f4f 	dsb	sy
 800df3c:	f3bf 8f6f 	isb	sy
 800df40:	f001 fd54 	bl	800f9ec <vTaskSwitchContext>
 800df44:	f04f 0000 	mov.w	r0, #0
 800df48:	f380 8811 	msr	BASEPRI, r0
 800df4c:	bc09      	pop	{r0, r3}
 800df4e:	6819      	ldr	r1, [r3, #0]
 800df50:	6808      	ldr	r0, [r1, #0]
 800df52:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df56:	f01e 0f10 	tst.w	lr, #16
 800df5a:	bf08      	it	eq
 800df5c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800df60:	f380 8809 	msr	PSP, r0
 800df64:	f3bf 8f6f 	isb	sy
 800df68:	4770      	bx	lr
 800df6a:	bf00      	nop
 800df6c:	f3af 8000 	nop.w

0800df70 <pxCurrentTCBConst>:
 800df70:	20012770 	.word	0x20012770

0800df74 <xPortSysTickHandler>:
{
 800df74:	b508      	push	{r3, lr}
	__asm volatile
 800df76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df7a:	f383 8811 	msr	BASEPRI, r3
 800df7e:	f3bf 8f6f 	isb	sy
 800df82:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800df86:	f001 fd21 	bl	800f9cc <xTaskIncrementTick>
 800df8a:	b128      	cbz	r0, 800df98 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800df8c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df90:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df94:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800df98:	2300      	movs	r3, #0
 800df9a:	f383 8811 	msr	BASEPRI, r3
}
 800df9e:	bd08      	pop	{r3, pc}

0800dfa0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800dfa0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800dfa4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dfa6:	4906      	ldr	r1, [pc, #24]	; (800dfc0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800dfa8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800dfaa:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dfac:	680b      	ldr	r3, [r1, #0]
 800dfae:	4905      	ldr	r1, [pc, #20]	; (800dfc4 <vPortSetupTimerInterrupt+0x24>)
 800dfb0:	fba1 1303 	umull	r1, r3, r1, r3
 800dfb4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dfb6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dfb8:	3b01      	subs	r3, #1
 800dfba:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dfbc:	6110      	str	r0, [r2, #16]
}
 800dfbe:	4770      	bx	lr
 800dfc0:	20000078 	.word	0x20000078
 800dfc4:	10624dd3 	.word	0x10624dd3

0800dfc8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800dfc8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dfcc:	4a49      	ldr	r2, [pc, #292]	; (800e0f4 <xPortStartScheduler+0x12c>)
 800dfce:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800dfd2:	4291      	cmp	r1, r2
 800dfd4:	d043      	beq.n	800e05e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800dfd6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800dfda:	4b47      	ldr	r3, [pc, #284]	; (800e0f8 <xPortStartScheduler+0x130>)
 800dfdc:	429a      	cmp	r2, r3
 800dfde:	d035      	beq.n	800e04c <xPortStartScheduler+0x84>
{
 800dfe0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dfe2:	4b46      	ldr	r3, [pc, #280]	; (800e0fc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dfe4:	4846      	ldr	r0, [pc, #280]	; (800e100 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dfe6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800dfe8:	4c46      	ldr	r4, [pc, #280]	; (800e104 <xPortStartScheduler+0x13c>)
{
 800dfea:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800dfec:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dfee:	b2d2      	uxtb	r2, r2
 800dff0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800dff2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800dff4:	781b      	ldrb	r3, [r3, #0]
 800dff6:	b2db      	uxtb	r3, r3
 800dff8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dffc:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e000:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e004:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e008:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e00a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e00c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e00e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e010:	bf48      	it	mi
 800e012:	2206      	movmi	r2, #6
 800e014:	d511      	bpl.n	800e03a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e016:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e01a:	005b      	lsls	r3, r3, #1
 800e01c:	b2db      	uxtb	r3, r3
 800e01e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e022:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e026:	0609      	lsls	r1, r1, #24
 800e028:	4610      	mov	r0, r2
 800e02a:	f102 32ff 	add.w	r2, r2, #4294967295
 800e02e:	d4f2      	bmi.n	800e016 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e030:	2803      	cmp	r0, #3
 800e032:	6020      	str	r0, [r4, #0]
 800e034:	f88d 3007 	strb.w	r3, [sp, #7]
 800e038:	d01a      	beq.n	800e070 <xPortStartScheduler+0xa8>
	__asm volatile
 800e03a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e03e:	f383 8811 	msr	BASEPRI, r3
 800e042:	f3bf 8f6f 	isb	sy
 800e046:	f3bf 8f4f 	dsb	sy
 800e04a:	e7fe      	b.n	800e04a <xPortStartScheduler+0x82>
 800e04c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e050:	f383 8811 	msr	BASEPRI, r3
 800e054:	f3bf 8f6f 	isb	sy
 800e058:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e05c:	e7fe      	b.n	800e05c <xPortStartScheduler+0x94>
 800e05e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e062:	f383 8811 	msr	BASEPRI, r3
 800e066:	f3bf 8f6f 	isb	sy
 800e06a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e06e:	e7fe      	b.n	800e06e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e070:	9b02      	ldr	r3, [sp, #8]
 800e072:	4a22      	ldr	r2, [pc, #136]	; (800e0fc <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e074:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e078:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e07c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e07e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e080:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e082:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e086:	4c20      	ldr	r4, [pc, #128]	; (800e108 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e088:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e08c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e090:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800e094:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e098:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e09c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800e09e:	f7ff ff7f 	bl	800dfa0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e0a2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e0a4:	f7ff feae 	bl	800de04 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e0a8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e0ac:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e0b0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e0b4:	f7ff fe92 	bl	800dddc <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e0b8:	f001 fc98 	bl	800f9ec <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e0bc:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e0be:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e0c0:	3301      	adds	r3, #1
 800e0c2:	d008      	beq.n	800e0d6 <xPortStartScheduler+0x10e>
 800e0c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0c8:	f383 8811 	msr	BASEPRI, r3
 800e0cc:	f3bf 8f6f 	isb	sy
 800e0d0:	f3bf 8f4f 	dsb	sy
 800e0d4:	e7fe      	b.n	800e0d4 <xPortStartScheduler+0x10c>
 800e0d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0da:	f383 8811 	msr	BASEPRI, r3
 800e0de:	f3bf 8f6f 	isb	sy
 800e0e2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e0e6:	9b03      	ldr	r3, [sp, #12]
 800e0e8:	2b00      	cmp	r3, #0
 800e0ea:	d0fc      	beq.n	800e0e6 <xPortStartScheduler+0x11e>
}
 800e0ec:	2000      	movs	r0, #0
 800e0ee:	b004      	add	sp, #16
 800e0f0:	bd70      	pop	{r4, r5, r6, pc}
 800e0f2:	bf00      	nop
 800e0f4:	410fc271 	.word	0x410fc271
 800e0f8:	410fc270 	.word	0x410fc270
 800e0fc:	e000e400 	.word	0xe000e400
 800e100:	20012728 	.word	0x20012728
 800e104:	2001272c 	.word	0x2001272c
 800e108:	20000084 	.word	0x20000084

0800e10c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e10c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e110:	2b0f      	cmp	r3, #15
 800e112:	d90e      	bls.n	800e132 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e114:	4911      	ldr	r1, [pc, #68]	; (800e15c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e116:	4a12      	ldr	r2, [pc, #72]	; (800e160 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e118:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e11a:	7812      	ldrb	r2, [r2, #0]
 800e11c:	429a      	cmp	r2, r3
 800e11e:	d908      	bls.n	800e132 <vPortValidateInterruptPriority+0x26>
 800e120:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e124:	f383 8811 	msr	BASEPRI, r3
 800e128:	f3bf 8f6f 	isb	sy
 800e12c:	f3bf 8f4f 	dsb	sy
 800e130:	e7fe      	b.n	800e130 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e132:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e136:	4a0b      	ldr	r2, [pc, #44]	; (800e164 <vPortValidateInterruptPriority+0x58>)
 800e138:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e13c:	6812      	ldr	r2, [r2, #0]
 800e13e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e142:	4293      	cmp	r3, r2
 800e144:	d908      	bls.n	800e158 <vPortValidateInterruptPriority+0x4c>
 800e146:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e14a:	f383 8811 	msr	BASEPRI, r3
 800e14e:	f3bf 8f6f 	isb	sy
 800e152:	f3bf 8f4f 	dsb	sy
 800e156:	e7fe      	b.n	800e156 <vPortValidateInterruptPriority+0x4a>
	}
 800e158:	4770      	bx	lr
 800e15a:	bf00      	nop
 800e15c:	e000e3f0 	.word	0xe000e3f0
 800e160:	20012728 	.word	0x20012728
 800e164:	2001272c 	.word	0x2001272c

0800e168 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e168:	b570      	push	{r4, r5, r6, lr}
 800e16a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e16c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e16e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e170:	b920      	cbnz	r0, 800e17c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e172:	6825      	ldr	r5, [r4, #0]
 800e174:	b34d      	cbz	r5, 800e1ca <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e176:	3601      	adds	r6, #1
 800e178:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e17a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e17c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e17e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e180:	b97d      	cbnz	r5, 800e1a2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e182:	6860      	ldr	r0, [r4, #4]
 800e184:	f01c ffbd 	bl	802b102 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e188:	6863      	ldr	r3, [r4, #4]
 800e18a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e18c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e18e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e190:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e192:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e194:	bf24      	itt	cs
 800e196:	6823      	ldrcs	r3, [r4, #0]
 800e198:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e19a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e19c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e19e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e1a0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e1a2:	68e0      	ldr	r0, [r4, #12]
 800e1a4:	f01c ffad 	bl	802b102 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e1a8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e1aa:	68e3      	ldr	r3, [r4, #12]
 800e1ac:	4251      	negs	r1, r2
 800e1ae:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e1b0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e1b2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e1b4:	4293      	cmp	r3, r2
 800e1b6:	d202      	bcs.n	800e1be <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e1b8:	68a3      	ldr	r3, [r4, #8]
 800e1ba:	440b      	add	r3, r1
 800e1bc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e1be:	2d02      	cmp	r5, #2
 800e1c0:	d008      	beq.n	800e1d4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e1c2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e1c4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e1c6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e1c8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e1ca:	68a0      	ldr	r0, [r4, #8]
 800e1cc:	f001 fde0 	bl	800fd90 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e1d0:	60a5      	str	r5, [r4, #8]
 800e1d2:	e7d0      	b.n	800e176 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e1d4:	2e01      	cmp	r6, #1
 800e1d6:	bf38      	it	cc
 800e1d8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e1da:	2000      	movs	r0, #0
 800e1dc:	e7cc      	b.n	800e178 <prvCopyDataToQueue+0x10>
 800e1de:	bf00      	nop

0800e1e0 <xQueueGenericCreateStatic>:
	{
 800e1e0:	b530      	push	{r4, r5, lr}
 800e1e2:	b083      	sub	sp, #12
 800e1e4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e1e8:	b940      	cbnz	r0, 800e1fc <xQueueGenericCreateStatic+0x1c>
 800e1ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1ee:	f383 8811 	msr	BASEPRI, r3
 800e1f2:	f3bf 8f6f 	isb	sy
 800e1f6:	f3bf 8f4f 	dsb	sy
 800e1fa:	e7fe      	b.n	800e1fa <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e1fc:	461d      	mov	r5, r3
 800e1fe:	b17b      	cbz	r3, 800e220 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e200:	b302      	cbz	r2, 800e244 <xQueueGenericCreateStatic+0x64>
 800e202:	b1b1      	cbz	r1, 800e232 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e204:	2350      	movs	r3, #80	; 0x50
 800e206:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e208:	9b01      	ldr	r3, [sp, #4]
 800e20a:	2b50      	cmp	r3, #80	; 0x50
 800e20c:	d023      	beq.n	800e256 <xQueueGenericCreateStatic+0x76>
 800e20e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e212:	f383 8811 	msr	BASEPRI, r3
 800e216:	f3bf 8f6f 	isb	sy
 800e21a:	f3bf 8f4f 	dsb	sy
 800e21e:	e7fe      	b.n	800e21e <xQueueGenericCreateStatic+0x3e>
 800e220:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e224:	f383 8811 	msr	BASEPRI, r3
 800e228:	f3bf 8f6f 	isb	sy
 800e22c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e230:	e7fe      	b.n	800e230 <xQueueGenericCreateStatic+0x50>
 800e232:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e236:	f383 8811 	msr	BASEPRI, r3
 800e23a:	f3bf 8f6f 	isb	sy
 800e23e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e242:	e7fe      	b.n	800e242 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e244:	bb89      	cbnz	r1, 800e2aa <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e246:	2250      	movs	r2, #80	; 0x50
 800e248:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e24a:	9a01      	ldr	r2, [sp, #4]
 800e24c:	2a50      	cmp	r2, #80	; 0x50
 800e24e:	d1de      	bne.n	800e20e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e250:	9a01      	ldr	r2, [sp, #4]
 800e252:	462a      	mov	r2, r5
 800e254:	e000      	b.n	800e258 <xQueueGenericCreateStatic+0x78>
 800e256:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e258:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e25a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e25c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e260:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e264:	f7ff fe1e 	bl	800dea4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e268:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e26c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e26e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e270:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e274:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e276:	4401      	add	r1, r0
 800e278:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e27a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e27c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e27e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e280:	21ff      	movs	r1, #255	; 0xff
 800e282:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e286:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e288:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e28c:	f105 0010 	add.w	r0, r5, #16
 800e290:	f7ff fd58 	bl	800dd44 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e294:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e298:	f7ff fd54 	bl	800dd44 <vListInitialise>
	taskEXIT_CRITICAL();
 800e29c:	f7ff fe24 	bl	800dee8 <vPortExitCritical>
	}
 800e2a0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e2a2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e2a6:	b003      	add	sp, #12
 800e2a8:	bd30      	pop	{r4, r5, pc}
 800e2aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2ae:	f383 8811 	msr	BASEPRI, r3
 800e2b2:	f3bf 8f6f 	isb	sy
 800e2b6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e2ba:	e7fe      	b.n	800e2ba <xQueueGenericCreateStatic+0xda>

0800e2bc <xQueueGenericCreate>:
	{
 800e2bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e2be:	b940      	cbnz	r0, 800e2d2 <xQueueGenericCreate+0x16>
 800e2c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2c4:	f383 8811 	msr	BASEPRI, r3
 800e2c8:	f3bf 8f6f 	isb	sy
 800e2cc:	f3bf 8f4f 	dsb	sy
 800e2d0:	e7fe      	b.n	800e2d0 <xQueueGenericCreate+0x14>
 800e2d2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e2d4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e2d8:	3050      	adds	r0, #80	; 0x50
 800e2da:	460e      	mov	r6, r1
 800e2dc:	4617      	mov	r7, r2
 800e2de:	f7ff fc11 	bl	800db04 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e2e2:	4604      	mov	r4, r0
 800e2e4:	b340      	cbz	r0, 800e338 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e2e6:	2300      	movs	r3, #0
 800e2e8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e2ec:	b336      	cbz	r6, 800e33c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2ee:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e2f2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e2f4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e2f8:	f7ff fdd4 	bl	800dea4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2fc:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e300:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e302:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e304:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e308:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e30a:	440a      	add	r2, r1
 800e30c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e30e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e310:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e312:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e314:	22ff      	movs	r2, #255	; 0xff
 800e316:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e31a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e31c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e320:	f104 0010 	add.w	r0, r4, #16
 800e324:	f7ff fd0e 	bl	800dd44 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e328:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e32c:	f7ff fd0a 	bl	800dd44 <vListInitialise>
	taskEXIT_CRITICAL();
 800e330:	f7ff fdda 	bl	800dee8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e334:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e338:	4620      	mov	r0, r4
 800e33a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e33c:	4603      	mov	r3, r0
 800e33e:	e7d8      	b.n	800e2f2 <xQueueGenericCreate+0x36>

0800e340 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e340:	b940      	cbnz	r0, 800e354 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e342:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e346:	f383 8811 	msr	BASEPRI, r3
 800e34a:	f3bf 8f6f 	isb	sy
 800e34e:	f3bf 8f4f 	dsb	sy
 800e352:	e7fe      	b.n	800e352 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e354:	4288      	cmp	r0, r1
 800e356:	d208      	bcs.n	800e36a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e358:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e35c:	f383 8811 	msr	BASEPRI, r3
 800e360:	f3bf 8f6f 	isb	sy
 800e364:	f3bf 8f4f 	dsb	sy
 800e368:	e7fe      	b.n	800e368 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e36a:	b530      	push	{r4, r5, lr}
 800e36c:	4615      	mov	r5, r2
 800e36e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e370:	2a00      	cmp	r2, #0
 800e372:	d03c      	beq.n	800e3ee <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e374:	2350      	movs	r3, #80	; 0x50
 800e376:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e378:	9b03      	ldr	r3, [sp, #12]
 800e37a:	2b50      	cmp	r3, #80	; 0x50
 800e37c:	d008      	beq.n	800e390 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e37e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e382:	f383 8811 	msr	BASEPRI, r3
 800e386:	f3bf 8f6f 	isb	sy
 800e38a:	f3bf 8f4f 	dsb	sy
 800e38e:	e7fe      	b.n	800e38e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e390:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e392:	2301      	movs	r3, #1
 800e394:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e398:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e39a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e39e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e3a0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e3a2:	f7ff fd7f 	bl	800dea4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3a6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e3aa:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e3ac:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3ae:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3b2:	1ac3      	subs	r3, r0, r3
 800e3b4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3b6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e3b8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e3bc:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3c0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e3c2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e3c4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3c8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e3ca:	f105 0010 	add.w	r0, r5, #16
 800e3ce:	f7ff fcb9 	bl	800dd44 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e3d2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e3d6:	f7ff fcb5 	bl	800dd44 <vListInitialise>
	taskEXIT_CRITICAL();
 800e3da:	f7ff fd85 	bl	800dee8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e3de:	9901      	ldr	r1, [sp, #4]
 800e3e0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e3e2:	2302      	movs	r3, #2
	}
 800e3e4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e3e6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e3ea:	b005      	add	sp, #20
 800e3ec:	bd30      	pop	{r4, r5, pc}
 800e3ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3f2:	f383 8811 	msr	BASEPRI, r3
 800e3f6:	f3bf 8f6f 	isb	sy
 800e3fa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e3fe:	e7fe      	b.n	800e3fe <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e400 <xQueueCreateCountingSemaphore>:
	{
 800e400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e402:	b940      	cbnz	r0, 800e416 <xQueueCreateCountingSemaphore+0x16>
 800e404:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e408:	f383 8811 	msr	BASEPRI, r3
 800e40c:	f3bf 8f6f 	isb	sy
 800e410:	f3bf 8f4f 	dsb	sy
 800e414:	e7fe      	b.n	800e414 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e416:	4288      	cmp	r0, r1
 800e418:	460e      	mov	r6, r1
 800e41a:	4604      	mov	r4, r0
 800e41c:	d208      	bcs.n	800e430 <xQueueCreateCountingSemaphore+0x30>
 800e41e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e422:	f383 8811 	msr	BASEPRI, r3
 800e426:	f3bf 8f6f 	isb	sy
 800e42a:	f3bf 8f4f 	dsb	sy
 800e42e:	e7fe      	b.n	800e42e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e430:	2050      	movs	r0, #80	; 0x50
 800e432:	f7ff fb67 	bl	800db04 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e436:	4605      	mov	r5, r0
 800e438:	b330      	cbz	r0, 800e488 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e43a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e43c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e440:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e444:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e446:	f7ff fd2d 	bl	800dea4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e44a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e44e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e450:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e452:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e456:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e458:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e45a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e45c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e45e:	22ff      	movs	r2, #255	; 0xff
 800e460:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e464:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e466:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e468:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e46c:	f105 0010 	add.w	r0, r5, #16
 800e470:	f7ff fc68 	bl	800dd44 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e474:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e478:	f7ff fc64 	bl	800dd44 <vListInitialise>
	taskEXIT_CRITICAL();
 800e47c:	f7ff fd34 	bl	800dee8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e480:	2302      	movs	r3, #2
 800e482:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e486:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e488:	4628      	mov	r0, r5
 800e48a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e48c <xQueueGenericSend>:
{
 800e48c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e490:	b085      	sub	sp, #20
 800e492:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e494:	2800      	cmp	r0, #0
 800e496:	f000 80a4 	beq.w	800e5e2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e49a:	4688      	mov	r8, r1
 800e49c:	461f      	mov	r7, r3
 800e49e:	4604      	mov	r4, r0
 800e4a0:	2900      	cmp	r1, #0
 800e4a2:	f000 8091 	beq.w	800e5c8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e4a6:	2f02      	cmp	r7, #2
 800e4a8:	d10b      	bne.n	800e4c2 <xQueueGenericSend+0x36>
 800e4aa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e4ac:	2b01      	cmp	r3, #1
 800e4ae:	d008      	beq.n	800e4c2 <xQueueGenericSend+0x36>
 800e4b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4b4:	f383 8811 	msr	BASEPRI, r3
 800e4b8:	f3bf 8f6f 	isb	sy
 800e4bc:	f3bf 8f4f 	dsb	sy
 800e4c0:	e7fe      	b.n	800e4c0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e4c2:	f001 fc0f 	bl	800fce4 <xTaskGetSchedulerState>
 800e4c6:	4605      	mov	r5, r0
 800e4c8:	2800      	cmp	r0, #0
 800e4ca:	f000 8093 	beq.w	800e5f4 <xQueueGenericSend+0x168>
 800e4ce:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4d0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e4d4:	f7ff fce6 	bl	800dea4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e4d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e4da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e4dc:	429a      	cmp	r2, r3
 800e4de:	f0c0 80ef 	bcc.w	800e6c0 <xQueueGenericSend+0x234>
 800e4e2:	2f02      	cmp	r7, #2
 800e4e4:	f000 80ec 	beq.w	800e6c0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e4e8:	9801      	ldr	r0, [sp, #4]
 800e4ea:	2800      	cmp	r0, #0
 800e4ec:	f000 8101 	beq.w	800e6f2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e4f0:	2d00      	cmp	r5, #0
 800e4f2:	f000 80e1 	beq.w	800e6b8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e4f6:	f7ff fcf7 	bl	800dee8 <vPortExitCritical>
		vTaskSuspendAll();
 800e4fa:	f001 fa49 	bl	800f990 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e4fe:	f7ff fcd1 	bl	800dea4 <vPortEnterCritical>
 800e502:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e506:	2bff      	cmp	r3, #255	; 0xff
 800e508:	bf04      	itt	eq
 800e50a:	2300      	moveq	r3, #0
 800e50c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e510:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e514:	2bff      	cmp	r3, #255	; 0xff
 800e516:	bf04      	itt	eq
 800e518:	2300      	moveq	r3, #0
 800e51a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e51e:	f7ff fce3 	bl	800dee8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e522:	a901      	add	r1, sp, #4
 800e524:	a802      	add	r0, sp, #8
 800e526:	f001 fb8f 	bl	800fc48 <xTaskCheckForTimeOut>
 800e52a:	2800      	cmp	r0, #0
 800e52c:	f040 80e6 	bne.w	800e6fc <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e530:	f7ff fcb8 	bl	800dea4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e534:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e536:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e538:	429a      	cmp	r2, r3
 800e53a:	d068      	beq.n	800e60e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e53c:	f7ff fcd4 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e540:	f7ff fcb0 	bl	800dea4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e544:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e548:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e54a:	2d00      	cmp	r5, #0
 800e54c:	dc04      	bgt.n	800e558 <xQueueGenericSend+0xcc>
 800e54e:	e011      	b.n	800e574 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e550:	1e6a      	subs	r2, r5, #1
 800e552:	b2d3      	uxtb	r3, r2
 800e554:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e556:	b16b      	cbz	r3, 800e574 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e558:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e55a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e55c:	b153      	cbz	r3, 800e574 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e55e:	f001 fb1f 	bl	800fba0 <xTaskRemoveFromEventList>
 800e562:	2800      	cmp	r0, #0
 800e564:	d0f4      	beq.n	800e550 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e566:	f001 fbb7 	bl	800fcd8 <vTaskMissedYield>
			--cTxLock;
 800e56a:	1e6a      	subs	r2, r5, #1
 800e56c:	b2d3      	uxtb	r3, r2
 800e56e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e570:	2b00      	cmp	r3, #0
 800e572:	d1f1      	bne.n	800e558 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e574:	23ff      	movs	r3, #255	; 0xff
 800e576:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e57a:	f7ff fcb5 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e57e:	f7ff fc91 	bl	800dea4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e582:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e586:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e588:	2d00      	cmp	r5, #0
 800e58a:	dd14      	ble.n	800e5b6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e58c:	f104 0910 	add.w	r9, r4, #16
 800e590:	e003      	b.n	800e59a <xQueueGenericSend+0x10e>
				--cRxLock;
 800e592:	1e6a      	subs	r2, r5, #1
 800e594:	b2d3      	uxtb	r3, r2
 800e596:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e598:	b16b      	cbz	r3, 800e5b6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e59a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e59c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e59e:	b153      	cbz	r3, 800e5b6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5a0:	f001 fafe 	bl	800fba0 <xTaskRemoveFromEventList>
 800e5a4:	2800      	cmp	r0, #0
 800e5a6:	d0f4      	beq.n	800e592 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e5a8:	f001 fb96 	bl	800fcd8 <vTaskMissedYield>
				--cRxLock;
 800e5ac:	1e6a      	subs	r2, r5, #1
 800e5ae:	b2d3      	uxtb	r3, r2
 800e5b0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5b2:	2b00      	cmp	r3, #0
 800e5b4:	d1f1      	bne.n	800e59a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e5b6:	23ff      	movs	r3, #255	; 0xff
 800e5b8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e5bc:	f7ff fc94 	bl	800dee8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e5c0:	f001 f9ee 	bl	800f9a0 <xTaskResumeAll>
 800e5c4:	2501      	movs	r5, #1
 800e5c6:	e785      	b.n	800e4d4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e5c8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e5ca:	2b00      	cmp	r3, #0
 800e5cc:	f43f af6b 	beq.w	800e4a6 <xQueueGenericSend+0x1a>
 800e5d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5d4:	f383 8811 	msr	BASEPRI, r3
 800e5d8:	f3bf 8f6f 	isb	sy
 800e5dc:	f3bf 8f4f 	dsb	sy
 800e5e0:	e7fe      	b.n	800e5e0 <xQueueGenericSend+0x154>
 800e5e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5e6:	f383 8811 	msr	BASEPRI, r3
 800e5ea:	f3bf 8f6f 	isb	sy
 800e5ee:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e5f2:	e7fe      	b.n	800e5f2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e5f4:	9b01      	ldr	r3, [sp, #4]
 800e5f6:	2b00      	cmp	r3, #0
 800e5f8:	f43f af6a 	beq.w	800e4d0 <xQueueGenericSend+0x44>
 800e5fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e600:	f383 8811 	msr	BASEPRI, r3
 800e604:	f3bf 8f6f 	isb	sy
 800e608:	f3bf 8f4f 	dsb	sy
 800e60c:	e7fe      	b.n	800e60c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e60e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e612:	f7ff fc69 	bl	800dee8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e616:	9901      	ldr	r1, [sp, #4]
 800e618:	4648      	mov	r0, r9
 800e61a:	f001 fa33 	bl	800fa84 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e61e:	f7ff fc41 	bl	800dea4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e622:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e626:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e628:	2d00      	cmp	r5, #0
 800e62a:	dc04      	bgt.n	800e636 <xQueueGenericSend+0x1aa>
 800e62c:	e011      	b.n	800e652 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e62e:	1e6b      	subs	r3, r5, #1
 800e630:	b2da      	uxtb	r2, r3
 800e632:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e634:	b16a      	cbz	r2, 800e652 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e636:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e638:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e63a:	b153      	cbz	r3, 800e652 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e63c:	f001 fab0 	bl	800fba0 <xTaskRemoveFromEventList>
 800e640:	2800      	cmp	r0, #0
 800e642:	d0f4      	beq.n	800e62e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e644:	f001 fb48 	bl	800fcd8 <vTaskMissedYield>
			--cTxLock;
 800e648:	1e6b      	subs	r3, r5, #1
 800e64a:	b2da      	uxtb	r2, r3
 800e64c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e64e:	2a00      	cmp	r2, #0
 800e650:	d1f1      	bne.n	800e636 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e652:	23ff      	movs	r3, #255	; 0xff
 800e654:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e658:	f7ff fc46 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e65c:	f7ff fc22 	bl	800dea4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e660:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e664:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e666:	2d00      	cmp	r5, #0
 800e668:	dc04      	bgt.n	800e674 <xQueueGenericSend+0x1e8>
 800e66a:	e011      	b.n	800e690 <xQueueGenericSend+0x204>
				--cRxLock;
 800e66c:	1e6b      	subs	r3, r5, #1
 800e66e:	b2da      	uxtb	r2, r3
 800e670:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e672:	b16a      	cbz	r2, 800e690 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e674:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e676:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e678:	b153      	cbz	r3, 800e690 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e67a:	f001 fa91 	bl	800fba0 <xTaskRemoveFromEventList>
 800e67e:	2800      	cmp	r0, #0
 800e680:	d0f4      	beq.n	800e66c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e682:	f001 fb29 	bl	800fcd8 <vTaskMissedYield>
				--cRxLock;
 800e686:	1e6b      	subs	r3, r5, #1
 800e688:	b2da      	uxtb	r2, r3
 800e68a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e68c:	2a00      	cmp	r2, #0
 800e68e:	d1f1      	bne.n	800e674 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e690:	23ff      	movs	r3, #255	; 0xff
 800e692:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e696:	f7ff fc27 	bl	800dee8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e69a:	f001 f981 	bl	800f9a0 <xTaskResumeAll>
 800e69e:	2800      	cmp	r0, #0
 800e6a0:	d190      	bne.n	800e5c4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e6a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e6a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e6ae:	f3bf 8f4f 	dsb	sy
 800e6b2:	f3bf 8f6f 	isb	sy
 800e6b6:	e785      	b.n	800e5c4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e6b8:	a802      	add	r0, sp, #8
 800e6ba:	f001 fab9 	bl	800fc30 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e6be:	e71a      	b.n	800e4f6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e6c0:	463a      	mov	r2, r7
 800e6c2:	4641      	mov	r1, r8
 800e6c4:	4620      	mov	r0, r4
 800e6c6:	f7ff fd4f 	bl	800e168 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e6cc:	2b00      	cmp	r3, #0
 800e6ce:	d153      	bne.n	800e778 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e6d0:	b148      	cbz	r0, 800e6e6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e6d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e6d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e6de:	f3bf 8f4f 	dsb	sy
 800e6e2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e6e6:	f7ff fbff 	bl	800dee8 <vPortExitCritical>
				return pdPASS;
 800e6ea:	2001      	movs	r0, #1
}
 800e6ec:	b005      	add	sp, #20
 800e6ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e6f2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e6f4:	f7ff fbf8 	bl	800dee8 <vPortExitCritical>
					return errQUEUE_FULL;
 800e6f8:	9800      	ldr	r0, [sp, #0]
 800e6fa:	e7f7      	b.n	800e6ec <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e6fc:	f7ff fbd2 	bl	800dea4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e700:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e704:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e706:	2d00      	cmp	r5, #0
 800e708:	dd10      	ble.n	800e72c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e70a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e70e:	e003      	b.n	800e718 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e710:	1e6b      	subs	r3, r5, #1
 800e712:	b2da      	uxtb	r2, r3
 800e714:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e716:	b14a      	cbz	r2, 800e72c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e718:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e71a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e71c:	b133      	cbz	r3, 800e72c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e71e:	f001 fa3f 	bl	800fba0 <xTaskRemoveFromEventList>
 800e722:	2800      	cmp	r0, #0
 800e724:	d0f4      	beq.n	800e710 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e726:	f001 fad7 	bl	800fcd8 <vTaskMissedYield>
 800e72a:	e7f1      	b.n	800e710 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e72c:	23ff      	movs	r3, #255	; 0xff
 800e72e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e732:	f7ff fbd9 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e736:	f7ff fbb5 	bl	800dea4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e73a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e73e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e740:	2d00      	cmp	r5, #0
 800e742:	dd10      	ble.n	800e766 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e744:	f104 0610 	add.w	r6, r4, #16
 800e748:	e003      	b.n	800e752 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e74a:	1e6b      	subs	r3, r5, #1
 800e74c:	b2da      	uxtb	r2, r3
 800e74e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e750:	b14a      	cbz	r2, 800e766 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e752:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e754:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e756:	b133      	cbz	r3, 800e766 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e758:	f001 fa22 	bl	800fba0 <xTaskRemoveFromEventList>
 800e75c:	2800      	cmp	r0, #0
 800e75e:	d0f4      	beq.n	800e74a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e760:	f001 faba 	bl	800fcd8 <vTaskMissedYield>
 800e764:	e7f1      	b.n	800e74a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e766:	23ff      	movs	r3, #255	; 0xff
 800e768:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e76c:	f7ff fbbc 	bl	800dee8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e770:	f001 f916 	bl	800f9a0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e774:	2000      	movs	r0, #0
 800e776:	e7b9      	b.n	800e6ec <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e778:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e77c:	f001 fa10 	bl	800fba0 <xTaskRemoveFromEventList>
 800e780:	2800      	cmp	r0, #0
 800e782:	d0b0      	beq.n	800e6e6 <xQueueGenericSend+0x25a>
 800e784:	e7a5      	b.n	800e6d2 <xQueueGenericSend+0x246>
 800e786:	bf00      	nop

0800e788 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e788:	2800      	cmp	r0, #0
 800e78a:	d04b      	beq.n	800e824 <xQueueGenericSendFromISR+0x9c>
{
 800e78c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e790:	460e      	mov	r6, r1
 800e792:	4617      	mov	r7, r2
 800e794:	461d      	mov	r5, r3
 800e796:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e798:	b321      	cbz	r1, 800e7e4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e79a:	2d02      	cmp	r5, #2
 800e79c:	d10b      	bne.n	800e7b6 <xQueueGenericSendFromISR+0x2e>
 800e79e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e7a0:	2b01      	cmp	r3, #1
 800e7a2:	d008      	beq.n	800e7b6 <xQueueGenericSendFromISR+0x2e>
 800e7a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7a8:	f383 8811 	msr	BASEPRI, r3
 800e7ac:	f3bf 8f6f 	isb	sy
 800e7b0:	f3bf 8f4f 	dsb	sy
 800e7b4:	e7fe      	b.n	800e7b4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e7b6:	f7ff fca9 	bl	800e10c <vPortValidateInterruptPriority>
	__asm volatile
 800e7ba:	f3ef 8811 	mrs	r8, BASEPRI
 800e7be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7c2:	f383 8811 	msr	BASEPRI, r3
 800e7c6:	f3bf 8f6f 	isb	sy
 800e7ca:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e7ce:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e7d0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e7d2:	429a      	cmp	r2, r3
 800e7d4:	d312      	bcc.n	800e7fc <xQueueGenericSendFromISR+0x74>
 800e7d6:	2d02      	cmp	r5, #2
 800e7d8:	d010      	beq.n	800e7fc <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e7da:	2000      	movs	r0, #0
	__asm volatile
 800e7dc:	f388 8811 	msr	BASEPRI, r8
}
 800e7e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e7e4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e7e6:	2b00      	cmp	r3, #0
 800e7e8:	d0d7      	beq.n	800e79a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e7ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7ee:	f383 8811 	msr	BASEPRI, r3
 800e7f2:	f3bf 8f6f 	isb	sy
 800e7f6:	f3bf 8f4f 	dsb	sy
 800e7fa:	e7fe      	b.n	800e7fa <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e7fc:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e7fe:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e802:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e804:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e806:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e808:	4620      	mov	r0, r4
 800e80a:	f7ff fcad 	bl	800e168 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e80e:	1c6b      	adds	r3, r5, #1
 800e810:	d011      	beq.n	800e836 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e812:	1c6b      	adds	r3, r5, #1
 800e814:	b25b      	sxtb	r3, r3
 800e816:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e81a:	2001      	movs	r0, #1
	__asm volatile
 800e81c:	f388 8811 	msr	BASEPRI, r8
}
 800e820:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e824:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e828:	f383 8811 	msr	BASEPRI, r3
 800e82c:	f3bf 8f6f 	isb	sy
 800e830:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e834:	e7fe      	b.n	800e834 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e836:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e838:	2b00      	cmp	r3, #0
 800e83a:	d0ee      	beq.n	800e81a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e83c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e840:	f001 f9ae 	bl	800fba0 <xTaskRemoveFromEventList>
 800e844:	2800      	cmp	r0, #0
 800e846:	d0e8      	beq.n	800e81a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e848:	2f00      	cmp	r7, #0
 800e84a:	d0e6      	beq.n	800e81a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e84c:	2001      	movs	r0, #1
 800e84e:	6038      	str	r0, [r7, #0]
 800e850:	e7c4      	b.n	800e7dc <xQueueGenericSendFromISR+0x54>
 800e852:	bf00      	nop

0800e854 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e854:	b370      	cbz	r0, 800e8b4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e856:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e858:	b570      	push	{r4, r5, r6, lr}
 800e85a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e85c:	b143      	cbz	r3, 800e870 <xQueueGiveFromISR+0x1c>
 800e85e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e862:	f383 8811 	msr	BASEPRI, r3
 800e866:	f3bf 8f6f 	isb	sy
 800e86a:	f3bf 8f4f 	dsb	sy
 800e86e:	e7fe      	b.n	800e86e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e870:	6803      	ldr	r3, [r0, #0]
 800e872:	460c      	mov	r4, r1
 800e874:	b33b      	cbz	r3, 800e8c6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e876:	f7ff fc49 	bl	800e10c <vPortValidateInterruptPriority>
	__asm volatile
 800e87a:	f3ef 8511 	mrs	r5, BASEPRI
 800e87e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e882:	f383 8811 	msr	BASEPRI, r3
 800e886:	f3bf 8f6f 	isb	sy
 800e88a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e88e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e890:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e892:	429a      	cmp	r2, r3
 800e894:	d923      	bls.n	800e8de <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e896:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e89a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e89c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e89e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e8a0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e8a2:	d020      	beq.n	800e8e6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e8a4:	3301      	adds	r3, #1
 800e8a6:	b25b      	sxtb	r3, r3
 800e8a8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e8ac:	2001      	movs	r0, #1
	__asm volatile
 800e8ae:	f385 8811 	msr	BASEPRI, r5
}
 800e8b2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e8b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8b8:	f383 8811 	msr	BASEPRI, r3
 800e8bc:	f3bf 8f6f 	isb	sy
 800e8c0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e8c4:	e7fe      	b.n	800e8c4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e8c6:	6883      	ldr	r3, [r0, #8]
 800e8c8:	2b00      	cmp	r3, #0
 800e8ca:	d0d4      	beq.n	800e876 <xQueueGiveFromISR+0x22>
 800e8cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8d0:	f383 8811 	msr	BASEPRI, r3
 800e8d4:	f3bf 8f6f 	isb	sy
 800e8d8:	f3bf 8f4f 	dsb	sy
 800e8dc:	e7fe      	b.n	800e8dc <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e8de:	2000      	movs	r0, #0
	__asm volatile
 800e8e0:	f385 8811 	msr	BASEPRI, r5
}
 800e8e4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e8e6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e8e8:	2b00      	cmp	r3, #0
 800e8ea:	d0df      	beq.n	800e8ac <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8ec:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e8f0:	f001 f956 	bl	800fba0 <xTaskRemoveFromEventList>
 800e8f4:	2800      	cmp	r0, #0
 800e8f6:	d0d9      	beq.n	800e8ac <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e8f8:	2c00      	cmp	r4, #0
 800e8fa:	d0d7      	beq.n	800e8ac <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e8fc:	2001      	movs	r0, #1
 800e8fe:	6020      	str	r0, [r4, #0]
 800e900:	e7ee      	b.n	800e8e0 <xQueueGiveFromISR+0x8c>
 800e902:	bf00      	nop

0800e904 <xQueueReceive>:
{
 800e904:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e908:	b085      	sub	sp, #20
 800e90a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e90c:	2800      	cmp	r0, #0
 800e90e:	f000 815c 	beq.w	800ebca <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e912:	460f      	mov	r7, r1
 800e914:	4604      	mov	r4, r0
 800e916:	2900      	cmp	r1, #0
 800e918:	d079      	beq.n	800ea0e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e91a:	f001 f9e3 	bl	800fce4 <xTaskGetSchedulerState>
 800e91e:	2800      	cmp	r0, #0
 800e920:	f000 8081 	beq.w	800ea26 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e924:	f7ff fabe 	bl	800dea4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e928:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e92a:	2d00      	cmp	r5, #0
 800e92c:	f040 8138 	bne.w	800eba0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e930:	9b01      	ldr	r3, [sp, #4]
 800e932:	2b00      	cmp	r3, #0
 800e934:	f000 80d5 	beq.w	800eae2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e938:	a802      	add	r0, sp, #8
 800e93a:	f001 f979 	bl	800fc30 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e93e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e940:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e944:	f7ff fad0 	bl	800dee8 <vPortExitCritical>
		vTaskSuspendAll();
 800e948:	f001 f822 	bl	800f990 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e94c:	f7ff faaa 	bl	800dea4 <vPortEnterCritical>
 800e950:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e954:	2bff      	cmp	r3, #255	; 0xff
 800e956:	bf08      	it	eq
 800e958:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e95c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e960:	2bff      	cmp	r3, #255	; 0xff
 800e962:	bf08      	it	eq
 800e964:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e968:	f7ff fabe 	bl	800dee8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e96c:	a901      	add	r1, sp, #4
 800e96e:	a802      	add	r0, sp, #8
 800e970:	f001 f96a 	bl	800fc48 <xTaskCheckForTimeOut>
 800e974:	2800      	cmp	r0, #0
 800e976:	d163      	bne.n	800ea40 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e978:	f7ff fa94 	bl	800dea4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e97c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e97e:	2b00      	cmp	r3, #0
 800e980:	f000 80b5 	beq.w	800eaee <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e984:	f7ff fab0 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e988:	f7ff fa8c 	bl	800dea4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e98c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e990:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e992:	2d00      	cmp	r5, #0
 800e994:	dc04      	bgt.n	800e9a0 <xQueueReceive+0x9c>
 800e996:	e011      	b.n	800e9bc <xQueueReceive+0xb8>
			--cTxLock;
 800e998:	1e6b      	subs	r3, r5, #1
 800e99a:	b2da      	uxtb	r2, r3
 800e99c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e99e:	b16a      	cbz	r2, 800e9bc <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9a2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9a4:	b153      	cbz	r3, 800e9bc <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9a6:	f001 f8fb 	bl	800fba0 <xTaskRemoveFromEventList>
 800e9aa:	2800      	cmp	r0, #0
 800e9ac:	d0f4      	beq.n	800e998 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e9ae:	f001 f993 	bl	800fcd8 <vTaskMissedYield>
			--cTxLock;
 800e9b2:	1e6b      	subs	r3, r5, #1
 800e9b4:	b2da      	uxtb	r2, r3
 800e9b6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9b8:	2a00      	cmp	r2, #0
 800e9ba:	d1f1      	bne.n	800e9a0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e9bc:	23ff      	movs	r3, #255	; 0xff
 800e9be:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e9c2:	f7ff fa91 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9c6:	f7ff fa6d 	bl	800dea4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e9ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e9ce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9d0:	2d00      	cmp	r5, #0
 800e9d2:	dd14      	ble.n	800e9fe <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9d4:	f104 0910 	add.w	r9, r4, #16
 800e9d8:	e003      	b.n	800e9e2 <xQueueReceive+0xde>
				--cRxLock;
 800e9da:	1e6b      	subs	r3, r5, #1
 800e9dc:	b2da      	uxtb	r2, r3
 800e9de:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9e0:	b16a      	cbz	r2, 800e9fe <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9e2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9e4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9e6:	b153      	cbz	r3, 800e9fe <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9e8:	f001 f8da 	bl	800fba0 <xTaskRemoveFromEventList>
 800e9ec:	2800      	cmp	r0, #0
 800e9ee:	d0f4      	beq.n	800e9da <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e9f0:	f001 f972 	bl	800fcd8 <vTaskMissedYield>
				--cRxLock;
 800e9f4:	1e6b      	subs	r3, r5, #1
 800e9f6:	b2da      	uxtb	r2, r3
 800e9f8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9fa:	2a00      	cmp	r2, #0
 800e9fc:	d1f1      	bne.n	800e9e2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e9fe:	23ff      	movs	r3, #255	; 0xff
 800ea00:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ea04:	f7ff fa70 	bl	800dee8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ea08:	f000 ffca 	bl	800f9a0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800ea0c:	e060      	b.n	800ead0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ea0e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ea10:	2b00      	cmp	r3, #0
 800ea12:	d082      	beq.n	800e91a <xQueueReceive+0x16>
	__asm volatile
 800ea14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea18:	f383 8811 	msr	BASEPRI, r3
 800ea1c:	f3bf 8f6f 	isb	sy
 800ea20:	f3bf 8f4f 	dsb	sy
 800ea24:	e7fe      	b.n	800ea24 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ea26:	9b01      	ldr	r3, [sp, #4]
 800ea28:	2b00      	cmp	r3, #0
 800ea2a:	f43f af7b 	beq.w	800e924 <xQueueReceive+0x20>
 800ea2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea32:	f383 8811 	msr	BASEPRI, r3
 800ea36:	f3bf 8f6f 	isb	sy
 800ea3a:	f3bf 8f4f 	dsb	sy
 800ea3e:	e7fe      	b.n	800ea3e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800ea40:	f7ff fa30 	bl	800dea4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea44:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea48:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea4a:	2d00      	cmp	r5, #0
 800ea4c:	dc04      	bgt.n	800ea58 <xQueueReceive+0x154>
 800ea4e:	e011      	b.n	800ea74 <xQueueReceive+0x170>
			--cTxLock;
 800ea50:	1e6b      	subs	r3, r5, #1
 800ea52:	b2da      	uxtb	r2, r3
 800ea54:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea56:	b16a      	cbz	r2, 800ea74 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea58:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea5a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea5c:	b153      	cbz	r3, 800ea74 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea5e:	f001 f89f 	bl	800fba0 <xTaskRemoveFromEventList>
 800ea62:	2800      	cmp	r0, #0
 800ea64:	d0f4      	beq.n	800ea50 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800ea66:	f001 f937 	bl	800fcd8 <vTaskMissedYield>
			--cTxLock;
 800ea6a:	1e6b      	subs	r3, r5, #1
 800ea6c:	b2da      	uxtb	r2, r3
 800ea6e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea70:	2a00      	cmp	r2, #0
 800ea72:	d1f1      	bne.n	800ea58 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800ea74:	23ff      	movs	r3, #255	; 0xff
 800ea76:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ea7a:	f7ff fa35 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea7e:	f7ff fa11 	bl	800dea4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ea82:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea86:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea88:	2d00      	cmp	r5, #0
 800ea8a:	dd14      	ble.n	800eab6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea8c:	f104 0910 	add.w	r9, r4, #16
 800ea90:	e003      	b.n	800ea9a <xQueueReceive+0x196>
				--cRxLock;
 800ea92:	1e6b      	subs	r3, r5, #1
 800ea94:	b2da      	uxtb	r2, r3
 800ea96:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea98:	b16a      	cbz	r2, 800eab6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea9a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea9c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea9e:	b153      	cbz	r3, 800eab6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eaa0:	f001 f87e 	bl	800fba0 <xTaskRemoveFromEventList>
 800eaa4:	2800      	cmp	r0, #0
 800eaa6:	d0f4      	beq.n	800ea92 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800eaa8:	f001 f916 	bl	800fcd8 <vTaskMissedYield>
				--cRxLock;
 800eaac:	1e6b      	subs	r3, r5, #1
 800eaae:	b2da      	uxtb	r2, r3
 800eab0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eab2:	2a00      	cmp	r2, #0
 800eab4:	d1f1      	bne.n	800ea9a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800eab6:	23ff      	movs	r3, #255	; 0xff
 800eab8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eabc:	f7ff fa14 	bl	800dee8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800eac0:	f000 ff6e 	bl	800f9a0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800eac4:	f7ff f9ee 	bl	800dea4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800eac8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eaca:	b153      	cbz	r3, 800eae2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800eacc:	f7ff fa0c 	bl	800dee8 <vPortExitCritical>
		taskENTER_CRITICAL();
 800ead0:	f7ff f9e8 	bl	800dea4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ead4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ead6:	2d00      	cmp	r5, #0
 800ead8:	d162      	bne.n	800eba0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800eada:	9b01      	ldr	r3, [sp, #4]
 800eadc:	2b00      	cmp	r3, #0
 800eade:	f47f af31 	bne.w	800e944 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800eae2:	f7ff fa01 	bl	800dee8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800eae6:	2000      	movs	r0, #0
}
 800eae8:	b005      	add	sp, #20
 800eaea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800eaee:	f7ff f9fb 	bl	800dee8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800eaf2:	9901      	ldr	r1, [sp, #4]
 800eaf4:	4630      	mov	r0, r6
 800eaf6:	f000 ffc5 	bl	800fa84 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800eafa:	f7ff f9d3 	bl	800dea4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eafe:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb02:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb04:	2d00      	cmp	r5, #0
 800eb06:	dc04      	bgt.n	800eb12 <xQueueReceive+0x20e>
 800eb08:	e011      	b.n	800eb2e <xQueueReceive+0x22a>
			--cTxLock;
 800eb0a:	1e6b      	subs	r3, r5, #1
 800eb0c:	b2da      	uxtb	r2, r3
 800eb0e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb10:	b16a      	cbz	r2, 800eb2e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb12:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb14:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb16:	b153      	cbz	r3, 800eb2e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb18:	f001 f842 	bl	800fba0 <xTaskRemoveFromEventList>
 800eb1c:	2800      	cmp	r0, #0
 800eb1e:	d0f4      	beq.n	800eb0a <xQueueReceive+0x206>
						vTaskMissedYield();
 800eb20:	f001 f8da 	bl	800fcd8 <vTaskMissedYield>
			--cTxLock;
 800eb24:	1e6b      	subs	r3, r5, #1
 800eb26:	b2da      	uxtb	r2, r3
 800eb28:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb2a:	2a00      	cmp	r2, #0
 800eb2c:	d1f1      	bne.n	800eb12 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb2e:	23ff      	movs	r3, #255	; 0xff
 800eb30:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb34:	f7ff f9d8 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb38:	f7ff f9b4 	bl	800dea4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eb3c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb40:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb42:	2d00      	cmp	r5, #0
 800eb44:	dd14      	ble.n	800eb70 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb46:	f104 0910 	add.w	r9, r4, #16
 800eb4a:	e003      	b.n	800eb54 <xQueueReceive+0x250>
				--cRxLock;
 800eb4c:	1e6b      	subs	r3, r5, #1
 800eb4e:	b2da      	uxtb	r2, r3
 800eb50:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb52:	b16a      	cbz	r2, 800eb70 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb54:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb56:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb58:	b153      	cbz	r3, 800eb70 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb5a:	f001 f821 	bl	800fba0 <xTaskRemoveFromEventList>
 800eb5e:	2800      	cmp	r0, #0
 800eb60:	d0f4      	beq.n	800eb4c <xQueueReceive+0x248>
					vTaskMissedYield();
 800eb62:	f001 f8b9 	bl	800fcd8 <vTaskMissedYield>
				--cRxLock;
 800eb66:	1e6b      	subs	r3, r5, #1
 800eb68:	b2da      	uxtb	r2, r3
 800eb6a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb6c:	2a00      	cmp	r2, #0
 800eb6e:	d1f1      	bne.n	800eb54 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800eb70:	23ff      	movs	r3, #255	; 0xff
 800eb72:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eb76:	f7ff f9b7 	bl	800dee8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800eb7a:	f000 ff11 	bl	800f9a0 <xTaskResumeAll>
 800eb7e:	2800      	cmp	r0, #0
 800eb80:	d1a6      	bne.n	800ead0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800eb82:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb86:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb8a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb8e:	f3bf 8f4f 	dsb	sy
 800eb92:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800eb96:	f7ff f985 	bl	800dea4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eb9a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800eb9c:	2d00      	cmp	r5, #0
 800eb9e:	d09c      	beq.n	800eada <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800eba0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800eba2:	b152      	cbz	r2, 800ebba <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eba4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eba6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eba8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ebaa:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ebac:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ebae:	bf24      	itt	cs
 800ebb0:	6821      	ldrcs	r1, [r4, #0]
 800ebb2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ebb4:	4638      	mov	r0, r7
 800ebb6:	f01c faa4 	bl	802b102 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ebba:	3d01      	subs	r5, #1
 800ebbc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ebbe:	6923      	ldr	r3, [r4, #16]
 800ebc0:	b963      	cbnz	r3, 800ebdc <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800ebc2:	f7ff f991 	bl	800dee8 <vPortExitCritical>
				return pdPASS;
 800ebc6:	2001      	movs	r0, #1
 800ebc8:	e78e      	b.n	800eae8 <xQueueReceive+0x1e4>
 800ebca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebce:	f383 8811 	msr	BASEPRI, r3
 800ebd2:	f3bf 8f6f 	isb	sy
 800ebd6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ebda:	e7fe      	b.n	800ebda <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ebdc:	f104 0010 	add.w	r0, r4, #16
 800ebe0:	f000 ffde 	bl	800fba0 <xTaskRemoveFromEventList>
 800ebe4:	2800      	cmp	r0, #0
 800ebe6:	d0ec      	beq.n	800ebc2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800ebe8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ebec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ebf0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ebf4:	f3bf 8f4f 	dsb	sy
 800ebf8:	f3bf 8f6f 	isb	sy
 800ebfc:	e7e1      	b.n	800ebc2 <xQueueReceive+0x2be>
 800ebfe:	bf00      	nop

0800ec00 <xQueueSemaphoreTake>:
{
 800ec00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec04:	b084      	sub	sp, #16
 800ec06:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ec08:	2800      	cmp	r0, #0
 800ec0a:	d05c      	beq.n	800ecc6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ec0c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800ec0e:	4604      	mov	r4, r0
 800ec10:	b147      	cbz	r7, 800ec24 <xQueueSemaphoreTake+0x24>
 800ec12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec16:	f383 8811 	msr	BASEPRI, r3
 800ec1a:	f3bf 8f6f 	isb	sy
 800ec1e:	f3bf 8f4f 	dsb	sy
 800ec22:	e7fe      	b.n	800ec22 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ec24:	f001 f85e 	bl	800fce4 <xTaskGetSchedulerState>
 800ec28:	4605      	mov	r5, r0
 800ec2a:	2800      	cmp	r0, #0
 800ec2c:	d054      	beq.n	800ecd8 <xQueueSemaphoreTake+0xd8>
 800ec2e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec30:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800ec34:	f7ff f936 	bl	800dea4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ec38:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800ec3a:	2b00      	cmp	r3, #0
 800ec3c:	f040 8148 	bne.w	800eed0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ec40:	9b01      	ldr	r3, [sp, #4]
 800ec42:	2b00      	cmp	r3, #0
 800ec44:	f000 813a 	beq.w	800eebc <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800ec48:	2d00      	cmp	r5, #0
 800ec4a:	f000 809d 	beq.w	800ed88 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800ec4e:	f7ff f94b 	bl	800dee8 <vPortExitCritical>
		vTaskSuspendAll();
 800ec52:	f000 fe9d 	bl	800f990 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ec56:	f7ff f925 	bl	800dea4 <vPortEnterCritical>
 800ec5a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ec5e:	2bff      	cmp	r3, #255	; 0xff
 800ec60:	bf04      	itt	eq
 800ec62:	2300      	moveq	r3, #0
 800ec64:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800ec68:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ec6c:	2bff      	cmp	r3, #255	; 0xff
 800ec6e:	bf04      	itt	eq
 800ec70:	2300      	moveq	r3, #0
 800ec72:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ec76:	f7ff f937 	bl	800dee8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ec7a:	a901      	add	r1, sp, #4
 800ec7c:	a802      	add	r0, sp, #8
 800ec7e:	f000 ffe3 	bl	800fc48 <xTaskCheckForTimeOut>
 800ec82:	2800      	cmp	r0, #0
 800ec84:	d135      	bne.n	800ecf2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800ec86:	f7ff f90d 	bl	800dea4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ec8a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ec8c:	2b00      	cmp	r3, #0
 800ec8e:	f000 80a4 	beq.w	800edda <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800ec92:	f7ff f929 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ec96:	f7ff f905 	bl	800dea4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ec9a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ec9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eca0:	2d00      	cmp	r5, #0
 800eca2:	dc05      	bgt.n	800ecb0 <xQueueSemaphoreTake+0xb0>
 800eca4:	e074      	b.n	800ed90 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800eca6:	1e6b      	subs	r3, r5, #1
 800eca8:	b2da      	uxtb	r2, r3
 800ecaa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ecac:	2a00      	cmp	r2, #0
 800ecae:	d06f      	beq.n	800ed90 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ecb0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ecb2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ecb4:	2b00      	cmp	r3, #0
 800ecb6:	d06b      	beq.n	800ed90 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ecb8:	f000 ff72 	bl	800fba0 <xTaskRemoveFromEventList>
 800ecbc:	2800      	cmp	r0, #0
 800ecbe:	d0f2      	beq.n	800eca6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ecc0:	f001 f80a 	bl	800fcd8 <vTaskMissedYield>
 800ecc4:	e7ef      	b.n	800eca6 <xQueueSemaphoreTake+0xa6>
 800ecc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecca:	f383 8811 	msr	BASEPRI, r3
 800ecce:	f3bf 8f6f 	isb	sy
 800ecd2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ecd6:	e7fe      	b.n	800ecd6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ecd8:	9b01      	ldr	r3, [sp, #4]
 800ecda:	2b00      	cmp	r3, #0
 800ecdc:	f000 80d4 	beq.w	800ee88 <xQueueSemaphoreTake+0x288>
 800ece0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ece4:	f383 8811 	msr	BASEPRI, r3
 800ece8:	f3bf 8f6f 	isb	sy
 800ecec:	f3bf 8f4f 	dsb	sy
 800ecf0:	e7fe      	b.n	800ecf0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800ecf2:	f7ff f8d7 	bl	800dea4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ecf6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ecfa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ecfc:	2d00      	cmp	r5, #0
 800ecfe:	dc04      	bgt.n	800ed0a <xQueueSemaphoreTake+0x10a>
 800ed00:	e011      	b.n	800ed26 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800ed02:	1e6b      	subs	r3, r5, #1
 800ed04:	b2da      	uxtb	r2, r3
 800ed06:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed08:	b16a      	cbz	r2, 800ed26 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed0c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed0e:	b153      	cbz	r3, 800ed26 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed10:	f000 ff46 	bl	800fba0 <xTaskRemoveFromEventList>
 800ed14:	2800      	cmp	r0, #0
 800ed16:	d0f4      	beq.n	800ed02 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800ed18:	f000 ffde 	bl	800fcd8 <vTaskMissedYield>
			--cTxLock;
 800ed1c:	1e6b      	subs	r3, r5, #1
 800ed1e:	b2da      	uxtb	r2, r3
 800ed20:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed22:	2a00      	cmp	r2, #0
 800ed24:	d1f1      	bne.n	800ed0a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800ed26:	23ff      	movs	r3, #255	; 0xff
 800ed28:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ed2c:	f7ff f8dc 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ed30:	f7ff f8b8 	bl	800dea4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ed34:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed38:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed3a:	2d00      	cmp	r5, #0
 800ed3c:	dd14      	ble.n	800ed68 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed3e:	f104 0810 	add.w	r8, r4, #16
 800ed42:	e003      	b.n	800ed4c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800ed44:	1e6b      	subs	r3, r5, #1
 800ed46:	b2da      	uxtb	r2, r3
 800ed48:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed4a:	b16a      	cbz	r2, 800ed68 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed4c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed4e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed50:	b153      	cbz	r3, 800ed68 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed52:	f000 ff25 	bl	800fba0 <xTaskRemoveFromEventList>
 800ed56:	2800      	cmp	r0, #0
 800ed58:	d0f4      	beq.n	800ed44 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ed5a:	f000 ffbd 	bl	800fcd8 <vTaskMissedYield>
				--cRxLock;
 800ed5e:	1e6b      	subs	r3, r5, #1
 800ed60:	b2da      	uxtb	r2, r3
 800ed62:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed64:	2a00      	cmp	r2, #0
 800ed66:	d1f1      	bne.n	800ed4c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800ed68:	23ff      	movs	r3, #255	; 0xff
 800ed6a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ed6e:	f7ff f8bb 	bl	800dee8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ed72:	f000 fe15 	bl	800f9a0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ed76:	f7ff f895 	bl	800dea4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ed7a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ed7c:	2b00      	cmp	r3, #0
 800ed7e:	d07c      	beq.n	800ee7a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800ed80:	f7ff f8b2 	bl	800dee8 <vPortExitCritical>
	return xReturn;
 800ed84:	2501      	movs	r5, #1
 800ed86:	e755      	b.n	800ec34 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ed88:	a802      	add	r0, sp, #8
 800ed8a:	f000 ff51 	bl	800fc30 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800ed8e:	e75e      	b.n	800ec4e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ed90:	23ff      	movs	r3, #255	; 0xff
 800ed92:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ed96:	f7ff f8a7 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ed9a:	f7ff f883 	bl	800dea4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ed9e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eda2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eda4:	2d00      	cmp	r5, #0
 800eda6:	dd10      	ble.n	800edca <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eda8:	f104 0810 	add.w	r8, r4, #16
 800edac:	e003      	b.n	800edb6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800edae:	1e6b      	subs	r3, r5, #1
 800edb0:	b2da      	uxtb	r2, r3
 800edb2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800edb4:	b14a      	cbz	r2, 800edca <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800edb6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800edb8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800edba:	b133      	cbz	r3, 800edca <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800edbc:	f000 fef0 	bl	800fba0 <xTaskRemoveFromEventList>
 800edc0:	2800      	cmp	r0, #0
 800edc2:	d0f4      	beq.n	800edae <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800edc4:	f000 ff88 	bl	800fcd8 <vTaskMissedYield>
 800edc8:	e7f1      	b.n	800edae <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800edca:	23ff      	movs	r3, #255	; 0xff
 800edcc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800edd0:	f7ff f88a 	bl	800dee8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800edd4:	f000 fde4 	bl	800f9a0 <xTaskResumeAll>
 800edd8:	e7d4      	b.n	800ed84 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800edda:	f7ff f885 	bl	800dee8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800edde:	6823      	ldr	r3, [r4, #0]
 800ede0:	2b00      	cmp	r3, #0
 800ede2:	d062      	beq.n	800eeaa <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ede4:	9901      	ldr	r1, [sp, #4]
 800ede6:	4630      	mov	r0, r6
 800ede8:	f000 fe4c 	bl	800fa84 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800edec:	f7ff f85a 	bl	800dea4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800edf0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800edf4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800edf6:	2d00      	cmp	r5, #0
 800edf8:	dc04      	bgt.n	800ee04 <xQueueSemaphoreTake+0x204>
 800edfa:	e00d      	b.n	800ee18 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800edfc:	1e6b      	subs	r3, r5, #1
 800edfe:	b2da      	uxtb	r2, r3
 800ee00:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee02:	b14a      	cbz	r2, 800ee18 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee04:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee06:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee08:	b133      	cbz	r3, 800ee18 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee0a:	f000 fec9 	bl	800fba0 <xTaskRemoveFromEventList>
 800ee0e:	2800      	cmp	r0, #0
 800ee10:	d0f4      	beq.n	800edfc <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800ee12:	f000 ff61 	bl	800fcd8 <vTaskMissedYield>
 800ee16:	e7f1      	b.n	800edfc <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800ee18:	23ff      	movs	r3, #255	; 0xff
 800ee1a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ee1e:	f7ff f863 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ee22:	f7ff f83f 	bl	800dea4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ee26:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ee2a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee2c:	2d00      	cmp	r5, #0
 800ee2e:	dd10      	ble.n	800ee52 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee30:	f104 0810 	add.w	r8, r4, #16
 800ee34:	e003      	b.n	800ee3e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800ee36:	1e6b      	subs	r3, r5, #1
 800ee38:	b2da      	uxtb	r2, r3
 800ee3a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee3c:	b14a      	cbz	r2, 800ee52 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee3e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee40:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee42:	b133      	cbz	r3, 800ee52 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee44:	f000 feac 	bl	800fba0 <xTaskRemoveFromEventList>
 800ee48:	2800      	cmp	r0, #0
 800ee4a:	d0f4      	beq.n	800ee36 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800ee4c:	f000 ff44 	bl	800fcd8 <vTaskMissedYield>
 800ee50:	e7f1      	b.n	800ee36 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800ee52:	23ff      	movs	r3, #255	; 0xff
 800ee54:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ee58:	f7ff f846 	bl	800dee8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ee5c:	f000 fda0 	bl	800f9a0 <xTaskResumeAll>
 800ee60:	2800      	cmp	r0, #0
 800ee62:	d18f      	bne.n	800ed84 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800ee64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ee68:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ee6c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ee70:	f3bf 8f4f 	dsb	sy
 800ee74:	f3bf 8f6f 	isb	sy
 800ee78:	e784      	b.n	800ed84 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ee7a:	f7ff f835 	bl	800dee8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800ee7e:	b92f      	cbnz	r7, 800ee8c <xQueueSemaphoreTake+0x28c>
}
 800ee80:	4638      	mov	r0, r7
 800ee82:	b004      	add	sp, #16
 800ee84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ee88:	4607      	mov	r7, r0
 800ee8a:	e6d1      	b.n	800ec30 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800ee8c:	f7ff f80a 	bl	800dea4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800ee90:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ee92:	b119      	cbz	r1, 800ee9c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800ee94:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ee96:	6819      	ldr	r1, [r3, #0]
 800ee98:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800ee9c:	68a0      	ldr	r0, [r4, #8]
 800ee9e:	f000 ffbd 	bl	800fe1c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800eea2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800eea4:	f7ff f820 	bl	800dee8 <vPortExitCritical>
 800eea8:	e7ea      	b.n	800ee80 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800eeaa:	f7fe fffb 	bl	800dea4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800eeae:	68a0      	ldr	r0, [r4, #8]
 800eeb0:	f000 ff28 	bl	800fd04 <xTaskPriorityInherit>
 800eeb4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800eeb6:	f7ff f817 	bl	800dee8 <vPortExitCritical>
 800eeba:	e793      	b.n	800ede4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800eebc:	b197      	cbz	r7, 800eee4 <xQueueSemaphoreTake+0x2e4>
 800eebe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eec2:	f383 8811 	msr	BASEPRI, r3
 800eec6:	f3bf 8f6f 	isb	sy
 800eeca:	f3bf 8f4f 	dsb	sy
 800eece:	e7fe      	b.n	800eece <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eed0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800eed2:	3b01      	subs	r3, #1
 800eed4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eed6:	b1ca      	cbz	r2, 800ef0c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eed8:	6923      	ldr	r3, [r4, #16]
 800eeda:	b933      	cbnz	r3, 800eeea <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800eedc:	f7ff f804 	bl	800dee8 <vPortExitCritical>
				return pdPASS;
 800eee0:	2701      	movs	r7, #1
 800eee2:	e7cd      	b.n	800ee80 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800eee4:	f7ff f800 	bl	800dee8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800eee8:	e7ca      	b.n	800ee80 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eeea:	f104 0010 	add.w	r0, r4, #16
 800eeee:	f000 fe57 	bl	800fba0 <xTaskRemoveFromEventList>
 800eef2:	2800      	cmp	r0, #0
 800eef4:	d0f2      	beq.n	800eedc <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800eef6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eefa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eefe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ef02:	f3bf 8f4f 	dsb	sy
 800ef06:	f3bf 8f6f 	isb	sy
 800ef0a:	e7e7      	b.n	800eedc <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ef0c:	f000 ffda 	bl	800fec4 <pvTaskIncrementMutexHeldCount>
 800ef10:	60a0      	str	r0, [r4, #8]
 800ef12:	e7e1      	b.n	800eed8 <xQueueSemaphoreTake+0x2d8>

0800ef14 <xQueueReceiveFromISR>:
{
 800ef14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800ef18:	b310      	cbz	r0, 800ef60 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ef1a:	460e      	mov	r6, r1
 800ef1c:	4617      	mov	r7, r2
 800ef1e:	4604      	mov	r4, r0
 800ef20:	b191      	cbz	r1, 800ef48 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ef22:	f7ff f8f3 	bl	800e10c <vPortValidateInterruptPriority>
	__asm volatile
 800ef26:	f3ef 8911 	mrs	r9, BASEPRI
 800ef2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef2e:	f383 8811 	msr	BASEPRI, r3
 800ef32:	f3bf 8f6f 	isb	sy
 800ef36:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ef3a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ef3c:	b9cd      	cbnz	r5, 800ef72 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800ef3e:	4628      	mov	r0, r5
	__asm volatile
 800ef40:	f389 8811 	msr	BASEPRI, r9
}
 800ef44:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ef48:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ef4a:	2b00      	cmp	r3, #0
 800ef4c:	d0e9      	beq.n	800ef22 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800ef4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef52:	f383 8811 	msr	BASEPRI, r3
 800ef56:	f3bf 8f6f 	isb	sy
 800ef5a:	f3bf 8f4f 	dsb	sy
 800ef5e:	e7fe      	b.n	800ef5e <xQueueReceiveFromISR+0x4a>
 800ef60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef64:	f383 8811 	msr	BASEPRI, r3
 800ef68:	f3bf 8f6f 	isb	sy
 800ef6c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ef70:	e7fe      	b.n	800ef70 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800ef72:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ef76:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800ef78:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ef7c:	b152      	cbz	r2, 800ef94 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef7e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ef80:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef82:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ef84:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef86:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ef88:	bf24      	itt	cs
 800ef8a:	6821      	ldrcs	r1, [r4, #0]
 800ef8c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ef8e:	4630      	mov	r0, r6
 800ef90:	f01c f8b7 	bl	802b102 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ef94:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800ef96:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ef9a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800ef9c:	d009      	beq.n	800efb2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800ef9e:	f108 0301 	add.w	r3, r8, #1
 800efa2:	b25b      	sxtb	r3, r3
 800efa4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800efa8:	2001      	movs	r0, #1
	__asm volatile
 800efaa:	f389 8811 	msr	BASEPRI, r9
}
 800efae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800efb2:	6923      	ldr	r3, [r4, #16]
 800efb4:	2b00      	cmp	r3, #0
 800efb6:	d0f7      	beq.n	800efa8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efb8:	f104 0010 	add.w	r0, r4, #16
 800efbc:	f000 fdf0 	bl	800fba0 <xTaskRemoveFromEventList>
 800efc0:	2800      	cmp	r0, #0
 800efc2:	d0f1      	beq.n	800efa8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800efc4:	2f00      	cmp	r7, #0
 800efc6:	d0ef      	beq.n	800efa8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800efc8:	2001      	movs	r0, #1
 800efca:	6038      	str	r0, [r7, #0]
 800efcc:	e7b8      	b.n	800ef40 <xQueueReceiveFromISR+0x2c>
 800efce:	bf00      	nop

0800efd0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800efd0:	b158      	cbz	r0, 800efea <uxQueueMessagesWaiting+0x1a>
{
 800efd2:	b510      	push	{r4, lr}
 800efd4:	4604      	mov	r4, r0
 800efd6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800efd8:	f7fe ff64 	bl	800dea4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800efdc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800efde:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800efe0:	f7fe ff82 	bl	800dee8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800efe4:	9801      	ldr	r0, [sp, #4]
 800efe6:	b002      	add	sp, #8
 800efe8:	bd10      	pop	{r4, pc}
	__asm volatile
 800efea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efee:	f383 8811 	msr	BASEPRI, r3
 800eff2:	f3bf 8f6f 	isb	sy
 800eff6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800effa:	e7fe      	b.n	800effa <uxQueueMessagesWaiting+0x2a>

0800effc <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800effc:	b108      	cbz	r0, 800f002 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800effe:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f000:	4770      	bx	lr
 800f002:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f006:	f383 8811 	msr	BASEPRI, r3
 800f00a:	f3bf 8f6f 	isb	sy
 800f00e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f012:	e7fe      	b.n	800f012 <uxQueueMessagesWaitingFromISR+0x16>
 800f014:	0000      	movs	r0, r0
	...

0800f018 <vQueueDelete>:
	configASSERT( pxQueue );
 800f018:	b1f0      	cbz	r0, 800f058 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f01a:	4b21      	ldr	r3, [pc, #132]	; (800f0a0 <vQueueDelete+0x88>)
 800f01c:	685a      	ldr	r2, [r3, #4]
 800f01e:	4290      	cmp	r0, r2
 800f020:	d025      	beq.n	800f06e <vQueueDelete+0x56>
 800f022:	68da      	ldr	r2, [r3, #12]
 800f024:	4290      	cmp	r0, r2
 800f026:	d02c      	beq.n	800f082 <vQueueDelete+0x6a>
 800f028:	695a      	ldr	r2, [r3, #20]
 800f02a:	4290      	cmp	r0, r2
 800f02c:	d02b      	beq.n	800f086 <vQueueDelete+0x6e>
 800f02e:	69da      	ldr	r2, [r3, #28]
 800f030:	4290      	cmp	r0, r2
 800f032:	d02a      	beq.n	800f08a <vQueueDelete+0x72>
 800f034:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800f036:	4290      	cmp	r0, r2
 800f038:	d029      	beq.n	800f08e <vQueueDelete+0x76>
 800f03a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f03c:	4290      	cmp	r0, r2
 800f03e:	d01e      	beq.n	800f07e <vQueueDelete+0x66>
 800f040:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f042:	4290      	cmp	r0, r2
 800f044:	d025      	beq.n	800f092 <vQueueDelete+0x7a>
 800f046:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800f048:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f04a:	bf08      	it	eq
 800f04c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f04e:	d00f      	beq.n	800f070 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f050:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800f054:	b14b      	cbz	r3, 800f06a <vQueueDelete+0x52>
}
 800f056:	4770      	bx	lr
 800f058:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f05c:	f383 8811 	msr	BASEPRI, r3
 800f060:	f3bf 8f6f 	isb	sy
 800f064:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f068:	e7fe      	b.n	800f068 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800f06a:	f7fe be07 	b.w	800dc7c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f06e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f070:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800f098 <vQueueDelete+0x80>
 800f074:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f078:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800f07c:	e7e8      	b.n	800f050 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f07e:	2205      	movs	r2, #5
 800f080:	e7f6      	b.n	800f070 <vQueueDelete+0x58>
 800f082:	2201      	movs	r2, #1
 800f084:	e7f4      	b.n	800f070 <vQueueDelete+0x58>
 800f086:	2202      	movs	r2, #2
 800f088:	e7f2      	b.n	800f070 <vQueueDelete+0x58>
 800f08a:	2203      	movs	r2, #3
 800f08c:	e7f0      	b.n	800f070 <vQueueDelete+0x58>
 800f08e:	2204      	movs	r2, #4
 800f090:	e7ee      	b.n	800f070 <vQueueDelete+0x58>
 800f092:	2206      	movs	r2, #6
 800f094:	e7ec      	b.n	800f070 <vQueueDelete+0x58>
 800f096:	bf00      	nop
	...
 800f0a0:	20012730 	.word	0x20012730

0800f0a4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f0a4:	4b12      	ldr	r3, [pc, #72]	; (800f0f0 <vQueueAddToRegistry+0x4c>)
 800f0a6:	681a      	ldr	r2, [r3, #0]
 800f0a8:	b17a      	cbz	r2, 800f0ca <vQueueAddToRegistry+0x26>
 800f0aa:	689a      	ldr	r2, [r3, #8]
 800f0ac:	b162      	cbz	r2, 800f0c8 <vQueueAddToRegistry+0x24>
 800f0ae:	691a      	ldr	r2, [r3, #16]
 800f0b0:	b192      	cbz	r2, 800f0d8 <vQueueAddToRegistry+0x34>
 800f0b2:	699a      	ldr	r2, [r3, #24]
 800f0b4:	b192      	cbz	r2, 800f0dc <vQueueAddToRegistry+0x38>
 800f0b6:	6a1a      	ldr	r2, [r3, #32]
 800f0b8:	b192      	cbz	r2, 800f0e0 <vQueueAddToRegistry+0x3c>
 800f0ba:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f0bc:	b192      	cbz	r2, 800f0e4 <vQueueAddToRegistry+0x40>
 800f0be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f0c0:	b192      	cbz	r2, 800f0e8 <vQueueAddToRegistry+0x44>
 800f0c2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f0c4:	b192      	cbz	r2, 800f0ec <vQueueAddToRegistry+0x48>
	}
 800f0c6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f0c8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f0ca:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f0ce:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f0d2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f0d6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f0d8:	2202      	movs	r2, #2
 800f0da:	e7f6      	b.n	800f0ca <vQueueAddToRegistry+0x26>
 800f0dc:	2203      	movs	r2, #3
 800f0de:	e7f4      	b.n	800f0ca <vQueueAddToRegistry+0x26>
 800f0e0:	2204      	movs	r2, #4
 800f0e2:	e7f2      	b.n	800f0ca <vQueueAddToRegistry+0x26>
 800f0e4:	2205      	movs	r2, #5
 800f0e6:	e7f0      	b.n	800f0ca <vQueueAddToRegistry+0x26>
 800f0e8:	2206      	movs	r2, #6
 800f0ea:	e7ee      	b.n	800f0ca <vQueueAddToRegistry+0x26>
 800f0ec:	2207      	movs	r2, #7
 800f0ee:	e7ec      	b.n	800f0ca <vQueueAddToRegistry+0x26>
 800f0f0:	20012730 	.word	0x20012730

0800f0f4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f0f4:	b570      	push	{r4, r5, r6, lr}
 800f0f6:	4605      	mov	r5, r0
 800f0f8:	460e      	mov	r6, r1
 800f0fa:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f0fc:	f7fe fed2 	bl	800dea4 <vPortEnterCritical>
 800f100:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f104:	2bff      	cmp	r3, #255	; 0xff
 800f106:	bf04      	itt	eq
 800f108:	2300      	moveq	r3, #0
 800f10a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f10e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f112:	2bff      	cmp	r3, #255	; 0xff
 800f114:	bf04      	itt	eq
 800f116:	2300      	moveq	r3, #0
 800f118:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f11c:	f7fe fee4 	bl	800dee8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f120:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f122:	2b00      	cmp	r3, #0
 800f124:	d043      	beq.n	800f1ae <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f126:	f7fe febd 	bl	800dea4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f12a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f12e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f130:	2c00      	cmp	r4, #0
 800f132:	dd14      	ble.n	800f15e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f134:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f138:	e003      	b.n	800f142 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f13a:	1e63      	subs	r3, r4, #1
 800f13c:	b2da      	uxtb	r2, r3
 800f13e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f140:	b16a      	cbz	r2, 800f15e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f142:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f144:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f146:	b153      	cbz	r3, 800f15e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f148:	f000 fd2a 	bl	800fba0 <xTaskRemoveFromEventList>
 800f14c:	2800      	cmp	r0, #0
 800f14e:	d0f4      	beq.n	800f13a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f150:	f000 fdc2 	bl	800fcd8 <vTaskMissedYield>
			--cTxLock;
 800f154:	1e63      	subs	r3, r4, #1
 800f156:	b2da      	uxtb	r2, r3
 800f158:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f15a:	2a00      	cmp	r2, #0
 800f15c:	d1f1      	bne.n	800f142 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f15e:	23ff      	movs	r3, #255	; 0xff
 800f160:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f164:	f7fe fec0 	bl	800dee8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f168:	f7fe fe9c 	bl	800dea4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f16c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f170:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f172:	2c00      	cmp	r4, #0
 800f174:	dd14      	ble.n	800f1a0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f176:	f105 0610 	add.w	r6, r5, #16
 800f17a:	e003      	b.n	800f184 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f17c:	1e63      	subs	r3, r4, #1
 800f17e:	b2da      	uxtb	r2, r3
 800f180:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f182:	b16a      	cbz	r2, 800f1a0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f184:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f186:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f188:	b153      	cbz	r3, 800f1a0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f18a:	f000 fd09 	bl	800fba0 <xTaskRemoveFromEventList>
 800f18e:	2800      	cmp	r0, #0
 800f190:	d0f4      	beq.n	800f17c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f192:	f000 fda1 	bl	800fcd8 <vTaskMissedYield>
				--cRxLock;
 800f196:	1e63      	subs	r3, r4, #1
 800f198:	b2da      	uxtb	r2, r3
 800f19a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f19c:	2a00      	cmp	r2, #0
 800f19e:	d1f1      	bne.n	800f184 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f1a0:	23ff      	movs	r3, #255	; 0xff
 800f1a2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f1a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f1aa:	f7fe be9d 	b.w	800dee8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f1ae:	4622      	mov	r2, r4
 800f1b0:	4631      	mov	r1, r6
 800f1b2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f1b6:	f000 fca9 	bl	800fb0c <vTaskPlaceOnEventListRestricted>
 800f1ba:	e7b4      	b.n	800f126 <vQueueWaitForMessageRestricted+0x32>

0800f1bc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f1bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f1c0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f1c2:	f7fe fe6f 	bl	800dea4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f1c6:	4a34      	ldr	r2, [pc, #208]	; (800f298 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f1c8:	4e34      	ldr	r6, [pc, #208]	; (800f29c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f1ca:	6813      	ldr	r3, [r2, #0]
 800f1cc:	3301      	adds	r3, #1
 800f1ce:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f1d0:	6833      	ldr	r3, [r6, #0]
 800f1d2:	2b00      	cmp	r3, #0
 800f1d4:	d032      	beq.n	800f23c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f1d6:	4c32      	ldr	r4, [pc, #200]	; (800f2a0 <prvAddNewTaskToReadyList+0xe4>)
 800f1d8:	6823      	ldr	r3, [r4, #0]
 800f1da:	b33b      	cbz	r3, 800f22c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f1dc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f1de:	4f31      	ldr	r7, [pc, #196]	; (800f2a4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f1e0:	4a31      	ldr	r2, [pc, #196]	; (800f2a8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f1e2:	4932      	ldr	r1, [pc, #200]	; (800f2ac <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f1e4:	6813      	ldr	r3, [r2, #0]
 800f1e6:	3301      	adds	r3, #1
 800f1e8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f1ea:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f1ec:	680b      	ldr	r3, [r1, #0]
 800f1ee:	4283      	cmp	r3, r0
 800f1f0:	bf38      	it	cc
 800f1f2:	6008      	strcc	r0, [r1, #0]
 800f1f4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f1f8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f1fc:	1d29      	adds	r1, r5, #4
 800f1fe:	f7fe fdb1 	bl	800dd64 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f202:	f7fe fe71 	bl	800dee8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f206:	6823      	ldr	r3, [r4, #0]
 800f208:	b173      	cbz	r3, 800f228 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f20a:	6832      	ldr	r2, [r6, #0]
 800f20c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f20e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f210:	429a      	cmp	r2, r3
 800f212:	d209      	bcs.n	800f228 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f214:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f218:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f21c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f220:	f3bf 8f4f 	dsb	sy
 800f224:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f228:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f22c:	6833      	ldr	r3, [r6, #0]
 800f22e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f230:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f232:	4f1c      	ldr	r7, [pc, #112]	; (800f2a4 <prvAddNewTaskToReadyList+0xe8>)
 800f234:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f236:	bf98      	it	ls
 800f238:	6035      	strls	r5, [r6, #0]
 800f23a:	e7d1      	b.n	800f1e0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f23c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f23e:	6813      	ldr	r3, [r2, #0]
 800f240:	2b01      	cmp	r3, #1
 800f242:	d003      	beq.n	800f24c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f244:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f246:	4f17      	ldr	r7, [pc, #92]	; (800f2a4 <prvAddNewTaskToReadyList+0xe8>)
 800f248:	4c15      	ldr	r4, [pc, #84]	; (800f2a0 <prvAddNewTaskToReadyList+0xe4>)
 800f24a:	e7c9      	b.n	800f1e0 <prvAddNewTaskToReadyList+0x24>
 800f24c:	4f15      	ldr	r7, [pc, #84]	; (800f2a4 <prvAddNewTaskToReadyList+0xe8>)
 800f24e:	463c      	mov	r4, r7
 800f250:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f254:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f256:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f258:	f7fe fd74 	bl	800dd44 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f25c:	45a0      	cmp	r8, r4
 800f25e:	d1f9      	bne.n	800f254 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f260:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f2c4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f264:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f2c8 <prvAddNewTaskToReadyList+0x10c>
 800f268:	4c0d      	ldr	r4, [pc, #52]	; (800f2a0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f26a:	4648      	mov	r0, r9
 800f26c:	f7fe fd6a 	bl	800dd44 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f270:	4640      	mov	r0, r8
 800f272:	f7fe fd67 	bl	800dd44 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f276:	480e      	ldr	r0, [pc, #56]	; (800f2b0 <prvAddNewTaskToReadyList+0xf4>)
 800f278:	f7fe fd64 	bl	800dd44 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f27c:	480d      	ldr	r0, [pc, #52]	; (800f2b4 <prvAddNewTaskToReadyList+0xf8>)
 800f27e:	f7fe fd61 	bl	800dd44 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f282:	480d      	ldr	r0, [pc, #52]	; (800f2b8 <prvAddNewTaskToReadyList+0xfc>)
 800f284:	f7fe fd5e 	bl	800dd44 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f288:	4b0c      	ldr	r3, [pc, #48]	; (800f2bc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f28a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f28c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f290:	4b0b      	ldr	r3, [pc, #44]	; (800f2c0 <prvAddNewTaskToReadyList+0x104>)
 800f292:	f8c3 8000 	str.w	r8, [r3]
}
 800f296:	e7a3      	b.n	800f1e0 <prvAddNewTaskToReadyList+0x24>
 800f298:	20012bdc 	.word	0x20012bdc
 800f29c:	20012770 	.word	0x20012770
 800f2a0:	20012c38 	.word	0x20012c38
 800f2a4:	2001277c 	.word	0x2001277c
 800f2a8:	20012be8 	.word	0x20012be8
 800f2ac:	20012bec 	.word	0x20012bec
 800f2b0:	20012c24 	.word	0x20012c24
 800f2b4:	20012c50 	.word	0x20012c50
 800f2b8:	20012c3c 	.word	0x20012c3c
 800f2bc:	20012774 	.word	0x20012774
 800f2c0:	20012778 	.word	0x20012778
 800f2c4:	20012bf0 	.word	0x20012bf0
 800f2c8:	20012c04 	.word	0x20012c04

0800f2cc <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f2cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f2d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f2d2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f2d6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f2da:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f2dc:	4606      	mov	r6, r0
 800f2de:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f2e0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f2e2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f2e4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f2e6:	f01b fde6 	bl	802aeb6 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f2ea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f2ec:	f1a9 0904 	sub.w	r9, r9, #4
 800f2f0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f2f2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f2f6:	2d00      	cmp	r5, #0
 800f2f8:	d079      	beq.n	800f3ee <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2fa:	782b      	ldrb	r3, [r5, #0]
 800f2fc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f300:	2b00      	cmp	r3, #0
 800f302:	d03b      	beq.n	800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f304:	786b      	ldrb	r3, [r5, #1]
 800f306:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f30a:	2b00      	cmp	r3, #0
 800f30c:	d036      	beq.n	800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f30e:	78ab      	ldrb	r3, [r5, #2]
 800f310:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f314:	b393      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f316:	78eb      	ldrb	r3, [r5, #3]
 800f318:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f31c:	b373      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f31e:	792b      	ldrb	r3, [r5, #4]
 800f320:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f324:	b353      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f326:	796b      	ldrb	r3, [r5, #5]
 800f328:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f32c:	b333      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f32e:	79ab      	ldrb	r3, [r5, #6]
 800f330:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f334:	b313      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f336:	79eb      	ldrb	r3, [r5, #7]
 800f338:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f33c:	b1f3      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f33e:	7a2b      	ldrb	r3, [r5, #8]
 800f340:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f344:	b1d3      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f346:	7a6b      	ldrb	r3, [r5, #9]
 800f348:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f34c:	b1b3      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f34e:	7aab      	ldrb	r3, [r5, #10]
 800f350:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f354:	b193      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f356:	7aeb      	ldrb	r3, [r5, #11]
 800f358:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f35c:	b173      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f35e:	7b2b      	ldrb	r3, [r5, #12]
 800f360:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f364:	b153      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f366:	7b6b      	ldrb	r3, [r5, #13]
 800f368:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f36c:	b133      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f36e:	7bab      	ldrb	r3, [r5, #14]
 800f370:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f374:	b113      	cbz	r3, 800f37c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f376:	7beb      	ldrb	r3, [r5, #15]
 800f378:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f37c:	2300      	movs	r3, #0
 800f37e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f382:	9d08      	ldr	r5, [sp, #32]
 800f384:	2d37      	cmp	r5, #55	; 0x37
 800f386:	bf28      	it	cs
 800f388:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f38a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f38e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f390:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f392:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f394:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f398:	f7fe fce0 	bl	800dd5c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f39c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f3a0:	f104 0018 	add.w	r0, r4, #24
 800f3a4:	f7fe fcda 	bl	800dd5c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f3a8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f3aa:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f3ae:	4651      	mov	r1, sl
 800f3b0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f3b2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f3b4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f3b6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f3ba:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f3be:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f3c2:	f01b fd78 	bl	802aeb6 <memset>
 800f3c6:	4b0b      	ldr	r3, [pc, #44]	; (800f3f4 <prvInitialiseNewTask.constprop.0+0x128>)
 800f3c8:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f3ca:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f3ce:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f3d0:	463a      	mov	r2, r7
 800f3d2:	4631      	mov	r1, r6
 800f3d4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f3d6:	6625      	str	r5, [r4, #96]	; 0x60
 800f3d8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f3da:	f7fe fd3d 	bl	800de58 <pxPortInitialiseStack>
 800f3de:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f3e0:	f1b8 0f00 	cmp.w	r8, #0
 800f3e4:	d001      	beq.n	800f3ea <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f3e6:	f8c8 4000 	str.w	r4, [r8]
}
 800f3ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f3ee:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f3f2:	e7c6      	b.n	800f382 <prvInitialiseNewTask.constprop.0+0xb6>
 800f3f4:	20013700 	.word	0x20013700

0800f3f8 <prvIdleTask>:
{
 800f3f8:	b580      	push	{r7, lr}
 800f3fa:	4d23      	ldr	r5, [pc, #140]	; (800f488 <prvIdleTask+0x90>)
 800f3fc:	4f23      	ldr	r7, [pc, #140]	; (800f48c <prvIdleTask+0x94>)
 800f3fe:	4e24      	ldr	r6, [pc, #144]	; (800f490 <prvIdleTask+0x98>)
 800f400:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f494 <prvIdleTask+0x9c>
				taskYIELD();
 800f404:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f408:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f40c:	682b      	ldr	r3, [r5, #0]
 800f40e:	b35b      	cbz	r3, 800f468 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f410:	f7fe fd48 	bl	800dea4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f414:	68fb      	ldr	r3, [r7, #12]
 800f416:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f418:	1d20      	adds	r0, r4, #4
 800f41a:	f7fe fccb 	bl	800ddb4 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f41e:	6833      	ldr	r3, [r6, #0]
 800f420:	3b01      	subs	r3, #1
 800f422:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f424:	682b      	ldr	r3, [r5, #0]
 800f426:	3b01      	subs	r3, #1
 800f428:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f42a:	f7fe fd5d 	bl	800dee8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f42e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f432:	f01b fd89 	bl	802af48 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f436:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f43a:	b163      	cbz	r3, 800f456 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f43c:	2b01      	cmp	r3, #1
 800f43e:	d01e      	beq.n	800f47e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f440:	2b02      	cmp	r3, #2
 800f442:	d0e3      	beq.n	800f40c <prvIdleTask+0x14>
 800f444:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f448:	f383 8811 	msr	BASEPRI, r3
 800f44c:	f3bf 8f6f 	isb	sy
 800f450:	f3bf 8f4f 	dsb	sy
 800f454:	e7fe      	b.n	800f454 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f456:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f458:	f7fe fc10 	bl	800dc7c <vPortFree>
				vPortFree( pxTCB );
 800f45c:	4620      	mov	r0, r4
 800f45e:	f7fe fc0d 	bl	800dc7c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f462:	682b      	ldr	r3, [r5, #0]
 800f464:	2b00      	cmp	r3, #0
 800f466:	d1d3      	bne.n	800f410 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f468:	f8d8 3000 	ldr.w	r3, [r8]
 800f46c:	2b01      	cmp	r3, #1
 800f46e:	d9cd      	bls.n	800f40c <prvIdleTask+0x14>
				taskYIELD();
 800f470:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f474:	f3bf 8f4f 	dsb	sy
 800f478:	f3bf 8f6f 	isb	sy
 800f47c:	e7c6      	b.n	800f40c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f47e:	4620      	mov	r0, r4
 800f480:	f7fe fbfc 	bl	800dc7c <vPortFree>
 800f484:	e7c2      	b.n	800f40c <prvIdleTask+0x14>
 800f486:	bf00      	nop
 800f488:	20012be0 	.word	0x20012be0
 800f48c:	20012c50 	.word	0x20012c50
 800f490:	20012bdc 	.word	0x20012bdc
 800f494:	2001277c 	.word	0x2001277c

0800f498 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f49c:	4b47      	ldr	r3, [pc, #284]	; (800f5bc <xTaskIncrementTick.part.0+0x124>)
 800f49e:	681e      	ldr	r6, [r3, #0]
 800f4a0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f4a2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f4a4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f4a6:	2e00      	cmp	r6, #0
 800f4a8:	d040      	beq.n	800f52c <xTaskIncrementTick.part.0+0x94>
 800f4aa:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f5d0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f4ae:	f8db 3000 	ldr.w	r3, [fp]
 800f4b2:	429e      	cmp	r6, r3
 800f4b4:	d347      	bcc.n	800f546 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f4b6:	4f42      	ldr	r7, [pc, #264]	; (800f5c0 <xTaskIncrementTick.part.0+0x128>)
 800f4b8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f5d4 <xTaskIncrementTick.part.0+0x13c>
 800f4bc:	683b      	ldr	r3, [r7, #0]
 800f4be:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f5d8 <xTaskIncrementTick.part.0+0x140>
 800f4c2:	681d      	ldr	r5, [r3, #0]
 800f4c4:	2d00      	cmp	r5, #0
 800f4c6:	d073      	beq.n	800f5b0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f4c8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f5dc <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f4cc:	2500      	movs	r5, #0
 800f4ce:	e022      	b.n	800f516 <xTaskIncrementTick.part.0+0x7e>
 800f4d0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f4d2:	f7fe fc6f 	bl	800ddb4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f4d6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f4d8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f4da:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f4de:	b113      	cbz	r3, 800f4e6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f4e0:	f7fe fc68 	bl	800ddb4 <uxListRemove>
 800f4e4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f4e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f4e8:	f8d8 2000 	ldr.w	r2, [r8]
 800f4ec:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f4f0:	4293      	cmp	r3, r2
 800f4f2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f4f6:	bf88      	it	hi
 800f4f8:	f8c8 3000 	strhi.w	r3, [r8]
 800f4fc:	f7fe fc32 	bl	800dd64 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f500:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f504:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f506:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f508:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f50a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f50c:	4291      	cmp	r1, r2
 800f50e:	bf28      	it	cs
 800f510:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f512:	2b00      	cmp	r3, #0
 800f514:	d04c      	beq.n	800f5b0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f516:	683b      	ldr	r3, [r7, #0]
 800f518:	68db      	ldr	r3, [r3, #12]
 800f51a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f51c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f51e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f520:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f522:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f524:	d2d4      	bcs.n	800f4d0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f526:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f52a:	e011      	b.n	800f550 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f52c:	4b24      	ldr	r3, [pc, #144]	; (800f5c0 <xTaskIncrementTick.part.0+0x128>)
 800f52e:	681a      	ldr	r2, [r3, #0]
 800f530:	6812      	ldr	r2, [r2, #0]
 800f532:	b30a      	cbz	r2, 800f578 <xTaskIncrementTick.part.0+0xe0>
 800f534:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f538:	f383 8811 	msr	BASEPRI, r3
 800f53c:	f3bf 8f6f 	isb	sy
 800f540:	f3bf 8f4f 	dsb	sy
 800f544:	e7fe      	b.n	800f544 <xTaskIncrementTick.part.0+0xac>
 800f546:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f5d4 <xTaskIncrementTick.part.0+0x13c>
 800f54a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f5d8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f54e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f550:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f554:	491b      	ldr	r1, [pc, #108]	; (800f5c4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f556:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f558:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f55c:	009b      	lsls	r3, r3, #2
 800f55e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f562:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f564:	2a02      	cmp	r2, #2
 800f566:	bf28      	it	cs
 800f568:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f56a:	2b00      	cmp	r3, #0
}
 800f56c:	bf0c      	ite	eq
 800f56e:	4628      	moveq	r0, r5
 800f570:	2001      	movne	r0, #1
 800f572:	b003      	add	sp, #12
 800f574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f578:	4a13      	ldr	r2, [pc, #76]	; (800f5c8 <xTaskIncrementTick.part.0+0x130>)
 800f57a:	6818      	ldr	r0, [r3, #0]
 800f57c:	6811      	ldr	r1, [r2, #0]
 800f57e:	6019      	str	r1, [r3, #0]
 800f580:	4912      	ldr	r1, [pc, #72]	; (800f5cc <xTaskIncrementTick.part.0+0x134>)
 800f582:	6010      	str	r0, [r2, #0]
 800f584:	680a      	ldr	r2, [r1, #0]
 800f586:	3201      	adds	r2, #1
 800f588:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f58a:	681a      	ldr	r2, [r3, #0]
 800f58c:	6812      	ldr	r2, [r2, #0]
 800f58e:	b932      	cbnz	r2, 800f59e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f590:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f5d0 <xTaskIncrementTick.part.0+0x138>
 800f594:	f04f 33ff 	mov.w	r3, #4294967295
 800f598:	f8cb 3000 	str.w	r3, [fp]
 800f59c:	e787      	b.n	800f4ae <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f59e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f5a0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f5d0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5a4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f5a6:	68db      	ldr	r3, [r3, #12]
 800f5a8:	685b      	ldr	r3, [r3, #4]
 800f5aa:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f5ae:	e77e      	b.n	800f4ae <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f5b0:	f04f 33ff 	mov.w	r3, #4294967295
 800f5b4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f5b8:	e7ca      	b.n	800f550 <xTaskIncrementTick.part.0+0xb8>
 800f5ba:	bf00      	nop
 800f5bc:	20012c64 	.word	0x20012c64
 800f5c0:	20012774 	.word	0x20012774
 800f5c4:	20012c68 	.word	0x20012c68
 800f5c8:	20012778 	.word	0x20012778
 800f5cc:	20012c1c 	.word	0x20012c1c
 800f5d0:	20012c18 	.word	0x20012c18
 800f5d4:	2001277c 	.word	0x2001277c
 800f5d8:	20012770 	.word	0x20012770
 800f5dc:	20012bec 	.word	0x20012bec

0800f5e0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f5e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f5e4:	4d41      	ldr	r5, [pc, #260]	; (800f6ec <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f5e6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f5e8:	f7fe fc5c 	bl	800dea4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f5ec:	682b      	ldr	r3, [r5, #0]
 800f5ee:	3b01      	subs	r3, #1
 800f5f0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f5f2:	682b      	ldr	r3, [r5, #0]
 800f5f4:	2b00      	cmp	r3, #0
 800f5f6:	d161      	bne.n	800f6bc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f5f8:	4b3d      	ldr	r3, [pc, #244]	; (800f6f0 <xTaskResumeAll.part.0+0x110>)
 800f5fa:	681b      	ldr	r3, [r3, #0]
 800f5fc:	2b00      	cmp	r3, #0
 800f5fe:	d05d      	beq.n	800f6bc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f600:	4e3c      	ldr	r6, [pc, #240]	; (800f6f4 <xTaskResumeAll.part.0+0x114>)
 800f602:	6833      	ldr	r3, [r6, #0]
 800f604:	2b00      	cmp	r3, #0
 800f606:	d06e      	beq.n	800f6e6 <xTaskResumeAll.part.0+0x106>
 800f608:	4f3b      	ldr	r7, [pc, #236]	; (800f6f8 <xTaskResumeAll.part.0+0x118>)
 800f60a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f708 <xTaskResumeAll.part.0+0x128>
 800f60e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f70c <xTaskResumeAll.part.0+0x12c>
 800f612:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f710 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f616:	68f3      	ldr	r3, [r6, #12]
 800f618:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f61a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f61e:	f104 0018 	add.w	r0, r4, #24
 800f622:	f7fe fbc7 	bl	800ddb4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f626:	4658      	mov	r0, fp
 800f628:	f7fe fbc4 	bl	800ddb4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f62c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f62e:	683a      	ldr	r2, [r7, #0]
 800f630:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f634:	4293      	cmp	r3, r2
 800f636:	4659      	mov	r1, fp
 800f638:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f63c:	bf88      	it	hi
 800f63e:	603b      	strhi	r3, [r7, #0]
 800f640:	f7fe fb90 	bl	800dd64 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f644:	f8d8 3000 	ldr.w	r3, [r8]
 800f648:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f64a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f64c:	429a      	cmp	r2, r3
 800f64e:	d33d      	bcc.n	800f6cc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f650:	2301      	movs	r3, #1
 800f652:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f656:	6833      	ldr	r3, [r6, #0]
 800f658:	2b00      	cmp	r3, #0
 800f65a:	d1dc      	bne.n	800f616 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f65c:	4b27      	ldr	r3, [pc, #156]	; (800f6fc <xTaskResumeAll.part.0+0x11c>)
 800f65e:	681a      	ldr	r2, [r3, #0]
 800f660:	6812      	ldr	r2, [r2, #0]
 800f662:	2a00      	cmp	r2, #0
 800f664:	d03a      	beq.n	800f6dc <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f666:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f668:	4b25      	ldr	r3, [pc, #148]	; (800f700 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f66a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f66c:	68d2      	ldr	r2, [r2, #12]
 800f66e:	6852      	ldr	r2, [r2, #4]
 800f670:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f672:	4e24      	ldr	r6, [pc, #144]	; (800f704 <xTaskResumeAll.part.0+0x124>)
 800f674:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f676:	b194      	cbz	r4, 800f69e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f678:	2701      	movs	r7, #1
 800f67a:	e006      	b.n	800f68a <xTaskResumeAll.part.0+0xaa>
 800f67c:	f7ff ff0c 	bl	800f498 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f680:	b108      	cbz	r0, 800f686 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f682:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f686:	3c01      	subs	r4, #1
 800f688:	d008      	beq.n	800f69c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f68a:	682b      	ldr	r3, [r5, #0]
 800f68c:	2b00      	cmp	r3, #0
 800f68e:	d0f5      	beq.n	800f67c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f690:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f692:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f694:	f103 0301 	add.w	r3, r3, #1
 800f698:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f69a:	d1f6      	bne.n	800f68a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f69c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f69e:	f8da 3000 	ldr.w	r3, [sl]
 800f6a2:	b15b      	cbz	r3, 800f6bc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f6a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f6a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f6ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f6b0:	f3bf 8f4f 	dsb	sy
 800f6b4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f6b8:	2001      	movs	r0, #1
 800f6ba:	e000      	b.n	800f6be <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f6bc:	2000      	movs	r0, #0
 800f6be:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f6c0:	f7fe fc12 	bl	800dee8 <vPortExitCritical>
}
 800f6c4:	9801      	ldr	r0, [sp, #4]
 800f6c6:	b003      	add	sp, #12
 800f6c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f6cc:	6833      	ldr	r3, [r6, #0]
 800f6ce:	2b00      	cmp	r3, #0
 800f6d0:	d1a1      	bne.n	800f616 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f6d2:	4b0a      	ldr	r3, [pc, #40]	; (800f6fc <xTaskResumeAll.part.0+0x11c>)
 800f6d4:	681a      	ldr	r2, [r3, #0]
 800f6d6:	6812      	ldr	r2, [r2, #0]
 800f6d8:	2a00      	cmp	r2, #0
 800f6da:	d1c4      	bne.n	800f666 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f6dc:	4b08      	ldr	r3, [pc, #32]	; (800f700 <xTaskResumeAll.part.0+0x120>)
 800f6de:	f04f 32ff 	mov.w	r2, #4294967295
 800f6e2:	601a      	str	r2, [r3, #0]
 800f6e4:	e7c5      	b.n	800f672 <xTaskResumeAll.part.0+0x92>
 800f6e6:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f710 <xTaskResumeAll.part.0+0x130>
 800f6ea:	e7c2      	b.n	800f672 <xTaskResumeAll.part.0+0x92>
 800f6ec:	20012be4 	.word	0x20012be4
 800f6f0:	20012bdc 	.word	0x20012bdc
 800f6f4:	20012c24 	.word	0x20012c24
 800f6f8:	20012bec 	.word	0x20012bec
 800f6fc:	20012774 	.word	0x20012774
 800f700:	20012c18 	.word	0x20012c18
 800f704:	20012c20 	.word	0x20012c20
 800f708:	2001277c 	.word	0x2001277c
 800f70c:	20012770 	.word	0x20012770
 800f710:	20012c68 	.word	0x20012c68

0800f714 <xTaskCreateStatic>:
	{
 800f714:	b530      	push	{r4, r5, lr}
 800f716:	b087      	sub	sp, #28
 800f718:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f71a:	b1c4      	cbz	r4, 800f74e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f71c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f71e:	b16d      	cbz	r5, 800f73c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f720:	25ac      	movs	r5, #172	; 0xac
 800f722:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f724:	9d05      	ldr	r5, [sp, #20]
 800f726:	2dac      	cmp	r5, #172	; 0xac
 800f728:	d01a      	beq.n	800f760 <xTaskCreateStatic+0x4c>
 800f72a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f72e:	f383 8811 	msr	BASEPRI, r3
 800f732:	f3bf 8f6f 	isb	sy
 800f736:	f3bf 8f4f 	dsb	sy
 800f73a:	e7fe      	b.n	800f73a <xTaskCreateStatic+0x26>
 800f73c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f740:	f383 8811 	msr	BASEPRI, r3
 800f744:	f3bf 8f6f 	isb	sy
 800f748:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f74c:	e7fe      	b.n	800f74c <xTaskCreateStatic+0x38>
 800f74e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f752:	f383 8811 	msr	BASEPRI, r3
 800f756:	f3bf 8f6f 	isb	sy
 800f75a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f75e:	e7fe      	b.n	800f75e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f760:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f762:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f764:	2402      	movs	r4, #2
 800f766:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f76a:	ac04      	add	r4, sp, #16
 800f76c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f770:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f772:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f774:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f776:	f7ff fda9 	bl	800f2cc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f77a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f77c:	f7ff fd1e 	bl	800f1bc <prvAddNewTaskToReadyList>
	}
 800f780:	9804      	ldr	r0, [sp, #16]
 800f782:	b007      	add	sp, #28
 800f784:	bd30      	pop	{r4, r5, pc}
 800f786:	bf00      	nop

0800f788 <xTaskCreate>:
	{
 800f788:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f78c:	4607      	mov	r7, r0
 800f78e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f790:	0090      	lsls	r0, r2, #2
	{
 800f792:	4615      	mov	r5, r2
 800f794:	4688      	mov	r8, r1
 800f796:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f798:	f7fe f9b4 	bl	800db04 <pvPortMalloc>
			if( pxStack != NULL )
 800f79c:	b1d8      	cbz	r0, 800f7d6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f79e:	4604      	mov	r4, r0
 800f7a0:	20ac      	movs	r0, #172	; 0xac
 800f7a2:	f7fe f9af 	bl	800db04 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f7a6:	4606      	mov	r6, r0
 800f7a8:	b1d0      	cbz	r0, 800f7e0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f7aa:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f7ac:	2400      	movs	r4, #0
 800f7ae:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f7b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f7b4:	9401      	str	r4, [sp, #4]
 800f7b6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f7b8:	9602      	str	r6, [sp, #8]
 800f7ba:	464b      	mov	r3, r9
 800f7bc:	462a      	mov	r2, r5
 800f7be:	4641      	mov	r1, r8
 800f7c0:	4638      	mov	r0, r7
 800f7c2:	9400      	str	r4, [sp, #0]
 800f7c4:	f7ff fd82 	bl	800f2cc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f7c8:	4630      	mov	r0, r6
 800f7ca:	f7ff fcf7 	bl	800f1bc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f7ce:	2001      	movs	r0, #1
	}
 800f7d0:	b005      	add	sp, #20
 800f7d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f7d6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f7da:	b005      	add	sp, #20
 800f7dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f7e0:	4620      	mov	r0, r4
 800f7e2:	f7fe fa4b 	bl	800dc7c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f7e6:	f04f 30ff 	mov.w	r0, #4294967295
 800f7ea:	e7f1      	b.n	800f7d0 <xTaskCreate+0x48>

0800f7ec <vTaskDelay>:
	{
 800f7ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f7ee:	b950      	cbnz	r0, 800f806 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f7f0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f7f4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f7f8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f7fc:	f3bf 8f4f 	dsb	sy
 800f800:	f3bf 8f6f 	isb	sy
	}
 800f804:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f806:	4d1e      	ldr	r5, [pc, #120]	; (800f880 <vTaskDelay+0x94>)
 800f808:	682b      	ldr	r3, [r5, #0]
 800f80a:	b143      	cbz	r3, 800f81e <vTaskDelay+0x32>
 800f80c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f810:	f383 8811 	msr	BASEPRI, r3
 800f814:	f3bf 8f6f 	isb	sy
 800f818:	f3bf 8f4f 	dsb	sy
 800f81c:	e7fe      	b.n	800f81c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f81e:	682b      	ldr	r3, [r5, #0]
 800f820:	3301      	adds	r3, #1
 800f822:	4604      	mov	r4, r0
 800f824:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f826:	4b17      	ldr	r3, [pc, #92]	; (800f884 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f828:	4e17      	ldr	r6, [pc, #92]	; (800f888 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f82a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f82c:	6830      	ldr	r0, [r6, #0]
 800f82e:	3004      	adds	r0, #4
 800f830:	f7fe fac0 	bl	800ddb4 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f834:	6833      	ldr	r3, [r6, #0]
 800f836:	19e4      	adds	r4, r4, r7
 800f838:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f83a:	d310      	bcc.n	800f85e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f83c:	4b13      	ldr	r3, [pc, #76]	; (800f88c <vTaskDelay+0xa0>)
 800f83e:	6818      	ldr	r0, [r3, #0]
 800f840:	6831      	ldr	r1, [r6, #0]
 800f842:	3104      	adds	r1, #4
 800f844:	f7fe fa9e 	bl	800dd84 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f848:	682b      	ldr	r3, [r5, #0]
 800f84a:	b9a3      	cbnz	r3, 800f876 <vTaskDelay+0x8a>
 800f84c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f850:	f383 8811 	msr	BASEPRI, r3
 800f854:	f3bf 8f6f 	isb	sy
 800f858:	f3bf 8f4f 	dsb	sy
 800f85c:	e7fe      	b.n	800f85c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f85e:	4b0c      	ldr	r3, [pc, #48]	; (800f890 <vTaskDelay+0xa4>)
 800f860:	6818      	ldr	r0, [r3, #0]
 800f862:	6831      	ldr	r1, [r6, #0]
 800f864:	3104      	adds	r1, #4
 800f866:	f7fe fa8d 	bl	800dd84 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f86a:	4b0a      	ldr	r3, [pc, #40]	; (800f894 <vTaskDelay+0xa8>)
 800f86c:	681a      	ldr	r2, [r3, #0]
 800f86e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f870:	bf38      	it	cc
 800f872:	601c      	strcc	r4, [r3, #0]
 800f874:	e7e8      	b.n	800f848 <vTaskDelay+0x5c>
 800f876:	f7ff feb3 	bl	800f5e0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f87a:	2800      	cmp	r0, #0
 800f87c:	d0b8      	beq.n	800f7f0 <vTaskDelay+0x4>
	}
 800f87e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f880:	20012be4 	.word	0x20012be4
 800f884:	20012c64 	.word	0x20012c64
 800f888:	20012770 	.word	0x20012770
 800f88c:	20012778 	.word	0x20012778
 800f890:	20012774 	.word	0x20012774
 800f894:	20012c18 	.word	0x20012c18

0800f898 <vTaskStartScheduler>:
{
 800f898:	b530      	push	{r4, r5, lr}
 800f89a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f89c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f89e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f8a0:	a906      	add	r1, sp, #24
 800f8a2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f8a4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f8a8:	f7fe f90e 	bl	800dac8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f8ac:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f8b0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f8b2:	b1bb      	cbz	r3, 800f8e4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f8b4:	b16d      	cbz	r5, 800f8d2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f8b6:	21ac      	movs	r1, #172	; 0xac
 800f8b8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f8ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f8bc:	29ac      	cmp	r1, #172	; 0xac
 800f8be:	d01a      	beq.n	800f8f6 <vTaskStartScheduler+0x5e>
 800f8c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8c4:	f383 8811 	msr	BASEPRI, r3
 800f8c8:	f3bf 8f6f 	isb	sy
 800f8cc:	f3bf 8f4f 	dsb	sy
 800f8d0:	e7fe      	b.n	800f8d0 <vTaskStartScheduler+0x38>
 800f8d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8d6:	f383 8811 	msr	BASEPRI, r3
 800f8da:	f3bf 8f6f 	isb	sy
 800f8de:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f8e2:	e7fe      	b.n	800f8e2 <vTaskStartScheduler+0x4a>
 800f8e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8e8:	f383 8811 	msr	BASEPRI, r3
 800f8ec:	f3bf 8f6f 	isb	sy
 800f8f0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f8f4:	e7fe      	b.n	800f8f4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f8f6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f8f8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f8fa:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f8fc:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f900:	4623      	mov	r3, r4
 800f902:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f906:	491b      	ldr	r1, [pc, #108]	; (800f974 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f908:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f90a:	9400      	str	r4, [sp, #0]
 800f90c:	481a      	ldr	r0, [pc, #104]	; (800f978 <vTaskStartScheduler+0xe0>)
 800f90e:	f7ff fcdd 	bl	800f2cc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f912:	4628      	mov	r0, r5
 800f914:	f7ff fc52 	bl	800f1bc <prvAddNewTaskToReadyList>
		return xReturn;
 800f918:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f91a:	b1eb      	cbz	r3, 800f958 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f91c:	f000 fc6e 	bl	80101fc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f920:	2801      	cmp	r0, #1
 800f922:	d11b      	bne.n	800f95c <vTaskStartScheduler+0xc4>
 800f924:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f928:	f383 8811 	msr	BASEPRI, r3
 800f92c:	f3bf 8f6f 	isb	sy
 800f930:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f934:	4b11      	ldr	r3, [pc, #68]	; (800f97c <vTaskStartScheduler+0xe4>)
 800f936:	4a12      	ldr	r2, [pc, #72]	; (800f980 <vTaskStartScheduler+0xe8>)
 800f938:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f93a:	4912      	ldr	r1, [pc, #72]	; (800f984 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f93c:	3358      	adds	r3, #88	; 0x58
 800f93e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f940:	4a11      	ldr	r2, [pc, #68]	; (800f988 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f942:	4b12      	ldr	r3, [pc, #72]	; (800f98c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f944:	f04f 35ff 	mov.w	r5, #4294967295
 800f948:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f94a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f94c:	601c      	str	r4, [r3, #0]
}
 800f94e:	b00b      	add	sp, #44	; 0x2c
 800f950:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f954:	f7fe bb38 	b.w	800dfc8 <xPortStartScheduler>
}
 800f958:	b00b      	add	sp, #44	; 0x2c
 800f95a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f95c:	3001      	adds	r0, #1
 800f95e:	d1fb      	bne.n	800f958 <vTaskStartScheduler+0xc0>
 800f960:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f964:	f383 8811 	msr	BASEPRI, r3
 800f968:	f3bf 8f6f 	isb	sy
 800f96c:	f3bf 8f4f 	dsb	sy
 800f970:	e7fe      	b.n	800f970 <vTaskStartScheduler+0xd8>
 800f972:	bf00      	nop
 800f974:	0802eb4c 	.word	0x0802eb4c
 800f978:	0800f3f9 	.word	0x0800f3f9
 800f97c:	20012770 	.word	0x20012770
 800f980:	20000160 	.word	0x20000160
 800f984:	20012c18 	.word	0x20012c18
 800f988:	20012c38 	.word	0x20012c38
 800f98c:	20012c64 	.word	0x20012c64

0800f990 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f990:	4a02      	ldr	r2, [pc, #8]	; (800f99c <vTaskSuspendAll+0xc>)
 800f992:	6813      	ldr	r3, [r2, #0]
 800f994:	3301      	adds	r3, #1
 800f996:	6013      	str	r3, [r2, #0]
}
 800f998:	4770      	bx	lr
 800f99a:	bf00      	nop
 800f99c:	20012be4 	.word	0x20012be4

0800f9a0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f9a0:	4b06      	ldr	r3, [pc, #24]	; (800f9bc <xTaskResumeAll+0x1c>)
 800f9a2:	681b      	ldr	r3, [r3, #0]
 800f9a4:	b943      	cbnz	r3, 800f9b8 <xTaskResumeAll+0x18>
 800f9a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9aa:	f383 8811 	msr	BASEPRI, r3
 800f9ae:	f3bf 8f6f 	isb	sy
 800f9b2:	f3bf 8f4f 	dsb	sy
 800f9b6:	e7fe      	b.n	800f9b6 <xTaskResumeAll+0x16>
 800f9b8:	f7ff be12 	b.w	800f5e0 <xTaskResumeAll.part.0>
 800f9bc:	20012be4 	.word	0x20012be4

0800f9c0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f9c0:	4b01      	ldr	r3, [pc, #4]	; (800f9c8 <xTaskGetTickCount+0x8>)
 800f9c2:	6818      	ldr	r0, [r3, #0]
}
 800f9c4:	4770      	bx	lr
 800f9c6:	bf00      	nop
 800f9c8:	20012c64 	.word	0x20012c64

0800f9cc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f9cc:	4b05      	ldr	r3, [pc, #20]	; (800f9e4 <xTaskIncrementTick+0x18>)
 800f9ce:	681b      	ldr	r3, [r3, #0]
 800f9d0:	b90b      	cbnz	r3, 800f9d6 <xTaskIncrementTick+0xa>
 800f9d2:	f7ff bd61 	b.w	800f498 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f9d6:	4a04      	ldr	r2, [pc, #16]	; (800f9e8 <xTaskIncrementTick+0x1c>)
 800f9d8:	6813      	ldr	r3, [r2, #0]
 800f9da:	3301      	adds	r3, #1
}
 800f9dc:	2000      	movs	r0, #0
		++xPendedTicks;
 800f9de:	6013      	str	r3, [r2, #0]
}
 800f9e0:	4770      	bx	lr
 800f9e2:	bf00      	nop
 800f9e4:	20012be4 	.word	0x20012be4
 800f9e8:	20012c20 	.word	0x20012c20

0800f9ec <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f9ec:	4b1f      	ldr	r3, [pc, #124]	; (800fa6c <vTaskSwitchContext+0x80>)
 800f9ee:	681b      	ldr	r3, [r3, #0]
 800f9f0:	b11b      	cbz	r3, 800f9fa <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f9f2:	4b1f      	ldr	r3, [pc, #124]	; (800fa70 <vTaskSwitchContext+0x84>)
 800f9f4:	2201      	movs	r2, #1
 800f9f6:	601a      	str	r2, [r3, #0]
 800f9f8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f9fa:	4a1d      	ldr	r2, [pc, #116]	; (800fa70 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9fc:	491d      	ldr	r1, [pc, #116]	; (800fa74 <vTaskSwitchContext+0x88>)
{
 800f9fe:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa00:	4c1d      	ldr	r4, [pc, #116]	; (800fa78 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800fa02:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa04:	6823      	ldr	r3, [r4, #0]
 800fa06:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fa0a:	0092      	lsls	r2, r2, #2
 800fa0c:	0098      	lsls	r0, r3, #2
 800fa0e:	588a      	ldr	r2, [r1, r2]
 800fa10:	b942      	cbnz	r2, 800fa24 <vTaskSwitchContext+0x38>
 800fa12:	b313      	cbz	r3, 800fa5a <vTaskSwitchContext+0x6e>
 800fa14:	3b01      	subs	r3, #1
 800fa16:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fa1a:	0098      	lsls	r0, r3, #2
 800fa1c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800fa20:	2a00      	cmp	r2, #0
 800fa22:	d0f6      	beq.n	800fa12 <vTaskSwitchContext+0x26>
 800fa24:	4418      	add	r0, r3
 800fa26:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800fa2a:	4662      	mov	r2, ip
 800fa2c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fa30:	6849      	ldr	r1, [r1, #4]
 800fa32:	f8cc 1004 	str.w	r1, [ip, #4]
 800fa36:	3208      	adds	r2, #8
 800fa38:	4291      	cmp	r1, r2
 800fa3a:	bf08      	it	eq
 800fa3c:	6849      	ldreq	r1, [r1, #4]
 800fa3e:	4a0f      	ldr	r2, [pc, #60]	; (800fa7c <vTaskSwitchContext+0x90>)
 800fa40:	bf08      	it	eq
 800fa42:	f8cc 1004 	streq.w	r1, [ip, #4]
 800fa46:	68c9      	ldr	r1, [r1, #12]
 800fa48:	6011      	str	r1, [r2, #0]
 800fa4a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fa4c:	6813      	ldr	r3, [r2, #0]
 800fa4e:	4a0c      	ldr	r2, [pc, #48]	; (800fa80 <vTaskSwitchContext+0x94>)
}
 800fa50:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fa54:	3358      	adds	r3, #88	; 0x58
 800fa56:	6013      	str	r3, [r2, #0]
}
 800fa58:	4770      	bx	lr
 800fa5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa5e:	f383 8811 	msr	BASEPRI, r3
 800fa62:	f3bf 8f6f 	isb	sy
 800fa66:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa6a:	e7fe      	b.n	800fa6a <vTaskSwitchContext+0x7e>
 800fa6c:	20012be4 	.word	0x20012be4
 800fa70:	20012c68 	.word	0x20012c68
 800fa74:	2001277c 	.word	0x2001277c
 800fa78:	20012bec 	.word	0x20012bec
 800fa7c:	20012770 	.word	0x20012770
 800fa80:	20000160 	.word	0x20000160

0800fa84 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800fa84:	b1d0      	cbz	r0, 800fabc <vTaskPlaceOnEventList+0x38>
{
 800fa86:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fa88:	4d1a      	ldr	r5, [pc, #104]	; (800faf4 <vTaskPlaceOnEventList+0x70>)
 800fa8a:	460c      	mov	r4, r1
 800fa8c:	6829      	ldr	r1, [r5, #0]
 800fa8e:	3118      	adds	r1, #24
 800fa90:	f7fe f978 	bl	800dd84 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fa94:	4b18      	ldr	r3, [pc, #96]	; (800faf8 <vTaskPlaceOnEventList+0x74>)
 800fa96:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fa98:	6828      	ldr	r0, [r5, #0]
 800fa9a:	3004      	adds	r0, #4
 800fa9c:	f7fe f98a 	bl	800ddb4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800faa0:	1c63      	adds	r3, r4, #1
 800faa2:	d014      	beq.n	800face <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800faa4:	682b      	ldr	r3, [r5, #0]
 800faa6:	19a4      	adds	r4, r4, r6
 800faa8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800faaa:	d317      	bcc.n	800fadc <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800faac:	4b13      	ldr	r3, [pc, #76]	; (800fafc <vTaskPlaceOnEventList+0x78>)
 800faae:	6818      	ldr	r0, [r3, #0]
 800fab0:	6829      	ldr	r1, [r5, #0]
}
 800fab2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fab6:	3104      	adds	r1, #4
 800fab8:	f7fe b964 	b.w	800dd84 <vListInsert>
 800fabc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fac0:	f383 8811 	msr	BASEPRI, r3
 800fac4:	f3bf 8f6f 	isb	sy
 800fac8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800facc:	e7fe      	b.n	800facc <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800face:	6829      	ldr	r1, [r5, #0]
 800fad0:	480b      	ldr	r0, [pc, #44]	; (800fb00 <vTaskPlaceOnEventList+0x7c>)
}
 800fad2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fad6:	3104      	adds	r1, #4
 800fad8:	f7fe b944 	b.w	800dd64 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fadc:	4b09      	ldr	r3, [pc, #36]	; (800fb04 <vTaskPlaceOnEventList+0x80>)
 800fade:	6818      	ldr	r0, [r3, #0]
 800fae0:	6829      	ldr	r1, [r5, #0]
 800fae2:	3104      	adds	r1, #4
 800fae4:	f7fe f94e 	bl	800dd84 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fae8:	4b07      	ldr	r3, [pc, #28]	; (800fb08 <vTaskPlaceOnEventList+0x84>)
 800faea:	681a      	ldr	r2, [r3, #0]
 800faec:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800faee:	bf38      	it	cc
 800faf0:	601c      	strcc	r4, [r3, #0]
}
 800faf2:	bd70      	pop	{r4, r5, r6, pc}
 800faf4:	20012770 	.word	0x20012770
 800faf8:	20012c64 	.word	0x20012c64
 800fafc:	20012778 	.word	0x20012778
 800fb00:	20012c3c 	.word	0x20012c3c
 800fb04:	20012774 	.word	0x20012774
 800fb08:	20012c18 	.word	0x20012c18

0800fb0c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800fb0c:	b330      	cbz	r0, 800fb5c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800fb0e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fb10:	4e1d      	ldr	r6, [pc, #116]	; (800fb88 <vTaskPlaceOnEventListRestricted+0x7c>)
 800fb12:	460c      	mov	r4, r1
 800fb14:	6831      	ldr	r1, [r6, #0]
 800fb16:	4615      	mov	r5, r2
 800fb18:	3118      	adds	r1, #24
 800fb1a:	f7fe f923 	bl	800dd64 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800fb1e:	4b1b      	ldr	r3, [pc, #108]	; (800fb8c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800fb20:	b985      	cbnz	r5, 800fb44 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800fb22:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb24:	6830      	ldr	r0, [r6, #0]
 800fb26:	3004      	adds	r0, #4
 800fb28:	f7fe f944 	bl	800ddb4 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fb2c:	6833      	ldr	r3, [r6, #0]
 800fb2e:	1964      	adds	r4, r4, r5
 800fb30:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fb32:	d31c      	bcc.n	800fb6e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb34:	4b16      	ldr	r3, [pc, #88]	; (800fb90 <vTaskPlaceOnEventListRestricted+0x84>)
 800fb36:	6818      	ldr	r0, [r3, #0]
 800fb38:	6831      	ldr	r1, [r6, #0]
	}
 800fb3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb3e:	3104      	adds	r1, #4
 800fb40:	f7fe b920 	b.w	800dd84 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fb44:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb46:	6830      	ldr	r0, [r6, #0]
 800fb48:	3004      	adds	r0, #4
 800fb4a:	f7fe f933 	bl	800ddb4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb4e:	6831      	ldr	r1, [r6, #0]
 800fb50:	4810      	ldr	r0, [pc, #64]	; (800fb94 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800fb52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb56:	3104      	adds	r1, #4
 800fb58:	f7fe b904 	b.w	800dd64 <vListInsertEnd>
 800fb5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb60:	f383 8811 	msr	BASEPRI, r3
 800fb64:	f3bf 8f6f 	isb	sy
 800fb68:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800fb6c:	e7fe      	b.n	800fb6c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb6e:	4b0a      	ldr	r3, [pc, #40]	; (800fb98 <vTaskPlaceOnEventListRestricted+0x8c>)
 800fb70:	6818      	ldr	r0, [r3, #0]
 800fb72:	6831      	ldr	r1, [r6, #0]
 800fb74:	3104      	adds	r1, #4
 800fb76:	f7fe f905 	bl	800dd84 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fb7a:	4b08      	ldr	r3, [pc, #32]	; (800fb9c <vTaskPlaceOnEventListRestricted+0x90>)
 800fb7c:	681a      	ldr	r2, [r3, #0]
 800fb7e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fb80:	bf38      	it	cc
 800fb82:	601c      	strcc	r4, [r3, #0]
	}
 800fb84:	bd70      	pop	{r4, r5, r6, pc}
 800fb86:	bf00      	nop
 800fb88:	20012770 	.word	0x20012770
 800fb8c:	20012c64 	.word	0x20012c64
 800fb90:	20012778 	.word	0x20012778
 800fb94:	20012c3c 	.word	0x20012c3c
 800fb98:	20012774 	.word	0x20012774
 800fb9c:	20012c18 	.word	0x20012c18

0800fba0 <xTaskRemoveFromEventList>:
{
 800fba0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fba2:	68c3      	ldr	r3, [r0, #12]
 800fba4:	68dc      	ldr	r4, [r3, #12]
{
 800fba6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800fba8:	2c00      	cmp	r4, #0
 800fbaa:	d02b      	beq.n	800fc04 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fbac:	f104 0518 	add.w	r5, r4, #24
 800fbb0:	4628      	mov	r0, r5
 800fbb2:	f7fe f8ff 	bl	800ddb4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fbb6:	4b18      	ldr	r3, [pc, #96]	; (800fc18 <xTaskRemoveFromEventList+0x78>)
 800fbb8:	681b      	ldr	r3, [r3, #0]
 800fbba:	b17b      	cbz	r3, 800fbdc <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fbbc:	4817      	ldr	r0, [pc, #92]	; (800fc1c <xTaskRemoveFromEventList+0x7c>)
 800fbbe:	4629      	mov	r1, r5
 800fbc0:	f7fe f8d0 	bl	800dd64 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800fbc4:	4b16      	ldr	r3, [pc, #88]	; (800fc20 <xTaskRemoveFromEventList+0x80>)
 800fbc6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fbc8:	681b      	ldr	r3, [r3, #0]
 800fbca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fbcc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fbce:	bf85      	ittet	hi
 800fbd0:	4b14      	ldrhi	r3, [pc, #80]	; (800fc24 <xTaskRemoveFromEventList+0x84>)
 800fbd2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800fbd4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800fbd6:	6018      	strhi	r0, [r3, #0]
}
 800fbd8:	b003      	add	sp, #12
 800fbda:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800fbdc:	1d21      	adds	r1, r4, #4
 800fbde:	4608      	mov	r0, r1
 800fbe0:	9101      	str	r1, [sp, #4]
 800fbe2:	f7fe f8e7 	bl	800ddb4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800fbe6:	4a10      	ldr	r2, [pc, #64]	; (800fc28 <xTaskRemoveFromEventList+0x88>)
 800fbe8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fbea:	6810      	ldr	r0, [r2, #0]
 800fbec:	9901      	ldr	r1, [sp, #4]
 800fbee:	4283      	cmp	r3, r0
 800fbf0:	480e      	ldr	r0, [pc, #56]	; (800fc2c <xTaskRemoveFromEventList+0x8c>)
 800fbf2:	bf88      	it	hi
 800fbf4:	6013      	strhi	r3, [r2, #0]
 800fbf6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fbfa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fbfe:	f7fe f8b1 	bl	800dd64 <vListInsertEnd>
 800fc02:	e7df      	b.n	800fbc4 <xTaskRemoveFromEventList+0x24>
 800fc04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc08:	f383 8811 	msr	BASEPRI, r3
 800fc0c:	f3bf 8f6f 	isb	sy
 800fc10:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800fc14:	e7fe      	b.n	800fc14 <xTaskRemoveFromEventList+0x74>
 800fc16:	bf00      	nop
 800fc18:	20012be4 	.word	0x20012be4
 800fc1c:	20012c24 	.word	0x20012c24
 800fc20:	20012770 	.word	0x20012770
 800fc24:	20012c68 	.word	0x20012c68
 800fc28:	20012bec 	.word	0x20012bec
 800fc2c:	2001277c 	.word	0x2001277c

0800fc30 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fc30:	4a03      	ldr	r2, [pc, #12]	; (800fc40 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fc32:	4b04      	ldr	r3, [pc, #16]	; (800fc44 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fc34:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fc36:	681b      	ldr	r3, [r3, #0]
 800fc38:	e9c0 2300 	strd	r2, r3, [r0]
}
 800fc3c:	4770      	bx	lr
 800fc3e:	bf00      	nop
 800fc40:	20012c1c 	.word	0x20012c1c
 800fc44:	20012c64 	.word	0x20012c64

0800fc48 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800fc48:	b328      	cbz	r0, 800fc96 <xTaskCheckForTimeOut+0x4e>
{
 800fc4a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fc4c:	460d      	mov	r5, r1
 800fc4e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800fc50:	b1c1      	cbz	r1, 800fc84 <xTaskCheckForTimeOut+0x3c>
 800fc52:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800fc54:	f7fe f926 	bl	800dea4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800fc58:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800fc5a:	4a1d      	ldr	r2, [pc, #116]	; (800fcd0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800fc5c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800fc5e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800fc60:	d030      	beq.n	800fcc4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fc62:	f8df c070 	ldr.w	ip, [pc, #112]	; 800fcd4 <xTaskCheckForTimeOut+0x8c>
 800fc66:	e9d4 6000 	ldrd	r6, r0, [r4]
 800fc6a:	f8dc 7000 	ldr.w	r7, [ip]
 800fc6e:	42be      	cmp	r6, r7
 800fc70:	d01a      	beq.n	800fca8 <xTaskCheckForTimeOut+0x60>
 800fc72:	4288      	cmp	r0, r1
 800fc74:	d818      	bhi.n	800fca8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800fc76:	2001      	movs	r0, #1
 800fc78:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fc7a:	f7fe f935 	bl	800dee8 <vPortExitCritical>
}
 800fc7e:	9801      	ldr	r0, [sp, #4]
 800fc80:	b003      	add	sp, #12
 800fc82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc88:	f383 8811 	msr	BASEPRI, r3
 800fc8c:	f3bf 8f6f 	isb	sy
 800fc90:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800fc94:	e7fe      	b.n	800fc94 <xTaskCheckForTimeOut+0x4c>
 800fc96:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc9a:	f383 8811 	msr	BASEPRI, r3
 800fc9e:	f3bf 8f6f 	isb	sy
 800fca2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800fca6:	e7fe      	b.n	800fca6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fca8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fcac:	4573      	cmp	r3, lr
 800fcae:	d90b      	bls.n	800fcc8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800fcb0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fcb2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fcb6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800fcb8:	4403      	add	r3, r0
 800fcba:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800fcbc:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fcbe:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800fcc2:	e7d9      	b.n	800fc78 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800fcc4:	2000      	movs	r0, #0
 800fcc6:	e7d7      	b.n	800fc78 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800fcc8:	2300      	movs	r3, #0
 800fcca:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800fccc:	2001      	movs	r0, #1
 800fcce:	e7d3      	b.n	800fc78 <xTaskCheckForTimeOut+0x30>
 800fcd0:	20012c64 	.word	0x20012c64
 800fcd4:	20012c1c 	.word	0x20012c1c

0800fcd8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fcd8:	4b01      	ldr	r3, [pc, #4]	; (800fce0 <vTaskMissedYield+0x8>)
 800fcda:	2201      	movs	r2, #1
 800fcdc:	601a      	str	r2, [r3, #0]
}
 800fcde:	4770      	bx	lr
 800fce0:	20012c68 	.word	0x20012c68

0800fce4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fce4:	4b05      	ldr	r3, [pc, #20]	; (800fcfc <xTaskGetSchedulerState+0x18>)
 800fce6:	681b      	ldr	r3, [r3, #0]
 800fce8:	b133      	cbz	r3, 800fcf8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fcea:	4b05      	ldr	r3, [pc, #20]	; (800fd00 <xTaskGetSchedulerState+0x1c>)
 800fcec:	6818      	ldr	r0, [r3, #0]
 800fcee:	fab0 f080 	clz	r0, r0
 800fcf2:	0940      	lsrs	r0, r0, #5
 800fcf4:	0040      	lsls	r0, r0, #1
 800fcf6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fcf8:	2001      	movs	r0, #1
	}
 800fcfa:	4770      	bx	lr
 800fcfc:	20012c38 	.word	0x20012c38
 800fd00:	20012be4 	.word	0x20012be4

0800fd04 <xTaskPriorityInherit>:
	{
 800fd04:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fd06:	4604      	mov	r4, r0
	{
 800fd08:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800fd0a:	b1c8      	cbz	r0, 800fd40 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fd0c:	4d1d      	ldr	r5, [pc, #116]	; (800fd84 <xTaskPriorityInherit+0x80>)
 800fd0e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fd10:	682a      	ldr	r2, [r5, #0]
 800fd12:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fd14:	4293      	cmp	r3, r2
 800fd16:	d215      	bcs.n	800fd44 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fd18:	6982      	ldr	r2, [r0, #24]
 800fd1a:	2a00      	cmp	r2, #0
 800fd1c:	db04      	blt.n	800fd28 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd1e:	682a      	ldr	r2, [r5, #0]
 800fd20:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fd22:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800fd26:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fd28:	4e17      	ldr	r6, [pc, #92]	; (800fd88 <xTaskPriorityInherit+0x84>)
 800fd2a:	6962      	ldr	r2, [r4, #20]
 800fd2c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fd30:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800fd34:	429a      	cmp	r2, r3
 800fd36:	d00e      	beq.n	800fd56 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fd38:	682b      	ldr	r3, [r5, #0]
 800fd3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd3c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800fd3e:	2001      	movs	r0, #1
	}
 800fd40:	b002      	add	sp, #8
 800fd42:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fd44:	682b      	ldr	r3, [r5, #0]
 800fd46:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fd48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd4a:	4298      	cmp	r0, r3
 800fd4c:	bf2c      	ite	cs
 800fd4e:	2000      	movcs	r0, #0
 800fd50:	2001      	movcc	r0, #1
	}
 800fd52:	b002      	add	sp, #8
 800fd54:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fd56:	1d21      	adds	r1, r4, #4
 800fd58:	4608      	mov	r0, r1
 800fd5a:	9101      	str	r1, [sp, #4]
 800fd5c:	f7fe f82a 	bl	800ddb4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fd60:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fd62:	4b0a      	ldr	r3, [pc, #40]	; (800fd8c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fd64:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fd66:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fd68:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fd6a:	4290      	cmp	r0, r2
 800fd6c:	bf88      	it	hi
 800fd6e:	6018      	strhi	r0, [r3, #0]
 800fd70:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fd74:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800fd78:	9901      	ldr	r1, [sp, #4]
 800fd7a:	f7fd fff3 	bl	800dd64 <vListInsertEnd>
				xReturn = pdTRUE;
 800fd7e:	2001      	movs	r0, #1
 800fd80:	e7de      	b.n	800fd40 <xTaskPriorityInherit+0x3c>
 800fd82:	bf00      	nop
 800fd84:	20012770 	.word	0x20012770
 800fd88:	2001277c 	.word	0x2001277c
 800fd8c:	20012bec 	.word	0x20012bec

0800fd90 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800fd90:	b318      	cbz	r0, 800fdda <xTaskPriorityDisinherit+0x4a>
	{
 800fd92:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800fd94:	4b1e      	ldr	r3, [pc, #120]	; (800fe10 <xTaskPriorityDisinherit+0x80>)
 800fd96:	681c      	ldr	r4, [r3, #0]
 800fd98:	4284      	cmp	r4, r0
	{
 800fd9a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800fd9c:	d008      	beq.n	800fdb0 <xTaskPriorityDisinherit+0x20>
 800fd9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fda2:	f383 8811 	msr	BASEPRI, r3
 800fda6:	f3bf 8f6f 	isb	sy
 800fdaa:	f3bf 8f4f 	dsb	sy
 800fdae:	e7fe      	b.n	800fdae <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800fdb0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800fdb2:	b14b      	cbz	r3, 800fdc8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fdb4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fdb6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800fdb8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fdba:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fdbc:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fdbe:	d000      	beq.n	800fdc2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fdc0:	b16b      	cbz	r3, 800fdde <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800fdc2:	2000      	movs	r0, #0
	}
 800fdc4:	b002      	add	sp, #8
 800fdc6:	bd10      	pop	{r4, pc}
 800fdc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdcc:	f383 8811 	msr	BASEPRI, r3
 800fdd0:	f3bf 8f6f 	isb	sy
 800fdd4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fdd8:	e7fe      	b.n	800fdd8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800fdda:	2000      	movs	r0, #0
	}
 800fddc:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fdde:	1d21      	adds	r1, r4, #4
 800fde0:	4608      	mov	r0, r1
 800fde2:	9101      	str	r1, [sp, #4]
 800fde4:	f7fd ffe6 	bl	800ddb4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fde8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800fdea:	4a0a      	ldr	r2, [pc, #40]	; (800fe14 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fdec:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fdee:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800fdf2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800fdf4:	6810      	ldr	r0, [r2, #0]
 800fdf6:	9901      	ldr	r1, [sp, #4]
 800fdf8:	4283      	cmp	r3, r0
 800fdfa:	4807      	ldr	r0, [pc, #28]	; (800fe18 <xTaskPriorityDisinherit+0x88>)
 800fdfc:	bf88      	it	hi
 800fdfe:	6013      	strhi	r3, [r2, #0]
 800fe00:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fe04:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fe08:	f7fd ffac 	bl	800dd64 <vListInsertEnd>
					xReturn = pdTRUE;
 800fe0c:	2001      	movs	r0, #1
		return xReturn;
 800fe0e:	e7d9      	b.n	800fdc4 <xTaskPriorityDisinherit+0x34>
 800fe10:	20012770 	.word	0x20012770
 800fe14:	20012bec 	.word	0x20012bec
 800fe18:	2001277c 	.word	0x2001277c

0800fe1c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800fe1c:	2800      	cmp	r0, #0
 800fe1e:	d041      	beq.n	800fea4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800fe20:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800fe22:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800fe24:	b083      	sub	sp, #12
 800fe26:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800fe28:	b153      	cbz	r3, 800fe40 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800fe2a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800fe2c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fe2e:	4281      	cmp	r1, r0
 800fe30:	bf38      	it	cc
 800fe32:	4601      	movcc	r1, r0
 800fe34:	428a      	cmp	r2, r1
 800fe36:	d001      	beq.n	800fe3c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fe38:	2b01      	cmp	r3, #1
 800fe3a:	d00a      	beq.n	800fe52 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800fe3c:	b003      	add	sp, #12
 800fe3e:	bd30      	pop	{r4, r5, pc}
 800fe40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe44:	f383 8811 	msr	BASEPRI, r3
 800fe48:	f3bf 8f6f 	isb	sy
 800fe4c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fe50:	e7fe      	b.n	800fe50 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800fe52:	4b19      	ldr	r3, [pc, #100]	; (800feb8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800fe54:	681b      	ldr	r3, [r3, #0]
 800fe56:	42a3      	cmp	r3, r4
 800fe58:	d025      	beq.n	800fea6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fe5a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800fe5c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fe5e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fe60:	bfa8      	it	ge
 800fe62:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fe66:	4d15      	ldr	r5, [pc, #84]	; (800febc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fe68:	bfa8      	it	ge
 800fe6a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fe6c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800fe70:	6961      	ldr	r1, [r4, #20]
 800fe72:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800fe76:	4299      	cmp	r1, r3
 800fe78:	d1e0      	bne.n	800fe3c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fe7a:	1d21      	adds	r1, r4, #4
 800fe7c:	4608      	mov	r0, r1
 800fe7e:	9101      	str	r1, [sp, #4]
 800fe80:	f7fd ff98 	bl	800ddb4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800fe84:	4b0e      	ldr	r3, [pc, #56]	; (800fec0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800fe86:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800fe88:	681a      	ldr	r2, [r3, #0]
 800fe8a:	9901      	ldr	r1, [sp, #4]
 800fe8c:	4290      	cmp	r0, r2
 800fe8e:	bf88      	it	hi
 800fe90:	6018      	strhi	r0, [r3, #0]
 800fe92:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fe96:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800fe9a:	b003      	add	sp, #12
 800fe9c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800fea0:	f7fd bf60 	b.w	800dd64 <vListInsertEnd>
 800fea4:	4770      	bx	lr
 800fea6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800feaa:	f383 8811 	msr	BASEPRI, r3
 800feae:	f3bf 8f6f 	isb	sy
 800feb2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800feb6:	e7fe      	b.n	800feb6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800feb8:	20012770 	.word	0x20012770
 800febc:	2001277c 	.word	0x2001277c
 800fec0:	20012bec 	.word	0x20012bec

0800fec4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800fec4:	4b04      	ldr	r3, [pc, #16]	; (800fed8 <pvTaskIncrementMutexHeldCount+0x14>)
 800fec6:	681a      	ldr	r2, [r3, #0]
 800fec8:	b11a      	cbz	r2, 800fed2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800feca:	6819      	ldr	r1, [r3, #0]
 800fecc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800fece:	3201      	adds	r2, #1
 800fed0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800fed2:	6818      	ldr	r0, [r3, #0]
	}
 800fed4:	4770      	bx	lr
 800fed6:	bf00      	nop
 800fed8:	20012770 	.word	0x20012770

0800fedc <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800fedc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fee0:	4e22      	ldr	r6, [pc, #136]	; (800ff6c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800fee2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800ff74 <prvSwitchTimerLists+0x98>
{
 800fee6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800fee8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800feec:	e00d      	b.n	800ff0a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800feee:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fef0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fef2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fef4:	1d25      	adds	r5, r4, #4
 800fef6:	4628      	mov	r0, r5
 800fef8:	f7fd ff5c 	bl	800ddb4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fefc:	6a23      	ldr	r3, [r4, #32]
 800fefe:	4620      	mov	r0, r4
 800ff00:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ff02:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ff06:	075b      	lsls	r3, r3, #29
 800ff08:	d40a      	bmi.n	800ff20 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ff0a:	6833      	ldr	r3, [r6, #0]
 800ff0c:	681a      	ldr	r2, [r3, #0]
 800ff0e:	2a00      	cmp	r2, #0
 800ff10:	d1ed      	bne.n	800feee <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800ff12:	4a17      	ldr	r2, [pc, #92]	; (800ff70 <prvSwitchTimerLists+0x94>)
 800ff14:	6811      	ldr	r1, [r2, #0]
 800ff16:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800ff18:	6013      	str	r3, [r2, #0]
}
 800ff1a:	b005      	add	sp, #20
 800ff1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ff20:	69a3      	ldr	r3, [r4, #24]
 800ff22:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800ff24:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ff26:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800ff28:	d205      	bcs.n	800ff36 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ff2a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ff2c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ff2e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ff30:	f7fd ff28 	bl	800dd84 <vListInsert>
 800ff34:	e7e9      	b.n	800ff0a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800ff36:	f8d9 3000 	ldr.w	r3, [r9]
 800ff3a:	b16b      	cbz	r3, 800ff58 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800ff3c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ff40:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ff42:	f7ff fecf 	bl	800fce4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ff46:	2300      	movs	r3, #0
 800ff48:	f8d9 0000 	ldr.w	r0, [r9]
 800ff4c:	461a      	mov	r2, r3
 800ff4e:	4669      	mov	r1, sp
 800ff50:	f7fe fa9c 	bl	800e48c <xQueueGenericSend>
				configASSERT( xResult );
 800ff54:	2800      	cmp	r0, #0
 800ff56:	d1d8      	bne.n	800ff0a <prvSwitchTimerLists+0x2e>
 800ff58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff5c:	f383 8811 	msr	BASEPRI, r3
 800ff60:	f3bf 8f6f 	isb	sy
 800ff64:	f3bf 8f4f 	dsb	sy
 800ff68:	e7fe      	b.n	800ff68 <prvSwitchTimerLists+0x8c>
 800ff6a:	bf00      	nop
 800ff6c:	20012c6c 	.word	0x20012c6c
 800ff70:	20012c70 	.word	0x20012c70
 800ff74:	20012d90 	.word	0x20012d90

0800ff78 <prvTimerTask>:
{
 800ff78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff7c:	4e9b      	ldr	r6, [pc, #620]	; (80101ec <prvTimerTask+0x274>)
 800ff7e:	4d9c      	ldr	r5, [pc, #624]	; (80101f0 <prvTimerTask+0x278>)
 800ff80:	4c9c      	ldr	r4, [pc, #624]	; (80101f4 <prvTimerTask+0x27c>)
 800ff82:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800ff84:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800ff88:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ff8c:	6833      	ldr	r3, [r6, #0]
 800ff8e:	681f      	ldr	r7, [r3, #0]
 800ff90:	2f00      	cmp	r7, #0
 800ff92:	f000 80a8 	beq.w	80100e6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ff96:	68db      	ldr	r3, [r3, #12]
 800ff98:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800ff9a:	f7ff fcf9 	bl	800f990 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800ff9e:	f7ff fd0f 	bl	800f9c0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ffa2:	682a      	ldr	r2, [r5, #0]
 800ffa4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800ffa6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ffa8:	f0c0 80ae 	bcc.w	8010108 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ffac:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800ffae:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ffb0:	f240 80b4 	bls.w	801011c <prvTimerTask+0x1a4>
 800ffb4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ffb6:	6820      	ldr	r0, [r4, #0]
 800ffb8:	eba7 010a 	sub.w	r1, r7, sl
 800ffbc:	f7ff f89a 	bl	800f0f4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800ffc0:	f7ff fcee 	bl	800f9a0 <xTaskResumeAll>
 800ffc4:	b928      	cbnz	r0, 800ffd2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800ffc6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800ffca:	f3bf 8f4f 	dsb	sy
 800ffce:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ffd2:	6820      	ldr	r0, [r4, #0]
 800ffd4:	2200      	movs	r2, #0
 800ffd6:	a902      	add	r1, sp, #8
 800ffd8:	f7fe fc94 	bl	800e904 <xQueueReceive>
 800ffdc:	2800      	cmp	r0, #0
 800ffde:	d0d5      	beq.n	800ff8c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ffe0:	9b02      	ldr	r3, [sp, #8]
 800ffe2:	2b00      	cmp	r3, #0
 800ffe4:	db76      	blt.n	80100d4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ffe6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ffe8:	697b      	ldr	r3, [r7, #20]
 800ffea:	b113      	cbz	r3, 800fff2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ffec:	1d38      	adds	r0, r7, #4
 800ffee:	f7fd fee1 	bl	800ddb4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800fff2:	f7ff fce5 	bl	800f9c0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fff6:	682b      	ldr	r3, [r5, #0]
 800fff8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800fffa:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fffc:	f0c0 808b 	bcc.w	8010116 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8010000:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8010002:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8010006:	2b09      	cmp	r3, #9
 8010008:	d8e3      	bhi.n	800ffd2 <prvTimerTask+0x5a>
 801000a:	e8df f003 	tbb	[pc, r3]
 801000e:	0505      	.short	0x0505
 8010010:	5a3d5305 	.word	0x5a3d5305
 8010014:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010018:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801001c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801001e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010020:	f043 0301 	orr.w	r3, r3, #1
 8010024:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8010028:	9b03      	ldr	r3, [sp, #12]
 801002a:	1899      	adds	r1, r3, r2
 801002c:	bf2c      	ite	cs
 801002e:	2001      	movcs	r0, #1
 8010030:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8010032:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010034:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010036:	f200 808c 	bhi.w	8010152 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801003a:	ebaa 0303 	sub.w	r3, sl, r3
 801003e:	429a      	cmp	r2, r3
 8010040:	d832      	bhi.n	80100a8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010042:	6a3b      	ldr	r3, [r7, #32]
 8010044:	4638      	mov	r0, r7
 8010046:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010048:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801004c:	075b      	lsls	r3, r3, #29
 801004e:	d5c0      	bpl.n	800ffd2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8010050:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010052:	9903      	ldr	r1, [sp, #12]
 8010054:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8010056:	b172      	cbz	r2, 8010076 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010058:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801005a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801005e:	2300      	movs	r3, #0
 8010060:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010062:	f7ff fe3f 	bl	800fce4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010066:	2300      	movs	r3, #0
 8010068:	6820      	ldr	r0, [r4, #0]
 801006a:	461a      	mov	r2, r3
 801006c:	a906      	add	r1, sp, #24
 801006e:	f7fe fa0d 	bl	800e48c <xQueueGenericSend>
							configASSERT( xResult );
 8010072:	2800      	cmp	r0, #0
 8010074:	d1ad      	bne.n	800ffd2 <prvTimerTask+0x5a>
 8010076:	f04f 0350 	mov.w	r3, #80	; 0x50
 801007a:	f383 8811 	msr	BASEPRI, r3
 801007e:	f3bf 8f6f 	isb	sy
 8010082:	f3bf 8f4f 	dsb	sy
 8010086:	e7fe      	b.n	8010086 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010088:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801008c:	f043 0301 	orr.w	r3, r3, #1
 8010090:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8010094:	9b03      	ldr	r3, [sp, #12]
 8010096:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010098:	2b00      	cmp	r3, #0
 801009a:	f000 809d 	beq.w	80101d8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801009e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 80100a0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80100a2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80100a4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 80100a6:	d85e      	bhi.n	8010166 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80100a8:	4b53      	ldr	r3, [pc, #332]	; (80101f8 <prvTimerTask+0x280>)
 80100aa:	1d39      	adds	r1, r7, #4
 80100ac:	6818      	ldr	r0, [r3, #0]
 80100ae:	f7fd fe69 	bl	800dd84 <vListInsert>
	return xProcessTimerNow;
 80100b2:	e78e      	b.n	800ffd2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80100b4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80100b8:	f023 0301 	bic.w	r3, r3, #1
 80100bc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 80100c0:	e787      	b.n	800ffd2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80100c2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80100c6:	079a      	lsls	r2, r3, #30
 80100c8:	d552      	bpl.n	8010170 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80100ca:	f023 0301 	bic.w	r3, r3, #1
 80100ce:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80100d2:	e77e      	b.n	800ffd2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80100d4:	9b03      	ldr	r3, [sp, #12]
 80100d6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80100da:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80100dc:	9b02      	ldr	r3, [sp, #8]
 80100de:	2b00      	cmp	r3, #0
 80100e0:	f6ff af77 	blt.w	800ffd2 <prvTimerTask+0x5a>
 80100e4:	e77f      	b.n	800ffe6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 80100e6:	f7ff fc53 	bl	800f990 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80100ea:	f7ff fc69 	bl	800f9c0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80100ee:	682a      	ldr	r2, [r5, #0]
 80100f0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 80100f2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80100f4:	d808      	bhi.n	8010108 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80100f6:	4b40      	ldr	r3, [pc, #256]	; (80101f8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 80100f8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80100fc:	681a      	ldr	r2, [r3, #0]
 80100fe:	6812      	ldr	r2, [r2, #0]
 8010100:	fab2 f282 	clz	r2, r2
 8010104:	0952      	lsrs	r2, r2, #5
 8010106:	e756      	b.n	800ffb6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8010108:	f7ff fee8 	bl	800fedc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801010c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8010110:	f7ff fc46 	bl	800f9a0 <xTaskResumeAll>
 8010114:	e75d      	b.n	800ffd2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8010116:	f7ff fee1 	bl	800fedc <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801011a:	e771      	b.n	8010000 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801011c:	f7ff fc40 	bl	800f9a0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010120:	6832      	ldr	r2, [r6, #0]
 8010122:	68d2      	ldr	r2, [r2, #12]
 8010124:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010128:	f10b 0104 	add.w	r1, fp, #4
 801012c:	4608      	mov	r0, r1
 801012e:	9101      	str	r1, [sp, #4]
 8010130:	f7fd fe40 	bl	800ddb4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010134:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8010138:	9901      	ldr	r1, [sp, #4]
 801013a:	f010 0f04 	tst.w	r0, #4
 801013e:	d11b      	bne.n	8010178 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010140:	f020 0001 	bic.w	r0, r0, #1
 8010144:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010148:	f8db 3020 	ldr.w	r3, [fp, #32]
 801014c:	4658      	mov	r0, fp
 801014e:	4798      	blx	r3
}
 8010150:	e73f      	b.n	800ffd2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8010152:	4553      	cmp	r3, sl
 8010154:	d902      	bls.n	801015c <prvTimerTask+0x1e4>
 8010156:	2800      	cmp	r0, #0
 8010158:	f43f af73 	beq.w	8010042 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801015c:	6830      	ldr	r0, [r6, #0]
 801015e:	1d39      	adds	r1, r7, #4
 8010160:	f7fd fe10 	bl	800dd84 <vListInsert>
	return xProcessTimerNow;
 8010164:	e735      	b.n	800ffd2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010166:	6830      	ldr	r0, [r6, #0]
 8010168:	1d39      	adds	r1, r7, #4
 801016a:	f7fd fe0b 	bl	800dd84 <vListInsert>
 801016e:	e730      	b.n	800ffd2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8010170:	4638      	mov	r0, r7
 8010172:	f7fd fd83 	bl	800dc7c <vPortFree>
 8010176:	e72c      	b.n	800ffd2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010178:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801017c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010180:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 8010182:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010184:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010188:	d903      	bls.n	8010192 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801018a:	6830      	ldr	r0, [r6, #0]
 801018c:	f7fd fdfa 	bl	800dd84 <vListInsert>
	return xProcessTimerNow;
 8010190:	e7da      	b.n	8010148 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010192:	ebaa 0307 	sub.w	r3, sl, r7
 8010196:	429a      	cmp	r2, r3
 8010198:	d819      	bhi.n	80101ce <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 801019a:	6823      	ldr	r3, [r4, #0]
 801019c:	b173      	cbz	r3, 80101bc <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 801019e:	2300      	movs	r3, #0
 80101a0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80101a2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80101a4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80101a8:	f7ff fd9c 	bl	800fce4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80101ac:	2300      	movs	r3, #0
 80101ae:	6820      	ldr	r0, [r4, #0]
 80101b0:	461a      	mov	r2, r3
 80101b2:	a906      	add	r1, sp, #24
 80101b4:	f7fe f96a 	bl	800e48c <xQueueGenericSend>
			configASSERT( xResult );
 80101b8:	2800      	cmp	r0, #0
 80101ba:	d1c5      	bne.n	8010148 <prvTimerTask+0x1d0>
 80101bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101c0:	f383 8811 	msr	BASEPRI, r3
 80101c4:	f3bf 8f6f 	isb	sy
 80101c8:	f3bf 8f4f 	dsb	sy
 80101cc:	e7fe      	b.n	80101cc <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80101ce:	4b0a      	ldr	r3, [pc, #40]	; (80101f8 <prvTimerTask+0x280>)
 80101d0:	6818      	ldr	r0, [r3, #0]
 80101d2:	f7fd fdd7 	bl	800dd84 <vListInsert>
	return xProcessTimerNow;
 80101d6:	e7b7      	b.n	8010148 <prvTimerTask+0x1d0>
 80101d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101dc:	f383 8811 	msr	BASEPRI, r3
 80101e0:	f3bf 8f6f 	isb	sy
 80101e4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80101e8:	e7fe      	b.n	80101e8 <prvTimerTask+0x270>
 80101ea:	bf00      	nop
 80101ec:	20012c6c 	.word	0x20012c6c
 80101f0:	20012d3c 	.word	0x20012d3c
 80101f4:	20012d90 	.word	0x20012d90
 80101f8:	20012c70 	.word	0x20012c70

080101fc <xTimerCreateTimerTask>:
{
 80101fc:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80101fe:	4c23      	ldr	r4, [pc, #140]	; (801028c <xTimerCreateTimerTask+0x90>)
{
 8010200:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8010202:	f7fd fe4f 	bl	800dea4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010206:	6825      	ldr	r5, [r4, #0]
 8010208:	b335      	cbz	r5, 8010258 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801020a:	f7fd fe6d 	bl	800dee8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801020e:	6823      	ldr	r3, [r4, #0]
 8010210:	b1cb      	cbz	r3, 8010246 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8010212:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8010214:	aa07      	add	r2, sp, #28
 8010216:	a906      	add	r1, sp, #24
 8010218:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801021a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801021e:	f7fd fc61 	bl	800dae4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8010222:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8010226:	2302      	movs	r3, #2
 8010228:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801022c:	9300      	str	r3, [sp, #0]
 801022e:	9a07      	ldr	r2, [sp, #28]
 8010230:	4917      	ldr	r1, [pc, #92]	; (8010290 <xTimerCreateTimerTask+0x94>)
 8010232:	4818      	ldr	r0, [pc, #96]	; (8010294 <xTimerCreateTimerTask+0x98>)
 8010234:	4623      	mov	r3, r4
 8010236:	f7ff fa6d 	bl	800f714 <xTaskCreateStatic>
 801023a:	4b17      	ldr	r3, [pc, #92]	; (8010298 <xTimerCreateTimerTask+0x9c>)
 801023c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801023e:	b110      	cbz	r0, 8010246 <xTimerCreateTimerTask+0x4a>
}
 8010240:	2001      	movs	r0, #1
 8010242:	b009      	add	sp, #36	; 0x24
 8010244:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010246:	f04f 0350 	mov.w	r3, #80	; 0x50
 801024a:	f383 8811 	msr	BASEPRI, r3
 801024e:	f3bf 8f6f 	isb	sy
 8010252:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8010256:	e7fe      	b.n	8010256 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8010258:	4f10      	ldr	r7, [pc, #64]	; (801029c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801025a:	4e11      	ldr	r6, [pc, #68]	; (80102a0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801025c:	4638      	mov	r0, r7
 801025e:	f7fd fd71 	bl	800dd44 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8010262:	4630      	mov	r0, r6
 8010264:	f7fd fd6e 	bl	800dd44 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8010268:	4a0e      	ldr	r2, [pc, #56]	; (80102a4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801026a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801026c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801026e:	4a0e      	ldr	r2, [pc, #56]	; (80102a8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010270:	4b0e      	ldr	r3, [pc, #56]	; (80102ac <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8010272:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010274:	2110      	movs	r1, #16
 8010276:	4a0e      	ldr	r2, [pc, #56]	; (80102b0 <xTimerCreateTimerTask+0xb4>)
 8010278:	200a      	movs	r0, #10
 801027a:	f7fd ffb1 	bl	800e1e0 <xQueueGenericCreateStatic>
 801027e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8010280:	2800      	cmp	r0, #0
 8010282:	d0c2      	beq.n	801020a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8010284:	490b      	ldr	r1, [pc, #44]	; (80102b4 <xTimerCreateTimerTask+0xb8>)
 8010286:	f7fe ff0d 	bl	800f0a4 <vQueueAddToRegistry>
 801028a:	e7be      	b.n	801020a <xTimerCreateTimerTask+0xe>
 801028c:	20012d90 	.word	0x20012d90
 8010290:	0802eb5c 	.word	0x0802eb5c
 8010294:	0800ff79 	.word	0x0800ff79
 8010298:	20012d94 	.word	0x20012d94
 801029c:	20012d14 	.word	0x20012d14
 80102a0:	20012d28 	.word	0x20012d28
 80102a4:	20012c6c 	.word	0x20012c6c
 80102a8:	20012c70 	.word	0x20012c70
 80102ac:	20012d40 	.word	0x20012d40
 80102b0:	20012c74 	.word	0x20012c74
 80102b4:	0802eb54 	.word	0x0802eb54

080102b8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80102b8:	8880      	ldrh	r0, [r0, #4]
 80102ba:	4770      	bx	lr

080102bc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80102bc:	b570      	push	{r4, r5, r6, lr}
 80102be:	6803      	ldr	r3, [r0, #0]
 80102c0:	4605      	mov	r5, r0
 80102c2:	460c      	mov	r4, r1
 80102c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80102c6:	2100      	movs	r1, #0
 80102c8:	4798      	blx	r3
 80102ca:	682b      	ldr	r3, [r5, #0]
 80102cc:	4606      	mov	r6, r0
 80102ce:	6a1b      	ldr	r3, [r3, #32]
 80102d0:	4628      	mov	r0, r5
 80102d2:	4798      	blx	r3
 80102d4:	1ba4      	subs	r4, r4, r6
 80102d6:	b2a4      	uxth	r4, r4
 80102d8:	fbb4 f0f0 	udiv	r0, r4, r0
 80102dc:	bd70      	pop	{r4, r5, r6, pc}

080102de <_ZN8touchgfx17AbstractPartition5clearEv>:
 80102de:	2300      	movs	r3, #0
 80102e0:	8083      	strh	r3, [r0, #4]
 80102e2:	4770      	bx	lr

080102e4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80102e4:	b510      	push	{r4, lr}
 80102e6:	6803      	ldr	r3, [r0, #0]
 80102e8:	8881      	ldrh	r1, [r0, #4]
 80102ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80102ec:	4604      	mov	r4, r0
 80102ee:	4798      	blx	r3
 80102f0:	88a3      	ldrh	r3, [r4, #4]
 80102f2:	3301      	adds	r3, #1
 80102f4:	80a3      	strh	r3, [r4, #4]
 80102f6:	bd10      	pop	{r4, pc}

080102f8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80102f8:	6803      	ldr	r3, [r0, #0]
 80102fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80102fc:	4718      	bx	r3

080102fe <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80102fe:	4770      	bx	lr

08010300 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010300:	4a02      	ldr	r2, [pc, #8]	; (801030c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010302:	6002      	str	r2, [r0, #0]
 8010304:	2200      	movs	r2, #0
 8010306:	8082      	strh	r2, [r0, #4]
 8010308:	4770      	bx	lr
 801030a:	bf00      	nop
 801030c:	0802eb6c 	.word	0x0802eb6c

08010310 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8010310:	b510      	push	{r4, lr}
 8010312:	6803      	ldr	r3, [r0, #0]
 8010314:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010318:	4604      	mov	r4, r0
 801031a:	4798      	blx	r3
 801031c:	b110      	cbz	r0, 8010324 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801031e:	4620      	mov	r0, r4
 8010320:	f7f2 fca2 	bl	8002c68 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8010324:	bd10      	pop	{r4, pc}

08010326 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010326:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801032a:	4770      	bx	lr

0801032c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801032c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010330:	4770      	bx	lr

08010332 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010332:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010336:	4770      	bx	lr

08010338 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010338:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801033c:	4770      	bx	lr

0801033e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801033e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010340:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8010344:	461e      	mov	r6, r3
 8010346:	6803      	ldr	r3, [r0, #0]
 8010348:	460f      	mov	r7, r1
 801034a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801034e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8010352:	4604      	mov	r4, r0
 8010354:	4615      	mov	r5, r2
 8010356:	4798      	blx	r3
 8010358:	b93e      	cbnz	r6, 801036a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801035a:	1bed      	subs	r5, r5, r7
 801035c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8010360:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8010364:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8010368:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801036a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801036e:	e7f7      	b.n	8010360 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08010370 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8010370:	b510      	push	{r4, lr}
 8010372:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010376:	600c      	str	r4, [r1, #0]
 8010378:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801037c:	6011      	str	r1, [r2, #0]
 801037e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010382:	801a      	strh	r2, [r3, #0]
 8010384:	9b02      	ldr	r3, [sp, #8]
 8010386:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801038a:	801a      	strh	r2, [r3, #0]
 801038c:	bd10      	pop	{r4, pc}

0801038e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 801038e:	b510      	push	{r4, lr}
 8010390:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010394:	600c      	str	r4, [r1, #0]
 8010396:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801039a:	6011      	str	r1, [r2, #0]
 801039c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80103a0:	801a      	strh	r2, [r3, #0]
 80103a2:	bd10      	pop	{r4, pc}

080103a4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80103a4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80103a8:	600b      	str	r3, [r1, #0]
 80103aa:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80103ae:	6013      	str	r3, [r2, #0]
 80103b0:	4770      	bx	lr

080103b2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80103b2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80103b6:	4770      	bx	lr

080103b8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80103b8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80103bc:	4770      	bx	lr

080103be <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80103be:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 80103c2:	4770      	bx	lr

080103c4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 80103c4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80103c8:	4770      	bx	lr

080103ca <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 80103ca:	4770      	bx	lr

080103cc <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 80103cc:	b510      	push	{r4, lr}
 80103ce:	21b4      	movs	r1, #180	; 0xb4
 80103d0:	4604      	mov	r4, r0
 80103d2:	f019 fc84 	bl	8029cde <_ZdlPvj>
 80103d6:	4620      	mov	r0, r4
 80103d8:	bd10      	pop	{r4, pc}

080103da <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 80103da:	b570      	push	{r4, r5, r6, lr}
 80103dc:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 80103e0:	428d      	cmp	r5, r1
 80103e2:	bfb8      	it	lt
 80103e4:	460d      	movlt	r5, r1
 80103e6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80103ea:	428d      	cmp	r5, r1
 80103ec:	4604      	mov	r4, r0
 80103ee:	bfa8      	it	ge
 80103f0:	460d      	movge	r5, r1
 80103f2:	4616      	mov	r6, r2
 80103f4:	b99a      	cbnz	r2, 801041e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 80103f6:	6803      	ldr	r3, [r0, #0]
 80103f8:	4629      	mov	r1, r5
 80103fa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80103fe:	4798      	blx	r3
 8010400:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010404:	b368      	cbz	r0, 8010462 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010406:	6803      	ldr	r3, [r0, #0]
 8010408:	68db      	ldr	r3, [r3, #12]
 801040a:	4798      	blx	r3
 801040c:	b348      	cbz	r0, 8010462 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801040e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010412:	6803      	ldr	r3, [r0, #0]
 8010414:	4621      	mov	r1, r4
 8010416:	689b      	ldr	r3, [r3, #8]
 8010418:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801041c:	4718      	bx	r3
 801041e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010422:	2b00      	cmp	r3, #0
 8010424:	dd08      	ble.n	8010438 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010426:	f005 fbe3 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
 801042a:	4621      	mov	r1, r4
 801042c:	3004      	adds	r0, #4
 801042e:	f005 fc2c 	bl	8015c8a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010432:	2300      	movs	r3, #0
 8010434:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010438:	6823      	ldr	r3, [r4, #0]
 801043a:	4620      	mov	r0, r4
 801043c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010440:	4798      	blx	r3
 8010442:	2300      	movs	r3, #0
 8010444:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8010448:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801044c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8010450:	f005 fbce 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
 8010454:	4621      	mov	r1, r4
 8010456:	3004      	adds	r0, #4
 8010458:	f005 fcc0 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801045c:	2301      	movs	r3, #1
 801045e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010462:	bd70      	pop	{r4, r5, r6, pc}

08010464 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8010464:	b510      	push	{r4, lr}
 8010466:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801046a:	4299      	cmp	r1, r3
 801046c:	bfb8      	it	lt
 801046e:	4619      	movlt	r1, r3
 8010470:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8010474:	4299      	cmp	r1, r3
 8010476:	bfa8      	it	ge
 8010478:	4619      	movge	r1, r3
 801047a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801047e:	428b      	cmp	r3, r1
 8010480:	4604      	mov	r4, r0
 8010482:	d010      	beq.n	80104a6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010484:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8010488:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801048c:	b158      	cbz	r0, 80104a6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801048e:	6803      	ldr	r3, [r0, #0]
 8010490:	68db      	ldr	r3, [r3, #12]
 8010492:	4798      	blx	r3
 8010494:	b138      	cbz	r0, 80104a6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010496:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 801049a:	6803      	ldr	r3, [r0, #0]
 801049c:	4621      	mov	r1, r4
 801049e:	689b      	ldr	r3, [r3, #8]
 80104a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80104a4:	4718      	bx	r3
 80104a6:	bd10      	pop	{r4, pc}

080104a8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80104a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80104aa:	4604      	mov	r4, r0
 80104ac:	460d      	mov	r5, r1
 80104ae:	b1a9      	cbz	r1, 80104dc <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80104b0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80104b4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80104b8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80104bc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80104c0:	ab01      	add	r3, sp, #4
 80104c2:	1a12      	subs	r2, r2, r0
 80104c4:	1b89      	subs	r1, r1, r6
 80104c6:	1a38      	subs	r0, r7, r0
 80104c8:	f006 fe48 	bl	801715c <_ZN8touchgfx6muldivElllRl>
 80104cc:	4629      	mov	r1, r5
 80104ce:	ab01      	add	r3, sp, #4
 80104d0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 80104d4:	4430      	add	r0, r6
 80104d6:	f006 fe41 	bl	801715c <_ZN8touchgfx6muldivElllRl>
 80104da:	b285      	uxth	r5, r0
 80104dc:	4628      	mov	r0, r5
 80104de:	b003      	add	sp, #12
 80104e0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080104e2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 80104e2:	b570      	push	{r4, r5, r6, lr}
 80104e4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 80104e8:	4604      	mov	r4, r0
 80104ea:	2b00      	cmp	r3, #0
 80104ec:	d035      	beq.n	801055a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80104ee:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 80104f2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 80104f6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 80104fa:	3001      	adds	r0, #1
 80104fc:	1ad2      	subs	r2, r2, r3
 80104fe:	b212      	sxth	r2, r2
 8010500:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010504:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010508:	2100      	movs	r1, #0
 801050a:	b280      	uxth	r0, r0
 801050c:	47a8      	blx	r5
 801050e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010512:	6823      	ldr	r3, [r4, #0]
 8010514:	4401      	add	r1, r0
 8010516:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801051a:	4620      	mov	r0, r4
 801051c:	4798      	blx	r3
 801051e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010522:	429a      	cmp	r2, r3
 8010524:	db19      	blt.n	801055a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010526:	2500      	movs	r5, #0
 8010528:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801052c:	f005 fb60 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
 8010530:	4621      	mov	r1, r4
 8010532:	3004      	adds	r0, #4
 8010534:	f005 fba9 	bl	8015c8a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010538:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801053c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010540:	b158      	cbz	r0, 801055a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010542:	6803      	ldr	r3, [r0, #0]
 8010544:	68db      	ldr	r3, [r3, #12]
 8010546:	4798      	blx	r3
 8010548:	b138      	cbz	r0, 801055a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801054a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801054e:	6803      	ldr	r3, [r0, #0]
 8010550:	4621      	mov	r1, r4
 8010552:	689b      	ldr	r3, [r3, #8]
 8010554:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010558:	4718      	bx	r3
 801055a:	bd70      	pop	{r4, r5, r6, pc}

0801055c <_ZN8touchgfx8DrawableC1Ev>:
 801055c:	4a0a      	ldr	r2, [pc, #40]	; (8010588 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801055e:	6002      	str	r2, [r0, #0]
 8010560:	2200      	movs	r2, #0
 8010562:	8082      	strh	r2, [r0, #4]
 8010564:	80c2      	strh	r2, [r0, #6]
 8010566:	8102      	strh	r2, [r0, #8]
 8010568:	8142      	strh	r2, [r0, #10]
 801056a:	8182      	strh	r2, [r0, #12]
 801056c:	81c2      	strh	r2, [r0, #14]
 801056e:	8202      	strh	r2, [r0, #16]
 8010570:	8242      	strh	r2, [r0, #18]
 8010572:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010576:	61c2      	str	r2, [r0, #28]
 8010578:	8402      	strh	r2, [r0, #32]
 801057a:	8442      	strh	r2, [r0, #34]	; 0x22
 801057c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010580:	2201      	movs	r2, #1
 8010582:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8010586:	4770      	bx	lr
 8010588:	0802f30c 	.word	0x0802f30c

0801058c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801058c:	b570      	push	{r4, r5, r6, lr}
 801058e:	6803      	ldr	r3, [r0, #0]
 8010590:	4604      	mov	r4, r0
 8010592:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010594:	4615      	mov	r5, r2
 8010596:	4798      	blx	r3
 8010598:	6823      	ldr	r3, [r4, #0]
 801059a:	4629      	mov	r1, r5
 801059c:	4620      	mov	r0, r4
 801059e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80105a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105a4:	4718      	bx	r3

080105a6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80105a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80105aa:	4604      	mov	r4, r0
 80105ac:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80105b0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80105b4:	460e      	mov	r6, r1
 80105b6:	4615      	mov	r5, r2
 80105b8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80105bc:	4619      	mov	r1, r3
 80105be:	463a      	mov	r2, r7
 80105c0:	3058      	adds	r0, #88	; 0x58
 80105c2:	4698      	mov	r8, r3
 80105c4:	f7ff ffe2 	bl	801058c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80105c8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80105cc:	4446      	add	r6, r8
 80105ce:	42b3      	cmp	r3, r6
 80105d0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80105d4:	bfb8      	it	lt
 80105d6:	8126      	strhlt	r6, [r4, #8]
 80105d8:	443d      	add	r5, r7
 80105da:	42ab      	cmp	r3, r5
 80105dc:	bfb8      	it	lt
 80105de:	8165      	strhlt	r5, [r4, #10]
 80105e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080105e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 80105e4:	b510      	push	{r4, lr}
 80105e6:	4604      	mov	r4, r0
 80105e8:	302c      	adds	r0, #44	; 0x2c
 80105ea:	f002 fdf8 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80105ee:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80105f2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80105f6:	4620      	mov	r0, r4
 80105f8:	f7ff ffc8 	bl	801058c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80105fc:	bd10      	pop	{r4, pc}
	...

08010600 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010600:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010602:	4604      	mov	r4, r0
 8010604:	4626      	mov	r6, r4
 8010606:	2500      	movs	r5, #0
 8010608:	f7ff ffa8 	bl	801055c <_ZN8touchgfx8DrawableC1Ev>
 801060c:	4b23      	ldr	r3, [pc, #140]	; (801069c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801060e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010610:	f846 3b2c 	str.w	r3, [r6], #44
 8010614:	2226      	movs	r2, #38	; 0x26
 8010616:	4629      	mov	r1, r5
 8010618:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801061c:	4630      	mov	r0, r6
 801061e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010622:	f01a fc48 	bl	802aeb6 <memset>
 8010626:	4630      	mov	r0, r6
 8010628:	f7ff ff98 	bl	801055c <_ZN8touchgfx8DrawableC1Ev>
 801062c:	a902      	add	r1, sp, #8
 801062e:	4b1c      	ldr	r3, [pc, #112]	; (80106a0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010630:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010632:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010636:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801063a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801063e:	4630      	mov	r0, r6
 8010640:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010644:	f002 fdcb 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010648:	4638      	mov	r0, r7
 801064a:	f7ff ff87 	bl	801055c <_ZN8touchgfx8DrawableC1Ev>
 801064e:	4b15      	ldr	r3, [pc, #84]	; (80106a4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010650:	65a3      	str	r3, [r4, #88]	; 0x58
 8010652:	2364      	movs	r3, #100	; 0x64
 8010654:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010658:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801065c:	4b12      	ldr	r3, [pc, #72]	; (80106a8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801065e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8010662:	4629      	mov	r1, r5
 8010664:	4630      	mov	r0, r6
 8010666:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801066a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801066e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8010672:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010676:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801067a:	f7f2 fa51 	bl	8002b20 <_ZN8touchgfx8Drawable4setXEs>
 801067e:	4629      	mov	r1, r5
 8010680:	4630      	mov	r0, r6
 8010682:	f7f2 fa4f 	bl	8002b24 <_ZN8touchgfx8Drawable4setYEs>
 8010686:	4631      	mov	r1, r6
 8010688:	4620      	mov	r0, r4
 801068a:	f000 f819 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801068e:	4620      	mov	r0, r4
 8010690:	4639      	mov	r1, r7
 8010692:	f000 f815 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010696:	4620      	mov	r0, r4
 8010698:	b003      	add	sp, #12
 801069a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801069c:	0802eba0 	.word	0x0802eba0
 80106a0:	0802f1c8 	.word	0x0802f1c8
 80106a4:	0802ec74 	.word	0x0802ec74
 80106a8:	080178bb 	.word	0x080178bb

080106ac <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80106ac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80106ae:	2000      	movs	r0, #0
 80106b0:	b12b      	cbz	r3, 80106be <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80106b2:	b920      	cbnz	r0, 80106be <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80106b4:	1a5a      	subs	r2, r3, r1
 80106b6:	4250      	negs	r0, r2
 80106b8:	4150      	adcs	r0, r2
 80106ba:	699b      	ldr	r3, [r3, #24]
 80106bc:	e7f8      	b.n	80106b0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80106be:	4770      	bx	lr

080106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80106c0:	2300      	movs	r3, #0
 80106c2:	6148      	str	r0, [r1, #20]
 80106c4:	618b      	str	r3, [r1, #24]
 80106c6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80106c8:	b913      	cbnz	r3, 80106d0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80106ca:	6281      	str	r1, [r0, #40]	; 0x28
 80106cc:	4770      	bx	lr
 80106ce:	4613      	mov	r3, r2
 80106d0:	699a      	ldr	r2, [r3, #24]
 80106d2:	2a00      	cmp	r2, #0
 80106d4:	d1fb      	bne.n	80106ce <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80106d6:	6199      	str	r1, [r3, #24]
 80106d8:	4770      	bx	lr

080106da <_ZN8touchgfx9Container9removeAllEv>:
 80106da:	2200      	movs	r2, #0
 80106dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80106de:	b123      	cbz	r3, 80106ea <_ZN8touchgfx9Container9removeAllEv+0x10>
 80106e0:	6999      	ldr	r1, [r3, #24]
 80106e2:	6281      	str	r1, [r0, #40]	; 0x28
 80106e4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80106e8:	e7f8      	b.n	80106dc <_ZN8touchgfx9Container9removeAllEv+0x2>
 80106ea:	4770      	bx	lr

080106ec <_ZN8touchgfx9Container6unlinkEv>:
 80106ec:	2300      	movs	r3, #0
 80106ee:	6283      	str	r3, [r0, #40]	; 0x28
 80106f0:	4770      	bx	lr

080106f2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80106f2:	2200      	movs	r2, #0
 80106f4:	8002      	strh	r2, [r0, #0]
 80106f6:	8042      	strh	r2, [r0, #2]
 80106f8:	8082      	strh	r2, [r0, #4]
 80106fa:	80c2      	strh	r2, [r0, #6]
 80106fc:	4770      	bx	lr

080106fe <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80106fe:	b570      	push	{r4, r5, r6, lr}
 8010700:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010702:	460d      	mov	r5, r1
 8010704:	4616      	mov	r6, r2
 8010706:	b13c      	cbz	r4, 8010718 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010708:	6823      	ldr	r3, [r4, #0]
 801070a:	4620      	mov	r0, r4
 801070c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801070e:	4632      	mov	r2, r6
 8010710:	4629      	mov	r1, r5
 8010712:	4798      	blx	r3
 8010714:	69a4      	ldr	r4, [r4, #24]
 8010716:	e7f6      	b.n	8010706 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010718:	bd70      	pop	{r4, r5, r6, pc}

0801071a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801071a:	b538      	push	{r3, r4, r5, lr}
 801071c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801071e:	460d      	mov	r5, r1
 8010720:	b134      	cbz	r4, 8010730 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010722:	682b      	ldr	r3, [r5, #0]
 8010724:	4621      	mov	r1, r4
 8010726:	689b      	ldr	r3, [r3, #8]
 8010728:	4628      	mov	r0, r5
 801072a:	4798      	blx	r3
 801072c:	69a4      	ldr	r4, [r4, #24]
 801072e:	e7f7      	b.n	8010720 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010730:	bd38      	pop	{r3, r4, r5, pc}

08010732 <_ZN8touchgfx9ContainerD1Ev>:
 8010732:	4770      	bx	lr

08010734 <_ZN8touchgfx9ContainerD0Ev>:
 8010734:	b510      	push	{r4, lr}
 8010736:	212c      	movs	r1, #44	; 0x2c
 8010738:	4604      	mov	r4, r0
 801073a:	f019 fad0 	bl	8029cde <_ZdlPvj>
 801073e:	4620      	mov	r0, r4
 8010740:	bd10      	pop	{r4, pc}

08010742 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010742:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010744:	b19b      	cbz	r3, 801076e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010746:	428b      	cmp	r3, r1
 8010748:	d109      	bne.n	801075e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801074a:	699a      	ldr	r2, [r3, #24]
 801074c:	2100      	movs	r1, #0
 801074e:	6159      	str	r1, [r3, #20]
 8010750:	6282      	str	r2, [r0, #40]	; 0x28
 8010752:	b902      	cbnz	r2, 8010756 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010754:	4770      	bx	lr
 8010756:	6199      	str	r1, [r3, #24]
 8010758:	4770      	bx	lr
 801075a:	4613      	mov	r3, r2
 801075c:	b13a      	cbz	r2, 801076e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801075e:	699a      	ldr	r2, [r3, #24]
 8010760:	428a      	cmp	r2, r1
 8010762:	d1fa      	bne.n	801075a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010764:	698a      	ldr	r2, [r1, #24]
 8010766:	619a      	str	r2, [r3, #24]
 8010768:	2300      	movs	r3, #0
 801076a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801076e:	4770      	bx	lr

08010770 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010770:	b410      	push	{r4}
 8010772:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010774:	4604      	mov	r4, r0
 8010776:	b92b      	cbnz	r3, 8010784 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010778:	6803      	ldr	r3, [r0, #0]
 801077a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801077e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010780:	4611      	mov	r1, r2
 8010782:	4718      	bx	r3
 8010784:	b941      	cbnz	r1, 8010798 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010786:	6193      	str	r3, [r2, #24]
 8010788:	6282      	str	r2, [r0, #40]	; 0x28
 801078a:	6154      	str	r4, [r2, #20]
 801078c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010790:	4770      	bx	lr
 8010792:	4603      	mov	r3, r0
 8010794:	2800      	cmp	r0, #0
 8010796:	d0f9      	beq.n	801078c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010798:	4299      	cmp	r1, r3
 801079a:	6998      	ldr	r0, [r3, #24]
 801079c:	d1f9      	bne.n	8010792 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801079e:	6190      	str	r0, [r2, #24]
 80107a0:	618a      	str	r2, [r1, #24]
 80107a2:	e7f2      	b.n	801078a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080107a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80107a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80107a8:	461f      	mov	r7, r3
 80107aa:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80107ae:	460d      	mov	r5, r1
 80107b0:	4616      	mov	r6, r2
 80107b2:	b103      	cbz	r3, 80107b6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80107b4:	6038      	str	r0, [r7, #0]
 80107b6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80107b8:	b314      	cbz	r4, 8010800 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80107ba:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80107be:	b1eb      	cbz	r3, 80107fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80107c0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80107c4:	428d      	cmp	r5, r1
 80107c6:	db19      	blt.n	80107fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80107c8:	8923      	ldrh	r3, [r4, #8]
 80107ca:	b289      	uxth	r1, r1
 80107cc:	440b      	add	r3, r1
 80107ce:	b21b      	sxth	r3, r3
 80107d0:	429d      	cmp	r5, r3
 80107d2:	da13      	bge.n	80107fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80107d4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80107d8:	4296      	cmp	r6, r2
 80107da:	db0f      	blt.n	80107fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80107dc:	8963      	ldrh	r3, [r4, #10]
 80107de:	b292      	uxth	r2, r2
 80107e0:	4413      	add	r3, r2
 80107e2:	b21b      	sxth	r3, r3
 80107e4:	429e      	cmp	r6, r3
 80107e6:	da09      	bge.n	80107fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80107e8:	6823      	ldr	r3, [r4, #0]
 80107ea:	1ab2      	subs	r2, r6, r2
 80107ec:	1a69      	subs	r1, r5, r1
 80107ee:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80107f2:	b212      	sxth	r2, r2
 80107f4:	463b      	mov	r3, r7
 80107f6:	b209      	sxth	r1, r1
 80107f8:	4620      	mov	r0, r4
 80107fa:	47c0      	blx	r8
 80107fc:	69a4      	ldr	r4, [r4, #24]
 80107fe:	e7db      	b.n	80107b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010800:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010804 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010808:	4c6e      	ldr	r4, [pc, #440]	; (80109c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801080a:	b0a1      	sub	sp, #132	; 0x84
 801080c:	6824      	ldr	r4, [r4, #0]
 801080e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010810:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010814:	9303      	str	r3, [sp, #12]
 8010816:	2400      	movs	r4, #0
 8010818:	802c      	strh	r4, [r5, #0]
 801081a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801081c:	802c      	strh	r4, [r5, #0]
 801081e:	601c      	str	r4, [r3, #0]
 8010820:	4606      	mov	r6, r0
 8010822:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010826:	f7ff ffbd 	bl	80107a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801082a:	f1b9 0f03 	cmp.w	r9, #3
 801082e:	f340 80c2 	ble.w	80109b6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010832:	4631      	mov	r1, r6
 8010834:	a80c      	add	r0, sp, #48	; 0x30
 8010836:	f006 fb5f 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801083a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801083e:	9306      	str	r3, [sp, #24]
 8010840:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010844:	9307      	str	r3, [sp, #28]
 8010846:	9b03      	ldr	r3, [sp, #12]
 8010848:	f8d3 a000 	ldr.w	sl, [r3]
 801084c:	f1ba 0f00 	cmp.w	sl, #0
 8010850:	f000 80b4 	beq.w	80109bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010854:	4651      	mov	r1, sl
 8010856:	a810      	add	r0, sp, #64	; 0x40
 8010858:	f006 fb4e 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801085c:	9b01      	ldr	r3, [sp, #4]
 801085e:	9a06      	ldr	r2, [sp, #24]
 8010860:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010864:	189d      	adds	r5, r3, r2
 8010866:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801086a:	9a07      	ldr	r2, [sp, #28]
 801086c:	2002      	movs	r0, #2
 801086e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010872:	4419      	add	r1, r3
 8010874:	1a6d      	subs	r5, r5, r1
 8010876:	9b02      	ldr	r3, [sp, #8]
 8010878:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801087c:	4413      	add	r3, r2
 801087e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010882:	fb92 f2f0 	sdiv	r2, r2, r0
 8010886:	440a      	add	r2, r1
 8010888:	1a9b      	subs	r3, r3, r2
 801088a:	435b      	muls	r3, r3
 801088c:	fb05 3505 	mla	r5, r5, r5, r3
 8010890:	4f4d      	ldr	r7, [pc, #308]	; (80109c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010892:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010894:	ac10      	add	r4, sp, #64	; 0x40
 8010896:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010898:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801089a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801089c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801089e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80108a0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80108a4:	f1b9 0f0c 	cmp.w	r9, #12
 80108a8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80108ac:	f04f 0303 	mov.w	r3, #3
 80108b0:	bfc8      	it	gt
 80108b2:	4698      	movgt	r8, r3
 80108b4:	f8cd 9000 	str.w	r9, [sp]
 80108b8:	f04f 0400 	mov.w	r4, #0
 80108bc:	bfdc      	itt	le
 80108be:	f109 32ff 	addle.w	r2, r9, #4294967295
 80108c2:	fb92 f8f3 	sdivle	r8, r2, r3
 80108c6:	1c63      	adds	r3, r4, #1
 80108c8:	aa10      	add	r2, sp, #64	; 0x40
 80108ca:	f004 0401 	and.w	r4, r4, #1
 80108ce:	9308      	str	r3, [sp, #32]
 80108d0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80108d4:	9b00      	ldr	r3, [sp, #0]
 80108d6:	fb93 f3f8 	sdiv	r3, r3, r8
 80108da:	b29b      	uxth	r3, r3
 80108dc:	3404      	adds	r4, #4
 80108de:	f04f 0b00 	mov.w	fp, #0
 80108e2:	9304      	str	r3, [sp, #16]
 80108e4:	9a04      	ldr	r2, [sp, #16]
 80108e6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80108ea:	fb13 f302 	smulbb	r3, r3, r2
 80108ee:	9a01      	ldr	r2, [sp, #4]
 80108f0:	b29b      	uxth	r3, r3
 80108f2:	1899      	adds	r1, r3, r2
 80108f4:	9305      	str	r3, [sp, #20]
 80108f6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80108fa:	b209      	sxth	r1, r1
 80108fc:	4299      	cmp	r1, r3
 80108fe:	db4d      	blt.n	801099c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010900:	8932      	ldrh	r2, [r6, #8]
 8010902:	4413      	add	r3, r2
 8010904:	b21b      	sxth	r3, r3
 8010906:	4299      	cmp	r1, r3
 8010908:	da48      	bge.n	801099c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801090a:	9b04      	ldr	r3, [sp, #16]
 801090c:	6827      	ldr	r7, [r4, #0]
 801090e:	fb17 f703 	smulbb	r7, r7, r3
 8010912:	9b02      	ldr	r3, [sp, #8]
 8010914:	b2bf      	uxth	r7, r7
 8010916:	18fa      	adds	r2, r7, r3
 8010918:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801091c:	b212      	sxth	r2, r2
 801091e:	429a      	cmp	r2, r3
 8010920:	db3c      	blt.n	801099c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010922:	8970      	ldrh	r0, [r6, #10]
 8010924:	4403      	add	r3, r0
 8010926:	b21b      	sxth	r3, r3
 8010928:	429a      	cmp	r2, r3
 801092a:	da37      	bge.n	801099c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801092c:	2300      	movs	r3, #0
 801092e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010930:	4630      	mov	r0, r6
 8010932:	ab0b      	add	r3, sp, #44	; 0x2c
 8010934:	f7ff ff36 	bl	80107a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010938:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801093a:	b37a      	cbz	r2, 801099c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801093c:	4552      	cmp	r2, sl
 801093e:	d02d      	beq.n	801099c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010940:	4611      	mov	r1, r2
 8010942:	a80e      	add	r0, sp, #56	; 0x38
 8010944:	9209      	str	r2, [sp, #36]	; 0x24
 8010946:	f006 fad7 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801094a:	9a06      	ldr	r2, [sp, #24]
 801094c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010950:	9b01      	ldr	r3, [sp, #4]
 8010952:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010956:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801095a:	4413      	add	r3, r2
 801095c:	f04f 0e02 	mov.w	lr, #2
 8010960:	fb91 f1fe 	sdiv	r1, r1, lr
 8010964:	4401      	add	r1, r0
 8010966:	1a58      	subs	r0, r3, r1
 8010968:	9a07      	ldr	r2, [sp, #28]
 801096a:	9b02      	ldr	r3, [sp, #8]
 801096c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010970:	fb9c fcfe 	sdiv	ip, ip, lr
 8010974:	4413      	add	r3, r2
 8010976:	448c      	add	ip, r1
 8010978:	eba3 030c 	sub.w	r3, r3, ip
 801097c:	435b      	muls	r3, r3
 801097e:	fb00 3300 	mla	r3, r0, r0, r3
 8010982:	42ab      	cmp	r3, r5
 8010984:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010986:	d208      	bcs.n	801099a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010988:	9803      	ldr	r0, [sp, #12]
 801098a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801098c:	6001      	str	r1, [r0, #0]
 801098e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010990:	9805      	ldr	r0, [sp, #20]
 8010992:	8008      	strh	r0, [r1, #0]
 8010994:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010996:	461d      	mov	r5, r3
 8010998:	800f      	strh	r7, [r1, #0]
 801099a:	4692      	mov	sl, r2
 801099c:	f10b 0b01 	add.w	fp, fp, #1
 80109a0:	f1bb 0f04 	cmp.w	fp, #4
 80109a4:	f104 0408 	add.w	r4, r4, #8
 80109a8:	d19c      	bne.n	80108e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80109aa:	9b00      	ldr	r3, [sp, #0]
 80109ac:	9c08      	ldr	r4, [sp, #32]
 80109ae:	444b      	add	r3, r9
 80109b0:	4544      	cmp	r4, r8
 80109b2:	9300      	str	r3, [sp, #0]
 80109b4:	d187      	bne.n	80108c6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80109b6:	b021      	add	sp, #132	; 0x84
 80109b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109bc:	f04f 35ff 	mov.w	r5, #4294967295
 80109c0:	e766      	b.n	8010890 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80109c2:	bf00      	nop
 80109c4:	20012da4 	.word	0x20012da4
 80109c8:	0802bbe8 	.word	0x0802bbe8

080109cc <_ZN8touchgfx4RectaNERKS0_>:
 80109cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80109d0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80109d4:	888c      	ldrh	r4, [r1, #4]
 80109d6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80109da:	443c      	add	r4, r7
 80109dc:	b2a4      	uxth	r4, r4
 80109de:	fa0f f884 	sxth.w	r8, r4
 80109e2:	45c1      	cmp	r9, r8
 80109e4:	da2f      	bge.n	8010a46 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80109e6:	8882      	ldrh	r2, [r0, #4]
 80109e8:	444a      	add	r2, r9
 80109ea:	b292      	uxth	r2, r2
 80109ec:	fa0f fe82 	sxth.w	lr, r2
 80109f0:	4577      	cmp	r7, lr
 80109f2:	da28      	bge.n	8010a46 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80109f4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80109f8:	88cb      	ldrh	r3, [r1, #6]
 80109fa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80109fe:	442b      	add	r3, r5
 8010a00:	b21b      	sxth	r3, r3
 8010a02:	429e      	cmp	r6, r3
 8010a04:	da1f      	bge.n	8010a46 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a06:	88c3      	ldrh	r3, [r0, #6]
 8010a08:	4433      	add	r3, r6
 8010a0a:	b29b      	uxth	r3, r3
 8010a0c:	fa0f fc83 	sxth.w	ip, r3
 8010a10:	4565      	cmp	r5, ip
 8010a12:	da18      	bge.n	8010a46 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a14:	454f      	cmp	r7, r9
 8010a16:	bfb8      	it	lt
 8010a18:	464f      	movlt	r7, r9
 8010a1a:	42b5      	cmp	r5, r6
 8010a1c:	bfb8      	it	lt
 8010a1e:	4635      	movlt	r5, r6
 8010a20:	45f0      	cmp	r8, lr
 8010a22:	bfd8      	it	le
 8010a24:	4622      	movle	r2, r4
 8010a26:	1bd2      	subs	r2, r2, r7
 8010a28:	8082      	strh	r2, [r0, #4]
 8010a2a:	884a      	ldrh	r2, [r1, #2]
 8010a2c:	88c9      	ldrh	r1, [r1, #6]
 8010a2e:	8007      	strh	r7, [r0, #0]
 8010a30:	440a      	add	r2, r1
 8010a32:	b292      	uxth	r2, r2
 8010a34:	b211      	sxth	r1, r2
 8010a36:	458c      	cmp	ip, r1
 8010a38:	bfa8      	it	ge
 8010a3a:	4613      	movge	r3, r2
 8010a3c:	1b5b      	subs	r3, r3, r5
 8010a3e:	80c3      	strh	r3, [r0, #6]
 8010a40:	8045      	strh	r5, [r0, #2]
 8010a42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a46:	2300      	movs	r3, #0
 8010a48:	8003      	strh	r3, [r0, #0]
 8010a4a:	8043      	strh	r3, [r0, #2]
 8010a4c:	8083      	strh	r3, [r0, #4]
 8010a4e:	80c3      	strh	r3, [r0, #6]
 8010a50:	e7f7      	b.n	8010a42 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010a52 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010a52:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010a56:	2b00      	cmp	r3, #0
 8010a58:	dd06      	ble.n	8010a68 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010a5a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010a5e:	2800      	cmp	r0, #0
 8010a60:	bfcc      	ite	gt
 8010a62:	2000      	movgt	r0, #0
 8010a64:	2001      	movle	r0, #1
 8010a66:	4770      	bx	lr
 8010a68:	2001      	movs	r0, #1
 8010a6a:	4770      	bx	lr

08010a6c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010a6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a70:	2300      	movs	r3, #0
 8010a72:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010a74:	8003      	strh	r3, [r0, #0]
 8010a76:	4604      	mov	r4, r0
 8010a78:	8043      	strh	r3, [r0, #2]
 8010a7a:	8083      	strh	r3, [r0, #4]
 8010a7c:	80c3      	strh	r3, [r0, #6]
 8010a7e:	2d00      	cmp	r5, #0
 8010a80:	d040      	beq.n	8010b04 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010a82:	1d28      	adds	r0, r5, #4
 8010a84:	f7ff ffe5 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a88:	b988      	cbnz	r0, 8010aae <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010a8a:	4620      	mov	r0, r4
 8010a8c:	f7ff ffe1 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a90:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010a94:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010a98:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010a9c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010aa0:	b138      	cbz	r0, 8010ab2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010aa2:	8022      	strh	r2, [r4, #0]
 8010aa4:	8063      	strh	r3, [r4, #2]
 8010aa6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010aaa:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010aae:	69ad      	ldr	r5, [r5, #24]
 8010ab0:	e7e5      	b.n	8010a7e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010ab2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010ab6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010aba:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010abe:	4290      	cmp	r0, r2
 8010ac0:	4607      	mov	r7, r0
 8010ac2:	bfa8      	it	ge
 8010ac4:	4617      	movge	r7, r2
 8010ac6:	4472      	add	r2, lr
 8010ac8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010acc:	8027      	strh	r7, [r4, #0]
 8010ace:	4299      	cmp	r1, r3
 8010ad0:	460e      	mov	r6, r1
 8010ad2:	4440      	add	r0, r8
 8010ad4:	bfa8      	it	ge
 8010ad6:	461e      	movge	r6, r3
 8010ad8:	4471      	add	r1, lr
 8010ada:	4463      	add	r3, ip
 8010adc:	b200      	sxth	r0, r0
 8010ade:	b212      	sxth	r2, r2
 8010ae0:	b209      	sxth	r1, r1
 8010ae2:	b21b      	sxth	r3, r3
 8010ae4:	4290      	cmp	r0, r2
 8010ae6:	bfac      	ite	ge
 8010ae8:	ebc7 0200 	rsbge	r2, r7, r0
 8010aec:	ebc7 0202 	rsblt	r2, r7, r2
 8010af0:	4299      	cmp	r1, r3
 8010af2:	bfac      	ite	ge
 8010af4:	ebc6 0301 	rsbge	r3, r6, r1
 8010af8:	ebc6 0303 	rsblt	r3, r6, r3
 8010afc:	8066      	strh	r6, [r4, #2]
 8010afe:	80a2      	strh	r2, [r4, #4]
 8010b00:	80e3      	strh	r3, [r4, #6]
 8010b02:	e7d4      	b.n	8010aae <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010b04:	4620      	mov	r0, r4
 8010b06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010b0a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010b0a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010b0e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010b12:	b383      	cbz	r3, 8010b76 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010b14:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b16:	b374      	cbz	r4, 8010b76 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010b18:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010b1c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010b20:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010b24:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010b28:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010b2c:	b303      	cbz	r3, 8010b70 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010b2e:	4668      	mov	r0, sp
 8010b30:	1d21      	adds	r1, r4, #4
 8010b32:	f8ad 5000 	strh.w	r5, [sp]
 8010b36:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010b3a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010b3e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010b42:	f7ff ff43 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8010b46:	4668      	mov	r0, sp
 8010b48:	f7ff ff83 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b4c:	b980      	cbnz	r0, 8010b70 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010b4e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010b52:	88a2      	ldrh	r2, [r4, #4]
 8010b54:	1a9b      	subs	r3, r3, r2
 8010b56:	f8ad 3000 	strh.w	r3, [sp]
 8010b5a:	88e2      	ldrh	r2, [r4, #6]
 8010b5c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010b60:	1a9b      	subs	r3, r3, r2
 8010b62:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010b66:	6823      	ldr	r3, [r4, #0]
 8010b68:	4669      	mov	r1, sp
 8010b6a:	689b      	ldr	r3, [r3, #8]
 8010b6c:	4620      	mov	r0, r4
 8010b6e:	4798      	blx	r3
 8010b70:	69a4      	ldr	r4, [r4, #24]
 8010b72:	2c00      	cmp	r4, #0
 8010b74:	d1d8      	bne.n	8010b28 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010b76:	b002      	add	sp, #8
 8010b78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010b7c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010b7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010b7e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010b82:	460d      	mov	r5, r1
 8010b84:	4616      	mov	r6, r2
 8010b86:	b323      	cbz	r3, 8010bd2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010b88:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b8a:	b314      	cbz	r4, 8010bd2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010b8c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010b90:	b1eb      	cbz	r3, 8010bce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010b92:	6828      	ldr	r0, [r5, #0]
 8010b94:	6869      	ldr	r1, [r5, #4]
 8010b96:	466b      	mov	r3, sp
 8010b98:	c303      	stmia	r3!, {r0, r1}
 8010b9a:	4668      	mov	r0, sp
 8010b9c:	1d21      	adds	r1, r4, #4
 8010b9e:	f7ff ff15 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8010ba2:	4668      	mov	r0, sp
 8010ba4:	f7ff ff55 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ba8:	b988      	cbnz	r0, 8010bce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010baa:	f8bd 3000 	ldrh.w	r3, [sp]
 8010bae:	88a2      	ldrh	r2, [r4, #4]
 8010bb0:	1a9b      	subs	r3, r3, r2
 8010bb2:	f8ad 3000 	strh.w	r3, [sp]
 8010bb6:	88e2      	ldrh	r2, [r4, #6]
 8010bb8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010bbc:	1a9b      	subs	r3, r3, r2
 8010bbe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010bc2:	6823      	ldr	r3, [r4, #0]
 8010bc4:	4632      	mov	r2, r6
 8010bc6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010bc8:	4669      	mov	r1, sp
 8010bca:	4620      	mov	r0, r4
 8010bcc:	4798      	blx	r3
 8010bce:	69a4      	ldr	r4, [r4, #24]
 8010bd0:	e7db      	b.n	8010b8a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010bd2:	b002      	add	sp, #8
 8010bd4:	bd70      	pop	{r4, r5, r6, pc}

08010bd6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010bd6:	b513      	push	{r0, r1, r4, lr}
 8010bd8:	6803      	ldr	r3, [r0, #0]
 8010bda:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010bde:	2300      	movs	r3, #0
 8010be0:	e9cd 3300 	strd	r3, r3, [sp]
 8010be4:	466b      	mov	r3, sp
 8010be6:	47a0      	blx	r4
 8010be8:	b002      	add	sp, #8
 8010bea:	bd10      	pop	{r4, pc}

08010bec <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010bec:	2301      	movs	r3, #1
 8010bee:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010bf2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010bf6:	4770      	bx	lr

08010bf8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010bf8:	2301      	movs	r3, #1
 8010bfa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010bfe:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010c02:	4770      	bx	lr

08010c04 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010c04:	6843      	ldr	r3, [r0, #4]
 8010c06:	2201      	movs	r2, #1
 8010c08:	725a      	strb	r2, [r3, #9]
 8010c0a:	6840      	ldr	r0, [r0, #4]
 8010c0c:	6803      	ldr	r3, [r0, #0]
 8010c0e:	691b      	ldr	r3, [r3, #16]
 8010c10:	4718      	bx	r3

08010c12 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010c12:	6840      	ldr	r0, [r0, #4]
 8010c14:	6803      	ldr	r3, [r0, #0]
 8010c16:	689b      	ldr	r3, [r3, #8]
 8010c18:	4718      	bx	r3

08010c1a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010c1a:	b530      	push	{r4, r5, lr}
 8010c1c:	b08b      	sub	sp, #44	; 0x2c
 8010c1e:	6804      	ldr	r4, [r0, #0]
 8010c20:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010c24:	9509      	str	r5, [sp, #36]	; 0x24
 8010c26:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010c2a:	9508      	str	r5, [sp, #32]
 8010c2c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010c30:	9507      	str	r5, [sp, #28]
 8010c32:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010c36:	9506      	str	r5, [sp, #24]
 8010c38:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010c3c:	9505      	str	r5, [sp, #20]
 8010c3e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010c42:	9504      	str	r5, [sp, #16]
 8010c44:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010c48:	9503      	str	r5, [sp, #12]
 8010c4a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010c4e:	9502      	str	r5, [sp, #8]
 8010c50:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010c54:	e9cd 3500 	strd	r3, r5, [sp]
 8010c58:	4613      	mov	r3, r2
 8010c5a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010c5c:	2200      	movs	r2, #0
 8010c5e:	47a0      	blx	r4
 8010c60:	b00b      	add	sp, #44	; 0x2c
 8010c62:	bd30      	pop	{r4, r5, pc}

08010c64 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010c64:	4b04      	ldr	r3, [pc, #16]	; (8010c78 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010c66:	781b      	ldrb	r3, [r3, #0]
 8010c68:	b123      	cbz	r3, 8010c74 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010c6a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010c6e:	f080 0001 	eor.w	r0, r0, #1
 8010c72:	4770      	bx	lr
 8010c74:	2001      	movs	r0, #1
 8010c76:	4770      	bx	lr
 8010c78:	20012da2 	.word	0x20012da2

08010c7c <_ZN8touchgfx3HAL8endFrameEv>:
 8010c7c:	b510      	push	{r4, lr}
 8010c7e:	4604      	mov	r4, r0
 8010c80:	6840      	ldr	r0, [r0, #4]
 8010c82:	6803      	ldr	r3, [r0, #0]
 8010c84:	689b      	ldr	r3, [r3, #8]
 8010c86:	4798      	blx	r3
 8010c88:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8010c8c:	b113      	cbz	r3, 8010c94 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010c8e:	2301      	movs	r3, #1
 8010c90:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010c94:	bd10      	pop	{r4, pc}

08010c96 <_ZN8touchgfx3HAL10initializeEv>:
 8010c96:	b510      	push	{r4, lr}
 8010c98:	4604      	mov	r4, r0
 8010c9a:	f7f1 fd2d 	bl	80026f8 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010c9e:	f7f1 fc39 	bl	8002514 <_ZN8touchgfx4GPIO4initEv>
 8010ca2:	6860      	ldr	r0, [r4, #4]
 8010ca4:	6803      	ldr	r3, [r0, #0]
 8010ca6:	68db      	ldr	r3, [r3, #12]
 8010ca8:	4798      	blx	r3
 8010caa:	68e0      	ldr	r0, [r4, #12]
 8010cac:	6803      	ldr	r3, [r0, #0]
 8010cae:	689b      	ldr	r3, [r3, #8]
 8010cb0:	4798      	blx	r3
 8010cb2:	6823      	ldr	r3, [r4, #0]
 8010cb4:	4620      	mov	r0, r4
 8010cb6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010cb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cbc:	4718      	bx	r3
	...

08010cc0 <_ZN8touchgfx3HAL4tickEv>:
 8010cc0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010cc2:	6803      	ldr	r3, [r0, #0]
 8010cc4:	4d5b      	ldr	r5, [pc, #364]	; (8010e34 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010cc6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010cca:	4604      	mov	r4, r0
 8010ccc:	4798      	blx	r3
 8010cce:	2800      	cmp	r0, #0
 8010cd0:	f000 8095 	beq.w	8010dfe <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010cd4:	2001      	movs	r0, #1
 8010cd6:	f7f1 fbcf 	bl	8002478 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010cda:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8010cde:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010ce2:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010ce6:	2600      	movs	r6, #0
 8010ce8:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8010cec:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010cf0:	b133      	cbz	r3, 8010d00 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010cf2:	6823      	ldr	r3, [r4, #0]
 8010cf4:	4620      	mov	r0, r4
 8010cf6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010cfa:	4798      	blx	r3
 8010cfc:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010d00:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010d04:	6862      	ldr	r2, [r4, #4]
 8010d06:	f083 0301 	eor.w	r3, r3, #1
 8010d0a:	7253      	strb	r3, [r2, #9]
 8010d0c:	2601      	movs	r6, #1
 8010d0e:	702e      	strb	r6, [r5, #0]
 8010d10:	f004 ff6e 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
 8010d14:	6803      	ldr	r3, [r0, #0]
 8010d16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010d18:	4798      	blx	r3
 8010d1a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010d1e:	b90b      	cbnz	r3, 8010d24 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010d20:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010d24:	f004 ff64 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
 8010d28:	6803      	ldr	r3, [r0, #0]
 8010d2a:	695b      	ldr	r3, [r3, #20]
 8010d2c:	4798      	blx	r3
 8010d2e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010d30:	6803      	ldr	r3, [r0, #0]
 8010d32:	691b      	ldr	r3, [r3, #16]
 8010d34:	4798      	blx	r3
 8010d36:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010d3a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8010d3e:	3b01      	subs	r3, #1
 8010d40:	b2db      	uxtb	r3, r3
 8010d42:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010d46:	b10a      	cbz	r2, 8010d4c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010d48:	2b00      	cmp	r3, #0
 8010d4a:	d1eb      	bne.n	8010d24 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010d4c:	4a3a      	ldr	r2, [pc, #232]	; (8010e38 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010d4e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010d52:	7813      	ldrb	r3, [r2, #0]
 8010d54:	3301      	adds	r3, #1
 8010d56:	b25b      	sxtb	r3, r3
 8010d58:	4299      	cmp	r1, r3
 8010d5a:	7013      	strb	r3, [r2, #0]
 8010d5c:	dc10      	bgt.n	8010d80 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010d5e:	68e0      	ldr	r0, [r4, #12]
 8010d60:	2300      	movs	r3, #0
 8010d62:	7013      	strb	r3, [r2, #0]
 8010d64:	6803      	ldr	r3, [r0, #0]
 8010d66:	aa03      	add	r2, sp, #12
 8010d68:	68db      	ldr	r3, [r3, #12]
 8010d6a:	a902      	add	r1, sp, #8
 8010d6c:	4798      	blx	r3
 8010d6e:	6823      	ldr	r3, [r4, #0]
 8010d70:	2800      	cmp	r0, #0
 8010d72:	d050      	beq.n	8010e16 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010d74:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010d78:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010d7c:	4620      	mov	r0, r4
 8010d7e:	4798      	blx	r3
 8010d80:	6960      	ldr	r0, [r4, #20]
 8010d82:	2300      	movs	r3, #0
 8010d84:	f88d 3007 	strb.w	r3, [sp, #7]
 8010d88:	b158      	cbz	r0, 8010da2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010d8a:	6803      	ldr	r3, [r0, #0]
 8010d8c:	f10d 0107 	add.w	r1, sp, #7
 8010d90:	68db      	ldr	r3, [r3, #12]
 8010d92:	4798      	blx	r3
 8010d94:	b128      	cbz	r0, 8010da2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010d96:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010d98:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010d9c:	6803      	ldr	r3, [r0, #0]
 8010d9e:	68db      	ldr	r3, [r3, #12]
 8010da0:	4798      	blx	r3
 8010da2:	f104 001c 	add.w	r0, r4, #28
 8010da6:	f015 feb9 	bl	8026b1c <_ZN8touchgfx8Gestures4tickEv>
 8010daa:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8010dae:	b30b      	cbz	r3, 8010df4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010db0:	6920      	ldr	r0, [r4, #16]
 8010db2:	6803      	ldr	r3, [r0, #0]
 8010db4:	691b      	ldr	r3, [r3, #16]
 8010db6:	4798      	blx	r3
 8010db8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010dba:	4606      	mov	r6, r0
 8010dbc:	b903      	cbnz	r3, 8010dc0 <_ZN8touchgfx3HAL4tickEv+0x100>
 8010dbe:	6760      	str	r0, [r4, #116]	; 0x74
 8010dc0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010dc2:	4a1e      	ldr	r2, [pc, #120]	; (8010e3c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010dc4:	1af3      	subs	r3, r6, r3
 8010dc6:	4293      	cmp	r3, r2
 8010dc8:	d914      	bls.n	8010df4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010dca:	6920      	ldr	r0, [r4, #16]
 8010dcc:	6803      	ldr	r3, [r0, #0]
 8010dce:	699b      	ldr	r3, [r3, #24]
 8010dd0:	4798      	blx	r3
 8010dd2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010dd4:	2264      	movs	r2, #100	; 0x64
 8010dd6:	1af3      	subs	r3, r6, r3
 8010dd8:	fbb3 f3f2 	udiv	r3, r3, r2
 8010ddc:	fbb0 f0f3 	udiv	r0, r0, r3
 8010de0:	2800      	cmp	r0, #0
 8010de2:	dc1d      	bgt.n	8010e20 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010de4:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010de8:	6920      	ldr	r0, [r4, #16]
 8010dea:	6803      	ldr	r3, [r0, #0]
 8010dec:	2100      	movs	r1, #0
 8010dee:	69db      	ldr	r3, [r3, #28]
 8010df0:	4798      	blx	r3
 8010df2:	6766      	str	r6, [r4, #116]	; 0x74
 8010df4:	f004 fefc 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
 8010df8:	6803      	ldr	r3, [r0, #0]
 8010dfa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010dfc:	4798      	blx	r3
 8010dfe:	6823      	ldr	r3, [r4, #0]
 8010e00:	4620      	mov	r0, r4
 8010e02:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010e06:	4798      	blx	r3
 8010e08:	2001      	movs	r0, #1
 8010e0a:	f7f1 fb4d 	bl	80024a8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010e0e:	2300      	movs	r3, #0
 8010e10:	702b      	strb	r3, [r5, #0]
 8010e12:	b004      	add	sp, #16
 8010e14:	bd70      	pop	{r4, r5, r6, pc}
 8010e16:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010e1a:	4620      	mov	r0, r4
 8010e1c:	4798      	blx	r3
 8010e1e:	e7af      	b.n	8010d80 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010e20:	2863      	cmp	r0, #99	; 0x63
 8010e22:	bfcb      	itete	gt
 8010e24:	2300      	movgt	r3, #0
 8010e26:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8010e2a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8010e2e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010e32:	e7d9      	b.n	8010de8 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010e34:	20012da8 	.word	0x20012da8
 8010e38:	20012da9 	.word	0x20012da9
 8010e3c:	05f5e100 	.word	0x05f5e100

08010e40 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010e40:	b510      	push	{r4, lr}
 8010e42:	4604      	mov	r4, r0
 8010e44:	f7f1 fc88 	bl	8002758 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010e48:	6863      	ldr	r3, [r4, #4]
 8010e4a:	2200      	movs	r2, #0
 8010e4c:	729a      	strb	r2, [r3, #10]
 8010e4e:	bd10      	pop	{r4, pc}

08010e50 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010e50:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010e52:	301c      	adds	r0, #28
 8010e54:	f015 be60 	b.w	8026b18 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010e58 <_ZN8touchgfx3HAL5touchEll>:
 8010e58:	b530      	push	{r4, r5, lr}
 8010e5a:	b087      	sub	sp, #28
 8010e5c:	4604      	mov	r4, r0
 8010e5e:	a804      	add	r0, sp, #16
 8010e60:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010e64:	f004 fc90 	bl	8015788 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010e68:	9b04      	ldr	r3, [sp, #16]
 8010e6a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010e6e:	a906      	add	r1, sp, #24
 8010e70:	9b05      	ldr	r3, [sp, #20]
 8010e72:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010e76:	a803      	add	r0, sp, #12
 8010e78:	f004 fcd8 	bl	801582c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010e7c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010e80:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010e84:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010e88:	f104 001c 	add.w	r0, r4, #28
 8010e8c:	b189      	cbz	r1, 8010eb2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010e8e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010e92:	9300      	str	r3, [sp, #0]
 8010e94:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010e98:	4613      	mov	r3, r2
 8010e9a:	462a      	mov	r2, r5
 8010e9c:	f015 fe4c 	bl	8026b38 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010ea0:	b128      	cbz	r0, 8010eae <_ZN8touchgfx3HAL5touchEll+0x56>
 8010ea2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010ea6:	6623      	str	r3, [r4, #96]	; 0x60
 8010ea8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010eac:	6663      	str	r3, [r4, #100]	; 0x64
 8010eae:	b007      	add	sp, #28
 8010eb0:	bd30      	pop	{r4, r5, pc}
 8010eb2:	f015 fe81 	bl	8026bb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010eb6:	2301      	movs	r3, #1
 8010eb8:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010ebc:	e7f1      	b.n	8010ea2 <_ZN8touchgfx3HAL5touchEll+0x4a>

08010ebe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010ebe:	b510      	push	{r4, lr}
 8010ec0:	2b00      	cmp	r3, #0
 8010ec2:	d046      	beq.n	8010f52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010ec4:	ea81 0002 	eor.w	r0, r1, r2
 8010ec8:	07c4      	lsls	r4, r0, #31
 8010eca:	d508      	bpl.n	8010ede <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010ecc:	440b      	add	r3, r1
 8010ece:	3a01      	subs	r2, #1
 8010ed0:	428b      	cmp	r3, r1
 8010ed2:	d93e      	bls.n	8010f52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010ed4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010ed8:	f801 0b01 	strb.w	r0, [r1], #1
 8010edc:	e7f8      	b.n	8010ed0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010ede:	07d0      	lsls	r0, r2, #31
 8010ee0:	bf42      	ittt	mi
 8010ee2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010ee6:	f801 0b01 	strbmi.w	r0, [r1], #1
 8010eea:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010eee:	2b01      	cmp	r3, #1
 8010ef0:	d911      	bls.n	8010f16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010ef2:	ea81 0402 	eor.w	r4, r1, r2
 8010ef6:	07a4      	lsls	r4, r4, #30
 8010ef8:	4610      	mov	r0, r2
 8010efa:	d022      	beq.n	8010f42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010efc:	f023 0401 	bic.w	r4, r3, #1
 8010f00:	440c      	add	r4, r1
 8010f02:	428c      	cmp	r4, r1
 8010f04:	4602      	mov	r2, r0
 8010f06:	d904      	bls.n	8010f12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010f08:	8812      	ldrh	r2, [r2, #0]
 8010f0a:	f821 2b02 	strh.w	r2, [r1], #2
 8010f0e:	3002      	adds	r0, #2
 8010f10:	e7f7      	b.n	8010f02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010f12:	f003 0301 	and.w	r3, r3, #1
 8010f16:	f023 0003 	bic.w	r0, r3, #3
 8010f1a:	4408      	add	r0, r1
 8010f1c:	4288      	cmp	r0, r1
 8010f1e:	4614      	mov	r4, r2
 8010f20:	d904      	bls.n	8010f2c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010f22:	6824      	ldr	r4, [r4, #0]
 8010f24:	f841 4b04 	str.w	r4, [r1], #4
 8010f28:	3204      	adds	r2, #4
 8010f2a:	e7f7      	b.n	8010f1c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010f2c:	f003 0303 	and.w	r3, r3, #3
 8010f30:	440b      	add	r3, r1
 8010f32:	3a01      	subs	r2, #1
 8010f34:	428b      	cmp	r3, r1
 8010f36:	d90c      	bls.n	8010f52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010f38:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010f3c:	f801 0b01 	strb.w	r0, [r1], #1
 8010f40:	e7f8      	b.n	8010f34 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010f42:	0790      	lsls	r0, r2, #30
 8010f44:	d0e7      	beq.n	8010f16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010f46:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010f4a:	f821 0b02 	strh.w	r0, [r1], #2
 8010f4e:	3b02      	subs	r3, #2
 8010f50:	e7e1      	b.n	8010f16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010f52:	2001      	movs	r0, #1
 8010f54:	bd10      	pop	{r4, pc}

08010f56 <_ZN8touchgfx3HAL7noTouchEv>:
 8010f56:	b510      	push	{r4, lr}
 8010f58:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8010f5c:	4604      	mov	r4, r0
 8010f5e:	b153      	cbz	r3, 8010f76 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010f60:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010f64:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010f68:	2101      	movs	r1, #1
 8010f6a:	301c      	adds	r0, #28
 8010f6c:	f015 fe24 	bl	8026bb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010f70:	2300      	movs	r3, #0
 8010f72:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010f76:	bd10      	pop	{r4, pc}

08010f78 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010f78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010f7c:	b085      	sub	sp, #20
 8010f7e:	ad04      	add	r5, sp, #16
 8010f80:	4604      	mov	r4, r0
 8010f82:	2000      	movs	r0, #0
 8010f84:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010f88:	69a0      	ldr	r0, [r4, #24]
 8010f8a:	6806      	ldr	r6, [r0, #0]
 8010f8c:	9501      	str	r5, [sp, #4]
 8010f8e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010f92:	9500      	str	r5, [sp, #0]
 8010f94:	6835      	ldr	r5, [r6, #0]
 8010f96:	4699      	mov	r9, r3
 8010f98:	460f      	mov	r7, r1
 8010f9a:	4690      	mov	r8, r2
 8010f9c:	47a8      	blx	r5
 8010f9e:	4d10      	ldr	r5, [pc, #64]	; (8010fe0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010fa0:	4606      	mov	r6, r0
 8010fa2:	f8a5 9000 	strh.w	r9, [r5]
 8010fa6:	f7f3 fbdd 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 8010faa:	6803      	ldr	r3, [r0, #0]
 8010fac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010fae:	4798      	blx	r3
 8010fb0:	b128      	cbz	r0, 8010fbe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010fb2:	2801      	cmp	r0, #1
 8010fb4:	d00b      	beq.n	8010fce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010fb6:	4630      	mov	r0, r6
 8010fb8:	b005      	add	sp, #20
 8010fba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010fbe:	882b      	ldrh	r3, [r5, #0]
 8010fc0:	fb08 7203 	mla	r2, r8, r3, r7
 8010fc4:	9b03      	ldr	r3, [sp, #12]
 8010fc6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010fca:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010fcc:	e7f3      	b.n	8010fb6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010fce:	882a      	ldrh	r2, [r5, #0]
 8010fd0:	9b03      	ldr	r3, [sp, #12]
 8010fd2:	fb08 7202 	mla	r2, r8, r2, r7
 8010fd6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010fda:	1a9a      	subs	r2, r3, r2
 8010fdc:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010fde:	e7ea      	b.n	8010fb6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010fe0:	20012d9e 	.word	0x20012d9e

08010fe4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010fe4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010fe6:	b08b      	sub	sp, #44	; 0x2c
 8010fe8:	4617      	mov	r7, r2
 8010fea:	4604      	mov	r4, r0
 8010fec:	460e      	mov	r6, r1
 8010fee:	461d      	mov	r5, r3
 8010ff0:	f7f3 fbb8 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 8010ff4:	6803      	ldr	r3, [r0, #0]
 8010ff6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ff8:	4798      	blx	r3
 8010ffa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010ffe:	9007      	str	r0, [sp, #28]
 8011000:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011004:	4b0d      	ldr	r3, [pc, #52]	; (801103c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8011006:	6822      	ldr	r2, [r4, #0]
 8011008:	881b      	ldrh	r3, [r3, #0]
 801100a:	9306      	str	r3, [sp, #24]
 801100c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011010:	9305      	str	r3, [sp, #20]
 8011012:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8011016:	9304      	str	r3, [sp, #16]
 8011018:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801101c:	9303      	str	r3, [sp, #12]
 801101e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011022:	9302      	str	r3, [sp, #8]
 8011024:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011028:	e9cd 5300 	strd	r5, r3, [sp]
 801102c:	4631      	mov	r1, r6
 801102e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011030:	463b      	mov	r3, r7
 8011032:	2200      	movs	r2, #0
 8011034:	4620      	mov	r0, r4
 8011036:	47a8      	blx	r5
 8011038:	b00b      	add	sp, #44	; 0x2c
 801103a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801103c:	20012d9e 	.word	0x20012d9e

08011040 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011040:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011044:	4698      	mov	r8, r3
 8011046:	6803      	ldr	r3, [r0, #0]
 8011048:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 801104a:	4b15      	ldr	r3, [pc, #84]	; (80110a0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 801104c:	b08b      	sub	sp, #44	; 0x2c
 801104e:	4617      	mov	r7, r2
 8011050:	f8b3 9000 	ldrh.w	r9, [r3]
 8011054:	460e      	mov	r6, r1
 8011056:	4604      	mov	r4, r0
 8011058:	f7f3 fb84 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 801105c:	6803      	ldr	r3, [r0, #0]
 801105e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011060:	4798      	blx	r3
 8011062:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011066:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801106a:	2302      	movs	r3, #2
 801106c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011070:	2301      	movs	r3, #1
 8011072:	9305      	str	r3, [sp, #20]
 8011074:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011078:	9304      	str	r3, [sp, #16]
 801107a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801107e:	9303      	str	r3, [sp, #12]
 8011080:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011084:	9302      	str	r3, [sp, #8]
 8011086:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801108a:	2200      	movs	r2, #0
 801108c:	e9cd 8300 	strd	r8, r3, [sp]
 8011090:	4631      	mov	r1, r6
 8011092:	463b      	mov	r3, r7
 8011094:	4620      	mov	r0, r4
 8011096:	47a8      	blx	r5
 8011098:	b00b      	add	sp, #44	; 0x2c
 801109a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801109e:	bf00      	nop
 80110a0:	20012d9e 	.word	0x20012d9e

080110a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80110a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80110a8:	4698      	mov	r8, r3
 80110aa:	6803      	ldr	r3, [r0, #0]
 80110ac:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80110ae:	4b11      	ldr	r3, [pc, #68]	; (80110f4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80110b0:	b087      	sub	sp, #28
 80110b2:	f8b3 9000 	ldrh.w	r9, [r3]
 80110b6:	460e      	mov	r6, r1
 80110b8:	4617      	mov	r7, r2
 80110ba:	4604      	mov	r4, r0
 80110bc:	f7f3 fb52 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 80110c0:	6803      	ldr	r3, [r0, #0]
 80110c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80110c4:	4798      	blx	r3
 80110c6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80110ca:	f8cd 900c 	str.w	r9, [sp, #12]
 80110ce:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80110d2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80110d6:	9302      	str	r3, [sp, #8]
 80110d8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80110dc:	9301      	str	r3, [sp, #4]
 80110de:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80110e2:	9300      	str	r3, [sp, #0]
 80110e4:	463a      	mov	r2, r7
 80110e6:	4643      	mov	r3, r8
 80110e8:	4631      	mov	r1, r6
 80110ea:	4620      	mov	r0, r4
 80110ec:	47a8      	blx	r5
 80110ee:	b007      	add	sp, #28
 80110f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80110f4:	20012d9e 	.word	0x20012d9e

080110f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80110f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110fc:	4604      	mov	r4, r0
 80110fe:	b08f      	sub	sp, #60	; 0x3c
 8011100:	4610      	mov	r0, r2
 8011102:	460d      	mov	r5, r1
 8011104:	4691      	mov	r9, r2
 8011106:	461e      	mov	r6, r3
 8011108:	f008 f8f0 	bl	80192ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801110c:	2800      	cmp	r0, #0
 801110e:	f000 809d 	beq.w	801124c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8011112:	6823      	ldr	r3, [r4, #0]
 8011114:	f8df b198 	ldr.w	fp, [pc, #408]	; 80112b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011118:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801111a:	f8df a198 	ldr.w	sl, [pc, #408]	; 80112b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801111e:	4f61      	ldr	r7, [pc, #388]	; (80112a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011120:	4620      	mov	r0, r4
 8011122:	4798      	blx	r3
 8011124:	6823      	ldr	r3, [r4, #0]
 8011126:	4620      	mov	r0, r4
 8011128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801112a:	4798      	blx	r3
 801112c:	f8bb 3000 	ldrh.w	r3, [fp]
 8011130:	9301      	str	r3, [sp, #4]
 8011132:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8011136:	f8ba 3000 	ldrh.w	r3, [sl]
 801113a:	9302      	str	r3, [sp, #8]
 801113c:	883b      	ldrh	r3, [r7, #0]
 801113e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8011142:	9303      	str	r3, [sp, #12]
 8011144:	4b58      	ldr	r3, [pc, #352]	; (80112a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011146:	9305      	str	r3, [sp, #20]
 8011148:	881a      	ldrh	r2, [r3, #0]
 801114a:	9204      	str	r2, [sp, #16]
 801114c:	4640      	mov	r0, r8
 801114e:	f008 f961 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011152:	8038      	strh	r0, [r7, #0]
 8011154:	4640      	mov	r0, r8
 8011156:	f008 f991 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801115a:	9b05      	ldr	r3, [sp, #20]
 801115c:	b280      	uxth	r0, r0
 801115e:	8018      	strh	r0, [r3, #0]
 8011160:	4b52      	ldr	r3, [pc, #328]	; (80112ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8011162:	781b      	ldrb	r3, [r3, #0]
 8011164:	2b00      	cmp	r3, #0
 8011166:	d174      	bne.n	8011252 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011168:	883b      	ldrh	r3, [r7, #0]
 801116a:	f8ab 3000 	strh.w	r3, [fp]
 801116e:	f8aa 0000 	strh.w	r0, [sl]
 8011172:	4648      	mov	r0, r9
 8011174:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011178:	f008 f8b8 	bl	80192ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801117c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011180:	2200      	movs	r2, #0
 8011182:	4611      	mov	r1, r2
 8011184:	4628      	mov	r0, r5
 8011186:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801118a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801118e:	f7f1 ff5e 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8011192:	2301      	movs	r3, #1
 8011194:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011198:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801119c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80111a0:	2b00      	cmp	r3, #0
 80111a2:	dd5c      	ble.n	801125e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80111a4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80111a8:	2b00      	cmp	r3, #0
 80111aa:	dd58      	ble.n	801125e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80111ac:	462a      	mov	r2, r5
 80111ae:	ab0a      	add	r3, sp, #40	; 0x28
 80111b0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80111b4:	6851      	ldr	r1, [r2, #4]
 80111b6:	c303      	stmia	r3!, {r0, r1}
 80111b8:	4631      	mov	r1, r6
 80111ba:	a80a      	add	r0, sp, #40	; 0x28
 80111bc:	f7ff fc06 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 80111c0:	4b38      	ldr	r3, [pc, #224]	; (80112a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80111c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80111c6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80111ca:	2100      	movs	r1, #0
 80111cc:	aa0a      	add	r2, sp, #40	; 0x28
 80111ce:	4b36      	ldr	r3, [pc, #216]	; (80112a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80111d0:	910c      	str	r1, [sp, #48]	; 0x30
 80111d2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80111d6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80111da:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80111de:	ab08      	add	r3, sp, #32
 80111e0:	e883 0003 	stmia.w	r3, {r0, r1}
 80111e4:	4618      	mov	r0, r3
 80111e6:	a90c      	add	r1, sp, #48	; 0x30
 80111e8:	f7ff fbf0 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 80111ec:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80111ee:	2b00      	cmp	r3, #0
 80111f0:	d13c      	bne.n	801126c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80111f2:	2000      	movs	r0, #0
 80111f4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80111f8:	2600      	movs	r6, #0
 80111fa:	682a      	ldr	r2, [r5, #0]
 80111fc:	696b      	ldr	r3, [r5, #20]
 80111fe:	616e      	str	r6, [r5, #20]
 8011200:	9305      	str	r3, [sp, #20]
 8011202:	6892      	ldr	r2, [r2, #8]
 8011204:	a908      	add	r1, sp, #32
 8011206:	4628      	mov	r0, r5
 8011208:	4790      	blx	r2
 801120a:	9b05      	ldr	r3, [sp, #20]
 801120c:	616b      	str	r3, [r5, #20]
 801120e:	4652      	mov	r2, sl
 8011210:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8011214:	4649      	mov	r1, r9
 8011216:	4628      	mov	r0, r5
 8011218:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801121c:	f7f1 ff17 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8011220:	4b23      	ldr	r3, [pc, #140]	; (80112b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8011222:	9a01      	ldr	r2, [sp, #4]
 8011224:	801a      	strh	r2, [r3, #0]
 8011226:	4b23      	ldr	r3, [pc, #140]	; (80112b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011228:	9a02      	ldr	r2, [sp, #8]
 801122a:	801a      	strh	r2, [r3, #0]
 801122c:	4b1d      	ldr	r3, [pc, #116]	; (80112a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801122e:	9a03      	ldr	r2, [sp, #12]
 8011230:	801a      	strh	r2, [r3, #0]
 8011232:	4b1d      	ldr	r3, [pc, #116]	; (80112a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011234:	9a04      	ldr	r2, [sp, #16]
 8011236:	801a      	strh	r2, [r3, #0]
 8011238:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801123c:	6823      	ldr	r3, [r4, #0]
 801123e:	4620      	mov	r0, r4
 8011240:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011242:	4798      	blx	r3
 8011244:	6823      	ldr	r3, [r4, #0]
 8011246:	4620      	mov	r0, r4
 8011248:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801124a:	4798      	blx	r3
 801124c:	b00f      	add	sp, #60	; 0x3c
 801124e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011252:	883b      	ldrh	r3, [r7, #0]
 8011254:	f8ab 0000 	strh.w	r0, [fp]
 8011258:	f8aa 3000 	strh.w	r3, [sl]
 801125c:	e789      	b.n	8011172 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801125e:	462a      	mov	r2, r5
 8011260:	ab0a      	add	r3, sp, #40	; 0x28
 8011262:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011266:	6851      	ldr	r1, [r2, #4]
 8011268:	c303      	stmia	r3!, {r0, r1}
 801126a:	e7a9      	b.n	80111c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801126c:	a807      	add	r0, sp, #28
 801126e:	f008 fa41 	bl	80196f4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011272:	4606      	mov	r6, r0
 8011274:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011276:	6803      	ldr	r3, [r0, #0]
 8011278:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801127a:	4798      	blx	r3
 801127c:	4286      	cmp	r6, r0
 801127e:	d1b8      	bne.n	80111f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011280:	f7f3 fa70 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 8011284:	6803      	ldr	r3, [r0, #0]
 8011286:	4606      	mov	r6, r0
 8011288:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801128a:	9305      	str	r3, [sp, #20]
 801128c:	a807      	add	r0, sp, #28
 801128e:	f008 fa31 	bl	80196f4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011292:	9b05      	ldr	r3, [sp, #20]
 8011294:	4601      	mov	r1, r0
 8011296:	4630      	mov	r0, r6
 8011298:	4798      	blx	r3
 801129a:	f080 0001 	eor.w	r0, r0, #1
 801129e:	b2c0      	uxtb	r0, r0
 80112a0:	e7a8      	b.n	80111f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80112a2:	bf00      	nop
 80112a4:	20012d98 	.word	0x20012d98
 80112a8:	20012d9a 	.word	0x20012d9a
 80112ac:	20012d9c 	.word	0x20012d9c
 80112b0:	20012d9e 	.word	0x20012d9e
 80112b4:	20012da0 	.word	0x20012da0

080112b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80112b8:	b510      	push	{r4, lr}
 80112ba:	4b07      	ldr	r3, [pc, #28]	; (80112d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80112bc:	781b      	ldrb	r3, [r3, #0]
 80112be:	4604      	mov	r4, r0
 80112c0:	b13b      	cbz	r3, 80112d2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80112c2:	6803      	ldr	r3, [r0, #0]
 80112c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80112c6:	4798      	blx	r3
 80112c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80112ca:	4283      	cmp	r3, r0
 80112cc:	d101      	bne.n	80112d2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80112ce:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80112d0:	bd10      	pop	{r4, pc}
 80112d2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80112d4:	e7fc      	b.n	80112d0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80112d6:	bf00      	nop
 80112d8:	20012da2 	.word	0x20012da2

080112dc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80112dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112e0:	b08a      	sub	sp, #40	; 0x28
 80112e2:	461d      	mov	r5, r3
 80112e4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80112e8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80112ec:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80112f0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80112f4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80112f8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80112fc:	2400      	movs	r4, #0
 80112fe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011302:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8011306:	f8ad 301c 	strh.w	r3, [sp, #28]
 801130a:	4690      	mov	r8, r2
 801130c:	4607      	mov	r7, r0
 801130e:	9404      	str	r4, [sp, #16]
 8011310:	f88d 4020 	strb.w	r4, [sp, #32]
 8011314:	f7ff ffd0 	bl	80112b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011318:	fb06 8505 	mla	r5, r6, r5, r8
 801131c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011320:	6878      	ldr	r0, [r7, #4]
 8011322:	9505      	str	r5, [sp, #20]
 8011324:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011328:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801132c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8011330:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011334:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011338:	6803      	ldr	r3, [r0, #0]
 801133a:	a901      	add	r1, sp, #4
 801133c:	685b      	ldr	r3, [r3, #4]
 801133e:	4798      	blx	r3
 8011340:	b00a      	add	sp, #40	; 0x28
 8011342:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011346 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8011346:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801134a:	b08b      	sub	sp, #44	; 0x2c
 801134c:	2400      	movs	r4, #0
 801134e:	461d      	mov	r5, r3
 8011350:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011354:	4688      	mov	r8, r1
 8011356:	4691      	mov	r9, r2
 8011358:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801135c:	9404      	str	r4, [sp, #16]
 801135e:	4607      	mov	r7, r0
 8011360:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011364:	f7ff ffa8 	bl	80112b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011368:	fb06 9505 	mla	r5, r6, r5, r9
 801136c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011370:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011374:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011378:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801137c:	6878      	ldr	r0, [r7, #4]
 801137e:	9505      	str	r5, [sp, #20]
 8011380:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011384:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011388:	f8ad 601e 	strh.w	r6, [sp, #30]
 801138c:	f8cd 8010 	str.w	r8, [sp, #16]
 8011390:	f8ad 4020 	strh.w	r4, [sp, #32]
 8011394:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011398:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801139c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80113a0:	6803      	ldr	r3, [r0, #0]
 80113a2:	a901      	add	r1, sp, #4
 80113a4:	685b      	ldr	r3, [r3, #4]
 80113a6:	4798      	blx	r3
 80113a8:	b00b      	add	sp, #44	; 0x2c
 80113aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080113b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80113b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113b4:	b08a      	sub	sp, #40	; 0x28
 80113b6:	4698      	mov	r8, r3
 80113b8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80113bc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80113c0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80113c4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80113c8:	2300      	movs	r3, #0
 80113ca:	2d0b      	cmp	r5, #11
 80113cc:	4606      	mov	r6, r0
 80113ce:	9304      	str	r3, [sp, #16]
 80113d0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80113d4:	d138      	bne.n	8011448 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80113d6:	2380      	movs	r3, #128	; 0x80
 80113d8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80113dc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80113e0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80113e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80113e8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80113ec:	f88d 0020 	strb.w	r0, [sp, #32]
 80113f0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80113f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80113f8:	4630      	mov	r0, r6
 80113fa:	9203      	str	r2, [sp, #12]
 80113fc:	f7ff ff5c 	bl	80112b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011400:	2c0b      	cmp	r4, #11
 8011402:	bf98      	it	ls
 8011404:	4b1b      	ldrls	r3, [pc, #108]	; (8011474 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011406:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801140a:	bf98      	it	ls
 801140c:	5d19      	ldrbls	r1, [r3, r4]
 801140e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8011412:	bf88      	it	hi
 8011414:	2100      	movhi	r1, #0
 8011416:	fb02 8307 	mla	r3, r2, r7, r8
 801141a:	10c9      	asrs	r1, r1, #3
 801141c:	fb01 0003 	mla	r0, r1, r3, r0
 8011420:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8011424:	9005      	str	r0, [sp, #20]
 8011426:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801142a:	6870      	ldr	r0, [r6, #4]
 801142c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8011430:	2300      	movs	r3, #0
 8011432:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011436:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801143a:	6803      	ldr	r3, [r0, #0]
 801143c:	a901      	add	r1, sp, #4
 801143e:	685b      	ldr	r3, [r3, #4]
 8011440:	4798      	blx	r3
 8011442:	b00a      	add	sp, #40	; 0x28
 8011444:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011448:	2d02      	cmp	r5, #2
 801144a:	d109      	bne.n	8011460 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 801144c:	28ff      	cmp	r0, #255	; 0xff
 801144e:	d105      	bne.n	801145c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011450:	f1bc 0f00 	cmp.w	ip, #0
 8011454:	bf14      	ite	ne
 8011456:	2340      	movne	r3, #64	; 0x40
 8011458:	2320      	moveq	r3, #32
 801145a:	e7bd      	b.n	80113d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801145c:	2340      	movs	r3, #64	; 0x40
 801145e:	e7bb      	b.n	80113d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011460:	28ff      	cmp	r0, #255	; 0xff
 8011462:	d105      	bne.n	8011470 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8011464:	f1bc 0f00 	cmp.w	ip, #0
 8011468:	bf14      	ite	ne
 801146a:	2304      	movne	r3, #4
 801146c:	2301      	moveq	r3, #1
 801146e:	e7b3      	b.n	80113d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011470:	2304      	movs	r3, #4
 8011472:	e7b1      	b.n	80113d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011474:	0802ecfc 	.word	0x0802ecfc

08011478 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801147c:	b08b      	sub	sp, #44	; 0x2c
 801147e:	461d      	mov	r5, r3
 8011480:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011484:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011488:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801148c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011490:	bf14      	ite	ne
 8011492:	2308      	movne	r3, #8
 8011494:	2302      	moveq	r3, #2
 8011496:	2400      	movs	r4, #0
 8011498:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801149c:	4688      	mov	r8, r1
 801149e:	4693      	mov	fp, r2
 80114a0:	9404      	str	r4, [sp, #16]
 80114a2:	4607      	mov	r7, r0
 80114a4:	f7ff ff08 	bl	80112b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80114a8:	2e0b      	cmp	r6, #11
 80114aa:	bf98      	it	ls
 80114ac:	4b15      	ldrls	r3, [pc, #84]	; (8011504 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80114ae:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80114b2:	bf98      	it	ls
 80114b4:	5d9c      	ldrbls	r4, [r3, r6]
 80114b6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80114ba:	f8ad 3018 	strh.w	r3, [sp, #24]
 80114be:	fb05 b50a 	mla	r5, r5, sl, fp
 80114c2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80114c6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80114ca:	10e4      	asrs	r4, r4, #3
 80114cc:	fb04 0405 	mla	r4, r4, r5, r0
 80114d0:	2300      	movs	r3, #0
 80114d2:	6878      	ldr	r0, [r7, #4]
 80114d4:	9405      	str	r4, [sp, #20]
 80114d6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80114da:	f8ad a01e 	strh.w	sl, [sp, #30]
 80114de:	f8cd 8010 	str.w	r8, [sp, #16]
 80114e2:	f88d 9020 	strb.w	r9, [sp, #32]
 80114e6:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 80114ea:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80114ee:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80114f2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80114f6:	6803      	ldr	r3, [r0, #0]
 80114f8:	a901      	add	r1, sp, #4
 80114fa:	685b      	ldr	r3, [r3, #4]
 80114fc:	4798      	blx	r3
 80114fe:	b00b      	add	sp, #44	; 0x2c
 8011500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011504:	0802ecfc 	.word	0x0802ecfc

08011508 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011508:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801150c:	461e      	mov	r6, r3
 801150e:	4b0a      	ldr	r3, [pc, #40]	; (8011538 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8011510:	460f      	mov	r7, r1
 8011512:	881d      	ldrh	r5, [r3, #0]
 8011514:	4690      	mov	r8, r2
 8011516:	f7f3 f925 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 801151a:	6803      	ldr	r3, [r0, #0]
 801151c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801151e:	4798      	blx	r3
 8011520:	280b      	cmp	r0, #11
 8011522:	bf9a      	itte	ls
 8011524:	4b05      	ldrls	r3, [pc, #20]	; (801153c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8011526:	5c1c      	ldrbls	r4, [r3, r0]
 8011528:	2400      	movhi	r4, #0
 801152a:	fb08 7005 	mla	r0, r8, r5, r7
 801152e:	10e4      	asrs	r4, r4, #3
 8011530:	fb04 6000 	mla	r0, r4, r0, r6
 8011534:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011538:	20012d9e 	.word	0x20012d9e
 801153c:	0802ecfc 	.word	0x0802ecfc

08011540 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011540:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011542:	b08b      	sub	sp, #44	; 0x2c
 8011544:	461f      	mov	r7, r3
 8011546:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801154a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801154e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011552:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011556:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801155a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801155e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011562:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011566:	2500      	movs	r5, #0
 8011568:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801156c:	f88d 3020 	strb.w	r3, [sp, #32]
 8011570:	4604      	mov	r4, r0
 8011572:	4616      	mov	r6, r2
 8011574:	9504      	str	r5, [sp, #16]
 8011576:	f7ff fe9f 	bl	80112b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801157a:	463a      	mov	r2, r7
 801157c:	4631      	mov	r1, r6
 801157e:	4603      	mov	r3, r0
 8011580:	4620      	mov	r0, r4
 8011582:	f7ff ffc1 	bl	8011508 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011586:	4b0e      	ldr	r3, [pc, #56]	; (80115c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011588:	9005      	str	r0, [sp, #20]
 801158a:	881b      	ldrh	r3, [r3, #0]
 801158c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011590:	f7f3 f8e8 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 8011594:	6803      	ldr	r3, [r0, #0]
 8011596:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011598:	4798      	blx	r3
 801159a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801159c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80115a0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80115a4:	9304      	str	r3, [sp, #16]
 80115a6:	6860      	ldr	r0, [r4, #4]
 80115a8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80115ac:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80115b0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80115b4:	6803      	ldr	r3, [r0, #0]
 80115b6:	a901      	add	r1, sp, #4
 80115b8:	685b      	ldr	r3, [r3, #4]
 80115ba:	4798      	blx	r3
 80115bc:	b00b      	add	sp, #44	; 0x2c
 80115be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80115c0:	20012d9e 	.word	0x20012d9e

080115c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80115c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80115c6:	b08d      	sub	sp, #52	; 0x34
 80115c8:	466b      	mov	r3, sp
 80115ca:	e883 0006 	stmia.w	r3, {r1, r2}
 80115ce:	2300      	movs	r3, #0
 80115d0:	9306      	str	r3, [sp, #24]
 80115d2:	6803      	ldr	r3, [r0, #0]
 80115d4:	f8bd 6000 	ldrh.w	r6, [sp]
 80115d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80115da:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80115de:	2501      	movs	r5, #1
 80115e0:	9503      	str	r5, [sp, #12]
 80115e2:	4604      	mov	r4, r0
 80115e4:	4798      	blx	r3
 80115e6:	463a      	mov	r2, r7
 80115e8:	4631      	mov	r1, r6
 80115ea:	4603      	mov	r3, r0
 80115ec:	4620      	mov	r0, r4
 80115ee:	f7ff ff8b 	bl	8011508 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80115f2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80115f4:	9307      	str	r3, [sp, #28]
 80115f6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80115fa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80115fe:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011602:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011606:	4b0f      	ldr	r3, [pc, #60]	; (8011644 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011608:	9004      	str	r0, [sp, #16]
 801160a:	881b      	ldrh	r3, [r3, #0]
 801160c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011610:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011614:	f7f3 f8a6 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 8011618:	6803      	ldr	r3, [r0, #0]
 801161a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801161c:	4798      	blx	r3
 801161e:	23ff      	movs	r3, #255	; 0xff
 8011620:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011624:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011628:	6860      	ldr	r0, [r4, #4]
 801162a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801162e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011632:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011636:	6803      	ldr	r3, [r0, #0]
 8011638:	a903      	add	r1, sp, #12
 801163a:	685b      	ldr	r3, [r3, #4]
 801163c:	4798      	blx	r3
 801163e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011640:	b00d      	add	sp, #52	; 0x34
 8011642:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011644:	20012d9e 	.word	0x20012d9e

08011648 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011648:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801164c:	b08c      	sub	sp, #48	; 0x30
 801164e:	461e      	mov	r6, r3
 8011650:	466d      	mov	r5, sp
 8011652:	2300      	movs	r3, #0
 8011654:	e885 0006 	stmia.w	r5, {r1, r2}
 8011658:	9306      	str	r3, [sp, #24]
 801165a:	6803      	ldr	r3, [r0, #0]
 801165c:	f8bd 7000 	ldrh.w	r7, [sp]
 8011660:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011662:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011666:	2501      	movs	r5, #1
 8011668:	9503      	str	r5, [sp, #12]
 801166a:	4604      	mov	r4, r0
 801166c:	4798      	blx	r3
 801166e:	4642      	mov	r2, r8
 8011670:	4639      	mov	r1, r7
 8011672:	4603      	mov	r3, r0
 8011674:	4620      	mov	r0, r4
 8011676:	f7ff ff47 	bl	8011508 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801167a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801167e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011682:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011686:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801168a:	4b11      	ldr	r3, [pc, #68]	; (80116d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801168c:	9004      	str	r0, [sp, #16]
 801168e:	881b      	ldrh	r3, [r3, #0]
 8011690:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011694:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011696:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801169a:	9607      	str	r6, [sp, #28]
 801169c:	f7f3 f862 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 80116a0:	6803      	ldr	r3, [r0, #0]
 80116a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116a4:	4798      	blx	r3
 80116a6:	23ff      	movs	r3, #255	; 0xff
 80116a8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80116ac:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80116b0:	6860      	ldr	r0, [r4, #4]
 80116b2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80116b6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80116ba:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80116be:	6803      	ldr	r3, [r0, #0]
 80116c0:	a903      	add	r1, sp, #12
 80116c2:	685b      	ldr	r3, [r3, #4]
 80116c4:	4798      	blx	r3
 80116c6:	4630      	mov	r0, r6
 80116c8:	b00c      	add	sp, #48	; 0x30
 80116ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80116ce:	bf00      	nop
 80116d0:	20012d9e 	.word	0x20012d9e

080116d4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80116d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80116d6:	b085      	sub	sp, #20
 80116d8:	ac02      	add	r4, sp, #8
 80116da:	e884 0006 	stmia.w	r4, {r1, r2}
 80116de:	4605      	mov	r5, r0
 80116e0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80116e4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80116e8:	f7ff fde6 	bl	80112b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80116ec:	463a      	mov	r2, r7
 80116ee:	4603      	mov	r3, r0
 80116f0:	4631      	mov	r1, r6
 80116f2:	4628      	mov	r0, r5
 80116f4:	f7ff ff08 	bl	8011508 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80116f8:	4a05      	ldr	r2, [pc, #20]	; (8011710 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80116fa:	682b      	ldr	r3, [r5, #0]
 80116fc:	8812      	ldrh	r2, [r2, #0]
 80116fe:	9200      	str	r2, [sp, #0]
 8011700:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8011702:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011706:	4603      	mov	r3, r0
 8011708:	4628      	mov	r0, r5
 801170a:	47b0      	blx	r6
 801170c:	b005      	add	sp, #20
 801170e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011710:	20012d9e 	.word	0x20012d9e

08011714 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011714:	b570      	push	{r4, r5, r6, lr}
 8011716:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 801171a:	4604      	mov	r4, r0
 801171c:	b19b      	cbz	r3, 8011746 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801171e:	2002      	movs	r0, #2
 8011720:	f7f0 feda 	bl	80024d8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011724:	2300      	movs	r3, #0
 8011726:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801172a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 801172e:	6823      	ldr	r3, [r4, #0]
 8011730:	4620      	mov	r0, r4
 8011732:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8011736:	f7ff fdbf 	bl	80112b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801173a:	462b      	mov	r3, r5
 801173c:	4601      	mov	r1, r0
 801173e:	4620      	mov	r0, r4
 8011740:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011744:	4718      	bx	r3
 8011746:	bd70      	pop	{r4, r5, r6, pc}

08011748 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011748:	b538      	push	{r3, r4, r5, lr}
 801174a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801174e:	428b      	cmp	r3, r1
 8011750:	4604      	mov	r4, r0
 8011752:	460d      	mov	r5, r1
 8011754:	d006      	beq.n	8011764 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011756:	6803      	ldr	r3, [r0, #0]
 8011758:	b929      	cbnz	r1, 8011766 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801175a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801175e:	4798      	blx	r3
 8011760:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8011764:	bd38      	pop	{r3, r4, r5, pc}
 8011766:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801176a:	e7f8      	b.n	801175e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801176c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801176c:	b510      	push	{r4, lr}
 801176e:	4b0d      	ldr	r3, [pc, #52]	; (80117a4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011770:	781b      	ldrb	r3, [r3, #0]
 8011772:	4604      	mov	r4, r0
 8011774:	b95b      	cbnz	r3, 801178e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011776:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801177a:	2b02      	cmp	r3, #2
 801177c:	d007      	beq.n	801178e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801177e:	6840      	ldr	r0, [r0, #4]
 8011780:	f000 f92c 	bl	80119dc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011784:	b118      	cbz	r0, 801178e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011786:	6862      	ldr	r2, [r4, #4]
 8011788:	7a53      	ldrb	r3, [r2, #9]
 801178a:	2b00      	cmp	r3, #0
 801178c:	d0fc      	beq.n	8011788 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801178e:	f7f0 ffdb 	bl	8002748 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011792:	4620      	mov	r0, r4
 8011794:	2100      	movs	r1, #0
 8011796:	f7ff ffd7 	bl	8011748 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801179a:	4620      	mov	r0, r4
 801179c:	f7ff fd8c 	bl	80112b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80117a0:	bd10      	pop	{r4, pc}
 80117a2:	bf00      	nop
 80117a4:	20012da2 	.word	0x20012da2

080117a8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80117a8:	b570      	push	{r4, r5, r6, lr}
 80117aa:	4604      	mov	r4, r0
 80117ac:	6803      	ldr	r3, [r0, #0]
 80117ae:	b919      	cbnz	r1, 80117b8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80117b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80117b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80117b6:	4718      	bx	r3
 80117b8:	2200      	movs	r2, #0
 80117ba:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80117be:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80117c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80117c4:	4798      	blx	r3
 80117c6:	6863      	ldr	r3, [r4, #4]
 80117c8:	2101      	movs	r1, #1
 80117ca:	4605      	mov	r5, r0
 80117cc:	7299      	strb	r1, [r3, #10]
 80117ce:	4620      	mov	r0, r4
 80117d0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80117d4:	f7ff ffb8 	bl	8011748 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80117d8:	4628      	mov	r0, r5
 80117da:	bd70      	pop	{r4, r5, r6, pc}

080117dc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80117dc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80117e0:	1a13      	subs	r3, r2, r0
 80117e2:	4258      	negs	r0, r3
 80117e4:	4158      	adcs	r0, r3
 80117e6:	4770      	bx	lr

080117e8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80117e8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80117ec:	1a9b      	subs	r3, r3, r2
 80117ee:	2b00      	cmp	r3, #0
 80117f0:	bfdc      	itt	le
 80117f2:	6882      	ldrle	r2, [r0, #8]
 80117f4:	189b      	addle	r3, r3, r2
 80117f6:	2b01      	cmp	r3, #1
 80117f8:	bfcc      	ite	gt
 80117fa:	2000      	movgt	r0, #0
 80117fc:	2001      	movle	r0, #1
 80117fe:	4770      	bx	lr

08011800 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011800:	6902      	ldr	r2, [r0, #16]
 8011802:	6843      	ldr	r3, [r0, #4]
 8011804:	2024      	movs	r0, #36	; 0x24
 8011806:	fb00 3002 	mla	r0, r0, r2, r3
 801180a:	4770      	bx	lr

0801180c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801180c:	6803      	ldr	r3, [r0, #0]
 801180e:	691b      	ldr	r3, [r3, #16]
 8011810:	4718      	bx	r3

08011812 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011812:	b570      	push	{r4, r5, r6, lr}
 8011814:	2301      	movs	r3, #1
 8011816:	7203      	strb	r3, [r0, #8]
 8011818:	4604      	mov	r4, r0
 801181a:	6840      	ldr	r0, [r0, #4]
 801181c:	6803      	ldr	r3, [r0, #0]
 801181e:	699b      	ldr	r3, [r3, #24]
 8011820:	4798      	blx	r3
 8011822:	6803      	ldr	r3, [r0, #0]
 8011824:	2b40      	cmp	r3, #64	; 0x40
 8011826:	4605      	mov	r5, r0
 8011828:	d00c      	beq.n	8011844 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801182a:	d810      	bhi.n	801184e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801182c:	2b04      	cmp	r3, #4
 801182e:	d01d      	beq.n	801186c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011830:	d804      	bhi.n	801183c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011832:	2b01      	cmp	r3, #1
 8011834:	d006      	beq.n	8011844 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011836:	2b02      	cmp	r3, #2
 8011838:	d02c      	beq.n	8011894 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801183a:	bd70      	pop	{r4, r5, r6, pc}
 801183c:	2b08      	cmp	r3, #8
 801183e:	d01d      	beq.n	801187c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011840:	2b20      	cmp	r3, #32
 8011842:	d1fa      	bne.n	801183a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011844:	6823      	ldr	r3, [r4, #0]
 8011846:	4620      	mov	r0, r4
 8011848:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801184a:	4798      	blx	r3
 801184c:	e013      	b.n	8011876 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801184e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011852:	d0f7      	beq.n	8011844 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011854:	d804      	bhi.n	8011860 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011856:	2b80      	cmp	r3, #128	; 0x80
 8011858:	d0f4      	beq.n	8011844 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801185a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801185e:	e7f0      	b.n	8011842 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011860:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011864:	d0ee      	beq.n	8011844 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011866:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801186a:	e7e5      	b.n	8011838 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801186c:	6823      	ldr	r3, [r4, #0]
 801186e:	7f01      	ldrb	r1, [r0, #28]
 8011870:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011872:	4620      	mov	r0, r4
 8011874:	4798      	blx	r3
 8011876:	6823      	ldr	r3, [r4, #0]
 8011878:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801187a:	e006      	b.n	801188a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801187c:	6823      	ldr	r3, [r4, #0]
 801187e:	7f01      	ldrb	r1, [r0, #28]
 8011880:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011882:	4620      	mov	r0, r4
 8011884:	4798      	blx	r3
 8011886:	6823      	ldr	r3, [r4, #0]
 8011888:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801188a:	4629      	mov	r1, r5
 801188c:	4620      	mov	r0, r4
 801188e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011892:	4718      	bx	r3
 8011894:	6823      	ldr	r3, [r4, #0]
 8011896:	4620      	mov	r0, r4
 8011898:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801189a:	4798      	blx	r3
 801189c:	e7f3      	b.n	8011886 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801189e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801189e:	4770      	bx	lr

080118a0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80118a0:	4770      	bx	lr

080118a2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80118a2:	4770      	bx	lr

080118a4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80118a4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80118a8:	1ad2      	subs	r2, r2, r3
 80118aa:	2a00      	cmp	r2, #0
 80118ac:	b510      	push	{r4, lr}
 80118ae:	bfdc      	itt	le
 80118b0:	6884      	ldrle	r4, [r0, #8]
 80118b2:	1912      	addle	r2, r2, r4
 80118b4:	2a01      	cmp	r2, #1
 80118b6:	dd16      	ble.n	80118e6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80118b8:	6842      	ldr	r2, [r0, #4]
 80118ba:	2424      	movs	r4, #36	; 0x24
 80118bc:	fb04 2303 	mla	r3, r4, r3, r2
 80118c0:	f101 0220 	add.w	r2, r1, #32
 80118c4:	f851 4b04 	ldr.w	r4, [r1], #4
 80118c8:	f843 4b04 	str.w	r4, [r3], #4
 80118cc:	4291      	cmp	r1, r2
 80118ce:	d1f9      	bne.n	80118c4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80118d0:	780a      	ldrb	r2, [r1, #0]
 80118d2:	701a      	strb	r2, [r3, #0]
 80118d4:	68c3      	ldr	r3, [r0, #12]
 80118d6:	6882      	ldr	r2, [r0, #8]
 80118d8:	f3bf 8f5b 	dmb	ish
 80118dc:	3301      	adds	r3, #1
 80118de:	429a      	cmp	r2, r3
 80118e0:	bfd8      	it	le
 80118e2:	1a9b      	suble	r3, r3, r2
 80118e4:	60c3      	str	r3, [r0, #12]
 80118e6:	bd10      	pop	{r4, pc}

080118e8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80118e8:	6903      	ldr	r3, [r0, #16]
 80118ea:	6882      	ldr	r2, [r0, #8]
 80118ec:	f3bf 8f5b 	dmb	ish
 80118f0:	3301      	adds	r3, #1
 80118f2:	429a      	cmp	r2, r3
 80118f4:	bfd8      	it	le
 80118f6:	1a9b      	suble	r3, r3, r2
 80118f8:	6103      	str	r3, [r0, #16]
 80118fa:	4770      	bx	lr

080118fc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80118fc:	b570      	push	{r4, r5, r6, lr}
 80118fe:	4604      	mov	r4, r0
 8011900:	460e      	mov	r6, r1
 8011902:	6860      	ldr	r0, [r4, #4]
 8011904:	6803      	ldr	r3, [r0, #0]
 8011906:	685b      	ldr	r3, [r3, #4]
 8011908:	4798      	blx	r3
 801190a:	2800      	cmp	r0, #0
 801190c:	d1f9      	bne.n	8011902 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801190e:	4d0d      	ldr	r5, [pc, #52]	; (8011944 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011910:	6828      	ldr	r0, [r5, #0]
 8011912:	6803      	ldr	r3, [r0, #0]
 8011914:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011916:	4798      	blx	r3
 8011918:	f7f0 ff24 	bl	8002764 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 801191c:	6828      	ldr	r0, [r5, #0]
 801191e:	2101      	movs	r1, #1
 8011920:	f7ff ff12 	bl	8011748 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011924:	6860      	ldr	r0, [r4, #4]
 8011926:	6803      	ldr	r3, [r0, #0]
 8011928:	4631      	mov	r1, r6
 801192a:	689b      	ldr	r3, [r3, #8]
 801192c:	4798      	blx	r3
 801192e:	6823      	ldr	r3, [r4, #0]
 8011930:	4620      	mov	r0, r4
 8011932:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011934:	4798      	blx	r3
 8011936:	6828      	ldr	r0, [r5, #0]
 8011938:	6803      	ldr	r3, [r0, #0]
 801193a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801193e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011940:	4718      	bx	r3
 8011942:	bf00      	nop
 8011944:	20012da4 	.word	0x20012da4

08011948 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011948:	b508      	push	{r3, lr}
 801194a:	f7f0 fefd 	bl	8002748 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801194e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011952:	f7f0 bf01 	b.w	8002758 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011956 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011956:	b510      	push	{r4, lr}
 8011958:	2114      	movs	r1, #20
 801195a:	4604      	mov	r4, r0
 801195c:	f018 f9bf 	bl	8029cde <_ZdlPvj>
 8011960:	4620      	mov	r0, r4
 8011962:	bd10      	pop	{r4, pc}

08011964 <_ZN8touchgfx13DMA_Interface5startEv>:
 8011964:	b510      	push	{r4, lr}
 8011966:	4604      	mov	r4, r0
 8011968:	6840      	ldr	r0, [r0, #4]
 801196a:	6803      	ldr	r3, [r0, #0]
 801196c:	681b      	ldr	r3, [r3, #0]
 801196e:	4798      	blx	r3
 8011970:	b948      	cbnz	r0, 8011986 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011972:	7a63      	ldrb	r3, [r4, #9]
 8011974:	b13b      	cbz	r3, 8011986 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011976:	7a23      	ldrb	r3, [r4, #8]
 8011978:	b92b      	cbnz	r3, 8011986 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801197a:	6823      	ldr	r3, [r4, #0]
 801197c:	4620      	mov	r0, r4
 801197e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011980:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011984:	4718      	bx	r3
 8011986:	bd10      	pop	{r4, pc}

08011988 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011988:	b570      	push	{r4, r5, r6, lr}
 801198a:	4604      	mov	r4, r0
 801198c:	6840      	ldr	r0, [r0, #4]
 801198e:	6803      	ldr	r3, [r0, #0]
 8011990:	681b      	ldr	r3, [r3, #0]
 8011992:	4798      	blx	r3
 8011994:	4605      	mov	r5, r0
 8011996:	b930      	cbnz	r0, 80119a6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011998:	7a23      	ldrb	r3, [r4, #8]
 801199a:	b123      	cbz	r3, 80119a6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801199c:	6860      	ldr	r0, [r4, #4]
 801199e:	6803      	ldr	r3, [r0, #0]
 80119a0:	695b      	ldr	r3, [r3, #20]
 80119a2:	4798      	blx	r3
 80119a4:	7225      	strb	r5, [r4, #8]
 80119a6:	6860      	ldr	r0, [r4, #4]
 80119a8:	6803      	ldr	r3, [r0, #0]
 80119aa:	681b      	ldr	r3, [r3, #0]
 80119ac:	4798      	blx	r3
 80119ae:	b928      	cbnz	r0, 80119bc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80119b0:	6823      	ldr	r3, [r4, #0]
 80119b2:	4620      	mov	r0, r4
 80119b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80119b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80119ba:	4718      	bx	r3
 80119bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80119c0:	f7f0 bed8 	b.w	8002774 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080119c4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80119c4:	b510      	push	{r4, lr}
 80119c6:	4c04      	ldr	r4, [pc, #16]	; (80119d8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80119c8:	6082      	str	r2, [r0, #8]
 80119ca:	2200      	movs	r2, #0
 80119cc:	e9c0 4100 	strd	r4, r1, [r0]
 80119d0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80119d4:	bd10      	pop	{r4, pc}
 80119d6:	bf00      	nop
 80119d8:	0802ed10 	.word	0x0802ed10

080119dc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80119dc:	6840      	ldr	r0, [r0, #4]
 80119de:	6803      	ldr	r3, [r0, #0]
 80119e0:	681b      	ldr	r3, [r3, #0]
 80119e2:	4718      	bx	r3

080119e4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80119e4:	4b06      	ldr	r3, [pc, #24]	; (8011a00 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80119e6:	60c1      	str	r1, [r0, #12]
 80119e8:	094a      	lsrs	r2, r1, #5
 80119ea:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 80119ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80119f2:	4313      	orrs	r3, r2
 80119f4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80119f8:	4319      	orrs	r1, r3
 80119fa:	8201      	strh	r1, [r0, #16]
 80119fc:	4770      	bx	lr
 80119fe:	bf00      	nop
 8011a00:	fffff800 	.word	0xfffff800

08011a04 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011a04:	f1a0 0008 	sub.w	r0, r0, #8
 8011a08:	e7ec      	b.n	80119e4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8011a0a:	bf00      	nop

08011a0c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8011a0c:	b508      	push	{r3, lr}
 8011a0e:	4b05      	ldr	r3, [pc, #20]	; (8011a24 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011a10:	6818      	ldr	r0, [r3, #0]
 8011a12:	6803      	ldr	r3, [r0, #0]
 8011a14:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011a18:	4798      	blx	r3
 8011a1a:	1e43      	subs	r3, r0, #1
 8011a1c:	4258      	negs	r0, r3
 8011a1e:	4158      	adcs	r0, r3
 8011a20:	bd08      	pop	{r3, pc}
 8011a22:	bf00      	nop
 8011a24:	20012da4 	.word	0x20012da4

08011a28 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011a28:	4770      	bx	lr

08011a2a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8011a2a:	3808      	subs	r0, #8
 8011a2c:	4770      	bx	lr

08011a2e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8011a2e:	b430      	push	{r4, r5}
 8011a30:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011a34:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011a38:	8a02      	ldrh	r2, [r0, #16]
 8011a3a:	9202      	str	r2, [sp, #8]
 8011a3c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011a40:	68c2      	ldr	r2, [r0, #12]
 8011a42:	4629      	mov	r1, r5
 8011a44:	4620      	mov	r0, r4
 8011a46:	bc30      	pop	{r4, r5}
 8011a48:	f7f1 b956 	b.w	8002cf8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08011a4c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8011a4c:	f7f1 b952 	b.w	8002cf4 <_ZN8touchgfx5paint8tearDownEv>

08011a50 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011a50:	b510      	push	{r4, lr}
 8011a52:	2114      	movs	r1, #20
 8011a54:	4604      	mov	r4, r0
 8011a56:	f018 f942 	bl	8029cde <_ZdlPvj>
 8011a5a:	4620      	mov	r0, r4
 8011a5c:	bd10      	pop	{r4, pc}

08011a5e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8011a5e:	f1a0 0008 	sub.w	r0, r0, #8
 8011a62:	e7f5      	b.n	8011a50 <_ZN8touchgfx13PainterRGB565D0Ev>

08011a64 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8011a64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011a66:	6803      	ldr	r3, [r0, #0]
 8011a68:	460d      	mov	r5, r1
 8011a6a:	4604      	mov	r4, r0
 8011a6c:	4601      	mov	r1, r0
 8011a6e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011a70:	a802      	add	r0, sp, #8
 8011a72:	4798      	blx	r3
 8011a74:	6828      	ldr	r0, [r5, #0]
 8011a76:	6869      	ldr	r1, [r5, #4]
 8011a78:	466b      	mov	r3, sp
 8011a7a:	c303      	stmia	r3!, {r0, r1}
 8011a7c:	4668      	mov	r0, sp
 8011a7e:	4619      	mov	r1, r3
 8011a80:	f7fe ffa4 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8011a84:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011a86:	b188      	cbz	r0, 8011aac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011a88:	6803      	ldr	r3, [r0, #0]
 8011a8a:	1d21      	adds	r1, r4, #4
 8011a8c:	68db      	ldr	r3, [r3, #12]
 8011a8e:	4798      	blx	r3
 8011a90:	b160      	cbz	r0, 8011aac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011a92:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011a96:	2b00      	cmp	r3, #0
 8011a98:	dd08      	ble.n	8011aac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011a9a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8011a9e:	2d00      	cmp	r5, #0
 8011aa0:	dd04      	ble.n	8011aac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011aa2:	4a2b      	ldr	r2, [pc, #172]	; (8011b50 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011aa4:	7812      	ldrb	r2, [r2, #0]
 8011aa6:	b11a      	cbz	r2, 8011ab0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011aa8:	2a01      	cmp	r2, #1
 8011aaa:	d029      	beq.n	8011b00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8011aac:	b004      	add	sp, #16
 8011aae:	bd70      	pop	{r4, r5, r6, pc}
 8011ab0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011ab4:	441d      	add	r5, r3
 8011ab6:	b2ad      	uxth	r5, r5
 8011ab8:	b22e      	sxth	r6, r5
 8011aba:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8011abe:	42b3      	cmp	r3, r6
 8011ac0:	daf4      	bge.n	8011aac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011ac2:	6823      	ldr	r3, [r4, #0]
 8011ac4:	4669      	mov	r1, sp
 8011ac6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011ac8:	4620      	mov	r0, r4
 8011aca:	4798      	blx	r3
 8011acc:	b940      	cbnz	r0, 8011ae0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011ace:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011ad2:	2b01      	cmp	r3, #1
 8011ad4:	d004      	beq.n	8011ae0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011ad6:	3301      	adds	r3, #1
 8011ad8:	105b      	asrs	r3, r3, #1
 8011ada:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011ade:	e7f0      	b.n	8011ac2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011ae0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011ae4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011ae8:	4413      	add	r3, r2
 8011aea:	b29b      	uxth	r3, r3
 8011aec:	441a      	add	r2, r3
 8011aee:	b212      	sxth	r2, r2
 8011af0:	4296      	cmp	r6, r2
 8011af2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011af6:	dae0      	bge.n	8011aba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011af8:	1aeb      	subs	r3, r5, r3
 8011afa:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011afe:	e7dc      	b.n	8011aba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011b00:	f8bd 5000 	ldrh.w	r5, [sp]
 8011b04:	441d      	add	r5, r3
 8011b06:	b2ad      	uxth	r5, r5
 8011b08:	b22e      	sxth	r6, r5
 8011b0a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011b0e:	42b3      	cmp	r3, r6
 8011b10:	dacc      	bge.n	8011aac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011b12:	6823      	ldr	r3, [r4, #0]
 8011b14:	4669      	mov	r1, sp
 8011b16:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011b18:	4620      	mov	r0, r4
 8011b1a:	4798      	blx	r3
 8011b1c:	b940      	cbnz	r0, 8011b30 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011b1e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011b22:	2b01      	cmp	r3, #1
 8011b24:	d004      	beq.n	8011b30 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011b26:	3301      	adds	r3, #1
 8011b28:	105b      	asrs	r3, r3, #1
 8011b2a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011b2e:	e7f0      	b.n	8011b12 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011b30:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011b34:	f8bd 3000 	ldrh.w	r3, [sp]
 8011b38:	4413      	add	r3, r2
 8011b3a:	b29b      	uxth	r3, r3
 8011b3c:	441a      	add	r2, r3
 8011b3e:	b212      	sxth	r2, r2
 8011b40:	4296      	cmp	r6, r2
 8011b42:	f8ad 3000 	strh.w	r3, [sp]
 8011b46:	dae0      	bge.n	8011b0a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011b48:	1aeb      	subs	r3, r5, r3
 8011b4a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011b4e:	e7dc      	b.n	8011b0a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011b50:	20012d9c 	.word	0x20012d9c

08011b54 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011b54:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011b56:	6803      	ldr	r3, [r0, #0]
 8011b58:	4604      	mov	r4, r0
 8011b5a:	4601      	mov	r1, r0
 8011b5c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011b5e:	4668      	mov	r0, sp
 8011b60:	4798      	blx	r3
 8011b62:	2100      	movs	r1, #0
 8011b64:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011b68:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011b6c:	9102      	str	r1, [sp, #8]
 8011b6e:	4668      	mov	r0, sp
 8011b70:	a902      	add	r1, sp, #8
 8011b72:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011b76:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011b7a:	f7fe ff27 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8011b7e:	6823      	ldr	r3, [r4, #0]
 8011b80:	4669      	mov	r1, sp
 8011b82:	691b      	ldr	r3, [r3, #16]
 8011b84:	4620      	mov	r0, r4
 8011b86:	4798      	blx	r3
 8011b88:	b004      	add	sp, #16
 8011b8a:	bd10      	pop	{r4, pc}

08011b8c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011b8c:	2101      	movs	r1, #1
 8011b8e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011b92:	490b      	ldr	r1, [pc, #44]	; (8011bc0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011b94:	6001      	str	r1, [r0, #0]
 8011b96:	2200      	movs	r2, #0
 8011b98:	21ff      	movs	r1, #255	; 0xff
 8011b9a:	8082      	strh	r2, [r0, #4]
 8011b9c:	80c2      	strh	r2, [r0, #6]
 8011b9e:	8102      	strh	r2, [r0, #8]
 8011ba0:	8142      	strh	r2, [r0, #10]
 8011ba2:	8182      	strh	r2, [r0, #12]
 8011ba4:	81c2      	strh	r2, [r0, #14]
 8011ba6:	8202      	strh	r2, [r0, #16]
 8011ba8:	8242      	strh	r2, [r0, #18]
 8011baa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011bae:	61c2      	str	r2, [r0, #28]
 8011bb0:	8402      	strh	r2, [r0, #32]
 8011bb2:	8442      	strh	r2, [r0, #34]	; 0x22
 8011bb4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011bb8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011bbc:	6282      	str	r2, [r0, #40]	; 0x28
 8011bbe:	4770      	bx	lr
 8011bc0:	0802ed6c 	.word	0x0802ed6c

08011bc4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011bc4:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011bc8:	4602      	mov	r2, r0
 8011bca:	cb03      	ldmia	r3!, {r0, r1}
 8011bcc:	6010      	str	r0, [r2, #0]
 8011bce:	6051      	str	r1, [r2, #4]
 8011bd0:	4610      	mov	r0, r2
 8011bd2:	4770      	bx	lr

08011bd4 <_ZN8touchgfx4LineD1Ev>:
 8011bd4:	4770      	bx	lr

08011bd6 <_ZN8touchgfx4LineD0Ev>:
 8011bd6:	b510      	push	{r4, lr}
 8011bd8:	2170      	movs	r1, #112	; 0x70
 8011bda:	4604      	mov	r4, r0
 8011bdc:	f018 f87f 	bl	8029cde <_ZdlPvj>
 8011be0:	4620      	mov	r0, r4
 8011be2:	bd10      	pop	{r4, pc}

08011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011be4:	b507      	push	{r0, r1, r2, lr}
 8011be6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8011bea:	ab01      	add	r3, sp, #4
 8011bec:	6809      	ldr	r1, [r1, #0]
 8011bee:	6800      	ldr	r0, [r0, #0]
 8011bf0:	f005 fab4 	bl	801715c <_ZN8touchgfx6muldivElllRl>
 8011bf4:	b003      	add	sp, #12
 8011bf6:	f85d fb04 	ldr.w	pc, [sp], #4

08011bfa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011bfa:	6800      	ldr	r0, [r0, #0]
 8011bfc:	2800      	cmp	r0, #0
 8011bfe:	bfb9      	ittee	lt
 8011c00:	2320      	movlt	r3, #32
 8011c02:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011c06:	301f      	addge	r0, #31
 8011c08:	1140      	asrge	r0, r0, #5
 8011c0a:	4770      	bx	lr

08011c0c <_ZNK8touchgfx4Line17invalidateContentEv>:
 8011c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c10:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011c14:	b089      	sub	sp, #36	; 0x24
 8011c16:	4604      	mov	r4, r0
 8011c18:	b353      	cbz	r3, 8011c70 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8011c1a:	6803      	ldr	r3, [r0, #0]
 8011c1c:	4601      	mov	r1, r0
 8011c1e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011c20:	a802      	add	r0, sp, #8
 8011c22:	4798      	blx	r3
 8011c24:	2220      	movs	r2, #32
 8011c26:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8011c2a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011c2c:	fb9a f0f2 	sdiv	r0, sl, r2
 8011c30:	fb91 f5f2 	sdiv	r5, r1, r2
 8011c34:	1b40      	subs	r0, r0, r5
 8011c36:	2800      	cmp	r0, #0
 8011c38:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011c3a:	fb93 f6f2 	sdiv	r6, r3, r2
 8011c3e:	bfb8      	it	lt
 8011c40:	4240      	neglt	r0, r0
 8011c42:	0076      	lsls	r6, r6, #1
 8011c44:	4286      	cmp	r6, r0
 8011c46:	f8d4 b000 	ldr.w	fp, [r4]
 8011c4a:	dc0c      	bgt.n	8011c66 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8011c4c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8011c4e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8011c52:	fb95 f0f2 	sdiv	r0, r5, r2
 8011c56:	fb98 f7f2 	sdiv	r7, r8, r2
 8011c5a:	1bc0      	subs	r0, r0, r7
 8011c5c:	2800      	cmp	r0, #0
 8011c5e:	bfb8      	it	lt
 8011c60:	4240      	neglt	r0, r0
 8011c62:	4286      	cmp	r6, r0
 8011c64:	dd07      	ble.n	8011c76 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011c66:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011c6a:	a902      	add	r1, sp, #8
 8011c6c:	4620      	mov	r0, r4
 8011c6e:	4798      	blx	r3
 8011c70:	b009      	add	sp, #36	; 0x24
 8011c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c76:	3301      	adds	r3, #1
 8011c78:	2002      	movs	r0, #2
 8011c7a:	f10d 0920 	add.w	r9, sp, #32
 8011c7e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011c82:	4103      	asrs	r3, r0
 8011c84:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011c88:	eb01 060a 	add.w	r6, r1, sl
 8011c8c:	eb08 0705 	add.w	r7, r8, r5
 8011c90:	fb96 f6f0 	sdiv	r6, r6, r0
 8011c94:	fb97 f7f0 	sdiv	r7, r7, r0
 8011c98:	4648      	mov	r0, r9
 8011c9a:	9101      	str	r1, [sp, #4]
 8011c9c:	b236      	sxth	r6, r6
 8011c9e:	b23f      	sxth	r7, r7
 8011ca0:	fb96 f6f2 	sdiv	r6, r6, r2
 8011ca4:	fb97 f7f2 	sdiv	r7, r7, r2
 8011ca8:	f7ff ffa7 	bl	8011bfa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011cac:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011cb0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011cb4:	9901      	ldr	r1, [sp, #4]
 8011cb6:	4293      	cmp	r3, r2
 8011cb8:	fa1f fe87 	uxth.w	lr, r7
 8011cbc:	fa1f fc86 	uxth.w	ip, r6
 8011cc0:	eba1 0a0a 	sub.w	sl, r1, sl
 8011cc4:	b280      	uxth	r0, r0
 8011cc6:	da54      	bge.n	8011d72 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011cc8:	ebac 0100 	sub.w	r1, ip, r0
 8011ccc:	b289      	uxth	r1, r1
 8011cce:	4460      	add	r0, ip
 8011cd0:	f1ba 0f00 	cmp.w	sl, #0
 8011cd4:	b20e      	sxth	r6, r1
 8011cd6:	b280      	uxth	r0, r0
 8011cd8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8011cdc:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011ce0:	da29      	bge.n	8011d36 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011ce2:	eba8 0505 	sub.w	r5, r8, r5
 8011ce6:	2d00      	cmp	r5, #0
 8011ce8:	da2a      	bge.n	8011d40 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011cea:	fa1f f88a 	uxth.w	r8, sl
 8011cee:	eba0 0008 	sub.w	r0, r0, r8
 8011cf2:	fa1f f58c 	uxth.w	r5, ip
 8011cf6:	4443      	add	r3, r8
 8011cf8:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011cfc:	1a59      	subs	r1, r3, r1
 8011cfe:	ebae 0005 	sub.w	r0, lr, r5
 8011d02:	f8ad a010 	strh.w	sl, [sp, #16]
 8011d06:	f8ad c012 	strh.w	ip, [sp, #18]
 8011d0a:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011d0e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011d12:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011d16:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011d1a:	442a      	add	r2, r5
 8011d1c:	eba2 0e0e 	sub.w	lr, r2, lr
 8011d20:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011d24:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011d28:	a904      	add	r1, sp, #16
 8011d2a:	4620      	mov	r0, r4
 8011d2c:	4798      	blx	r3
 8011d2e:	6823      	ldr	r3, [r4, #0]
 8011d30:	4649      	mov	r1, r9
 8011d32:	691b      	ldr	r3, [r3, #16]
 8011d34:	e79a      	b.n	8011c6c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011d36:	d003      	beq.n	8011d40 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011d38:	eba8 0505 	sub.w	r5, r8, r5
 8011d3c:	2d00      	cmp	r5, #0
 8011d3e:	dcd4      	bgt.n	8011cea <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011d40:	fa1f f88a 	uxth.w	r8, sl
 8011d44:	4443      	add	r3, r8
 8011d46:	fa1f f58c 	uxth.w	r5, ip
 8011d4a:	1a59      	subs	r1, r3, r1
 8011d4c:	eba0 0008 	sub.w	r0, r0, r8
 8011d50:	ebae 0305 	sub.w	r3, lr, r5
 8011d54:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011d58:	f8ad c012 	strh.w	ip, [sp, #18]
 8011d5c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011d60:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011d64:	f8ad a018 	strh.w	sl, [sp, #24]
 8011d68:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011d6c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011d70:	e7d3      	b.n	8011d1a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011d72:	ebae 0100 	sub.w	r1, lr, r0
 8011d76:	b289      	uxth	r1, r1
 8011d78:	4470      	add	r0, lr
 8011d7a:	f1ba 0f00 	cmp.w	sl, #0
 8011d7e:	b20f      	sxth	r7, r1
 8011d80:	b280      	uxth	r0, r0
 8011d82:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011d86:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8011d8a:	da20      	bge.n	8011dce <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8011d8c:	eba8 0505 	sub.w	r5, r8, r5
 8011d90:	2d00      	cmp	r5, #0
 8011d92:	da21      	bge.n	8011dd8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011d94:	fa1f f88e 	uxth.w	r8, lr
 8011d98:	fa1f f58a 	uxth.w	r5, sl
 8011d9c:	4443      	add	r3, r8
 8011d9e:	442a      	add	r2, r5
 8011da0:	f8ad e010 	strh.w	lr, [sp, #16]
 8011da4:	1b40      	subs	r0, r0, r5
 8011da6:	ebac 0e08 	sub.w	lr, ip, r8
 8011daa:	1a51      	subs	r1, r2, r1
 8011dac:	eba3 0c0c 	sub.w	ip, r3, ip
 8011db0:	f8ad a012 	strh.w	sl, [sp, #18]
 8011db4:	f8ad e014 	strh.w	lr, [sp, #20]
 8011db8:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011dbc:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011dc0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011dc4:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011dc8:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011dcc:	e7aa      	b.n	8011d24 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8011dce:	d003      	beq.n	8011dd8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011dd0:	eba8 0505 	sub.w	r5, r8, r5
 8011dd4:	2d00      	cmp	r5, #0
 8011dd6:	dcdd      	bgt.n	8011d94 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011dd8:	fa1f f58e 	uxth.w	r5, lr
 8011ddc:	fa1f f88a 	uxth.w	r8, sl
 8011de0:	4442      	add	r2, r8
 8011de2:	442b      	add	r3, r5
 8011de4:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011de8:	1a51      	subs	r1, r2, r1
 8011dea:	ebac 0705 	sub.w	r7, ip, r5
 8011dee:	eba0 0008 	sub.w	r0, r0, r8
 8011df2:	eba3 0c0c 	sub.w	ip, r3, ip
 8011df6:	f8ad e010 	strh.w	lr, [sp, #16]
 8011dfa:	f8ad 7014 	strh.w	r7, [sp, #20]
 8011dfe:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011e02:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011e06:	f8ad a01a 	strh.w	sl, [sp, #26]
 8011e0a:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011e0e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011e12:	e787      	b.n	8011d24 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011e14 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011e14:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011e18:	fb90 f2f3 	sdiv	r2, r0, r3
 8011e1c:	fb02 0013 	mls	r0, r2, r3, r0
 8011e20:	2800      	cmp	r0, #0
 8011e22:	bfb8      	it	lt
 8011e24:	18c0      	addlt	r0, r0, r3
 8011e26:	285a      	cmp	r0, #90	; 0x5a
 8011e28:	4b09      	ldr	r3, [pc, #36]	; (8011e50 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8011e2a:	dc02      	bgt.n	8011e32 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8011e2c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011e30:	4770      	bx	lr
 8011e32:	28b4      	cmp	r0, #180	; 0xb4
 8011e34:	dc02      	bgt.n	8011e3c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011e36:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8011e3a:	e7f7      	b.n	8011e2c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8011e3c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011e40:	bfd4      	ite	le
 8011e42:	38b4      	suble	r0, #180	; 0xb4
 8011e44:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011e48:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011e4c:	4240      	negs	r0, r0
 8011e4e:	4770      	bx	lr
 8011e50:	0802ee38 	.word	0x0802ee38

08011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011e54:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8011e58:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011e5a:	fb90 f2f3 	sdiv	r2, r0, r3
 8011e5e:	fb02 0013 	mls	r0, r2, r3, r0
 8011e62:	2800      	cmp	r0, #0
 8011e64:	bfb8      	it	lt
 8011e66:	18c0      	addlt	r0, r0, r3
 8011e68:	1144      	asrs	r4, r0, #5
 8011e6a:	f000 061f 	and.w	r6, r0, #31
 8011e6e:	4620      	mov	r0, r4
 8011e70:	f7ff ffd0 	bl	8011e14 <_ZN8touchgfx7CWRUtil4sineEi>
 8011e74:	4605      	mov	r5, r0
 8011e76:	b90e      	cbnz	r6, 8011e7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011e78:	b002      	add	sp, #8
 8011e7a:	bd70      	pop	{r4, r5, r6, pc}
 8011e7c:	1c60      	adds	r0, r4, #1
 8011e7e:	f7ff ffc9 	bl	8011e14 <_ZN8touchgfx7CWRUtil4sineEi>
 8011e82:	ab01      	add	r3, sp, #4
 8011e84:	2220      	movs	r2, #32
 8011e86:	4631      	mov	r1, r6
 8011e88:	1b40      	subs	r0, r0, r5
 8011e8a:	f005 f967 	bl	801715c <_ZN8touchgfx6muldivElllRl>
 8011e8e:	4428      	add	r0, r5
 8011e90:	e7f2      	b.n	8011e78 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011e92 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011e92:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011e96:	bf2c      	ite	cs
 8011e98:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8011e9c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011ea0:	2300      	movs	r3, #0
 8011ea2:	1899      	adds	r1, r3, r2
 8011ea4:	4288      	cmp	r0, r1
 8011ea6:	bf24      	itt	cs
 8011ea8:	1853      	addcs	r3, r2, r1
 8011eaa:	1a40      	subcs	r0, r0, r1
 8011eac:	0892      	lsrs	r2, r2, #2
 8011eae:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011eb2:	d1f6      	bne.n	8011ea2 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011eb4:	4618      	mov	r0, r3
 8011eb6:	4770      	bx	lr

08011eb8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011eb8:	b510      	push	{r4, lr}
 8011eba:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8011ebe:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011ec2:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011ec6:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8011eca:	13a4      	asrs	r4, r4, #14
 8011ecc:	139b      	asrs	r3, r3, #14
 8011ece:	429c      	cmp	r4, r3
 8011ed0:	bfb8      	it	lt
 8011ed2:	461c      	movlt	r4, r3
 8011ed4:	2c01      	cmp	r4, #1
 8011ed6:	dd07      	ble.n	8011ee8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011ed8:	fb91 f1f4 	sdiv	r1, r1, r4
 8011edc:	fb90 f0f4 	sdiv	r0, r0, r4
 8011ee0:	f7ff ffea 	bl	8011eb8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011ee4:	4360      	muls	r0, r4
 8011ee6:	bd10      	pop	{r4, pc}
 8011ee8:	4340      	muls	r0, r0
 8011eea:	fb01 0001 	mla	r0, r1, r1, r0
 8011eee:	f7ff ffd0 	bl	8011e92 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011ef2:	e7f8      	b.n	8011ee6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011ef4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011ef4:	2800      	cmp	r0, #0
 8011ef6:	b508      	push	{r3, lr}
 8011ef8:	da05      	bge.n	8011f06 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8011efa:	4240      	negs	r0, r0
 8011efc:	f7ff fffa 	bl	8011ef4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011f00:	4240      	negs	r0, r0
 8011f02:	b240      	sxtb	r0, r0
 8011f04:	bd08      	pop	{r3, pc}
 8011f06:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8011f0a:	dc11      	bgt.n	8011f30 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8011f0c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011f10:	dd09      	ble.n	8011f26 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011f12:	4340      	muls	r0, r0
 8011f14:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011f18:	f7ff ffbb 	bl	8011e92 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011f1c:	f7ff ffea 	bl	8011ef4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011f20:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011f24:	e7ed      	b.n	8011f02 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8011f26:	3003      	adds	r0, #3
 8011f28:	10c0      	asrs	r0, r0, #3
 8011f2a:	4b02      	ldr	r3, [pc, #8]	; (8011f34 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8011f2c:	5618      	ldrsb	r0, [r3, r0]
 8011f2e:	e7e9      	b.n	8011f04 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011f30:	2000      	movs	r0, #0
 8011f32:	e7e7      	b.n	8011f04 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011f34:	0802eddc 	.word	0x0802eddc

08011f38 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011f38:	4281      	cmp	r1, r0
 8011f3a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011f3c:	460c      	mov	r4, r1
 8011f3e:	4615      	mov	r5, r2
 8011f40:	dd07      	ble.n	8011f52 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8011f42:	4601      	mov	r1, r0
 8011f44:	4620      	mov	r0, r4
 8011f46:	f7ff fff7 	bl	8011f38 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011f4a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011f4e:	b003      	add	sp, #12
 8011f50:	bd30      	pop	{r4, r5, pc}
 8011f52:	f7ff ffb1 	bl	8011eb8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011f56:	6028      	str	r0, [r5, #0]
 8011f58:	2800      	cmp	r0, #0
 8011f5a:	d0f8      	beq.n	8011f4e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8011f5c:	4602      	mov	r2, r0
 8011f5e:	ab01      	add	r3, sp, #4
 8011f60:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011f64:	4620      	mov	r0, r4
 8011f66:	f005 f8f9 	bl	801715c <_ZN8touchgfx6muldivElllRl>
 8011f6a:	f7ff ffc3 	bl	8011ef4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011f6e:	e7ee      	b.n	8011f4e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011f70 <_ZN8touchgfx4LineC1Ev>:
 8011f70:	b510      	push	{r4, lr}
 8011f72:	4604      	mov	r4, r0
 8011f74:	f7ff fe0a 	bl	8011b8c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011f78:	4b0c      	ldr	r3, [pc, #48]	; (8011fac <_ZN8touchgfx4LineC1Ev+0x3c>)
 8011f7a:	6023      	str	r3, [r4, #0]
 8011f7c:	2220      	movs	r2, #32
 8011f7e:	2300      	movs	r3, #0
 8011f80:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011f82:	2212      	movs	r2, #18
 8011f84:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8011f88:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8011f8c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011f90:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011f94:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8011f98:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8011f9c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011fa0:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011fa4:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011fa6:	60a3      	str	r3, [r4, #8]
 8011fa8:	4620      	mov	r0, r4
 8011faa:	bd10      	pop	{r4, pc}
 8011fac:	0802eef8 	.word	0x0802eef8

08011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011fb0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011fb4:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011fb6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011fb8:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8011fba:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8011fbc:	1aff      	subs	r7, r7, r3
 8011fbe:	4604      	mov	r4, r0
 8011fc0:	eba5 0502 	sub.w	r5, r5, r2
 8011fc4:	d142      	bne.n	801204c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011fc6:	b955      	cbnz	r5, 8011fde <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011fc8:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8011fcc:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011fd0:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011fd4:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011fd8:	b002      	add	sp, #8
 8011fda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011fde:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011fe2:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011fe6:	4629      	mov	r1, r5
 8011fe8:	4642      	mov	r2, r8
 8011fea:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011fec:	f005 f8d5 	bl	801719a <_ZN8touchgfx6muldivElll>
 8011ff0:	2502      	movs	r5, #2
 8011ff2:	4642      	mov	r2, r8
 8011ff4:	fb90 f6f5 	sdiv	r6, r0, r5
 8011ff8:	4639      	mov	r1, r7
 8011ffa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011ffc:	f005 f8cd 	bl	801719a <_ZN8touchgfx6muldivElll>
 8012000:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8012004:	fb90 f5f5 	sdiv	r5, r0, r5
 8012008:	f1b9 0f00 	cmp.w	r9, #0
 801200c:	d067      	beq.n	80120de <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801200e:	f1b9 0f02 	cmp.w	r9, #2
 8012012:	d878      	bhi.n	8012106 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8012014:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012016:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012018:	1b93      	subs	r3, r2, r6
 801201a:	1b5b      	subs	r3, r3, r5
 801201c:	6463      	str	r3, [r4, #68]	; 0x44
 801201e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012020:	18e9      	adds	r1, r5, r3
 8012022:	1b89      	subs	r1, r1, r6
 8012024:	6561      	str	r1, [r4, #84]	; 0x54
 8012026:	1b81      	subs	r1, r0, r6
 8012028:	4429      	add	r1, r5
 801202a:	64a1      	str	r1, [r4, #72]	; 0x48
 801202c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801202e:	4430      	add	r0, r6
 8012030:	186f      	adds	r7, r5, r1
 8012032:	4432      	add	r2, r6
 8012034:	1b49      	subs	r1, r1, r5
 8012036:	4437      	add	r7, r6
 8012038:	4428      	add	r0, r5
 801203a:	4431      	add	r1, r6
 801203c:	1b52      	subs	r2, r2, r5
 801203e:	1b5b      	subs	r3, r3, r5
 8012040:	65a7      	str	r7, [r4, #88]	; 0x58
 8012042:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012044:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012046:	6522      	str	r2, [r4, #80]	; 0x50
 8012048:	1b9b      	subs	r3, r3, r6
 801204a:	e05b      	b.n	8012104 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 801204c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012050:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8012054:	2d00      	cmp	r5, #0
 8012056:	d0c6      	beq.n	8011fe6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012058:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 801205c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012060:	fb93 f2f8 	sdiv	r2, r3, r8
 8012064:	fb08 3312 	mls	r3, r8, r2, r3
 8012068:	b353      	cbz	r3, 80120c0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 801206a:	fb98 f2f3 	sdiv	r2, r8, r3
 801206e:	fb03 8812 	mls	r8, r3, r2, r8
 8012072:	f1b8 0f00 	cmp.w	r8, #0
 8012076:	d1f3      	bne.n	8012060 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012078:	2b01      	cmp	r3, #1
 801207a:	bf1c      	itt	ne
 801207c:	fb95 f5f3 	sdivne	r5, r5, r3
 8012080:	fb97 f7f3 	sdivne	r7, r7, r3
 8012084:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012088:	f24b 5104 	movw	r1, #46340	; 0xb504
 801208c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012090:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8012094:	428b      	cmp	r3, r1
 8012096:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801209a:	4608      	mov	r0, r1
 801209c:	dd01      	ble.n	80120a2 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801209e:	428a      	cmp	r2, r1
 80120a0:	dc10      	bgt.n	80120c4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 80120a2:	fb90 f3f3 	sdiv	r3, r0, r3
 80120a6:	fb90 f2f2 	sdiv	r2, r0, r2
 80120aa:	4293      	cmp	r3, r2
 80120ac:	bfa8      	it	ge
 80120ae:	4613      	movge	r3, r2
 80120b0:	435f      	muls	r7, r3
 80120b2:	435d      	muls	r5, r3
 80120b4:	4629      	mov	r1, r5
 80120b6:	4638      	mov	r0, r7
 80120b8:	f7ff fefe 	bl	8011eb8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80120bc:	4680      	mov	r8, r0
 80120be:	e792      	b.n	8011fe6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80120c0:	4643      	mov	r3, r8
 80120c2:	e7d9      	b.n	8012078 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 80120c4:	fb93 f3f1 	sdiv	r3, r3, r1
 80120c8:	fb92 f2f1 	sdiv	r2, r2, r1
 80120cc:	4293      	cmp	r3, r2
 80120ce:	bfcc      	ite	gt
 80120d0:	3301      	addgt	r3, #1
 80120d2:	1c53      	addle	r3, r2, #1
 80120d4:	fb97 f7f3 	sdiv	r7, r7, r3
 80120d8:	fb95 f5f3 	sdiv	r5, r5, r3
 80120dc:	e7ea      	b.n	80120b4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 80120de:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80120e0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80120e2:	1b93      	subs	r3, r2, r6
 80120e4:	6463      	str	r3, [r4, #68]	; 0x44
 80120e6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80120e8:	18e9      	adds	r1, r5, r3
 80120ea:	6561      	str	r1, [r4, #84]	; 0x54
 80120ec:	1b81      	subs	r1, r0, r6
 80120ee:	64a1      	str	r1, [r4, #72]	; 0x48
 80120f0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80120f2:	4430      	add	r0, r6
 80120f4:	186f      	adds	r7, r5, r1
 80120f6:	4432      	add	r2, r6
 80120f8:	1b49      	subs	r1, r1, r5
 80120fa:	65a7      	str	r7, [r4, #88]	; 0x58
 80120fc:	64e0      	str	r0, [r4, #76]	; 0x4c
 80120fe:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012100:	6522      	str	r2, [r4, #80]	; 0x50
 8012102:	1b5b      	subs	r3, r3, r5
 8012104:	6623      	str	r3, [r4, #96]	; 0x60
 8012106:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012108:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801210a:	9200      	str	r2, [sp, #0]
 801210c:	9301      	str	r3, [sp, #4]
 801210e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8012112:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8012116:	680f      	ldr	r7, [r1, #0]
 8012118:	9800      	ldr	r0, [sp, #0]
 801211a:	42ba      	cmp	r2, r7
 801211c:	bfa8      	it	ge
 801211e:	463a      	movge	r2, r7
 8012120:	4287      	cmp	r7, r0
 8012122:	bfc8      	it	gt
 8012124:	9700      	strgt	r7, [sp, #0]
 8012126:	690f      	ldr	r7, [r1, #16]
 8012128:	9801      	ldr	r0, [sp, #4]
 801212a:	42bb      	cmp	r3, r7
 801212c:	bfa8      	it	ge
 801212e:	463b      	movge	r3, r7
 8012130:	3104      	adds	r1, #4
 8012132:	4287      	cmp	r7, r0
 8012134:	bfc8      	it	gt
 8012136:	9701      	strgt	r7, [sp, #4]
 8012138:	458c      	cmp	ip, r1
 801213a:	d1ec      	bne.n	8012116 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 801213c:	4668      	mov	r0, sp
 801213e:	2720      	movs	r7, #32
 8012140:	fb92 f8f7 	sdiv	r8, r2, r7
 8012144:	fb93 f7f7 	sdiv	r7, r3, r7
 8012148:	f7ff fd57 	bl	8011bfa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801214c:	4682      	mov	sl, r0
 801214e:	a801      	add	r0, sp, #4
 8012150:	f7ff fd53 	bl	8011bfa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012154:	ebaa 0208 	sub.w	r2, sl, r8
 8012158:	1bc0      	subs	r0, r0, r7
 801215a:	f1b9 0f01 	cmp.w	r9, #1
 801215e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8012162:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8012166:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801216a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801216e:	f47f af33 	bne.w	8011fd8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012172:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012174:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012176:	1b83      	subs	r3, r0, r6
 8012178:	6463      	str	r3, [r4, #68]	; 0x44
 801217a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801217c:	18ea      	adds	r2, r5, r3
 801217e:	6562      	str	r2, [r4, #84]	; 0x54
 8012180:	1b8a      	subs	r2, r1, r6
 8012182:	64a2      	str	r2, [r4, #72]	; 0x48
 8012184:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012186:	4431      	add	r1, r6
 8012188:	18af      	adds	r7, r5, r2
 801218a:	4406      	add	r6, r0
 801218c:	1b52      	subs	r2, r2, r5
 801218e:	1b5d      	subs	r5, r3, r5
 8012190:	65a7      	str	r7, [r4, #88]	; 0x58
 8012192:	64e1      	str	r1, [r4, #76]	; 0x4c
 8012194:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012196:	6526      	str	r6, [r4, #80]	; 0x50
 8012198:	6625      	str	r5, [r4, #96]	; 0x60
 801219a:	e71d      	b.n	8011fd8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801219c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801219c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801219e:	428b      	cmp	r3, r1
 80121a0:	d102      	bne.n	80121a8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 80121a2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80121a4:	4293      	cmp	r3, r2
 80121a6:	d003      	beq.n	80121b0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 80121a8:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 80121ac:	f7ff bf00 	b.w	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80121b0:	4770      	bx	lr

080121b2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 80121b2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80121b4:	428b      	cmp	r3, r1
 80121b6:	d102      	bne.n	80121be <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 80121b8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80121ba:	4293      	cmp	r3, r2
 80121bc:	d003      	beq.n	80121c6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 80121be:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 80121c2:	f7ff bef5 	b.w	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80121c6:	4770      	bx	lr

080121c8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 80121c8:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 80121cc:	f7ff bef0 	b.w	8011fb0 <_ZN8touchgfx4Line17updateCachedShapeEv>

080121d0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 80121d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121d4:	b0a0      	sub	sp, #128	; 0x80
 80121d6:	4604      	mov	r4, r0
 80121d8:	460a      	mov	r2, r1
 80121da:	4601      	mov	r1, r0
 80121dc:	a804      	add	r0, sp, #16
 80121de:	f014 fe3b 	bl	8026e58 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80121e2:	2300      	movs	r3, #0
 80121e4:	9301      	str	r3, [sp, #4]
 80121e6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80121ea:	2b01      	cmp	r3, #1
 80121ec:	d17c      	bne.n	80122e8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 80121ee:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80121f0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80121f2:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80121f4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80121f6:	1ac0      	subs	r0, r0, r3
 80121f8:	eba1 0102 	sub.w	r1, r1, r2
 80121fc:	d437      	bmi.n	801226e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 80121fe:	2900      	cmp	r1, #0
 8012200:	aa01      	add	r2, sp, #4
 8012202:	db2e      	blt.n	8012262 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012204:	f7ff fe98 	bl	8011f38 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012208:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801220c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801220e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012210:	a804      	add	r0, sp, #16
 8012212:	f014 ffa1 	bl	8027158 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012216:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012218:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801221a:	a804      	add	r0, sp, #16
 801221c:	f014 ffe9 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012220:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012222:	2db3      	cmp	r5, #179	; 0xb3
 8012224:	dc33      	bgt.n	801228e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8012226:	eba6 0805 	sub.w	r8, r6, r5
 801222a:	4640      	mov	r0, r8
 801222c:	f7ff fdf2 	bl	8011e14 <_ZN8touchgfx7CWRUtil4sineEi>
 8012230:	a902      	add	r1, sp, #8
 8012232:	9002      	str	r0, [sp, #8]
 8012234:	a801      	add	r0, sp, #4
 8012236:	f7ff fcd5 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801223a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801223c:	1847      	adds	r7, r0, r1
 801223e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012242:	f7ff fde7 	bl	8011e14 <_ZN8touchgfx7CWRUtil4sineEi>
 8012246:	a903      	add	r1, sp, #12
 8012248:	9003      	str	r0, [sp, #12]
 801224a:	a801      	add	r0, sp, #4
 801224c:	f7ff fcca 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012250:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012252:	4639      	mov	r1, r7
 8012254:	1a12      	subs	r2, r2, r0
 8012256:	a804      	add	r0, sp, #16
 8012258:	f014 ffcb 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801225c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801225e:	441d      	add	r5, r3
 8012260:	e7df      	b.n	8012222 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8012262:	4249      	negs	r1, r1
 8012264:	f7ff fe68 	bl	8011f38 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012268:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801226c:	e7ce      	b.n	801220c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801226e:	2900      	cmp	r1, #0
 8012270:	f1c0 0000 	rsb	r0, r0, #0
 8012274:	aa01      	add	r2, sp, #4
 8012276:	db04      	blt.n	8012282 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012278:	f7ff fe5e 	bl	8011f38 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801227c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012280:	e7c4      	b.n	801220c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012282:	4249      	negs	r1, r1
 8012284:	f7ff fe58 	bl	8011f38 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012288:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801228c:	e7be      	b.n	801220c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801228e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012290:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012292:	a804      	add	r0, sp, #16
 8012294:	f014 ffad 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012298:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801229a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801229c:	a804      	add	r0, sp, #16
 801229e:	f014 ffa8 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80122a2:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80122a4:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 80122a8:	2d00      	cmp	r5, #0
 80122aa:	dd31      	ble.n	8012310 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 80122ac:	eb05 0806 	add.w	r8, r5, r6
 80122b0:	4640      	mov	r0, r8
 80122b2:	f7ff fdaf 	bl	8011e14 <_ZN8touchgfx7CWRUtil4sineEi>
 80122b6:	a902      	add	r1, sp, #8
 80122b8:	9002      	str	r0, [sp, #8]
 80122ba:	a801      	add	r0, sp, #4
 80122bc:	f7ff fc92 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80122c0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80122c2:	1847      	adds	r7, r0, r1
 80122c4:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80122c8:	f7ff fda4 	bl	8011e14 <_ZN8touchgfx7CWRUtil4sineEi>
 80122cc:	a903      	add	r1, sp, #12
 80122ce:	9003      	str	r0, [sp, #12]
 80122d0:	a801      	add	r0, sp, #4
 80122d2:	f7ff fc87 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80122d6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80122d8:	4639      	mov	r1, r7
 80122da:	1a12      	subs	r2, r2, r0
 80122dc:	a804      	add	r0, sp, #16
 80122de:	f014 ff88 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80122e2:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80122e4:	1aed      	subs	r5, r5, r3
 80122e6:	e7df      	b.n	80122a8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 80122e8:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80122ea:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80122ec:	a804      	add	r0, sp, #16
 80122ee:	f014 ff33 	bl	8027158 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80122f2:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80122f4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80122f6:	a804      	add	r0, sp, #16
 80122f8:	f014 ff7b 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80122fc:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80122fe:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012300:	a804      	add	r0, sp, #16
 8012302:	f014 ff76 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012306:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012308:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801230a:	a804      	add	r0, sp, #16
 801230c:	f014 ff71 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012310:	21ff      	movs	r1, #255	; 0xff
 8012312:	a804      	add	r0, sp, #16
 8012314:	f014 fe5c 	bl	8026fd0 <_ZN8touchgfx6Canvas6renderEh>
 8012318:	4b04      	ldr	r3, [pc, #16]	; (801232c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 801231a:	9304      	str	r3, [sp, #16]
 801231c:	4604      	mov	r4, r0
 801231e:	a80c      	add	r0, sp, #48	; 0x30
 8012320:	f001 f8cc 	bl	80134bc <_ZN8touchgfx7OutlineD1Ev>
 8012324:	4620      	mov	r0, r4
 8012326:	b020      	add	sp, #128	; 0x80
 8012328:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801232c:	0802f720 	.word	0x0802f720

08012330 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012330:	2000      	movs	r0, #0
 8012332:	4770      	bx	lr

08012334 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8012334:	4b07      	ldr	r3, [pc, #28]	; (8012354 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8012336:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012338:	881b      	ldrh	r3, [r3, #0]
 801233a:	4293      	cmp	r3, r2
 801233c:	bf81      	itttt	hi
 801233e:	4b06      	ldrhi	r3, [pc, #24]	; (8012358 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012340:	681b      	ldrhi	r3, [r3, #0]
 8012342:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8012346:	7858      	ldrbhi	r0, [r3, #1]
 8012348:	bf8c      	ite	hi
 801234a:	f000 0003 	andhi.w	r0, r0, #3
 801234e:	2000      	movls	r0, #0
 8012350:	4770      	bx	lr
 8012352:	bf00      	nop
 8012354:	20012e00 	.word	0x20012e00
 8012358:	20012dfc 	.word	0x20012dfc

0801235c <_ZN8touchgfx8TextAreaD1Ev>:
 801235c:	4770      	bx	lr
	...

08012360 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012364:	4b10      	ldr	r3, [pc, #64]	; (80123a8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8012366:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012368:	881b      	ldrh	r3, [r3, #0]
 801236a:	428b      	cmp	r3, r1
 801236c:	4604      	mov	r4, r0
 801236e:	d918      	bls.n	80123a2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012370:	6803      	ldr	r3, [r0, #0]
 8012372:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8012374:	4b0d      	ldr	r3, [pc, #52]	; (80123ac <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8012376:	6818      	ldr	r0, [r3, #0]
 8012378:	f7f6 fe4c 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 801237c:	6823      	ldr	r3, [r4, #0]
 801237e:	4606      	mov	r6, r0
 8012380:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012382:	4620      	mov	r0, r4
 8012384:	4798      	blx	r3
 8012386:	6823      	ldr	r3, [r4, #0]
 8012388:	4607      	mov	r7, r0
 801238a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801238e:	4620      	mov	r0, r4
 8012390:	4798      	blx	r3
 8012392:	463a      	mov	r2, r7
 8012394:	4603      	mov	r3, r0
 8012396:	4631      	mov	r1, r6
 8012398:	4620      	mov	r0, r4
 801239a:	46ac      	mov	ip, r5
 801239c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80123a0:	4760      	bx	ip
 80123a2:	2000      	movs	r0, #0
 80123a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80123a8:	20012e00 	.word	0x20012e00
 80123ac:	20012e08 	.word	0x20012e08

080123b0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80123b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80123b4:	4b17      	ldr	r3, [pc, #92]	; (8012414 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80123b6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80123b8:	881b      	ldrh	r3, [r3, #0]
 80123ba:	428b      	cmp	r3, r1
 80123bc:	4604      	mov	r4, r0
 80123be:	d926      	bls.n	801240e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80123c0:	4b15      	ldr	r3, [pc, #84]	; (8012418 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80123c2:	681b      	ldr	r3, [r3, #0]
 80123c4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80123c8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80123cc:	4b13      	ldr	r3, [pc, #76]	; (801241c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80123ce:	7855      	ldrb	r5, [r2, #1]
 80123d0:	681b      	ldr	r3, [r3, #0]
 80123d2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80123d6:	6833      	ldr	r3, [r6, #0]
 80123d8:	69df      	ldr	r7, [r3, #28]
 80123da:	4b11      	ldr	r3, [pc, #68]	; (8012420 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80123dc:	6818      	ldr	r0, [r3, #0]
 80123de:	f7f6 fe19 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 80123e2:	6823      	ldr	r3, [r4, #0]
 80123e4:	4680      	mov	r8, r0
 80123e6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80123e8:	4620      	mov	r0, r4
 80123ea:	4798      	blx	r3
 80123ec:	6823      	ldr	r3, [r4, #0]
 80123ee:	4681      	mov	r9, r0
 80123f0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80123f4:	4620      	mov	r0, r4
 80123f6:	4798      	blx	r3
 80123f8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80123fc:	9000      	str	r0, [sp, #0]
 80123fe:	464b      	mov	r3, r9
 8012400:	4642      	mov	r2, r8
 8012402:	4629      	mov	r1, r5
 8012404:	4630      	mov	r0, r6
 8012406:	47b8      	blx	r7
 8012408:	b003      	add	sp, #12
 801240a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801240e:	2000      	movs	r0, #0
 8012410:	e7fa      	b.n	8012408 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8012412:	bf00      	nop
 8012414:	20012e00 	.word	0x20012e00
 8012418:	20012dfc 	.word	0x20012dfc
 801241c:	20012e04 	.word	0x20012e04
 8012420:	20012e08 	.word	0x20012e08

08012424 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8012424:	b40e      	push	{r1, r2, r3}
 8012426:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801242a:	4b2f      	ldr	r3, [pc, #188]	; (80124e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 801242c:	881a      	ldrh	r2, [r3, #0]
 801242e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012430:	429a      	cmp	r2, r3
 8012432:	b09d      	sub	sp, #116	; 0x74
 8012434:	4604      	mov	r4, r0
 8012436:	d954      	bls.n	80124e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012438:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80124ec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801243c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80124f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012440:	aa26      	add	r2, sp, #152	; 0x98
 8012442:	9202      	str	r2, [sp, #8]
 8012444:	f8d9 2000 	ldr.w	r2, [r9]
 8012448:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801244c:	f8d8 3000 	ldr.w	r3, [r8]
 8012450:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012454:	682b      	ldr	r3, [r5, #0]
 8012456:	4628      	mov	r0, r5
 8012458:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801245a:	4798      	blx	r3
 801245c:	b207      	sxth	r7, r0
 801245e:	4606      	mov	r6, r0
 8012460:	a803      	add	r0, sp, #12
 8012462:	f005 fa57 	bl	8017914 <_ZN8touchgfx12TextProviderC1Ev>
 8012466:	682b      	ldr	r3, [r5, #0]
 8012468:	4628      	mov	r0, r5
 801246a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801246c:	4798      	blx	r3
 801246e:	682b      	ldr	r3, [r5, #0]
 8012470:	4682      	mov	sl, r0
 8012472:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012474:	4628      	mov	r0, r5
 8012476:	4798      	blx	r3
 8012478:	4653      	mov	r3, sl
 801247a:	9000      	str	r0, [sp, #0]
 801247c:	9a02      	ldr	r2, [sp, #8]
 801247e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012480:	a803      	add	r0, sp, #12
 8012482:	f005 faa2 	bl	80179ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012486:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012488:	f8d9 3000 	ldr.w	r3, [r9]
 801248c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012490:	8925      	ldrh	r5, [r4, #8]
 8012492:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8012496:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801249a:	eba5 050c 	sub.w	r5, r5, ip
 801249e:	784a      	ldrb	r2, [r1, #1]
 80124a0:	f8d8 3000 	ldr.w	r3, [r8]
 80124a4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80124a8:	b22d      	sxth	r5, r5
 80124aa:	9500      	str	r5, [sp, #0]
 80124ac:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80124b0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80124b4:	a803      	add	r0, sp, #12
 80124b6:	f002 feed 	bl	8015294 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80124ba:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80124be:	18b9      	adds	r1, r7, r2
 80124c0:	2900      	cmp	r1, #0
 80124c2:	b203      	sxth	r3, r0
 80124c4:	dd0b      	ble.n	80124de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80124c6:	3b01      	subs	r3, #1
 80124c8:	fb13 f302 	smulbb	r3, r3, r2
 80124cc:	fb16 3300 	smlabb	r3, r6, r0, r3
 80124d0:	b21f      	sxth	r7, r3
 80124d2:	4638      	mov	r0, r7
 80124d4:	b01d      	add	sp, #116	; 0x74
 80124d6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80124da:	b003      	add	sp, #12
 80124dc:	4770      	bx	lr
 80124de:	2b00      	cmp	r3, #0
 80124e0:	dcf7      	bgt.n	80124d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80124e2:	2700      	movs	r7, #0
 80124e4:	e7f5      	b.n	80124d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80124e6:	bf00      	nop
 80124e8:	20012e00 	.word	0x20012e00
 80124ec:	20012dfc 	.word	0x20012dfc
 80124f0:	20012e04 	.word	0x20012e04

080124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80124f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124f8:	4bbc      	ldr	r3, [pc, #752]	; (80127ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80124fa:	460c      	mov	r4, r1
 80124fc:	881b      	ldrh	r3, [r3, #0]
 80124fe:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012500:	428b      	cmp	r3, r1
 8012502:	b0a9      	sub	sp, #164	; 0xa4
 8012504:	4680      	mov	r8, r0
 8012506:	d809      	bhi.n	801251c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012508:	2300      	movs	r3, #0
 801250a:	f04f 32ff 	mov.w	r2, #4294967295
 801250e:	e9c0 3200 	strd	r3, r2, [r0]
 8012512:	6083      	str	r3, [r0, #8]
 8012514:	4640      	mov	r0, r8
 8012516:	b029      	add	sp, #164	; 0xa4
 8012518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801251c:	4eb4      	ldr	r6, [pc, #720]	; (80127f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801251e:	6833      	ldr	r3, [r6, #0]
 8012520:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8012524:	4bb3      	ldr	r3, [pc, #716]	; (80127f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8012526:	681b      	ldr	r3, [r3, #0]
 8012528:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801252c:	4bb2      	ldr	r3, [pc, #712]	; (80127f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801252e:	6818      	ldr	r0, [r3, #0]
 8012530:	f7f6 fd70 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 8012534:	682b      	ldr	r3, [r5, #0]
 8012536:	4681      	mov	r9, r0
 8012538:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801253a:	4628      	mov	r0, r5
 801253c:	4798      	blx	r3
 801253e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8012540:	b203      	sxth	r3, r0
 8012542:	4407      	add	r7, r0
 8012544:	9304      	str	r3, [sp, #16]
 8012546:	b2bb      	uxth	r3, r7
 8012548:	9303      	str	r3, [sp, #12]
 801254a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801254e:	4682      	mov	sl, r0
 8012550:	a80f      	add	r0, sp, #60	; 0x3c
 8012552:	2b00      	cmp	r3, #0
 8012554:	f040 80a6 	bne.w	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012558:	f005 f9dc 	bl	8017914 <_ZN8touchgfx12TextProviderC1Ev>
 801255c:	682b      	ldr	r3, [r5, #0]
 801255e:	4628      	mov	r0, r5
 8012560:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012562:	4798      	blx	r3
 8012564:	682b      	ldr	r3, [r5, #0]
 8012566:	4606      	mov	r6, r0
 8012568:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801256a:	4628      	mov	r0, r5
 801256c:	4798      	blx	r3
 801256e:	6823      	ldr	r3, [r4, #0]
 8012570:	4607      	mov	r7, r0
 8012572:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012574:	4620      	mov	r0, r4
 8012576:	4798      	blx	r3
 8012578:	6823      	ldr	r3, [r4, #0]
 801257a:	4683      	mov	fp, r0
 801257c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012580:	4620      	mov	r0, r4
 8012582:	4798      	blx	r3
 8012584:	463b      	mov	r3, r7
 8012586:	e9cd b000 	strd	fp, r0, [sp]
 801258a:	4649      	mov	r1, r9
 801258c:	4632      	mov	r2, r6
 801258e:	a80f      	add	r0, sp, #60	; 0x3c
 8012590:	f005 fa30 	bl	80179f4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012594:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012598:	f8df b254 	ldr.w	fp, [pc, #596]	; 80127f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801259c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80125a0:	f04f 0600 	mov.w	r6, #0
 80125a4:	bf0c      	ite	eq
 80125a6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80125aa:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80125ae:	4637      	mov	r7, r6
 80125b0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80125b2:	f8db 3000 	ldr.w	r3, [fp]
 80125b6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80125ba:	4629      	mov	r1, r5
 80125bc:	785b      	ldrb	r3, [r3, #1]
 80125be:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80125c2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80125c6:	a80f      	add	r0, sp, #60	; 0x3c
 80125c8:	f002 fb7f 	bl	8014cca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80125cc:	9b03      	ldr	r3, [sp, #12]
 80125ce:	4286      	cmp	r6, r0
 80125d0:	bfb8      	it	lt
 80125d2:	4606      	movlt	r6, r0
 80125d4:	3701      	adds	r7, #1
 80125d6:	eba9 0903 	sub.w	r9, r9, r3
 80125da:	a80f      	add	r0, sp, #60	; 0x3c
 80125dc:	b236      	sxth	r6, r6
 80125de:	b2bf      	uxth	r7, r7
 80125e0:	fa0f f989 	sxth.w	r9, r9
 80125e4:	f005 f9bd 	bl	8017962 <_ZN8touchgfx12TextProvider11endOfStringEv>
 80125e8:	b918      	cbnz	r0, 80125f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80125ea:	7a2b      	ldrb	r3, [r5, #8]
 80125ec:	444b      	add	r3, r9
 80125ee:	2b00      	cmp	r3, #0
 80125f0:	dcde      	bgt.n	80125b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80125f2:	9b03      	ldr	r3, [sp, #12]
 80125f4:	9a04      	ldr	r2, [sp, #16]
 80125f6:	f895 9009 	ldrb.w	r9, [r5, #9]
 80125fa:	fb13 f707 	smulbb	r7, r3, r7
 80125fe:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012600:	1aff      	subs	r7, r7, r3
 8012602:	b2bf      	uxth	r7, r7
 8012604:	b23b      	sxth	r3, r7
 8012606:	429a      	cmp	r2, r3
 8012608:	bfa8      	it	ge
 801260a:	4657      	movge	r7, sl
 801260c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012610:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012614:	6823      	ldr	r3, [r4, #0]
 8012616:	bf08      	it	eq
 8012618:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 801261c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801261e:	bf18      	it	ne
 8012620:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8012624:	4620      	mov	r0, r4
 8012626:	4798      	blx	r3
 8012628:	444f      	add	r7, r9
 801262a:	fa1f f987 	uxth.w	r9, r7
 801262e:	2801      	cmp	r0, #1
 8012630:	fa0f f789 	sxth.w	r7, r9
 8012634:	b2b3      	uxth	r3, r6
 8012636:	f000 80e1 	beq.w	80127fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801263a:	2802      	cmp	r0, #2
 801263c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8012640:	f000 80e2 	beq.w	8012808 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8012644:	7aea      	ldrb	r2, [r5, #11]
 8012646:	7b2d      	ldrb	r5, [r5, #12]
 8012648:	b236      	sxth	r6, r6
 801264a:	1ab6      	subs	r6, r6, r2
 801264c:	442a      	add	r2, r5
 801264e:	4413      	add	r3, r2
 8012650:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8012654:	fa1f fa86 	uxth.w	sl, r6
 8012658:	b29b      	uxth	r3, r3
 801265a:	2a02      	cmp	r2, #2
 801265c:	fa0f fb8a 	sxth.w	fp, sl
 8012660:	b21e      	sxth	r6, r3
 8012662:	f000 80d5 	beq.w	8012810 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8012666:	2a03      	cmp	r2, #3
 8012668:	f000 80dd 	beq.w	8012826 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801266c:	2a01      	cmp	r2, #1
 801266e:	f040 80e5 	bne.w	801283c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8012672:	8925      	ldrh	r5, [r4, #8]
 8012674:	4633      	mov	r3, r6
 8012676:	eba5 0909 	sub.w	r9, r5, r9
 801267a:	463e      	mov	r6, r7
 801267c:	465d      	mov	r5, fp
 801267e:	461f      	mov	r7, r3
 8012680:	fa0f fb89 	sxth.w	fp, r9
 8012684:	4b5c      	ldr	r3, [pc, #368]	; (80127f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012686:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012688:	6818      	ldr	r0, [r3, #0]
 801268a:	f7f6 fcc3 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 801268e:	f8a8 b000 	strh.w	fp, [r8]
 8012692:	f8a8 5002 	strh.w	r5, [r8, #2]
 8012696:	f8a8 6004 	strh.w	r6, [r8, #4]
 801269a:	f8a8 7006 	strh.w	r7, [r8, #6]
 801269e:	f8c8 0008 	str.w	r0, [r8, #8]
 80126a2:	e737      	b.n	8012514 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80126a4:	f005 f936 	bl	8017914 <_ZN8touchgfx12TextProviderC1Ev>
 80126a8:	682b      	ldr	r3, [r5, #0]
 80126aa:	4628      	mov	r0, r5
 80126ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80126ae:	4798      	blx	r3
 80126b0:	682b      	ldr	r3, [r5, #0]
 80126b2:	4607      	mov	r7, r0
 80126b4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80126b6:	4628      	mov	r0, r5
 80126b8:	4798      	blx	r3
 80126ba:	6823      	ldr	r3, [r4, #0]
 80126bc:	4683      	mov	fp, r0
 80126be:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80126c0:	4620      	mov	r0, r4
 80126c2:	4798      	blx	r3
 80126c4:	6822      	ldr	r2, [r4, #0]
 80126c6:	9005      	str	r0, [sp, #20]
 80126c8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80126cc:	4620      	mov	r0, r4
 80126ce:	4790      	blx	r2
 80126d0:	9b05      	ldr	r3, [sp, #20]
 80126d2:	9001      	str	r0, [sp, #4]
 80126d4:	463a      	mov	r2, r7
 80126d6:	4649      	mov	r1, r9
 80126d8:	9300      	str	r3, [sp, #0]
 80126da:	a80f      	add	r0, sp, #60	; 0x3c
 80126dc:	465b      	mov	r3, fp
 80126de:	f005 f989 	bl	80179f4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80126e2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80126e6:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80126ea:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80126ec:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80126f0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80126f4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80126f8:	bf0a      	itet	eq
 80126fa:	464a      	moveq	r2, r9
 80126fc:	461a      	movne	r2, r3
 80126fe:	4699      	moveq	r9, r3
 8012700:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012704:	1ad2      	subs	r2, r2, r3
 8012706:	6833      	ldr	r3, [r6, #0]
 8012708:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 801270c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012710:	af0f      	add	r7, sp, #60	; 0x3c
 8012712:	7859      	ldrb	r1, [r3, #1]
 8012714:	9707      	str	r7, [sp, #28]
 8012716:	2300      	movs	r3, #0
 8012718:	f3c1 0181 	ubfx	r1, r1, #2, #2
 801271c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012720:	f88d 1020 	strb.w	r1, [sp, #32]
 8012724:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012728:	9509      	str	r5, [sp, #36]	; 0x24
 801272a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801272e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012732:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012736:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801273a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801273e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012742:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012746:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801274a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801274e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8012752:	b350      	cbz	r0, 80127aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012754:	682b      	ldr	r3, [r5, #0]
 8012756:	4628      	mov	r0, r5
 8012758:	695b      	ldr	r3, [r3, #20]
 801275a:	4798      	blx	r3
 801275c:	4607      	mov	r7, r0
 801275e:	b320      	cbz	r0, 80127aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012760:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012762:	6803      	ldr	r3, [r0, #0]
 8012764:	4639      	mov	r1, r7
 8012766:	68db      	ldr	r3, [r3, #12]
 8012768:	4798      	blx	r3
 801276a:	4606      	mov	r6, r0
 801276c:	b1e8      	cbz	r0, 80127aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801276e:	7b43      	ldrb	r3, [r0, #13]
 8012770:	7a82      	ldrb	r2, [r0, #10]
 8012772:	005b      	lsls	r3, r3, #1
 8012774:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012778:	4313      	orrs	r3, r2
 801277a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801277e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8012782:	2b06      	cmp	r3, #6
 8012784:	d111      	bne.n	80127aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012786:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012788:	6803      	ldr	r3, [r0, #0]
 801278a:	4632      	mov	r2, r6
 801278c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801278e:	4639      	mov	r1, r7
 8012790:	4798      	blx	r3
 8012792:	7b73      	ldrb	r3, [r6, #13]
 8012794:	005b      	lsls	r3, r3, #1
 8012796:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801279a:	7ab3      	ldrb	r3, [r6, #10]
 801279c:	4313      	orrs	r3, r2
 801279e:	4418      	add	r0, r3
 80127a0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80127a4:	4418      	add	r0, r3
 80127a6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80127aa:	2600      	movs	r6, #0
 80127ac:	4637      	mov	r7, r6
 80127ae:	a806      	add	r0, sp, #24
 80127b0:	f002 fc6c 	bl	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80127b4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80127b8:	9b03      	ldr	r3, [sp, #12]
 80127ba:	4286      	cmp	r6, r0
 80127bc:	eba9 0903 	sub.w	r9, r9, r3
 80127c0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80127c4:	bfb8      	it	lt
 80127c6:	4606      	movlt	r6, r0
 80127c8:	3701      	adds	r7, #1
 80127ca:	b236      	sxth	r6, r6
 80127cc:	b2bf      	uxth	r7, r7
 80127ce:	fa0f f989 	sxth.w	r9, r9
 80127d2:	2b00      	cmp	r3, #0
 80127d4:	f43f af0d 	beq.w	80125f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80127d8:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80127dc:	2b00      	cmp	r3, #0
 80127de:	f47f af08 	bne.w	80125f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80127e2:	7a2b      	ldrb	r3, [r5, #8]
 80127e4:	444b      	add	r3, r9
 80127e6:	2b00      	cmp	r3, #0
 80127e8:	dce1      	bgt.n	80127ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80127ea:	e702      	b.n	80125f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80127ec:	20012e00 	.word	0x20012e00
 80127f0:	20012dfc 	.word	0x20012dfc
 80127f4:	20012e04 	.word	0x20012e04
 80127f8:	20012e08 	.word	0x20012e08
 80127fc:	ebaa 0606 	sub.w	r6, sl, r6
 8012800:	2002      	movs	r0, #2
 8012802:	fb96 f6f0 	sdiv	r6, r6, r0
 8012806:	e71d      	b.n	8012644 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012808:	441e      	add	r6, r3
 801280a:	ebaa 0606 	sub.w	r6, sl, r6
 801280e:	e719      	b.n	8012644 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012810:	8925      	ldrh	r5, [r4, #8]
 8012812:	1aed      	subs	r5, r5, r3
 8012814:	eba5 050a 	sub.w	r5, r5, sl
 8012818:	fa0f fb85 	sxth.w	fp, r5
 801281c:	8965      	ldrh	r5, [r4, #10]
 801281e:	eba5 0509 	sub.w	r5, r5, r9
 8012822:	b22d      	sxth	r5, r5
 8012824:	e72e      	b.n	8012684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012826:	8965      	ldrh	r5, [r4, #10]
 8012828:	1aed      	subs	r5, r5, r3
 801282a:	eba5 050a 	sub.w	r5, r5, sl
 801282e:	4633      	mov	r3, r6
 8012830:	b22d      	sxth	r5, r5
 8012832:	463e      	mov	r6, r7
 8012834:	f04f 0b00 	mov.w	fp, #0
 8012838:	461f      	mov	r7, r3
 801283a:	e723      	b.n	8012684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801283c:	2500      	movs	r5, #0
 801283e:	e721      	b.n	8012684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08012840 <_ZN8touchgfx8TextAreaD0Ev>:
 8012840:	b510      	push	{r4, lr}
 8012842:	2148      	movs	r1, #72	; 0x48
 8012844:	4604      	mov	r4, r0
 8012846:	f017 fa4a 	bl	8029cde <_ZdlPvj>
 801284a:	4620      	mov	r0, r4
 801284c:	bd10      	pop	{r4, pc}
	...

08012850 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012850:	b513      	push	{r0, r1, r4, lr}
 8012852:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8012856:	4604      	mov	r4, r0
 8012858:	b1fb      	cbz	r3, 801289a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801285a:	4b16      	ldr	r3, [pc, #88]	; (80128b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801285c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801285e:	881b      	ldrh	r3, [r3, #0]
 8012860:	428b      	cmp	r3, r1
 8012862:	d91a      	bls.n	801289a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012864:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012868:	2b00      	cmp	r3, #0
 801286a:	dd16      	ble.n	801289a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801286c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012870:	2b00      	cmp	r3, #0
 8012872:	dd12      	ble.n	801289a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012874:	4b10      	ldr	r3, [pc, #64]	; (80128b8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012876:	6818      	ldr	r0, [r3, #0]
 8012878:	f7f6 fbcc 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 801287c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012880:	6822      	ldr	r2, [r4, #0]
 8012882:	2b00      	cmp	r3, #0
 8012884:	db06      	blt.n	8012894 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012886:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801288a:	2b00      	cmp	r3, #0
 801288c:	db02      	blt.n	8012894 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801288e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012890:	4298      	cmp	r0, r3
 8012892:	d004      	beq.n	801289e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012894:	6953      	ldr	r3, [r2, #20]
 8012896:	4620      	mov	r0, r4
 8012898:	4798      	blx	r3
 801289a:	b002      	add	sp, #8
 801289c:	bd10      	pop	{r4, pc}
 801289e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80128a2:	c903      	ldmia	r1, {r0, r1}
 80128a4:	466b      	mov	r3, sp
 80128a6:	e883 0003 	stmia.w	r3, {r0, r1}
 80128aa:	6912      	ldr	r2, [r2, #16]
 80128ac:	4619      	mov	r1, r3
 80128ae:	4620      	mov	r0, r4
 80128b0:	4790      	blx	r2
 80128b2:	e7f2      	b.n	801289a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80128b4:	20012e00 	.word	0x20012e00
 80128b8:	20012e08 	.word	0x20012e08

080128bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80128bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80128c0:	4b44      	ldr	r3, [pc, #272]	; (80129d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80128c2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80128c4:	881b      	ldrh	r3, [r3, #0]
 80128c6:	4293      	cmp	r3, r2
 80128c8:	b08e      	sub	sp, #56	; 0x38
 80128ca:	4604      	mov	r4, r0
 80128cc:	d97e      	bls.n	80129cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80128ce:	6808      	ldr	r0, [r1, #0]
 80128d0:	4d41      	ldr	r5, [pc, #260]	; (80129d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80128d2:	6849      	ldr	r1, [r1, #4]
 80128d4:	ab05      	add	r3, sp, #20
 80128d6:	c303      	stmia	r3!, {r0, r1}
 80128d8:	4611      	mov	r1, r2
 80128da:	6828      	ldr	r0, [r5, #0]
 80128dc:	f7f6 fb9a 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 80128e0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80128e4:	2b00      	cmp	r3, #0
 80128e6:	db11      	blt.n	801290c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80128e8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80128ec:	2b00      	cmp	r3, #0
 80128ee:	db0d      	blt.n	801290c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80128f0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80128f2:	4298      	cmp	r0, r3
 80128f4:	d10a      	bne.n	801290c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80128f6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80128fa:	e892 0003 	ldmia.w	r2, {r0, r1}
 80128fe:	ab09      	add	r3, sp, #36	; 0x24
 8012900:	e883 0003 	stmia.w	r3, {r0, r1}
 8012904:	4619      	mov	r1, r3
 8012906:	a805      	add	r0, sp, #20
 8012908:	f7fe f860 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 801290c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012910:	2b00      	cmp	r3, #0
 8012912:	dd5b      	ble.n	80129cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012914:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012918:	2b00      	cmp	r3, #0
 801291a:	dd57      	ble.n	80129cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801291c:	4f2f      	ldr	r7, [pc, #188]	; (80129dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801291e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012920:	683b      	ldr	r3, [r7, #0]
 8012922:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8012926:	4b2e      	ldr	r3, [pc, #184]	; (80129e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012928:	681b      	ldr	r3, [r3, #0]
 801292a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801292e:	2e00      	cmp	r6, #0
 8012930:	d04c      	beq.n	80129cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012932:	6823      	ldr	r3, [r4, #0]
 8012934:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012938:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801293a:	4620      	mov	r0, r4
 801293c:	4798      	blx	r3
 801293e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012940:	683b      	ldr	r3, [r7, #0]
 8012942:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8012946:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801294a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801294e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012950:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012954:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012958:	785b      	ldrb	r3, [r3, #1]
 801295a:	9609      	str	r6, [sp, #36]	; 0x24
 801295c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012960:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012964:	4b1f      	ldr	r3, [pc, #124]	; (80129e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012966:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801296a:	681b      	ldr	r3, [r3, #0]
 801296c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012970:	910b      	str	r1, [sp, #44]	; 0x2c
 8012972:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012976:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801297a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801297e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012982:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012986:	b10a      	cbz	r2, 801298c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012988:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801298a:	b906      	cbnz	r6, 801298e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801298c:	689e      	ldr	r6, [r3, #8]
 801298e:	af07      	add	r7, sp, #28
 8012990:	4621      	mov	r1, r4
 8012992:	4638      	mov	r0, r7
 8012994:	f004 fab0 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012998:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801299a:	6828      	ldr	r0, [r5, #0]
 801299c:	f7f6 fb3a 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 80129a0:	6823      	ldr	r3, [r4, #0]
 80129a2:	4605      	mov	r5, r0
 80129a4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80129a6:	4620      	mov	r0, r4
 80129a8:	4798      	blx	r3
 80129aa:	6823      	ldr	r3, [r4, #0]
 80129ac:	4680      	mov	r8, r0
 80129ae:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80129b2:	4620      	mov	r0, r4
 80129b4:	4798      	blx	r3
 80129b6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80129ba:	ab09      	add	r3, sp, #36	; 0x24
 80129bc:	9300      	str	r3, [sp, #0]
 80129be:	9501      	str	r5, [sp, #4]
 80129c0:	ab05      	add	r3, sp, #20
 80129c2:	e897 0006 	ldmia.w	r7, {r1, r2}
 80129c6:	4630      	mov	r0, r6
 80129c8:	f7f6 fad6 	bl	8008f78 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80129cc:	b00e      	add	sp, #56	; 0x38
 80129ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80129d2:	bf00      	nop
 80129d4:	20012e00 	.word	0x20012e00
 80129d8:	20012e08 	.word	0x20012e08
 80129dc:	20012dfc 	.word	0x20012dfc
 80129e0:	20012e04 	.word	0x20012e04
 80129e4:	20012da4 	.word	0x20012da4

080129e8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80129e8:	b538      	push	{r3, r4, r5, lr}
 80129ea:	4b0e      	ldr	r3, [pc, #56]	; (8012a24 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80129ec:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80129ee:	881b      	ldrh	r3, [r3, #0]
 80129f0:	429a      	cmp	r2, r3
 80129f2:	4604      	mov	r4, r0
 80129f4:	d214      	bcs.n	8012a20 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80129f6:	6803      	ldr	r3, [r0, #0]
 80129f8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80129fa:	4798      	blx	r3
 80129fc:	6823      	ldr	r3, [r4, #0]
 80129fe:	4605      	mov	r5, r0
 8012a00:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012a02:	4620      	mov	r0, r4
 8012a04:	4798      	blx	r3
 8012a06:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012a0a:	b22d      	sxth	r5, r5
 8012a0c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012a10:	4601      	mov	r1, r0
 8012a12:	bf06      	itte	eq
 8012a14:	4602      	moveq	r2, r0
 8012a16:	4629      	moveq	r1, r5
 8012a18:	462a      	movne	r2, r5
 8012a1a:	4620      	mov	r0, r4
 8012a1c:	f7fd fdb6 	bl	801058c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012a20:	bd38      	pop	{r3, r4, r5, pc}
 8012a22:	bf00      	nop
 8012a24:	20012e00 	.word	0x20012e00

08012a28 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012a28:	b530      	push	{r4, r5, lr}
 8012a2a:	888b      	ldrh	r3, [r1, #4]
 8012a2c:	8583      	strh	r3, [r0, #44]	; 0x2c
 8012a2e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012a32:	b085      	sub	sp, #20
 8012a34:	4604      	mov	r4, r0
 8012a36:	b923      	cbnz	r3, 8012a42 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012a38:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012a3c:	b90b      	cbnz	r3, 8012a42 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012a3e:	f7ff ffd3 	bl	80129e8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012a42:	6823      	ldr	r3, [r4, #0]
 8012a44:	466d      	mov	r5, sp
 8012a46:	4621      	mov	r1, r4
 8012a48:	4628      	mov	r0, r5
 8012a4a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012a4e:	4798      	blx	r3
 8012a50:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012a54:	343c      	adds	r4, #60	; 0x3c
 8012a56:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012a5a:	b005      	add	sp, #20
 8012a5c:	bd30      	pop	{r4, r5, pc}

08012a5e <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012a5e:	2300      	movs	r3, #0
 8012a60:	8083      	strh	r3, [r0, #4]
 8012a62:	80c3      	strh	r3, [r0, #6]
 8012a64:	8003      	strh	r3, [r0, #0]
 8012a66:	8043      	strh	r3, [r0, #2]
 8012a68:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012a6c:	2bff      	cmp	r3, #255	; 0xff
 8012a6e:	bf01      	itttt	eq
 8012a70:	890b      	ldrheq	r3, [r1, #8]
 8012a72:	8083      	strheq	r3, [r0, #4]
 8012a74:	894b      	ldrheq	r3, [r1, #10]
 8012a76:	80c3      	strheq	r3, [r0, #6]
 8012a78:	4770      	bx	lr
	...

08012a7c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012a7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012a7e:	4604      	mov	r4, r0
 8012a80:	6808      	ldr	r0, [r1, #0]
 8012a82:	6849      	ldr	r1, [r1, #4]
 8012a84:	466b      	mov	r3, sp
 8012a86:	c303      	stmia	r3!, {r0, r1}
 8012a88:	6823      	ldr	r3, [r4, #0]
 8012a8a:	4669      	mov	r1, sp
 8012a8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a8e:	4620      	mov	r0, r4
 8012a90:	4798      	blx	r3
 8012a92:	4b08      	ldr	r3, [pc, #32]	; (8012ab4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012a94:	681b      	ldr	r3, [r3, #0]
 8012a96:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012a9a:	b10a      	cbz	r2, 8012aa0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012a9c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012a9e:	b900      	cbnz	r0, 8012aa2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012aa0:	6898      	ldr	r0, [r3, #8]
 8012aa2:	6803      	ldr	r3, [r0, #0]
 8012aa4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012aa6:	6a1d      	ldr	r5, [r3, #32]
 8012aa8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012aac:	4669      	mov	r1, sp
 8012aae:	47a8      	blx	r5
 8012ab0:	b003      	add	sp, #12
 8012ab2:	bd30      	pop	{r4, r5, pc}
 8012ab4:	20012da4 	.word	0x20012da4

08012ab8 <_ZN8touchgfx3BoxD1Ev>:
 8012ab8:	4770      	bx	lr

08012aba <_ZN8touchgfx3BoxD0Ev>:
 8012aba:	b510      	push	{r4, lr}
 8012abc:	212c      	movs	r1, #44	; 0x2c
 8012abe:	4604      	mov	r4, r0
 8012ac0:	f017 f90d 	bl	8029cde <_ZdlPvj>
 8012ac4:	4620      	mov	r0, r4
 8012ac6:	bd10      	pop	{r4, pc}

08012ac8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012ac8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8012acc:	b12a      	cbz	r2, 8012ada <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012ace:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012ad2:	b112      	cbz	r2, 8012ada <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012ad4:	6803      	ldr	r3, [r0, #0]
 8012ad6:	695b      	ldr	r3, [r3, #20]
 8012ad8:	4718      	bx	r3
 8012ada:	4770      	bx	lr

08012adc <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8012adc:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012ae0:	600b      	str	r3, [r1, #0]
 8012ae2:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012ae6:	6013      	str	r3, [r2, #0]
 8012ae8:	4770      	bx	lr

08012aea <_ZN8touchgfx5Gauge8setWidthEs>:
 8012aea:	8101      	strh	r1, [r0, #8]
 8012aec:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012af0:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012af4:	4770      	bx	lr

08012af6 <_ZN8touchgfx5Gauge9setHeightEs>:
 8012af6:	8141      	strh	r1, [r0, #10]
 8012af8:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8012afc:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012b00:	4770      	bx	lr

08012b02 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012b02:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012b06:	4770      	bx	lr

08012b08 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012b08:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8012b0c:	4770      	bx	lr

08012b0e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8012b0e:	4770      	bx	lr

08012b10 <_ZN8touchgfx5GaugeD1Ev>:
 8012b10:	4770      	bx	lr

08012b12 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012b12:	b538      	push	{r3, r4, r5, lr}
 8012b14:	4604      	mov	r4, r0
 8012b16:	460d      	mov	r5, r1
 8012b18:	f7fd fc51 	bl	80103be <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012b1c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012b20:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012b24:	bd38      	pop	{r3, r4, r5, pc}

08012b26 <_ZN8touchgfx5GaugeD0Ev>:
 8012b26:	b510      	push	{r4, lr}
 8012b28:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8012b2c:	4604      	mov	r4, r0
 8012b2e:	f017 f8d6 	bl	8029cde <_ZdlPvj>
 8012b32:	4620      	mov	r0, r4
 8012b34:	bd10      	pop	{r4, pc}

08012b36 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012b36:	b510      	push	{r4, lr}
 8012b38:	6803      	ldr	r3, [r0, #0]
 8012b3a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012b3e:	4604      	mov	r4, r0
 8012b40:	4798      	blx	r3
 8012b42:	b170      	cbz	r0, 8012b62 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012b44:	6823      	ldr	r3, [r4, #0]
 8012b46:	4620      	mov	r0, r4
 8012b48:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012b4c:	4798      	blx	r3
 8012b4e:	b140      	cbz	r0, 8012b62 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012b50:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012b54:	b12b      	cbz	r3, 8012b62 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012b56:	6823      	ldr	r3, [r4, #0]
 8012b58:	4620      	mov	r0, r4
 8012b5a:	695b      	ldr	r3, [r3, #20]
 8012b5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b60:	4718      	bx	r3
 8012b62:	bd10      	pop	{r4, pc}

08012b64 <_ZN8touchgfx5GaugeC1Ev>:
 8012b64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012b66:	4604      	mov	r4, r0
 8012b68:	4626      	mov	r6, r4
 8012b6a:	f7fd fd49 	bl	8010600 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012b6e:	4b18      	ldr	r3, [pc, #96]	; (8012bd0 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012b70:	f846 3bb4 	str.w	r3, [r6], #180
 8012b74:	a902      	add	r1, sp, #8
 8012b76:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012b7a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8012b7e:	4630      	mov	r0, r6
 8012b80:	f015 f970 	bl	8027e64 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012b84:	2500      	movs	r5, #0
 8012b86:	2301      	movs	r3, #1
 8012b88:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8012b8c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012b90:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012b94:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012b98:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8012b9c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012ba0:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012ba4:	4638      	mov	r0, r7
 8012ba6:	f014 fba1 	bl	80272ec <_ZN8touchgfx6CircleC1Ev>
 8012baa:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8012bae:	4620      	mov	r0, r4
 8012bb0:	f7fd fdc7 	bl	8010742 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012bb4:	4639      	mov	r1, r7
 8012bb6:	4620      	mov	r0, r4
 8012bb8:	f7fd fd82 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012bbc:	4620      	mov	r0, r4
 8012bbe:	4631      	mov	r1, r6
 8012bc0:	f7fd fd7e 	bl	80106c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012bc4:	4620      	mov	r0, r4
 8012bc6:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8012bca:	b003      	add	sp, #12
 8012bcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012bce:	bf00      	nop
 8012bd0:	0802f068 	.word	0x0802f068

08012bd4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012bd4:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012bd8:	4770      	bx	lr

08012bda <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012bda:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8012bde:	4770      	bx	lr

08012be0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012be0:	b538      	push	{r3, r4, r5, lr}
 8012be2:	8902      	ldrh	r2, [r0, #8]
 8012be4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012be8:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8012bec:	4604      	mov	r4, r0
 8012bee:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012bf2:	2200      	movs	r2, #0
 8012bf4:	4611      	mov	r1, r2
 8012bf6:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8012bfa:	4628      	mov	r0, r5
 8012bfc:	f7f0 fa27 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8012c00:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012c04:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012c08:	1a9b      	subs	r3, r3, r2
 8012c0a:	ee07 3a90 	vmov	s15, r3
 8012c0e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012c12:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012c16:	1a9b      	subs	r3, r3, r2
 8012c18:	ee07 3a10 	vmov	s14, r3
 8012c1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012c20:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c24:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012c28:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8012c2c:	4628      	mov	r0, r5
 8012c2e:	f015 f965 	bl	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012c32:	4b16      	ldr	r3, [pc, #88]	; (8012c8c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012c34:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012c38:	4628      	mov	r0, r5
 8012c3a:	f015 f95f 	bl	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012c3e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012c42:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012c46:	ee07 3a90 	vmov	s15, r3
 8012c4a:	ee07 2a10 	vmov	s14, r2
 8012c4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012c52:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c56:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8012c5a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8012c5e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012c62:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012c66:	4628      	mov	r0, r5
 8012c68:	f015 f948 	bl	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012c6c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012c70:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012c74:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012c78:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8012c7c:	4628      	mov	r0, r5
 8012c7e:	f015 f93d 	bl	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012c82:	2301      	movs	r3, #1
 8012c84:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012c88:	bd38      	pop	{r3, r4, r5, pc}
 8012c8a:	bf00      	nop
 8012c8c:	43960000 	.word	0x43960000

08012c90 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012c90:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012c92:	4604      	mov	r4, r0
 8012c94:	a802      	add	r0, sp, #8
 8012c96:	4616      	mov	r6, r2
 8012c98:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8012c9c:	461d      	mov	r5, r3
 8012c9e:	4601      	mov	r1, r0
 8012ca0:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012ca4:	f015 fa80 	bl	80281a8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012ca8:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8012cac:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012cb0:	4620      	mov	r0, r4
 8012cb2:	f7ff ff95 	bl	8012be0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012cb6:	b002      	add	sp, #8
 8012cb8:	bd70      	pop	{r4, r5, r6, pc}

08012cba <_ZN8touchgfx5Gauge9setCenterEii>:
 8012cba:	b570      	push	{r4, r5, r6, lr}
 8012cbc:	4606      	mov	r6, r0
 8012cbe:	460d      	mov	r5, r1
 8012cc0:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012cc4:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012cc8:	4614      	mov	r4, r2
 8012cca:	f7ff ff89 	bl	8012be0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012cce:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012cd2:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012cd6:	1aa4      	subs	r4, r4, r2
 8012cd8:	1a6d      	subs	r5, r5, r1
 8012cda:	0164      	lsls	r4, r4, #5
 8012cdc:	016d      	lsls	r5, r5, #5
 8012cde:	3410      	adds	r4, #16
 8012ce0:	3510      	adds	r5, #16
 8012ce2:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012ce6:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8012cea:	bd70      	pop	{r4, r5, r6, pc}

08012cec <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8012cec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012cee:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012cf0:	0149      	lsls	r1, r1, #5
 8012cf2:	4299      	cmp	r1, r3
 8012cf4:	4604      	mov	r4, r0
 8012cf6:	9101      	str	r1, [sp, #4]
 8012cf8:	d00b      	beq.n	8012d12 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8012cfa:	4601      	mov	r1, r0
 8012cfc:	aa01      	add	r2, sp, #4
 8012cfe:	a802      	add	r0, sp, #8
 8012d00:	f014 fcf2 	bl	80276e8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012d04:	9b01      	ldr	r3, [sp, #4]
 8012d06:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012d08:	6823      	ldr	r3, [r4, #0]
 8012d0a:	a902      	add	r1, sp, #8
 8012d0c:	691b      	ldr	r3, [r3, #16]
 8012d0e:	4620      	mov	r0, r4
 8012d10:	4798      	blx	r3
 8012d12:	b004      	add	sp, #16
 8012d14:	bd10      	pop	{r4, pc}
	...

08012d18 <_ZN8touchgfx5Gauge8setValueEi>:
 8012d18:	b570      	push	{r4, r5, r6, lr}
 8012d1a:	4604      	mov	r4, r0
 8012d1c:	f7fd fba2 	bl	8010464 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012d20:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012d24:	429a      	cmp	r2, r3
 8012d26:	bfac      	ite	ge
 8012d28:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8012d2c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012d30:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012d34:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012d38:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012d3c:	1ac9      	subs	r1, r1, r3
 8012d3e:	2900      	cmp	r1, #0
 8012d40:	bfb8      	it	lt
 8012d42:	4249      	neglt	r1, r1
 8012d44:	b289      	uxth	r1, r1
 8012d46:	4620      	mov	r0, r4
 8012d48:	f7fd fbae 	bl	80104a8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012d4c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012d50:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012d54:	eddf 6a19 	vldr	s13, [pc, #100]	; 8012dbc <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012d58:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012dc0 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8012d5c:	429a      	cmp	r2, r3
 8012d5e:	4605      	mov	r5, r0
 8012d60:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012d64:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012d68:	da15      	bge.n	8012d96 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8012d6a:	1b5b      	subs	r3, r3, r5
 8012d6c:	ee07 3a90 	vmov	s15, r3
 8012d70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012d74:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012d78:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012d7c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012d80:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012d84:	f015 f829 	bl	8027dda <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012d88:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012d8c:	1b49      	subs	r1, r1, r5
 8012d8e:	4630      	mov	r0, r6
 8012d90:	f7ff ffac 	bl	8012cec <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012d94:	bd70      	pop	{r4, r5, r6, pc}
 8012d96:	442b      	add	r3, r5
 8012d98:	ee07 3a90 	vmov	s15, r3
 8012d9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012da0:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012da4:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012da8:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012dac:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012db0:	f015 f813 	bl	8027dda <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012db4:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012db8:	4429      	add	r1, r5
 8012dba:	e7e8      	b.n	8012d8e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8012dbc:	43340000 	.word	0x43340000
 8012dc0:	40490fdb 	.word	0x40490fdb

08012dc4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012dc4:	b510      	push	{r4, lr}
 8012dc6:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8012dca:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8012dce:	0149      	lsls	r1, r1, #5
 8012dd0:	0152      	lsls	r2, r2, #5
 8012dd2:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012dd6:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8012dda:	4604      	mov	r4, r0
 8012ddc:	f7fd faec 	bl	80103b8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012de0:	4601      	mov	r1, r0
 8012de2:	4620      	mov	r0, r4
 8012de4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012de8:	f7ff bf96 	b.w	8012d18 <_ZN8touchgfx5Gauge8setValueEi>

08012dec <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8012dec:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012df0:	4770      	bx	lr

08012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012df2:	b570      	push	{r4, r5, r6, lr}
 8012df4:	880b      	ldrh	r3, [r1, #0]
 8012df6:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012df8:	4605      	mov	r5, r0
 8012dfa:	8813      	ldrh	r3, [r2, #0]
 8012dfc:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012e00:	4604      	mov	r4, r0
 8012e02:	4628      	mov	r0, r5
 8012e04:	f006 fb06 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012e08:	4606      	mov	r6, r0
 8012e0a:	4628      	mov	r0, r5
 8012e0c:	f006 fb36 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012e10:	6823      	ldr	r3, [r4, #0]
 8012e12:	4605      	mov	r5, r0
 8012e14:	4631      	mov	r1, r6
 8012e16:	4620      	mov	r0, r4
 8012e18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e1a:	4798      	blx	r3
 8012e1c:	6823      	ldr	r3, [r4, #0]
 8012e1e:	4629      	mov	r1, r5
 8012e20:	4620      	mov	r0, r4
 8012e22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012e24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012e28:	4718      	bx	r3

08012e2a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012e2a:	b510      	push	{r4, lr}
 8012e2c:	4604      	mov	r4, r0
 8012e2e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012e30:	b150      	cbz	r0, 8012e48 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012e32:	6803      	ldr	r3, [r0, #0]
 8012e34:	68db      	ldr	r3, [r3, #12]
 8012e36:	4798      	blx	r3
 8012e38:	b130      	cbz	r0, 8012e48 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012e3a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012e3c:	6803      	ldr	r3, [r0, #0]
 8012e3e:	4621      	mov	r1, r4
 8012e40:	689b      	ldr	r3, [r3, #8]
 8012e42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012e46:	4718      	bx	r3
 8012e48:	bd10      	pop	{r4, pc}

08012e4a <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012e4a:	b510      	push	{r4, lr}
 8012e4c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012e50:	2bff      	cmp	r3, #255	; 0xff
 8012e52:	4604      	mov	r4, r0
 8012e54:	d006      	beq.n	8012e64 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8012e56:	2300      	movs	r3, #0
 8012e58:	8003      	strh	r3, [r0, #0]
 8012e5a:	8043      	strh	r3, [r0, #2]
 8012e5c:	8083      	strh	r3, [r0, #4]
 8012e5e:	80c3      	strh	r3, [r0, #6]
 8012e60:	4620      	mov	r0, r4
 8012e62:	bd10      	pop	{r4, pc}
 8012e64:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012e68:	b11b      	cbz	r3, 8012e72 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012e6a:	3130      	adds	r1, #48	; 0x30
 8012e6c:	f006 fb3a 	bl	80194e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012e70:	e7f6      	b.n	8012e60 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012e72:	312e      	adds	r1, #46	; 0x2e
 8012e74:	e7fa      	b.n	8012e6c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012e78 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012e7c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012e80:	b08a      	sub	sp, #40	; 0x28
 8012e82:	4604      	mov	r4, r0
 8012e84:	4688      	mov	r8, r1
 8012e86:	2b00      	cmp	r3, #0
 8012e88:	d066      	beq.n	8012f58 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8012e8a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012e8c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012e90:	a805      	add	r0, sp, #20
 8012e92:	f006 fabf 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012e96:	4607      	mov	r7, r0
 8012e98:	a805      	add	r0, sp, #20
 8012e9a:	f006 faef 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012e9e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012ea2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012ea6:	4432      	add	r2, r6
 8012ea8:	b292      	uxth	r2, r2
 8012eaa:	2300      	movs	r3, #0
 8012eac:	fa0f fc82 	sxth.w	ip, r2
 8012eb0:	459c      	cmp	ip, r3
 8012eb2:	9306      	str	r3, [sp, #24]
 8012eb4:	dd52      	ble.n	8012f5c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012eb6:	42b7      	cmp	r7, r6
 8012eb8:	dd50      	ble.n	8012f5c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012eba:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8012ebe:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012ec2:	442b      	add	r3, r5
 8012ec4:	b29b      	uxth	r3, r3
 8012ec6:	b219      	sxth	r1, r3
 8012ec8:	2900      	cmp	r1, #0
 8012eca:	dd47      	ble.n	8012f5c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012ecc:	42a8      	cmp	r0, r5
 8012ece:	dd45      	ble.n	8012f5c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012ed0:	4567      	cmp	r7, ip
 8012ed2:	bfb8      	it	lt
 8012ed4:	b2ba      	uxthlt	r2, r7
 8012ed6:	4288      	cmp	r0, r1
 8012ed8:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012edc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012ee0:	bfb8      	it	lt
 8012ee2:	b283      	uxthlt	r3, r0
 8012ee4:	1b92      	subs	r2, r2, r6
 8012ee6:	1b5b      	subs	r3, r3, r5
 8012ee8:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012eec:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012ef0:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012ef4:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012ef8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012efc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012f00:	429a      	cmp	r2, r3
 8012f02:	d026      	beq.n	8012f52 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012f04:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012f08:	2b00      	cmp	r3, #0
 8012f0a:	dd22      	ble.n	8012f52 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012f0c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012f10:	2b00      	cmp	r3, #0
 8012f12:	dd1e      	ble.n	8012f52 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012f14:	2300      	movs	r3, #0
 8012f16:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8012f1a:	6823      	ldr	r3, [r4, #0]
 8012f1c:	a908      	add	r1, sp, #32
 8012f1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f20:	4620      	mov	r0, r4
 8012f22:	4798      	blx	r3
 8012f24:	4b0f      	ldr	r3, [pc, #60]	; (8012f64 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8012f26:	681b      	ldr	r3, [r3, #0]
 8012f28:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012f2c:	b10a      	cbz	r2, 8012f32 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8012f2e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012f30:	b900      	cbnz	r0, 8012f34 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012f32:	6898      	ldr	r0, [r3, #8]
 8012f34:	6801      	ldr	r1, [r0, #0]
 8012f36:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012f3a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012f3e:	2501      	movs	r5, #1
 8012f40:	9502      	str	r5, [sp, #8]
 8012f42:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012f46:	9401      	str	r4, [sp, #4]
 8012f48:	ac06      	add	r4, sp, #24
 8012f4a:	9400      	str	r4, [sp, #0]
 8012f4c:	688c      	ldr	r4, [r1, #8]
 8012f4e:	a905      	add	r1, sp, #20
 8012f50:	47a0      	blx	r4
 8012f52:	b00a      	add	sp, #40	; 0x28
 8012f54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012f58:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8012f5a:	e797      	b.n	8012e8c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8012f5c:	2300      	movs	r3, #0
 8012f5e:	9307      	str	r3, [sp, #28]
 8012f60:	e7ca      	b.n	8012ef8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8012f62:	bf00      	nop
 8012f64:	20012da4 	.word	0x20012da4

08012f68 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8012f68:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8012f6c:	b12a      	cbz	r2, 8012f7a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012f6e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012f72:	b112      	cbz	r2, 8012f7a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012f74:	6803      	ldr	r3, [r0, #0]
 8012f76:	695b      	ldr	r3, [r3, #20]
 8012f78:	4718      	bx	r3
 8012f7a:	4770      	bx	lr

08012f7c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8012f7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012f80:	4b2f      	ldr	r3, [pc, #188]	; (8013040 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8012f82:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012f84:	881b      	ldrh	r3, [r3, #0]
 8012f86:	4293      	cmp	r3, r2
 8012f88:	b08d      	sub	sp, #52	; 0x34
 8012f8a:	4604      	mov	r4, r0
 8012f8c:	460f      	mov	r7, r1
 8012f8e:	d954      	bls.n	801303a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012f90:	4b2c      	ldr	r3, [pc, #176]	; (8013044 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8012f92:	6819      	ldr	r1, [r3, #0]
 8012f94:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012f98:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8012f9c:	4a2a      	ldr	r2, [pc, #168]	; (8013048 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8012f9e:	6812      	ldr	r2, [r2, #0]
 8012fa0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012fa4:	2900      	cmp	r1, #0
 8012fa6:	d048      	beq.n	801303a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012fa8:	785a      	ldrb	r2, [r3, #1]
 8012faa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8012fae:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012fb2:	4b26      	ldr	r3, [pc, #152]	; (801304c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012fb4:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012fb8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8012fbc:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012fc0:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012fc2:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012fc6:	9107      	str	r1, [sp, #28]
 8012fc8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8012fcc:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012fd0:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012fd4:	681a      	ldr	r2, [r3, #0]
 8012fd6:	f88d 8020 	strb.w	r8, [sp, #32]
 8012fda:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8012fde:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012fe2:	9609      	str	r6, [sp, #36]	; 0x24
 8012fe4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012fe8:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8012fec:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012ff0:	b10b      	cbz	r3, 8012ff6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012ff2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012ff4:	b905      	cbnz	r5, 8012ff8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012ff6:	6895      	ldr	r5, [r2, #8]
 8012ff8:	ae05      	add	r6, sp, #20
 8012ffa:	4621      	mov	r1, r4
 8012ffc:	4630      	mov	r0, r6
 8012ffe:	f003 ff7b 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013002:	4b13      	ldr	r3, [pc, #76]	; (8013050 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013004:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013006:	6818      	ldr	r0, [r3, #0]
 8013008:	f7f6 f804 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 801300c:	6823      	ldr	r3, [r4, #0]
 801300e:	4680      	mov	r8, r0
 8013010:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013012:	4620      	mov	r0, r4
 8013014:	4798      	blx	r3
 8013016:	6823      	ldr	r3, [r4, #0]
 8013018:	4681      	mov	r9, r0
 801301a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801301e:	4620      	mov	r0, r4
 8013020:	4798      	blx	r3
 8013022:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8013026:	ab07      	add	r3, sp, #28
 8013028:	9300      	str	r3, [sp, #0]
 801302a:	f8cd 8004 	str.w	r8, [sp, #4]
 801302e:	463b      	mov	r3, r7
 8013030:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013034:	4628      	mov	r0, r5
 8013036:	f7f5 ff9f 	bl	8008f78 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801303a:	b00d      	add	sp, #52	; 0x34
 801303c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013040:	20012e00 	.word	0x20012e00
 8013044:	20012dfc 	.word	0x20012dfc
 8013048:	20012e04 	.word	0x20012e04
 801304c:	20012da4 	.word	0x20012da4
 8013050:	20012e08 	.word	0x20012e08

08013054 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8013054:	4770      	bx	lr

08013056 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8013056:	4770      	bx	lr

08013058 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8013058:	b510      	push	{r4, lr}
 801305a:	213c      	movs	r1, #60	; 0x3c
 801305c:	4604      	mov	r4, r0
 801305e:	f016 fe3e 	bl	8029cde <_ZdlPvj>
 8013062:	4620      	mov	r0, r4
 8013064:	bd10      	pop	{r4, pc}

08013066 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8013066:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801306a:	461c      	mov	r4, r3
 801306c:	4606      	mov	r6, r0
 801306e:	9f06      	ldr	r7, [sp, #24]
 8013070:	f7ff febf 	bl	8012df2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8013074:	8823      	ldrh	r3, [r4, #0]
 8013076:	86b3      	strh	r3, [r6, #52]	; 0x34
 8013078:	883b      	ldrh	r3, [r7, #0]
 801307a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801307c:	4638      	mov	r0, r7
 801307e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8013082:	f006 f9c7 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013086:	f04f 0802 	mov.w	r8, #2
 801308a:	fb95 f5f8 	sdiv	r5, r5, r8
 801308e:	b2ad      	uxth	r5, r5
 8013090:	fb90 f0f8 	sdiv	r0, r0, r8
 8013094:	1a2d      	subs	r5, r5, r0
 8013096:	8735      	strh	r5, [r6, #56]	; 0x38
 8013098:	4638      	mov	r0, r7
 801309a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801309e:	fb94 f4f8 	sdiv	r4, r4, r8
 80130a2:	f006 f9eb 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80130a6:	b2a4      	uxth	r4, r4
 80130a8:	fb90 f0f8 	sdiv	r0, r0, r8
 80130ac:	1a24      	subs	r4, r4, r0
 80130ae:	8774      	strh	r4, [r6, #58]	; 0x3a
 80130b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080130b4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 80130b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80130b8:	4604      	mov	r4, r0
 80130ba:	b08c      	sub	sp, #48	; 0x30
 80130bc:	460d      	mov	r5, r1
 80130be:	f7ff fedb 	bl	8012e78 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80130c2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80130c6:	2b00      	cmp	r3, #0
 80130c8:	d05d      	beq.n	8013186 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 80130ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80130cc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80130d0:	a805      	add	r0, sp, #20
 80130d2:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 80130d6:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 80130da:	f006 f99b 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80130de:	4606      	mov	r6, r0
 80130e0:	a805      	add	r0, sp, #20
 80130e2:	f006 f9cb 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80130e6:	6869      	ldr	r1, [r5, #4]
 80130e8:	f8ad 001e 	strh.w	r0, [sp, #30]
 80130ec:	6828      	ldr	r0, [r5, #0]
 80130ee:	f8ad 8018 	strh.w	r8, [sp, #24]
 80130f2:	ab08      	add	r3, sp, #32
 80130f4:	ad08      	add	r5, sp, #32
 80130f6:	c303      	stmia	r3!, {r0, r1}
 80130f8:	a906      	add	r1, sp, #24
 80130fa:	4628      	mov	r0, r5
 80130fc:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013100:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013104:	f7fd fc62 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8013108:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801310c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013110:	429a      	cmp	r2, r3
 8013112:	d035      	beq.n	8013180 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013114:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8013118:	2b00      	cmp	r3, #0
 801311a:	dd31      	ble.n	8013180 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801311c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8013120:	2b00      	cmp	r3, #0
 8013122:	dd2d      	ble.n	8013180 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013124:	2300      	movs	r3, #0
 8013126:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801312a:	6823      	ldr	r3, [r4, #0]
 801312c:	a90a      	add	r1, sp, #40	; 0x28
 801312e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013130:	4620      	mov	r0, r4
 8013132:	4798      	blx	r3
 8013134:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013138:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801313a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801313e:	1a9b      	subs	r3, r3, r2
 8013140:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013144:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8013146:	1ac9      	subs	r1, r1, r3
 8013148:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801314c:	490f      	ldr	r1, [pc, #60]	; (801318c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801314e:	6809      	ldr	r1, [r1, #0]
 8013150:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8013154:	b108      	cbz	r0, 801315a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8013156:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8013158:	b900      	cbnz	r0, 801315c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801315a:	6888      	ldr	r0, [r1, #8]
 801315c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8013160:	440b      	add	r3, r1
 8013162:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8013166:	2601      	movs	r6, #1
 8013168:	440a      	add	r2, r1
 801316a:	6801      	ldr	r1, [r0, #0]
 801316c:	9602      	str	r6, [sp, #8]
 801316e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013172:	e9cd 5400 	strd	r5, r4, [sp]
 8013176:	b21b      	sxth	r3, r3
 8013178:	688c      	ldr	r4, [r1, #8]
 801317a:	b212      	sxth	r2, r2
 801317c:	a905      	add	r1, sp, #20
 801317e:	47a0      	blx	r4
 8013180:	b00c      	add	sp, #48	; 0x30
 8013182:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013186:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013188:	e7a0      	b.n	80130cc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801318a:	bf00      	nop
 801318c:	20012da4 	.word	0x20012da4

08013190 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013190:	b510      	push	{r4, lr}
 8013192:	2101      	movs	r1, #1
 8013194:	2200      	movs	r2, #0
 8013196:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801319a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801319e:	4c0e      	ldr	r4, [pc, #56]	; (80131d8 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80131a0:	8082      	strh	r2, [r0, #4]
 80131a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80131a6:	80c2      	strh	r2, [r0, #6]
 80131a8:	8102      	strh	r2, [r0, #8]
 80131aa:	8142      	strh	r2, [r0, #10]
 80131ac:	8182      	strh	r2, [r0, #12]
 80131ae:	81c2      	strh	r2, [r0, #14]
 80131b0:	8202      	strh	r2, [r0, #16]
 80131b2:	8242      	strh	r2, [r0, #18]
 80131b4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80131b8:	61c2      	str	r2, [r0, #28]
 80131ba:	8402      	strh	r2, [r0, #32]
 80131bc:	8442      	strh	r2, [r0, #34]	; 0x22
 80131be:	6282      	str	r2, [r0, #40]	; 0x28
 80131c0:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80131c4:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80131c6:	8601      	strh	r1, [r0, #48]	; 0x30
 80131c8:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80131cc:	6004      	str	r4, [r0, #0]
 80131ce:	8681      	strh	r1, [r0, #52]	; 0x34
 80131d0:	86c1      	strh	r1, [r0, #54]	; 0x36
 80131d2:	8702      	strh	r2, [r0, #56]	; 0x38
 80131d4:	8742      	strh	r2, [r0, #58]	; 0x3a
 80131d6:	bd10      	pop	{r4, pc}
 80131d8:	0802f150 	.word	0x0802f150

080131dc <_ZN8touchgfx5ImageD1Ev>:
 80131dc:	4770      	bx	lr

080131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80131de:	b570      	push	{r4, r5, r6, lr}
 80131e0:	880b      	ldrh	r3, [r1, #0]
 80131e2:	84c3      	strh	r3, [r0, #38]	; 0x26
 80131e4:	4604      	mov	r4, r0
 80131e6:	4608      	mov	r0, r1
 80131e8:	460d      	mov	r5, r1
 80131ea:	f006 f913 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80131ee:	4606      	mov	r6, r0
 80131f0:	4628      	mov	r0, r5
 80131f2:	f006 f943 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80131f6:	6823      	ldr	r3, [r4, #0]
 80131f8:	4605      	mov	r5, r0
 80131fa:	4631      	mov	r1, r6
 80131fc:	4620      	mov	r0, r4
 80131fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013200:	4798      	blx	r3
 8013202:	6823      	ldr	r3, [r4, #0]
 8013204:	4629      	mov	r1, r5
 8013206:	4620      	mov	r0, r4
 8013208:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801320a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801320e:	4718      	bx	r3

08013210 <_ZN8touchgfx5ImageD0Ev>:
 8013210:	b510      	push	{r4, lr}
 8013212:	212c      	movs	r1, #44	; 0x2c
 8013214:	4604      	mov	r4, r0
 8013216:	f016 fd62 	bl	8029cde <_ZdlPvj>
 801321a:	4620      	mov	r0, r4
 801321c:	bd10      	pop	{r4, pc}

0801321e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801321e:	b510      	push	{r4, lr}
 8013220:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013224:	2bff      	cmp	r3, #255	; 0xff
 8013226:	4604      	mov	r4, r0
 8013228:	d006      	beq.n	8013238 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801322a:	2300      	movs	r3, #0
 801322c:	8003      	strh	r3, [r0, #0]
 801322e:	8043      	strh	r3, [r0, #2]
 8013230:	8083      	strh	r3, [r0, #4]
 8013232:	80c3      	strh	r3, [r0, #6]
 8013234:	4620      	mov	r0, r4
 8013236:	bd10      	pop	{r4, pc}
 8013238:	3126      	adds	r1, #38	; 0x26
 801323a:	f006 f953 	bl	80194e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801323e:	e7f9      	b.n	8013234 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013240 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013240:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8013244:	b12a      	cbz	r2, 8013252 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013246:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801324a:	b112      	cbz	r2, 8013252 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801324c:	6803      	ldr	r3, [r0, #0]
 801324e:	695b      	ldr	r3, [r3, #20]
 8013250:	4718      	bx	r3
 8013252:	4770      	bx	lr

08013254 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013258:	4604      	mov	r4, r0
 801325a:	b088      	sub	sp, #32
 801325c:	f854 3b26 	ldr.w	r3, [r4], #38
 8013260:	2500      	movs	r5, #0
 8013262:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013264:	460f      	mov	r7, r1
 8013266:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801326a:	a904      	add	r1, sp, #16
 801326c:	4606      	mov	r6, r0
 801326e:	4798      	blx	r3
 8013270:	4620      	mov	r0, r4
 8013272:	f006 f8cf 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013276:	4680      	mov	r8, r0
 8013278:	4620      	mov	r0, r4
 801327a:	f006 f8ff 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801327e:	9506      	str	r5, [sp, #24]
 8013280:	ad06      	add	r5, sp, #24
 8013282:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013286:	4639      	mov	r1, r7
 8013288:	4628      	mov	r0, r5
 801328a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801328e:	f7fd fb9d 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8013292:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013296:	2b00      	cmp	r3, #0
 8013298:	dd19      	ble.n	80132ce <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801329a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801329e:	2b00      	cmp	r3, #0
 80132a0:	dd15      	ble.n	80132ce <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80132a2:	4b0c      	ldr	r3, [pc, #48]	; (80132d4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80132a4:	681b      	ldr	r3, [r3, #0]
 80132a6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80132aa:	b10a      	cbz	r2, 80132b0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80132ac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80132ae:	b900      	cbnz	r0, 80132b2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80132b0:	6898      	ldr	r0, [r3, #8]
 80132b2:	6801      	ldr	r1, [r0, #0]
 80132b4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80132b8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80132bc:	2701      	movs	r7, #1
 80132be:	9702      	str	r7, [sp, #8]
 80132c0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80132c4:	e9cd 5600 	strd	r5, r6, [sp]
 80132c8:	688d      	ldr	r5, [r1, #8]
 80132ca:	4621      	mov	r1, r4
 80132cc:	47a8      	blx	r5
 80132ce:	b008      	add	sp, #32
 80132d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80132d4:	20012da4 	.word	0x20012da4

080132d8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80132d8:	4770      	bx	lr

080132da <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80132da:	b510      	push	{r4, lr}
 80132dc:	2148      	movs	r1, #72	; 0x48
 80132de:	4604      	mov	r4, r0
 80132e0:	f016 fcfd 	bl	8029cde <_ZdlPvj>
 80132e4:	4620      	mov	r0, r4
 80132e6:	bd10      	pop	{r4, pc}

080132e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80132e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80132ec:	b08d      	sub	sp, #52	; 0x34
 80132ee:	4604      	mov	r4, r0
 80132f0:	460f      	mov	r7, r1
 80132f2:	f7ff fdc1 	bl	8012e78 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80132f6:	4a55      	ldr	r2, [pc, #340]	; (801344c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80132f8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80132fa:	8812      	ldrh	r2, [r2, #0]
 80132fc:	429a      	cmp	r2, r3
 80132fe:	f240 8082 	bls.w	8013406 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013302:	4d53      	ldr	r5, [pc, #332]	; (8013450 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013304:	682a      	ldr	r2, [r5, #0]
 8013306:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801330a:	4b52      	ldr	r3, [pc, #328]	; (8013454 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801330c:	681b      	ldr	r3, [r3, #0]
 801330e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013312:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8013316:	2200      	movs	r2, #0
 8013318:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801331c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013320:	2a03      	cmp	r2, #3
 8013322:	d811      	bhi.n	8013348 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013324:	e8df f002 	tbb	[pc, r2]
 8013328:	89727902 	.word	0x89727902
 801332c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013330:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013334:	1ad2      	subs	r2, r2, r3
 8013336:	2002      	movs	r0, #2
 8013338:	f8ad 1010 	strh.w	r1, [sp, #16]
 801333c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013340:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013344:	f8ad 200e 	strh.w	r2, [sp, #14]
 8013348:	f10d 080c 	add.w	r8, sp, #12
 801334c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013350:	f10d 0914 	add.w	r9, sp, #20
 8013354:	e889 0003 	stmia.w	r9, {r0, r1}
 8013358:	4639      	mov	r1, r7
 801335a:	4648      	mov	r0, r9
 801335c:	f7fd fb36 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8013360:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013364:	2b00      	cmp	r3, #0
 8013366:	dd4e      	ble.n	8013406 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013368:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801336c:	2b00      	cmp	r3, #0
 801336e:	dd4a      	ble.n	8013406 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013370:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013374:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013378:	1a9b      	subs	r3, r3, r2
 801337a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801337e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013382:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013386:	1a9b      	subs	r3, r3, r2
 8013388:	f8ad 3016 	strh.w	r3, [sp, #22]
 801338c:	6823      	ldr	r3, [r4, #0]
 801338e:	4641      	mov	r1, r8
 8013390:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013392:	4620      	mov	r0, r4
 8013394:	4798      	blx	r3
 8013396:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801339a:	2b00      	cmp	r3, #0
 801339c:	d053      	beq.n	8013446 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801339e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80133a0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80133a2:	682b      	ldr	r3, [r5, #0]
 80133a4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80133a8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80133ac:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80133b0:	785b      	ldrb	r3, [r3, #1]
 80133b2:	9209      	str	r2, [sp, #36]	; 0x24
 80133b4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80133b8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80133bc:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80133c0:	2300      	movs	r3, #0
 80133c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80133c6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80133ca:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80133ce:	4b22      	ldr	r3, [pc, #136]	; (8013458 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80133d0:	9607      	str	r6, [sp, #28]
 80133d2:	681b      	ldr	r3, [r3, #0]
 80133d4:	f88d 5020 	strb.w	r5, [sp, #32]
 80133d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80133dc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80133e0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80133e4:	b10a      	cbz	r2, 80133ea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80133e6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80133e8:	b904      	cbnz	r4, 80133ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80133ea:	689c      	ldr	r4, [r3, #8]
 80133ec:	4b1b      	ldr	r3, [pc, #108]	; (801345c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80133ee:	6818      	ldr	r0, [r3, #0]
 80133f0:	f7f5 fe10 	bl	8009014 <_ZNK8touchgfx5Texts7getTextEt>
 80133f4:	ab07      	add	r3, sp, #28
 80133f6:	9001      	str	r0, [sp, #4]
 80133f8:	9300      	str	r3, [sp, #0]
 80133fa:	e898 0006 	ldmia.w	r8, {r1, r2}
 80133fe:	464b      	mov	r3, r9
 8013400:	4620      	mov	r0, r4
 8013402:	f7f5 fdb9 	bl	8008f78 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013406:	b00d      	add	sp, #52	; 0x34
 8013408:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801340c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013410:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013414:	1ad2      	subs	r2, r2, r3
 8013416:	3201      	adds	r2, #1
 8013418:	e78d      	b.n	8013336 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801341a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801341e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013422:	1ad2      	subs	r2, r2, r3
 8013424:	3201      	adds	r2, #1
 8013426:	2002      	movs	r0, #2
 8013428:	f8ad 3010 	strh.w	r3, [sp, #16]
 801342c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013430:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013434:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013438:	e786      	b.n	8013348 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801343a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801343e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013442:	1ad2      	subs	r2, r2, r3
 8013444:	e7ef      	b.n	8013426 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8013446:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013448:	e7aa      	b.n	80133a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801344a:	bf00      	nop
 801344c:	20012e00 	.word	0x20012e00
 8013450:	20012dfc 	.word	0x20012dfc
 8013454:	20012e04 	.word	0x20012e04
 8013458:	20012da4 	.word	0x20012da4
 801345c:	20012e08 	.word	0x20012e08

08013460 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013460:	b510      	push	{r4, lr}
 8013462:	2101      	movs	r1, #1
 8013464:	4c13      	ldr	r4, [pc, #76]	; (80134b4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013466:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801346a:	2200      	movs	r2, #0
 801346c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013470:	6004      	str	r4, [r0, #0]
 8013472:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013476:	4c10      	ldr	r4, [pc, #64]	; (80134b8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013478:	8082      	strh	r2, [r0, #4]
 801347a:	80c2      	strh	r2, [r0, #6]
 801347c:	8102      	strh	r2, [r0, #8]
 801347e:	8142      	strh	r2, [r0, #10]
 8013480:	8182      	strh	r2, [r0, #12]
 8013482:	81c2      	strh	r2, [r0, #14]
 8013484:	8202      	strh	r2, [r0, #16]
 8013486:	8242      	strh	r2, [r0, #18]
 8013488:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801348c:	61c2      	str	r2, [r0, #28]
 801348e:	8402      	strh	r2, [r0, #32]
 8013490:	8442      	strh	r2, [r0, #34]	; 0x22
 8013492:	6282      	str	r2, [r0, #40]	; 0x28
 8013494:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013498:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801349a:	8601      	strh	r1, [r0, #48]	; 0x30
 801349c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80134a0:	6344      	str	r4, [r0, #52]	; 0x34
 80134a2:	8701      	strh	r1, [r0, #56]	; 0x38
 80134a4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80134a8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80134ac:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80134b0:	bd10      	pop	{r4, pc}
 80134b2:	bf00      	nop
 80134b4:	0802f234 	.word	0x0802f234
 80134b8:	0802c6a0 	.word	0x0802c6a0

080134bc <_ZN8touchgfx7OutlineD1Ev>:
 80134bc:	4770      	bx	lr

080134be <_ZN8touchgfx7OutlineD0Ev>:
 80134be:	b510      	push	{r4, lr}
 80134c0:	2130      	movs	r1, #48	; 0x30
 80134c2:	4604      	mov	r4, r0
 80134c4:	f016 fc0b 	bl	8029cde <_ZdlPvj>
 80134c8:	4620      	mov	r0, r4
 80134ca:	bd10      	pop	{r4, pc}

080134cc <_ZN8touchgfx7Outline5resetEv>:
 80134cc:	b510      	push	{r4, lr}
 80134ce:	4604      	mov	r4, r0
 80134d0:	f000 fe96 	bl	8014200 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80134d4:	60e0      	str	r0, [r4, #12]
 80134d6:	f000 fe99 	bl	801420c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80134da:	68e3      	ldr	r3, [r4, #12]
 80134dc:	6123      	str	r3, [r4, #16]
 80134de:	08c0      	lsrs	r0, r0, #3
 80134e0:	2200      	movs	r2, #0
 80134e2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80134e6:	3801      	subs	r0, #1
 80134e8:	6060      	str	r0, [r4, #4]
 80134ea:	60a2      	str	r2, [r4, #8]
 80134ec:	8019      	strh	r1, [r3, #0]
 80134ee:	8059      	strh	r1, [r3, #2]
 80134f0:	809a      	strh	r2, [r3, #4]
 80134f2:	80da      	strh	r2, [r3, #6]
 80134f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80134f6:	f023 0301 	bic.w	r3, r3, #1
 80134fa:	f043 0302 	orr.w	r3, r3, #2
 80134fe:	6263      	str	r3, [r4, #36]	; 0x24
 8013500:	bd10      	pop	{r4, pc}
	...

08013504 <_ZN8touchgfx7OutlineC1Ev>:
 8013504:	b510      	push	{r4, lr}
 8013506:	4b0a      	ldr	r3, [pc, #40]	; (8013530 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013508:	6003      	str	r3, [r0, #0]
 801350a:	2300      	movs	r3, #0
 801350c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8013510:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8013514:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013518:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801351c:	6243      	str	r3, [r0, #36]	; 0x24
 801351e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8013522:	4604      	mov	r4, r0
 8013524:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8013528:	f7ff ffd0 	bl	80134cc <_ZN8touchgfx7Outline5resetEv>
 801352c:	4620      	mov	r0, r4
 801352e:	bd10      	pop	{r4, pc}
 8013530:	0802f2a8 	.word	0x0802f2a8

08013534 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8013534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013538:	b093      	sub	sp, #76	; 0x4c
 801353a:	1156      	asrs	r6, r2, #5
 801353c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801353e:	9305      	str	r3, [sp, #20]
 8013540:	f004 051f 	and.w	r5, r4, #31
 8013544:	1153      	asrs	r3, r2, #5
 8013546:	9504      	str	r5, [sp, #16]
 8013548:	1165      	asrs	r5, r4, #5
 801354a:	9303      	str	r3, [sp, #12]
 801354c:	42ae      	cmp	r6, r5
 801354e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8013552:	9306      	str	r3, [sp, #24]
 8013554:	f002 031f 	and.w	r3, r2, #31
 8013558:	f040 80f8 	bne.w	801374c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801355c:	9c04      	ldr	r4, [sp, #16]
 801355e:	9a05      	ldr	r2, [sp, #20]
 8013560:	42a3      	cmp	r3, r4
 8013562:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8013566:	6902      	ldr	r2, [r0, #16]
 8013568:	d125      	bne.n	80135b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801356a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801356e:	459e      	cmp	lr, r3
 8013570:	d103      	bne.n	801357a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8013572:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013576:	429e      	cmp	r6, r3
 8013578:	d035      	beq.n	80135e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801357a:	88d1      	ldrh	r1, [r2, #6]
 801357c:	8893      	ldrh	r3, [r2, #4]
 801357e:	430b      	orrs	r3, r1
 8013580:	d010      	beq.n	80135a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013582:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013586:	2b00      	cmp	r3, #0
 8013588:	db0c      	blt.n	80135a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801358a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801358c:	428b      	cmp	r3, r1
 801358e:	da09      	bge.n	80135a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013590:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013594:	428b      	cmp	r3, r1
 8013596:	bf38      	it	cc
 8013598:	3208      	addcc	r2, #8
 801359a:	f103 0301 	add.w	r3, r3, #1
 801359e:	bf38      	it	cc
 80135a0:	6102      	strcc	r2, [r0, #16]
 80135a2:	6083      	str	r3, [r0, #8]
 80135a4:	6903      	ldr	r3, [r0, #16]
 80135a6:	9a03      	ldr	r2, [sp, #12]
 80135a8:	f8a3 e000 	strh.w	lr, [r3]
 80135ac:	805a      	strh	r2, [r3, #2]
 80135ae:	2200      	movs	r2, #0
 80135b0:	809a      	strh	r2, [r3, #4]
 80135b2:	80da      	strh	r2, [r3, #6]
 80135b4:	e017      	b.n	80135e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80135b6:	9c05      	ldr	r4, [sp, #20]
 80135b8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80135bc:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80135c0:	f004 041f 	and.w	r4, r4, #31
 80135c4:	114e      	asrs	r6, r1, #5
 80135c6:	9402      	str	r4, [sp, #8]
 80135c8:	9c04      	ldr	r4, [sp, #16]
 80135ca:	4576      	cmp	r6, lr
 80135cc:	f001 0c1f 	and.w	ip, r1, #31
 80135d0:	eba4 0403 	sub.w	r4, r4, r3
 80135d4:	d10a      	bne.n	80135ec <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80135d6:	9b02      	ldr	r3, [sp, #8]
 80135d8:	449c      	add	ip, r3
 80135da:	44a0      	add	r8, r4
 80135dc:	fb04 a40c 	mla	r4, r4, ip, sl
 80135e0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80135e4:	80d4      	strh	r4, [r2, #6]
 80135e6:	b013      	add	sp, #76	; 0x4c
 80135e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135ec:	9d05      	ldr	r5, [sp, #20]
 80135ee:	1a69      	subs	r1, r5, r1
 80135f0:	bf5b      	ittet	pl
 80135f2:	f1cc 0520 	rsbpl	r5, ip, #32
 80135f6:	436c      	mulpl	r4, r5
 80135f8:	2500      	movmi	r5, #0
 80135fa:	2520      	movpl	r5, #32
 80135fc:	bf44      	itt	mi
 80135fe:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013602:	4249      	negmi	r1, r1
 8013604:	9501      	str	r5, [sp, #4]
 8013606:	9f01      	ldr	r7, [sp, #4]
 8013608:	fb94 f5f1 	sdiv	r5, r4, r1
 801360c:	fb01 4415 	mls	r4, r1, r5, r4
 8013610:	bf54      	ite	pl
 8013612:	f04f 0901 	movpl.w	r9, #1
 8013616:	f04f 39ff 	movmi.w	r9, #4294967295
 801361a:	2c00      	cmp	r4, #0
 801361c:	bfb8      	it	lt
 801361e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013622:	44bc      	add	ip, r7
 8013624:	44a8      	add	r8, r5
 8013626:	fb05 ac0c 	mla	ip, r5, ip, sl
 801362a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801362e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013632:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013636:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801363a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801363e:	bfb8      	it	lt
 8013640:	1864      	addlt	r4, r4, r1
 8013642:	ea58 0202 	orrs.w	r2, r8, r2
 8013646:	444e      	add	r6, r9
 8013648:	d011      	beq.n	801366e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801364a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801364e:	f1b8 0f00 	cmp.w	r8, #0
 8013652:	db0c      	blt.n	801366e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013654:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013656:	4590      	cmp	r8, r2
 8013658:	da09      	bge.n	801366e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801365a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801365e:	4590      	cmp	r8, r2
 8013660:	bf3c      	itt	cc
 8013662:	f10c 0208 	addcc.w	r2, ip, #8
 8013666:	6102      	strcc	r2, [r0, #16]
 8013668:	f108 0201 	add.w	r2, r8, #1
 801366c:	6082      	str	r2, [r0, #8]
 801366e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013672:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013676:	f8ac 6000 	strh.w	r6, [ip]
 801367a:	2700      	movs	r7, #0
 801367c:	45b6      	cmp	lr, r6
 801367e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8013682:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013686:	f8ac 7006 	strh.w	r7, [ip, #6]
 801368a:	442b      	add	r3, r5
 801368c:	d04d      	beq.n	801372a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801368e:	9f04      	ldr	r7, [sp, #16]
 8013690:	1aff      	subs	r7, r7, r3
 8013692:	443d      	add	r5, r7
 8013694:	016d      	lsls	r5, r5, #5
 8013696:	fb95 f8f1 	sdiv	r8, r5, r1
 801369a:	fb01 5518 	mls	r5, r1, r8, r5
 801369e:	2d00      	cmp	r5, #0
 80136a0:	bfb8      	it	lt
 80136a2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80136a6:	f108 0701 	add.w	r7, r8, #1
 80136aa:	bfb8      	it	lt
 80136ac:	186d      	addlt	r5, r5, r1
 80136ae:	1a64      	subs	r4, r4, r1
 80136b0:	9703      	str	r7, [sp, #12]
 80136b2:	f04f 0a00 	mov.w	sl, #0
 80136b6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80136ba:	1964      	adds	r4, r4, r5
 80136bc:	bf58      	it	pl
 80136be:	9f03      	ldrpl	r7, [sp, #12]
 80136c0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80136c4:	bf48      	it	mi
 80136c6:	4647      	movmi	r7, r8
 80136c8:	44bb      	add	fp, r7
 80136ca:	f8ac b004 	strh.w	fp, [ip, #4]
 80136ce:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80136d2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80136d6:	f8ac b006 	strh.w	fp, [ip, #6]
 80136da:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80136de:	443b      	add	r3, r7
 80136e0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80136e4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80136e8:	bf58      	it	pl
 80136ea:	1a64      	subpl	r4, r4, r1
 80136ec:	ea5b 0707 	orrs.w	r7, fp, r7
 80136f0:	444e      	add	r6, r9
 80136f2:	d011      	beq.n	8013718 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80136f4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80136f8:	f1bb 0f00 	cmp.w	fp, #0
 80136fc:	db0c      	blt.n	8013718 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80136fe:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013700:	45bb      	cmp	fp, r7
 8013702:	da09      	bge.n	8013718 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013704:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013708:	45bb      	cmp	fp, r7
 801370a:	bf3c      	itt	cc
 801370c:	f10c 0708 	addcc.w	r7, ip, #8
 8013710:	6107      	strcc	r7, [r0, #16]
 8013712:	f10b 0701 	add.w	r7, fp, #1
 8013716:	6087      	str	r7, [r0, #8]
 8013718:	6907      	ldr	r7, [r0, #16]
 801371a:	45b6      	cmp	lr, r6
 801371c:	803e      	strh	r6, [r7, #0]
 801371e:	807a      	strh	r2, [r7, #2]
 8013720:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013724:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013728:	d1c5      	bne.n	80136b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801372a:	9a04      	ldr	r2, [sp, #16]
 801372c:	1ad3      	subs	r3, r2, r3
 801372e:	6902      	ldr	r2, [r0, #16]
 8013730:	8891      	ldrh	r1, [r2, #4]
 8013732:	88d6      	ldrh	r6, [r2, #6]
 8013734:	4419      	add	r1, r3
 8013736:	8091      	strh	r1, [r2, #4]
 8013738:	9902      	ldr	r1, [sp, #8]
 801373a:	f101 0c20 	add.w	ip, r1, #32
 801373e:	9901      	ldr	r1, [sp, #4]
 8013740:	ebac 0c01 	sub.w	ip, ip, r1
 8013744:	fb03 630c 	mla	r3, r3, ip, r6
 8013748:	80d3      	strh	r3, [r2, #6]
 801374a:	e74c      	b.n	80135e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801374c:	9d05      	ldr	r5, [sp, #20]
 801374e:	1aa2      	subs	r2, r4, r2
 8013750:	eba5 0501 	sub.w	r5, r5, r1
 8013754:	9508      	str	r5, [sp, #32]
 8013756:	9202      	str	r2, [sp, #8]
 8013758:	f140 8128 	bpl.w	80139ac <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801375c:	9a03      	ldr	r2, [sp, #12]
 801375e:	2a00      	cmp	r2, #0
 8013760:	f6ff af41 	blt.w	80135e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013764:	9a02      	ldr	r2, [sp, #8]
 8013766:	4252      	negs	r2, r2
 8013768:	9202      	str	r2, [sp, #8]
 801376a:	9a06      	ldr	r2, [sp, #24]
 801376c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013770:	f04f 34ff 	mov.w	r4, #4294967295
 8013774:	9206      	str	r2, [sp, #24]
 8013776:	462a      	mov	r2, r5
 8013778:	940b      	str	r4, [sp, #44]	; 0x2c
 801377a:	435a      	muls	r2, r3
 801377c:	2400      	movs	r4, #0
 801377e:	9d02      	ldr	r5, [sp, #8]
 8013780:	9401      	str	r4, [sp, #4]
 8013782:	9c02      	ldr	r4, [sp, #8]
 8013784:	fb92 f4f4 	sdiv	r4, r2, r4
 8013788:	fb05 2214 	mls	r2, r5, r4, r2
 801378c:	2a00      	cmp	r2, #0
 801378e:	9207      	str	r2, [sp, #28]
 8013790:	bfbc      	itt	lt
 8013792:	1952      	addlt	r2, r2, r5
 8013794:	9207      	strlt	r2, [sp, #28]
 8013796:	9a01      	ldr	r2, [sp, #4]
 8013798:	6905      	ldr	r5, [r0, #16]
 801379a:	bfb8      	it	lt
 801379c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80137a0:	eb04 0901 	add.w	r9, r4, r1
 80137a4:	429a      	cmp	r2, r3
 80137a6:	ea4f 1669 	mov.w	r6, r9, asr #5
 80137aa:	f040 8112 	bne.w	80139d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80137ae:	f9b5 3000 	ldrsh.w	r3, [r5]
 80137b2:	429e      	cmp	r6, r3
 80137b4:	d104      	bne.n	80137c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80137b6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80137ba:	9a03      	ldr	r2, [sp, #12]
 80137bc:	429a      	cmp	r2, r3
 80137be:	d01b      	beq.n	80137f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80137c0:	88ea      	ldrh	r2, [r5, #6]
 80137c2:	88ab      	ldrh	r3, [r5, #4]
 80137c4:	4313      	orrs	r3, r2
 80137c6:	d010      	beq.n	80137ea <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80137c8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80137cc:	2a00      	cmp	r2, #0
 80137ce:	db0c      	blt.n	80137ea <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80137d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80137d2:	429a      	cmp	r2, r3
 80137d4:	da09      	bge.n	80137ea <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80137d6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80137da:	429a      	cmp	r2, r3
 80137dc:	bf38      	it	cc
 80137de:	3508      	addcc	r5, #8
 80137e0:	f102 0201 	add.w	r2, r2, #1
 80137e4:	bf38      	it	cc
 80137e6:	6105      	strcc	r5, [r0, #16]
 80137e8:	6082      	str	r2, [r0, #8]
 80137ea:	6903      	ldr	r3, [r0, #16]
 80137ec:	9a03      	ldr	r2, [sp, #12]
 80137ee:	805a      	strh	r2, [r3, #2]
 80137f0:	2200      	movs	r2, #0
 80137f2:	801e      	strh	r6, [r3, #0]
 80137f4:	809a      	strh	r2, [r3, #4]
 80137f6:	80da      	strh	r2, [r3, #6]
 80137f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80137fa:	9a03      	ldr	r2, [sp, #12]
 80137fc:	6901      	ldr	r1, [r0, #16]
 80137fe:	441a      	add	r2, r3
 8013800:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013804:	42b3      	cmp	r3, r6
 8013806:	d103      	bne.n	8013810 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8013808:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801380c:	429a      	cmp	r2, r3
 801380e:	d01a      	beq.n	8013846 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8013810:	88cc      	ldrh	r4, [r1, #6]
 8013812:	888b      	ldrh	r3, [r1, #4]
 8013814:	4323      	orrs	r3, r4
 8013816:	d010      	beq.n	801383a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013818:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801381c:	2c00      	cmp	r4, #0
 801381e:	db0c      	blt.n	801383a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013820:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013822:	429c      	cmp	r4, r3
 8013824:	da09      	bge.n	801383a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013826:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801382a:	429c      	cmp	r4, r3
 801382c:	bf38      	it	cc
 801382e:	3108      	addcc	r1, #8
 8013830:	f104 0401 	add.w	r4, r4, #1
 8013834:	bf38      	it	cc
 8013836:	6101      	strcc	r1, [r0, #16]
 8013838:	6084      	str	r4, [r0, #8]
 801383a:	6903      	ldr	r3, [r0, #16]
 801383c:	2100      	movs	r1, #0
 801383e:	801e      	strh	r6, [r3, #0]
 8013840:	805a      	strh	r2, [r3, #2]
 8013842:	8099      	strh	r1, [r3, #4]
 8013844:	80d9      	strh	r1, [r3, #6]
 8013846:	9b06      	ldr	r3, [sp, #24]
 8013848:	4293      	cmp	r3, r2
 801384a:	f000 8082 	beq.w	8013952 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801384e:	9b08      	ldr	r3, [sp, #32]
 8013850:	9c02      	ldr	r4, [sp, #8]
 8013852:	9902      	ldr	r1, [sp, #8]
 8013854:	015b      	lsls	r3, r3, #5
 8013856:	fb93 f1f1 	sdiv	r1, r3, r1
 801385a:	fb04 3311 	mls	r3, r4, r1, r3
 801385e:	2b00      	cmp	r3, #0
 8013860:	9103      	str	r1, [sp, #12]
 8013862:	9308      	str	r3, [sp, #32]
 8013864:	da04      	bge.n	8013870 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8013866:	1e4b      	subs	r3, r1, #1
 8013868:	9303      	str	r3, [sp, #12]
 801386a:	9b08      	ldr	r3, [sp, #32]
 801386c:	4423      	add	r3, r4
 801386e:	9308      	str	r3, [sp, #32]
 8013870:	9b07      	ldr	r3, [sp, #28]
 8013872:	9902      	ldr	r1, [sp, #8]
 8013874:	1a5b      	subs	r3, r3, r1
 8013876:	9307      	str	r3, [sp, #28]
 8013878:	9b01      	ldr	r3, [sp, #4]
 801387a:	f1c3 0320 	rsb	r3, r3, #32
 801387e:	930e      	str	r3, [sp, #56]	; 0x38
 8013880:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013882:	9b01      	ldr	r3, [sp, #4]
 8013884:	1a5b      	subs	r3, r3, r1
 8013886:	464f      	mov	r7, r9
 8013888:	930a      	str	r3, [sp, #40]	; 0x28
 801388a:	2600      	movs	r6, #0
 801388c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8013890:	185b      	adds	r3, r3, r1
 8013892:	bf58      	it	pl
 8013894:	9902      	ldrpl	r1, [sp, #8]
 8013896:	9307      	str	r3, [sp, #28]
 8013898:	bf5d      	ittte	pl
 801389a:	1a5b      	subpl	r3, r3, r1
 801389c:	9307      	strpl	r3, [sp, #28]
 801389e:	9b03      	ldrpl	r3, [sp, #12]
 80138a0:	9903      	ldrmi	r1, [sp, #12]
 80138a2:	bf58      	it	pl
 80138a4:	1c59      	addpl	r1, r3, #1
 80138a6:	4489      	add	r9, r1
 80138a8:	2a00      	cmp	r2, #0
 80138aa:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80138ae:	db2e      	blt.n	801390e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80138b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80138b2:	4293      	cmp	r3, r2
 80138b4:	dd2b      	ble.n	801390e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80138b6:	9c01      	ldr	r4, [sp, #4]
 80138b8:	6905      	ldr	r5, [r0, #16]
 80138ba:	46a0      	mov	r8, r4
 80138bc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80138be:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80138c2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80138c6:	45a0      	cmp	r8, r4
 80138c8:	f040 814f 	bne.w	8013b6a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80138cc:	f9b5 1000 	ldrsh.w	r1, [r5]
 80138d0:	4551      	cmp	r1, sl
 80138d2:	d103      	bne.n	80138dc <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80138d4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80138d8:	4291      	cmp	r1, r2
 80138da:	d018      	beq.n	801390e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80138dc:	ea5c 010e 	orrs.w	r1, ip, lr
 80138e0:	d00f      	beq.n	8013902 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80138e2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80138e6:	2900      	cmp	r1, #0
 80138e8:	db0b      	blt.n	8013902 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80138ea:	428b      	cmp	r3, r1
 80138ec:	dd09      	ble.n	8013902 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80138ee:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80138f2:	4299      	cmp	r1, r3
 80138f4:	bf38      	it	cc
 80138f6:	3508      	addcc	r5, #8
 80138f8:	f101 0101 	add.w	r1, r1, #1
 80138fc:	bf38      	it	cc
 80138fe:	6105      	strcc	r5, [r0, #16]
 8013900:	6081      	str	r1, [r0, #8]
 8013902:	6903      	ldr	r3, [r0, #16]
 8013904:	f8a3 a000 	strh.w	sl, [r3]
 8013908:	805a      	strh	r2, [r3, #2]
 801390a:	809e      	strh	r6, [r3, #4]
 801390c:	80de      	strh	r6, [r3, #6]
 801390e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013910:	6901      	ldr	r1, [r0, #16]
 8013912:	441a      	add	r2, r3
 8013914:	88cc      	ldrh	r4, [r1, #6]
 8013916:	888b      	ldrh	r3, [r1, #4]
 8013918:	4323      	orrs	r3, r4
 801391a:	d010      	beq.n	801393e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801391c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013920:	2c00      	cmp	r4, #0
 8013922:	db0c      	blt.n	801393e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013924:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013926:	429c      	cmp	r4, r3
 8013928:	da09      	bge.n	801393e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801392a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801392e:	429c      	cmp	r4, r3
 8013930:	bf38      	it	cc
 8013932:	3108      	addcc	r1, #8
 8013934:	f104 0401 	add.w	r4, r4, #1
 8013938:	bf38      	it	cc
 801393a:	6101      	strcc	r1, [r0, #16]
 801393c:	6084      	str	r4, [r0, #8]
 801393e:	6903      	ldr	r3, [r0, #16]
 8013940:	f8a3 a000 	strh.w	sl, [r3]
 8013944:	805a      	strh	r2, [r3, #2]
 8013946:	809e      	strh	r6, [r3, #4]
 8013948:	80de      	strh	r6, [r3, #6]
 801394a:	9b06      	ldr	r3, [sp, #24]
 801394c:	4293      	cmp	r3, r2
 801394e:	464f      	mov	r7, r9
 8013950:	d19c      	bne.n	801388c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8013952:	9b01      	ldr	r3, [sp, #4]
 8013954:	6907      	ldr	r7, [r0, #16]
 8013956:	f1c3 0620 	rsb	r6, r3, #32
 801395a:	9b05      	ldr	r3, [sp, #20]
 801395c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8013960:	9b04      	ldr	r3, [sp, #16]
 8013962:	429e      	cmp	r6, r3
 8013964:	f040 81cc 	bne.w	8013d00 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8013968:	f9b7 3000 	ldrsh.w	r3, [r7]
 801396c:	459e      	cmp	lr, r3
 801396e:	d104      	bne.n	801397a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013970:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013974:	429a      	cmp	r2, r3
 8013976:	f43f ae36 	beq.w	80135e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801397a:	88f9      	ldrh	r1, [r7, #6]
 801397c:	88bb      	ldrh	r3, [r7, #4]
 801397e:	430b      	orrs	r3, r1
 8013980:	d010      	beq.n	80139a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013982:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013986:	2b00      	cmp	r3, #0
 8013988:	db0c      	blt.n	80139a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801398a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801398c:	428b      	cmp	r3, r1
 801398e:	da09      	bge.n	80139a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013990:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013994:	428b      	cmp	r3, r1
 8013996:	bf38      	it	cc
 8013998:	3708      	addcc	r7, #8
 801399a:	f103 0301 	add.w	r3, r3, #1
 801399e:	bf38      	it	cc
 80139a0:	6107      	strcc	r7, [r0, #16]
 80139a2:	6083      	str	r3, [r0, #8]
 80139a4:	6903      	ldr	r3, [r0, #16]
 80139a6:	f8a3 e000 	strh.w	lr, [r3]
 80139aa:	e5ff      	b.n	80135ac <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 80139ac:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80139ae:	9c03      	ldr	r4, [sp, #12]
 80139b0:	42a2      	cmp	r2, r4
 80139b2:	f6ff ae18 	blt.w	80135e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80139b6:	9c06      	ldr	r4, [sp, #24]
 80139b8:	42a2      	cmp	r2, r4
 80139ba:	bfb8      	it	lt
 80139bc:	3201      	addlt	r2, #1
 80139be:	9c08      	ldr	r4, [sp, #32]
 80139c0:	bfb8      	it	lt
 80139c2:	9206      	strlt	r2, [sp, #24]
 80139c4:	f1c3 0220 	rsb	r2, r3, #32
 80139c8:	4362      	muls	r2, r4
 80139ca:	2401      	movs	r4, #1
 80139cc:	940b      	str	r4, [sp, #44]	; 0x2c
 80139ce:	2420      	movs	r4, #32
 80139d0:	e6d5      	b.n	801377e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80139d2:	f009 021f 	and.w	r2, r9, #31
 80139d6:	ea4f 1861 	mov.w	r8, r1, asr #5
 80139da:	920c      	str	r2, [sp, #48]	; 0x30
 80139dc:	9a01      	ldr	r2, [sp, #4]
 80139de:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80139e2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80139e6:	45b0      	cmp	r8, r6
 80139e8:	f001 011f 	and.w	r1, r1, #31
 80139ec:	eba2 0203 	sub.w	r2, r2, r3
 80139f0:	d108      	bne.n	8013a04 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80139f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80139f4:	4419      	add	r1, r3
 80139f6:	4496      	add	lr, r2
 80139f8:	fb02 a101 	mla	r1, r2, r1, sl
 80139fc:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013a00:	80e9      	strh	r1, [r5, #6]
 8013a02:	e6f9      	b.n	80137f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013a04:	2c00      	cmp	r4, #0
 8013a06:	f2c0 80a9 	blt.w	8013b5c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8013a0a:	2701      	movs	r7, #1
 8013a0c:	f1c1 0c20 	rsb	ip, r1, #32
 8013a10:	970a      	str	r7, [sp, #40]	; 0x28
 8013a12:	fb02 f20c 	mul.w	r2, r2, ip
 8013a16:	2720      	movs	r7, #32
 8013a18:	9709      	str	r7, [sp, #36]	; 0x24
 8013a1a:	fb92 fcf4 	sdiv	ip, r2, r4
 8013a1e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013a20:	fb04 221c 	mls	r2, r4, ip, r2
 8013a24:	2a00      	cmp	r2, #0
 8013a26:	bfb8      	it	lt
 8013a28:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8013a2c:	4439      	add	r1, r7
 8013a2e:	fb0c a101 	mla	r1, ip, r1, sl
 8013a32:	80e9      	strh	r1, [r5, #6]
 8013a34:	44e6      	add	lr, ip
 8013a36:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013a38:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013a3c:	eb08 0501 	add.w	r5, r8, r1
 8013a40:	6901      	ldr	r1, [r0, #16]
 8013a42:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013a46:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8013a4a:	bfb8      	it	lt
 8013a4c:	1912      	addlt	r2, r2, r4
 8013a4e:	ea58 070e 	orrs.w	r7, r8, lr
 8013a52:	d010      	beq.n	8013a76 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013a54:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013a58:	f1be 0f00 	cmp.w	lr, #0
 8013a5c:	db0b      	blt.n	8013a76 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013a5e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013a60:	45be      	cmp	lr, r7
 8013a62:	da08      	bge.n	8013a76 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013a64:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013a68:	45be      	cmp	lr, r7
 8013a6a:	bf3c      	itt	cc
 8013a6c:	3108      	addcc	r1, #8
 8013a6e:	6101      	strcc	r1, [r0, #16]
 8013a70:	f10e 0101 	add.w	r1, lr, #1
 8013a74:	6081      	str	r1, [r0, #8]
 8013a76:	6901      	ldr	r1, [r0, #16]
 8013a78:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013a7c:	800d      	strh	r5, [r1, #0]
 8013a7e:	f04f 0e00 	mov.w	lr, #0
 8013a82:	42ae      	cmp	r6, r5
 8013a84:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013a88:	f8a1 e004 	strh.w	lr, [r1, #4]
 8013a8c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013a90:	4463      	add	r3, ip
 8013a92:	d054      	beq.n	8013b3e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013a94:	9901      	ldr	r1, [sp, #4]
 8013a96:	1ac9      	subs	r1, r1, r3
 8013a98:	4461      	add	r1, ip
 8013a9a:	0149      	lsls	r1, r1, #5
 8013a9c:	fb91 fef4 	sdiv	lr, r1, r4
 8013aa0:	fb04 111e 	mls	r1, r4, lr, r1
 8013aa4:	2900      	cmp	r1, #0
 8013aa6:	bfb8      	it	lt
 8013aa8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8013aac:	f10e 0701 	add.w	r7, lr, #1
 8013ab0:	bfb8      	it	lt
 8013ab2:	1909      	addlt	r1, r1, r4
 8013ab4:	1b12      	subs	r2, r2, r4
 8013ab6:	970d      	str	r7, [sp, #52]	; 0x34
 8013ab8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8013abc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013abe:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013ac2:	1852      	adds	r2, r2, r1
 8013ac4:	bf54      	ite	pl
 8013ac6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8013aca:	46f4      	movmi	ip, lr
 8013acc:	44e3      	add	fp, ip
 8013ace:	f8aa b004 	strh.w	fp, [sl, #4]
 8013ad2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013ad6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8013ada:	f8aa b006 	strh.w	fp, [sl, #6]
 8013ade:	4463      	add	r3, ip
 8013ae0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013ae4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013ae8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8013aec:	bf58      	it	pl
 8013aee:	1b12      	subpl	r2, r2, r4
 8013af0:	443d      	add	r5, r7
 8013af2:	ea5b 070a 	orrs.w	r7, fp, sl
 8013af6:	d014      	beq.n	8013b22 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013af8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8013afc:	f1ba 0f00 	cmp.w	sl, #0
 8013b00:	db0f      	blt.n	8013b22 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013b02:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013b04:	45ba      	cmp	sl, r7
 8013b06:	da0c      	bge.n	8013b22 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013b08:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8013b0c:	45ba      	cmp	sl, r7
 8013b0e:	bf38      	it	cc
 8013b10:	f10c 0c08 	addcc.w	ip, ip, #8
 8013b14:	f10a 0a01 	add.w	sl, sl, #1
 8013b18:	bf38      	it	cc
 8013b1a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8013b1e:	f8c0 a008 	str.w	sl, [r0, #8]
 8013b22:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013b26:	f04f 0700 	mov.w	r7, #0
 8013b2a:	42ae      	cmp	r6, r5
 8013b2c:	f8ac 5000 	strh.w	r5, [ip]
 8013b30:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013b34:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013b38:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013b3c:	d1bc      	bne.n	8013ab8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8013b3e:	6904      	ldr	r4, [r0, #16]
 8013b40:	9a01      	ldr	r2, [sp, #4]
 8013b42:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013b44:	1ad3      	subs	r3, r2, r3
 8013b46:	88a2      	ldrh	r2, [r4, #4]
 8013b48:	441a      	add	r2, r3
 8013b4a:	80a2      	strh	r2, [r4, #4]
 8013b4c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013b4e:	3120      	adds	r1, #32
 8013b50:	1a89      	subs	r1, r1, r2
 8013b52:	88e2      	ldrh	r2, [r4, #6]
 8013b54:	fb03 2301 	mla	r3, r3, r1, r2
 8013b58:	80e3      	strh	r3, [r4, #6]
 8013b5a:	e64d      	b.n	80137f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013b5c:	f04f 37ff 	mov.w	r7, #4294967295
 8013b60:	970a      	str	r7, [sp, #40]	; 0x28
 8013b62:	434a      	muls	r2, r1
 8013b64:	4264      	negs	r4, r4
 8013b66:	2700      	movs	r7, #0
 8013b68:	e756      	b.n	8013a18 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8013b6a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8013b6e:	f009 031f 	and.w	r3, r9, #31
 8013b72:	45d0      	cmp	r8, sl
 8013b74:	f007 071f 	and.w	r7, r7, #31
 8013b78:	930f      	str	r3, [sp, #60]	; 0x3c
 8013b7a:	fa1f fc8c 	uxth.w	ip, ip
 8013b7e:	fa1f fe8e 	uxth.w	lr, lr
 8013b82:	d10a      	bne.n	8013b9a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013b84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013b86:	449c      	add	ip, r3
 8013b88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013b8a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013b8e:	441f      	add	r7, r3
 8013b90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013b92:	fb03 e707 	mla	r7, r3, r7, lr
 8013b96:	80ef      	strh	r7, [r5, #6]
 8013b98:	e6b9      	b.n	801390e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013b9a:	2900      	cmp	r1, #0
 8013b9c:	f2c0 80a8 	blt.w	8013cf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013ba0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013ba2:	f1c7 0320 	rsb	r3, r7, #32
 8013ba6:	4363      	muls	r3, r4
 8013ba8:	2401      	movs	r4, #1
 8013baa:	940d      	str	r4, [sp, #52]	; 0x34
 8013bac:	2420      	movs	r4, #32
 8013bae:	940c      	str	r4, [sp, #48]	; 0x30
 8013bb0:	fb93 f4f1 	sdiv	r4, r3, r1
 8013bb4:	fb01 3b14 	mls	fp, r1, r4, r3
 8013bb8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013bba:	f1bb 0f00 	cmp.w	fp, #0
 8013bbe:	bfb8      	it	lt
 8013bc0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013bc4:	441f      	add	r7, r3
 8013bc6:	fb04 e707 	mla	r7, r4, r7, lr
 8013bca:	44a4      	add	ip, r4
 8013bcc:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013bd0:	80ef      	strh	r7, [r5, #6]
 8013bd2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013bd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013bd8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8013bdc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013be0:	bfb8      	it	lt
 8013be2:	448b      	addlt	fp, r1
 8013be4:	eb08 0503 	add.w	r5, r8, r3
 8013be8:	ea5e 0307 	orrs.w	r3, lr, r7
 8013bec:	d011      	beq.n	8013c12 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013bee:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013bf2:	f1be 0f00 	cmp.w	lr, #0
 8013bf6:	db0c      	blt.n	8013c12 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013bf8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013bfa:	45be      	cmp	lr, r7
 8013bfc:	da09      	bge.n	8013c12 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013bfe:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013c02:	45be      	cmp	lr, r7
 8013c04:	bf3c      	itt	cc
 8013c06:	f10c 0708 	addcc.w	r7, ip, #8
 8013c0a:	6107      	strcc	r7, [r0, #16]
 8013c0c:	f10e 0701 	add.w	r7, lr, #1
 8013c10:	6087      	str	r7, [r0, #8]
 8013c12:	6907      	ldr	r7, [r0, #16]
 8013c14:	b213      	sxth	r3, r2
 8013c16:	9310      	str	r3, [sp, #64]	; 0x40
 8013c18:	807b      	strh	r3, [r7, #2]
 8013c1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c1c:	803d      	strh	r5, [r7, #0]
 8013c1e:	4555      	cmp	r5, sl
 8013c20:	80be      	strh	r6, [r7, #4]
 8013c22:	80fe      	strh	r6, [r7, #6]
 8013c24:	eb04 0c03 	add.w	ip, r4, r3
 8013c28:	d051      	beq.n	8013cce <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8013c2a:	9b01      	ldr	r3, [sp, #4]
 8013c2c:	eba3 070c 	sub.w	r7, r3, ip
 8013c30:	443c      	add	r4, r7
 8013c32:	0164      	lsls	r4, r4, #5
 8013c34:	fb94 f8f1 	sdiv	r8, r4, r1
 8013c38:	fb01 4418 	mls	r4, r1, r8, r4
 8013c3c:	2c00      	cmp	r4, #0
 8013c3e:	bfb8      	it	lt
 8013c40:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013c44:	ebab 0301 	sub.w	r3, fp, r1
 8013c48:	f108 0701 	add.w	r7, r8, #1
 8013c4c:	bfb8      	it	lt
 8013c4e:	1864      	addlt	r4, r4, r1
 8013c50:	9309      	str	r3, [sp, #36]	; 0x24
 8013c52:	9711      	str	r7, [sp, #68]	; 0x44
 8013c54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c56:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013c5a:	191b      	adds	r3, r3, r4
 8013c5c:	bf58      	it	pl
 8013c5e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013c60:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013c64:	9309      	str	r3, [sp, #36]	; 0x24
 8013c66:	bf48      	it	mi
 8013c68:	4647      	movmi	r7, r8
 8013c6a:	44bb      	add	fp, r7
 8013c6c:	f8ae b004 	strh.w	fp, [lr, #4]
 8013c70:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013c74:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013c78:	f8ae b006 	strh.w	fp, [lr, #6]
 8013c7c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013c80:	44bc      	add	ip, r7
 8013c82:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013c84:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013c88:	443d      	add	r5, r7
 8013c8a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8013c8e:	bf5c      	itt	pl
 8013c90:	1a5b      	subpl	r3, r3, r1
 8013c92:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013c94:	ea5b 0307 	orrs.w	r3, fp, r7
 8013c98:	d011      	beq.n	8013cbe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013c9a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8013c9e:	f1bb 0f00 	cmp.w	fp, #0
 8013ca2:	db0c      	blt.n	8013cbe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013ca4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013ca6:	45bb      	cmp	fp, r7
 8013ca8:	da09      	bge.n	8013cbe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013caa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013cae:	45bb      	cmp	fp, r7
 8013cb0:	bf3c      	itt	cc
 8013cb2:	f10e 0708 	addcc.w	r7, lr, #8
 8013cb6:	6107      	strcc	r7, [r0, #16]
 8013cb8:	f10b 0701 	add.w	r7, fp, #1
 8013cbc:	6087      	str	r7, [r0, #8]
 8013cbe:	6907      	ldr	r7, [r0, #16]
 8013cc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013cc2:	803d      	strh	r5, [r7, #0]
 8013cc4:	4555      	cmp	r5, sl
 8013cc6:	807b      	strh	r3, [r7, #2]
 8013cc8:	80be      	strh	r6, [r7, #4]
 8013cca:	80fe      	strh	r6, [r7, #6]
 8013ccc:	d1c2      	bne.n	8013c54 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8013cce:	9b01      	ldr	r3, [sp, #4]
 8013cd0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013cd2:	eba3 0c0c 	sub.w	ip, r3, ip
 8013cd6:	6903      	ldr	r3, [r0, #16]
 8013cd8:	8899      	ldrh	r1, [r3, #4]
 8013cda:	4461      	add	r1, ip
 8013cdc:	8099      	strh	r1, [r3, #4]
 8013cde:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013ce0:	3720      	adds	r7, #32
 8013ce2:	1a7f      	subs	r7, r7, r1
 8013ce4:	88d9      	ldrh	r1, [r3, #6]
 8013ce6:	fb0c 1c07 	mla	ip, ip, r7, r1
 8013cea:	f8a3 c006 	strh.w	ip, [r3, #6]
 8013cee:	e60e      	b.n	801390e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013cf0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013cf2:	f04f 34ff 	mov.w	r4, #4294967295
 8013cf6:	940d      	str	r4, [sp, #52]	; 0x34
 8013cf8:	437b      	muls	r3, r7
 8013cfa:	4249      	negs	r1, r1
 8013cfc:	2400      	movs	r4, #0
 8013cfe:	e756      	b.n	8013bae <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013d00:	9905      	ldr	r1, [sp, #20]
 8013d02:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013d06:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8013d0a:	f001 011f 	and.w	r1, r1, #31
 8013d0e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013d12:	9102      	str	r1, [sp, #8]
 8013d14:	9904      	ldr	r1, [sp, #16]
 8013d16:	45f3      	cmp	fp, lr
 8013d18:	f009 0c1f 	and.w	ip, r9, #31
 8013d1c:	eba1 0406 	sub.w	r4, r1, r6
 8013d20:	d108      	bne.n	8013d34 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013d22:	9b02      	ldr	r3, [sp, #8]
 8013d24:	449c      	add	ip, r3
 8013d26:	44a0      	add	r8, r4
 8013d28:	fb04 a40c 	mla	r4, r4, ip, sl
 8013d2c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013d30:	80fc      	strh	r4, [r7, #6]
 8013d32:	e458      	b.n	80135e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013d34:	9905      	ldr	r1, [sp, #20]
 8013d36:	ebb1 0109 	subs.w	r1, r1, r9
 8013d3a:	bf5b      	ittet	pl
 8013d3c:	f1cc 0520 	rsbpl	r5, ip, #32
 8013d40:	436c      	mulpl	r4, r5
 8013d42:	2500      	movmi	r5, #0
 8013d44:	2520      	movpl	r5, #32
 8013d46:	bf44      	itt	mi
 8013d48:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013d4c:	4249      	negmi	r1, r1
 8013d4e:	9501      	str	r5, [sp, #4]
 8013d50:	9b01      	ldr	r3, [sp, #4]
 8013d52:	fb94 f5f1 	sdiv	r5, r4, r1
 8013d56:	fb01 4415 	mls	r4, r1, r5, r4
 8013d5a:	bf54      	ite	pl
 8013d5c:	f04f 0901 	movpl.w	r9, #1
 8013d60:	f04f 39ff 	movmi.w	r9, #4294967295
 8013d64:	2c00      	cmp	r4, #0
 8013d66:	bfb8      	it	lt
 8013d68:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013d6c:	449c      	add	ip, r3
 8013d6e:	44a8      	add	r8, r5
 8013d70:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013d74:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013d78:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013d7c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013d80:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013d84:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013d88:	bfb8      	it	lt
 8013d8a:	1864      	addlt	r4, r4, r1
 8013d8c:	ea58 0707 	orrs.w	r7, r8, r7
 8013d90:	eb0b 0309 	add.w	r3, fp, r9
 8013d94:	d011      	beq.n	8013dba <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013d96:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013d9a:	f1b8 0f00 	cmp.w	r8, #0
 8013d9e:	db0c      	blt.n	8013dba <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013da0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013da2:	45b8      	cmp	r8, r7
 8013da4:	da09      	bge.n	8013dba <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013da6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013daa:	45b8      	cmp	r8, r7
 8013dac:	bf3c      	itt	cc
 8013dae:	f10c 0708 	addcc.w	r7, ip, #8
 8013db2:	6107      	strcc	r7, [r0, #16]
 8013db4:	f108 0701 	add.w	r7, r8, #1
 8013db8:	6087      	str	r7, [r0, #8]
 8013dba:	6907      	ldr	r7, [r0, #16]
 8013dbc:	f04f 0c00 	mov.w	ip, #0
 8013dc0:	b212      	sxth	r2, r2
 8013dc2:	459e      	cmp	lr, r3
 8013dc4:	803b      	strh	r3, [r7, #0]
 8013dc6:	807a      	strh	r2, [r7, #2]
 8013dc8:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013dcc:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013dd0:	442e      	add	r6, r5
 8013dd2:	d04d      	beq.n	8013e70 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013dd4:	9f04      	ldr	r7, [sp, #16]
 8013dd6:	1bbf      	subs	r7, r7, r6
 8013dd8:	443d      	add	r5, r7
 8013dda:	016d      	lsls	r5, r5, #5
 8013ddc:	fb95 f8f1 	sdiv	r8, r5, r1
 8013de0:	fb01 5518 	mls	r5, r1, r8, r5
 8013de4:	4565      	cmp	r5, ip
 8013de6:	bfb8      	it	lt
 8013de8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013dec:	f108 0701 	add.w	r7, r8, #1
 8013df0:	bfb8      	it	lt
 8013df2:	186d      	addlt	r5, r5, r1
 8013df4:	1a64      	subs	r4, r4, r1
 8013df6:	9703      	str	r7, [sp, #12]
 8013df8:	f04f 0a00 	mov.w	sl, #0
 8013dfc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013e00:	1964      	adds	r4, r4, r5
 8013e02:	bf58      	it	pl
 8013e04:	9f03      	ldrpl	r7, [sp, #12]
 8013e06:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013e0a:	bf48      	it	mi
 8013e0c:	4647      	movmi	r7, r8
 8013e0e:	44bb      	add	fp, r7
 8013e10:	f8ac b004 	strh.w	fp, [ip, #4]
 8013e14:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013e18:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013e1c:	f8ac b006 	strh.w	fp, [ip, #6]
 8013e20:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013e24:	443e      	add	r6, r7
 8013e26:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013e2a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013e2e:	bf58      	it	pl
 8013e30:	1a64      	subpl	r4, r4, r1
 8013e32:	ea5b 0707 	orrs.w	r7, fp, r7
 8013e36:	444b      	add	r3, r9
 8013e38:	d011      	beq.n	8013e5e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013e3a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013e3e:	f1bb 0f00 	cmp.w	fp, #0
 8013e42:	db0c      	blt.n	8013e5e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013e44:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013e46:	45bb      	cmp	fp, r7
 8013e48:	da09      	bge.n	8013e5e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013e4a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013e4e:	45bb      	cmp	fp, r7
 8013e50:	bf3c      	itt	cc
 8013e52:	f10c 0708 	addcc.w	r7, ip, #8
 8013e56:	6107      	strcc	r7, [r0, #16]
 8013e58:	f10b 0701 	add.w	r7, fp, #1
 8013e5c:	6087      	str	r7, [r0, #8]
 8013e5e:	6907      	ldr	r7, [r0, #16]
 8013e60:	459e      	cmp	lr, r3
 8013e62:	803b      	strh	r3, [r7, #0]
 8013e64:	807a      	strh	r2, [r7, #2]
 8013e66:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013e6a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013e6e:	d1c5      	bne.n	8013dfc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013e70:	9b04      	ldr	r3, [sp, #16]
 8013e72:	1b9e      	subs	r6, r3, r6
 8013e74:	6903      	ldr	r3, [r0, #16]
 8013e76:	889a      	ldrh	r2, [r3, #4]
 8013e78:	4432      	add	r2, r6
 8013e7a:	809a      	strh	r2, [r3, #4]
 8013e7c:	9a02      	ldr	r2, [sp, #8]
 8013e7e:	f102 0c20 	add.w	ip, r2, #32
 8013e82:	9a01      	ldr	r2, [sp, #4]
 8013e84:	ebac 0c02 	sub.w	ip, ip, r2
 8013e88:	88da      	ldrh	r2, [r3, #6]
 8013e8a:	fb06 260c 	mla	r6, r6, ip, r2
 8013e8e:	80de      	strh	r6, [r3, #6]
 8013e90:	f7ff bba9 	b.w	80135e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013e94 <_ZN8touchgfx7Outline6lineToEii>:
 8013e94:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013e96:	079b      	lsls	r3, r3, #30
 8013e98:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013e9a:	460e      	mov	r6, r1
 8013e9c:	4615      	mov	r5, r2
 8013e9e:	d511      	bpl.n	8013ec4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013ea0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013ea4:	ea86 0701 	eor.w	r7, r6, r1
 8013ea8:	ea85 0302 	eor.w	r3, r5, r2
 8013eac:	433b      	orrs	r3, r7
 8013eae:	d009      	beq.n	8013ec4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013eb0:	4633      	mov	r3, r6
 8013eb2:	9500      	str	r5, [sp, #0]
 8013eb4:	f7ff fb3e 	bl	8013534 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013eb8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013eba:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8013ebe:	f043 0301 	orr.w	r3, r3, #1
 8013ec2:	6243      	str	r3, [r0, #36]	; 0x24
 8013ec4:	b003      	add	sp, #12
 8013ec6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013ec8 <_ZN8touchgfx7Outline6moveToEii>:
 8013ec8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013eca:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013ecc:	4615      	mov	r5, r2
 8013ece:	079a      	lsls	r2, r3, #30
 8013ed0:	4604      	mov	r4, r0
 8013ed2:	460e      	mov	r6, r1
 8013ed4:	d401      	bmi.n	8013eda <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013ed6:	f7ff faf9 	bl	80134cc <_ZN8touchgfx7Outline5resetEv>
 8013eda:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013edc:	07db      	lsls	r3, r3, #31
 8013ede:	d504      	bpl.n	8013eea <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013ee0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013ee4:	4620      	mov	r0, r4
 8013ee6:	f7ff ffd5 	bl	8013e94 <_ZN8touchgfx7Outline6lineToEii>
 8013eea:	6923      	ldr	r3, [r4, #16]
 8013eec:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013ef0:	1170      	asrs	r0, r6, #5
 8013ef2:	4290      	cmp	r0, r2
 8013ef4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013ef8:	d103      	bne.n	8013f02 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8013efa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013efe:	4291      	cmp	r1, r2
 8013f00:	d01a      	beq.n	8013f38 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013f02:	88df      	ldrh	r7, [r3, #6]
 8013f04:	889a      	ldrh	r2, [r3, #4]
 8013f06:	433a      	orrs	r2, r7
 8013f08:	d010      	beq.n	8013f2c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013f0a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013f0e:	2a00      	cmp	r2, #0
 8013f10:	db0c      	blt.n	8013f2c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013f12:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8013f14:	42ba      	cmp	r2, r7
 8013f16:	da09      	bge.n	8013f2c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013f18:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8013f1c:	42ba      	cmp	r2, r7
 8013f1e:	bf38      	it	cc
 8013f20:	3308      	addcc	r3, #8
 8013f22:	f102 0201 	add.w	r2, r2, #1
 8013f26:	bf38      	it	cc
 8013f28:	6123      	strcc	r3, [r4, #16]
 8013f2a:	60a2      	str	r2, [r4, #8]
 8013f2c:	6923      	ldr	r3, [r4, #16]
 8013f2e:	2200      	movs	r2, #0
 8013f30:	8018      	strh	r0, [r3, #0]
 8013f32:	8059      	strh	r1, [r3, #2]
 8013f34:	809a      	strh	r2, [r3, #4]
 8013f36:	80da      	strh	r2, [r3, #6]
 8013f38:	6166      	str	r6, [r4, #20]
 8013f3a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8013f3e:	6225      	str	r5, [r4, #32]
 8013f40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013f42 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8013f42:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013f46:	b0d0      	sub	sp, #320	; 0x140
 8013f48:	466c      	mov	r4, sp
 8013f4a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8013f4e:	4627      	mov	r7, r4
 8013f50:	1a0d      	subs	r5, r1, r0
 8013f52:	2d48      	cmp	r5, #72	; 0x48
 8013f54:	f100 0308 	add.w	r3, r0, #8
 8013f58:	f340 80d5 	ble.w	8014106 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8013f5c:	112d      	asrs	r5, r5, #4
 8013f5e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8013f62:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013f66:	6816      	ldr	r6, [r2, #0]
 8013f68:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8013f6c:	6006      	str	r6, [r0, #0]
 8013f6e:	6856      	ldr	r6, [r2, #4]
 8013f70:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013f74:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013f78:	6046      	str	r6, [r0, #4]
 8013f7a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8013f7e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8013f82:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013f86:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013f8a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013f8e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8013f92:	4565      	cmp	r5, ip
 8013f94:	f1a1 0208 	sub.w	r2, r1, #8
 8013f98:	db06      	blt.n	8013fa8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8013f9a:	d119      	bne.n	8013fd0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013f9c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013fa0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8013fa4:	42ae      	cmp	r6, r5
 8013fa6:	dd13      	ble.n	8013fd0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013fa8:	460e      	mov	r6, r1
 8013faa:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8013fae:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013fb2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8013fb6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8013fba:	601d      	str	r5, [r3, #0]
 8013fbc:	6875      	ldr	r5, [r6, #4]
 8013fbe:	605d      	str	r5, [r3, #4]
 8013fc0:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013fc4:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013fc8:	f821 8c04 	strh.w	r8, [r1, #-4]
 8013fcc:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013fd0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013fd4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013fd8:	42ae      	cmp	r6, r5
 8013fda:	db06      	blt.n	8013fea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8013fdc:	d116      	bne.n	801400c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8013fde:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013fe2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013fe6:	45ac      	cmp	ip, r5
 8013fe8:	da10      	bge.n	801400c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8013fea:	681d      	ldr	r5, [r3, #0]
 8013fec:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013ff0:	6005      	str	r5, [r0, #0]
 8013ff2:	685d      	ldr	r5, [r3, #4]
 8013ff4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013ff8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013ffc:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014000:	6045      	str	r5, [r0, #4]
 8014002:	8146      	strh	r6, [r0, #10]
 8014004:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014008:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801400c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014010:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014014:	4565      	cmp	r5, ip
 8014016:	db06      	blt.n	8014026 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8014018:	d119      	bne.n	801404e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801401a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801401e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014022:	42ae      	cmp	r6, r5
 8014024:	da13      	bge.n	801404e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014026:	460e      	mov	r6, r1
 8014028:	f9b0 9000 	ldrsh.w	r9, [r0]
 801402c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014030:	6005      	str	r5, [r0, #0]
 8014032:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8014036:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801403a:	6875      	ldr	r5, [r6, #4]
 801403c:	6045      	str	r5, [r0, #4]
 801403e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014042:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014046:	f821 8c04 	strh.w	r8, [r1, #-4]
 801404a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801404e:	3308      	adds	r3, #8
 8014050:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014054:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014058:	45e6      	cmp	lr, ip
 801405a:	dbf8      	blt.n	801404e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801405c:	d105      	bne.n	801406a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801405e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014062:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014066:	42ae      	cmp	r6, r5
 8014068:	dbf1      	blt.n	801404e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801406a:	4615      	mov	r5, r2
 801406c:	3a08      	subs	r2, #8
 801406e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014072:	45b4      	cmp	ip, r6
 8014074:	dbf9      	blt.n	801406a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014076:	d105      	bne.n	8014084 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014078:	f9b0 8000 	ldrsh.w	r8, [r0]
 801407c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014080:	45b0      	cmp	r8, r6
 8014082:	dbf2      	blt.n	801406a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014084:	4293      	cmp	r3, r2
 8014086:	f1a5 0608 	sub.w	r6, r5, #8
 801408a:	d816      	bhi.n	80140ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801408c:	f8d6 c000 	ldr.w	ip, [r6]
 8014090:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014094:	f8c3 c000 	str.w	ip, [r3]
 8014098:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801409c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80140a0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80140a4:	f8c3 c004 	str.w	ip, [r3, #4]
 80140a8:	f825 ac08 	strh.w	sl, [r5, #-8]
 80140ac:	f825 ec06 	strh.w	lr, [r5, #-6]
 80140b0:	f825 9c04 	strh.w	r9, [r5, #-4]
 80140b4:	f825 8c02 	strh.w	r8, [r5, #-2]
 80140b8:	e7c9      	b.n	801404e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80140ba:	f8d6 e000 	ldr.w	lr, [r6]
 80140be:	f9b0 a000 	ldrsh.w	sl, [r0]
 80140c2:	f8c0 e000 	str.w	lr, [r0]
 80140c6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80140ca:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80140ce:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80140d2:	f8c0 e004 	str.w	lr, [r0, #4]
 80140d6:	f825 ac08 	strh.w	sl, [r5, #-8]
 80140da:	f825 cc06 	strh.w	ip, [r5, #-6]
 80140de:	f825 9c04 	strh.w	r9, [r5, #-4]
 80140e2:	f825 8c02 	strh.w	r8, [r5, #-2]
 80140e6:	1acd      	subs	r5, r1, r3
 80140e8:	1a16      	subs	r6, r2, r0
 80140ea:	10ed      	asrs	r5, r5, #3
 80140ec:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80140f0:	bfb5      	itete	lt
 80140f2:	e9c4 0200 	strdlt	r0, r2, [r4]
 80140f6:	e9c4 3100 	strdge	r3, r1, [r4]
 80140fa:	460a      	movlt	r2, r1
 80140fc:	4603      	movge	r3, r0
 80140fe:	3408      	adds	r4, #8
 8014100:	4618      	mov	r0, r3
 8014102:	4611      	mov	r1, r2
 8014104:	e724      	b.n	8013f50 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014106:	4299      	cmp	r1, r3
 8014108:	d928      	bls.n	801415c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801410a:	f1a3 0210 	sub.w	r2, r3, #16
 801410e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014112:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014116:	45ac      	cmp	ip, r5
 8014118:	db06      	blt.n	8014128 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801411a:	d11d      	bne.n	8014158 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801411c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014120:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014124:	42ae      	cmp	r6, r5
 8014126:	da17      	bge.n	8014158 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014128:	4615      	mov	r5, r2
 801412a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801412e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014132:	6116      	str	r6, [r2, #16]
 8014134:	686e      	ldr	r6, [r5, #4]
 8014136:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801413a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801413e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014142:	42a8      	cmp	r0, r5
 8014144:	6156      	str	r6, [r2, #20]
 8014146:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801414a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801414e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014152:	f1a2 0208 	sub.w	r2, r2, #8
 8014156:	d1da      	bne.n	801410e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014158:	3308      	adds	r3, #8
 801415a:	e7d4      	b.n	8014106 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801415c:	42bc      	cmp	r4, r7
 801415e:	d903      	bls.n	8014168 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014160:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014164:	3c08      	subs	r4, #8
 8014166:	e6f3      	b.n	8013f50 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014168:	b050      	add	sp, #320	; 0x140
 801416a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801416e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801416e:	b510      	push	{r4, lr}
 8014170:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014172:	07da      	lsls	r2, r3, #31
 8014174:	4604      	mov	r4, r0
 8014176:	d507      	bpl.n	8014188 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014178:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801417c:	f7ff fe8a 	bl	8013e94 <_ZN8touchgfx7Outline6lineToEii>
 8014180:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014182:	f023 0301 	bic.w	r3, r3, #1
 8014186:	6243      	str	r3, [r0, #36]	; 0x24
 8014188:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801418a:	079b      	lsls	r3, r3, #30
 801418c:	d521      	bpl.n	80141d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801418e:	6923      	ldr	r3, [r4, #16]
 8014190:	88d9      	ldrh	r1, [r3, #6]
 8014192:	889a      	ldrh	r2, [r3, #4]
 8014194:	430a      	orrs	r2, r1
 8014196:	d010      	beq.n	80141ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014198:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801419c:	2a00      	cmp	r2, #0
 801419e:	db0c      	blt.n	80141ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80141a0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80141a2:	428a      	cmp	r2, r1
 80141a4:	da09      	bge.n	80141ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80141a6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80141aa:	4291      	cmp	r1, r2
 80141ac:	bf88      	it	hi
 80141ae:	3308      	addhi	r3, #8
 80141b0:	f102 0201 	add.w	r2, r2, #1
 80141b4:	bf88      	it	hi
 80141b6:	6123      	strhi	r3, [r4, #16]
 80141b8:	60a2      	str	r2, [r4, #8]
 80141ba:	68a1      	ldr	r1, [r4, #8]
 80141bc:	b129      	cbz	r1, 80141ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80141be:	6863      	ldr	r3, [r4, #4]
 80141c0:	4299      	cmp	r1, r3
 80141c2:	d802      	bhi.n	80141ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80141c4:	68e0      	ldr	r0, [r4, #12]
 80141c6:	f7ff febc 	bl	8013f42 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80141ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80141cc:	f023 0302 	bic.w	r3, r3, #2
 80141d0:	6263      	str	r3, [r4, #36]	; 0x24
 80141d2:	68e0      	ldr	r0, [r4, #12]
 80141d4:	bd10      	pop	{r4, pc}
	...

080141d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80141d8:	4b02      	ldr	r3, [pc, #8]	; (80141e4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80141da:	6018      	str	r0, [r3, #0]
 80141dc:	4b02      	ldr	r3, [pc, #8]	; (80141e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80141de:	6019      	str	r1, [r3, #0]
 80141e0:	4770      	bx	lr
 80141e2:	bf00      	nop
 80141e4:	20012dac 	.word	0x20012dac
 80141e8:	20012db0 	.word	0x20012db0

080141ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80141ec:	4a02      	ldr	r2, [pc, #8]	; (80141f8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80141ee:	2300      	movs	r3, #0
 80141f0:	6013      	str	r3, [r2, #0]
 80141f2:	4a02      	ldr	r2, [pc, #8]	; (80141fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80141f4:	6013      	str	r3, [r2, #0]
 80141f6:	4770      	bx	lr
 80141f8:	20012dac 	.word	0x20012dac
 80141fc:	20012db0 	.word	0x20012db0

08014200 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014200:	4b01      	ldr	r3, [pc, #4]	; (8014208 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014202:	6818      	ldr	r0, [r3, #0]
 8014204:	4770      	bx	lr
 8014206:	bf00      	nop
 8014208:	20012dac 	.word	0x20012dac

0801420c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801420c:	4b01      	ldr	r3, [pc, #4]	; (8014214 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801420e:	6818      	ldr	r0, [r3, #0]
 8014210:	4770      	bx	lr
 8014212:	bf00      	nop
 8014214:	20012db0 	.word	0x20012db0

08014218 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014218:	b510      	push	{r4, lr}
 801421a:	6803      	ldr	r3, [r0, #0]
 801421c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801421e:	460c      	mov	r4, r1
 8014220:	4798      	blx	r3
 8014222:	1b03      	subs	r3, r0, r4
 8014224:	4258      	negs	r0, r3
 8014226:	4158      	adcs	r0, r3
 8014228:	bd10      	pop	{r4, pc}
	...

0801422c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801422c:	4b01      	ldr	r3, [pc, #4]	; (8014234 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801422e:	6019      	str	r1, [r3, #0]
 8014230:	4770      	bx	lr
 8014232:	bf00      	nop
 8014234:	20012db4 	.word	0x20012db4

08014238 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801423c:	4696      	mov	lr, r2
 801423e:	4605      	mov	r5, r0
 8014240:	4614      	mov	r4, r2
 8014242:	460e      	mov	r6, r1
 8014244:	461f      	mov	r7, r3
 8014246:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801424a:	b097      	sub	sp, #92	; 0x5c
 801424c:	f10d 0c1c 	add.w	ip, sp, #28
 8014250:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014254:	f8de 3000 	ldr.w	r3, [lr]
 8014258:	f8cc 3000 	str.w	r3, [ip]
 801425c:	f104 0e14 	add.w	lr, r4, #20
 8014260:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014264:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014268:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801426c:	f8de 3000 	ldr.w	r3, [lr]
 8014270:	f8cc 3000 	str.w	r3, [ip]
 8014274:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014278:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801427c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014280:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014284:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014288:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801428c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014290:	f8de 3000 	ldr.w	r3, [lr]
 8014294:	f8cc 3000 	str.w	r3, [ip]
 8014298:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801429a:	682b      	ldr	r3, [r5, #0]
 801429c:	9201      	str	r2, [sp, #4]
 801429e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80142a2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80142a4:	9200      	str	r2, [sp, #0]
 80142a6:	f8cd 8008 	str.w	r8, [sp, #8]
 80142aa:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80142ae:	aa07      	add	r2, sp, #28
 80142b0:	463b      	mov	r3, r7
 80142b2:	4631      	mov	r1, r6
 80142b4:	4628      	mov	r0, r5
 80142b6:	47d8      	blx	fp
 80142b8:	46a6      	mov	lr, r4
 80142ba:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80142be:	f10d 0c1c 	add.w	ip, sp, #28
 80142c2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80142c6:	f8de 3000 	ldr.w	r3, [lr]
 80142ca:	f8cc 3000 	str.w	r3, [ip]
 80142ce:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80142d2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80142d6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80142da:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80142de:	343c      	adds	r4, #60	; 0x3c
 80142e0:	f8de 3000 	ldr.w	r3, [lr]
 80142e4:	f8cc 3000 	str.w	r3, [ip]
 80142e8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80142ea:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80142ee:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80142f2:	6823      	ldr	r3, [r4, #0]
 80142f4:	f8cc 3000 	str.w	r3, [ip]
 80142f8:	682b      	ldr	r3, [r5, #0]
 80142fa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80142fe:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014300:	9201      	str	r2, [sp, #4]
 8014302:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014304:	9200      	str	r2, [sp, #0]
 8014306:	f8cd 8008 	str.w	r8, [sp, #8]
 801430a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801430c:	aa07      	add	r2, sp, #28
 801430e:	463b      	mov	r3, r7
 8014310:	4631      	mov	r1, r6
 8014312:	4628      	mov	r0, r5
 8014314:	47a0      	blx	r4
 8014316:	b017      	add	sp, #92	; 0x5c
 8014318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801431c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801431c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014320:	b08d      	sub	sp, #52	; 0x34
 8014322:	4688      	mov	r8, r1
 8014324:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014326:	f8d3 c000 	ldr.w	ip, [r3]
 801432a:	680f      	ldr	r7, [r1, #0]
 801432c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014330:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014334:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014338:	edd3 6a07 	vldr	s13, [r3, #28]
 801433c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801433e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014342:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014346:	f9ba 1000 	ldrsh.w	r1, [sl]
 801434a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801434e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014352:	eba7 070c 	sub.w	r7, r7, ip
 8014356:	42bc      	cmp	r4, r7
 8014358:	bfa8      	it	ge
 801435a:	463c      	movge	r4, r7
 801435c:	ee07 4a90 	vmov	s15, r4
 8014360:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014364:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014368:	ee25 4a04 	vmul.f32	s8, s10, s8
 801436c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014370:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014374:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014378:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801437c:	eb09 0e0c 	add.w	lr, r9, ip
 8014380:	4571      	cmp	r1, lr
 8014382:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014386:	ee32 1a05 	vadd.f32	s2, s4, s10
 801438a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801438e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014392:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014396:	f340 808d 	ble.w	80144b4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801439a:	eba1 060e 	sub.w	r6, r1, lr
 801439e:	fb96 f5f4 	sdiv	r5, r6, r4
 80143a2:	ee07 5a10 	vmov	s14, r5
 80143a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80143aa:	2d00      	cmp	r5, #0
 80143ac:	fb04 6615 	mls	r6, r4, r5, r6
 80143b0:	eea7 0a04 	vfma.f32	s0, s14, s8
 80143b4:	eee7 0a24 	vfma.f32	s1, s14, s9
 80143b8:	eea7 1a05 	vfma.f32	s2, s14, s10
 80143bc:	dd13      	ble.n	80143e6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80143be:	ee70 6a44 	vsub.f32	s13, s0, s8
 80143c2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80143c6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80143ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80143ce:	bf18      	it	ne
 80143d0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80143d4:	ee31 2a45 	vsub.f32	s4, s2, s10
 80143d8:	bf08      	it	eq
 80143da:	eeb0 7a67 	vmoveq.f32	s14, s15
 80143de:	ee61 1a87 	vmul.f32	s3, s3, s14
 80143e2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80143e6:	fb05 f204 	mul.w	r2, r5, r4
 80143ea:	1abf      	subs	r7, r7, r2
 80143ec:	4494      	add	ip, r2
 80143ee:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80143f2:	4411      	add	r1, r2
 80143f4:	eb09 020c 	add.w	r2, r9, ip
 80143f8:	443a      	add	r2, r7
 80143fa:	b209      	sxth	r1, r1
 80143fc:	428a      	cmp	r2, r1
 80143fe:	bfc4      	itt	gt
 8014400:	eba1 0209 	subgt.w	r2, r1, r9
 8014404:	eba2 070c 	subgt.w	r7, r2, ip
 8014408:	2f00      	cmp	r7, #0
 801440a:	dd50      	ble.n	80144ae <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801440c:	fb97 f1f4 	sdiv	r1, r7, r4
 8014410:	fb04 7211 	mls	r2, r4, r1, r7
 8014414:	b90a      	cbnz	r2, 801441a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014416:	3901      	subs	r1, #1
 8014418:	4622      	mov	r2, r4
 801441a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801441e:	6840      	ldr	r0, [r0, #4]
 8014420:	900b      	str	r0, [sp, #44]	; 0x2c
 8014422:	f8d0 a000 	ldr.w	sl, [r0]
 8014426:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014428:	9008      	str	r0, [sp, #32]
 801442a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801442e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014430:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8014434:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014438:	695b      	ldr	r3, [r3, #20]
 801443a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801443c:	445b      	add	r3, fp
 801443e:	eef0 6a42 	vmov.f32	s13, s4
 8014442:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014446:	ee21 3a23 	vmul.f32	s6, s2, s7
 801444a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801444e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014452:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014456:	9307      	str	r3, [sp, #28]
 8014458:	ee17 7a90 	vmov	r7, s15
 801445c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014460:	eeb0 7a61 	vmov.f32	s14, s3
 8014464:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014468:	ee16 3a90 	vmov	r3, s13
 801446c:	fb97 f7f4 	sdiv	r7, r7, r4
 8014470:	ee17 ca90 	vmov	ip, s15
 8014474:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014478:	fb9c fcf4 	sdiv	ip, ip, r4
 801447c:	fb0c 3306 	mla	r3, ip, r6, r3
 8014480:	9302      	str	r3, [sp, #8]
 8014482:	ee17 3a10 	vmov	r3, s14
 8014486:	44b6      	add	lr, r6
 8014488:	fb04 e505 	mla	r5, r4, r5, lr
 801448c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014490:	fb07 3706 	mla	r7, r7, r6, r3
 8014494:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014498:	e9cd 4700 	strd	r4, r7, [sp]
 801449c:	2900      	cmp	r1, #0
 801449e:	bfcc      	ite	gt
 80144a0:	46a1      	movgt	r9, r4
 80144a2:	4691      	movle	r9, r2
 80144a4:	eba9 0306 	sub.w	r3, r9, r6
 80144a8:	f8da 4008 	ldr.w	r4, [sl, #8]
 80144ac:	47a0      	blx	r4
 80144ae:	b00d      	add	sp, #52	; 0x34
 80144b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144b4:	2500      	movs	r5, #0
 80144b6:	462e      	mov	r6, r5
 80144b8:	e799      	b.n	80143ee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080144bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80144bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144c0:	b0db      	sub	sp, #364	; 0x16c
 80144c2:	461d      	mov	r5, r3
 80144c4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80144c8:	930a      	str	r3, [sp, #40]	; 0x28
 80144ca:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80144ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80144d0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80144d4:	9310      	str	r3, [sp, #64]	; 0x40
 80144d6:	6803      	ldr	r3, [r0, #0]
 80144d8:	910f      	str	r1, [sp, #60]	; 0x3c
 80144da:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80144dc:	9009      	str	r0, [sp, #36]	; 0x24
 80144de:	4614      	mov	r4, r2
 80144e0:	4629      	mov	r1, r5
 80144e2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80144e6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80144ea:	47b8      	blx	r7
 80144ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144ee:	6058      	str	r0, [r3, #4]
 80144f0:	2800      	cmp	r0, #0
 80144f2:	f000 83a1 	beq.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144f6:	682b      	ldr	r3, [r5, #0]
 80144f8:	9314      	str	r3, [sp, #80]	; 0x50
 80144fa:	686b      	ldr	r3, [r5, #4]
 80144fc:	9315      	str	r3, [sp, #84]	; 0x54
 80144fe:	4bc4      	ldr	r3, [pc, #784]	; (8014810 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014500:	ed94 7a02 	vldr	s14, [r4, #8]
 8014504:	7819      	ldrb	r1, [r3, #0]
 8014506:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801450a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801450e:	2900      	cmp	r1, #0
 8014510:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014514:	bf16      	itet	ne
 8014516:	4619      	movne	r1, r3
 8014518:	4611      	moveq	r1, r2
 801451a:	4613      	movne	r3, r2
 801451c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014520:	9116      	str	r1, [sp, #88]	; 0x58
 8014522:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8014526:	f240 8387 	bls.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801452a:	ed94 7a07 	vldr	s14, [r4, #28]
 801452e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014536:	f240 837f 	bls.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801453a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801453e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014546:	f240 8377 	bls.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801454a:	6822      	ldr	r2, [r4, #0]
 801454c:	4bb1      	ldr	r3, [pc, #708]	; (8014814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801454e:	429a      	cmp	r2, r3
 8014550:	f2c0 8372 	blt.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014554:	49b0      	ldr	r1, [pc, #704]	; (8014818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8014556:	6963      	ldr	r3, [r4, #20]
 8014558:	428a      	cmp	r2, r1
 801455a:	f300 836d 	bgt.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801455e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014562:	48ae      	ldr	r0, [pc, #696]	; (801481c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8014564:	33ff      	adds	r3, #255	; 0xff
 8014566:	4283      	cmp	r3, r0
 8014568:	f200 8366 	bhi.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801456c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801456e:	4dac      	ldr	r5, [pc, #688]	; (8014820 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014570:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014574:	33ff      	adds	r3, #255	; 0xff
 8014576:	42ab      	cmp	r3, r5
 8014578:	f200 835e 	bhi.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801457c:	6862      	ldr	r2, [r4, #4]
 801457e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8014582:	33ff      	adds	r3, #255	; 0xff
 8014584:	4283      	cmp	r3, r0
 8014586:	f200 8357 	bhi.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801458a:	69a1      	ldr	r1, [r4, #24]
 801458c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8014590:	33ff      	adds	r3, #255	; 0xff
 8014592:	4283      	cmp	r3, r0
 8014594:	f200 8350 	bhi.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014598:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801459a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801459e:	30ff      	adds	r0, #255	; 0xff
 80145a0:	42a8      	cmp	r0, r5
 80145a2:	f200 8349 	bhi.w	8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145a6:	428a      	cmp	r2, r1
 80145a8:	f280 8110 	bge.w	80147cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80145ac:	429a      	cmp	r2, r3
 80145ae:	f300 8119 	bgt.w	80147e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80145b2:	4299      	cmp	r1, r3
 80145b4:	f280 811d 	bge.w	80147f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80145b8:	2502      	movs	r5, #2
 80145ba:	2701      	movs	r7, #1
 80145bc:	46a9      	mov	r9, r5
 80145be:	46b8      	mov	r8, r7
 80145c0:	f04f 0a00 	mov.w	sl, #0
 80145c4:	4621      	mov	r1, r4
 80145c6:	a849      	add	r0, sp, #292	; 0x124
 80145c8:	f003 feec 	bl	80183a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80145cc:	4622      	mov	r2, r4
 80145ce:	4653      	mov	r3, sl
 80145d0:	a949      	add	r1, sp, #292	; 0x124
 80145d2:	f8cd 9000 	str.w	r9, [sp]
 80145d6:	a819      	add	r0, sp, #100	; 0x64
 80145d8:	f004 f814 	bl	8018604 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80145dc:	4622      	mov	r2, r4
 80145de:	4653      	mov	r3, sl
 80145e0:	a949      	add	r1, sp, #292	; 0x124
 80145e2:	f8cd 8000 	str.w	r8, [sp]
 80145e6:	a829      	add	r0, sp, #164	; 0xa4
 80145e8:	f004 f80c 	bl	8018604 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80145ec:	4643      	mov	r3, r8
 80145ee:	4622      	mov	r2, r4
 80145f0:	a949      	add	r1, sp, #292	; 0x124
 80145f2:	f8cd 9000 	str.w	r9, [sp]
 80145f6:	a839      	add	r0, sp, #228	; 0xe4
 80145f8:	f004 f804 	bl	8018604 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80145fc:	42af      	cmp	r7, r5
 80145fe:	bfb5      	itete	lt
 8014600:	2300      	movlt	r3, #0
 8014602:	2301      	movge	r3, #1
 8014604:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014606:	930e      	strge	r3, [sp, #56]	; 0x38
 8014608:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801460a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801460e:	af12      	add	r7, sp, #72	; 0x48
 8014610:	bfb9      	ittee	lt
 8014612:	ad29      	addlt	r5, sp, #164	; 0xa4
 8014614:	ac19      	addlt	r4, sp, #100	; 0x64
 8014616:	ad19      	addge	r5, sp, #100	; 0x64
 8014618:	ac29      	addge	r4, sp, #164	; 0xa4
 801461a:	e887 0003 	stmia.w	r7, {r0, r1}
 801461e:	b928      	cbnz	r0, 801462c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8014620:	4b80      	ldr	r3, [pc, #512]	; (8014824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8014622:	6818      	ldr	r0, [r3, #0]
 8014624:	6803      	ldr	r3, [r0, #0]
 8014626:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014628:	4798      	blx	r3
 801462a:	6038      	str	r0, [r7, #0]
 801462c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801462e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014632:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014636:	930c      	str	r3, [sp, #48]	; 0x30
 8014638:	990c      	ldr	r1, [sp, #48]	; 0x30
 801463a:	6963      	ldr	r3, [r4, #20]
 801463c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801463e:	440b      	add	r3, r1
 8014640:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014644:	4408      	add	r0, r1
 8014646:	b200      	sxth	r0, r0
 8014648:	4283      	cmp	r3, r0
 801464a:	900d      	str	r0, [sp, #52]	; 0x34
 801464c:	f280 80dd 	bge.w	801480a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8014650:	428b      	cmp	r3, r1
 8014652:	da08      	bge.n	8014666 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014654:	2a00      	cmp	r2, #0
 8014656:	dd06      	ble.n	8014666 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014658:	1acb      	subs	r3, r1, r3
 801465a:	429a      	cmp	r2, r3
 801465c:	f2c0 80e4 	blt.w	8014828 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8014660:	2b00      	cmp	r3, #0
 8014662:	f300 80e2 	bgt.w	801482a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8014666:	6967      	ldr	r7, [r4, #20]
 8014668:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801466a:	443b      	add	r3, r7
 801466c:	461f      	mov	r7, r3
 801466e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014670:	1bdf      	subs	r7, r3, r7
 8014672:	4297      	cmp	r7, r2
 8014674:	bfa8      	it	ge
 8014676:	4617      	movge	r7, r2
 8014678:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801467c:	2f00      	cmp	r7, #0
 801467e:	f340 8166 	ble.w	801494e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8014682:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014684:	6829      	ldr	r1, [r5, #0]
 8014686:	f9b3 2000 	ldrsh.w	r2, [r3]
 801468a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801468e:	6820      	ldr	r0, [r4, #0]
 8014690:	4411      	add	r1, r2
 8014692:	4299      	cmp	r1, r3
 8014694:	dd1a      	ble.n	80146cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014696:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801469a:	440b      	add	r3, r1
 801469c:	4402      	add	r2, r0
 801469e:	b21b      	sxth	r3, r3
 80146a0:	429a      	cmp	r2, r3
 80146a2:	dc13      	bgt.n	80146cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80146a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80146a8:	681b      	ldr	r3, [r3, #0]
 80146aa:	9206      	str	r2, [sp, #24]
 80146ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80146ae:	9205      	str	r2, [sp, #20]
 80146b0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80146b2:	9500      	str	r5, [sp, #0]
 80146b4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80146b8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80146ba:	9809      	ldr	r0, [sp, #36]	; 0x24
 80146bc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80146c0:	a912      	add	r1, sp, #72	; 0x48
 80146c2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80146c6:	aa49      	add	r2, sp, #292	; 0x124
 80146c8:	4623      	mov	r3, r4
 80146ca:	47c8      	blx	r9
 80146cc:	e9d4 2300 	ldrd	r2, r3, [r4]
 80146d0:	441a      	add	r2, r3
 80146d2:	6963      	ldr	r3, [r4, #20]
 80146d4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80146d8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80146dc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80146e0:	68a1      	ldr	r1, [r4, #8]
 80146e2:	ed94 6a08 	vldr	s12, [r4, #32]
 80146e6:	6022      	str	r2, [r4, #0]
 80146e8:	3301      	adds	r3, #1
 80146ea:	6163      	str	r3, [r4, #20]
 80146ec:	69a3      	ldr	r3, [r4, #24]
 80146ee:	ee37 7a27 	vadd.f32	s14, s14, s15
 80146f2:	3b01      	subs	r3, #1
 80146f4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80146f8:	61a3      	str	r3, [r4, #24]
 80146fa:	6923      	ldr	r3, [r4, #16]
 80146fc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014700:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014704:	edd4 6a07 	vldr	s13, [r4, #28]
 8014708:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801470c:	440b      	add	r3, r1
 801470e:	68e1      	ldr	r1, [r4, #12]
 8014710:	6123      	str	r3, [r4, #16]
 8014712:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014716:	428b      	cmp	r3, r1
 8014718:	edc4 6a07 	vstr	s13, [r4, #28]
 801471c:	db15      	blt.n	801474a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801471e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014722:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014726:	3201      	adds	r2, #1
 8014728:	edc4 6a07 	vstr	s13, [r4, #28]
 801472c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014730:	6022      	str	r2, [r4, #0]
 8014732:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014736:	1a5b      	subs	r3, r3, r1
 8014738:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801473c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014740:	6123      	str	r3, [r4, #16]
 8014742:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014746:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801474a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801474e:	441a      	add	r2, r3
 8014750:	696b      	ldr	r3, [r5, #20]
 8014752:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014756:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801475a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801475e:	68a9      	ldr	r1, [r5, #8]
 8014760:	ed95 6a08 	vldr	s12, [r5, #32]
 8014764:	602a      	str	r2, [r5, #0]
 8014766:	3301      	adds	r3, #1
 8014768:	616b      	str	r3, [r5, #20]
 801476a:	69ab      	ldr	r3, [r5, #24]
 801476c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014770:	3b01      	subs	r3, #1
 8014772:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014776:	61ab      	str	r3, [r5, #24]
 8014778:	692b      	ldr	r3, [r5, #16]
 801477a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801477e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014782:	edd5 6a07 	vldr	s13, [r5, #28]
 8014786:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801478a:	440b      	add	r3, r1
 801478c:	68e9      	ldr	r1, [r5, #12]
 801478e:	612b      	str	r3, [r5, #16]
 8014790:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014794:	428b      	cmp	r3, r1
 8014796:	edc5 6a07 	vstr	s13, [r5, #28]
 801479a:	db15      	blt.n	80147c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801479c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80147a0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80147a4:	3201      	adds	r2, #1
 80147a6:	edc5 6a07 	vstr	s13, [r5, #28]
 80147aa:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80147ae:	602a      	str	r2, [r5, #0]
 80147b0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80147b4:	1a5b      	subs	r3, r3, r1
 80147b6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80147ba:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80147be:	612b      	str	r3, [r5, #16]
 80147c0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80147c4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80147c8:	3f01      	subs	r7, #1
 80147ca:	e757      	b.n	801467c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80147cc:	4299      	cmp	r1, r3
 80147ce:	dc13      	bgt.n	80147f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80147d0:	429a      	cmp	r2, r3
 80147d2:	da14      	bge.n	80147fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80147d4:	2502      	movs	r5, #2
 80147d6:	2703      	movs	r7, #3
 80147d8:	46a9      	mov	r9, r5
 80147da:	f04f 0800 	mov.w	r8, #0
 80147de:	f04f 0a01 	mov.w	sl, #1
 80147e2:	e6ef      	b.n	80145c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80147e4:	2501      	movs	r5, #1
 80147e6:	2700      	movs	r7, #0
 80147e8:	46a9      	mov	r9, r5
 80147ea:	46b8      	mov	r8, r7
 80147ec:	f04f 0a02 	mov.w	sl, #2
 80147f0:	e6e8      	b.n	80145c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80147f2:	2501      	movs	r5, #1
 80147f4:	2702      	movs	r7, #2
 80147f6:	e6e1      	b.n	80145bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80147f8:	2500      	movs	r5, #0
 80147fa:	2701      	movs	r7, #1
 80147fc:	e7f4      	b.n	80147e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80147fe:	2702      	movs	r7, #2
 8014800:	2503      	movs	r5, #3
 8014802:	f04f 0900 	mov.w	r9, #0
 8014806:	46b8      	mov	r8, r7
 8014808:	e7e9      	b.n	80147de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801480a:	4613      	mov	r3, r2
 801480c:	e728      	b.n	8014660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801480e:	bf00      	nop
 8014810:	20012d9c 	.word	0x20012d9c
 8014814:	fffd8f01 	.word	0xfffd8f01
 8014818:	00027100 	.word	0x00027100
 801481c:	0004e1ff 	.word	0x0004e1ff
 8014820:	0004e1fe 	.word	0x0004e1fe
 8014824:	20012da4 	.word	0x20012da4
 8014828:	4613      	mov	r3, r2
 801482a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801482c:	9111      	str	r1, [sp, #68]	; 0x44
 801482e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8014832:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8014836:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8014838:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801483c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8014840:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8014844:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8014848:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801484c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8014850:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014854:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8014858:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801485c:	469e      	mov	lr, r3
 801485e:	469c      	mov	ip, r3
 8014860:	f04f 0900 	mov.w	r9, #0
 8014864:	f1bc 0f00 	cmp.w	ip, #0
 8014868:	d147      	bne.n	80148fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801486a:	eb03 0c07 	add.w	ip, r3, r7
 801486e:	1ad7      	subs	r7, r2, r3
 8014870:	f1b9 0f00 	cmp.w	r9, #0
 8014874:	d009      	beq.n	801488a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014876:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801487a:	9029      	str	r0, [sp, #164]	; 0xa4
 801487c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014880:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8014884:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014888:	912d      	str	r1, [sp, #180]	; 0xb4
 801488a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801488c:	9111      	str	r1, [sp, #68]	; 0x44
 801488e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014892:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014896:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801489a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801489e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80148a2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80148a6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80148aa:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80148ae:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80148b2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80148b6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80148ba:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80148be:	f04f 0800 	mov.w	r8, #0
 80148c2:	f1be 0f00 	cmp.w	lr, #0
 80148c6:	d031      	beq.n	801492c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80148c8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80148ca:	4431      	add	r1, r6
 80148cc:	4549      	cmp	r1, r9
 80148ce:	4450      	add	r0, sl
 80148d0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80148d4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80148d8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80148dc:	db08      	blt.n	80148f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80148de:	ee77 7a85 	vadd.f32	s15, s15, s10
 80148e2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80148e6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80148ea:	3001      	adds	r0, #1
 80148ec:	eba1 0109 	sub.w	r1, r1, r9
 80148f0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80148f4:	f04f 0801 	mov.w	r8, #1
 80148f8:	e7e3      	b.n	80148c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80148fa:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80148fc:	4431      	add	r1, r6
 80148fe:	4541      	cmp	r1, r8
 8014900:	4450      	add	r0, sl
 8014902:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014906:	ee77 7a84 	vadd.f32	s15, s15, s8
 801490a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801490e:	db08      	blt.n	8014922 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8014910:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014914:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014918:	ee77 7a86 	vadd.f32	s15, s15, s12
 801491c:	3001      	adds	r0, #1
 801491e:	eba1 0108 	sub.w	r1, r1, r8
 8014922:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014926:	f04f 0901 	mov.w	r9, #1
 801492a:	e79b      	b.n	8014864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801492c:	449c      	add	ip, r3
 801492e:	1aff      	subs	r7, r7, r3
 8014930:	f1b8 0f00 	cmp.w	r8, #0
 8014934:	d009      	beq.n	801494a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014936:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801493a:	9019      	str	r0, [sp, #100]	; 0x64
 801493c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014940:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014944:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014948:	911d      	str	r1, [sp, #116]	; 0x74
 801494a:	1ad2      	subs	r2, r2, r3
 801494c:	e68b      	b.n	8014666 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801494e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014950:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8014952:	2b00      	cmp	r3, #0
 8014954:	f000 80d1 	beq.w	8014afa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014958:	ad19      	add	r5, sp, #100	; 0x64
 801495a:	ac39      	add	r4, sp, #228	; 0xe4
 801495c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801495e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014962:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014966:	930c      	str	r3, [sp, #48]	; 0x30
 8014968:	990c      	ldr	r1, [sp, #48]	; 0x30
 801496a:	6963      	ldr	r3, [r4, #20]
 801496c:	440b      	add	r3, r1
 801496e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014972:	4408      	add	r0, r1
 8014974:	b200      	sxth	r0, r0
 8014976:	4283      	cmp	r3, r0
 8014978:	900d      	str	r0, [sp, #52]	; 0x34
 801497a:	f280 80c1 	bge.w	8014b00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801497e:	428b      	cmp	r3, r1
 8014980:	da08      	bge.n	8014994 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014982:	2a00      	cmp	r2, #0
 8014984:	dd06      	ble.n	8014994 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014986:	1acb      	subs	r3, r1, r3
 8014988:	429a      	cmp	r2, r3
 801498a:	f2c0 80bb 	blt.w	8014b04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801498e:	2b00      	cmp	r3, #0
 8014990:	f300 80b9 	bgt.w	8014b06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014994:	6967      	ldr	r7, [r4, #20]
 8014996:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014998:	443b      	add	r3, r7
 801499a:	461f      	mov	r7, r3
 801499c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801499e:	1bdf      	subs	r7, r3, r7
 80149a0:	4297      	cmp	r7, r2
 80149a2:	bfa8      	it	ge
 80149a4:	4617      	movge	r7, r2
 80149a6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80149aa:	2f00      	cmp	r7, #0
 80149ac:	f340 813c 	ble.w	8014c28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80149b0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80149b2:	6829      	ldr	r1, [r5, #0]
 80149b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80149b8:	f9bb 3000 	ldrsh.w	r3, [fp]
 80149bc:	6820      	ldr	r0, [r4, #0]
 80149be:	4411      	add	r1, r2
 80149c0:	4299      	cmp	r1, r3
 80149c2:	dd1a      	ble.n	80149fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80149c4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80149c8:	440b      	add	r3, r1
 80149ca:	4402      	add	r2, r0
 80149cc:	b21b      	sxth	r3, r3
 80149ce:	429a      	cmp	r2, r3
 80149d0:	dc13      	bgt.n	80149fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80149d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80149d4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80149d6:	681b      	ldr	r3, [r3, #0]
 80149d8:	9206      	str	r2, [sp, #24]
 80149da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80149dc:	9205      	str	r2, [sp, #20]
 80149de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80149e0:	9500      	str	r5, [sp, #0]
 80149e2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80149e6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80149e8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80149ea:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80149ee:	a912      	add	r1, sp, #72	; 0x48
 80149f0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80149f4:	aa49      	add	r2, sp, #292	; 0x124
 80149f6:	4623      	mov	r3, r4
 80149f8:	47c8      	blx	r9
 80149fa:	e9d4 2300 	ldrd	r2, r3, [r4]
 80149fe:	441a      	add	r2, r3
 8014a00:	6963      	ldr	r3, [r4, #20]
 8014a02:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014a06:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014a0a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014a0e:	68a1      	ldr	r1, [r4, #8]
 8014a10:	ed94 6a08 	vldr	s12, [r4, #32]
 8014a14:	6022      	str	r2, [r4, #0]
 8014a16:	3301      	adds	r3, #1
 8014a18:	6163      	str	r3, [r4, #20]
 8014a1a:	69a3      	ldr	r3, [r4, #24]
 8014a1c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014a20:	3b01      	subs	r3, #1
 8014a22:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014a26:	61a3      	str	r3, [r4, #24]
 8014a28:	6923      	ldr	r3, [r4, #16]
 8014a2a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014a2e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014a32:	edd4 6a07 	vldr	s13, [r4, #28]
 8014a36:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014a3a:	440b      	add	r3, r1
 8014a3c:	68e1      	ldr	r1, [r4, #12]
 8014a3e:	6123      	str	r3, [r4, #16]
 8014a40:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014a44:	428b      	cmp	r3, r1
 8014a46:	edc4 6a07 	vstr	s13, [r4, #28]
 8014a4a:	db15      	blt.n	8014a78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8014a4c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014a50:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014a54:	3201      	adds	r2, #1
 8014a56:	edc4 6a07 	vstr	s13, [r4, #28]
 8014a5a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014a5e:	6022      	str	r2, [r4, #0]
 8014a60:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014a64:	1a5b      	subs	r3, r3, r1
 8014a66:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014a6a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014a6e:	6123      	str	r3, [r4, #16]
 8014a70:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014a74:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014a78:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014a7c:	441a      	add	r2, r3
 8014a7e:	696b      	ldr	r3, [r5, #20]
 8014a80:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014a84:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014a88:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014a8c:	68a9      	ldr	r1, [r5, #8]
 8014a8e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014a92:	602a      	str	r2, [r5, #0]
 8014a94:	3301      	adds	r3, #1
 8014a96:	616b      	str	r3, [r5, #20]
 8014a98:	69ab      	ldr	r3, [r5, #24]
 8014a9a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014a9e:	3b01      	subs	r3, #1
 8014aa0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014aa4:	61ab      	str	r3, [r5, #24]
 8014aa6:	692b      	ldr	r3, [r5, #16]
 8014aa8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014aac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014ab0:	edd5 6a07 	vldr	s13, [r5, #28]
 8014ab4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014ab8:	440b      	add	r3, r1
 8014aba:	68e9      	ldr	r1, [r5, #12]
 8014abc:	612b      	str	r3, [r5, #16]
 8014abe:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014ac2:	428b      	cmp	r3, r1
 8014ac4:	edc5 6a07 	vstr	s13, [r5, #28]
 8014ac8:	db15      	blt.n	8014af6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8014aca:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014ace:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014ad2:	3201      	adds	r2, #1
 8014ad4:	edc5 6a07 	vstr	s13, [r5, #28]
 8014ad8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014adc:	602a      	str	r2, [r5, #0]
 8014ade:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014ae2:	1a5b      	subs	r3, r3, r1
 8014ae4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014ae8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014aec:	612b      	str	r3, [r5, #16]
 8014aee:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014af2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014af6:	3f01      	subs	r7, #1
 8014af8:	e757      	b.n	80149aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8014afa:	ad39      	add	r5, sp, #228	; 0xe4
 8014afc:	ac19      	add	r4, sp, #100	; 0x64
 8014afe:	e72d      	b.n	801495c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014b00:	4613      	mov	r3, r2
 8014b02:	e744      	b.n	801498e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014b04:	4613      	mov	r3, r2
 8014b06:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014b0a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014b0c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014b10:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014b14:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014b18:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014b1c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014b20:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014b24:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014b28:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8014b2a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014b2e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014b32:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014b36:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8014b3a:	960e      	str	r6, [sp, #56]	; 0x38
 8014b3c:	469e      	mov	lr, r3
 8014b3e:	461f      	mov	r7, r3
 8014b40:	f04f 0900 	mov.w	r9, #0
 8014b44:	2f00      	cmp	r7, #0
 8014b46:	d146      	bne.n	8014bd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014b48:	449c      	add	ip, r3
 8014b4a:	1ad7      	subs	r7, r2, r3
 8014b4c:	f1b9 0f00 	cmp.w	r9, #0
 8014b50:	d009      	beq.n	8014b66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014b52:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014b56:	9039      	str	r0, [sp, #228]	; 0xe4
 8014b58:	913d      	str	r1, [sp, #244]	; 0xf4
 8014b5a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014b5e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014b62:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014b66:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014b68:	910e      	str	r1, [sp, #56]	; 0x38
 8014b6a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014b6e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014b72:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014b76:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014b7a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014b7e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014b82:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014b86:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014b8a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014b8e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014b92:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014b96:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014b9a:	f04f 0800 	mov.w	r8, #0
 8014b9e:	f1be 0f00 	cmp.w	lr, #0
 8014ba2:	d030      	beq.n	8014c06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014ba4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014ba6:	4431      	add	r1, r6
 8014ba8:	4549      	cmp	r1, r9
 8014baa:	4450      	add	r0, sl
 8014bac:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014bb0:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014bb4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014bb8:	db08      	blt.n	8014bcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014bba:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014bbe:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014bc2:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014bc6:	3001      	adds	r0, #1
 8014bc8:	eba1 0109 	sub.w	r1, r1, r9
 8014bcc:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014bd0:	f04f 0801 	mov.w	r8, #1
 8014bd4:	e7e3      	b.n	8014b9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014bd6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014bd8:	4431      	add	r1, r6
 8014bda:	4541      	cmp	r1, r8
 8014bdc:	4450      	add	r0, sl
 8014bde:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014be2:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014be6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014bea:	db08      	blt.n	8014bfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014bec:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014bf0:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014bf4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014bf8:	3001      	adds	r0, #1
 8014bfa:	eba1 0108 	sub.w	r1, r1, r8
 8014bfe:	3f01      	subs	r7, #1
 8014c00:	f04f 0901 	mov.w	r9, #1
 8014c04:	e79e      	b.n	8014b44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014c06:	449c      	add	ip, r3
 8014c08:	1aff      	subs	r7, r7, r3
 8014c0a:	f1b8 0f00 	cmp.w	r8, #0
 8014c0e:	d009      	beq.n	8014c24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014c10:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014c14:	9019      	str	r0, [sp, #100]	; 0x64
 8014c16:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014c1a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014c1e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014c22:	911d      	str	r1, [sp, #116]	; 0x74
 8014c24:	1ad2      	subs	r2, r2, r3
 8014c26:	e6b5      	b.n	8014994 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014c28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014c2a:	681b      	ldr	r3, [r3, #0]
 8014c2c:	b923      	cbnz	r3, 8014c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014c2e:	4b04      	ldr	r3, [pc, #16]	; (8014c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014c30:	6818      	ldr	r0, [r3, #0]
 8014c32:	6803      	ldr	r3, [r0, #0]
 8014c34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014c36:	4798      	blx	r3
 8014c38:	b05b      	add	sp, #364	; 0x16c
 8014c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c3e:	bf00      	nop
 8014c40:	20012da4 	.word	0x20012da4

08014c44 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014c44:	b570      	push	{r4, r5, r6, lr}
 8014c46:	4604      	mov	r4, r0
 8014c48:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8014c4c:	9805      	ldr	r0, [sp, #20]
 8014c4e:	6061      	str	r1, [r4, #4]
 8014c50:	2500      	movs	r5, #0
 8014c52:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014c56:	8263      	strh	r3, [r4, #18]
 8014c58:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014c5c:	8025      	strh	r5, [r4, #0]
 8014c5e:	7221      	strb	r1, [r4, #8]
 8014c60:	7266      	strb	r6, [r4, #9]
 8014c62:	60e0      	str	r0, [r4, #12]
 8014c64:	8222      	strh	r2, [r4, #16]
 8014c66:	82a3      	strh	r3, [r4, #20]
 8014c68:	82e5      	strh	r5, [r4, #22]
 8014c6a:	8325      	strh	r5, [r4, #24]
 8014c6c:	8365      	strh	r5, [r4, #26]
 8014c6e:	83a5      	strh	r5, [r4, #28]
 8014c70:	83e5      	strh	r5, [r4, #30]
 8014c72:	8425      	strh	r5, [r4, #32]
 8014c74:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014c78:	b32e      	cbz	r6, 8014cc6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014c7a:	6803      	ldr	r3, [r0, #0]
 8014c7c:	695b      	ldr	r3, [r3, #20]
 8014c7e:	4798      	blx	r3
 8014c80:	4606      	mov	r6, r0
 8014c82:	b300      	cbz	r0, 8014cc6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014c84:	68e0      	ldr	r0, [r4, #12]
 8014c86:	6803      	ldr	r3, [r0, #0]
 8014c88:	4631      	mov	r1, r6
 8014c8a:	68db      	ldr	r3, [r3, #12]
 8014c8c:	4798      	blx	r3
 8014c8e:	4605      	mov	r5, r0
 8014c90:	b1c8      	cbz	r0, 8014cc6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014c92:	7b43      	ldrb	r3, [r0, #13]
 8014c94:	7a82      	ldrb	r2, [r0, #10]
 8014c96:	005b      	lsls	r3, r3, #1
 8014c98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014c9c:	4313      	orrs	r3, r2
 8014c9e:	8423      	strh	r3, [r4, #32]
 8014ca0:	7a63      	ldrb	r3, [r4, #9]
 8014ca2:	2b06      	cmp	r3, #6
 8014ca4:	d10f      	bne.n	8014cc6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014ca6:	68e0      	ldr	r0, [r4, #12]
 8014ca8:	6803      	ldr	r3, [r0, #0]
 8014caa:	462a      	mov	r2, r5
 8014cac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014cae:	4631      	mov	r1, r6
 8014cb0:	4798      	blx	r3
 8014cb2:	7b6b      	ldrb	r3, [r5, #13]
 8014cb4:	005b      	lsls	r3, r3, #1
 8014cb6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014cba:	7aab      	ldrb	r3, [r5, #10]
 8014cbc:	4313      	orrs	r3, r2
 8014cbe:	4418      	add	r0, r3
 8014cc0:	8c23      	ldrh	r3, [r4, #32]
 8014cc2:	4418      	add	r0, r3
 8014cc4:	8420      	strh	r0, [r4, #32]
 8014cc6:	4620      	mov	r0, r4
 8014cc8:	bd70      	pop	{r4, r5, r6, pc}

08014cca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8014cca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cce:	2400      	movs	r4, #0
 8014cd0:	b085      	sub	sp, #20
 8014cd2:	4681      	mov	r9, r0
 8014cd4:	4688      	mov	r8, r1
 8014cd6:	4692      	mov	sl, r2
 8014cd8:	469b      	mov	fp, r3
 8014cda:	4627      	mov	r7, r4
 8014cdc:	4625      	mov	r5, r4
 8014cde:	4626      	mov	r6, r4
 8014ce0:	4554      	cmp	r4, sl
 8014ce2:	da2a      	bge.n	8014d3a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014ce4:	2300      	movs	r3, #0
 8014ce6:	9303      	str	r3, [sp, #12]
 8014ce8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014cec:	429d      	cmp	r5, r3
 8014cee:	d004      	beq.n	8014cfa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014cf0:	f242 030b 	movw	r3, #8203	; 0x200b
 8014cf4:	429d      	cmp	r5, r3
 8014cf6:	bf18      	it	ne
 8014cf8:	462f      	movne	r7, r5
 8014cfa:	ab03      	add	r3, sp, #12
 8014cfc:	4642      	mov	r2, r8
 8014cfe:	4659      	mov	r1, fp
 8014d00:	4648      	mov	r0, r9
 8014d02:	f003 f965 	bl	8017fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014d06:	4605      	mov	r5, r0
 8014d08:	b1b8      	cbz	r0, 8014d3a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014d0a:	280a      	cmp	r0, #10
 8014d0c:	d015      	beq.n	8014d3a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014d0e:	9a03      	ldr	r2, [sp, #12]
 8014d10:	b18a      	cbz	r2, 8014d36 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014d12:	7b50      	ldrb	r0, [r2, #13]
 8014d14:	7a93      	ldrb	r3, [r2, #10]
 8014d16:	8895      	ldrh	r5, [r2, #4]
 8014d18:	0040      	lsls	r0, r0, #1
 8014d1a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014d1e:	4303      	orrs	r3, r0
 8014d20:	9301      	str	r3, [sp, #4]
 8014d22:	f8d8 3000 	ldr.w	r3, [r8]
 8014d26:	4639      	mov	r1, r7
 8014d28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014d2a:	4640      	mov	r0, r8
 8014d2c:	4798      	blx	r3
 8014d2e:	9b01      	ldr	r3, [sp, #4]
 8014d30:	4418      	add	r0, r3
 8014d32:	4406      	add	r6, r0
 8014d34:	b2b6      	uxth	r6, r6
 8014d36:	3401      	adds	r4, #1
 8014d38:	e7d2      	b.n	8014ce0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8014d3a:	4630      	mov	r0, r6
 8014d3c:	b005      	add	sp, #20
 8014d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014d42 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014d42:	2a02      	cmp	r2, #2
 8014d44:	b530      	push	{r4, r5, lr}
 8014d46:	d011      	beq.n	8014d6c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014d48:	2a03      	cmp	r2, #3
 8014d4a:	d01c      	beq.n	8014d86 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014d4c:	2a01      	cmp	r2, #1
 8014d4e:	d10c      	bne.n	8014d6a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014d50:	888b      	ldrh	r3, [r1, #4]
 8014d52:	8801      	ldrh	r1, [r0, #0]
 8014d54:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014d58:	8844      	ldrh	r4, [r0, #2]
 8014d5a:	8004      	strh	r4, [r0, #0]
 8014d5c:	1a5b      	subs	r3, r3, r1
 8014d5e:	1a9b      	subs	r3, r3, r2
 8014d60:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014d64:	8043      	strh	r3, [r0, #2]
 8014d66:	8081      	strh	r1, [r0, #4]
 8014d68:	80c2      	strh	r2, [r0, #6]
 8014d6a:	bd30      	pop	{r4, r5, pc}
 8014d6c:	88cb      	ldrh	r3, [r1, #6]
 8014d6e:	8842      	ldrh	r2, [r0, #2]
 8014d70:	1a9b      	subs	r3, r3, r2
 8014d72:	88c2      	ldrh	r2, [r0, #6]
 8014d74:	1a9b      	subs	r3, r3, r2
 8014d76:	888a      	ldrh	r2, [r1, #4]
 8014d78:	8801      	ldrh	r1, [r0, #0]
 8014d7a:	8043      	strh	r3, [r0, #2]
 8014d7c:	1a52      	subs	r2, r2, r1
 8014d7e:	8881      	ldrh	r1, [r0, #4]
 8014d80:	1a52      	subs	r2, r2, r1
 8014d82:	8002      	strh	r2, [r0, #0]
 8014d84:	e7f1      	b.n	8014d6a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014d86:	88cb      	ldrh	r3, [r1, #6]
 8014d88:	8841      	ldrh	r1, [r0, #2]
 8014d8a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014d8e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014d92:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014d96:	8045      	strh	r5, [r0, #2]
 8014d98:	1a5b      	subs	r3, r3, r1
 8014d9a:	1a9b      	subs	r3, r3, r2
 8014d9c:	8003      	strh	r3, [r0, #0]
 8014d9e:	8082      	strh	r2, [r0, #4]
 8014da0:	80c4      	strh	r4, [r0, #6]
 8014da2:	e7e2      	b.n	8014d6a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014da4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014da8:	b09f      	sub	sp, #124	; 0x7c
 8014daa:	9116      	str	r1, [sp, #88]	; 0x58
 8014dac:	9317      	str	r3, [sp, #92]	; 0x5c
 8014dae:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014db0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014db2:	8809      	ldrh	r1, [r1, #0]
 8014db4:	889b      	ldrh	r3, [r3, #4]
 8014db6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014dba:	9212      	str	r2, [sp, #72]	; 0x48
 8014dbc:	440b      	add	r3, r1
 8014dbe:	b21b      	sxth	r3, r3
 8014dc0:	9310      	str	r3, [sp, #64]	; 0x40
 8014dc2:	f8d8 3000 	ldr.w	r3, [r8]
 8014dc6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014dca:	7b19      	ldrb	r1, [r3, #12]
 8014dcc:	7adb      	ldrb	r3, [r3, #11]
 8014dce:	9011      	str	r0, [sp, #68]	; 0x44
 8014dd0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014dd4:	9114      	str	r1, [sp, #80]	; 0x50
 8014dd6:	9315      	str	r3, [sp, #84]	; 0x54
 8014dd8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014ddc:	2a00      	cmp	r2, #0
 8014dde:	d06a      	beq.n	8014eb6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014de0:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014de4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014de6:	2b06      	cmp	r3, #6
 8014de8:	bf14      	ite	ne
 8014dea:	2301      	movne	r3, #1
 8014dec:	2302      	moveq	r3, #2
 8014dee:	4413      	add	r3, r2
 8014df0:	f04f 0900 	mov.w	r9, #0
 8014df4:	930f      	str	r3, [sp, #60]	; 0x3c
 8014df6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014dfa:	464c      	mov	r4, r9
 8014dfc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014e00:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014e04:	4293      	cmp	r3, r2
 8014e06:	f280 808f 	bge.w	8014f28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014e0a:	2300      	movs	r3, #0
 8014e0c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014e10:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014e14:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014e18:	429c      	cmp	r4, r3
 8014e1a:	d006      	beq.n	8014e2a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8014e1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e1e:	f242 020b 	movw	r2, #8203	; 0x200b
 8014e22:	4294      	cmp	r4, r2
 8014e24:	bf18      	it	ne
 8014e26:	4623      	movne	r3, r4
 8014e28:	930d      	str	r3, [sp, #52]	; 0x34
 8014e2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014e2c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8014e2e:	f8d8 2000 	ldr.w	r2, [r8]
 8014e32:	428b      	cmp	r3, r1
 8014e34:	db41      	blt.n	8014eba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014e36:	6813      	ldr	r3, [r2, #0]
 8014e38:	4610      	mov	r0, r2
 8014e3a:	695b      	ldr	r3, [r3, #20]
 8014e3c:	4798      	blx	r3
 8014e3e:	4604      	mov	r4, r0
 8014e40:	f8d8 0000 	ldr.w	r0, [r8]
 8014e44:	6803      	ldr	r3, [r0, #0]
 8014e46:	aa1d      	add	r2, sp, #116	; 0x74
 8014e48:	689d      	ldr	r5, [r3, #8]
 8014e4a:	4621      	mov	r1, r4
 8014e4c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014e50:	47a8      	blx	r5
 8014e52:	901c      	str	r0, [sp, #112]	; 0x70
 8014e54:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014e58:	429c      	cmp	r4, r3
 8014e5a:	f000 80eb 	beq.w	8015034 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014e5e:	f242 030b 	movw	r3, #8203	; 0x200b
 8014e62:	429c      	cmp	r4, r3
 8014e64:	f000 80e6 	beq.w	8015034 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014e68:	2c00      	cmp	r4, #0
 8014e6a:	f000 80f8 	beq.w	801505e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014e6e:	2c0a      	cmp	r4, #10
 8014e70:	d060      	beq.n	8014f34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014e72:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014e74:	b36a      	cbz	r2, 8014ed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014e76:	8894      	ldrh	r4, [r2, #4]
 8014e78:	f1bb 0f00 	cmp.w	fp, #0
 8014e7c:	d03b      	beq.n	8014ef6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8014e7e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014e82:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014e86:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014e8a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8014e8e:	f1bb 0f01 	cmp.w	fp, #1
 8014e92:	ea49 0903 	orr.w	r9, r9, r3
 8014e96:	d134      	bne.n	8014f02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014e98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e9a:	eba6 0609 	sub.w	r6, r6, r9
 8014e9e:	2b00      	cmp	r3, #0
 8014ea0:	d14f      	bne.n	8014f42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014ea2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014ea4:	eb09 0306 	add.w	r3, r9, r6
 8014ea8:	4413      	add	r3, r2
 8014eaa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014eac:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014eb0:	4293      	cmp	r3, r2
 8014eb2:	da51      	bge.n	8014f58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014eb4:	e038      	b.n	8014f28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014eb6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014eb8:	e79a      	b.n	8014df0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8014eba:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014ebe:	9301      	str	r3, [sp, #4]
 8014ec0:	ab1d      	add	r3, sp, #116	; 0x74
 8014ec2:	9300      	str	r3, [sp, #0]
 8014ec4:	4659      	mov	r1, fp
 8014ec6:	ab1c      	add	r3, sp, #112	; 0x70
 8014ec8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014eca:	f003 f8ca 	bl	8018062 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8014ece:	4604      	mov	r4, r0
 8014ed0:	e7c0      	b.n	8014e54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014ed2:	f8d8 0000 	ldr.w	r0, [r8]
 8014ed6:	6803      	ldr	r3, [r0, #0]
 8014ed8:	691b      	ldr	r3, [r3, #16]
 8014eda:	4798      	blx	r3
 8014edc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014ee0:	4298      	cmp	r0, r3
 8014ee2:	f000 80a7 	beq.w	8015034 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014ee6:	f242 030b 	movw	r3, #8203	; 0x200b
 8014eea:	4298      	cmp	r0, r3
 8014eec:	f000 80a2 	beq.w	8015034 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014ef0:	f1bb 0f00 	cmp.w	fp, #0
 8014ef4:	d100      	bne.n	8014ef8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014ef6:	444e      	add	r6, r9
 8014ef8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014efa:	2a00      	cmp	r2, #0
 8014efc:	d1bf      	bne.n	8014e7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8014efe:	4691      	mov	r9, r2
 8014f00:	e098      	b.n	8015034 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014f04:	2b00      	cmp	r3, #0
 8014f06:	f000 80ac 	beq.w	8015062 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8014f0a:	f1bb 0f00 	cmp.w	fp, #0
 8014f0e:	d118      	bne.n	8014f42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014f10:	f8d8 0000 	ldr.w	r0, [r8]
 8014f14:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014f16:	6803      	ldr	r3, [r0, #0]
 8014f18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014f1a:	4798      	blx	r3
 8014f1c:	4406      	add	r6, r0
 8014f1e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014f20:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014f22:	1af3      	subs	r3, r6, r3
 8014f24:	4293      	cmp	r3, r2
 8014f26:	dd17      	ble.n	8014f58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014f28:	2c00      	cmp	r4, #0
 8014f2a:	f000 8098 	beq.w	801505e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014f2e:	2c0a      	cmp	r4, #10
 8014f30:	f040 8086 	bne.w	8015040 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8014f34:	240a      	movs	r4, #10
 8014f36:	fab4 f084 	clz	r0, r4
 8014f3a:	0940      	lsrs	r0, r0, #5
 8014f3c:	b01f      	add	sp, #124	; 0x7c
 8014f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f42:	f8d8 0000 	ldr.w	r0, [r8]
 8014f46:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014f48:	6803      	ldr	r3, [r0, #0]
 8014f4a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014f4c:	4798      	blx	r3
 8014f4e:	f1bb 0f01 	cmp.w	fp, #1
 8014f52:	eba6 0600 	sub.w	r6, r6, r0
 8014f56:	d0a4      	beq.n	8014ea2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014f58:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014f5a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014f5c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014f60:	f9b3 7000 	ldrsh.w	r7, [r3]
 8014f64:	7b43      	ldrb	r3, [r0, #13]
 8014f66:	015b      	lsls	r3, r3, #5
 8014f68:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014f6c:	7983      	ldrb	r3, [r0, #6]
 8014f6e:	4431      	add	r1, r6
 8014f70:	4313      	orrs	r3, r2
 8014f72:	440b      	add	r3, r1
 8014f74:	42bb      	cmp	r3, r7
 8014f76:	db5d      	blt.n	8015034 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f7a:	4299      	cmp	r1, r3
 8014f7c:	da5a      	bge.n	8015034 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f7e:	f8d8 0000 	ldr.w	r0, [r8]
 8014f82:	6803      	ldr	r3, [r0, #0]
 8014f84:	42b7      	cmp	r7, r6
 8014f86:	bfc8      	it	gt
 8014f88:	1bbf      	subgt	r7, r7, r6
 8014f8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014f8c:	bfcc      	ite	gt
 8014f8e:	b2bf      	uxthgt	r7, r7
 8014f90:	2700      	movle	r7, #0
 8014f92:	4798      	blx	r3
 8014f94:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014f96:	7b5a      	ldrb	r2, [r3, #13]
 8014f98:	00d1      	lsls	r1, r2, #3
 8014f9a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8014f9e:	7a19      	ldrb	r1, [r3, #8]
 8014fa0:	4329      	orrs	r1, r5
 8014fa2:	0655      	lsls	r5, r2, #25
 8014fa4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014fa6:	bf44      	itt	mi
 8014fa8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8014fac:	b209      	sxthmi	r1, r1
 8014fae:	1945      	adds	r5, r0, r5
 8014fb0:	1a6d      	subs	r5, r5, r1
 8014fb2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014fb4:	b2ad      	uxth	r5, r5
 8014fb6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8014fba:	fa0f fa85 	sxth.w	sl, r5
 8014fbe:	4551      	cmp	r1, sl
 8014fc0:	dd3c      	ble.n	801503c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014fc2:	0112      	lsls	r2, r2, #4
 8014fc4:	79d8      	ldrb	r0, [r3, #7]
 8014fc6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8014fca:	4302      	orrs	r2, r0
 8014fcc:	4492      	add	sl, r2
 8014fce:	4551      	cmp	r1, sl
 8014fd0:	dc30      	bgt.n	8015034 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014fd2:	1b4d      	subs	r5, r1, r5
 8014fd4:	b22d      	sxth	r5, r5
 8014fd6:	468a      	mov	sl, r1
 8014fd8:	9319      	str	r3, [sp, #100]	; 0x64
 8014fda:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014fdc:	f8d8 0000 	ldr.w	r0, [r8]
 8014fe0:	681a      	ldr	r2, [r3, #0]
 8014fe2:	6801      	ldr	r1, [r0, #0]
 8014fe4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014fe6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014fe8:	9313      	str	r3, [sp, #76]	; 0x4c
 8014fea:	9218      	str	r2, [sp, #96]	; 0x60
 8014fec:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8014fee:	4788      	blx	r1
 8014ff0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014ff4:	910b      	str	r1, [sp, #44]	; 0x2c
 8014ff6:	f898 100e 	ldrb.w	r1, [r8, #14]
 8014ffa:	910a      	str	r1, [sp, #40]	; 0x28
 8014ffc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015000:	9109      	str	r1, [sp, #36]	; 0x24
 8015002:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015006:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015008:	9305      	str	r3, [sp, #20]
 801500a:	b2ad      	uxth	r5, r5
 801500c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015010:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8015014:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015016:	9304      	str	r3, [sp, #16]
 8015018:	4437      	add	r7, r6
 801501a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801501c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801501e:	9206      	str	r2, [sp, #24]
 8015020:	b23f      	sxth	r7, r7
 8015022:	f8cd a004 	str.w	sl, [sp, #4]
 8015026:	9700      	str	r7, [sp, #0]
 8015028:	681a      	ldr	r2, [r3, #0]
 801502a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801502c:	685b      	ldr	r3, [r3, #4]
 801502e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015030:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015032:	47a8      	blx	r5
 8015034:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015036:	3301      	adds	r3, #1
 8015038:	930e      	str	r3, [sp, #56]	; 0x38
 801503a:	e6e1      	b.n	8014e00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801503c:	2500      	movs	r5, #0
 801503e:	e7cb      	b.n	8014fd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8015040:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015042:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015044:	3501      	adds	r5, #1
 8015046:	429d      	cmp	r5, r3
 8015048:	f6bf af75 	bge.w	8014f36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801504c:	4659      	mov	r1, fp
 801504e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015050:	f7f3 ff4e 	bl	8008ef0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015054:	4604      	mov	r4, r0
 8015056:	b110      	cbz	r0, 801505e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015058:	280a      	cmp	r0, #10
 801505a:	d1f2      	bne.n	8015042 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801505c:	e76a      	b.n	8014f34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801505e:	2400      	movs	r4, #0
 8015060:	e769      	b.n	8014f36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015062:	f1bb 0f00 	cmp.w	fp, #0
 8015066:	f43f af5a 	beq.w	8014f1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801506a:	e775      	b.n	8014f58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801506c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801506c:	b530      	push	{r4, r5, lr}
 801506e:	8ac4      	ldrh	r4, [r0, #22]
 8015070:	8b45      	ldrh	r5, [r0, #26]
 8015072:	8343      	strh	r3, [r0, #26]
 8015074:	442c      	add	r4, r5
 8015076:	1ae4      	subs	r4, r4, r3
 8015078:	82c4      	strh	r4, [r0, #22]
 801507a:	8b83      	ldrh	r3, [r0, #28]
 801507c:	8b04      	ldrh	r4, [r0, #24]
 801507e:	4422      	add	r2, r4
 8015080:	440c      	add	r4, r1
 8015082:	1a59      	subs	r1, r3, r1
 8015084:	83c2      	strh	r2, [r0, #30]
 8015086:	8304      	strh	r4, [r0, #24]
 8015088:	8381      	strh	r1, [r0, #28]
 801508a:	bd30      	pop	{r4, r5, pc}

0801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801508c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015090:	4604      	mov	r4, r0
 8015092:	8a47      	ldrh	r7, [r0, #18]
 8015094:	68c0      	ldr	r0, [r0, #12]
 8015096:	6803      	ldr	r3, [r0, #0]
 8015098:	b085      	sub	sp, #20
 801509a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801509c:	4798      	blx	r3
 801509e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80150a2:	7a63      	ldrb	r3, [r4, #9]
 80150a4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80150a8:	42b7      	cmp	r7, r6
 80150aa:	f103 33ff 	add.w	r3, r3, #4294967295
 80150ae:	bfac      	ite	ge
 80150b0:	f04f 0900 	movge.w	r9, #0
 80150b4:	f04f 0901 	movlt.w	r9, #1
 80150b8:	2b05      	cmp	r3, #5
 80150ba:	d804      	bhi.n	80150c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80150bc:	e8df f003 	tbb	[pc, r3]
 80150c0:	470e0854 	.word	0x470e0854
 80150c4:	4c4c      	.short	0x4c4c
 80150c6:	2500      	movs	r5, #0
 80150c8:	46a9      	mov	r9, r5
 80150ca:	462e      	mov	r6, r5
 80150cc:	462f      	mov	r7, r5
 80150ce:	e00d      	b.n	80150ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80150d0:	42b7      	cmp	r7, r6
 80150d2:	bfb4      	ite	lt
 80150d4:	2600      	movlt	r6, #0
 80150d6:	2601      	movge	r6, #1
 80150d8:	2500      	movs	r5, #0
 80150da:	e7f7      	b.n	80150cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80150dc:	42b7      	cmp	r7, r6
 80150de:	464d      	mov	r5, r9
 80150e0:	f04f 0900 	mov.w	r9, #0
 80150e4:	bfb4      	ite	lt
 80150e6:	2600      	movlt	r6, #0
 80150e8:	2601      	movge	r6, #1
 80150ea:	464f      	mov	r7, r9
 80150ec:	f04f 0800 	mov.w	r8, #0
 80150f0:	f8a4 8016 	strh.w	r8, [r4, #22]
 80150f4:	f8a4 8018 	strh.w	r8, [r4, #24]
 80150f8:	f8cd 8004 	str.w	r8, [sp, #4]
 80150fc:	2300      	movs	r3, #0
 80150fe:	9303      	str	r3, [sp, #12]
 8015100:	8823      	ldrh	r3, [r4, #0]
 8015102:	2b20      	cmp	r3, #32
 8015104:	d034      	beq.n	8015170 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015106:	f242 010b 	movw	r1, #8203	; 0x200b
 801510a:	1a5a      	subs	r2, r3, r1
 801510c:	f1d2 0a00 	rsbs	sl, r2, #0
 8015110:	eb4a 0a02 	adc.w	sl, sl, r2
 8015114:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015118:	4293      	cmp	r3, r2
 801511a:	d009      	beq.n	8015130 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801511c:	428b      	cmp	r3, r1
 801511e:	9a01      	ldr	r2, [sp, #4]
 8015120:	bf18      	it	ne
 8015122:	461a      	movne	r2, r3
 8015124:	9201      	str	r2, [sp, #4]
 8015126:	bf0c      	ite	eq
 8015128:	f04f 0a01 	moveq.w	sl, #1
 801512c:	f04f 0a00 	movne.w	sl, #0
 8015130:	ab03      	add	r3, sp, #12
 8015132:	68e2      	ldr	r2, [r4, #12]
 8015134:	7a21      	ldrb	r1, [r4, #8]
 8015136:	6860      	ldr	r0, [r4, #4]
 8015138:	f002 ff4a 	bl	8017fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801513c:	8020      	strh	r0, [r4, #0]
 801513e:	b9d8      	cbnz	r0, 8015178 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015140:	8ba2      	ldrh	r2, [r4, #28]
 8015142:	2300      	movs	r3, #0
 8015144:	4611      	mov	r1, r2
 8015146:	4620      	mov	r0, r4
 8015148:	f7ff ff90 	bl	801506c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801514c:	e06e      	b.n	801522c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801514e:	2500      	movs	r5, #0
 8015150:	46a9      	mov	r9, r5
 8015152:	462e      	mov	r6, r5
 8015154:	2701      	movs	r7, #1
 8015156:	e7c9      	b.n	80150ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015158:	42b7      	cmp	r7, r6
 801515a:	f04f 0500 	mov.w	r5, #0
 801515e:	bfb4      	ite	lt
 8015160:	2700      	movlt	r7, #0
 8015162:	2701      	movge	r7, #1
 8015164:	462e      	mov	r6, r5
 8015166:	e7c1      	b.n	80150ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015168:	2500      	movs	r5, #0
 801516a:	46a9      	mov	r9, r5
 801516c:	2601      	movs	r6, #1
 801516e:	e7ad      	b.n	80150cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015170:	9301      	str	r3, [sp, #4]
 8015172:	f04f 0a01 	mov.w	sl, #1
 8015176:	e7db      	b.n	8015130 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015178:	8b63      	ldrh	r3, [r4, #26]
 801517a:	280a      	cmp	r0, #10
 801517c:	f103 0301 	add.w	r3, r3, #1
 8015180:	8363      	strh	r3, [r4, #26]
 8015182:	d0dd      	beq.n	8015140 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015184:	9a03      	ldr	r2, [sp, #12]
 8015186:	bb62      	cbnz	r2, 80151e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015188:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801518c:	4298      	cmp	r0, r3
 801518e:	d003      	beq.n	8015198 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015190:	f242 030b 	movw	r3, #8203	; 0x200b
 8015194:	4298      	cmp	r0, r3
 8015196:	d1b1      	bne.n	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015198:	8823      	ldrh	r3, [r4, #0]
 801519a:	8ba1      	ldrh	r1, [r4, #28]
 801519c:	2b20      	cmp	r3, #32
 801519e:	d003      	beq.n	80151a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80151a0:	f242 000b 	movw	r0, #8203	; 0x200b
 80151a4:	4283      	cmp	r3, r0
 80151a6:	d131      	bne.n	801520c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80151a8:	f1ba 0f00 	cmp.w	sl, #0
 80151ac:	bf0a      	itet	eq
 80151ae:	4688      	moveq	r8, r1
 80151b0:	4650      	movne	r0, sl
 80151b2:	2001      	moveq	r0, #1
 80151b4:	440a      	add	r2, r1
 80151b6:	8b23      	ldrh	r3, [r4, #24]
 80151b8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80151bc:	b292      	uxth	r2, r2
 80151be:	83a2      	strh	r2, [r4, #28]
 80151c0:	4413      	add	r3, r2
 80151c2:	f1b9 0f00 	cmp.w	r9, #0
 80151c6:	d102      	bne.n	80151ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80151c8:	2d00      	cmp	r5, #0
 80151ca:	d042      	beq.n	8015252 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80151cc:	b300      	cbz	r0, 8015210 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80151ce:	8c21      	ldrh	r1, [r4, #32]
 80151d0:	4419      	add	r1, r3
 80151d2:	458c      	cmp	ip, r1
 80151d4:	da37      	bge.n	8015246 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80151d6:	8ae1      	ldrh	r1, [r4, #22]
 80151d8:	2900      	cmp	r1, #0
 80151da:	d034      	beq.n	8015246 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80151dc:	4563      	cmp	r3, ip
 80151de:	dd8d      	ble.n	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80151e0:	e01d      	b.n	801521e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80151e2:	8893      	ldrh	r3, [r2, #4]
 80151e4:	8023      	strh	r3, [r4, #0]
 80151e6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80151ea:	9901      	ldr	r1, [sp, #4]
 80151ec:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80151f0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80151f4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80151f8:	ea4b 0b00 	orr.w	fp, fp, r0
 80151fc:	68e0      	ldr	r0, [r4, #12]
 80151fe:	6803      	ldr	r3, [r0, #0]
 8015200:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015202:	4798      	blx	r3
 8015204:	eb0b 0200 	add.w	r2, fp, r0
 8015208:	b292      	uxth	r2, r2
 801520a:	e7c5      	b.n	8015198 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801520c:	2000      	movs	r0, #0
 801520e:	e7d1      	b.n	80151b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015210:	4563      	cmp	r3, ip
 8015212:	f77f af73 	ble.w	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015216:	8ae3      	ldrh	r3, [r4, #22]
 8015218:	2b00      	cmp	r3, #0
 801521a:	f43f af6f 	beq.w	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801521e:	2301      	movs	r3, #1
 8015220:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8015224:	8c22      	ldrh	r2, [r4, #32]
 8015226:	8be3      	ldrh	r3, [r4, #30]
 8015228:	4413      	add	r3, r2
 801522a:	83e3      	strh	r3, [r4, #30]
 801522c:	68e0      	ldr	r0, [r4, #12]
 801522e:	6803      	ldr	r3, [r0, #0]
 8015230:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015232:	4798      	blx	r3
 8015234:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015238:	4418      	add	r0, r3
 801523a:	8a63      	ldrh	r3, [r4, #18]
 801523c:	1a18      	subs	r0, r3, r0
 801523e:	8260      	strh	r0, [r4, #18]
 8015240:	b005      	add	sp, #20
 8015242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015246:	2300      	movs	r3, #0
 8015248:	4611      	mov	r1, r2
 801524a:	4620      	mov	r0, r4
 801524c:	f7ff ff0e 	bl	801506c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015250:	e754      	b.n	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015252:	4563      	cmp	r3, ip
 8015254:	dd14      	ble.n	8015280 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015256:	b117      	cbz	r7, 801525e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015258:	2301      	movs	r3, #1
 801525a:	460a      	mov	r2, r1
 801525c:	e772      	b.n	8015144 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801525e:	2e00      	cmp	r6, #0
 8015260:	f43f af4c 	beq.w	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015264:	2800      	cmp	r0, #0
 8015266:	f47f af49 	bne.w	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801526a:	f1ba 0f00 	cmp.w	sl, #0
 801526e:	d002      	beq.n	8015276 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015270:	2301      	movs	r3, #1
 8015272:	4642      	mov	r2, r8
 8015274:	e767      	b.n	8015146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015276:	8ae3      	ldrh	r3, [r4, #22]
 8015278:	2b00      	cmp	r3, #0
 801527a:	f43f af3f 	beq.w	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801527e:	e7d5      	b.n	801522c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015280:	2800      	cmp	r0, #0
 8015282:	f47f af3b 	bne.w	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015286:	f1ba 0f00 	cmp.w	sl, #0
 801528a:	f43f af37 	beq.w	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801528e:	2301      	movs	r3, #1
 8015290:	4642      	mov	r2, r8
 8015292:	e7da      	b.n	801524a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015294 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015294:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015296:	4605      	mov	r5, r0
 8015298:	b08f      	sub	sp, #60	; 0x3c
 801529a:	4617      	mov	r7, r2
 801529c:	461c      	mov	r4, r3
 801529e:	460e      	mov	r6, r1
 80152a0:	b1d1      	cbz	r1, 80152d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80152a2:	681b      	ldr	r3, [r3, #0]
 80152a4:	4620      	mov	r0, r4
 80152a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80152a8:	4798      	blx	r3
 80152aa:	4240      	negs	r0, r0
 80152ac:	b200      	sxth	r0, r0
 80152ae:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80152b2:	9603      	str	r6, [sp, #12]
 80152b4:	9700      	str	r7, [sp, #0]
 80152b6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80152ba:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80152be:	4629      	mov	r1, r5
 80152c0:	a805      	add	r0, sp, #20
 80152c2:	f7ff fcbf 	bl	8014c44 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80152c6:	2401      	movs	r4, #1
 80152c8:	a805      	add	r0, sp, #20
 80152ca:	f7ff fedf 	bl	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80152ce:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80152d2:	b163      	cbz	r3, 80152ee <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80152d4:	3401      	adds	r4, #1
 80152d6:	e7f7      	b.n	80152c8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80152d8:	f002 ff48 	bl	801816c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80152dc:	2401      	movs	r4, #1
 80152de:	280a      	cmp	r0, #10
 80152e0:	4628      	mov	r0, r5
 80152e2:	bf08      	it	eq
 80152e4:	3401      	addeq	r4, #1
 80152e6:	f002 ff41 	bl	801816c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80152ea:	2800      	cmp	r0, #0
 80152ec:	d1f7      	bne.n	80152de <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80152ee:	b2a0      	uxth	r0, r4
 80152f0:	b00f      	add	sp, #60	; 0x3c
 80152f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080152f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80152f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152f8:	b0e3      	sub	sp, #396	; 0x18c
 80152fa:	461c      	mov	r4, r3
 80152fc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80152fe:	4683      	mov	fp, r0
 8015300:	4688      	mov	r8, r1
 8015302:	2b00      	cmp	r3, #0
 8015304:	f000 8112 	beq.w	801552c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015308:	6823      	ldr	r3, [r4, #0]
 801530a:	2b00      	cmp	r3, #0
 801530c:	f000 810e 	beq.w	801552c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015310:	7ba3      	ldrb	r3, [r4, #14]
 8015312:	2b00      	cmp	r3, #0
 8015314:	f000 810a 	beq.w	801552c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015318:	6810      	ldr	r0, [r2, #0]
 801531a:	6851      	ldr	r1, [r2, #4]
 801531c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015320:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015324:	ad0a      	add	r5, sp, #40	; 0x28
 8015326:	462b      	mov	r3, r5
 8015328:	c303      	stmia	r3!, {r0, r1}
 801532a:	2100      	movs	r1, #0
 801532c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015330:	910c      	str	r1, [sp, #48]	; 0x30
 8015332:	79a2      	ldrb	r2, [r4, #6]
 8015334:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015338:	a90c      	add	r1, sp, #48	; 0x30
 801533a:	4628      	mov	r0, r5
 801533c:	f7ff fd01 	bl	8014d42 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015340:	a90c      	add	r1, sp, #48	; 0x30
 8015342:	4608      	mov	r0, r1
 8015344:	79a2      	ldrb	r2, [r4, #6]
 8015346:	f7ff fcfc 	bl	8014d42 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801534a:	a817      	add	r0, sp, #92	; 0x5c
 801534c:	f002 fae2 	bl	8017914 <_ZN8touchgfx12TextProviderC1Ev>
 8015350:	6820      	ldr	r0, [r4, #0]
 8015352:	6803      	ldr	r3, [r0, #0]
 8015354:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015356:	4798      	blx	r3
 8015358:	4606      	mov	r6, r0
 801535a:	6820      	ldr	r0, [r4, #0]
 801535c:	6803      	ldr	r3, [r0, #0]
 801535e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015360:	4798      	blx	r3
 8015362:	4633      	mov	r3, r6
 8015364:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015366:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015368:	9000      	str	r0, [sp, #0]
 801536a:	a817      	add	r0, sp, #92	; 0x5c
 801536c:	f002 fb2d 	bl	80179ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015370:	6820      	ldr	r0, [r4, #0]
 8015372:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015376:	6803      	ldr	r3, [r0, #0]
 8015378:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801537a:	4798      	blx	r3
 801537c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015380:	6823      	ldr	r3, [r4, #0]
 8015382:	4607      	mov	r7, r0
 8015384:	4406      	add	r6, r0
 8015386:	a830      	add	r0, sp, #192	; 0xc0
 8015388:	f893 9009 	ldrb.w	r9, [r3, #9]
 801538c:	f002 fac2 	bl	8017914 <_ZN8touchgfx12TextProviderC1Ev>
 8015390:	7c23      	ldrb	r3, [r4, #16]
 8015392:	b17b      	cbz	r3, 80153b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8015394:	6820      	ldr	r0, [r4, #0]
 8015396:	6803      	ldr	r3, [r0, #0]
 8015398:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801539a:	4798      	blx	r3
 801539c:	9009      	str	r0, [sp, #36]	; 0x24
 801539e:	6820      	ldr	r0, [r4, #0]
 80153a0:	6802      	ldr	r2, [r0, #0]
 80153a2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80153a4:	4790      	blx	r2
 80153a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80153a8:	9000      	str	r0, [sp, #0]
 80153aa:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80153ac:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80153ae:	a830      	add	r0, sp, #192	; 0xc0
 80153b0:	f002 fb0b 	bl	80179ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80153b4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80153b8:	7be2      	ldrb	r2, [r4, #15]
 80153ba:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80153be:	1a8a      	subs	r2, r1, r2
 80153c0:	7c21      	ldrb	r1, [r4, #16]
 80153c2:	9103      	str	r1, [sp, #12]
 80153c4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80153c8:	9102      	str	r1, [sp, #8]
 80153ca:	6821      	ldr	r1, [r4, #0]
 80153cc:	9101      	str	r1, [sp, #4]
 80153ce:	7961      	ldrb	r1, [r4, #5]
 80153d0:	9100      	str	r1, [sp, #0]
 80153d2:	b292      	uxth	r2, r2
 80153d4:	a930      	add	r1, sp, #192	; 0xc0
 80153d6:	a80e      	add	r0, sp, #56	; 0x38
 80153d8:	f7ff fc34 	bl	8014c44 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80153dc:	2e00      	cmp	r6, #0
 80153de:	dc5b      	bgt.n	8015498 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80153e0:	af17      	add	r7, sp, #92	; 0x5c
 80153e2:	f04f 0900 	mov.w	r9, #0
 80153e6:	7c23      	ldrb	r3, [r4, #16]
 80153e8:	2b00      	cmp	r3, #0
 80153ea:	f000 80b1 	beq.w	8015550 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80153ee:	a80e      	add	r0, sp, #56	; 0x38
 80153f0:	f7ff fe4c 	bl	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80153f4:	f1ba 0f00 	cmp.w	sl, #0
 80153f8:	f000 80a5 	beq.w	8015546 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80153fc:	7c23      	ldrb	r3, [r4, #16]
 80153fe:	9309      	str	r3, [sp, #36]	; 0x24
 8015400:	2264      	movs	r2, #100	; 0x64
 8015402:	4639      	mov	r1, r7
 8015404:	a849      	add	r0, sp, #292	; 0x124
 8015406:	f015 fe7c 	bl	802b102 <memcpy>
 801540a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801540c:	2b00      	cmp	r3, #0
 801540e:	f000 80a7 	beq.w	8015560 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8015412:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8015416:	7922      	ldrb	r2, [r4, #4]
 8015418:	2a01      	cmp	r2, #1
 801541a:	f040 808a 	bne.w	8015532 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801541e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8015422:	1ac0      	subs	r0, r0, r3
 8015424:	2302      	movs	r3, #2
 8015426:	fb90 f0f3 	sdiv	r0, r0, r3
 801542a:	b200      	sxth	r0, r0
 801542c:	7c23      	ldrb	r3, [r4, #16]
 801542e:	2b00      	cmp	r3, #0
 8015430:	f000 808b 	beq.w	801554a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015434:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8015438:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801543c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015440:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015444:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8015448:	4410      	add	r0, r2
 801544a:	b200      	sxth	r0, r0
 801544c:	9000      	str	r0, [sp, #0]
 801544e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8015452:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8015456:	4642      	mov	r2, r8
 8015458:	2100      	movs	r1, #0
 801545a:	4658      	mov	r0, fp
 801545c:	f7ff fca2 	bl	8014da4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015460:	2800      	cmp	r0, #0
 8015462:	d163      	bne.n	801552c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015464:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015468:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801546c:	b2b2      	uxth	r2, r6
 801546e:	4413      	add	r3, r2
 8015470:	1a8a      	subs	r2, r1, r2
 8015472:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015476:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801547a:	b21b      	sxth	r3, r3
 801547c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015480:	2a00      	cmp	r2, #0
 8015482:	d153      	bne.n	801552c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015484:	6822      	ldr	r2, [r4, #0]
 8015486:	8869      	ldrh	r1, [r5, #2]
 8015488:	7a12      	ldrb	r2, [r2, #8]
 801548a:	1a9b      	subs	r3, r3, r2
 801548c:	88ea      	ldrh	r2, [r5, #6]
 801548e:	440a      	add	r2, r1
 8015490:	b212      	sxth	r2, r2
 8015492:	4293      	cmp	r3, r2
 8015494:	dda7      	ble.n	80153e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8015496:	e049      	b.n	801552c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015498:	7c23      	ldrb	r3, [r4, #16]
 801549a:	444f      	add	r7, r9
 801549c:	b1c3      	cbz	r3, 80154d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801549e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80154a2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80154a6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80154aa:	443b      	add	r3, r7
 80154ac:	4293      	cmp	r3, r2
 80154ae:	da97      	bge.n	80153e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80154b0:	a80e      	add	r0, sp, #56	; 0x38
 80154b2:	f7ff fdeb 	bl	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80154b6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80154ba:	3b01      	subs	r3, #1
 80154bc:	b29b      	uxth	r3, r3
 80154be:	454b      	cmp	r3, r9
 80154c0:	9309      	str	r3, [sp, #36]	; 0x24
 80154c2:	d021      	beq.n	8015508 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80154c4:	7961      	ldrb	r1, [r4, #5]
 80154c6:	a817      	add	r0, sp, #92	; 0x5c
 80154c8:	f7f3 fd12 	bl	8008ef0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80154cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154ce:	e7f4      	b.n	80154ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80154d0:	fa1f f986 	uxth.w	r9, r6
 80154d4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80154d8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80154dc:	443b      	add	r3, r7
 80154de:	4293      	cmp	r3, r2
 80154e0:	f6bf af7e 	bge.w	80153e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80154e4:	a817      	add	r0, sp, #92	; 0x5c
 80154e6:	f002 fe41 	bl	801816c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80154ea:	b1f8      	cbz	r0, 801552c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80154ec:	280a      	cmp	r0, #10
 80154ee:	d1f1      	bne.n	80154d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80154f0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80154f4:	444b      	add	r3, r9
 80154f6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80154fa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80154fe:	eba3 0309 	sub.w	r3, r3, r9
 8015502:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015506:	e7e5      	b.n	80154d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015508:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801550c:	b2b3      	uxth	r3, r6
 801550e:	441a      	add	r2, r3
 8015510:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015514:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8015518:	1ad3      	subs	r3, r2, r3
 801551a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801551e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015522:	b11b      	cbz	r3, 801552c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015524:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8015528:	2b00      	cmp	r3, #0
 801552a:	d0ba      	beq.n	80154a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801552c:	b063      	add	sp, #396	; 0x18c
 801552e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015532:	2a02      	cmp	r2, #2
 8015534:	d105      	bne.n	8015542 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8015536:	7be2      	ldrb	r2, [r4, #15]
 8015538:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801553c:	1a80      	subs	r0, r0, r2
 801553e:	1ac0      	subs	r0, r0, r3
 8015540:	e773      	b.n	801542a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8015542:	2000      	movs	r0, #0
 8015544:	e772      	b.n	801542c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015546:	7be0      	ldrb	r0, [r4, #15]
 8015548:	e770      	b.n	801542c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801554a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801554e:	e773      	b.n	8015438 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8015550:	f1ba 0f00 	cmp.w	sl, #0
 8015554:	d0f7      	beq.n	8015546 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015556:	2264      	movs	r2, #100	; 0x64
 8015558:	4639      	mov	r1, r7
 801555a:	a849      	add	r0, sp, #292	; 0x124
 801555c:	f015 fdd1 	bl	802b102 <memcpy>
 8015560:	2300      	movs	r3, #0
 8015562:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015566:	6821      	ldr	r1, [r4, #0]
 8015568:	a849      	add	r0, sp, #292	; 0x124
 801556a:	f7ff fbae 	bl	8014cca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801556e:	b203      	sxth	r3, r0
 8015570:	e751      	b.n	8015416 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08015572 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015572:	2b03      	cmp	r3, #3
 8015574:	d818      	bhi.n	80155a8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015576:	e8df f003 	tbb	[pc, r3]
 801557a:	0602      	.short	0x0602
 801557c:	130d      	.short	0x130d
 801557e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015582:	1850      	adds	r0, r2, r1
 8015584:	4770      	bx	lr
 8015586:	8803      	ldrh	r3, [r0, #0]
 8015588:	8880      	ldrh	r0, [r0, #4]
 801558a:	4418      	add	r0, r3
 801558c:	b200      	sxth	r0, r0
 801558e:	1a80      	subs	r0, r0, r2
 8015590:	3801      	subs	r0, #1
 8015592:	4770      	bx	lr
 8015594:	8803      	ldrh	r3, [r0, #0]
 8015596:	8880      	ldrh	r0, [r0, #4]
 8015598:	4418      	add	r0, r3
 801559a:	b200      	sxth	r0, r0
 801559c:	1a40      	subs	r0, r0, r1
 801559e:	e7f7      	b.n	8015590 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80155a0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80155a4:	4410      	add	r0, r2
 80155a6:	4770      	bx	lr
 80155a8:	2000      	movs	r0, #0
 80155aa:	4770      	bx	lr

080155ac <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80155ac:	2b03      	cmp	r3, #3
 80155ae:	d817      	bhi.n	80155e0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80155b0:	e8df f003 	tbb	[pc, r3]
 80155b4:	10090602 	.word	0x10090602
 80155b8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80155bc:	1850      	adds	r0, r2, r1
 80155be:	4770      	bx	lr
 80155c0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80155c4:	e7fa      	b.n	80155bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80155c6:	8843      	ldrh	r3, [r0, #2]
 80155c8:	88c0      	ldrh	r0, [r0, #6]
 80155ca:	4418      	add	r0, r3
 80155cc:	b200      	sxth	r0, r0
 80155ce:	1a80      	subs	r0, r0, r2
 80155d0:	3801      	subs	r0, #1
 80155d2:	4770      	bx	lr
 80155d4:	8843      	ldrh	r3, [r0, #2]
 80155d6:	88c0      	ldrh	r0, [r0, #6]
 80155d8:	4418      	add	r0, r3
 80155da:	b200      	sxth	r0, r0
 80155dc:	1a40      	subs	r0, r0, r1
 80155de:	e7f7      	b.n	80155d0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80155e0:	2000      	movs	r0, #0
 80155e2:	4770      	bx	lr

080155e4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80155e4:	4b01      	ldr	r3, [pc, #4]	; (80155ec <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80155e6:	2200      	movs	r2, #0
 80155e8:	601a      	str	r2, [r3, #0]
 80155ea:	4770      	bx	lr
 80155ec:	20012db4 	.word	0x20012db4

080155f0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80155f0:	4603      	mov	r3, r0
 80155f2:	b1c8      	cbz	r0, 8015628 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80155f4:	0c02      	lsrs	r2, r0, #16
 80155f6:	0412      	lsls	r2, r2, #16
 80155f8:	b9a2      	cbnz	r2, 8015624 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80155fa:	0403      	lsls	r3, r0, #16
 80155fc:	2010      	movs	r0, #16
 80155fe:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015602:	bf04      	itt	eq
 8015604:	021b      	lsleq	r3, r3, #8
 8015606:	3008      	addeq	r0, #8
 8015608:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801560c:	bf04      	itt	eq
 801560e:	011b      	lsleq	r3, r3, #4
 8015610:	3004      	addeq	r0, #4
 8015612:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8015616:	bf04      	itt	eq
 8015618:	009b      	lsleq	r3, r3, #2
 801561a:	3002      	addeq	r0, #2
 801561c:	2b00      	cmp	r3, #0
 801561e:	db04      	blt.n	801562a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8015620:	3001      	adds	r0, #1
 8015622:	4770      	bx	lr
 8015624:	2000      	movs	r0, #0
 8015626:	e7ea      	b.n	80155fe <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8015628:	2020      	movs	r0, #32
 801562a:	4770      	bx	lr

0801562c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801562c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015630:	b087      	sub	sp, #28
 8015632:	460d      	mov	r5, r1
 8015634:	4616      	mov	r6, r2
 8015636:	4698      	mov	r8, r3
 8015638:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801563c:	4601      	mov	r1, r0
 801563e:	b120      	cbz	r0, 801564a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015640:	b11a      	cbz	r2, 801564a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015642:	2d1f      	cmp	r5, #31
 8015644:	d801      	bhi.n	801564a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015646:	2b1f      	cmp	r3, #31
 8015648:	d904      	bls.n	8015654 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801564a:	2000      	movs	r0, #0
 801564c:	6038      	str	r0, [r7, #0]
 801564e:	b007      	add	sp, #28
 8015650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015654:	b97d      	cbnz	r5, 8015676 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8015656:	b143      	cbz	r3, 801566a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8015658:	4602      	mov	r2, r0
 801565a:	e9cd 4700 	strd	r4, r7, [sp]
 801565e:	462b      	mov	r3, r5
 8015660:	4641      	mov	r1, r8
 8015662:	4630      	mov	r0, r6
 8015664:	f7ff ffe2 	bl	801562c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015668:	e7f1      	b.n	801564e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801566a:	f04f 33ff 	mov.w	r3, #4294967295
 801566e:	603b      	str	r3, [r7, #0]
 8015670:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015674:	e7eb      	b.n	801564e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015676:	fa32 fa05 	lsrs.w	sl, r2, r5
 801567a:	d106      	bne.n	801568a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801567c:	4346      	muls	r6, r0
 801567e:	fbb6 f0f4 	udiv	r0, r6, r4
 8015682:	fb04 6610 	mls	r6, r4, r0, r6
 8015686:	603e      	str	r6, [r7, #0]
 8015688:	e7e1      	b.n	801564e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801568a:	2201      	movs	r2, #1
 801568c:	40aa      	lsls	r2, r5
 801568e:	3a01      	subs	r2, #1
 8015690:	4016      	ands	r6, r2
 8015692:	fa00 fb05 	lsl.w	fp, r0, r5
 8015696:	4630      	mov	r0, r6
 8015698:	fbbb f9f4 	udiv	r9, fp, r4
 801569c:	fb0a f309 	mul.w	r3, sl, r9
 80156a0:	9303      	str	r3, [sp, #12]
 80156a2:	f7ff ffa5 	bl	80155f0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80156a6:	462b      	mov	r3, r5
 80156a8:	460a      	mov	r2, r1
 80156aa:	e9cd 4700 	strd	r4, r7, [sp]
 80156ae:	4601      	mov	r1, r0
 80156b0:	4630      	mov	r0, r6
 80156b2:	f7ff ffbb 	bl	801562c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80156b6:	fb04 b919 	mls	r9, r4, r9, fp
 80156ba:	4606      	mov	r6, r0
 80156bc:	4648      	mov	r0, r9
 80156be:	eb05 0108 	add.w	r1, r5, r8
 80156c2:	f7ff ff95 	bl	80155f0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80156c6:	ab05      	add	r3, sp, #20
 80156c8:	e9cd 4300 	strd	r4, r3, [sp]
 80156cc:	464a      	mov	r2, r9
 80156ce:	4603      	mov	r3, r0
 80156d0:	4650      	mov	r0, sl
 80156d2:	f7ff ffab 	bl	801562c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80156d6:	6839      	ldr	r1, [r7, #0]
 80156d8:	9a05      	ldr	r2, [sp, #20]
 80156da:	9b03      	ldr	r3, [sp, #12]
 80156dc:	4411      	add	r1, r2
 80156de:	fbb1 f2f4 	udiv	r2, r1, r4
 80156e2:	18d3      	adds	r3, r2, r3
 80156e4:	441e      	add	r6, r3
 80156e6:	fb04 1412 	mls	r4, r4, r2, r1
 80156ea:	4430      	add	r0, r6
 80156ec:	603c      	str	r4, [r7, #0]
 80156ee:	e7ae      	b.n	801564e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080156f0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80156f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80156f4:	b085      	sub	sp, #20
 80156f6:	f1b0 0900 	subs.w	r9, r0, #0
 80156fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80156fc:	461d      	mov	r5, r3
 80156fe:	bfbf      	itttt	lt
 8015700:	6823      	ldrlt	r3, [r4, #0]
 8015702:	425b      	neglt	r3, r3
 8015704:	f1c9 0900 	rsblt	r9, r9, #0
 8015708:	6023      	strlt	r3, [r4, #0]
 801570a:	bfb4      	ite	lt
 801570c:	f04f 36ff 	movlt.w	r6, #4294967295
 8015710:	2601      	movge	r6, #1
 8015712:	2a00      	cmp	r2, #0
 8015714:	4617      	mov	r7, r2
 8015716:	da04      	bge.n	8015722 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015718:	6823      	ldr	r3, [r4, #0]
 801571a:	425b      	negs	r3, r3
 801571c:	4257      	negs	r7, r2
 801571e:	4276      	negs	r6, r6
 8015720:	6023      	str	r3, [r4, #0]
 8015722:	2d00      	cmp	r5, #0
 8015724:	4638      	mov	r0, r7
 8015726:	bfba      	itte	lt
 8015728:	426d      	neglt	r5, r5
 801572a:	f04f 38ff 	movlt.w	r8, #4294967295
 801572e:	f04f 0801 	movge.w	r8, #1
 8015732:	f7ff ff5d 	bl	80155f0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015736:	ab03      	add	r3, sp, #12
 8015738:	e9cd 5300 	strd	r5, r3, [sp]
 801573c:	463a      	mov	r2, r7
 801573e:	4603      	mov	r3, r0
 8015740:	4648      	mov	r0, r9
 8015742:	f7ff ff73 	bl	801562c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015746:	6823      	ldr	r3, [r4, #0]
 8015748:	9a03      	ldr	r2, [sp, #12]
 801574a:	4546      	cmp	r6, r8
 801574c:	441a      	add	r2, r3
 801574e:	fb92 f3f5 	sdiv	r3, r2, r5
 8015752:	4418      	add	r0, r3
 8015754:	bf18      	it	ne
 8015756:	4240      	negne	r0, r0
 8015758:	fb05 2313 	mls	r3, r5, r3, r2
 801575c:	1c72      	adds	r2, r6, #1
 801575e:	6023      	str	r3, [r4, #0]
 8015760:	d105      	bne.n	801576e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8015762:	2b00      	cmp	r3, #0
 8015764:	f1c3 0200 	rsb	r2, r3, #0
 8015768:	db0b      	blt.n	8015782 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801576a:	6022      	str	r2, [r4, #0]
 801576c:	e006      	b.n	801577c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801576e:	2e01      	cmp	r6, #1
 8015770:	d104      	bne.n	801577c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015772:	2b00      	cmp	r3, #0
 8015774:	da02      	bge.n	801577c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015776:	442b      	add	r3, r5
 8015778:	3801      	subs	r0, #1
 801577a:	6023      	str	r3, [r4, #0]
 801577c:	b005      	add	sp, #20
 801577e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015782:	3801      	subs	r0, #1
 8015784:	1b52      	subs	r2, r2, r5
 8015786:	e7f0      	b.n	801576a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015788 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015788:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801578c:	4c1c      	ldr	r4, [pc, #112]	; (8015800 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801578e:	6807      	ldr	r7, [r0, #0]
 8015790:	69a3      	ldr	r3, [r4, #24]
 8015792:	4605      	mov	r5, r0
 8015794:	b92b      	cbnz	r3, 80157a2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015796:	6840      	ldr	r0, [r0, #4]
 8015798:	e9c5 7000 	strd	r7, r0, [r5]
 801579c:	b004      	add	sp, #16
 801579e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80157a2:	68a2      	ldr	r2, [r4, #8]
 80157a4:	6820      	ldr	r0, [r4, #0]
 80157a6:	ae04      	add	r6, sp, #16
 80157a8:	f04f 0802 	mov.w	r8, #2
 80157ac:	fb93 f1f8 	sdiv	r1, r3, r8
 80157b0:	440a      	add	r2, r1
 80157b2:	f846 2d04 	str.w	r2, [r6, #-4]!
 80157b6:	69e1      	ldr	r1, [r4, #28]
 80157b8:	9600      	str	r6, [sp, #0]
 80157ba:	463a      	mov	r2, r7
 80157bc:	f7ff ff98 	bl	80156f0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80157c0:	69a3      	ldr	r3, [r4, #24]
 80157c2:	686a      	ldr	r2, [r5, #4]
 80157c4:	6a21      	ldr	r1, [r4, #32]
 80157c6:	9600      	str	r6, [sp, #0]
 80157c8:	4607      	mov	r7, r0
 80157ca:	6860      	ldr	r0, [r4, #4]
 80157cc:	f7ff ff90 	bl	80156f0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80157d0:	6962      	ldr	r2, [r4, #20]
 80157d2:	69a3      	ldr	r3, [r4, #24]
 80157d4:	fb93 f8f8 	sdiv	r8, r3, r8
 80157d8:	4442      	add	r2, r8
 80157da:	9203      	str	r2, [sp, #12]
 80157dc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80157de:	682a      	ldr	r2, [r5, #0]
 80157e0:	9600      	str	r6, [sp, #0]
 80157e2:	4407      	add	r7, r0
 80157e4:	68e0      	ldr	r0, [r4, #12]
 80157e6:	f7ff ff83 	bl	80156f0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80157ea:	9600      	str	r6, [sp, #0]
 80157ec:	4680      	mov	r8, r0
 80157ee:	69a3      	ldr	r3, [r4, #24]
 80157f0:	686a      	ldr	r2, [r5, #4]
 80157f2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80157f4:	6920      	ldr	r0, [r4, #16]
 80157f6:	f7ff ff7b 	bl	80156f0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80157fa:	4440      	add	r0, r8
 80157fc:	e7cc      	b.n	8015798 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80157fe:	bf00      	nop
 8015800:	20012db8 	.word	0x20012db8

08015804 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015804:	4b07      	ldr	r3, [pc, #28]	; (8015824 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015806:	781b      	ldrb	r3, [r3, #0]
 8015808:	2b01      	cmp	r3, #1
 801580a:	d109      	bne.n	8015820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801580c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015810:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015814:	8003      	strh	r3, [r0, #0]
 8015816:	4b04      	ldr	r3, [pc, #16]	; (8015828 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8015818:	881b      	ldrh	r3, [r3, #0]
 801581a:	3b01      	subs	r3, #1
 801581c:	1a9b      	subs	r3, r3, r2
 801581e:	800b      	strh	r3, [r1, #0]
 8015820:	4770      	bx	lr
 8015822:	bf00      	nop
 8015824:	20012d9c 	.word	0x20012d9c
 8015828:	20012d98 	.word	0x20012d98

0801582c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801582c:	b510      	push	{r4, lr}
 801582e:	4b07      	ldr	r3, [pc, #28]	; (801584c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8015830:	781b      	ldrb	r3, [r3, #0]
 8015832:	2b01      	cmp	r3, #1
 8015834:	d108      	bne.n	8015848 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8015836:	4b06      	ldr	r3, [pc, #24]	; (8015850 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8015838:	880c      	ldrh	r4, [r1, #0]
 801583a:	881b      	ldrh	r3, [r3, #0]
 801583c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015840:	3b01      	subs	r3, #1
 8015842:	1b1b      	subs	r3, r3, r4
 8015844:	8003      	strh	r3, [r0, #0]
 8015846:	800a      	strh	r2, [r1, #0]
 8015848:	bd10      	pop	{r4, pc}
 801584a:	bf00      	nop
 801584c:	20012d9c 	.word	0x20012d9c
 8015850:	20012d98 	.word	0x20012d98

08015854 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015854:	b510      	push	{r4, lr}
 8015856:	4b0a      	ldr	r3, [pc, #40]	; (8015880 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015858:	781b      	ldrb	r3, [r3, #0]
 801585a:	2b01      	cmp	r3, #1
 801585c:	d10e      	bne.n	801587c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801585e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015862:	8843      	ldrh	r3, [r0, #2]
 8015864:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015868:	8044      	strh	r4, [r0, #2]
 801586a:	18ca      	adds	r2, r1, r3
 801586c:	4b05      	ldr	r3, [pc, #20]	; (8015884 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801586e:	881b      	ldrh	r3, [r3, #0]
 8015870:	1a9b      	subs	r3, r3, r2
 8015872:	8003      	strh	r3, [r0, #0]
 8015874:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015878:	80c3      	strh	r3, [r0, #6]
 801587a:	8081      	strh	r1, [r0, #4]
 801587c:	bd10      	pop	{r4, pc}
 801587e:	bf00      	nop
 8015880:	20012d9c 	.word	0x20012d9c
 8015884:	20012d98 	.word	0x20012d98

08015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015888:	4b08      	ldr	r3, [pc, #32]	; (80158ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801588a:	781b      	ldrb	r3, [r3, #0]
 801588c:	2b01      	cmp	r3, #1
 801588e:	d10c      	bne.n	80158aa <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015890:	8803      	ldrh	r3, [r0, #0]
 8015892:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015896:	8842      	ldrh	r2, [r0, #2]
 8015898:	8002      	strh	r2, [r0, #0]
 801589a:	185a      	adds	r2, r3, r1
 801589c:	4b04      	ldr	r3, [pc, #16]	; (80158b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801589e:	881b      	ldrh	r3, [r3, #0]
 80158a0:	1a9b      	subs	r3, r3, r2
 80158a2:	8043      	strh	r3, [r0, #2]
 80158a4:	88c3      	ldrh	r3, [r0, #6]
 80158a6:	8083      	strh	r3, [r0, #4]
 80158a8:	80c1      	strh	r1, [r0, #6]
 80158aa:	4770      	bx	lr
 80158ac:	20012d9c 	.word	0x20012d9c
 80158b0:	20012d98 	.word	0x20012d98

080158b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80158b4:	b510      	push	{r4, lr}
 80158b6:	4b07      	ldr	r3, [pc, #28]	; (80158d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80158b8:	781b      	ldrb	r3, [r3, #0]
 80158ba:	2b01      	cmp	r3, #1
 80158bc:	d108      	bne.n	80158d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80158be:	f9b1 3000 	ldrsh.w	r3, [r1]
 80158c2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80158c6:	8003      	strh	r3, [r0, #0]
 80158c8:	8893      	ldrh	r3, [r2, #4]
 80158ca:	3b01      	subs	r3, #1
 80158cc:	1b1b      	subs	r3, r3, r4
 80158ce:	800b      	strh	r3, [r1, #0]
 80158d0:	bd10      	pop	{r4, pc}
 80158d2:	bf00      	nop
 80158d4:	20012d9c 	.word	0x20012d9c

080158d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80158d8:	4b0b      	ldr	r3, [pc, #44]	; (8015908 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80158da:	781b      	ldrb	r3, [r3, #0]
 80158dc:	2b01      	cmp	r3, #1
 80158de:	d111      	bne.n	8015904 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80158e0:	680b      	ldr	r3, [r1, #0]
 80158e2:	ed90 7a00 	vldr	s14, [r0]
 80158e6:	6003      	str	r3, [r0, #0]
 80158e8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80158ec:	eddf 6a07 	vldr	s13, [pc, #28]	; 801590c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80158f0:	ee07 3a90 	vmov	s15, r3
 80158f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80158f8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80158fc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015900:	edc1 7a00 	vstr	s15, [r1]
 8015904:	4770      	bx	lr
 8015906:	bf00      	nop
 8015908:	20012d9c 	.word	0x20012d9c
 801590c:	38d1b717 	.word	0x38d1b717

08015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8015910:	b510      	push	{r4, lr}
 8015912:	4b0a      	ldr	r3, [pc, #40]	; (801593c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8015914:	781b      	ldrb	r3, [r3, #0]
 8015916:	2b01      	cmp	r3, #1
 8015918:	460a      	mov	r2, r1
 801591a:	d10d      	bne.n	8015938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801591c:	8881      	ldrh	r1, [r0, #4]
 801591e:	8803      	ldrh	r3, [r0, #0]
 8015920:	440b      	add	r3, r1
 8015922:	4601      	mov	r1, r0
 8015924:	3b01      	subs	r3, #1
 8015926:	f821 3b02 	strh.w	r3, [r1], #2
 801592a:	f7ff ffc3 	bl	80158b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801592e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015932:	88c2      	ldrh	r2, [r0, #6]
 8015934:	8082      	strh	r2, [r0, #4]
 8015936:	80c3      	strh	r3, [r0, #6]
 8015938:	bd10      	pop	{r4, pc}
 801593a:	bf00      	nop
 801593c:	20012d9c 	.word	0x20012d9c

08015940 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015940:	4b06      	ldr	r3, [pc, #24]	; (801595c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8015942:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015946:	4b06      	ldr	r3, [pc, #24]	; (8015960 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015948:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801594c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015950:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8015954:	2100      	movs	r1, #0
 8015956:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801595a:	4770      	bx	lr
 801595c:	20012d98 	.word	0x20012d98
 8015960:	20012d9a 	.word	0x20012d9a

08015964 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015964:	4b03      	ldr	r3, [pc, #12]	; (8015974 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015966:	6818      	ldr	r0, [r3, #0]
 8015968:	b110      	cbz	r0, 8015970 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801596a:	6803      	ldr	r3, [r0, #0]
 801596c:	699b      	ldr	r3, [r3, #24]
 801596e:	4718      	bx	r3
 8015970:	4770      	bx	lr
 8015972:	bf00      	nop
 8015974:	20012de8 	.word	0x20012de8

08015978 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015978:	4770      	bx	lr
	...

0801597c <_ZN8touchgfx11Application4drawEv>:
 801597c:	b507      	push	{r0, r1, r2, lr}
 801597e:	4b09      	ldr	r3, [pc, #36]	; (80159a4 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015980:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015984:	4b08      	ldr	r3, [pc, #32]	; (80159a8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015986:	f8ad 2004 	strh.w	r2, [sp, #4]
 801598a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801598e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015992:	6803      	ldr	r3, [r0, #0]
 8015994:	2100      	movs	r1, #0
 8015996:	9100      	str	r1, [sp, #0]
 8015998:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801599a:	4669      	mov	r1, sp
 801599c:	4798      	blx	r3
 801599e:	b003      	add	sp, #12
 80159a0:	f85d fb04 	ldr.w	pc, [sp], #4
 80159a4:	20012d98 	.word	0x20012d98
 80159a8:	20012d9a 	.word	0x20012d9a

080159ac <_ZN8touchgfx11Application10invalidateEv>:
 80159ac:	4b09      	ldr	r3, [pc, #36]	; (80159d4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80159ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 80159b2:	4b09      	ldr	r3, [pc, #36]	; (80159d8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80159b4:	b082      	sub	sp, #8
 80159b6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80159ba:	f8ad 2004 	strh.w	r2, [sp, #4]
 80159be:	2100      	movs	r1, #0
 80159c0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80159c4:	9100      	str	r1, [sp, #0]
 80159c6:	6803      	ldr	r3, [r0, #0]
 80159c8:	aa02      	add	r2, sp, #8
 80159ca:	e912 0006 	ldmdb	r2, {r1, r2}
 80159ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80159d0:	b002      	add	sp, #8
 80159d2:	4718      	bx	r3
 80159d4:	20012d98 	.word	0x20012d98
 80159d8:	20012d9a 	.word	0x20012d9a

080159dc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80159dc:	4b03      	ldr	r3, [pc, #12]	; (80159ec <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80159de:	6818      	ldr	r0, [r3, #0]
 80159e0:	b110      	cbz	r0, 80159e8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80159e2:	6803      	ldr	r3, [r0, #0]
 80159e4:	69db      	ldr	r3, [r3, #28]
 80159e6:	4718      	bx	r3
 80159e8:	4770      	bx	lr
 80159ea:	bf00      	nop
 80159ec:	20012de8 	.word	0x20012de8

080159f0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80159f0:	4b03      	ldr	r3, [pc, #12]	; (8015a00 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80159f2:	6818      	ldr	r0, [r3, #0]
 80159f4:	b110      	cbz	r0, 80159fc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80159f6:	6803      	ldr	r3, [r0, #0]
 80159f8:	6a1b      	ldr	r3, [r3, #32]
 80159fa:	4718      	bx	r3
 80159fc:	4770      	bx	lr
 80159fe:	bf00      	nop
 8015a00:	20012de8 	.word	0x20012de8

08015a04 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015a04:	2300      	movs	r3, #0
 8015a06:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8015a0a:	4770      	bx	lr

08015a0c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8015a0c:	4b03      	ldr	r3, [pc, #12]	; (8015a1c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8015a0e:	6818      	ldr	r0, [r3, #0]
 8015a10:	b110      	cbz	r0, 8015a18 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015a12:	6803      	ldr	r3, [r0, #0]
 8015a14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015a16:	4718      	bx	r3
 8015a18:	4770      	bx	lr
 8015a1a:	bf00      	nop
 8015a1c:	20012de8 	.word	0x20012de8

08015a20 <_ZN8touchgfx11ApplicationD1Ev>:
 8015a20:	4770      	bx	lr

08015a22 <_ZN8touchgfx11ApplicationD0Ev>:
 8015a22:	b510      	push	{r4, lr}
 8015a24:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8015a28:	4604      	mov	r4, r0
 8015a2a:	f014 f958 	bl	8029cde <_ZdlPvj>
 8015a2e:	4620      	mov	r0, r4
 8015a30:	bd10      	pop	{r4, pc}

08015a32 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015a32:	b510      	push	{r4, lr}
 8015a34:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015a38:	888a      	ldrh	r2, [r1, #4]
 8015a3a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015a3e:	4422      	add	r2, r4
 8015a40:	b212      	sxth	r2, r2
 8015a42:	4293      	cmp	r3, r2
 8015a44:	da15      	bge.n	8015a72 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015a46:	8882      	ldrh	r2, [r0, #4]
 8015a48:	4413      	add	r3, r2
 8015a4a:	b21b      	sxth	r3, r3
 8015a4c:	429c      	cmp	r4, r3
 8015a4e:	da10      	bge.n	8015a72 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015a50:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015a54:	88c9      	ldrh	r1, [r1, #6]
 8015a56:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015a5a:	4419      	add	r1, r3
 8015a5c:	b209      	sxth	r1, r1
 8015a5e:	428a      	cmp	r2, r1
 8015a60:	da07      	bge.n	8015a72 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015a62:	88c0      	ldrh	r0, [r0, #6]
 8015a64:	4410      	add	r0, r2
 8015a66:	b200      	sxth	r0, r0
 8015a68:	4283      	cmp	r3, r0
 8015a6a:	bfac      	ite	ge
 8015a6c:	2000      	movge	r0, #0
 8015a6e:	2001      	movlt	r0, #1
 8015a70:	bd10      	pop	{r4, pc}
 8015a72:	2000      	movs	r0, #0
 8015a74:	e7fc      	b.n	8015a70 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015a76 <_ZN8touchgfx4Rect10restrictToEss>:
 8015a76:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015a7a:	2b00      	cmp	r3, #0
 8015a7c:	b510      	push	{r4, lr}
 8015a7e:	da04      	bge.n	8015a8a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015a80:	8884      	ldrh	r4, [r0, #4]
 8015a82:	4423      	add	r3, r4
 8015a84:	8083      	strh	r3, [r0, #4]
 8015a86:	2300      	movs	r3, #0
 8015a88:	8003      	strh	r3, [r0, #0]
 8015a8a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015a8e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015a92:	1b09      	subs	r1, r1, r4
 8015a94:	428b      	cmp	r3, r1
 8015a96:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015a9a:	bfc8      	it	gt
 8015a9c:	8081      	strhgt	r1, [r0, #4]
 8015a9e:	2b00      	cmp	r3, #0
 8015aa0:	da04      	bge.n	8015aac <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015aa2:	88c1      	ldrh	r1, [r0, #6]
 8015aa4:	440b      	add	r3, r1
 8015aa6:	80c3      	strh	r3, [r0, #6]
 8015aa8:	2300      	movs	r3, #0
 8015aaa:	8043      	strh	r3, [r0, #2]
 8015aac:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015ab0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015ab4:	1a52      	subs	r2, r2, r1
 8015ab6:	4293      	cmp	r3, r2
 8015ab8:	bfc8      	it	gt
 8015aba:	80c2      	strhgt	r2, [r0, #6]
 8015abc:	bd10      	pop	{r4, pc}
	...

08015ac0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015ac0:	b510      	push	{r4, lr}
 8015ac2:	4b10      	ldr	r3, [pc, #64]	; (8015b04 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015ac4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015ac8:	4b0f      	ldr	r3, [pc, #60]	; (8015b08 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8015aca:	460c      	mov	r4, r1
 8015acc:	4620      	mov	r0, r4
 8015ace:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015ad2:	f7ff ffd0 	bl	8015a76 <_ZN8touchgfx4Rect10restrictToEss>
 8015ad6:	4b0d      	ldr	r3, [pc, #52]	; (8015b0c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015ad8:	6818      	ldr	r0, [r3, #0]
 8015ada:	b190      	cbz	r0, 8015b02 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015adc:	6803      	ldr	r3, [r0, #0]
 8015ade:	4621      	mov	r1, r4
 8015ae0:	689b      	ldr	r3, [r3, #8]
 8015ae2:	4798      	blx	r3
 8015ae4:	4b0a      	ldr	r3, [pc, #40]	; (8015b10 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015ae6:	6818      	ldr	r0, [r3, #0]
 8015ae8:	b118      	cbz	r0, 8015af2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015aea:	6803      	ldr	r3, [r0, #0]
 8015aec:	4621      	mov	r1, r4
 8015aee:	689b      	ldr	r3, [r3, #8]
 8015af0:	4798      	blx	r3
 8015af2:	4b08      	ldr	r3, [pc, #32]	; (8015b14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015af4:	6818      	ldr	r0, [r3, #0]
 8015af6:	6803      	ldr	r3, [r0, #0]
 8015af8:	4621      	mov	r1, r4
 8015afa:	69db      	ldr	r3, [r3, #28]
 8015afc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b00:	4718      	bx	r3
 8015b02:	bd10      	pop	{r4, pc}
 8015b04:	20012d9a 	.word	0x20012d9a
 8015b08:	20012d98 	.word	0x20012d98
 8015b0c:	20012de8 	.word	0x20012de8
 8015b10:	20012de4 	.word	0x20012de4
 8015b14:	20012da4 	.word	0x20012da4

08015b18 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015b18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015b1a:	4606      	mov	r6, r0
 8015b1c:	4608      	mov	r0, r1
 8015b1e:	460f      	mov	r7, r1
 8015b20:	f7fa ff97 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b24:	b9e8      	cbnz	r0, 8015b62 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015b26:	f9b7 5000 	ldrsh.w	r5, [r7]
 8015b2a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015b2e:	42a5      	cmp	r5, r4
 8015b30:	db17      	blt.n	8015b62 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015b32:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015b36:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8015b3a:	429a      	cmp	r2, r3
 8015b3c:	db11      	blt.n	8015b62 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015b3e:	88b9      	ldrh	r1, [r7, #4]
 8015b40:	440d      	add	r5, r1
 8015b42:	88b1      	ldrh	r1, [r6, #4]
 8015b44:	440c      	add	r4, r1
 8015b46:	b22d      	sxth	r5, r5
 8015b48:	b224      	sxth	r4, r4
 8015b4a:	42a5      	cmp	r5, r4
 8015b4c:	dc09      	bgt.n	8015b62 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015b4e:	88f8      	ldrh	r0, [r7, #6]
 8015b50:	4410      	add	r0, r2
 8015b52:	88f2      	ldrh	r2, [r6, #6]
 8015b54:	4413      	add	r3, r2
 8015b56:	b200      	sxth	r0, r0
 8015b58:	b21b      	sxth	r3, r3
 8015b5a:	4298      	cmp	r0, r3
 8015b5c:	bfcc      	ite	gt
 8015b5e:	2000      	movgt	r0, #0
 8015b60:	2001      	movle	r0, #1
 8015b62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015b64 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015b64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015b66:	4604      	mov	r4, r0
 8015b68:	4608      	mov	r0, r1
 8015b6a:	460d      	mov	r5, r1
 8015b6c:	f7fa ff71 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b70:	b978      	cbnz	r0, 8015b92 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015b72:	4620      	mov	r0, r4
 8015b74:	f7fa ff6d 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b78:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015b7c:	b150      	cbz	r0, 8015b94 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015b7e:	8026      	strh	r6, [r4, #0]
 8015b80:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015b84:	8063      	strh	r3, [r4, #2]
 8015b86:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015b8a:	80a3      	strh	r3, [r4, #4]
 8015b8c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015b90:	80e3      	strh	r3, [r4, #6]
 8015b92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015b94:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015b98:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015b9c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015ba0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015ba4:	88ed      	ldrh	r5, [r5, #6]
 8015ba6:	42b1      	cmp	r1, r6
 8015ba8:	460f      	mov	r7, r1
 8015baa:	bfa8      	it	ge
 8015bac:	4637      	movge	r7, r6
 8015bae:	4293      	cmp	r3, r2
 8015bb0:	4618      	mov	r0, r3
 8015bb2:	4466      	add	r6, ip
 8015bb4:	bfa8      	it	ge
 8015bb6:	4610      	movge	r0, r2
 8015bb8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015bbc:	8027      	strh	r7, [r4, #0]
 8015bbe:	442a      	add	r2, r5
 8015bc0:	88e5      	ldrh	r5, [r4, #6]
 8015bc2:	8060      	strh	r0, [r4, #2]
 8015bc4:	4461      	add	r1, ip
 8015bc6:	442b      	add	r3, r5
 8015bc8:	b236      	sxth	r6, r6
 8015bca:	b209      	sxth	r1, r1
 8015bcc:	b212      	sxth	r2, r2
 8015bce:	b21b      	sxth	r3, r3
 8015bd0:	428e      	cmp	r6, r1
 8015bd2:	bfac      	ite	ge
 8015bd4:	ebc7 0106 	rsbge	r1, r7, r6
 8015bd8:	ebc7 0101 	rsblt	r1, r7, r1
 8015bdc:	429a      	cmp	r2, r3
 8015bde:	bfac      	ite	ge
 8015be0:	ebc0 0202 	rsbge	r2, r0, r2
 8015be4:	ebc0 0203 	rsblt	r2, r0, r3
 8015be8:	80a1      	strh	r1, [r4, #4]
 8015bea:	80e2      	strh	r2, [r4, #6]
 8015bec:	e7d1      	b.n	8015b92 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015bf0 <_ZN8touchgfx11Application11getInstanceEv>:
 8015bf0:	4b01      	ldr	r3, [pc, #4]	; (8015bf8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015bf2:	6818      	ldr	r0, [r3, #0]
 8015bf4:	4770      	bx	lr
 8015bf6:	bf00      	nop
 8015bf8:	20012df8 	.word	0x20012df8

08015bfc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8015bfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015bfe:	4b10      	ldr	r3, [pc, #64]	; (8015c40 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015c00:	781b      	ldrb	r3, [r3, #0]
 8015c02:	4605      	mov	r5, r0
 8015c04:	b1d3      	cbz	r3, 8015c3c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015c06:	4b0f      	ldr	r3, [pc, #60]	; (8015c44 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015c08:	4f0f      	ldr	r7, [pc, #60]	; (8015c48 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8015c0a:	881c      	ldrh	r4, [r3, #0]
 8015c0c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015c10:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015c14:	42a3      	cmp	r3, r4
 8015c16:	d90e      	bls.n	8015c36 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015c18:	683b      	ldr	r3, [r7, #0]
 8015c1a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015c1e:	b10a      	cbz	r2, 8015c24 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015c20:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015c22:	b900      	cbnz	r0, 8015c26 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015c24:	6898      	ldr	r0, [r3, #8]
 8015c26:	6803      	ldr	r3, [r0, #0]
 8015c28:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8015c2c:	69db      	ldr	r3, [r3, #28]
 8015c2e:	3401      	adds	r4, #1
 8015c30:	4798      	blx	r3
 8015c32:	b2a4      	uxth	r4, r4
 8015c34:	e7ec      	b.n	8015c10 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015c36:	2300      	movs	r3, #0
 8015c38:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8015c3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015c3e:	bf00      	nop
 8015c40:	20012da2 	.word	0x20012da2
 8015c44:	20000088 	.word	0x20000088
 8015c48:	20012da4 	.word	0x20012da4

08015c4c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015c4c:	b510      	push	{r4, lr}
 8015c4e:	2300      	movs	r3, #0
 8015c50:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015c54:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015c58:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015c5c:	4604      	mov	r4, r0
 8015c5e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015c62:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015c66:	429a      	cmp	r2, r3
 8015c68:	d90e      	bls.n	8015c88 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8015c6a:	18e2      	adds	r2, r4, r3
 8015c6c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015c70:	b122      	cbz	r2, 8015c7c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015c72:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015c76:	6803      	ldr	r3, [r0, #0]
 8015c78:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015c7a:	4798      	blx	r3
 8015c7c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015c80:	3301      	adds	r3, #1
 8015c82:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015c86:	e7ea      	b.n	8015c5e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015c88:	bd10      	pop	{r4, pc}

08015c8a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8015c8a:	b530      	push	{r4, r5, lr}
 8015c8c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015c90:	2200      	movs	r2, #0
 8015c92:	b293      	uxth	r3, r2
 8015c94:	429d      	cmp	r5, r3
 8015c96:	d90e      	bls.n	8015cb6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015c98:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8015c9c:	428b      	cmp	r3, r1
 8015c9e:	d10b      	bne.n	8015cb8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015ca0:	1884      	adds	r4, r0, r2
 8015ca2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015ca6:	b13b      	cbz	r3, 8015cb8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015ca8:	3b01      	subs	r3, #1
 8015caa:	b2db      	uxtb	r3, r3
 8015cac:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015cb0:	b90b      	cbnz	r3, 8015cb6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015cb2:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015cb6:	bd30      	pop	{r4, r5, pc}
 8015cb8:	3201      	adds	r2, #1
 8015cba:	e7ea      	b.n	8015c92 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8015cbc:	2300      	movs	r3, #0
 8015cbe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015cc2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015cc6:	30a4      	adds	r0, #164	; 0xa4
 8015cc8:	f802 3b01 	strb.w	r3, [r2], #1
 8015ccc:	4282      	cmp	r2, r0
 8015cce:	d1fb      	bne.n	8015cc8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015cd0:	4770      	bx	lr
	...

08015cd4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015cd4:	b570      	push	{r4, r5, r6, lr}
 8015cd6:	4c0b      	ldr	r4, [pc, #44]	; (8015d04 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015cd8:	4605      	mov	r5, r0
 8015cda:	6820      	ldr	r0, [r4, #0]
 8015cdc:	460e      	mov	r6, r1
 8015cde:	b110      	cbz	r0, 8015ce6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015ce0:	6803      	ldr	r3, [r0, #0]
 8015ce2:	695b      	ldr	r3, [r3, #20]
 8015ce4:	4798      	blx	r3
 8015ce6:	1d28      	adds	r0, r5, #4
 8015ce8:	f7ff ffe8 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015cec:	6026      	str	r6, [r4, #0]
 8015cee:	6833      	ldr	r3, [r6, #0]
 8015cf0:	4630      	mov	r0, r6
 8015cf2:	68db      	ldr	r3, [r3, #12]
 8015cf4:	4798      	blx	r3
 8015cf6:	682b      	ldr	r3, [r5, #0]
 8015cf8:	4628      	mov	r0, r5
 8015cfa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015cfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d00:	4718      	bx	r3
 8015d02:	bf00      	nop
 8015d04:	20012de8 	.word	0x20012de8

08015d08 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015d08:	2300      	movs	r3, #0
 8015d0a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8015d0e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015d12:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015d14:	461a      	mov	r2, r3
 8015d16:	461c      	mov	r4, r3
 8015d18:	461d      	mov	r5, r3
 8015d1a:	459c      	cmp	ip, r3
 8015d1c:	dd1a      	ble.n	8015d54 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8015d1e:	18c6      	adds	r6, r0, r3
 8015d20:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015d24:	b16e      	cbz	r6, 8015d42 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015d26:	429a      	cmp	r2, r3
 8015d28:	d008      	beq.n	8015d3c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8015d2a:	fa1f fe82 	uxth.w	lr, r2
 8015d2e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015d32:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015d36:	1887      	adds	r7, r0, r2
 8015d38:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015d3c:	3201      	adds	r2, #1
 8015d3e:	3301      	adds	r3, #1
 8015d40:	e7eb      	b.n	8015d1a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015d42:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015d46:	4299      	cmp	r1, r3
 8015d48:	bfa8      	it	ge
 8015d4a:	3501      	addge	r5, #1
 8015d4c:	429e      	cmp	r6, r3
 8015d4e:	bfc8      	it	gt
 8015d50:	3401      	addgt	r4, #1
 8015d52:	e7f4      	b.n	8015d3e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015d54:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015d58:	1b49      	subs	r1, r1, r5
 8015d5a:	1b1b      	subs	r3, r3, r4
 8015d5c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015d60:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015d64:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015d68:	4293      	cmp	r3, r2
 8015d6a:	dd03      	ble.n	8015d74 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015d6c:	3b01      	subs	r3, #1
 8015d6e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015d72:	e7f7      	b.n	8015d64 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015d78 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015d78:	b570      	push	{r4, r5, r6, lr}
 8015d7a:	4d16      	ldr	r5, [pc, #88]	; (8015dd4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015d7c:	4604      	mov	r4, r0
 8015d7e:	6828      	ldr	r0, [r5, #0]
 8015d80:	b140      	cbz	r0, 8015d94 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015d82:	7a03      	ldrb	r3, [r0, #8]
 8015d84:	b933      	cbnz	r3, 8015d94 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015d86:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015d8a:	6803      	ldr	r3, [r0, #0]
 8015d8c:	689b      	ldr	r3, [r3, #8]
 8015d8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d92:	4718      	bx	r3
 8015d94:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015d98:	4e0f      	ldr	r6, [pc, #60]	; (8015dd8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015d9a:	b973      	cbnz	r3, 8015dba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015d9c:	b168      	cbz	r0, 8015dba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015d9e:	7a03      	ldrb	r3, [r0, #8]
 8015da0:	b15b      	cbz	r3, 8015dba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015da2:	6830      	ldr	r0, [r6, #0]
 8015da4:	b110      	cbz	r0, 8015dac <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015da6:	6803      	ldr	r3, [r0, #0]
 8015da8:	691b      	ldr	r3, [r3, #16]
 8015daa:	4798      	blx	r3
 8015dac:	6828      	ldr	r0, [r5, #0]
 8015dae:	6803      	ldr	r3, [r0, #0]
 8015db0:	68db      	ldr	r3, [r3, #12]
 8015db2:	4798      	blx	r3
 8015db4:	2301      	movs	r3, #1
 8015db6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015dba:	3404      	adds	r4, #4
 8015dbc:	4620      	mov	r0, r4
 8015dbe:	f7ff ff45 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015dc2:	4620      	mov	r0, r4
 8015dc4:	f7ff ffa0 	bl	8015d08 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015dc8:	6830      	ldr	r0, [r6, #0]
 8015dca:	b110      	cbz	r0, 8015dd2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015dcc:	6803      	ldr	r3, [r0, #0]
 8015dce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015dd0:	e7dd      	b.n	8015d8e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015dd2:	bd70      	pop	{r4, r5, r6, pc}
 8015dd4:	20012dec 	.word	0x20012dec
 8015dd8:	20012de8 	.word	0x20012de8

08015ddc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8015ddc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015dde:	2300      	movs	r3, #0
 8015de0:	4604      	mov	r4, r0
 8015de2:	460d      	mov	r5, r1
 8015de4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015de8:	4618      	mov	r0, r3
 8015dea:	b29a      	uxth	r2, r3
 8015dec:	4291      	cmp	r1, r2
 8015dee:	d911      	bls.n	8015e14 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015df0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015df4:	18e6      	adds	r6, r4, r3
 8015df6:	42af      	cmp	r7, r5
 8015df8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8015dfc:	d105      	bne.n	8015e0a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8015dfe:	2aff      	cmp	r2, #255	; 0xff
 8015e00:	d002      	beq.n	8015e08 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015e02:	3201      	adds	r2, #1
 8015e04:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015e08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015e0a:	2a00      	cmp	r2, #0
 8015e0c:	bf08      	it	eq
 8015e0e:	2001      	moveq	r0, #1
 8015e10:	3301      	adds	r3, #1
 8015e12:	e7ea      	b.n	8015dea <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015e14:	b120      	cbz	r0, 8015e20 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015e16:	2920      	cmp	r1, #32
 8015e18:	d102      	bne.n	8015e20 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015e1a:	4620      	mov	r0, r4
 8015e1c:	f7ff ff74 	bl	8015d08 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015e20:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015e24:	2b1f      	cmp	r3, #31
 8015e26:	d8ef      	bhi.n	8015e08 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015e28:	18e2      	adds	r2, r4, r3
 8015e2a:	2101      	movs	r1, #1
 8015e2c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015e30:	185a      	adds	r2, r3, r1
 8015e32:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015e36:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8015e3a:	e7e5      	b.n	8015e08 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08015e3c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8015e3c:	4603      	mov	r3, r0
 8015e3e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015e42:	2200      	movs	r2, #0
 8015e44:	801a      	strh	r2, [r3, #0]
 8015e46:	805a      	strh	r2, [r3, #2]
 8015e48:	809a      	strh	r2, [r3, #4]
 8015e4a:	80da      	strh	r2, [r3, #6]
 8015e4c:	3308      	adds	r3, #8
 8015e4e:	428b      	cmp	r3, r1
 8015e50:	d1f8      	bne.n	8015e44 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015e52:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015e56:	4770      	bx	lr

08015e58 <_ZN8touchgfx11ApplicationC1Ev>:
 8015e58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015e5a:	4606      	mov	r6, r0
 8015e5c:	4b1c      	ldr	r3, [pc, #112]	; (8015ed0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015e5e:	f846 3b04 	str.w	r3, [r6], #4
 8015e62:	4604      	mov	r4, r0
 8015e64:	2500      	movs	r5, #0
 8015e66:	22a8      	movs	r2, #168	; 0xa8
 8015e68:	2100      	movs	r1, #0
 8015e6a:	4630      	mov	r0, r6
 8015e6c:	f015 f823 	bl	802aeb6 <memset>
 8015e70:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015e74:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015e78:	f7ff ffe0 	bl	8015e3c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015e7c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015e80:	f7ff ffdc 	bl	8015e3c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015e84:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015e88:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015e8c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015e90:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015e94:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015e98:	490e      	ldr	r1, [pc, #56]	; (8015ed4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015e9a:	480f      	ldr	r0, [pc, #60]	; (8015ed8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015e9c:	4f0f      	ldr	r7, [pc, #60]	; (8015edc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015e9e:	f010 fde9 	bl	8026a74 <CRC_Lock>
 8015ea2:	4b0f      	ldr	r3, [pc, #60]	; (8015ee0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015ea4:	b158      	cbz	r0, 8015ebe <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015ea6:	801d      	strh	r5, [r3, #0]
 8015ea8:	4a0e      	ldr	r2, [pc, #56]	; (8015ee4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015eaa:	2300      	movs	r3, #0
 8015eac:	6013      	str	r3, [r2, #0]
 8015eae:	4a0e      	ldr	r2, [pc, #56]	; (8015ee8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015eb0:	603b      	str	r3, [r7, #0]
 8015eb2:	4630      	mov	r0, r6
 8015eb4:	6013      	str	r3, [r2, #0]
 8015eb6:	f7ff ff01 	bl	8015cbc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015eba:	4620      	mov	r0, r4
 8015ebc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015ebe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015ec2:	2002      	movs	r0, #2
 8015ec4:	801a      	strh	r2, [r3, #0]
 8015ec6:	6038      	str	r0, [r7, #0]
 8015ec8:	f001 fb4a 	bl	8017560 <_ZN8touchgfx6Screen4drawEv>
 8015ecc:	e7ec      	b.n	8015ea8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8015ece:	bf00      	nop
 8015ed0:	0802f2b8 	.word	0x0802f2b8
 8015ed4:	b5e8b5cd 	.word	0xb5e8b5cd
 8015ed8:	f407a5c2 	.word	0xf407a5c2
 8015edc:	20012de8 	.word	0x20012de8
 8015ee0:	20000088 	.word	0x20000088
 8015ee4:	20012df8 	.word	0x20012df8
 8015ee8:	20012dec 	.word	0x20012dec

08015eec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8015eec:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015ef0:	3b01      	subs	r3, #1
 8015ef2:	b29b      	uxth	r3, r3
 8015ef4:	428b      	cmp	r3, r1
 8015ef6:	b510      	push	{r4, lr}
 8015ef8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8015efc:	d908      	bls.n	8015f10 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8015efe:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015f02:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015f06:	681a      	ldr	r2, [r3, #0]
 8015f08:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8015f0c:	685a      	ldr	r2, [r3, #4]
 8015f0e:	6062      	str	r2, [r4, #4]
 8015f10:	bd10      	pop	{r4, pc}
	...

08015f14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f18:	4b8f      	ldr	r3, [pc, #572]	; (8016158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8015f1a:	b08f      	sub	sp, #60	; 0x3c
 8015f1c:	ac0a      	add	r4, sp, #40	; 0x28
 8015f1e:	e884 0006 	stmia.w	r4, {r1, r2}
 8015f22:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015f26:	4b8d      	ldr	r3, [pc, #564]	; (801615c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8015f28:	4683      	mov	fp, r0
 8015f2a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015f2e:	4620      	mov	r0, r4
 8015f30:	f7ff fda1 	bl	8015a76 <_ZN8touchgfx4Rect10restrictToEss>
 8015f34:	4620      	mov	r0, r4
 8015f36:	f7fa fd8c 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015f3a:	2800      	cmp	r0, #0
 8015f3c:	d16a      	bne.n	8016014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015f3e:	9403      	str	r4, [sp, #12]
 8015f40:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015f44:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015f48:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8015f4c:	35a4      	adds	r5, #164	; 0xa4
 8015f4e:	9301      	str	r3, [sp, #4]
 8015f50:	b15c      	cbz	r4, 8015f6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8015f52:	4629      	mov	r1, r5
 8015f54:	9803      	ldr	r0, [sp, #12]
 8015f56:	f7ff fddf 	bl	8015b18 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015f5a:	3c01      	subs	r4, #1
 8015f5c:	b118      	cbz	r0, 8015f66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8015f5e:	b2a1      	uxth	r1, r4
 8015f60:	9801      	ldr	r0, [sp, #4]
 8015f62:	f7ff ffc3 	bl	8015eec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015f66:	3d08      	subs	r5, #8
 8015f68:	e7f2      	b.n	8015f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8015f6a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8015f6e:	f8cd a010 	str.w	sl, [sp, #16]
 8015f72:	f10a 33ff 	add.w	r3, sl, #4294967295
 8015f76:	9302      	str	r3, [sp, #8]
 8015f78:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8015f7c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015f80:	9306      	str	r3, [sp, #24]
 8015f82:	445c      	add	r4, fp
 8015f84:	2500      	movs	r5, #0
 8015f86:	4626      	mov	r6, r4
 8015f88:	f8cd a014 	str.w	sl, [sp, #20]
 8015f8c:	462f      	mov	r7, r5
 8015f8e:	9b05      	ldr	r3, [sp, #20]
 8015f90:	2b00      	cmp	r3, #0
 8015f92:	d073      	beq.n	801607c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015f94:	9903      	ldr	r1, [sp, #12]
 8015f96:	4630      	mov	r0, r6
 8015f98:	f7ff fd4b 	bl	8015a32 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015f9c:	b350      	cbz	r0, 8015ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015f9e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015fa2:	f9b6 c000 	ldrsh.w	ip, [r6]
 8015fa6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8015faa:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8015fae:	45e6      	cmp	lr, ip
 8015fb0:	db33      	blt.n	801601a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015fb2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015fb6:	88b3      	ldrh	r3, [r6, #4]
 8015fb8:	4472      	add	r2, lr
 8015fba:	4463      	add	r3, ip
 8015fbc:	b212      	sxth	r2, r2
 8015fbe:	b21b      	sxth	r3, r3
 8015fc0:	429a      	cmp	r2, r3
 8015fc2:	dc2a      	bgt.n	801601a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015fc4:	88f3      	ldrh	r3, [r6, #6]
 8015fc6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015fca:	fa1f f289 	uxth.w	r2, r9
 8015fce:	4413      	add	r3, r2
 8015fd0:	b29b      	uxth	r3, r3
 8015fd2:	45c8      	cmp	r8, r9
 8015fd4:	fa1f fc88 	uxth.w	ip, r8
 8015fd8:	fa0f fe83 	sxth.w	lr, r3
 8015fdc:	db0f      	blt.n	8015ffe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8015fde:	eba3 030c 	sub.w	r3, r3, ip
 8015fe2:	1ac9      	subs	r1, r1, r3
 8015fe4:	b209      	sxth	r1, r1
 8015fe6:	2900      	cmp	r1, #0
 8015fe8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015fec:	dd12      	ble.n	8016014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015fee:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015ff2:	4605      	mov	r5, r0
 8015ff4:	9b05      	ldr	r3, [sp, #20]
 8015ff6:	3b01      	subs	r3, #1
 8015ff8:	9305      	str	r3, [sp, #20]
 8015ffa:	3e08      	subs	r6, #8
 8015ffc:	e7c7      	b.n	8015f8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8015ffe:	4461      	add	r1, ip
 8016000:	b209      	sxth	r1, r1
 8016002:	4571      	cmp	r1, lr
 8016004:	dc38      	bgt.n	8016078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016006:	eba2 020c 	sub.w	r2, r2, ip
 801600a:	b212      	sxth	r2, r2
 801600c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016010:	2a00      	cmp	r2, #0
 8016012:	dcee      	bgt.n	8015ff2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016014:	b00f      	add	sp, #60	; 0x3c
 8016016:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801601a:	45c8      	cmp	r8, r9
 801601c:	db2c      	blt.n	8016078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801601e:	88f3      	ldrh	r3, [r6, #6]
 8016020:	4499      	add	r9, r3
 8016022:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8016026:	4498      	add	r8, r3
 8016028:	fa0f f989 	sxth.w	r9, r9
 801602c:	fa0f f888 	sxth.w	r8, r8
 8016030:	45c1      	cmp	r9, r8
 8016032:	db21      	blt.n	8016078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016034:	88b3      	ldrh	r3, [r6, #4]
 8016036:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801603a:	fa1f f28c 	uxth.w	r2, ip
 801603e:	4413      	add	r3, r2
 8016040:	b29b      	uxth	r3, r3
 8016042:	45e6      	cmp	lr, ip
 8016044:	fa1f f88e 	uxth.w	r8, lr
 8016048:	fa0f f983 	sxth.w	r9, r3
 801604c:	db0a      	blt.n	8016064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801604e:	eba3 0308 	sub.w	r3, r3, r8
 8016052:	1ac9      	subs	r1, r1, r3
 8016054:	b209      	sxth	r1, r1
 8016056:	2900      	cmp	r1, #0
 8016058:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801605c:	ddda      	ble.n	8016014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801605e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016062:	e7c6      	b.n	8015ff2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016064:	4441      	add	r1, r8
 8016066:	b209      	sxth	r1, r1
 8016068:	4549      	cmp	r1, r9
 801606a:	dc05      	bgt.n	8016078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801606c:	eba2 0208 	sub.w	r2, r2, r8
 8016070:	b212      	sxth	r2, r2
 8016072:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016076:	e7cb      	b.n	8016010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016078:	4607      	mov	r7, r0
 801607a:	e7bb      	b.n	8015ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801607c:	2d00      	cmp	r5, #0
 801607e:	d181      	bne.n	8015f84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016080:	2f00      	cmp	r7, #0
 8016082:	f000 81dd 	beq.w	8016440 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016086:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801608a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801608e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016092:	b2b3      	uxth	r3, r6
 8016094:	9305      	str	r3, [sp, #20]
 8016096:	9a05      	ldr	r2, [sp, #20]
 8016098:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801609c:	4413      	add	r3, r2
 801609e:	b2ba      	uxth	r2, r7
 80160a0:	4492      	add	sl, r2
 80160a2:	b29b      	uxth	r3, r3
 80160a4:	fa1f fa8a 	uxth.w	sl, sl
 80160a8:	fa0f f883 	sxth.w	r8, r3
 80160ac:	fa0f f98a 	sxth.w	r9, sl
 80160b0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80160b4:	9b04      	ldr	r3, [sp, #16]
 80160b6:	2b00      	cmp	r3, #0
 80160b8:	d052      	beq.n	8016160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80160ba:	9903      	ldr	r1, [sp, #12]
 80160bc:	4620      	mov	r0, r4
 80160be:	f7ff fcb8 	bl	8015a32 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80160c2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80160c6:	b1c0      	cbz	r0, 80160fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80160c8:	f9b4 e000 	ldrsh.w	lr, [r4]
 80160cc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80160d0:	4576      	cmp	r6, lr
 80160d2:	dc22      	bgt.n	801611a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80160d4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80160d8:	44f4      	add	ip, lr
 80160da:	fa0f fc8c 	sxth.w	ip, ip
 80160de:	45e0      	cmp	r8, ip
 80160e0:	db1b      	blt.n	801611a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80160e2:	428f      	cmp	r7, r1
 80160e4:	fa1f fc81 	uxth.w	ip, r1
 80160e8:	88e1      	ldrh	r1, [r4, #6]
 80160ea:	dc0d      	bgt.n	8016108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80160ec:	ebaa 0c0c 	sub.w	ip, sl, ip
 80160f0:	eba1 010c 	sub.w	r1, r1, ip
 80160f4:	f8a4 9002 	strh.w	r9, [r4, #2]
 80160f8:	80e1      	strh	r1, [r4, #6]
 80160fa:	4628      	mov	r0, r5
 80160fc:	9904      	ldr	r1, [sp, #16]
 80160fe:	3901      	subs	r1, #1
 8016100:	9104      	str	r1, [sp, #16]
 8016102:	3c08      	subs	r4, #8
 8016104:	4605      	mov	r5, r0
 8016106:	e7d3      	b.n	80160b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016108:	4461      	add	r1, ip
 801610a:	b209      	sxth	r1, r1
 801610c:	4549      	cmp	r1, r9
 801610e:	dcf5      	bgt.n	80160fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016110:	eba2 0c0c 	sub.w	ip, r2, ip
 8016114:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016118:	e7ef      	b.n	80160fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801611a:	428f      	cmp	r7, r1
 801611c:	dcee      	bgt.n	80160fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801611e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016122:	4461      	add	r1, ip
 8016124:	b209      	sxth	r1, r1
 8016126:	4589      	cmp	r9, r1
 8016128:	dbe8      	blt.n	80160fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801612a:	4576      	cmp	r6, lr
 801612c:	fa1f fc8e 	uxth.w	ip, lr
 8016130:	88a1      	ldrh	r1, [r4, #4]
 8016132:	dc07      	bgt.n	8016144 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8016134:	eba3 0c0c 	sub.w	ip, r3, ip
 8016138:	eba1 010c 	sub.w	r1, r1, ip
 801613c:	f8a4 8000 	strh.w	r8, [r4]
 8016140:	80a1      	strh	r1, [r4, #4]
 8016142:	e7da      	b.n	80160fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016144:	4461      	add	r1, ip
 8016146:	b209      	sxth	r1, r1
 8016148:	4588      	cmp	r8, r1
 801614a:	dbd7      	blt.n	80160fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801614c:	9905      	ldr	r1, [sp, #20]
 801614e:	eba1 0c0c 	sub.w	ip, r1, ip
 8016152:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016156:	e7d0      	b.n	80160fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016158:	20012d9a 	.word	0x20012d9a
 801615c:	20012d98 	.word	0x20012d98
 8016160:	2d00      	cmp	r5, #0
 8016162:	f000 816d 	beq.w	8016440 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016166:	9b06      	ldr	r3, [sp, #24]
 8016168:	445b      	add	r3, fp
 801616a:	461c      	mov	r4, r3
 801616c:	9b02      	ldr	r3, [sp, #8]
 801616e:	3301      	adds	r3, #1
 8016170:	f000 8166 	beq.w	8016440 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016174:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016178:	4629      	mov	r1, r5
 801617a:	9803      	ldr	r0, [sp, #12]
 801617c:	f7ff fccc 	bl	8015b18 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016180:	b120      	cbz	r0, 801618c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016182:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016186:	9801      	ldr	r0, [sp, #4]
 8016188:	f7ff feb0 	bl	8015eec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801618c:	9903      	ldr	r1, [sp, #12]
 801618e:	4628      	mov	r0, r5
 8016190:	f7ff fc4f 	bl	8015a32 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016194:	2800      	cmp	r0, #0
 8016196:	f000 809c 	beq.w	80162d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801619a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801619e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80161a2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80161a6:	9309      	str	r3, [sp, #36]	; 0x24
 80161a8:	fa1f f189 	uxth.w	r1, r9
 80161ac:	eb01 0c03 	add.w	ip, r1, r3
 80161b0:	fa1f fa8c 	uxth.w	sl, ip
 80161b4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80161b8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80161bc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80161c0:	b283      	uxth	r3, r0
 80161c2:	eb03 050c 	add.w	r5, r3, ip
 80161c6:	b2ad      	uxth	r5, r5
 80161c8:	9505      	str	r5, [sp, #20]
 80161ca:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80161ce:	9504      	str	r5, [sp, #16]
 80161d0:	4548      	cmp	r0, r9
 80161d2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80161d6:	f340 8099 	ble.w	801630c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80161da:	1a5b      	subs	r3, r3, r1
 80161dc:	b29b      	uxth	r3, r3
 80161de:	4596      	cmp	lr, r2
 80161e0:	fa0f f08a 	sxth.w	r0, sl
 80161e4:	b21e      	sxth	r6, r3
 80161e6:	dd2e      	ble.n	8016246 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80161e8:	9f02      	ldr	r7, [sp, #8]
 80161ea:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80161ee:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80161f2:	9f04      	ldr	r7, [sp, #16]
 80161f4:	1a3f      	subs	r7, r7, r0
 80161f6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80161fa:	fa1f fe8e 	uxth.w	lr, lr
 80161fe:	b292      	uxth	r2, r2
 8016200:	ebae 0102 	sub.w	r1, lr, r2
 8016204:	44a6      	add	lr, r4
 8016206:	4402      	add	r2, r0
 8016208:	b289      	uxth	r1, r1
 801620a:	fa0f fe8e 	sxth.w	lr, lr
 801620e:	b212      	sxth	r2, r2
 8016210:	b20d      	sxth	r5, r1
 8016212:	ebae 0202 	sub.w	r2, lr, r2
 8016216:	436f      	muls	r7, r5
 8016218:	4372      	muls	r2, r6
 801621a:	4297      	cmp	r7, r2
 801621c:	db09      	blt.n	8016232 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801621e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8016222:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8016226:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801622a:	449c      	add	ip, r3
 801622c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016230:	e686      	b.n	8015f40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016232:	4421      	add	r1, r4
 8016234:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016238:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801623c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016240:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016244:	e67c      	b.n	8015f40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016246:	9f04      	ldr	r7, [sp, #16]
 8016248:	42b8      	cmp	r0, r7
 801624a:	da27      	bge.n	801629c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801624c:	9902      	ldr	r1, [sp, #8]
 801624e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016252:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016256:	eb05 010e 	add.w	r1, r5, lr
 801625a:	fa1f f881 	uxth.w	r8, r1
 801625e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016262:	4411      	add	r1, r2
 8016264:	eba1 0108 	sub.w	r1, r1, r8
 8016268:	b289      	uxth	r1, r1
 801626a:	fa0f f988 	sxth.w	r9, r8
 801626e:	eba2 020e 	sub.w	r2, r2, lr
 8016272:	fa0f f881 	sxth.w	r8, r1
 8016276:	1a3f      	subs	r7, r7, r0
 8016278:	4372      	muls	r2, r6
 801627a:	fb08 f707 	mul.w	r7, r8, r7
 801627e:	42ba      	cmp	r2, r7
 8016280:	dc06      	bgt.n	8016290 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016282:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016286:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801628a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801628e:	e7ca      	b.n	8016226 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016290:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016294:	4429      	add	r1, r5
 8016296:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801629a:	e651      	b.n	8015f40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801629c:	9805      	ldr	r0, [sp, #20]
 801629e:	ebaa 0000 	sub.w	r0, sl, r0
 80162a2:	b280      	uxth	r0, r0
 80162a4:	2d06      	cmp	r5, #6
 80162a6:	fa0f fe80 	sxth.w	lr, r0
 80162aa:	d817      	bhi.n	80162dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80162ac:	9b04      	ldr	r3, [sp, #16]
 80162ae:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80162b2:	1c6b      	adds	r3, r5, #1
 80162b4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80162b8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80162bc:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80162c0:	9b01      	ldr	r3, [sp, #4]
 80162c2:	9801      	ldr	r0, [sp, #4]
 80162c4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80162c8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80162cc:	805a      	strh	r2, [r3, #2]
 80162ce:	809e      	strh	r6, [r3, #4]
 80162d0:	80d9      	strh	r1, [r3, #6]
 80162d2:	9b02      	ldr	r3, [sp, #8]
 80162d4:	3b01      	subs	r3, #1
 80162d6:	9302      	str	r3, [sp, #8]
 80162d8:	3c08      	subs	r4, #8
 80162da:	e747      	b.n	801616c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80162dc:	9a02      	ldr	r2, [sp, #8]
 80162de:	45b6      	cmp	lr, r6
 80162e0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80162e4:	db0d      	blt.n	8016302 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80162e6:	449c      	add	ip, r3
 80162e8:	fa1f fc8c 	uxth.w	ip, ip
 80162ec:	445a      	add	r2, fp
 80162ee:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80162f2:	448c      	add	ip, r1
 80162f4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80162f8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80162fc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016300:	e61e      	b.n	8015f40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016302:	445a      	add	r2, fp
 8016304:	4484      	add	ip, r0
 8016306:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801630a:	e78f      	b.n	801622c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801630c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016310:	fa1f f18e 	uxth.w	r1, lr
 8016314:	eb01 0806 	add.w	r8, r1, r6
 8016318:	b293      	uxth	r3, r2
 801631a:	fa1f f888 	uxth.w	r8, r8
 801631e:	9306      	str	r3, [sp, #24]
 8016320:	fa0f f388 	sxth.w	r3, r8
 8016324:	9307      	str	r3, [sp, #28]
 8016326:	9f06      	ldr	r7, [sp, #24]
 8016328:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801632c:	443b      	add	r3, r7
 801632e:	b29b      	uxth	r3, r3
 8016330:	4596      	cmp	lr, r2
 8016332:	9308      	str	r3, [sp, #32]
 8016334:	da24      	bge.n	8016380 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016336:	9905      	ldr	r1, [sp, #20]
 8016338:	eba3 0308 	sub.w	r3, r3, r8
 801633c:	ebaa 0401 	sub.w	r4, sl, r1
 8016340:	b2a4      	uxth	r4, r4
 8016342:	b29b      	uxth	r3, r3
 8016344:	b225      	sxth	r5, r4
 8016346:	b219      	sxth	r1, r3
 8016348:	eba2 020e 	sub.w	r2, r2, lr
 801634c:	eba9 0000 	sub.w	r0, r9, r0
 8016350:	436a      	muls	r2, r5
 8016352:	4348      	muls	r0, r1
 8016354:	4282      	cmp	r2, r0
 8016356:	9a02      	ldr	r2, [sp, #8]
 8016358:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801635c:	445a      	add	r2, fp
 801635e:	dc06      	bgt.n	801636e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016360:	9b07      	ldr	r3, [sp, #28]
 8016362:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8016366:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801636a:	44a4      	add	ip, r4
 801636c:	e75e      	b.n	801622c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801636e:	9904      	ldr	r1, [sp, #16]
 8016370:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016374:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016378:	4433      	add	r3, r6
 801637a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801637e:	e5df      	b.n	8015f40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016380:	9f06      	ldr	r7, [sp, #24]
 8016382:	9b04      	ldr	r3, [sp, #16]
 8016384:	1bc9      	subs	r1, r1, r7
 8016386:	fa0f f78a 	sxth.w	r7, sl
 801638a:	b289      	uxth	r1, r1
 801638c:	429f      	cmp	r7, r3
 801638e:	fa0f fe81 	sxth.w	lr, r1
 8016392:	dd23      	ble.n	80163dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016394:	9a05      	ldr	r2, [sp, #20]
 8016396:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801639a:	9d07      	ldr	r5, [sp, #28]
 801639c:	ebaa 0202 	sub.w	r2, sl, r2
 80163a0:	b292      	uxth	r2, r2
 80163a2:	eba5 0a03 	sub.w	sl, r5, r3
 80163a6:	b214      	sxth	r4, r2
 80163a8:	eba9 0000 	sub.w	r0, r9, r0
 80163ac:	9b02      	ldr	r3, [sp, #8]
 80163ae:	fb0e f000 	mul.w	r0, lr, r0
 80163b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80163b6:	00db      	lsls	r3, r3, #3
 80163b8:	4550      	cmp	r0, sl
 80163ba:	445b      	add	r3, fp
 80163bc:	db03      	blt.n	80163c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80163be:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80163c2:	4494      	add	ip, r2
 80163c4:	e732      	b.n	801622c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80163c6:	9a04      	ldr	r2, [sp, #16]
 80163c8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80163cc:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80163d0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80163d4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80163d8:	4431      	add	r1, r6
 80163da:	e75c      	b.n	8016296 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80163dc:	9b08      	ldr	r3, [sp, #32]
 80163de:	eba3 0308 	sub.w	r3, r3, r8
 80163e2:	b29b      	uxth	r3, r3
 80163e4:	2d06      	cmp	r5, #6
 80163e6:	b218      	sxth	r0, r3
 80163e8:	d813      	bhi.n	8016412 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80163ea:	9b07      	ldr	r3, [sp, #28]
 80163ec:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80163f0:	1c6b      	adds	r3, r5, #1
 80163f2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80163f6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80163fa:	9b01      	ldr	r3, [sp, #4]
 80163fc:	9901      	ldr	r1, [sp, #4]
 80163fe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016402:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016406:	805a      	strh	r2, [r3, #2]
 8016408:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801640a:	809a      	strh	r2, [r3, #4]
 801640c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016410:	e75f      	b.n	80162d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016412:	9c02      	ldr	r4, [sp, #8]
 8016414:	4570      	cmp	r0, lr
 8016416:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801641a:	db0d      	blt.n	8016438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801641c:	4431      	add	r1, r6
 801641e:	9b06      	ldr	r3, [sp, #24]
 8016420:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016424:	b289      	uxth	r1, r1
 8016426:	445c      	add	r4, fp
 8016428:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801642c:	4419      	add	r1, r3
 801642e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8016432:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8016436:	e583      	b.n	8015f40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016438:	445c      	add	r4, fp
 801643a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801643e:	e79b      	b.n	8016378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8016440:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016444:	1e65      	subs	r5, r4, #1
 8016446:	b2ad      	uxth	r5, r5
 8016448:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801644c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8016450:	42b5      	cmp	r5, r6
 8016452:	d044      	beq.n	80164de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8016454:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016458:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801645c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016460:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8016464:	4282      	cmp	r2, r0
 8016466:	d11f      	bne.n	80164a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016468:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801646c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016470:	459c      	cmp	ip, r3
 8016472:	d119      	bne.n	80164a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016474:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016478:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801647c:	19d8      	adds	r0, r3, r7
 801647e:	b200      	sxth	r0, r0
 8016480:	4288      	cmp	r0, r1
 8016482:	d109      	bne.n	8016498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016484:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8016488:	4413      	add	r3, r2
 801648a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801648e:	4629      	mov	r1, r5
 8016490:	9801      	ldr	r0, [sp, #4]
 8016492:	f7ff fd2b 	bl	8015eec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016496:	e003      	b.n	80164a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016498:	4411      	add	r1, r2
 801649a:	b209      	sxth	r1, r1
 801649c:	42b9      	cmp	r1, r7
 801649e:	d0f3      	beq.n	8016488 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80164a0:	3d01      	subs	r5, #1
 80164a2:	b2ad      	uxth	r5, r5
 80164a4:	3c08      	subs	r4, #8
 80164a6:	e7d3      	b.n	8016450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80164a8:	42b9      	cmp	r1, r7
 80164aa:	d1f9      	bne.n	80164a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80164ac:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80164b0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80164b4:	4299      	cmp	r1, r3
 80164b6:	d1f3      	bne.n	80164a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80164b8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80164bc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80164c0:	181f      	adds	r7, r3, r0
 80164c2:	b23f      	sxth	r7, r7
 80164c4:	42ba      	cmp	r2, r7
 80164c6:	d105      	bne.n	80164d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80164c8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80164cc:	440b      	add	r3, r1
 80164ce:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80164d2:	e7dc      	b.n	801648e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80164d4:	440a      	add	r2, r1
 80164d6:	b212      	sxth	r2, r2
 80164d8:	4290      	cmp	r0, r2
 80164da:	d1e1      	bne.n	80164a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80164dc:	e7f6      	b.n	80164cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80164de:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80164e2:	2e07      	cmp	r6, #7
 80164e4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80164e8:	d812      	bhi.n	8016510 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80164ea:	1c75      	adds	r5, r6, #1
 80164ec:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80164f0:	9d01      	ldr	r5, [sp, #4]
 80164f2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80164f6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80164fa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80164fe:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016502:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016506:	442c      	add	r4, r5
 8016508:	8061      	strh	r1, [r4, #2]
 801650a:	80a2      	strh	r2, [r4, #4]
 801650c:	80e3      	strh	r3, [r4, #6]
 801650e:	e581      	b.n	8016014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016510:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016514:	3e01      	subs	r6, #1
 8016516:	445c      	add	r4, fp
 8016518:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801651c:	f04f 37ff 	mov.w	r7, #4294967295
 8016520:	2500      	movs	r5, #0
 8016522:	9305      	str	r3, [sp, #20]
 8016524:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016528:	9302      	str	r3, [sp, #8]
 801652a:	1e72      	subs	r2, r6, #1
 801652c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016530:	9304      	str	r3, [sp, #16]
 8016532:	4691      	mov	r9, r2
 8016534:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8016538:	f1b9 3fff 	cmp.w	r9, #4294967295
 801653c:	bf14      	ite	ne
 801653e:	9905      	ldrne	r1, [sp, #20]
 8016540:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8016544:	6818      	ldr	r0, [r3, #0]
 8016546:	9207      	str	r2, [sp, #28]
 8016548:	bf18      	it	ne
 801654a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801654e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016552:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016556:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801655a:	9306      	str	r3, [sp, #24]
 801655c:	fb18 f801 	smulbb	r8, r8, r1
 8016560:	6859      	ldr	r1, [r3, #4]
 8016562:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016566:	4671      	mov	r1, lr
 8016568:	a80c      	add	r0, sp, #48	; 0x30
 801656a:	f7ff fafb 	bl	8015b64 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801656e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016572:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016576:	9b04      	ldr	r3, [sp, #16]
 8016578:	9a02      	ldr	r2, [sp, #8]
 801657a:	fb10 f001 	smulbb	r0, r0, r1
 801657e:	fb02 8803 	mla	r8, r2, r3, r8
 8016582:	eba0 0108 	sub.w	r1, r0, r8
 8016586:	f04f 0c08 	mov.w	ip, #8
 801658a:	fb90 f0fc 	sdiv	r0, r0, ip
 801658e:	4288      	cmp	r0, r1
 8016590:	dc20      	bgt.n	80165d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016592:	4551      	cmp	r1, sl
 8016594:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016598:	da03      	bge.n	80165a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801659a:	b1d9      	cbz	r1, 80165d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801659c:	468a      	mov	sl, r1
 801659e:	464f      	mov	r7, r9
 80165a0:	4635      	mov	r5, r6
 80165a2:	f109 39ff 	add.w	r9, r9, #4294967295
 80165a6:	f119 0f02 	cmn.w	r9, #2
 80165aa:	d1c5      	bne.n	8016538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80165ac:	4616      	mov	r6, r2
 80165ae:	3201      	adds	r2, #1
 80165b0:	f1a4 0408 	sub.w	r4, r4, #8
 80165b4:	d1b6      	bne.n	8016524 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80165b6:	9b01      	ldr	r3, [sp, #4]
 80165b8:	b2ac      	uxth	r4, r5
 80165ba:	00ed      	lsls	r5, r5, #3
 80165bc:	1958      	adds	r0, r3, r5
 80165be:	1c7b      	adds	r3, r7, #1
 80165c0:	d10b      	bne.n	80165da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80165c2:	4601      	mov	r1, r0
 80165c4:	9803      	ldr	r0, [sp, #12]
 80165c6:	f7ff facd 	bl	8015b64 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80165ca:	4621      	mov	r1, r4
 80165cc:	9801      	ldr	r0, [sp, #4]
 80165ce:	f7ff fc8d 	bl	8015eec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80165d2:	e4b5      	b.n	8015f40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80165d4:	464f      	mov	r7, r9
 80165d6:	4635      	mov	r5, r6
 80165d8:	e7ed      	b.n	80165b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80165da:	9b01      	ldr	r3, [sp, #4]
 80165dc:	00ff      	lsls	r7, r7, #3
 80165de:	19d9      	adds	r1, r3, r7
 80165e0:	f7ff fac0 	bl	8015b64 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80165e4:	9b03      	ldr	r3, [sp, #12]
 80165e6:	cb03      	ldmia	r3!, {r0, r1}
 80165e8:	445f      	add	r7, fp
 80165ea:	445d      	add	r5, fp
 80165ec:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80165f0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80165f4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80165f8:	9b03      	ldr	r3, [sp, #12]
 80165fa:	6869      	ldr	r1, [r5, #4]
 80165fc:	c303      	stmia	r3!, {r0, r1}
 80165fe:	e7e4      	b.n	80165ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016600 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016604:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016608:	b09b      	sub	sp, #108	; 0x6c
 801660a:	4604      	mov	r4, r0
 801660c:	4630      	mov	r0, r6
 801660e:	f7fa fa20 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016612:	4605      	mov	r5, r0
 8016614:	b948      	cbnz	r0, 801662a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8016616:	6823      	ldr	r3, [r4, #0]
 8016618:	e896 0006 	ldmia.w	r6, {r1, r2}
 801661c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801661e:	4620      	mov	r0, r4
 8016620:	4798      	blx	r3
 8016622:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8016626:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801662a:	4bc6      	ldr	r3, [pc, #792]	; (8016944 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801662c:	681b      	ldr	r3, [r3, #0]
 801662e:	2b00      	cmp	r3, #0
 8016630:	d03f      	beq.n	80166b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016632:	4dc5      	ldr	r5, [pc, #788]	; (8016948 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8016634:	4628      	mov	r0, r5
 8016636:	f7fa fa0c 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 801663a:	4606      	mov	r6, r0
 801663c:	2800      	cmp	r0, #0
 801663e:	d138      	bne.n	80166b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016640:	4628      	mov	r0, r5
 8016642:	f7ff f907 	bl	8015854 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016646:	6823      	ldr	r3, [r4, #0]
 8016648:	6829      	ldr	r1, [r5, #0]
 801664a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801664c:	686a      	ldr	r2, [r5, #4]
 801664e:	4620      	mov	r0, r4
 8016650:	4798      	blx	r3
 8016652:	802e      	strh	r6, [r5, #0]
 8016654:	806e      	strh	r6, [r5, #2]
 8016656:	80ae      	strh	r6, [r5, #4]
 8016658:	80ee      	strh	r6, [r5, #6]
 801665a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801665e:	4dbb      	ldr	r5, [pc, #748]	; (801694c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016660:	4640      	mov	r0, r8
 8016662:	f7ff fbeb 	bl	8015e3c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016666:	882e      	ldrh	r6, [r5, #0]
 8016668:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801666c:	4633      	mov	r3, r6
 801666e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016672:	42bb      	cmp	r3, r7
 8016674:	d224      	bcs.n	80166c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016676:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801667a:	2907      	cmp	r1, #7
 801667c:	d816      	bhi.n	80166ac <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801667e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016682:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8016686:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801668a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801668e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016692:	1c4a      	adds	r2, r1, #1
 8016694:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8016698:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801669c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80166a0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80166a4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80166a8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80166ac:	3301      	adds	r3, #1
 80166ae:	b29b      	uxth	r3, r3
 80166b0:	e7df      	b.n	8016672 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80166b2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80166b6:	2b00      	cmp	r3, #0
 80166b8:	d1cf      	bne.n	801665a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80166ba:	b01b      	add	sp, #108	; 0x6c
 80166bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80166c0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80166c4:	42b3      	cmp	r3, r6
 80166c6:	d90c      	bls.n	80166e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80166c8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80166cc:	6822      	ldr	r2, [r4, #0]
 80166ce:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80166d2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80166d4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80166d8:	4620      	mov	r0, r4
 80166da:	3601      	adds	r6, #1
 80166dc:	47b8      	blx	r7
 80166de:	b2b6      	uxth	r6, r6
 80166e0:	e7ee      	b.n	80166c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80166e2:	4a9b      	ldr	r2, [pc, #620]	; (8016950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80166e4:	6813      	ldr	r3, [r2, #0]
 80166e6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80166ea:	2b01      	cmp	r3, #1
 80166ec:	4691      	mov	r9, r2
 80166ee:	f040 80e2 	bne.w	80168b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80166f2:	8829      	ldrh	r1, [r5, #0]
 80166f4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80166f8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80166fc:	33ae      	adds	r3, #174	; 0xae
 80166fe:	2600      	movs	r6, #0
 8016700:	428f      	cmp	r7, r1
 8016702:	f103 0308 	add.w	r3, r3, #8
 8016706:	dd0a      	ble.n	801671e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016708:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801670c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8016710:	4402      	add	r2, r0
 8016712:	b212      	sxth	r2, r2
 8016714:	4296      	cmp	r6, r2
 8016716:	bfb8      	it	lt
 8016718:	4616      	movlt	r6, r2
 801671a:	3101      	adds	r1, #1
 801671c:	e7f0      	b.n	8016700 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801671e:	4b8d      	ldr	r3, [pc, #564]	; (8016954 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8016720:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8016950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8016724:	881b      	ldrh	r3, [r3, #0]
 8016726:	2b0f      	cmp	r3, #15
 8016728:	bf88      	it	hi
 801672a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801672e:	f04f 0300 	mov.w	r3, #0
 8016732:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8016736:	bf98      	it	ls
 8016738:	f04f 0b01 	movls.w	fp, #1
 801673c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8016740:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8016744:	4b82      	ldr	r3, [pc, #520]	; (8016950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016746:	4438      	add	r0, r7
 8016748:	b207      	sxth	r7, r0
 801674a:	6818      	ldr	r0, [r3, #0]
 801674c:	42b7      	cmp	r7, r6
 801674e:	6803      	ldr	r3, [r0, #0]
 8016750:	f280 8083 	bge.w	801685a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016754:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8016758:	4798      	blx	r3
 801675a:	eb07 030b 	add.w	r3, r7, fp
 801675e:	4298      	cmp	r0, r3
 8016760:	da07      	bge.n	8016772 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016762:	42b0      	cmp	r0, r6
 8016764:	da05      	bge.n	8016772 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016766:	4287      	cmp	r7, r0
 8016768:	dd6c      	ble.n	8016844 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801676a:	2f00      	cmp	r7, #0
 801676c:	dd6a      	ble.n	8016844 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801676e:	4630      	mov	r0, r6
 8016770:	e004      	b.n	801677c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8016772:	4287      	cmp	r7, r0
 8016774:	dcfb      	bgt.n	801676e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016776:	42b0      	cmp	r0, r6
 8016778:	bfa8      	it	ge
 801677a:	4630      	movge	r0, r6
 801677c:	4b76      	ldr	r3, [pc, #472]	; (8016958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801677e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016782:	1bc0      	subs	r0, r0, r7
 8016784:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016788:	882f      	ldrh	r7, [r5, #0]
 801678a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801678e:	2200      	movs	r2, #0
 8016790:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016794:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016798:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801679c:	42bb      	cmp	r3, r7
 801679e:	d9cd      	bls.n	801673c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80167a0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80167a4:	ab07      	add	r3, sp, #28
 80167a6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80167aa:	6851      	ldr	r1, [r2, #4]
 80167ac:	c303      	stmia	r3!, {r0, r1}
 80167ae:	a905      	add	r1, sp, #20
 80167b0:	a807      	add	r0, sp, #28
 80167b2:	f7ff f93e 	bl	8015a32 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80167b6:	2800      	cmp	r0, #0
 80167b8:	d04c      	beq.n	8016854 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80167ba:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80167be:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80167c2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80167c6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80167ca:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80167ce:	9302      	str	r3, [sp, #8]
 80167d0:	4686      	mov	lr, r0
 80167d2:	4290      	cmp	r0, r2
 80167d4:	4450      	add	r0, sl
 80167d6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80167da:	bfb8      	it	lt
 80167dc:	4696      	movlt	lr, r2
 80167de:	4452      	add	r2, sl
 80167e0:	4299      	cmp	r1, r3
 80167e2:	b280      	uxth	r0, r0
 80167e4:	b292      	uxth	r2, r2
 80167e6:	468c      	mov	ip, r1
 80167e8:	fa0f fa82 	sxth.w	sl, r2
 80167ec:	bfb8      	it	lt
 80167ee:	469c      	movlt	ip, r3
 80167f0:	b203      	sxth	r3, r0
 80167f2:	4553      	cmp	r3, sl
 80167f4:	bfb8      	it	lt
 80167f6:	4602      	movlt	r2, r0
 80167f8:	eba2 020e 	sub.w	r2, r2, lr
 80167fc:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016800:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016804:	9b02      	ldr	r3, [sp, #8]
 8016806:	f8ad e01c 	strh.w	lr, [sp, #28]
 801680a:	4411      	add	r1, r2
 801680c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016810:	f8ad c01e 	strh.w	ip, [sp, #30]
 8016814:	4413      	add	r3, r2
 8016816:	b289      	uxth	r1, r1
 8016818:	b29b      	uxth	r3, r3
 801681a:	b208      	sxth	r0, r1
 801681c:	b21a      	sxth	r2, r3
 801681e:	4290      	cmp	r0, r2
 8016820:	bfb8      	it	lt
 8016822:	460b      	movlt	r3, r1
 8016824:	eba3 030c 	sub.w	r3, r3, ip
 8016828:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801682c:	a807      	add	r0, sp, #28
 801682e:	f7fa f910 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016832:	b920      	cbnz	r0, 801683e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8016834:	6823      	ldr	r3, [r4, #0]
 8016836:	a907      	add	r1, sp, #28
 8016838:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801683a:	4620      	mov	r0, r4
 801683c:	4798      	blx	r3
 801683e:	3701      	adds	r7, #1
 8016840:	b2bf      	uxth	r7, r7
 8016842:	e7a9      	b.n	8016798 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8016844:	f8d9 0000 	ldr.w	r0, [r9]
 8016848:	6803      	ldr	r3, [r0, #0]
 801684a:	2101      	movs	r1, #1
 801684c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016850:	4798      	blx	r3
 8016852:	e773      	b.n	801673c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016854:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016858:	e7e8      	b.n	801682c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801685a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801685c:	4798      	blx	r3
 801685e:	4b3f      	ldr	r3, [pc, #252]	; (801695c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016860:	781b      	ldrb	r3, [r3, #0]
 8016862:	2b00      	cmp	r3, #0
 8016864:	f43f af29 	beq.w	80166ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016868:	2300      	movs	r3, #0
 801686a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801686e:	882b      	ldrh	r3, [r5, #0]
 8016870:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016874:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016878:	42ab      	cmp	r3, r5
 801687a:	f4bf af1e 	bcs.w	80166ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801687e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8016882:	2907      	cmp	r1, #7
 8016884:	d814      	bhi.n	80168b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8016886:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801688a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801688e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016892:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016896:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801689a:	1c4a      	adds	r2, r1, #1
 801689c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80168a0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80168a4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80168a8:	f8a2 c002 	strh.w	ip, [r2, #2]
 80168ac:	8097      	strh	r7, [r2, #4]
 80168ae:	80d6      	strh	r6, [r2, #6]
 80168b0:	3301      	adds	r3, #1
 80168b2:	b29b      	uxth	r3, r3
 80168b4:	e7e0      	b.n	8016878 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80168b6:	2b02      	cmp	r3, #2
 80168b8:	f040 8133 	bne.w	8016b22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80168bc:	4b28      	ldr	r3, [pc, #160]	; (8016960 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80168be:	781b      	ldrb	r3, [r3, #0]
 80168c0:	2b01      	cmp	r3, #1
 80168c2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80168c6:	f000 8098 	beq.w	80169fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80168ca:	882a      	ldrh	r2, [r5, #0]
 80168cc:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80168d0:	3201      	adds	r2, #1
 80168d2:	b292      	uxth	r2, r2
 80168d4:	2900      	cmp	r1, #0
 80168d6:	d0c2      	beq.n	801685e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80168d8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80168dc:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80168e0:	441e      	add	r6, r3
 80168e2:	b236      	sxth	r6, r6
 80168e4:	4694      	mov	ip, r2
 80168e6:	f04f 0900 	mov.w	r9, #0
 80168ea:	fa1f f38c 	uxth.w	r3, ip
 80168ee:	4299      	cmp	r1, r3
 80168f0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80168f4:	f240 80bf 	bls.w	8016a76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80168f8:	4427      	add	r7, r4
 80168fa:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80168fe:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016902:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016906:	4283      	cmp	r3, r0
 8016908:	f340 80a1 	ble.w	8016a4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801690c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8016910:	4406      	add	r6, r0
 8016912:	b236      	sxth	r6, r6
 8016914:	429e      	cmp	r6, r3
 8016916:	bfa8      	it	ge
 8016918:	461e      	movge	r6, r3
 801691a:	46e1      	mov	r9, ip
 801691c:	f10c 0c01 	add.w	ip, ip, #1
 8016920:	e7e3      	b.n	80168ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8016922:	d10a      	bne.n	801693a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8016924:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8016928:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801692c:	4562      	cmp	r2, ip
 801692e:	bfb8      	it	lt
 8016930:	4662      	movlt	r2, ip
 8016932:	4288      	cmp	r0, r1
 8016934:	bfb8      	it	lt
 8016936:	461f      	movlt	r7, r3
 8016938:	e087      	b.n	8016a4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801693a:	428a      	cmp	r2, r1
 801693c:	bfb8      	it	lt
 801693e:	460a      	movlt	r2, r1
 8016940:	e083      	b.n	8016a4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016942:	bf00      	nop
 8016944:	20012de4 	.word	0x20012de4
 8016948:	20012df0 	.word	0x20012df0
 801694c:	20000088 	.word	0x20000088
 8016950:	20012da4 	.word	0x20012da4
 8016954:	20012d9a 	.word	0x20012d9a
 8016958:	20012d98 	.word	0x20012d98
 801695c:	20012da2 	.word	0x20012da2
 8016960:	20012d9c 	.word	0x20012d9c
 8016964:	19a1      	adds	r1, r4, r6
 8016966:	ab07      	add	r3, sp, #28
 8016968:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801696c:	6849      	ldr	r1, [r1, #4]
 801696e:	c303      	stmia	r3!, {r0, r1}
 8016970:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016974:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016978:	2b13      	cmp	r3, #19
 801697a:	bfd8      	it	le
 801697c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016980:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016984:	440b      	add	r3, r1
 8016986:	1a9b      	subs	r3, r3, r2
 8016988:	a807      	add	r0, sp, #28
 801698a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801698e:	f7fe ff7b 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016992:	a807      	add	r0, sp, #28
 8016994:	f7fa f85d 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016998:	bb78      	cbnz	r0, 80169fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801699a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801699e:	f8d9 0000 	ldr.w	r0, [r9]
 80169a2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80169a6:	f8d0 e000 	ldr.w	lr, [r0]
 80169aa:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80169ae:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80169b2:	f1bc 0f14 	cmp.w	ip, #20
 80169b6:	bfa8      	it	ge
 80169b8:	f04f 0c14 	movge.w	ip, #20
 80169bc:	fa1f fc8c 	uxth.w	ip, ip
 80169c0:	f8cd c000 	str.w	ip, [sp]
 80169c4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80169c8:	47d8      	blx	fp
 80169ca:	4683      	mov	fp, r0
 80169cc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80169d0:	a807      	add	r0, sp, #28
 80169d2:	f7fe ff3f 	bl	8015854 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80169d6:	6823      	ldr	r3, [r4, #0]
 80169d8:	4426      	add	r6, r4
 80169da:	4620      	mov	r0, r4
 80169dc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80169de:	a907      	add	r1, sp, #28
 80169e0:	4798      	blx	r3
 80169e2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80169e6:	eba0 000b 	sub.w	r0, r0, fp
 80169ea:	b200      	sxth	r0, r0
 80169ec:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80169f0:	b918      	cbnz	r0, 80169fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80169f2:	b2b9      	uxth	r1, r7
 80169f4:	4650      	mov	r0, sl
 80169f6:	f7ff fa79 	bl	8015eec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80169fa:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80169fe:	f1bb 0f00 	cmp.w	fp, #0
 8016a02:	f43f af2c 	beq.w	801685e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016a06:	882b      	ldrh	r3, [r5, #0]
 8016a08:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8016a0c:	3301      	adds	r3, #1
 8016a0e:	b29b      	uxth	r3, r3
 8016a10:	2700      	movs	r7, #0
 8016a12:	b299      	uxth	r1, r3
 8016a14:	458b      	cmp	fp, r1
 8016a16:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8016a1a:	d9a3      	bls.n	8016964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8016a1c:	4426      	add	r6, r4
 8016a1e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016a22:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8016a26:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016a2a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8016a2e:	4408      	add	r0, r1
 8016a30:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016a34:	4461      	add	r1, ip
 8016a36:	b200      	sxth	r0, r0
 8016a38:	b209      	sxth	r1, r1
 8016a3a:	4288      	cmp	r0, r1
 8016a3c:	f6bf af71 	bge.w	8016922 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016a40:	4584      	cmp	ip, r0
 8016a42:	4662      	mov	r2, ip
 8016a44:	461f      	mov	r7, r3
 8016a46:	bfb8      	it	lt
 8016a48:	4602      	movlt	r2, r0
 8016a4a:	3301      	adds	r3, #1
 8016a4c:	e7e1      	b.n	8016a12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8016a4e:	d10e      	bne.n	8016a6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016a50:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016a54:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016a58:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8016a5c:	4473      	add	r3, lr
 8016a5e:	b21b      	sxth	r3, r3
 8016a60:	429e      	cmp	r6, r3
 8016a62:	bfa8      	it	ge
 8016a64:	461e      	movge	r6, r3
 8016a66:	4287      	cmp	r7, r0
 8016a68:	bfb8      	it	lt
 8016a6a:	46e1      	movlt	r9, ip
 8016a6c:	e756      	b.n	801691c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016a6e:	4286      	cmp	r6, r0
 8016a70:	bfa8      	it	ge
 8016a72:	4606      	movge	r6, r0
 8016a74:	e752      	b.n	801691c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016a76:	eb0a 0007 	add.w	r0, sl, r7
 8016a7a:	4427      	add	r7, r4
 8016a7c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016a80:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016a84:	f1bb 0f13 	cmp.w	fp, #19
 8016a88:	bfde      	ittt	le
 8016a8a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016a8e:	445e      	addle	r6, fp
 8016a90:	b236      	sxthle	r6, r6
 8016a92:	f7f9 ffde 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016a96:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8016a9a:	2800      	cmp	r0, #0
 8016a9c:	f47f af1a 	bne.w	80168d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016aa0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016aa4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016aa8:	482a      	ldr	r0, [pc, #168]	; (8016b54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8016aaa:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8016aae:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016ab2:	6800      	ldr	r0, [r0, #0]
 8016ab4:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016ab8:	1ab6      	subs	r6, r6, r2
 8016aba:	2e14      	cmp	r6, #20
 8016abc:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016ac0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016ac4:	bfa8      	it	ge
 8016ac6:	2614      	movge	r6, #20
 8016ac8:	f8d0 c000 	ldr.w	ip, [r0]
 8016acc:	b2b6      	uxth	r6, r6
 8016ace:	fa1f fb8b 	uxth.w	fp, fp
 8016ad2:	455e      	cmp	r6, fp
 8016ad4:	bf94      	ite	ls
 8016ad6:	9600      	strls	r6, [sp, #0]
 8016ad8:	f8cd b000 	strhi.w	fp, [sp]
 8016adc:	b292      	uxth	r2, r2
 8016ade:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016ae2:	b29b      	uxth	r3, r3
 8016ae4:	b289      	uxth	r1, r1
 8016ae6:	47b0      	blx	r6
 8016ae8:	6823      	ldr	r3, [r4, #0]
 8016aea:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016aee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016af0:	a907      	add	r1, sp, #28
 8016af2:	4620      	mov	r0, r4
 8016af4:	4798      	blx	r3
 8016af6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016afa:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016afe:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016b02:	1a5b      	subs	r3, r3, r1
 8016b04:	440a      	add	r2, r1
 8016b06:	b21b      	sxth	r3, r3
 8016b08:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8016b0c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016b10:	2b00      	cmp	r3, #0
 8016b12:	f47f aeda 	bne.w	80168ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016b16:	fa1f f189 	uxth.w	r1, r9
 8016b1a:	4650      	mov	r0, sl
 8016b1c:	f7ff f9e6 	bl	8015eec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016b20:	e6d3      	b.n	80168ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016b22:	882e      	ldrh	r6, [r5, #0]
 8016b24:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016b28:	42b3      	cmp	r3, r6
 8016b2a:	f67f ae98 	bls.w	801685e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016b2e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016b32:	ab07      	add	r3, sp, #28
 8016b34:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016b38:	6851      	ldr	r1, [r2, #4]
 8016b3a:	c303      	stmia	r3!, {r0, r1}
 8016b3c:	a807      	add	r0, sp, #28
 8016b3e:	f7f9 ff88 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016b42:	b920      	cbnz	r0, 8016b4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016b44:	6823      	ldr	r3, [r4, #0]
 8016b46:	a907      	add	r1, sp, #28
 8016b48:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016b4a:	4620      	mov	r0, r4
 8016b4c:	4798      	blx	r3
 8016b4e:	3601      	adds	r6, #1
 8016b50:	b2b6      	uxth	r6, r6
 8016b52:	e7e7      	b.n	8016b24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016b54:	20012da4 	.word	0x20012da4

08016b58 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016b58:	4b03      	ldr	r3, [pc, #12]	; (8016b68 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016b5a:	2200      	movs	r2, #0
 8016b5c:	801a      	strh	r2, [r3, #0]
 8016b5e:	805a      	strh	r2, [r3, #2]
 8016b60:	809a      	strh	r2, [r3, #4]
 8016b62:	80da      	strh	r2, [r3, #6]
 8016b64:	4770      	bx	lr
 8016b66:	bf00      	nop
 8016b68:	20012df0 	.word	0x20012df0

08016b6c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b70:	4606      	mov	r6, r0
 8016b72:	b09d      	sub	sp, #116	; 0x74
 8016b74:	a803      	add	r0, sp, #12
 8016b76:	4614      	mov	r4, r2
 8016b78:	468a      	mov	sl, r1
 8016b7a:	461d      	mov	r5, r3
 8016b7c:	f000 feca 	bl	8017914 <_ZN8touchgfx12TextProviderC1Ev>
 8016b80:	6833      	ldr	r3, [r6, #0]
 8016b82:	4630      	mov	r0, r6
 8016b84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016b86:	4798      	blx	r3
 8016b88:	6833      	ldr	r3, [r6, #0]
 8016b8a:	4607      	mov	r7, r0
 8016b8c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016b8e:	4630      	mov	r0, r6
 8016b90:	4798      	blx	r3
 8016b92:	462a      	mov	r2, r5
 8016b94:	9000      	str	r0, [sp, #0]
 8016b96:	4621      	mov	r1, r4
 8016b98:	463b      	mov	r3, r7
 8016b9a:	a803      	add	r0, sp, #12
 8016b9c:	f000 ff15 	bl	80179ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016ba0:	2500      	movs	r5, #0
 8016ba2:	462c      	mov	r4, r5
 8016ba4:	46a9      	mov	r9, r5
 8016ba6:	46a8      	mov	r8, r5
 8016ba8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016bac:	2300      	movs	r3, #0
 8016bae:	9302      	str	r3, [sp, #8]
 8016bb0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016bb4:	429c      	cmp	r4, r3
 8016bb6:	d002      	beq.n	8016bbe <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016bb8:	455c      	cmp	r4, fp
 8016bba:	bf18      	it	ne
 8016bbc:	4625      	movne	r5, r4
 8016bbe:	ab02      	add	r3, sp, #8
 8016bc0:	4632      	mov	r2, r6
 8016bc2:	4651      	mov	r1, sl
 8016bc4:	a803      	add	r0, sp, #12
 8016bc6:	f001 fa03 	bl	8017fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016bca:	4604      	mov	r4, r0
 8016bcc:	b108      	cbz	r0, 8016bd2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016bce:	280a      	cmp	r0, #10
 8016bd0:	d10a      	bne.n	8016be8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016bd2:	45c1      	cmp	r9, r8
 8016bd4:	bf38      	it	cc
 8016bd6:	46c1      	movcc	r9, r8
 8016bd8:	f04f 0800 	mov.w	r8, #0
 8016bdc:	2c00      	cmp	r4, #0
 8016bde:	d1e5      	bne.n	8016bac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016be0:	4648      	mov	r0, r9
 8016be2:	b01d      	add	sp, #116	; 0x74
 8016be4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016be8:	9a02      	ldr	r2, [sp, #8]
 8016bea:	2a00      	cmp	r2, #0
 8016bec:	d0de      	beq.n	8016bac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016bee:	7b57      	ldrb	r7, [r2, #13]
 8016bf0:	6833      	ldr	r3, [r6, #0]
 8016bf2:	8894      	ldrh	r4, [r2, #4]
 8016bf4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016bf6:	007f      	lsls	r7, r7, #1
 8016bf8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016bfc:	7a97      	ldrb	r7, [r2, #10]
 8016bfe:	4629      	mov	r1, r5
 8016c00:	4307      	orrs	r7, r0
 8016c02:	4630      	mov	r0, r6
 8016c04:	4798      	blx	r3
 8016c06:	4438      	add	r0, r7
 8016c08:	4480      	add	r8, r0
 8016c0a:	fa1f f888 	uxth.w	r8, r8
 8016c0e:	e7e5      	b.n	8016bdc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016c10 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016c10:	b508      	push	{r3, lr}
 8016c12:	6803      	ldr	r3, [r0, #0]
 8016c14:	68db      	ldr	r3, [r3, #12]
 8016c16:	4798      	blx	r3
 8016c18:	b128      	cbz	r0, 8016c26 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016c1a:	7b43      	ldrb	r3, [r0, #13]
 8016c1c:	7a80      	ldrb	r0, [r0, #10]
 8016c1e:	005b      	lsls	r3, r3, #1
 8016c20:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016c24:	4318      	orrs	r0, r3
 8016c26:	bd08      	pop	{r3, pc}

08016c28 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016c28:	b40e      	push	{r1, r2, r3}
 8016c2a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016c2c:	b09e      	sub	sp, #120	; 0x78
 8016c2e:	ab23      	add	r3, sp, #140	; 0x8c
 8016c30:	4605      	mov	r5, r0
 8016c32:	f853 4b04 	ldr.w	r4, [r3], #4
 8016c36:	9303      	str	r3, [sp, #12]
 8016c38:	a805      	add	r0, sp, #20
 8016c3a:	f000 fe6b 	bl	8017914 <_ZN8touchgfx12TextProviderC1Ev>
 8016c3e:	682b      	ldr	r3, [r5, #0]
 8016c40:	4628      	mov	r0, r5
 8016c42:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016c44:	4798      	blx	r3
 8016c46:	682b      	ldr	r3, [r5, #0]
 8016c48:	4606      	mov	r6, r0
 8016c4a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016c4c:	4628      	mov	r0, r5
 8016c4e:	4798      	blx	r3
 8016c50:	4633      	mov	r3, r6
 8016c52:	ae1e      	add	r6, sp, #120	; 0x78
 8016c54:	4621      	mov	r1, r4
 8016c56:	9000      	str	r0, [sp, #0]
 8016c58:	9a03      	ldr	r2, [sp, #12]
 8016c5a:	2400      	movs	r4, #0
 8016c5c:	a805      	add	r0, sp, #20
 8016c5e:	f000 feb4 	bl	80179ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016c62:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016c66:	462a      	mov	r2, r5
 8016c68:	4633      	mov	r3, r6
 8016c6a:	4621      	mov	r1, r4
 8016c6c:	a805      	add	r0, sp, #20
 8016c6e:	f001 f9af 	bl	8017fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016c72:	b1f0      	cbz	r0, 8016cb2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016c74:	280a      	cmp	r0, #10
 8016c76:	d018      	beq.n	8016caa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016c78:	9f04      	ldr	r7, [sp, #16]
 8016c7a:	b1b7      	cbz	r7, 8016caa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016c7c:	7b78      	ldrb	r0, [r7, #13]
 8016c7e:	7a3b      	ldrb	r3, [r7, #8]
 8016c80:	88ea      	ldrh	r2, [r5, #6]
 8016c82:	00c1      	lsls	r1, r0, #3
 8016c84:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016c88:	4319      	orrs	r1, r3
 8016c8a:	0643      	lsls	r3, r0, #25
 8016c8c:	bf44      	itt	mi
 8016c8e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016c92:	b219      	sxthmi	r1, r3
 8016c94:	0100      	lsls	r0, r0, #4
 8016c96:	79fb      	ldrb	r3, [r7, #7]
 8016c98:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016c9c:	4303      	orrs	r3, r0
 8016c9e:	4413      	add	r3, r2
 8016ca0:	1a5b      	subs	r3, r3, r1
 8016ca2:	b21b      	sxth	r3, r3
 8016ca4:	429c      	cmp	r4, r3
 8016ca6:	bfb8      	it	lt
 8016ca8:	461c      	movlt	r4, r3
 8016caa:	4633      	mov	r3, r6
 8016cac:	462a      	mov	r2, r5
 8016cae:	2100      	movs	r1, #0
 8016cb0:	e7dc      	b.n	8016c6c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016cb2:	b2a0      	uxth	r0, r4
 8016cb4:	b01e      	add	sp, #120	; 0x78
 8016cb6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016cba:	b003      	add	sp, #12
 8016cbc:	4770      	bx	lr

08016cbe <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8016cbe:	7a43      	ldrb	r3, [r0, #9]
 8016cc0:	8880      	ldrh	r0, [r0, #4]
 8016cc2:	4418      	add	r0, r3
 8016cc4:	b280      	uxth	r0, r0
 8016cc6:	4770      	bx	lr

08016cc8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016cc8:	6803      	ldr	r3, [r0, #0]
 8016cca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016ccc:	4718      	bx	r3

08016cce <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8016cce:	b40e      	push	{r1, r2, r3}
 8016cd0:	b570      	push	{r4, r5, r6, lr}
 8016cd2:	b09d      	sub	sp, #116	; 0x74
 8016cd4:	ab21      	add	r3, sp, #132	; 0x84
 8016cd6:	4604      	mov	r4, r0
 8016cd8:	f853 5b04 	ldr.w	r5, [r3], #4
 8016cdc:	9302      	str	r3, [sp, #8]
 8016cde:	a803      	add	r0, sp, #12
 8016ce0:	f000 fe18 	bl	8017914 <_ZN8touchgfx12TextProviderC1Ev>
 8016ce4:	6823      	ldr	r3, [r4, #0]
 8016ce6:	4620      	mov	r0, r4
 8016ce8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016cea:	4798      	blx	r3
 8016cec:	6823      	ldr	r3, [r4, #0]
 8016cee:	4606      	mov	r6, r0
 8016cf0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016cf2:	4620      	mov	r0, r4
 8016cf4:	4798      	blx	r3
 8016cf6:	4633      	mov	r3, r6
 8016cf8:	9000      	str	r0, [sp, #0]
 8016cfa:	9a02      	ldr	r2, [sp, #8]
 8016cfc:	4629      	mov	r1, r5
 8016cfe:	a803      	add	r0, sp, #12
 8016d00:	f000 fe63 	bl	80179ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016d04:	a803      	add	r0, sp, #12
 8016d06:	f001 fa31 	bl	801816c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016d0a:	2401      	movs	r4, #1
 8016d0c:	b2a3      	uxth	r3, r4
 8016d0e:	b140      	cbz	r0, 8016d22 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016d10:	280a      	cmp	r0, #10
 8016d12:	bf08      	it	eq
 8016d14:	3301      	addeq	r3, #1
 8016d16:	a803      	add	r0, sp, #12
 8016d18:	bf08      	it	eq
 8016d1a:	b21c      	sxtheq	r4, r3
 8016d1c:	f001 fa26 	bl	801816c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016d20:	e7f4      	b.n	8016d0c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016d22:	4618      	mov	r0, r3
 8016d24:	b01d      	add	sp, #116	; 0x74
 8016d26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016d2a:	b003      	add	sp, #12
 8016d2c:	4770      	bx	lr

08016d2e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8016d2e:	b40e      	push	{r1, r2, r3}
 8016d30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016d32:	b09e      	sub	sp, #120	; 0x78
 8016d34:	ab23      	add	r3, sp, #140	; 0x8c
 8016d36:	4604      	mov	r4, r0
 8016d38:	f853 5b04 	ldr.w	r5, [r3], #4
 8016d3c:	9303      	str	r3, [sp, #12]
 8016d3e:	a805      	add	r0, sp, #20
 8016d40:	f000 fde8 	bl	8017914 <_ZN8touchgfx12TextProviderC1Ev>
 8016d44:	6823      	ldr	r3, [r4, #0]
 8016d46:	4620      	mov	r0, r4
 8016d48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016d4a:	4798      	blx	r3
 8016d4c:	6823      	ldr	r3, [r4, #0]
 8016d4e:	4606      	mov	r6, r0
 8016d50:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016d52:	4620      	mov	r0, r4
 8016d54:	4798      	blx	r3
 8016d56:	4633      	mov	r3, r6
 8016d58:	4629      	mov	r1, r5
 8016d5a:	9000      	str	r0, [sp, #0]
 8016d5c:	9a03      	ldr	r2, [sp, #12]
 8016d5e:	a805      	add	r0, sp, #20
 8016d60:	ad1e      	add	r5, sp, #120	; 0x78
 8016d62:	f000 fe32 	bl	80179ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016d66:	2100      	movs	r1, #0
 8016d68:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016d6c:	4622      	mov	r2, r4
 8016d6e:	462b      	mov	r3, r5
 8016d70:	a805      	add	r0, sp, #20
 8016d72:	f001 f92d 	bl	8017fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016d76:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016d7a:	b1d8      	cbz	r0, 8016db4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016d7c:	280a      	cmp	r0, #10
 8016d7e:	d012      	beq.n	8016da6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016d80:	9804      	ldr	r0, [sp, #16]
 8016d82:	b180      	cbz	r0, 8016da6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016d84:	7b47      	ldrb	r7, [r0, #13]
 8016d86:	88e2      	ldrh	r2, [r4, #6]
 8016d88:	00fb      	lsls	r3, r7, #3
 8016d8a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016d8e:	7a03      	ldrb	r3, [r0, #8]
 8016d90:	430b      	orrs	r3, r1
 8016d92:	0679      	lsls	r1, r7, #25
 8016d94:	bf44      	itt	mi
 8016d96:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016d9a:	b21b      	sxthmi	r3, r3
 8016d9c:	1ad3      	subs	r3, r2, r3
 8016d9e:	b21b      	sxth	r3, r3
 8016da0:	429e      	cmp	r6, r3
 8016da2:	bfa8      	it	ge
 8016da4:	461e      	movge	r6, r3
 8016da6:	462b      	mov	r3, r5
 8016da8:	4622      	mov	r2, r4
 8016daa:	2100      	movs	r1, #0
 8016dac:	a805      	add	r0, sp, #20
 8016dae:	f001 f90f 	bl	8017fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016db2:	e7e2      	b.n	8016d7a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016db4:	4630      	mov	r0, r6
 8016db6:	b01e      	add	sp, #120	; 0x78
 8016db8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016dbc:	b003      	add	sp, #12
 8016dbe:	4770      	bx	lr

08016dc0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016dc0:	b513      	push	{r0, r1, r4, lr}
 8016dc2:	6803      	ldr	r3, [r0, #0]
 8016dc4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016dc8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016dcc:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016dd0:	2400      	movs	r4, #0
 8016dd2:	9400      	str	r4, [sp, #0]
 8016dd4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016dd8:	691b      	ldr	r3, [r3, #16]
 8016dda:	4669      	mov	r1, sp
 8016ddc:	4798      	blx	r3
 8016dde:	b002      	add	sp, #8
 8016de0:	bd10      	pop	{r4, pc}

08016de2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016de2:	b538      	push	{r3, r4, r5, lr}
 8016de4:	680b      	ldr	r3, [r1, #0]
 8016de6:	460c      	mov	r4, r1
 8016de8:	68db      	ldr	r3, [r3, #12]
 8016dea:	4605      	mov	r5, r0
 8016dec:	4798      	blx	r3
 8016dee:	6823      	ldr	r3, [r4, #0]
 8016df0:	4620      	mov	r0, r4
 8016df2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016df4:	4629      	mov	r1, r5
 8016df6:	4798      	blx	r3
 8016df8:	4628      	mov	r0, r5
 8016dfa:	bd38      	pop	{r3, r4, r5, pc}

08016dfc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8016dfc:	b410      	push	{r4}
 8016dfe:	880a      	ldrh	r2, [r1, #0]
 8016e00:	8884      	ldrh	r4, [r0, #4]
 8016e02:	4422      	add	r2, r4
 8016e04:	800a      	strh	r2, [r1, #0]
 8016e06:	88c4      	ldrh	r4, [r0, #6]
 8016e08:	884a      	ldrh	r2, [r1, #2]
 8016e0a:	4422      	add	r2, r4
 8016e0c:	804a      	strh	r2, [r1, #2]
 8016e0e:	6940      	ldr	r0, [r0, #20]
 8016e10:	b120      	cbz	r0, 8016e1c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016e12:	6803      	ldr	r3, [r0, #0]
 8016e14:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016e18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016e1a:	4718      	bx	r3
 8016e1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016e20:	4770      	bx	lr

08016e22 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016e22:	b570      	push	{r4, r5, r6, lr}
 8016e24:	8882      	ldrh	r2, [r0, #4]
 8016e26:	880b      	ldrh	r3, [r1, #0]
 8016e28:	4413      	add	r3, r2
 8016e2a:	800b      	strh	r3, [r1, #0]
 8016e2c:	88c2      	ldrh	r2, [r0, #6]
 8016e2e:	884b      	ldrh	r3, [r1, #2]
 8016e30:	460c      	mov	r4, r1
 8016e32:	4413      	add	r3, r2
 8016e34:	804b      	strh	r3, [r1, #2]
 8016e36:	4605      	mov	r5, r0
 8016e38:	1d01      	adds	r1, r0, #4
 8016e3a:	4620      	mov	r0, r4
 8016e3c:	f7f9 fdc6 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8016e40:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016e44:	2b00      	cmp	r3, #0
 8016e46:	dd0b      	ble.n	8016e60 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016e48:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016e4c:	2b00      	cmp	r3, #0
 8016e4e:	dd07      	ble.n	8016e60 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016e50:	6968      	ldr	r0, [r5, #20]
 8016e52:	b128      	cbz	r0, 8016e60 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016e54:	6803      	ldr	r3, [r0, #0]
 8016e56:	4621      	mov	r1, r4
 8016e58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016e5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016e5e:	4718      	bx	r3
 8016e60:	bd70      	pop	{r4, r5, r6, pc}
	...

08016e64 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016e64:	b570      	push	{r4, r5, r6, lr}
 8016e66:	8882      	ldrh	r2, [r0, #4]
 8016e68:	880b      	ldrh	r3, [r1, #0]
 8016e6a:	4413      	add	r3, r2
 8016e6c:	800b      	strh	r3, [r1, #0]
 8016e6e:	88c2      	ldrh	r2, [r0, #6]
 8016e70:	884b      	ldrh	r3, [r1, #2]
 8016e72:	460c      	mov	r4, r1
 8016e74:	4413      	add	r3, r2
 8016e76:	804b      	strh	r3, [r1, #2]
 8016e78:	4605      	mov	r5, r0
 8016e7a:	1d01      	adds	r1, r0, #4
 8016e7c:	4620      	mov	r0, r4
 8016e7e:	f7f9 fda5 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8016e82:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016e86:	2b00      	cmp	r3, #0
 8016e88:	dd19      	ble.n	8016ebe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016e8a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016e8e:	2b00      	cmp	r3, #0
 8016e90:	dd15      	ble.n	8016ebe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016e92:	6968      	ldr	r0, [r5, #20]
 8016e94:	b128      	cbz	r0, 8016ea2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016e96:	6803      	ldr	r3, [r0, #0]
 8016e98:	4621      	mov	r1, r4
 8016e9a:	691b      	ldr	r3, [r3, #16]
 8016e9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016ea0:	4718      	bx	r3
 8016ea2:	4b07      	ldr	r3, [pc, #28]	; (8016ec0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016ea4:	681b      	ldr	r3, [r3, #0]
 8016ea6:	3304      	adds	r3, #4
 8016ea8:	429d      	cmp	r5, r3
 8016eaa:	d108      	bne.n	8016ebe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016eac:	f7fe fea0 	bl	8015bf0 <_ZN8touchgfx11Application11getInstanceEv>
 8016eb0:	6803      	ldr	r3, [r0, #0]
 8016eb2:	6821      	ldr	r1, [r4, #0]
 8016eb4:	6862      	ldr	r2, [r4, #4]
 8016eb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016eb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016ebc:	4718      	bx	r3
 8016ebe:	bd70      	pop	{r4, r5, r6, pc}
 8016ec0:	20012de8 	.word	0x20012de8

08016ec4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016ec4:	b570      	push	{r4, r5, r6, lr}
 8016ec6:	4604      	mov	r4, r0
 8016ec8:	4616      	mov	r6, r2
 8016eca:	460d      	mov	r5, r1
 8016ecc:	b901      	cbnz	r1, 8016ed0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8016ece:	b192      	cbz	r2, 8016ef6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016ed0:	6823      	ldr	r3, [r4, #0]
 8016ed2:	4620      	mov	r0, r4
 8016ed4:	699b      	ldr	r3, [r3, #24]
 8016ed6:	4798      	blx	r3
 8016ed8:	88e2      	ldrh	r2, [r4, #6]
 8016eda:	88a1      	ldrh	r1, [r4, #4]
 8016edc:	4432      	add	r2, r6
 8016ede:	4429      	add	r1, r5
 8016ee0:	4620      	mov	r0, r4
 8016ee2:	b212      	sxth	r2, r2
 8016ee4:	b209      	sxth	r1, r1
 8016ee6:	f7ec f8b2 	bl	800304e <_ZN8touchgfx8Drawable5setXYEss>
 8016eea:	6823      	ldr	r3, [r4, #0]
 8016eec:	4620      	mov	r0, r4
 8016eee:	699b      	ldr	r3, [r3, #24]
 8016ef0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016ef4:	4718      	bx	r3
 8016ef6:	bd70      	pop	{r4, r5, r6, pc}

08016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016ef8:	b510      	push	{r4, lr}
 8016efa:	4604      	mov	r4, r0
 8016efc:	4608      	mov	r0, r1
 8016efe:	2300      	movs	r3, #0
 8016f00:	8023      	strh	r3, [r4, #0]
 8016f02:	8063      	strh	r3, [r4, #2]
 8016f04:	6803      	ldr	r3, [r0, #0]
 8016f06:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016f0a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8016f0e:	80a1      	strh	r1, [r4, #4]
 8016f10:	80e2      	strh	r2, [r4, #6]
 8016f12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f14:	4621      	mov	r1, r4
 8016f16:	4798      	blx	r3
 8016f18:	4620      	mov	r0, r4
 8016f1a:	bd10      	pop	{r4, pc}

08016f1c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8016f1c:	b530      	push	{r4, r5, lr}
 8016f1e:	8083      	strh	r3, [r0, #4]
 8016f20:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8016f24:	80c3      	strh	r3, [r0, #6]
 8016f26:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8016f2a:	7203      	strb	r3, [r0, #8]
 8016f2c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016f30:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8016f34:	7243      	strb	r3, [r0, #9]
 8016f36:	7a83      	ldrb	r3, [r0, #10]
 8016f38:	6141      	str	r1, [r0, #20]
 8016f3a:	f365 0306 	bfi	r3, r5, #0, #7
 8016f3e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8016f42:	8302      	strh	r2, [r0, #24]
 8016f44:	f365 13c7 	bfi	r3, r5, #7, #1
 8016f48:	7283      	strb	r3, [r0, #10]
 8016f4a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8016f4e:	72c3      	strb	r3, [r0, #11]
 8016f50:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8016f54:	7303      	strb	r3, [r0, #12]
 8016f56:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016f5a:	81c3      	strh	r3, [r0, #14]
 8016f5c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016f60:	8203      	strh	r3, [r0, #16]
 8016f62:	4b01      	ldr	r3, [pc, #4]	; (8016f68 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8016f64:	6003      	str	r3, [r0, #0]
 8016f66:	bd30      	pop	{r4, r5, pc}
 8016f68:	0802f374 	.word	0x0802f374

08016f6c <_ZNK8touchgfx9ConstFont4findEt>:
 8016f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016f6e:	6944      	ldr	r4, [r0, #20]
 8016f70:	b3bc      	cbz	r4, 8016fe2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f72:	88a3      	ldrh	r3, [r4, #4]
 8016f74:	8b02      	ldrh	r2, [r0, #24]
 8016f76:	1acb      	subs	r3, r1, r3
 8016f78:	f102 32ff 	add.w	r2, r2, #4294967295
 8016f7c:	d431      	bmi.n	8016fe2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f7e:	4293      	cmp	r3, r2
 8016f80:	dd0c      	ble.n	8016f9c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8016f82:	230e      	movs	r3, #14
 8016f84:	fb03 4302 	mla	r3, r3, r2, r4
 8016f88:	889b      	ldrh	r3, [r3, #4]
 8016f8a:	1a5b      	subs	r3, r3, r1
 8016f8c:	1ad3      	subs	r3, r2, r3
 8016f8e:	429a      	cmp	r2, r3
 8016f90:	db27      	blt.n	8016fe2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f92:	2b00      	cmp	r3, #0
 8016f94:	bfbc      	itt	lt
 8016f96:	2302      	movlt	r3, #2
 8016f98:	fb92 f3f3 	sdivlt	r3, r2, r3
 8016f9c:	2500      	movs	r5, #0
 8016f9e:	260e      	movs	r6, #14
 8016fa0:	4295      	cmp	r5, r2
 8016fa2:	dc1e      	bgt.n	8016fe2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016fa4:	fb06 4003 	mla	r0, r6, r3, r4
 8016fa8:	8887      	ldrh	r7, [r0, #4]
 8016faa:	42b9      	cmp	r1, r7
 8016fac:	d01a      	beq.n	8016fe4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8016fae:	d20d      	bcs.n	8016fcc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016fb0:	1e5a      	subs	r2, r3, #1
 8016fb2:	4295      	cmp	r5, r2
 8016fb4:	dc15      	bgt.n	8016fe2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016fb6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8016fba:	1a5b      	subs	r3, r3, r1
 8016fbc:	1ad3      	subs	r3, r2, r3
 8016fbe:	429a      	cmp	r2, r3
 8016fc0:	db0f      	blt.n	8016fe2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016fc2:	429d      	cmp	r5, r3
 8016fc4:	ddec      	ble.n	8016fa0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016fc6:	1953      	adds	r3, r2, r5
 8016fc8:	105b      	asrs	r3, r3, #1
 8016fca:	e7e9      	b.n	8016fa0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016fcc:	1c5d      	adds	r5, r3, #1
 8016fce:	42aa      	cmp	r2, r5
 8016fd0:	db07      	blt.n	8016fe2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016fd2:	8a43      	ldrh	r3, [r0, #18]
 8016fd4:	1acb      	subs	r3, r1, r3
 8016fd6:	442b      	add	r3, r5
 8016fd8:	429d      	cmp	r5, r3
 8016fda:	dc02      	bgt.n	8016fe2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016fdc:	429a      	cmp	r2, r3
 8016fde:	dadf      	bge.n	8016fa0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016fe0:	e7f1      	b.n	8016fc6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016fe2:	2000      	movs	r0, #0
 8016fe4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016fe6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016fe6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016fe8:	4604      	mov	r4, r0
 8016fea:	4617      	mov	r7, r2
 8016fec:	461e      	mov	r6, r3
 8016fee:	b911      	cbnz	r1, 8016ff6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016ff0:	2500      	movs	r5, #0
 8016ff2:	4628      	mov	r0, r5
 8016ff4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016ff6:	290a      	cmp	r1, #10
 8016ff8:	d0fa      	beq.n	8016ff0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016ffa:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8016ffe:	4291      	cmp	r1, r2
 8017000:	d0f6      	beq.n	8016ff0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017002:	f242 020b 	movw	r2, #8203	; 0x200b
 8017006:	4291      	cmp	r1, r2
 8017008:	d0f2      	beq.n	8016ff0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801700a:	f7ff ffaf 	bl	8016f6c <_ZNK8touchgfx9ConstFont4findEt>
 801700e:	4605      	mov	r5, r0
 8017010:	b950      	cbnz	r0, 8017028 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8017012:	6823      	ldr	r3, [r4, #0]
 8017014:	4620      	mov	r0, r4
 8017016:	691b      	ldr	r3, [r3, #16]
 8017018:	4798      	blx	r3
 801701a:	4601      	mov	r1, r0
 801701c:	4620      	mov	r0, r4
 801701e:	f7ff ffa5 	bl	8016f6c <_ZNK8touchgfx9ConstFont4findEt>
 8017022:	4605      	mov	r5, r0
 8017024:	2800      	cmp	r0, #0
 8017026:	d0e3      	beq.n	8016ff0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017028:	6823      	ldr	r3, [r4, #0]
 801702a:	4629      	mov	r1, r5
 801702c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801702e:	4620      	mov	r0, r4
 8017030:	4798      	blx	r3
 8017032:	6038      	str	r0, [r7, #0]
 8017034:	6823      	ldr	r3, [r4, #0]
 8017036:	4620      	mov	r0, r4
 8017038:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801703a:	4798      	blx	r3
 801703c:	7030      	strb	r0, [r6, #0]
 801703e:	e7d8      	b.n	8016ff2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017040 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8017040:	b538      	push	{r3, r4, r5, lr}
 8017042:	4605      	mov	r5, r0
 8017044:	f002 fb56 	bl	80196f4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017048:	4604      	mov	r4, r0
 801704a:	4628      	mov	r0, r5
 801704c:	f002 fa96 	bl	801957c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017050:	2800      	cmp	r0, #0
 8017052:	bf14      	ite	ne
 8017054:	2002      	movne	r0, #2
 8017056:	2000      	moveq	r0, #0
 8017058:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801705c:	b280      	uxth	r0, r0
 801705e:	bd38      	pop	{r3, r4, r5, pc}

08017060 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017060:	b538      	push	{r3, r4, r5, lr}
 8017062:	4605      	mov	r5, r0
 8017064:	f002 fb46 	bl	80196f4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017068:	4604      	mov	r4, r0
 801706a:	4628      	mov	r0, r5
 801706c:	f002 fa86 	bl	801957c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017070:	2800      	cmp	r0, #0
 8017072:	bf14      	ite	ne
 8017074:	2002      	movne	r0, #2
 8017076:	2000      	moveq	r0, #0
 8017078:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801707c:	f040 0001 	orr.w	r0, r0, #1
 8017080:	b280      	uxth	r0, r0
 8017082:	bd38      	pop	{r3, r4, r5, pc}

08017084 <_ZN8touchgfx4clzuEm>:
 8017084:	4603      	mov	r3, r0
 8017086:	b1c8      	cbz	r0, 80170bc <_ZN8touchgfx4clzuEm+0x38>
 8017088:	0c02      	lsrs	r2, r0, #16
 801708a:	0412      	lsls	r2, r2, #16
 801708c:	b9a2      	cbnz	r2, 80170b8 <_ZN8touchgfx4clzuEm+0x34>
 801708e:	0403      	lsls	r3, r0, #16
 8017090:	2010      	movs	r0, #16
 8017092:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017096:	bf04      	itt	eq
 8017098:	021b      	lsleq	r3, r3, #8
 801709a:	3008      	addeq	r0, #8
 801709c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80170a0:	bf04      	itt	eq
 80170a2:	011b      	lsleq	r3, r3, #4
 80170a4:	3004      	addeq	r0, #4
 80170a6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80170aa:	bf04      	itt	eq
 80170ac:	009b      	lsleq	r3, r3, #2
 80170ae:	3002      	addeq	r0, #2
 80170b0:	2b00      	cmp	r3, #0
 80170b2:	db04      	blt.n	80170be <_ZN8touchgfx4clzuEm+0x3a>
 80170b4:	3001      	adds	r0, #1
 80170b6:	4770      	bx	lr
 80170b8:	2000      	movs	r0, #0
 80170ba:	e7ea      	b.n	8017092 <_ZN8touchgfx4clzuEm+0xe>
 80170bc:	2020      	movs	r0, #32
 80170be:	4770      	bx	lr

080170c0 <_ZN8touchgfx7muldivuEmmmRm>:
 80170c0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80170c4:	460f      	mov	r7, r1
 80170c6:	4615      	mov	r5, r2
 80170c8:	461e      	mov	r6, r3
 80170ca:	4601      	mov	r1, r0
 80170cc:	b100      	cbz	r0, 80170d0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80170ce:	b927      	cbnz	r7, 80170da <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80170d0:	2000      	movs	r0, #0
 80170d2:	6030      	str	r0, [r6, #0]
 80170d4:	b002      	add	sp, #8
 80170d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80170da:	f7ff ffd3 	bl	8017084 <_ZN8touchgfx4clzuEm>
 80170de:	b980      	cbnz	r0, 8017102 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80170e0:	4638      	mov	r0, r7
 80170e2:	f7ff ffcf 	bl	8017084 <_ZN8touchgfx4clzuEm>
 80170e6:	2800      	cmp	r0, #0
 80170e8:	dd05      	ble.n	80170f6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80170ea:	4633      	mov	r3, r6
 80170ec:	462a      	mov	r2, r5
 80170ee:	4638      	mov	r0, r7
 80170f0:	f7ff ffe6 	bl	80170c0 <_ZN8touchgfx7muldivuEmmmRm>
 80170f4:	e7ee      	b.n	80170d4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80170f6:	f04f 33ff 	mov.w	r3, #4294967295
 80170fa:	6033      	str	r3, [r6, #0]
 80170fc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017100:	e7e8      	b.n	80170d4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017102:	fa37 f800 	lsrs.w	r8, r7, r0
 8017106:	fb07 f301 	mul.w	r3, r7, r1
 801710a:	d105      	bne.n	8017118 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801710c:	fbb3 f0f5 	udiv	r0, r3, r5
 8017110:	fb05 3510 	mls	r5, r5, r0, r3
 8017114:	6035      	str	r5, [r6, #0]
 8017116:	e7dd      	b.n	80170d4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017118:	2301      	movs	r3, #1
 801711a:	fa01 fa00 	lsl.w	sl, r1, r0
 801711e:	fa03 f000 	lsl.w	r0, r3, r0
 8017122:	3801      	subs	r0, #1
 8017124:	462a      	mov	r2, r5
 8017126:	4633      	mov	r3, r6
 8017128:	4038      	ands	r0, r7
 801712a:	f7ff ffc9 	bl	80170c0 <_ZN8touchgfx7muldivuEmmmRm>
 801712e:	fbba f9f5 	udiv	r9, sl, r5
 8017132:	462a      	mov	r2, r5
 8017134:	4607      	mov	r7, r0
 8017136:	ab01      	add	r3, sp, #4
 8017138:	fb05 a119 	mls	r1, r5, r9, sl
 801713c:	4640      	mov	r0, r8
 801713e:	f7ff ffbf 	bl	80170c0 <_ZN8touchgfx7muldivuEmmmRm>
 8017142:	9b01      	ldr	r3, [sp, #4]
 8017144:	6832      	ldr	r2, [r6, #0]
 8017146:	fb08 f409 	mul.w	r4, r8, r9
 801714a:	441a      	add	r2, r3
 801714c:	fbb2 f3f5 	udiv	r3, r2, r5
 8017150:	441c      	add	r4, r3
 8017152:	443c      	add	r4, r7
 8017154:	4420      	add	r0, r4
 8017156:	fb05 2513 	mls	r5, r5, r3, r2
 801715a:	e7db      	b.n	8017114 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801715c <_ZN8touchgfx6muldivElllRl>:
 801715c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801715e:	2800      	cmp	r0, #0
 8017160:	bfba      	itte	lt
 8017162:	4240      	neglt	r0, r0
 8017164:	f04f 34ff 	movlt.w	r4, #4294967295
 8017168:	2401      	movge	r4, #1
 801716a:	2900      	cmp	r1, #0
 801716c:	bfbc      	itt	lt
 801716e:	4249      	neglt	r1, r1
 8017170:	4264      	neglt	r4, r4
 8017172:	2a00      	cmp	r2, #0
 8017174:	bfb6      	itet	lt
 8017176:	4265      	neglt	r5, r4
 8017178:	4625      	movge	r5, r4
 801717a:	4252      	neglt	r2, r2
 801717c:	4288      	cmp	r0, r1
 801717e:	461e      	mov	r6, r3
 8017180:	bfc2      	ittt	gt
 8017182:	4603      	movgt	r3, r0
 8017184:	4608      	movgt	r0, r1
 8017186:	4619      	movgt	r1, r3
 8017188:	ab01      	add	r3, sp, #4
 801718a:	f7ff ff99 	bl	80170c0 <_ZN8touchgfx7muldivuEmmmRm>
 801718e:	9b01      	ldr	r3, [sp, #4]
 8017190:	4368      	muls	r0, r5
 8017192:	435c      	muls	r4, r3
 8017194:	6034      	str	r4, [r6, #0]
 8017196:	b002      	add	sp, #8
 8017198:	bd70      	pop	{r4, r5, r6, pc}

0801719a <_ZN8touchgfx6muldivElll>:
 801719a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801719c:	4606      	mov	r6, r0
 801719e:	ab01      	add	r3, sp, #4
 80171a0:	460d      	mov	r5, r1
 80171a2:	4614      	mov	r4, r2
 80171a4:	f7ff ffda 	bl	801715c <_ZN8touchgfx6muldivElllRl>
 80171a8:	2e00      	cmp	r6, #0
 80171aa:	db20      	blt.n	80171ee <_ZN8touchgfx6muldivElll+0x54>
 80171ac:	bf14      	ite	ne
 80171ae:	2301      	movne	r3, #1
 80171b0:	2300      	moveq	r3, #0
 80171b2:	2d00      	cmp	r5, #0
 80171b4:	db1e      	blt.n	80171f4 <_ZN8touchgfx6muldivElll+0x5a>
 80171b6:	bf14      	ite	ne
 80171b8:	2201      	movne	r2, #1
 80171ba:	2200      	moveq	r2, #0
 80171bc:	2c00      	cmp	r4, #0
 80171be:	fb03 f202 	mul.w	r2, r3, r2
 80171c2:	db1a      	blt.n	80171fa <_ZN8touchgfx6muldivElll+0x60>
 80171c4:	bf14      	ite	ne
 80171c6:	2301      	movne	r3, #1
 80171c8:	2300      	moveq	r3, #0
 80171ca:	4353      	muls	r3, r2
 80171cc:	2b01      	cmp	r3, #1
 80171ce:	d117      	bne.n	8017200 <_ZN8touchgfx6muldivElll+0x66>
 80171d0:	9b01      	ldr	r3, [sp, #4]
 80171d2:	2c00      	cmp	r4, #0
 80171d4:	bfb8      	it	lt
 80171d6:	4264      	neglt	r4, r4
 80171d8:	2b00      	cmp	r3, #0
 80171da:	f104 0401 	add.w	r4, r4, #1
 80171de:	bfb8      	it	lt
 80171e0:	425b      	neglt	r3, r3
 80171e2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80171e6:	db00      	blt.n	80171ea <_ZN8touchgfx6muldivElll+0x50>
 80171e8:	3001      	adds	r0, #1
 80171ea:	b002      	add	sp, #8
 80171ec:	bd70      	pop	{r4, r5, r6, pc}
 80171ee:	f04f 33ff 	mov.w	r3, #4294967295
 80171f2:	e7de      	b.n	80171b2 <_ZN8touchgfx6muldivElll+0x18>
 80171f4:	f04f 32ff 	mov.w	r2, #4294967295
 80171f8:	e7e0      	b.n	80171bc <_ZN8touchgfx6muldivElll+0x22>
 80171fa:	f04f 33ff 	mov.w	r3, #4294967295
 80171fe:	e7e4      	b.n	80171ca <_ZN8touchgfx6muldivElll+0x30>
 8017200:	3301      	adds	r3, #1
 8017202:	d1f2      	bne.n	80171ea <_ZN8touchgfx6muldivElll+0x50>
 8017204:	9b01      	ldr	r3, [sp, #4]
 8017206:	2c00      	cmp	r4, #0
 8017208:	bfb8      	it	lt
 801720a:	4264      	neglt	r4, r4
 801720c:	2b00      	cmp	r3, #0
 801720e:	bfb8      	it	lt
 8017210:	425b      	neglt	r3, r3
 8017212:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017216:	bfc8      	it	gt
 8017218:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801721c:	e7e5      	b.n	80171ea <_ZN8touchgfx6muldivElll+0x50>

0801721e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801721e:	2000      	movs	r0, #0
 8017220:	4770      	bx	lr

08017222 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8017222:	2001      	movs	r0, #1
 8017224:	4770      	bx	lr

08017226 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017226:	2002      	movs	r0, #2
 8017228:	4770      	bx	lr

0801722a <_ZN8touchgfx6ScreenD1Ev>:
 801722a:	4770      	bx	lr

0801722c <_ZN8touchgfx12GestureEventD1Ev>:
 801722c:	4770      	bx	lr

0801722e <_ZN8touchgfx9DragEventD1Ev>:
 801722e:	4770      	bx	lr

08017230 <_ZN8touchgfx10ClickEventD1Ev>:
 8017230:	4770      	bx	lr

08017232 <_ZN8touchgfx10ClickEventD0Ev>:
 8017232:	b510      	push	{r4, lr}
 8017234:	210c      	movs	r1, #12
 8017236:	4604      	mov	r4, r0
 8017238:	f012 fd51 	bl	8029cde <_ZdlPvj>
 801723c:	4620      	mov	r0, r4
 801723e:	bd10      	pop	{r4, pc}

08017240 <_ZN8touchgfx9DragEventD0Ev>:
 8017240:	b510      	push	{r4, lr}
 8017242:	2110      	movs	r1, #16
 8017244:	4604      	mov	r4, r0
 8017246:	f012 fd4a 	bl	8029cde <_ZdlPvj>
 801724a:	4620      	mov	r0, r4
 801724c:	bd10      	pop	{r4, pc}

0801724e <_ZN8touchgfx12GestureEventD0Ev>:
 801724e:	b510      	push	{r4, lr}
 8017250:	210c      	movs	r1, #12
 8017252:	4604      	mov	r4, r0
 8017254:	f012 fd43 	bl	8029cde <_ZdlPvj>
 8017258:	4620      	mov	r0, r4
 801725a:	bd10      	pop	{r4, pc}

0801725c <_ZN8touchgfx6ScreenD0Ev>:
 801725c:	b510      	push	{r4, lr}
 801725e:	213c      	movs	r1, #60	; 0x3c
 8017260:	4604      	mov	r4, r0
 8017262:	f012 fd3c 	bl	8029cde <_ZdlPvj>
 8017266:	4620      	mov	r0, r4
 8017268:	bd10      	pop	{r4, pc}
	...

0801726c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801726c:	b530      	push	{r4, r5, lr}
 801726e:	460d      	mov	r5, r1
 8017270:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017272:	b087      	sub	sp, #28
 8017274:	4604      	mov	r4, r0
 8017276:	b301      	cbz	r1, 80172ba <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017278:	a801      	add	r0, sp, #4
 801727a:	f7ff fe3d 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801727e:	892a      	ldrh	r2, [r5, #8]
 8017280:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017284:	7928      	ldrb	r0, [r5, #4]
 8017286:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801728a:	f88d 0010 	strb.w	r0, [sp, #16]
 801728e:	1ad2      	subs	r2, r2, r3
 8017290:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017292:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017294:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017298:	441a      	add	r2, r3
 801729a:	896b      	ldrh	r3, [r5, #10]
 801729c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80172a0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80172a4:	1b5b      	subs	r3, r3, r5
 80172a6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80172a8:	442b      	add	r3, r5
 80172aa:	4d05      	ldr	r5, [pc, #20]	; (80172c0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80172ac:	9503      	str	r5, [sp, #12]
 80172ae:	f8ad 3016 	strh.w	r3, [sp, #22]
 80172b2:	6803      	ldr	r3, [r0, #0]
 80172b4:	a903      	add	r1, sp, #12
 80172b6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80172b8:	4798      	blx	r3
 80172ba:	b007      	add	sp, #28
 80172bc:	bd30      	pop	{r4, r5, pc}
 80172be:	bf00      	nop
 80172c0:	0802f3fc 	.word	0x0802f3fc

080172c4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80172c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80172c8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80172ca:	b08a      	sub	sp, #40	; 0x28
 80172cc:	4604      	mov	r4, r0
 80172ce:	460d      	mov	r5, r1
 80172d0:	b113      	cbz	r3, 80172d8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80172d2:	790b      	ldrb	r3, [r1, #4]
 80172d4:	2b00      	cmp	r3, #0
 80172d6:	d044      	beq.n	8017362 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80172d8:	f104 0804 	add.w	r8, r4, #4
 80172dc:	4641      	mov	r1, r8
 80172de:	a803      	add	r0, sp, #12
 80172e0:	f7ff fe0a 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80172e4:	792b      	ldrb	r3, [r5, #4]
 80172e6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80172ea:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80172ee:	b983      	cbnz	r3, 8017312 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80172f0:	892a      	ldrh	r2, [r5, #8]
 80172f2:	88e9      	ldrh	r1, [r5, #6]
 80172f4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80172f8:	1b92      	subs	r2, r2, r6
 80172fa:	1bc9      	subs	r1, r1, r7
 80172fc:	9301      	str	r3, [sp, #4]
 80172fe:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017302:	9300      	str	r3, [sp, #0]
 8017304:	b212      	sxth	r2, r2
 8017306:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801730a:	b209      	sxth	r1, r1
 801730c:	4640      	mov	r0, r8
 801730e:	f7f9 fa79 	bl	8010804 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017312:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017314:	b329      	cbz	r1, 8017362 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017316:	a805      	add	r0, sp, #20
 8017318:	f7ff fdee 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801731c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017320:	792b      	ldrb	r3, [r5, #4]
 8017322:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017324:	f88d 3020 	strb.w	r3, [sp, #32]
 8017328:	1abf      	subs	r7, r7, r2
 801732a:	88ea      	ldrh	r2, [r5, #6]
 801732c:	4417      	add	r7, r2
 801732e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017330:	4417      	add	r7, r2
 8017332:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017336:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801733a:	1ab6      	subs	r6, r6, r2
 801733c:	892a      	ldrh	r2, [r5, #8]
 801733e:	4416      	add	r6, r2
 8017340:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017342:	4416      	add	r6, r2
 8017344:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017348:	4a07      	ldr	r2, [pc, #28]	; (8017368 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801734a:	9207      	str	r2, [sp, #28]
 801734c:	2600      	movs	r6, #0
 801734e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017352:	6803      	ldr	r3, [r0, #0]
 8017354:	a907      	add	r1, sp, #28
 8017356:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017358:	4798      	blx	r3
 801735a:	792b      	ldrb	r3, [r5, #4]
 801735c:	b10b      	cbz	r3, 8017362 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801735e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017362:	b00a      	add	sp, #40	; 0x28
 8017364:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017368:	0802f3d4 	.word	0x0802f3d4

0801736c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801736c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017370:	460c      	mov	r4, r1
 8017372:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017374:	b088      	sub	sp, #32
 8017376:	4605      	mov	r5, r0
 8017378:	2900      	cmp	r1, #0
 801737a:	d06d      	beq.n	8017458 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801737c:	4668      	mov	r0, sp
 801737e:	f7ff fdbb 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017382:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017384:	88e3      	ldrh	r3, [r4, #6]
 8017386:	f9bd 8000 	ldrsh.w	r8, [sp]
 801738a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801738e:	440b      	add	r3, r1
 8017390:	b21b      	sxth	r3, r3
 8017392:	4543      	cmp	r3, r8
 8017394:	db31      	blt.n	80173fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017396:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801739a:	44c4      	add	ip, r8
 801739c:	fa0f fc8c 	sxth.w	ip, ip
 80173a0:	4563      	cmp	r3, ip
 80173a2:	da2a      	bge.n	80173fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80173a4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80173a6:	8926      	ldrh	r6, [r4, #8]
 80173a8:	4416      	add	r6, r2
 80173aa:	b236      	sxth	r6, r6
 80173ac:	42be      	cmp	r6, r7
 80173ae:	db24      	blt.n	80173fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80173b0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80173b4:	4438      	add	r0, r7
 80173b6:	b200      	sxth	r0, r0
 80173b8:	4286      	cmp	r6, r0
 80173ba:	da1e      	bge.n	80173fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80173bc:	8963      	ldrh	r3, [r4, #10]
 80173be:	4419      	add	r1, r3
 80173c0:	b209      	sxth	r1, r1
 80173c2:	4541      	cmp	r1, r8
 80173c4:	db08      	blt.n	80173d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80173c6:	4561      	cmp	r1, ip
 80173c8:	da06      	bge.n	80173d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80173ca:	89a3      	ldrh	r3, [r4, #12]
 80173cc:	441a      	add	r2, r3
 80173ce:	b212      	sxth	r2, r2
 80173d0:	42ba      	cmp	r2, r7
 80173d2:	db01      	blt.n	80173d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80173d4:	4282      	cmp	r2, r0
 80173d6:	db10      	blt.n	80173fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80173d8:	4b21      	ldr	r3, [pc, #132]	; (8017460 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80173da:	9304      	str	r3, [sp, #16]
 80173dc:	2302      	movs	r3, #2
 80173de:	f88d 3014 	strb.w	r3, [sp, #20]
 80173e2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80173e4:	2300      	movs	r3, #0
 80173e6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80173ea:	f8ad 3018 	strh.w	r3, [sp, #24]
 80173ee:	f8ad 301a 	strh.w	r3, [sp, #26]
 80173f2:	6803      	ldr	r3, [r0, #0]
 80173f4:	a904      	add	r1, sp, #16
 80173f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80173f8:	4798      	blx	r3
 80173fa:	1d29      	adds	r1, r5, #4
 80173fc:	a802      	add	r0, sp, #8
 80173fe:	f7ff fd7b 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017402:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017406:	88e0      	ldrh	r0, [r4, #6]
 8017408:	7921      	ldrb	r1, [r4, #4]
 801740a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801740e:	8922      	ldrh	r2, [r4, #8]
 8017410:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017412:	f88d 1014 	strb.w	r1, [sp, #20]
 8017416:	eba3 0808 	sub.w	r8, r3, r8
 801741a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801741e:	1bdf      	subs	r7, r3, r7
 8017420:	b2bb      	uxth	r3, r7
 8017422:	fa1f f888 	uxth.w	r8, r8
 8017426:	8967      	ldrh	r7, [r4, #10]
 8017428:	89a4      	ldrh	r4, [r4, #12]
 801742a:	4440      	add	r0, r8
 801742c:	4460      	add	r0, ip
 801742e:	441a      	add	r2, r3
 8017430:	44b8      	add	r8, r7
 8017432:	4423      	add	r3, r4
 8017434:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017438:	4433      	add	r3, r6
 801743a:	4432      	add	r2, r6
 801743c:	44e0      	add	r8, ip
 801743e:	4c09      	ldr	r4, [pc, #36]	; (8017464 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017440:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017442:	9404      	str	r4, [sp, #16]
 8017444:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017448:	f8ad 801a 	strh.w	r8, [sp, #26]
 801744c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017450:	6803      	ldr	r3, [r0, #0]
 8017452:	a904      	add	r1, sp, #16
 8017454:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017456:	4798      	blx	r3
 8017458:	b008      	add	sp, #32
 801745a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801745e:	bf00      	nop
 8017460:	0802f3d4 	.word	0x0802f3d4
 8017464:	0802f3e8 	.word	0x0802f3e8

08017468 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017468:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801746a:	4604      	mov	r4, r0
 801746c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017470:	3201      	adds	r2, #1
 8017472:	d112      	bne.n	801749a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017474:	6803      	ldr	r3, [r0, #0]
 8017476:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801747a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801747e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017482:	2500      	movs	r5, #0
 8017484:	9500      	str	r5, [sp, #0]
 8017486:	466d      	mov	r5, sp
 8017488:	4629      	mov	r1, r5
 801748a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801748e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017490:	4798      	blx	r3
 8017492:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017496:	e884 0003 	stmia.w	r4, {r0, r1}
 801749a:	4620      	mov	r0, r4
 801749c:	b003      	add	sp, #12
 801749e:	bd30      	pop	{r4, r5, pc}

080174a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80174a0:	b513      	push	{r0, r1, r4, lr}
 80174a2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80174a6:	3301      	adds	r3, #1
 80174a8:	4604      	mov	r4, r0
 80174aa:	d109      	bne.n	80174c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80174ac:	4601      	mov	r1, r0
 80174ae:	4668      	mov	r0, sp
 80174b0:	f7ff fd22 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80174b4:	f8bd 3000 	ldrh.w	r3, [sp]
 80174b8:	8423      	strh	r3, [r4, #32]
 80174ba:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80174be:	8463      	strh	r3, [r4, #34]	; 0x22
 80174c0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80174c4:	b002      	add	sp, #8
 80174c6:	bd10      	pop	{r4, pc}

080174c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80174c8:	b513      	push	{r0, r1, r4, lr}
 80174ca:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80174ce:	3301      	adds	r3, #1
 80174d0:	4604      	mov	r4, r0
 80174d2:	d109      	bne.n	80174e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80174d4:	4601      	mov	r1, r0
 80174d6:	4668      	mov	r0, sp
 80174d8:	f7ff fd0e 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80174dc:	f8bd 3000 	ldrh.w	r3, [sp]
 80174e0:	8423      	strh	r3, [r4, #32]
 80174e2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80174e6:	8463      	strh	r3, [r4, #34]	; 0x22
 80174e8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80174ec:	b002      	add	sp, #8
 80174ee:	bd10      	pop	{r4, pc}

080174f0 <_ZN8touchgfx6ScreenC1Ev>:
 80174f0:	b570      	push	{r4, r5, r6, lr}
 80174f2:	4605      	mov	r5, r0
 80174f4:	4b16      	ldr	r3, [pc, #88]	; (8017550 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80174f6:	f845 3b04 	str.w	r3, [r5], #4
 80174fa:	2300      	movs	r3, #0
 80174fc:	8103      	strh	r3, [r0, #8]
 80174fe:	8143      	strh	r3, [r0, #10]
 8017500:	8183      	strh	r3, [r0, #12]
 8017502:	81c3      	strh	r3, [r0, #14]
 8017504:	8203      	strh	r3, [r0, #16]
 8017506:	8243      	strh	r3, [r0, #18]
 8017508:	8283      	strh	r3, [r0, #20]
 801750a:	82c3      	strh	r3, [r0, #22]
 801750c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017510:	6203      	str	r3, [r0, #32]
 8017512:	8483      	strh	r3, [r0, #36]	; 0x24
 8017514:	84c3      	strh	r3, [r0, #38]	; 0x26
 8017516:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801751a:	4a0e      	ldr	r2, [pc, #56]	; (8017554 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801751c:	6343      	str	r3, [r0, #52]	; 0x34
 801751e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8017522:	4b0d      	ldr	r3, [pc, #52]	; (8017558 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8017524:	6042      	str	r2, [r0, #4]
 8017526:	f9b3 6000 	ldrsh.w	r6, [r3]
 801752a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801752c:	4a0b      	ldr	r2, [pc, #44]	; (801755c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801752e:	4604      	mov	r4, r0
 8017530:	2101      	movs	r1, #1
 8017532:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8017536:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801753a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801753e:	4628      	mov	r0, r5
 8017540:	4798      	blx	r3
 8017542:	6863      	ldr	r3, [r4, #4]
 8017544:	4628      	mov	r0, r5
 8017546:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017548:	4631      	mov	r1, r6
 801754a:	4798      	blx	r3
 801754c:	4620      	mov	r0, r4
 801754e:	bd70      	pop	{r4, r5, r6, pc}
 8017550:	0802f410 	.word	0x0802f410
 8017554:	0802ec74 	.word	0x0802ec74
 8017558:	20012d9a 	.word	0x20012d9a
 801755c:	20012d98 	.word	0x20012d98

08017560 <_ZN8touchgfx6Screen4drawEv>:
 8017560:	b507      	push	{r0, r1, r2, lr}
 8017562:	4b09      	ldr	r3, [pc, #36]	; (8017588 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017564:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017568:	4b08      	ldr	r3, [pc, #32]	; (801758c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801756a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801756e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017572:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017576:	6803      	ldr	r3, [r0, #0]
 8017578:	2100      	movs	r1, #0
 801757a:	9100      	str	r1, [sp, #0]
 801757c:	689b      	ldr	r3, [r3, #8]
 801757e:	4669      	mov	r1, sp
 8017580:	4798      	blx	r3
 8017582:	b003      	add	sp, #12
 8017584:	f85d fb04 	ldr.w	pc, [sp], #4
 8017588:	20012d98 	.word	0x20012d98
 801758c:	20012d9a 	.word	0x20012d9a

08017590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017594:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017598:	2b00      	cmp	r3, #0
 801759a:	b089      	sub	sp, #36	; 0x24
 801759c:	4680      	mov	r8, r0
 801759e:	460c      	mov	r4, r1
 80175a0:	4615      	mov	r5, r2
 80175a2:	dd0e      	ble.n	80175c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80175a4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80175a8:	2b00      	cmp	r3, #0
 80175aa:	dd0a      	ble.n	80175c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80175ac:	4628      	mov	r0, r5
 80175ae:	f7ff ff5b 	bl	8017468 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80175b2:	4621      	mov	r1, r4
 80175b4:	f7fe fa3d 	bl	8015a32 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80175b8:	69eb      	ldr	r3, [r5, #28]
 80175ba:	b928      	cbnz	r0, 80175c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80175bc:	461d      	mov	r5, r3
 80175be:	2b00      	cmp	r3, #0
 80175c0:	d1f4      	bne.n	80175ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80175c2:	b009      	add	sp, #36	; 0x24
 80175c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175c8:	ae04      	add	r6, sp, #16
 80175ca:	2b00      	cmp	r3, #0
 80175cc:	f000 80b5 	beq.w	801773a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80175d0:	682b      	ldr	r3, [r5, #0]
 80175d2:	4629      	mov	r1, r5
 80175d4:	68db      	ldr	r3, [r3, #12]
 80175d6:	a802      	add	r0, sp, #8
 80175d8:	4798      	blx	r3
 80175da:	4628      	mov	r0, r5
 80175dc:	f7ff ff60 	bl	80174a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80175e0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80175e4:	4407      	add	r7, r0
 80175e6:	4628      	mov	r0, r5
 80175e8:	f7ff ff6e 	bl	80174c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80175ec:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80175f0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80175f4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80175f8:	4418      	add	r0, r3
 80175fa:	4621      	mov	r1, r4
 80175fc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017600:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017604:	b23f      	sxth	r7, r7
 8017606:	4630      	mov	r0, r6
 8017608:	f8ad 3016 	strh.w	r3, [sp, #22]
 801760c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017610:	f7f9 f9dc 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8017614:	4628      	mov	r0, r5
 8017616:	f7ff ff27 	bl	8017468 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801761a:	4602      	mov	r2, r0
 801761c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017620:	ab06      	add	r3, sp, #24
 8017622:	e883 0003 	stmia.w	r3, {r0, r1}
 8017626:	4611      	mov	r1, r2
 8017628:	4618      	mov	r0, r3
 801762a:	f7f9 f9cf 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 801762e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017632:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017636:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801763a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801763e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8017642:	4299      	cmp	r1, r3
 8017644:	d10b      	bne.n	801765e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017646:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801764a:	4552      	cmp	r2, sl
 801764c:	d107      	bne.n	801765e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801764e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017652:	455a      	cmp	r2, fp
 8017654:	d103      	bne.n	801765e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017656:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801765a:	454a      	cmp	r2, r9
 801765c:	d06d      	beq.n	801773a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801765e:	f1bb 0f00 	cmp.w	fp, #0
 8017662:	dd65      	ble.n	8017730 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017664:	f1b9 0f00 	cmp.w	r9, #0
 8017668:	dd62      	ble.n	8017730 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801766a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801766e:	fa1f f08a 	uxth.w	r0, sl
 8017672:	4552      	cmp	r2, sl
 8017674:	9000      	str	r0, [sp, #0]
 8017676:	da12      	bge.n	801769e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017678:	9301      	str	r3, [sp, #4]
 801767a:	9b00      	ldr	r3, [sp, #0]
 801767c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017680:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017684:	1a9a      	subs	r2, r3, r2
 8017686:	f8ad 1010 	strh.w	r1, [sp, #16]
 801768a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801768e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017692:	69ea      	ldr	r2, [r5, #28]
 8017694:	4631      	mov	r1, r6
 8017696:	4640      	mov	r0, r8
 8017698:	f7ff ff7a 	bl	8017590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801769c:	9b01      	ldr	r3, [sp, #4]
 801769e:	f9b4 2000 	ldrsh.w	r2, [r4]
 80176a2:	429a      	cmp	r2, r3
 80176a4:	b29f      	uxth	r7, r3
 80176a6:	da0d      	bge.n	80176c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80176a8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80176ac:	1aba      	subs	r2, r7, r2
 80176ae:	f8ad a012 	strh.w	sl, [sp, #18]
 80176b2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80176b6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80176ba:	69ea      	ldr	r2, [r5, #28]
 80176bc:	4631      	mov	r1, r6
 80176be:	4640      	mov	r0, r8
 80176c0:	f7ff ff66 	bl	8017590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80176c4:	8822      	ldrh	r2, [r4, #0]
 80176c6:	88a3      	ldrh	r3, [r4, #4]
 80176c8:	445f      	add	r7, fp
 80176ca:	4413      	add	r3, r2
 80176cc:	b29b      	uxth	r3, r3
 80176ce:	b2bf      	uxth	r7, r7
 80176d0:	b23a      	sxth	r2, r7
 80176d2:	b219      	sxth	r1, r3
 80176d4:	4291      	cmp	r1, r2
 80176d6:	dd0d      	ble.n	80176f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80176d8:	1bdb      	subs	r3, r3, r7
 80176da:	f8ad 2010 	strh.w	r2, [sp, #16]
 80176de:	f8ad a012 	strh.w	sl, [sp, #18]
 80176e2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80176e6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80176ea:	69ea      	ldr	r2, [r5, #28]
 80176ec:	4631      	mov	r1, r6
 80176ee:	4640      	mov	r0, r8
 80176f0:	f7ff ff4e 	bl	8017590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80176f4:	88e2      	ldrh	r2, [r4, #6]
 80176f6:	8863      	ldrh	r3, [r4, #2]
 80176f8:	4413      	add	r3, r2
 80176fa:	9a00      	ldr	r2, [sp, #0]
 80176fc:	444a      	add	r2, r9
 80176fe:	b29b      	uxth	r3, r3
 8017700:	fa1f f982 	uxth.w	r9, r2
 8017704:	fa0f f289 	sxth.w	r2, r9
 8017708:	b219      	sxth	r1, r3
 801770a:	428a      	cmp	r2, r1
 801770c:	da15      	bge.n	801773a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801770e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017712:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017716:	f8ad 1014 	strh.w	r1, [sp, #20]
 801771a:	eba3 0309 	sub.w	r3, r3, r9
 801771e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017722:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017726:	f8ad 3016 	strh.w	r3, [sp, #22]
 801772a:	69ea      	ldr	r2, [r5, #28]
 801772c:	4631      	mov	r1, r6
 801772e:	e001      	b.n	8017734 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017730:	69ea      	ldr	r2, [r5, #28]
 8017732:	4621      	mov	r1, r4
 8017734:	4640      	mov	r0, r8
 8017736:	f7ff ff2b 	bl	8017590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801773a:	4628      	mov	r0, r5
 801773c:	f7ff fe94 	bl	8017468 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017740:	6861      	ldr	r1, [r4, #4]
 8017742:	4602      	mov	r2, r0
 8017744:	6820      	ldr	r0, [r4, #0]
 8017746:	4633      	mov	r3, r6
 8017748:	c303      	stmia	r3!, {r0, r1}
 801774a:	4611      	mov	r1, r2
 801774c:	4630      	mov	r0, r6
 801774e:	f7f9 f93d 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8017752:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017756:	2b00      	cmp	r3, #0
 8017758:	f77f af33 	ble.w	80175c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801775c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017760:	2b00      	cmp	r3, #0
 8017762:	f77f af2e 	ble.w	80175c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017766:	4628      	mov	r0, r5
 8017768:	f7ff fe9a 	bl	80174a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801776c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017770:	1a18      	subs	r0, r3, r0
 8017772:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017776:	4628      	mov	r0, r5
 8017778:	f7ff fea6 	bl	80174c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801777c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017780:	1a18      	subs	r0, r3, r0
 8017782:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017786:	682b      	ldr	r3, [r5, #0]
 8017788:	4631      	mov	r1, r6
 801778a:	689b      	ldr	r3, [r3, #8]
 801778c:	4628      	mov	r0, r5
 801778e:	4798      	blx	r3
 8017790:	e717      	b.n	80175c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08017792 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8017792:	b570      	push	{r4, r5, r6, lr}
 8017794:	460c      	mov	r4, r1
 8017796:	b086      	sub	sp, #24
 8017798:	1d06      	adds	r6, r0, #4
 801779a:	2300      	movs	r3, #0
 801779c:	4631      	mov	r1, r6
 801779e:	4605      	mov	r5, r0
 80177a0:	a802      	add	r0, sp, #8
 80177a2:	9301      	str	r3, [sp, #4]
 80177a4:	f7ff fba8 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80177a8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80177ac:	8822      	ldrh	r2, [r4, #0]
 80177ae:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80177b2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80177b6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80177ba:	1ad2      	subs	r2, r2, r3
 80177bc:	8863      	ldrh	r3, [r4, #2]
 80177be:	f8ad 2010 	strh.w	r2, [sp, #16]
 80177c2:	1a5b      	subs	r3, r3, r1
 80177c4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80177c8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80177cc:	aa01      	add	r2, sp, #4
 80177ce:	a904      	add	r1, sp, #16
 80177d0:	4630      	mov	r0, r6
 80177d2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80177d6:	f7f9 f9d1 	bl	8010b7c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80177da:	9a01      	ldr	r2, [sp, #4]
 80177dc:	b11a      	cbz	r2, 80177e6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80177de:	4621      	mov	r1, r4
 80177e0:	4628      	mov	r0, r5
 80177e2:	f7ff fed5 	bl	8017590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80177e6:	b006      	add	sp, #24
 80177e8:	bd70      	pop	{r4, r5, r6, pc}

080177ea <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80177ea:	b530      	push	{r4, r5, lr}
 80177ec:	4602      	mov	r2, r0
 80177ee:	4604      	mov	r4, r0
 80177f0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80177f4:	b085      	sub	sp, #20
 80177f6:	460d      	mov	r5, r1
 80177f8:	6851      	ldr	r1, [r2, #4]
 80177fa:	466b      	mov	r3, sp
 80177fc:	c303      	stmia	r3!, {r0, r1}
 80177fe:	4629      	mov	r1, r5
 8017800:	4668      	mov	r0, sp
 8017802:	f7f9 f8e3 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 8017806:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801780a:	b12b      	cbz	r3, 8017818 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801780c:	4669      	mov	r1, sp
 801780e:	4620      	mov	r0, r4
 8017810:	f7ff ffbf 	bl	8017792 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8017814:	b005      	add	sp, #20
 8017816:	bd30      	pop	{r4, r5, pc}
 8017818:	3404      	adds	r4, #4
 801781a:	4621      	mov	r1, r4
 801781c:	a802      	add	r0, sp, #8
 801781e:	f7ff fb6b 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017822:	f8bd 3000 	ldrh.w	r3, [sp]
 8017826:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801782a:	1a9b      	subs	r3, r3, r2
 801782c:	f8ad 3000 	strh.w	r3, [sp]
 8017830:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017834:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017838:	4669      	mov	r1, sp
 801783a:	1a9b      	subs	r3, r3, r2
 801783c:	4620      	mov	r0, r4
 801783e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017842:	f7f9 f962 	bl	8010b0a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017846:	e7e5      	b.n	8017814 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017848 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017848:	680a      	ldr	r2, [r1, #0]
 801784a:	460b      	mov	r3, r1
 801784c:	6992      	ldr	r2, [r2, #24]
 801784e:	1d01      	adds	r1, r0, #4
 8017850:	4618      	mov	r0, r3
 8017852:	4710      	bx	r2

08017854 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8017854:	4298      	cmp	r0, r3
 8017856:	d200      	bcs.n	801785a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8017858:	b913      	cbnz	r3, 8017860 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801785a:	440a      	add	r2, r1
 801785c:	b210      	sxth	r0, r2
 801785e:	4770      	bx	lr
 8017860:	ee07 0a90 	vmov	s15, r0
 8017864:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017868:	ee07 3a90 	vmov	s15, r3
 801786c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017870:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017874:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017878:	ee37 7a66 	vsub.f32	s14, s14, s13
 801787c:	ee07 2a90 	vmov	s15, r2
 8017880:	ee67 5a07 	vmul.f32	s11, s14, s14
 8017884:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017888:	eee5 6a87 	vfma.f32	s13, s11, s14
 801788c:	ee07 1a90 	vmov	s15, r1
 8017890:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017894:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017898:	eee6 7a26 	vfma.f32	s15, s12, s13
 801789c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80178a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178a4:	bfcc      	ite	gt
 80178a6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80178aa:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80178ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80178b2:	ee17 3a90 	vmov	r3, s15
 80178b6:	b218      	sxth	r0, r3
 80178b8:	4770      	bx	lr

080178ba <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80178ba:	4298      	cmp	r0, r3
 80178bc:	d200      	bcs.n	80178c0 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80178be:	b913      	cbnz	r3, 80178c6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80178c0:	440a      	add	r2, r1
 80178c2:	b210      	sxth	r0, r2
 80178c4:	4770      	bx	lr
 80178c6:	ee07 2a90 	vmov	s15, r2
 80178ca:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80178ce:	ee07 0a90 	vmov	s15, r0
 80178d2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80178d6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80178da:	ee07 3a10 	vmov	s14, r3
 80178de:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80178e2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80178e6:	ee07 1a90 	vmov	s15, r1
 80178ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80178ee:	ee77 7a27 	vadd.f32	s15, s14, s15
 80178f2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80178f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80178fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178fe:	bfcc      	ite	gt
 8017900:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017904:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017908:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801790c:	ee17 3a90 	vmov	r3, s15
 8017910:	b218      	sxth	r0, r3
 8017912:	4770      	bx	lr

08017914 <_ZN8touchgfx12TextProviderC1Ev>:
 8017914:	b538      	push	{r3, r4, r5, lr}
 8017916:	2500      	movs	r5, #0
 8017918:	2302      	movs	r3, #2
 801791a:	4604      	mov	r4, r0
 801791c:	e9c0 5500 	strd	r5, r5, [r0]
 8017920:	7403      	strb	r3, [r0, #16]
 8017922:	6145      	str	r5, [r0, #20]
 8017924:	7605      	strb	r5, [r0, #24]
 8017926:	83c5      	strh	r5, [r0, #30]
 8017928:	8405      	strh	r5, [r0, #32]
 801792a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801792c:	8705      	strh	r5, [r0, #56]	; 0x38
 801792e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017930:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017934:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017938:	220e      	movs	r2, #14
 801793a:	4629      	mov	r1, r5
 801793c:	304c      	adds	r0, #76	; 0x4c
 801793e:	f013 faba 	bl	802aeb6 <memset>
 8017942:	2301      	movs	r3, #1
 8017944:	4620      	mov	r0, r4
 8017946:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801794a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801794e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017952:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017956:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801795a:	f7f1 fb0b 	bl	8008f74 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801795e:	4620      	mov	r0, r4
 8017960:	bd38      	pop	{r3, r4, r5, pc}

08017962 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8017962:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017964:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017968:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801796a:	fab0 f080 	clz	r0, r0
 801796e:	0940      	lsrs	r0, r0, #5
 8017970:	4770      	bx	lr

08017972 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017972:	b530      	push	{r4, r5, lr}
 8017974:	2500      	movs	r5, #0
 8017976:	2401      	movs	r4, #1
 8017978:	6843      	ldr	r3, [r0, #4]
 801797a:	b913      	cbnz	r3, 8017982 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801797c:	6803      	ldr	r3, [r0, #0]
 801797e:	b313      	cbz	r3, 80179c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017980:	6043      	str	r3, [r0, #4]
 8017982:	7e03      	ldrb	r3, [r0, #24]
 8017984:	b143      	cbz	r3, 8017998 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017986:	6943      	ldr	r3, [r0, #20]
 8017988:	b12b      	cbz	r3, 8017996 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801798a:	881a      	ldrh	r2, [r3, #0]
 801798c:	b11a      	cbz	r2, 8017996 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801798e:	1c9a      	adds	r2, r3, #2
 8017990:	6142      	str	r2, [r0, #20]
 8017992:	8818      	ldrh	r0, [r3, #0]
 8017994:	bd30      	pop	{r4, r5, pc}
 8017996:	7605      	strb	r5, [r0, #24]
 8017998:	6843      	ldr	r3, [r0, #4]
 801799a:	8819      	ldrh	r1, [r3, #0]
 801799c:	b199      	cbz	r1, 80179c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801799e:	1c9a      	adds	r2, r3, #2
 80179a0:	2902      	cmp	r1, #2
 80179a2:	6042      	str	r2, [r0, #4]
 80179a4:	d1f5      	bne.n	8017992 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80179a6:	7c03      	ldrb	r3, [r0, #16]
 80179a8:	2b01      	cmp	r3, #1
 80179aa:	d8e5      	bhi.n	8017978 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80179ac:	1c5a      	adds	r2, r3, #1
 80179ae:	3302      	adds	r3, #2
 80179b0:	7402      	strb	r2, [r0, #16]
 80179b2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80179b6:	6143      	str	r3, [r0, #20]
 80179b8:	2b00      	cmp	r3, #0
 80179ba:	d0dd      	beq.n	8017978 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80179bc:	881b      	ldrh	r3, [r3, #0]
 80179be:	2b00      	cmp	r3, #0
 80179c0:	d0da      	beq.n	8017978 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80179c2:	7604      	strb	r4, [r0, #24]
 80179c4:	e7d8      	b.n	8017978 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80179c6:	2000      	movs	r0, #0
 80179c8:	e7e4      	b.n	8017994 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080179ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80179ca:	b430      	push	{r4, r5}
 80179cc:	6001      	str	r1, [r0, #0]
 80179ce:	2100      	movs	r1, #0
 80179d0:	6041      	str	r1, [r0, #4]
 80179d2:	6815      	ldr	r5, [r2, #0]
 80179d4:	6085      	str	r5, [r0, #8]
 80179d6:	6852      	ldr	r2, [r2, #4]
 80179d8:	6443      	str	r3, [r0, #68]	; 0x44
 80179da:	9b02      	ldr	r3, [sp, #8]
 80179dc:	60c2      	str	r2, [r0, #12]
 80179de:	7401      	strb	r1, [r0, #16]
 80179e0:	6141      	str	r1, [r0, #20]
 80179e2:	7601      	strb	r1, [r0, #24]
 80179e4:	8701      	strh	r1, [r0, #56]	; 0x38
 80179e6:	8401      	strh	r1, [r0, #32]
 80179e8:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80179ec:	6483      	str	r3, [r0, #72]	; 0x48
 80179ee:	bc30      	pop	{r4, r5}
 80179f0:	f7f1 bac0 	b.w	8008f74 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080179f4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80179f4:	b408      	push	{r3}
 80179f6:	b510      	push	{r4, lr}
 80179f8:	b085      	sub	sp, #20
 80179fa:	ac07      	add	r4, sp, #28
 80179fc:	f854 3b04 	ldr.w	r3, [r4], #4
 8017a00:	9300      	str	r3, [sp, #0]
 8017a02:	4613      	mov	r3, r2
 8017a04:	4622      	mov	r2, r4
 8017a06:	9403      	str	r4, [sp, #12]
 8017a08:	f7ff ffdf 	bl	80179ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017a0c:	b005      	add	sp, #20
 8017a0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017a12:	b001      	add	sp, #4
 8017a14:	4770      	bx	lr

08017a16 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017a16:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017a18:	4605      	mov	r5, r0
 8017a1a:	4608      	mov	r0, r1
 8017a1c:	b1e9      	cbz	r1, 8017a5a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8017a1e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017a22:	460b      	mov	r3, r1
 8017a24:	f101 0708 	add.w	r7, r1, #8
 8017a28:	4622      	mov	r2, r4
 8017a2a:	6818      	ldr	r0, [r3, #0]
 8017a2c:	6859      	ldr	r1, [r3, #4]
 8017a2e:	4626      	mov	r6, r4
 8017a30:	c603      	stmia	r6!, {r0, r1}
 8017a32:	3308      	adds	r3, #8
 8017a34:	42bb      	cmp	r3, r7
 8017a36:	4634      	mov	r4, r6
 8017a38:	d1f7      	bne.n	8017a2a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8017a3a:	6818      	ldr	r0, [r3, #0]
 8017a3c:	6030      	str	r0, [r6, #0]
 8017a3e:	889b      	ldrh	r3, [r3, #4]
 8017a40:	80b3      	strh	r3, [r6, #4]
 8017a42:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017a46:	015b      	lsls	r3, r3, #5
 8017a48:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017a4c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017a50:	430b      	orrs	r3, r1
 8017a52:	425b      	negs	r3, r3
 8017a54:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017a58:	4610      	mov	r0, r2
 8017a5a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017a5c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8017a5c:	b538      	push	{r3, r4, r5, lr}
 8017a5e:	460c      	mov	r4, r1
 8017a60:	6811      	ldr	r1, [r2, #0]
 8017a62:	4610      	mov	r0, r2
 8017a64:	68cd      	ldr	r5, [r1, #12]
 8017a66:	4619      	mov	r1, r3
 8017a68:	47a8      	blx	r5
 8017a6a:	2800      	cmp	r0, #0
 8017a6c:	bf08      	it	eq
 8017a6e:	4620      	moveq	r0, r4
 8017a70:	bd38      	pop	{r3, r4, r5, pc}
	...

08017a74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017a74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017a76:	4604      	mov	r4, r0
 8017a78:	4615      	mov	r5, r2
 8017a7a:	4608      	mov	r0, r1
 8017a7c:	b93a      	cbnz	r2, 8017a8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8017a7e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017a82:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017a86:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8017a8a:	4628      	mov	r0, r5
 8017a8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017a8e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017a92:	8893      	ldrh	r3, [r2, #4]
 8017a94:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017a98:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017a9c:	79ee      	ldrb	r6, [r5, #7]
 8017a9e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017aa2:	4316      	orrs	r6, r2
 8017aa4:	19da      	adds	r2, r3, r7
 8017aa6:	b291      	uxth	r1, r2
 8017aa8:	291d      	cmp	r1, #29
 8017aaa:	b2b7      	uxth	r7, r6
 8017aac:	d87a      	bhi.n	8017ba4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017aae:	2201      	movs	r2, #1
 8017ab0:	408a      	lsls	r2, r1
 8017ab2:	4975      	ldr	r1, [pc, #468]	; (8017c88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017ab4:	420a      	tst	r2, r1
 8017ab6:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8017aba:	d12d      	bne.n	8017b18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8017abc:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017ac0:	d070      	beq.n	8017ba4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017ac2:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017ac6:	462b      	mov	r3, r5
 8017ac8:	f105 0e08 	add.w	lr, r5, #8
 8017acc:	4615      	mov	r5, r2
 8017ace:	6818      	ldr	r0, [r3, #0]
 8017ad0:	6859      	ldr	r1, [r3, #4]
 8017ad2:	4694      	mov	ip, r2
 8017ad4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017ad8:	3308      	adds	r3, #8
 8017ada:	4573      	cmp	r3, lr
 8017adc:	4662      	mov	r2, ip
 8017ade:	d1f6      	bne.n	8017ace <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017ae0:	6818      	ldr	r0, [r3, #0]
 8017ae2:	f8cc 0000 	str.w	r0, [ip]
 8017ae6:	889b      	ldrh	r3, [r3, #4]
 8017ae8:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017aec:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017af0:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017af4:	b2b3      	uxth	r3, r6
 8017af6:	1aca      	subs	r2, r1, r3
 8017af8:	b292      	uxth	r2, r2
 8017afa:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017afe:	10d2      	asrs	r2, r2, #3
 8017b00:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017b04:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017b08:	4302      	orrs	r2, r0
 8017b0a:	1bcf      	subs	r7, r1, r7
 8017b0c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017b10:	1afb      	subs	r3, r7, r3
 8017b12:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017b16:	e7b8      	b.n	8017a8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017b18:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017b1a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017b1e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017b20:	f640 6333 	movw	r3, #3635	; 0xe33
 8017b24:	4299      	cmp	r1, r3
 8017b26:	d110      	bne.n	8017b4a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017b28:	6803      	ldr	r3, [r0, #0]
 8017b2a:	68db      	ldr	r3, [r3, #12]
 8017b2c:	4798      	blx	r3
 8017b2e:	7b41      	ldrb	r1, [r0, #13]
 8017b30:	00cb      	lsls	r3, r1, #3
 8017b32:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017b36:	7a03      	ldrb	r3, [r0, #8]
 8017b38:	0648      	lsls	r0, r1, #25
 8017b3a:	ea43 0302 	orr.w	r3, r3, r2
 8017b3e:	bf44      	itt	mi
 8017b40:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017b44:	b21b      	sxthmi	r3, r3
 8017b46:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017b4a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8017b4e:	443b      	add	r3, r7
 8017b50:	4433      	add	r3, r6
 8017b52:	b29b      	uxth	r3, r3
 8017b54:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017b58:	462a      	mov	r2, r5
 8017b5a:	f105 0c08 	add.w	ip, r5, #8
 8017b5e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017b62:	4635      	mov	r5, r6
 8017b64:	6810      	ldr	r0, [r2, #0]
 8017b66:	6851      	ldr	r1, [r2, #4]
 8017b68:	4637      	mov	r7, r6
 8017b6a:	c703      	stmia	r7!, {r0, r1}
 8017b6c:	3208      	adds	r2, #8
 8017b6e:	4562      	cmp	r2, ip
 8017b70:	463e      	mov	r6, r7
 8017b72:	d1f7      	bne.n	8017b64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017b74:	6810      	ldr	r0, [r2, #0]
 8017b76:	6038      	str	r0, [r7, #0]
 8017b78:	8892      	ldrh	r2, [r2, #4]
 8017b7a:	80ba      	strh	r2, [r7, #4]
 8017b7c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017b80:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017b84:	10db      	asrs	r3, r3, #3
 8017b86:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017b8a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017b8e:	4313      	orrs	r3, r2
 8017b90:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017b94:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017b98:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8017b9c:	1a9b      	subs	r3, r3, r2
 8017b9e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017ba2:	e772      	b.n	8017a8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017ba4:	f023 0204 	bic.w	r2, r3, #4
 8017ba8:	f640 611b 	movw	r1, #3611	; 0xe1b
 8017bac:	428a      	cmp	r2, r1
 8017bae:	d003      	beq.n	8017bb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017bb0:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017bb4:	4293      	cmp	r3, r2
 8017bb6:	d120      	bne.n	8017bfa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017bb8:	3b01      	subs	r3, #1
 8017bba:	4602      	mov	r2, r0
 8017bbc:	b29b      	uxth	r3, r3
 8017bbe:	4629      	mov	r1, r5
 8017bc0:	4620      	mov	r0, r4
 8017bc2:	f7ff ff4b 	bl	8017a5c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017bc6:	7b41      	ldrb	r1, [r0, #13]
 8017bc8:	00cb      	lsls	r3, r1, #3
 8017bca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017bce:	7a03      	ldrb	r3, [r0, #8]
 8017bd0:	0649      	lsls	r1, r1, #25
 8017bd2:	ea43 0302 	orr.w	r3, r3, r2
 8017bd6:	bf44      	itt	mi
 8017bd8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017bdc:	b21b      	sxthmi	r3, r3
 8017bde:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017be2:	7b6b      	ldrb	r3, [r5, #13]
 8017be4:	7aaa      	ldrb	r2, [r5, #10]
 8017be6:	005b      	lsls	r3, r3, #1
 8017be8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017bec:	4313      	orrs	r3, r2
 8017bee:	115a      	asrs	r2, r3, #5
 8017bf0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017bf4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017bf8:	e036      	b.n	8017c68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017bfa:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8017bfe:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017c02:	7a2a      	ldrb	r2, [r5, #8]
 8017c04:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017c08:	ea42 0201 	orr.w	r2, r2, r1
 8017c0c:	bf1c      	itt	ne
 8017c0e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017c12:	b212      	sxthne	r2, r2
 8017c14:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017c18:	f640 6109 	movw	r1, #3593	; 0xe09
 8017c1c:	f023 0210 	bic.w	r2, r3, #16
 8017c20:	428a      	cmp	r2, r1
 8017c22:	d003      	beq.n	8017c2c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8017c24:	f640 6213 	movw	r2, #3603	; 0xe13
 8017c28:	4293      	cmp	r3, r2
 8017c2a:	d12a      	bne.n	8017c82 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8017c2c:	7b6e      	ldrb	r6, [r5, #13]
 8017c2e:	0076      	lsls	r6, r6, #1
 8017c30:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017c34:	7aae      	ldrb	r6, [r5, #10]
 8017c36:	4316      	orrs	r6, r2
 8017c38:	f640 6213 	movw	r2, #3603	; 0xe13
 8017c3c:	4293      	cmp	r3, r2
 8017c3e:	bf18      	it	ne
 8017c40:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017c44:	4602      	mov	r2, r0
 8017c46:	bf14      	ite	ne
 8017c48:	b29b      	uxthne	r3, r3
 8017c4a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8017c4e:	4629      	mov	r1, r5
 8017c50:	4620      	mov	r0, r4
 8017c52:	f7ff ff03 	bl	8017a5c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017c56:	7b43      	ldrb	r3, [r0, #13]
 8017c58:	7a82      	ldrb	r2, [r0, #10]
 8017c5a:	005b      	lsls	r3, r3, #1
 8017c5c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017c60:	4313      	orrs	r3, r2
 8017c62:	1af6      	subs	r6, r6, r3
 8017c64:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017c68:	7b69      	ldrb	r1, [r5, #13]
 8017c6a:	00cb      	lsls	r3, r1, #3
 8017c6c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017c70:	7a2b      	ldrb	r3, [r5, #8]
 8017c72:	4313      	orrs	r3, r2
 8017c74:	064a      	lsls	r2, r1, #25
 8017c76:	bf44      	itt	mi
 8017c78:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017c7c:	b21b      	sxthmi	r3, r3
 8017c7e:	1bdb      	subs	r3, r3, r7
 8017c80:	e747      	b.n	8017b12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017c82:	2300      	movs	r3, #0
 8017c84:	e7b6      	b.n	8017bf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017c86:	bf00      	nop
 8017c88:	3fc00079 	.word	0x3fc00079

08017c8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8017c8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017c90:	4604      	mov	r4, r0
 8017c92:	b942      	cbnz	r2, 8017ca6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017c94:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017c98:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8017c9c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017ca0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017ca4:	e047      	b.n	8017d36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017ca6:	7b51      	ldrb	r1, [r2, #13]
 8017ca8:	8893      	ldrh	r3, [r2, #4]
 8017caa:	010d      	lsls	r5, r1, #4
 8017cac:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017cb0:	79d5      	ldrb	r5, [r2, #7]
 8017cb2:	4305      	orrs	r5, r0
 8017cb4:	2d04      	cmp	r5, #4
 8017cb6:	bfcc      	ite	gt
 8017cb8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017cbc:	f04f 0e01 	movle.w	lr, #1
 8017cc0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017cc4:	f200 80ab 	bhi.w	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017cc8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017ccc:	4283      	cmp	r3, r0
 8017cce:	d216      	bcs.n	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017cd0:	f240 605b 	movw	r0, #1627	; 0x65b
 8017cd4:	4283      	cmp	r3, r0
 8017cd6:	d859      	bhi.n	8017d8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017cd8:	f240 6057 	movw	r0, #1623	; 0x657
 8017cdc:	4283      	cmp	r3, r0
 8017cde:	d20e      	bcs.n	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ce0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017ce4:	d24a      	bcs.n	8017d7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017ce6:	f240 604e 	movw	r0, #1614	; 0x64e
 8017cea:	4283      	cmp	r3, r0
 8017cec:	d207      	bcs.n	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017cee:	f240 601a 	movw	r0, #1562	; 0x61a
 8017cf2:	4283      	cmp	r3, r0
 8017cf4:	d02a      	beq.n	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017cf6:	d821      	bhi.n	8017d3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017cf8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017cfc:	d35b      	bcc.n	8017db6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017cfe:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017d02:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017d06:	f040 80d0 	bne.w	8017eaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017d0a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8017d0e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017d12:	f040 80ca 	bne.w	8017eaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017d16:	00cb      	lsls	r3, r1, #3
 8017d18:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017d1c:	7a13      	ldrb	r3, [r2, #8]
 8017d1e:	0649      	lsls	r1, r1, #25
 8017d20:	ea43 0300 	orr.w	r3, r3, r0
 8017d24:	bf44      	itt	mi
 8017d26:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017d2a:	b21b      	sxthmi	r3, r3
 8017d2c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017d30:	1b5d      	subs	r5, r3, r5
 8017d32:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017d36:	4610      	mov	r0, r2
 8017d38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017d3c:	f240 604b 	movw	r0, #1611	; 0x64b
 8017d40:	4283      	cmp	r3, r0
 8017d42:	d338      	bcc.n	8017db6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017d44:	f240 604c 	movw	r0, #1612	; 0x64c
 8017d48:	4283      	cmp	r3, r0
 8017d4a:	d9d8      	bls.n	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d4c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017d50:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017d54:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017d58:	f040 80f2 	bne.w	8017f40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017d5c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017d60:	f040 80ee 	bne.w	8017f40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017d64:	00cb      	lsls	r3, r1, #3
 8017d66:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017d6a:	7a13      	ldrb	r3, [r2, #8]
 8017d6c:	064e      	lsls	r6, r1, #25
 8017d6e:	ea43 0300 	orr.w	r3, r3, r0
 8017d72:	bf44      	itt	mi
 8017d74:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017d78:	b21b      	sxthmi	r3, r3
 8017d7a:	e7d9      	b.n	8017d30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8017d7c:	f240 6054 	movw	r0, #1620	; 0x654
 8017d80:	4283      	cmp	r3, r0
 8017d82:	d8e3      	bhi.n	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017d84:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017d88:	d9e0      	bls.n	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017d8a:	e7b8      	b.n	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d8c:	f240 6074 	movw	r0, #1652	; 0x674
 8017d90:	4283      	cmp	r3, r0
 8017d92:	d0b4      	beq.n	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d94:	d82d      	bhi.n	8017df2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017d96:	f240 605e 	movw	r0, #1630	; 0x65e
 8017d9a:	4283      	cmp	r3, r0
 8017d9c:	d804      	bhi.n	8017da8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017d9e:	f240 605d 	movw	r0, #1629	; 0x65d
 8017da2:	4283      	cmp	r3, r0
 8017da4:	d3d2      	bcc.n	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017da6:	e7aa      	b.n	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017da8:	f240 605f 	movw	r0, #1631	; 0x65f
 8017dac:	4283      	cmp	r3, r0
 8017dae:	d0cd      	beq.n	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017db0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017db4:	d0a3      	beq.n	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017db6:	00cb      	lsls	r3, r1, #3
 8017db8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017dbc:	7a13      	ldrb	r3, [r2, #8]
 8017dbe:	0649      	lsls	r1, r1, #25
 8017dc0:	ea43 0300 	orr.w	r3, r3, r0
 8017dc4:	bf44      	itt	mi
 8017dc6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017dca:	b21b      	sxthmi	r3, r3
 8017dcc:	1b5d      	subs	r5, r3, r5
 8017dce:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017dd2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017dd6:	7b53      	ldrb	r3, [r2, #13]
 8017dd8:	015b      	lsls	r3, r3, #5
 8017dda:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017dde:	7993      	ldrb	r3, [r2, #6]
 8017de0:	430b      	orrs	r3, r1
 8017de2:	005b      	lsls	r3, r3, #1
 8017de4:	2105      	movs	r1, #5
 8017de6:	fb93 f3f1 	sdiv	r3, r3, r1
 8017dea:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8017dee:	440b      	add	r3, r1
 8017df0:	e756      	b.n	8017ca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017df2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017df6:	4283      	cmp	r3, r0
 8017df8:	d809      	bhi.n	8017e0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8017dfa:	f240 60df 	movw	r0, #1759	; 0x6df
 8017dfe:	4283      	cmp	r3, r0
 8017e00:	f4bf af7d 	bcs.w	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e04:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017e08:	2b05      	cmp	r3, #5
 8017e0a:	d8d4      	bhi.n	8017db6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017e0c:	e777      	b.n	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e0e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017e12:	4283      	cmp	r3, r0
 8017e14:	d09a      	beq.n	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e16:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017e1a:	4283      	cmp	r3, r0
 8017e1c:	e7ca      	b.n	8017db4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8017e1e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017e22:	d22b      	bcs.n	8017e7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017e24:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017e28:	4283      	cmp	r3, r0
 8017e2a:	d28f      	bcs.n	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e2c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017e30:	4283      	cmp	r3, r0
 8017e32:	d816      	bhi.n	8017e62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017e34:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017e38:	4283      	cmp	r3, r0
 8017e3a:	f4bf af60 	bcs.w	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e3e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017e42:	4283      	cmp	r3, r0
 8017e44:	d80a      	bhi.n	8017e5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017e46:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8017e4a:	4283      	cmp	r3, r0
 8017e4c:	f4bf af57 	bcs.w	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e50:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8017e54:	4283      	cmp	r3, r0
 8017e56:	f43f af79 	beq.w	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e5a:	e7ac      	b.n	8017db6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017e5c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017e60:	e7f8      	b.n	8017e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8017e62:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8017e66:	4283      	cmp	r3, r0
 8017e68:	d802      	bhi.n	8017e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8017e6a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8017e6e:	e798      	b.n	8017da2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017e70:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017e74:	4283      	cmp	r3, r0
 8017e76:	f47f af42 	bne.w	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e7a:	e767      	b.n	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e7c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017e80:	4283      	cmp	r3, r0
 8017e82:	f43f af63 	beq.w	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e86:	d802      	bhi.n	8017e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017e88:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8017e8c:	e7f2      	b.n	8017e74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8017e8e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017e92:	4283      	cmp	r3, r0
 8017e94:	d805      	bhi.n	8017ea2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017e96:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8017e9a:	4283      	cmp	r3, r0
 8017e9c:	f4ff af2f 	bcc.w	8017cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ea0:	e754      	b.n	8017d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ea2:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017ea6:	4283      	cmp	r3, r0
 8017ea8:	e7af      	b.n	8017e0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8017eaa:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017eae:	4617      	mov	r7, r2
 8017eb0:	f102 0808 	add.w	r8, r2, #8
 8017eb4:	4666      	mov	r6, ip
 8017eb6:	6838      	ldr	r0, [r7, #0]
 8017eb8:	6879      	ldr	r1, [r7, #4]
 8017eba:	46e6      	mov	lr, ip
 8017ebc:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017ec0:	3708      	adds	r7, #8
 8017ec2:	4547      	cmp	r7, r8
 8017ec4:	46f4      	mov	ip, lr
 8017ec6:	d1f6      	bne.n	8017eb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017ec8:	6838      	ldr	r0, [r7, #0]
 8017eca:	f8ce 0000 	str.w	r0, [lr]
 8017ece:	88b9      	ldrh	r1, [r7, #4]
 8017ed0:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017ed4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017ed8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017edc:	d009      	beq.n	8017ef2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8017ede:	7b51      	ldrb	r1, [r2, #13]
 8017ee0:	7992      	ldrb	r2, [r2, #6]
 8017ee2:	0149      	lsls	r1, r1, #5
 8017ee4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017ee8:	4311      	orrs	r1, r2
 8017eea:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017eee:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017ef2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017ef6:	b2ad      	uxth	r5, r5
 8017ef8:	d00d      	beq.n	8017f16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8017efa:	442b      	add	r3, r5
 8017efc:	b29b      	uxth	r3, r3
 8017efe:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017f02:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017f06:	10db      	asrs	r3, r3, #3
 8017f08:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017f0c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017f10:	4313      	orrs	r3, r2
 8017f12:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017f16:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017f1a:	00cb      	lsls	r3, r1, #3
 8017f1c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017f20:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017f24:	064f      	lsls	r7, r1, #25
 8017f26:	ea43 0302 	orr.w	r3, r3, r2
 8017f2a:	bf44      	itt	mi
 8017f2c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017f30:	b21b      	sxthmi	r3, r3
 8017f32:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017f36:	1b5b      	subs	r3, r3, r5
 8017f38:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017f3c:	4632      	mov	r2, r6
 8017f3e:	e6fa      	b.n	8017d36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017f40:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017f44:	4617      	mov	r7, r2
 8017f46:	f102 0908 	add.w	r9, r2, #8
 8017f4a:	4666      	mov	r6, ip
 8017f4c:	6838      	ldr	r0, [r7, #0]
 8017f4e:	6879      	ldr	r1, [r7, #4]
 8017f50:	46e0      	mov	r8, ip
 8017f52:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8017f56:	3708      	adds	r7, #8
 8017f58:	454f      	cmp	r7, r9
 8017f5a:	46c4      	mov	ip, r8
 8017f5c:	d1f6      	bne.n	8017f4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8017f5e:	6838      	ldr	r0, [r7, #0]
 8017f60:	f8c8 0000 	str.w	r0, [r8]
 8017f64:	88b9      	ldrh	r1, [r7, #4]
 8017f66:	f8a8 1004 	strh.w	r1, [r8, #4]
 8017f6a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017f6e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017f72:	d009      	beq.n	8017f88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8017f74:	7b51      	ldrb	r1, [r2, #13]
 8017f76:	7992      	ldrb	r2, [r2, #6]
 8017f78:	0149      	lsls	r1, r1, #5
 8017f7a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017f7e:	4311      	orrs	r1, r2
 8017f80:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017f84:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017f88:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017f8c:	d00e      	beq.n	8017fac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8017f8e:	eba3 030e 	sub.w	r3, r3, lr
 8017f92:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017f96:	b29b      	uxth	r3, r3
 8017f98:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017f9c:	10db      	asrs	r3, r3, #3
 8017f9e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017fa2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017fa6:	4313      	orrs	r3, r2
 8017fa8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017fac:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017fb0:	00cb      	lsls	r3, r1, #3
 8017fb2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017fb6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017fba:	0648      	lsls	r0, r1, #25
 8017fbc:	ea43 0302 	orr.w	r3, r3, r2
 8017fc0:	bf44      	itt	mi
 8017fc2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017fc6:	b21b      	sxthmi	r3, r3
 8017fc8:	1b5d      	subs	r5, r3, r5
 8017fca:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017fce:	e7b5      	b.n	8017f3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017fd4:	461e      	mov	r6, r3
 8017fd6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017fd8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017fdc:	4604      	mov	r4, r0
 8017fde:	4617      	mov	r7, r2
 8017fe0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017fe4:	f7f0 ff84 	bl	8008ef0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017fe8:	4605      	mov	r5, r0
 8017fea:	b918      	cbnz	r0, 8017ff4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8017fec:	6030      	str	r0, [r6, #0]
 8017fee:	4628      	mov	r0, r5
 8017ff0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017ff4:	683b      	ldr	r3, [r7, #0]
 8017ff6:	4601      	mov	r1, r0
 8017ff8:	68db      	ldr	r3, [r3, #12]
 8017ffa:	4638      	mov	r0, r7
 8017ffc:	4798      	blx	r3
 8017ffe:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018002:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018006:	4602      	mov	r2, r0
 8018008:	6030      	str	r0, [r6, #0]
 801800a:	d213      	bcs.n	8018034 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801800c:	4643      	mov	r3, r8
 801800e:	4639      	mov	r1, r7
 8018010:	4620      	mov	r0, r4
 8018012:	f7ff fe3b 	bl	8017c8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018016:	6030      	str	r0, [r6, #0]
 8018018:	6833      	ldr	r3, [r6, #0]
 801801a:	b143      	cbz	r3, 801802e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801801c:	7b5a      	ldrb	r2, [r3, #13]
 801801e:	7a9b      	ldrb	r3, [r3, #10]
 8018020:	0052      	lsls	r2, r2, #1
 8018022:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018026:	4313      	orrs	r3, r2
 8018028:	bf0c      	ite	eq
 801802a:	2301      	moveq	r3, #1
 801802c:	2300      	movne	r3, #0
 801802e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018032:	e7dc      	b.n	8017fee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018034:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018038:	b29b      	uxth	r3, r3
 801803a:	2b7f      	cmp	r3, #127	; 0x7f
 801803c:	d804      	bhi.n	8018048 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801803e:	4639      	mov	r1, r7
 8018040:	4620      	mov	r0, r4
 8018042:	f7ff fd17 	bl	8017a74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018046:	e7e6      	b.n	8018016 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018048:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801804c:	2b00      	cmp	r3, #0
 801804e:	d0e3      	beq.n	8018018 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018050:	f640 1302 	movw	r3, #2306	; 0x902
 8018054:	429d      	cmp	r5, r3
 8018056:	d1df      	bne.n	8018018 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018058:	4601      	mov	r1, r0
 801805a:	4620      	mov	r0, r4
 801805c:	f7ff fcdb 	bl	8017a16 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018060:	e7d9      	b.n	8018016 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018062 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018062:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018066:	461e      	mov	r6, r3
 8018068:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801806a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801806e:	4604      	mov	r4, r0
 8018070:	4617      	mov	r7, r2
 8018072:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018076:	f7f0 ff3b 	bl	8008ef0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801807a:	4605      	mov	r5, r0
 801807c:	b918      	cbnz	r0, 8018086 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801807e:	6030      	str	r0, [r6, #0]
 8018080:	4628      	mov	r0, r5
 8018082:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018086:	683b      	ldr	r3, [r7, #0]
 8018088:	4601      	mov	r1, r0
 801808a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801808e:	4638      	mov	r0, r7
 8018090:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018094:	47c8      	blx	r9
 8018096:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801809a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801809e:	4602      	mov	r2, r0
 80180a0:	6030      	str	r0, [r6, #0]
 80180a2:	d213      	bcs.n	80180cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80180a4:	4643      	mov	r3, r8
 80180a6:	4639      	mov	r1, r7
 80180a8:	4620      	mov	r0, r4
 80180aa:	f7ff fdef 	bl	8017c8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80180ae:	6030      	str	r0, [r6, #0]
 80180b0:	6833      	ldr	r3, [r6, #0]
 80180b2:	b143      	cbz	r3, 80180c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80180b4:	7b5a      	ldrb	r2, [r3, #13]
 80180b6:	7a9b      	ldrb	r3, [r3, #10]
 80180b8:	0052      	lsls	r2, r2, #1
 80180ba:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80180be:	4313      	orrs	r3, r2
 80180c0:	bf0c      	ite	eq
 80180c2:	2301      	moveq	r3, #1
 80180c4:	2300      	movne	r3, #0
 80180c6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80180ca:	e7d9      	b.n	8018080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80180cc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80180d0:	b29b      	uxth	r3, r3
 80180d2:	2b7f      	cmp	r3, #127	; 0x7f
 80180d4:	d804      	bhi.n	80180e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80180d6:	4639      	mov	r1, r7
 80180d8:	4620      	mov	r0, r4
 80180da:	f7ff fccb 	bl	8017a74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80180de:	e7e6      	b.n	80180ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80180e0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80180e4:	2b00      	cmp	r3, #0
 80180e6:	d0e3      	beq.n	80180b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80180e8:	f640 1302 	movw	r3, #2306	; 0x902
 80180ec:	429d      	cmp	r5, r3
 80180ee:	d1df      	bne.n	80180b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80180f0:	4601      	mov	r1, r0
 80180f2:	4620      	mov	r0, r4
 80180f4:	f7ff fc8f 	bl	8017a16 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80180f8:	e7d9      	b.n	80180ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080180fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80180fa:	b510      	push	{r4, lr}
 80180fc:	4604      	mov	r4, r0
 80180fe:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018102:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018104:	b1f1      	cbz	r1, 8018144 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018106:	2b0a      	cmp	r3, #10
 8018108:	d02f      	beq.n	801816a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801810a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801810c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018110:	3901      	subs	r1, #1
 8018112:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018114:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018118:	1c51      	adds	r1, r2, #1
 801811a:	b289      	uxth	r1, r1
 801811c:	2901      	cmp	r1, #1
 801811e:	bf84      	itt	hi
 8018120:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018124:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018126:	f103 0201 	add.w	r2, r3, #1
 801812a:	8722      	strh	r2, [r4, #56]	; 0x38
 801812c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801812e:	bf98      	it	ls
 8018130:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018132:	4413      	add	r3, r2
 8018134:	b29b      	uxth	r3, r3
 8018136:	2b09      	cmp	r3, #9
 8018138:	bf88      	it	hi
 801813a:	3b0a      	subhi	r3, #10
 801813c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018140:	8458      	strh	r0, [r3, #34]	; 0x22
 8018142:	e7dc      	b.n	80180fe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018144:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018146:	2b0a      	cmp	r3, #10
 8018148:	d00f      	beq.n	801816a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801814a:	4620      	mov	r0, r4
 801814c:	f7ff fc11 	bl	8017972 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018150:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018152:	1c5a      	adds	r2, r3, #1
 8018154:	8722      	strh	r2, [r4, #56]	; 0x38
 8018156:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018158:	4413      	add	r3, r2
 801815a:	b29b      	uxth	r3, r3
 801815c:	2b09      	cmp	r3, #9
 801815e:	bf88      	it	hi
 8018160:	3b0a      	subhi	r3, #10
 8018162:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018166:	8458      	strh	r0, [r3, #34]	; 0x22
 8018168:	e7ec      	b.n	8018144 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801816a:	bd10      	pop	{r4, pc}

0801816c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801816c:	b538      	push	{r3, r4, r5, lr}
 801816e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018170:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018174:	4604      	mov	r4, r0
 8018176:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018178:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801817a:	3a01      	subs	r2, #1
 801817c:	8702      	strh	r2, [r0, #56]	; 0x38
 801817e:	1c5a      	adds	r2, r3, #1
 8018180:	b292      	uxth	r2, r2
 8018182:	2a09      	cmp	r2, #9
 8018184:	bf86      	itte	hi
 8018186:	3b09      	subhi	r3, #9
 8018188:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801818a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801818c:	f7ff ffb5 	bl	80180fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018190:	8c23      	ldrh	r3, [r4, #32]
 8018192:	2b01      	cmp	r3, #1
 8018194:	bf9c      	itt	ls
 8018196:	3301      	addls	r3, #1
 8018198:	8423      	strhls	r3, [r4, #32]
 801819a:	8be3      	ldrh	r3, [r4, #30]
 801819c:	b90b      	cbnz	r3, 80181a2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801819e:	2302      	movs	r3, #2
 80181a0:	83e3      	strh	r3, [r4, #30]
 80181a2:	8be3      	ldrh	r3, [r4, #30]
 80181a4:	3b01      	subs	r3, #1
 80181a6:	b29b      	uxth	r3, r3
 80181a8:	83e3      	strh	r3, [r4, #30]
 80181aa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80181ae:	4628      	mov	r0, r5
 80181b0:	8365      	strh	r5, [r4, #26]
 80181b2:	bd38      	pop	{r3, r4, r5, pc}

080181b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80181b4:	428a      	cmp	r2, r1
 80181b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80181ba:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80181bc:	d931      	bls.n	8018222 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80181be:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80181c0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80181c4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80181c8:	19ee      	adds	r6, r5, r7
 80181ca:	1a54      	subs	r4, r2, r1
 80181cc:	3e01      	subs	r6, #1
 80181ce:	fa1f fe84 	uxth.w	lr, r4
 80181d2:	b2b4      	uxth	r4, r6
 80181d4:	eba4 090e 	sub.w	r9, r4, lr
 80181d8:	fa1f f989 	uxth.w	r9, r9
 80181dc:	2c09      	cmp	r4, #9
 80181de:	4626      	mov	r6, r4
 80181e0:	bf88      	it	hi
 80181e2:	f1a4 060a 	subhi.w	r6, r4, #10
 80181e6:	f1bc 0f00 	cmp.w	ip, #0
 80181ea:	bf08      	it	eq
 80181ec:	f04f 0c02 	moveq.w	ip, #2
 80181f0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80181f4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80181f8:	fa1f fc8c 	uxth.w	ip, ip
 80181fc:	3c01      	subs	r4, #1
 80181fe:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018202:	b2a4      	uxth	r4, r4
 8018204:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018208:	454c      	cmp	r4, r9
 801820a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801820e:	d1e5      	bne.n	80181dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018210:	eba5 050e 	sub.w	r5, r5, lr
 8018214:	eb0e 0408 	add.w	r4, lr, r8
 8018218:	8705      	strh	r5, [r0, #56]	; 0x38
 801821a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801821e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8018222:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018224:	1a64      	subs	r4, r4, r1
 8018226:	4439      	add	r1, r7
 8018228:	b289      	uxth	r1, r1
 801822a:	2909      	cmp	r1, #9
 801822c:	bf88      	it	hi
 801822e:	390a      	subhi	r1, #10
 8018230:	8704      	strh	r4, [r0, #56]	; 0x38
 8018232:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018234:	250a      	movs	r5, #10
 8018236:	b18a      	cbz	r2, 801825c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018238:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801823a:	3a01      	subs	r2, #1
 801823c:	b292      	uxth	r2, r2
 801823e:	3101      	adds	r1, #1
 8018240:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018244:	8701      	strh	r1, [r0, #56]	; 0x38
 8018246:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018248:	b901      	cbnz	r1, 801824c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801824a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801824c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801824e:	3901      	subs	r1, #1
 8018250:	b289      	uxth	r1, r1
 8018252:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018254:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018258:	844c      	strh	r4, [r1, #34]	; 0x22
 801825a:	e7ec      	b.n	8018236 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801825c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018260:	f7ff bf4b 	b.w	80180fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018264 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018264:	b570      	push	{r4, r5, r6, lr}
 8018266:	2500      	movs	r5, #0
 8018268:	4295      	cmp	r5, r2
 801826a:	d011      	beq.n	8018290 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801826c:	8bc4      	ldrh	r4, [r0, #30]
 801826e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018272:	4414      	add	r4, r2
 8018274:	3c01      	subs	r4, #1
 8018276:	1b64      	subs	r4, r4, r5
 8018278:	b2a4      	uxth	r4, r4
 801827a:	2c01      	cmp	r4, #1
 801827c:	bf88      	it	hi
 801827e:	3c02      	subhi	r4, #2
 8018280:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018284:	8b64      	ldrh	r4, [r4, #26]
 8018286:	42b4      	cmp	r4, r6
 8018288:	d117      	bne.n	80182ba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801828a:	3501      	adds	r5, #1
 801828c:	b2ad      	uxth	r5, r5
 801828e:	e7eb      	b.n	8018268 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018290:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018294:	2400      	movs	r4, #0
 8018296:	4413      	add	r3, r2
 8018298:	b2a2      	uxth	r2, r4
 801829a:	429a      	cmp	r2, r3
 801829c:	da0f      	bge.n	80182be <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801829e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80182a0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80182a4:	4432      	add	r2, r6
 80182a6:	b292      	uxth	r2, r2
 80182a8:	2a09      	cmp	r2, #9
 80182aa:	bf88      	it	hi
 80182ac:	3a0a      	subhi	r2, #10
 80182ae:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80182b2:	3401      	adds	r4, #1
 80182b4:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80182b6:	42aa      	cmp	r2, r5
 80182b8:	d0ee      	beq.n	8018298 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80182ba:	2000      	movs	r0, #0
 80182bc:	bd70      	pop	{r4, r5, r6, pc}
 80182be:	2001      	movs	r0, #1
 80182c0:	e7fc      	b.n	80182bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080182c2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80182c2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182c6:	4605      	mov	r5, r0
 80182c8:	4616      	mov	r6, r2
 80182ca:	1c8c      	adds	r4, r1, #2
 80182cc:	8809      	ldrh	r1, [r1, #0]
 80182ce:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80182d2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80182d6:	42b3      	cmp	r3, r6
 80182d8:	d124      	bne.n	8018324 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80182da:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80182de:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80182e2:	f001 070f 	and.w	r7, r1, #15
 80182e6:	f8cd 8000 	str.w	r8, [sp]
 80182ea:	464b      	mov	r3, r9
 80182ec:	4652      	mov	r2, sl
 80182ee:	4621      	mov	r1, r4
 80182f0:	4628      	mov	r0, r5
 80182f2:	f7ff ffb7 	bl	8018264 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80182f6:	4683      	mov	fp, r0
 80182f8:	b168      	cbz	r0, 8018316 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80182fa:	eb0a 0109 	add.w	r1, sl, r9
 80182fe:	4441      	add	r1, r8
 8018300:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018304:	463a      	mov	r2, r7
 8018306:	4649      	mov	r1, r9
 8018308:	4628      	mov	r0, r5
 801830a:	f7ff ff53 	bl	80181b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801830e:	4658      	mov	r0, fp
 8018310:	b003      	add	sp, #12
 8018312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018316:	eb07 010a 	add.w	r1, r7, sl
 801831a:	4449      	add	r1, r9
 801831c:	4441      	add	r1, r8
 801831e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018322:	e7d2      	b.n	80182ca <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018324:	f04f 0b00 	mov.w	fp, #0
 8018328:	e7f1      	b.n	801830e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801832a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801832a:	b570      	push	{r4, r5, r6, lr}
 801832c:	8810      	ldrh	r0, [r2, #0]
 801832e:	4298      	cmp	r0, r3
 8018330:	d817      	bhi.n	8018362 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018332:	1e48      	subs	r0, r1, #1
 8018334:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018338:	4298      	cmp	r0, r3
 801833a:	d312      	bcc.n	8018362 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801833c:	2400      	movs	r4, #0
 801833e:	428c      	cmp	r4, r1
 8018340:	d20f      	bcs.n	8018362 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018342:	1860      	adds	r0, r4, r1
 8018344:	1040      	asrs	r0, r0, #1
 8018346:	0085      	lsls	r5, r0, #2
 8018348:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801834c:	42b3      	cmp	r3, r6
 801834e:	d902      	bls.n	8018356 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018350:	3001      	adds	r0, #1
 8018352:	b284      	uxth	r4, r0
 8018354:	e7f3      	b.n	801833e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018356:	d201      	bcs.n	801835c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018358:	b281      	uxth	r1, r0
 801835a:	e7f0      	b.n	801833e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801835c:	442a      	add	r2, r5
 801835e:	8850      	ldrh	r0, [r2, #2]
 8018360:	bd70      	pop	{r4, r5, r6, pc}
 8018362:	2000      	movs	r0, #0
 8018364:	e7fc      	b.n	8018360 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018366 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018366:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801836a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801836c:	886f      	ldrh	r7, [r5, #2]
 801836e:	4604      	mov	r4, r0
 8018370:	087f      	lsrs	r7, r7, #1
 8018372:	260b      	movs	r6, #11
 8018374:	3e01      	subs	r6, #1
 8018376:	d013      	beq.n	80183a0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018378:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801837a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801837e:	462a      	mov	r2, r5
 8018380:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018384:	4639      	mov	r1, r7
 8018386:	4643      	mov	r3, r8
 8018388:	4620      	mov	r0, r4
 801838a:	f7ff ffce 	bl	801832a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801838e:	b138      	cbz	r0, 80183a0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018390:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018394:	4642      	mov	r2, r8
 8018396:	4620      	mov	r0, r4
 8018398:	f7ff ff93 	bl	80182c2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801839c:	2800      	cmp	r0, #0
 801839e:	d1e9      	bne.n	8018374 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80183a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080183a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80183a4:	b570      	push	{r4, r5, r6, lr}
 80183a6:	694a      	ldr	r2, [r1, #20]
 80183a8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80183aa:	684b      	ldr	r3, [r1, #4]
 80183ac:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80183ae:	1b54      	subs	r4, r2, r5
 80183b0:	f000 8106 	beq.w	80185c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80183b4:	1b9b      	subs	r3, r3, r6
 80183b6:	d003      	beq.n	80183c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80183b8:	4363      	muls	r3, r4
 80183ba:	2210      	movs	r2, #16
 80183bc:	fb93 f3f2 	sdiv	r3, r3, r2
 80183c0:	680c      	ldr	r4, [r1, #0]
 80183c2:	698a      	ldr	r2, [r1, #24]
 80183c4:	1b65      	subs	r5, r4, r5
 80183c6:	f000 80fd 	beq.w	80185c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80183ca:	1b92      	subs	r2, r2, r6
 80183cc:	d003      	beq.n	80183d6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80183ce:	436a      	muls	r2, r5
 80183d0:	2410      	movs	r4, #16
 80183d2:	fb92 f2f4 	sdiv	r2, r2, r4
 80183d6:	1a9b      	subs	r3, r3, r2
 80183d8:	ee07 3a90 	vmov	s15, r3
 80183dc:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018600 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80183e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80183e4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80183e8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80183ec:	460a      	mov	r2, r1
 80183ee:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80183f2:	4603      	mov	r3, r0
 80183f4:	f100 040c 	add.w	r4, r0, #12
 80183f8:	eeb1 6a43 	vneg.f32	s12, s6
 80183fc:	edd2 7a02 	vldr	s15, [r2, #8]
 8018400:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018404:	3214      	adds	r2, #20
 8018406:	ece3 6a01 	vstmia	r3!, {s13}
 801840a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801840e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018412:	429c      	cmp	r4, r3
 8018414:	edc3 7a02 	vstr	s15, [r3, #8]
 8018418:	ed52 7a01 	vldr	s15, [r2, #-4]
 801841c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018420:	edc3 7a05 	vstr	s15, [r3, #20]
 8018424:	d1ea      	bne.n	80183fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018426:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018428:	698b      	ldr	r3, [r1, #24]
 801842a:	edd0 4a02 	vldr	s9, [r0, #8]
 801842e:	edd0 3a00 	vldr	s7, [r0]
 8018432:	edd0 6a01 	vldr	s13, [r0, #4]
 8018436:	ed90 5a05 	vldr	s10, [r0, #20]
 801843a:	ed90 2a03 	vldr	s4, [r0, #12]
 801843e:	edd0 5a04 	vldr	s11, [r0, #16]
 8018442:	ed90 1a07 	vldr	s2, [r0, #28]
 8018446:	edd0 2a06 	vldr	s5, [r0, #24]
 801844a:	1a9b      	subs	r3, r3, r2
 801844c:	ee07 3a90 	vmov	s15, r3
 8018450:	684b      	ldr	r3, [r1, #4]
 8018452:	1a9b      	subs	r3, r3, r2
 8018454:	ee07 3a10 	vmov	s14, r3
 8018458:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801845c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018460:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018464:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018468:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801846c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018470:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018474:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018478:	eee6 7a87 	vfma.f32	s15, s13, s14
 801847c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018480:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018484:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018488:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801848a:	694a      	ldr	r2, [r1, #20]
 801848c:	1b13      	subs	r3, r2, r4
 801848e:	ee07 3a10 	vmov	s14, r3
 8018492:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018496:	680b      	ldr	r3, [r1, #0]
 8018498:	ee27 7a04 	vmul.f32	s14, s14, s8
 801849c:	1b1b      	subs	r3, r3, r4
 801849e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80184a2:	ee07 3a10 	vmov	s14, r3
 80184a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80184aa:	ee27 7a04 	vmul.f32	s14, s14, s8
 80184ae:	eee6 4a87 	vfma.f32	s9, s13, s14
 80184b2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80184b6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80184ba:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80184bc:	698b      	ldr	r3, [r1, #24]
 80184be:	1a9b      	subs	r3, r3, r2
 80184c0:	ee06 3a90 	vmov	s13, r3
 80184c4:	684b      	ldr	r3, [r1, #4]
 80184c6:	1a9b      	subs	r3, r3, r2
 80184c8:	ee07 3a10 	vmov	s14, r3
 80184cc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80184d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80184d4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80184d8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80184dc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80184e0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80184e4:	ee66 6a83 	vmul.f32	s13, s13, s6
 80184e8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80184ec:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80184ee:	694a      	ldr	r2, [r1, #20]
 80184f0:	1b13      	subs	r3, r2, r4
 80184f2:	ee07 3a10 	vmov	s14, r3
 80184f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80184fa:	680b      	ldr	r3, [r1, #0]
 80184fc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018500:	1b1b      	subs	r3, r3, r4
 8018502:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018506:	ee07 3a10 	vmov	s14, r3
 801850a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801850e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018512:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018516:	edd0 5a08 	vldr	s11, [r0, #32]
 801851a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801851e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018522:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8018526:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018528:	698b      	ldr	r3, [r1, #24]
 801852a:	1a9b      	subs	r3, r3, r2
 801852c:	ee07 3a10 	vmov	s14, r3
 8018530:	684b      	ldr	r3, [r1, #4]
 8018532:	1a9b      	subs	r3, r3, r2
 8018534:	ee01 3a90 	vmov	s3, r3
 8018538:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801853c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018540:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018544:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018548:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801854c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018550:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018554:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018558:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801855c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801855e:	694a      	ldr	r2, [r1, #20]
 8018560:	1b13      	subs	r3, r2, r4
 8018562:	ee03 3a10 	vmov	s6, r3
 8018566:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801856a:	680b      	ldr	r3, [r1, #0]
 801856c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018570:	1b1b      	subs	r3, r3, r4
 8018572:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018576:	ee03 3a10 	vmov	s6, r3
 801857a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801857e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018582:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018586:	ee25 6a86 	vmul.f32	s12, s11, s12
 801858a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801858e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018592:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018596:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801859a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801859e:	dd13      	ble.n	80185c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80185a0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80185a4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80185a8:	63c3      	str	r3, [r0, #60]	; 0x3c
 80185aa:	eee3 7a87 	vfma.f32	s15, s7, s14
 80185ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80185b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185b6:	dd15      	ble.n	80185e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80185b8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80185bc:	6403      	str	r3, [r0, #64]	; 0x40
 80185be:	bd70      	pop	{r4, r5, r6, pc}
 80185c0:	4623      	mov	r3, r4
 80185c2:	e6fd      	b.n	80183c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80185c4:	462a      	mov	r2, r5
 80185c6:	e706      	b.n	80183d6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80185c8:	d502      	bpl.n	80185d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80185ca:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80185ce:	e7e9      	b.n	80185a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80185d0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80185d4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80185d8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80185dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185e0:	dade      	bge.n	80185a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80185e2:	e7f2      	b.n	80185ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80185e4:	d502      	bpl.n	80185ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80185e6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80185ea:	e7e7      	b.n	80185bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80185ec:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80185f0:	eee3 4a86 	vfma.f32	s9, s7, s12
 80185f4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80185f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185fc:	dadc      	bge.n	80185b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80185fe:	e7f2      	b.n	80185e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018600:	3d800000 	.word	0x3d800000

08018604 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018608:	2714      	movs	r7, #20
 801860a:	435f      	muls	r7, r3
 801860c:	eb02 0c07 	add.w	ip, r2, r7
 8018610:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8018614:	f115 0e0f 	adds.w	lr, r5, #15
 8018618:	f100 80a2 	bmi.w	8018760 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801861c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8018620:	9c08      	ldr	r4, [sp, #32]
 8018622:	f8c0 e014 	str.w	lr, [r0, #20]
 8018626:	2614      	movs	r6, #20
 8018628:	4366      	muls	r6, r4
 801862a:	eb02 0806 	add.w	r8, r2, r6
 801862e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018632:	f115 040f 	adds.w	r4, r5, #15
 8018636:	f100 809f 	bmi.w	8018778 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801863a:	1124      	asrs	r4, r4, #4
 801863c:	eba4 040e 	sub.w	r4, r4, lr
 8018640:	6184      	str	r4, [r0, #24]
 8018642:	2c00      	cmp	r4, #0
 8018644:	f000 808a 	beq.w	801875c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8018648:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801864c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018650:	5995      	ldr	r5, [r2, r6]
 8018652:	eba4 0809 	sub.w	r8, r4, r9
 8018656:	59d4      	ldr	r4, [r2, r7]
 8018658:	eba5 0a04 	sub.w	sl, r5, r4
 801865c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018660:	fb0e fe05 	mul.w	lr, lr, r5
 8018664:	fb0a ee19 	mls	lr, sl, r9, lr
 8018668:	fb08 e404 	mla	r4, r8, r4, lr
 801866c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018670:	3c01      	subs	r4, #1
 8018672:	19a4      	adds	r4, r4, r6
 8018674:	f100 808c 	bmi.w	8018790 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018678:	fb94 fef6 	sdiv	lr, r4, r6
 801867c:	f8c0 e000 	str.w	lr, [r0]
 8018680:	fb06 441e 	mls	r4, r6, lr, r4
 8018684:	6104      	str	r4, [r0, #16]
 8018686:	2d00      	cmp	r5, #0
 8018688:	f2c0 8095 	blt.w	80187b6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801868c:	fb95 f4f6 	sdiv	r4, r5, r6
 8018690:	6044      	str	r4, [r0, #4]
 8018692:	fb06 5514 	mls	r5, r6, r4, r5
 8018696:	6085      	str	r5, [r0, #8]
 8018698:	60c6      	str	r6, [r0, #12]
 801869a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801869e:	6945      	ldr	r5, [r0, #20]
 80186a0:	59d2      	ldr	r2, [r2, r7]
 80186a2:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80187d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80186a6:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80186aa:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80186ae:	ee07 4a10 	vmov	s14, r4
 80186b2:	6804      	ldr	r4, [r0, #0]
 80186b4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80186b8:	ee07 2a90 	vmov	s15, r2
 80186bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80186c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80186c4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80186c8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80186cc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80186d0:	edd3 6a00 	vldr	s13, [r3]
 80186d4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80186d8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80186dc:	eee6 6a27 	vfma.f32	s13, s12, s15
 80186e0:	edc0 6a07 	vstr	s13, [r0, #28]
 80186e4:	edd0 6a01 	vldr	s13, [r0, #4]
 80186e8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80186ec:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80186f0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80186f4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80186f8:	ed80 6a08 	vstr	s12, [r0, #32]
 80186fc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80186fe:	6242      	str	r2, [r0, #36]	; 0x24
 8018700:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8018704:	ed93 6a03 	vldr	s12, [r3, #12]
 8018708:	eea5 6a87 	vfma.f32	s12, s11, s14
 801870c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018710:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8018714:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8018718:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801871c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8018720:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018724:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8018728:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801872a:	6302      	str	r2, [r0, #48]	; 0x30
 801872c:	ed93 6a06 	vldr	s12, [r3, #24]
 8018730:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8018734:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018738:	eeb0 7a46 	vmov.f32	s14, s12
 801873c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8018740:	eea6 7a27 	vfma.f32	s14, s12, s15
 8018744:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018748:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801874c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8018750:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018754:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8018758:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801875a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801875c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018760:	f1c5 0501 	rsb	r5, r5, #1
 8018764:	f015 050f 	ands.w	r5, r5, #15
 8018768:	bf18      	it	ne
 801876a:	2501      	movne	r5, #1
 801876c:	2410      	movs	r4, #16
 801876e:	fb9e fef4 	sdiv	lr, lr, r4
 8018772:	ebae 0e05 	sub.w	lr, lr, r5
 8018776:	e753      	b.n	8018620 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018778:	f1c5 0501 	rsb	r5, r5, #1
 801877c:	f015 050f 	ands.w	r5, r5, #15
 8018780:	bf18      	it	ne
 8018782:	2501      	movne	r5, #1
 8018784:	f04f 0910 	mov.w	r9, #16
 8018788:	fb94 f4f9 	sdiv	r4, r4, r9
 801878c:	1b64      	subs	r4, r4, r5
 801878e:	e755      	b.n	801863c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8018790:	4264      	negs	r4, r4
 8018792:	fb94 fef6 	sdiv	lr, r4, r6
 8018796:	f1ce 0800 	rsb	r8, lr, #0
 801879a:	fb06 441e 	mls	r4, r6, lr, r4
 801879e:	f8c0 8000 	str.w	r8, [r0]
 80187a2:	6104      	str	r4, [r0, #16]
 80187a4:	2c00      	cmp	r4, #0
 80187a6:	f43f af6e 	beq.w	8018686 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80187aa:	ea6f 0e0e 	mvn.w	lr, lr
 80187ae:	f8c0 e000 	str.w	lr, [r0]
 80187b2:	1b34      	subs	r4, r6, r4
 80187b4:	e766      	b.n	8018684 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80187b6:	426d      	negs	r5, r5
 80187b8:	fb95 f4f6 	sdiv	r4, r5, r6
 80187bc:	f1c4 0e00 	rsb	lr, r4, #0
 80187c0:	fb06 5514 	mls	r5, r6, r4, r5
 80187c4:	f8c0 e004 	str.w	lr, [r0, #4]
 80187c8:	6085      	str	r5, [r0, #8]
 80187ca:	2d00      	cmp	r5, #0
 80187cc:	f43f af64 	beq.w	8018698 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80187d0:	43e4      	mvns	r4, r4
 80187d2:	6044      	str	r4, [r0, #4]
 80187d4:	1b75      	subs	r5, r6, r5
 80187d6:	e75e      	b.n	8018696 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80187d8:	3d800000 	.word	0x3d800000

080187dc <_ZN8touchgfx7Unicode6strlenEPKt>:
 80187dc:	4602      	mov	r2, r0
 80187de:	b148      	cbz	r0, 80187f4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80187e0:	2300      	movs	r3, #0
 80187e2:	b298      	uxth	r0, r3
 80187e4:	3301      	adds	r3, #1
 80187e6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80187ea:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80187ee:	2900      	cmp	r1, #0
 80187f0:	d1f7      	bne.n	80187e2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80187f2:	4770      	bx	lr
 80187f4:	4770      	bx	lr

080187f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80187f6:	b530      	push	{r4, r5, lr}
 80187f8:	4604      	mov	r4, r0
 80187fa:	b159      	cbz	r1, 8018814 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80187fc:	b148      	cbz	r0, 8018812 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80187fe:	2300      	movs	r3, #0
 8018800:	b298      	uxth	r0, r3
 8018802:	4282      	cmp	r2, r0
 8018804:	d905      	bls.n	8018812 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018806:	5ccd      	ldrb	r5, [r1, r3]
 8018808:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801880c:	3301      	adds	r3, #1
 801880e:	2d00      	cmp	r5, #0
 8018810:	d1f6      	bne.n	8018800 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8018812:	bd30      	pop	{r4, r5, pc}
 8018814:	4608      	mov	r0, r1
 8018816:	e7fc      	b.n	8018812 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08018818 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8018818:	b5f0      	push	{r4, r5, r6, r7, lr}
 801881a:	b08b      	sub	sp, #44	; 0x2c
 801881c:	468c      	mov	ip, r1
 801881e:	2100      	movs	r1, #0
 8018820:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018824:	4604      	mov	r4, r0
 8018826:	261f      	movs	r6, #31
 8018828:	af01      	add	r7, sp, #4
 801882a:	fb94 fef3 	sdiv	lr, r4, r3
 801882e:	fb03 441e 	mls	r4, r3, lr, r4
 8018832:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8018836:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801883a:	b2ec      	uxtb	r4, r5
 801883c:	2d09      	cmp	r5, #9
 801883e:	bfd4      	ite	le
 8018840:	3430      	addle	r4, #48	; 0x30
 8018842:	3457      	addgt	r4, #87	; 0x57
 8018844:	b2e4      	uxtb	r4, r4
 8018846:	55bc      	strb	r4, [r7, r6]
 8018848:	4674      	mov	r4, lr
 801884a:	1e71      	subs	r1, r6, #1
 801884c:	b974      	cbnz	r4, 801886c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801884e:	2800      	cmp	r0, #0
 8018850:	da05      	bge.n	801885e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8018852:	ab0a      	add	r3, sp, #40	; 0x28
 8018854:	4419      	add	r1, r3
 8018856:	232d      	movs	r3, #45	; 0x2d
 8018858:	f801 3c24 	strb.w	r3, [r1, #-36]
 801885c:	1eb1      	subs	r1, r6, #2
 801885e:	3101      	adds	r1, #1
 8018860:	4439      	add	r1, r7
 8018862:	4660      	mov	r0, ip
 8018864:	f7ff ffc7 	bl	80187f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018868:	b00b      	add	sp, #44	; 0x2c
 801886a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801886c:	460e      	mov	r6, r1
 801886e:	e7dc      	b.n	801882a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08018870 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8018870:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018872:	b08b      	sub	sp, #44	; 0x2c
 8018874:	468c      	mov	ip, r1
 8018876:	2100      	movs	r1, #0
 8018878:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801887c:	ae01      	add	r6, sp, #4
 801887e:	211f      	movs	r1, #31
 8018880:	fbb0 f7f3 	udiv	r7, r0, r3
 8018884:	fb03 0517 	mls	r5, r3, r7, r0
 8018888:	b2ec      	uxtb	r4, r5
 801888a:	2d09      	cmp	r5, #9
 801888c:	bfd4      	ite	le
 801888e:	3430      	addle	r4, #48	; 0x30
 8018890:	3457      	addgt	r4, #87	; 0x57
 8018892:	b2e4      	uxtb	r4, r4
 8018894:	558c      	strb	r4, [r1, r6]
 8018896:	4638      	mov	r0, r7
 8018898:	1e4c      	subs	r4, r1, #1
 801889a:	b92f      	cbnz	r7, 80188a8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801889c:	4431      	add	r1, r6
 801889e:	4660      	mov	r0, ip
 80188a0:	f7ff ffa9 	bl	80187f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80188a4:	b00b      	add	sp, #44	; 0x2c
 80188a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80188a8:	4621      	mov	r1, r4
 80188aa:	e7e9      	b.n	8018880 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080188ac <_ZN8touchgfx7Unicode4itoaElPtti>:
 80188ac:	b410      	push	{r4}
 80188ae:	b131      	cbz	r1, 80188be <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80188b0:	1e9c      	subs	r4, r3, #2
 80188b2:	2c22      	cmp	r4, #34	; 0x22
 80188b4:	d803      	bhi.n	80188be <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80188b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80188ba:	f7ff bfad 	b.w	8018818 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80188be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80188c2:	4770      	bx	lr

080188c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80188c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188c8:	4691      	mov	r9, r2
 80188ca:	b085      	sub	sp, #20
 80188cc:	6802      	ldr	r2, [r0, #0]
 80188ce:	9201      	str	r2, [sp, #4]
 80188d0:	4688      	mov	r8, r1
 80188d2:	4683      	mov	fp, r0
 80188d4:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80188d8:	9103      	str	r1, [sp, #12]
 80188da:	4610      	mov	r0, r2
 80188dc:	461c      	mov	r4, r3
 80188de:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80188e2:	9302      	str	r3, [sp, #8]
 80188e4:	f7ff ff7a 	bl	80187dc <_ZN8touchgfx7Unicode6strlenEPKt>
 80188e8:	f1b8 0f00 	cmp.w	r8, #0
 80188ec:	bf0c      	ite	eq
 80188ee:	4684      	moveq	ip, r0
 80188f0:	f100 0c01 	addne.w	ip, r0, #1
 80188f4:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80188f8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80188fc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80188fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018900:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018904:	9903      	ldr	r1, [sp, #12]
 8018906:	fa1f fc8c 	uxth.w	ip, ip
 801890a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801890e:	d041      	beq.n	8018994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018910:	d834      	bhi.n	801897c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018912:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018916:	d059      	beq.n	80189cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018918:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801891c:	d03a      	beq.n	8018994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801891e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8018922:	d034      	beq.n	801898e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018924:	2400      	movs	r4, #0
 8018926:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801892a:	3a01      	subs	r2, #1
 801892c:	b169      	cbz	r1, 801894a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801892e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018930:	458c      	cmp	ip, r1
 8018932:	da09      	bge.n	8018948 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018934:	eba1 010c 	sub.w	r1, r1, ip
 8018938:	b289      	uxth	r1, r1
 801893a:	b933      	cbnz	r3, 801894a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801893c:	2e00      	cmp	r6, #0
 801893e:	d051      	beq.n	80189e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018940:	2800      	cmp	r0, #0
 8018942:	d04f      	beq.n	80189e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018944:	440c      	add	r4, r1
 8018946:	b2a4      	uxth	r4, r4
 8018948:	2100      	movs	r1, #0
 801894a:	682b      	ldr	r3, [r5, #0]
 801894c:	4293      	cmp	r3, r2
 801894e:	da07      	bge.n	8018960 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018950:	f1b8 0f00 	cmp.w	r8, #0
 8018954:	d004      	beq.n	8018960 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018956:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801895a:	682b      	ldr	r3, [r5, #0]
 801895c:	3301      	adds	r3, #1
 801895e:	602b      	str	r3, [r5, #0]
 8018960:	2730      	movs	r7, #48	; 0x30
 8018962:	2c00      	cmp	r4, #0
 8018964:	d04e      	beq.n	8018a04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018966:	682e      	ldr	r6, [r5, #0]
 8018968:	3c01      	subs	r4, #1
 801896a:	42b2      	cmp	r2, r6
 801896c:	b2a4      	uxth	r4, r4
 801896e:	dd49      	ble.n	8018a04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018970:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018974:	682b      	ldr	r3, [r5, #0]
 8018976:	3301      	adds	r3, #1
 8018978:	602b      	str	r3, [r5, #0]
 801897a:	e7f2      	b.n	8018962 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801897c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018980:	d01d      	beq.n	80189be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018982:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018986:	d002      	beq.n	801898e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018988:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801898c:	e7c9      	b.n	8018922 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801898e:	4684      	mov	ip, r0
 8018990:	f04f 0800 	mov.w	r8, #0
 8018994:	2c00      	cmp	r4, #0
 8018996:	d0c6      	beq.n	8018926 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018998:	b947      	cbnz	r7, 80189ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801899a:	2801      	cmp	r0, #1
 801899c:	d106      	bne.n	80189ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801899e:	8814      	ldrh	r4, [r2, #0]
 80189a0:	2c30      	cmp	r4, #48	; 0x30
 80189a2:	bf02      	ittt	eq
 80189a4:	3202      	addeq	r2, #2
 80189a6:	f8cb 2000 	streq.w	r2, [fp]
 80189aa:	4638      	moveq	r0, r7
 80189ac:	45bc      	cmp	ip, r7
 80189ae:	da14      	bge.n	80189da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80189b0:	b2bf      	uxth	r7, r7
 80189b2:	eba7 040c 	sub.w	r4, r7, ip
 80189b6:	b2a4      	uxth	r4, r4
 80189b8:	46bc      	mov	ip, r7
 80189ba:	2600      	movs	r6, #0
 80189bc:	e7b3      	b.n	8018926 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80189be:	4684      	mov	ip, r0
 80189c0:	b16c      	cbz	r4, 80189de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80189c2:	42b8      	cmp	r0, r7
 80189c4:	dd00      	ble.n	80189c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80189c6:	b2b8      	uxth	r0, r7
 80189c8:	2400      	movs	r4, #0
 80189ca:	e003      	b.n	80189d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80189cc:	f04f 0c01 	mov.w	ip, #1
 80189d0:	2400      	movs	r4, #0
 80189d2:	4660      	mov	r0, ip
 80189d4:	4626      	mov	r6, r4
 80189d6:	46a0      	mov	r8, r4
 80189d8:	e7a5      	b.n	8018926 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80189da:	2400      	movs	r4, #0
 80189dc:	e7ed      	b.n	80189ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80189de:	4626      	mov	r6, r4
 80189e0:	46a0      	mov	r8, r4
 80189e2:	e7a0      	b.n	8018926 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80189e4:	2900      	cmp	r1, #0
 80189e6:	d0b0      	beq.n	801894a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80189e8:	2720      	movs	r7, #32
 80189ea:	682e      	ldr	r6, [r5, #0]
 80189ec:	2900      	cmp	r1, #0
 80189ee:	d0ac      	beq.n	801894a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80189f0:	3901      	subs	r1, #1
 80189f2:	4296      	cmp	r6, r2
 80189f4:	b289      	uxth	r1, r1
 80189f6:	daa7      	bge.n	8018948 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80189f8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80189fc:	682b      	ldr	r3, [r5, #0]
 80189fe:	3301      	adds	r3, #1
 8018a00:	602b      	str	r3, [r5, #0]
 8018a02:	e7f2      	b.n	80189ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018a04:	b188      	cbz	r0, 8018a2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018a06:	682b      	ldr	r3, [r5, #0]
 8018a08:	3801      	subs	r0, #1
 8018a0a:	429a      	cmp	r2, r3
 8018a0c:	b280      	uxth	r0, r0
 8018a0e:	dd0c      	ble.n	8018a2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018a10:	f8db 3000 	ldr.w	r3, [fp]
 8018a14:	1c9c      	adds	r4, r3, #2
 8018a16:	f8cb 4000 	str.w	r4, [fp]
 8018a1a:	881c      	ldrh	r4, [r3, #0]
 8018a1c:	682b      	ldr	r3, [r5, #0]
 8018a1e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8018a22:	682b      	ldr	r3, [r5, #0]
 8018a24:	3301      	adds	r3, #1
 8018a26:	602b      	str	r3, [r5, #0]
 8018a28:	e7ec      	b.n	8018a04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018a2a:	2620      	movs	r6, #32
 8018a2c:	b151      	cbz	r1, 8018a44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018a2e:	6828      	ldr	r0, [r5, #0]
 8018a30:	3901      	subs	r1, #1
 8018a32:	4282      	cmp	r2, r0
 8018a34:	b289      	uxth	r1, r1
 8018a36:	dd05      	ble.n	8018a44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018a38:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8018a3c:	682b      	ldr	r3, [r5, #0]
 8018a3e:	3301      	adds	r3, #1
 8018a40:	602b      	str	r3, [r5, #0]
 8018a42:	e7f3      	b.n	8018a2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018a44:	b005      	add	sp, #20
 8018a46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018a4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8018a4a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018a4e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018a52:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018a56:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8018a5a:	2400      	movs	r4, #0
 8018a5c:	8014      	strh	r4, [r2, #0]
 8018a5e:	701c      	strb	r4, [r3, #0]
 8018a60:	f888 4000 	strb.w	r4, [r8]
 8018a64:	f88c 4000 	strb.w	r4, [ip]
 8018a68:	f88e 4000 	strb.w	r4, [lr]
 8018a6c:	703c      	strb	r4, [r7, #0]
 8018a6e:	6804      	ldr	r4, [r0, #0]
 8018a70:	b1a4      	cbz	r4, 8018a9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018a72:	8824      	ldrh	r4, [r4, #0]
 8018a74:	f04f 0901 	mov.w	r9, #1
 8018a78:	b314      	cbz	r4, 8018ac0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018a7a:	2c2b      	cmp	r4, #43	; 0x2b
 8018a7c:	d001      	beq.n	8018a82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8018a7e:	2c20      	cmp	r4, #32
 8018a80:	d110      	bne.n	8018aa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018a82:	8014      	strh	r4, [r2, #0]
 8018a84:	6804      	ldr	r4, [r0, #0]
 8018a86:	b10c      	cbz	r4, 8018a8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018a88:	3402      	adds	r4, #2
 8018a8a:	6004      	str	r4, [r0, #0]
 8018a8c:	680c      	ldr	r4, [r1, #0]
 8018a8e:	b10c      	cbz	r4, 8018a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018a90:	3401      	adds	r4, #1
 8018a92:	600c      	str	r4, [r1, #0]
 8018a94:	6804      	ldr	r4, [r0, #0]
 8018a96:	b17c      	cbz	r4, 8018ab8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018a98:	8824      	ldrh	r4, [r4, #0]
 8018a9a:	e7ed      	b.n	8018a78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018a9c:	680c      	ldr	r4, [r1, #0]
 8018a9e:	b17c      	cbz	r4, 8018ac0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018aa0:	7824      	ldrb	r4, [r4, #0]
 8018aa2:	e7e7      	b.n	8018a74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018aa4:	2c2d      	cmp	r4, #45	; 0x2d
 8018aa6:	d102      	bne.n	8018aae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018aa8:	f883 9000 	strb.w	r9, [r3]
 8018aac:	e7ea      	b.n	8018a84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018aae:	2c23      	cmp	r4, #35	; 0x23
 8018ab0:	d107      	bne.n	8018ac2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018ab2:	f888 9000 	strb.w	r9, [r8]
 8018ab6:	e7e5      	b.n	8018a84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018ab8:	680c      	ldr	r4, [r1, #0]
 8018aba:	b10c      	cbz	r4, 8018ac0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018abc:	7824      	ldrb	r4, [r4, #0]
 8018abe:	e7db      	b.n	8018a78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018ac0:	2400      	movs	r4, #0
 8018ac2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018ac6:	2b09      	cmp	r3, #9
 8018ac8:	d901      	bls.n	8018ace <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018aca:	2c2a      	cmp	r4, #42	; 0x2a
 8018acc:	d122      	bne.n	8018b14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018ace:	2301      	movs	r3, #1
 8018ad0:	2c30      	cmp	r4, #48	; 0x30
 8018ad2:	f88e 3000 	strb.w	r3, [lr]
 8018ad6:	d10d      	bne.n	8018af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018ad8:	f88c 3000 	strb.w	r3, [ip]
 8018adc:	6803      	ldr	r3, [r0, #0]
 8018ade:	b10b      	cbz	r3, 8018ae4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018ae0:	3302      	adds	r3, #2
 8018ae2:	6003      	str	r3, [r0, #0]
 8018ae4:	680b      	ldr	r3, [r1, #0]
 8018ae6:	b10b      	cbz	r3, 8018aec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018ae8:	3301      	adds	r3, #1
 8018aea:	600b      	str	r3, [r1, #0]
 8018aec:	6803      	ldr	r3, [r0, #0]
 8018aee:	2b00      	cmp	r3, #0
 8018af0:	d02f      	beq.n	8018b52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018af2:	881c      	ldrh	r4, [r3, #0]
 8018af4:	2c2a      	cmp	r4, #42	; 0x2a
 8018af6:	d135      	bne.n	8018b64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018af8:	f04f 33ff 	mov.w	r3, #4294967295
 8018afc:	6033      	str	r3, [r6, #0]
 8018afe:	6803      	ldr	r3, [r0, #0]
 8018b00:	b10b      	cbz	r3, 8018b06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018b02:	3302      	adds	r3, #2
 8018b04:	6003      	str	r3, [r0, #0]
 8018b06:	680b      	ldr	r3, [r1, #0]
 8018b08:	b10b      	cbz	r3, 8018b0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018b0a:	3301      	adds	r3, #1
 8018b0c:	600b      	str	r3, [r1, #0]
 8018b0e:	6803      	ldr	r3, [r0, #0]
 8018b10:	b31b      	cbz	r3, 8018b5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018b12:	881c      	ldrh	r4, [r3, #0]
 8018b14:	2c2e      	cmp	r4, #46	; 0x2e
 8018b16:	d11a      	bne.n	8018b4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018b18:	2301      	movs	r3, #1
 8018b1a:	703b      	strb	r3, [r7, #0]
 8018b1c:	6803      	ldr	r3, [r0, #0]
 8018b1e:	b10b      	cbz	r3, 8018b24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018b20:	3302      	adds	r3, #2
 8018b22:	6003      	str	r3, [r0, #0]
 8018b24:	680b      	ldr	r3, [r1, #0]
 8018b26:	b10b      	cbz	r3, 8018b2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018b28:	3301      	adds	r3, #1
 8018b2a:	600b      	str	r3, [r1, #0]
 8018b2c:	6803      	ldr	r3, [r0, #0]
 8018b2e:	2b00      	cmp	r3, #0
 8018b30:	d036      	beq.n	8018ba0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018b32:	881b      	ldrh	r3, [r3, #0]
 8018b34:	2b2a      	cmp	r3, #42	; 0x2a
 8018b36:	d137      	bne.n	8018ba8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018b38:	f04f 33ff 	mov.w	r3, #4294967295
 8018b3c:	602b      	str	r3, [r5, #0]
 8018b3e:	6803      	ldr	r3, [r0, #0]
 8018b40:	b10b      	cbz	r3, 8018b46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018b42:	3302      	adds	r3, #2
 8018b44:	6003      	str	r3, [r0, #0]
 8018b46:	680b      	ldr	r3, [r1, #0]
 8018b48:	b10b      	cbz	r3, 8018b4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018b4a:	3301      	adds	r3, #1
 8018b4c:	600b      	str	r3, [r1, #0]
 8018b4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018b52:	680c      	ldr	r4, [r1, #0]
 8018b54:	b134      	cbz	r4, 8018b64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018b56:	7824      	ldrb	r4, [r4, #0]
 8018b58:	e7cc      	b.n	8018af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018b5a:	680b      	ldr	r3, [r1, #0]
 8018b5c:	2b00      	cmp	r3, #0
 8018b5e:	d0f6      	beq.n	8018b4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018b60:	781c      	ldrb	r4, [r3, #0]
 8018b62:	e7d7      	b.n	8018b14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018b64:	2300      	movs	r3, #0
 8018b66:	6033      	str	r3, [r6, #0]
 8018b68:	220a      	movs	r2, #10
 8018b6a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018b6e:	fa1f f38c 	uxth.w	r3, ip
 8018b72:	2b09      	cmp	r3, #9
 8018b74:	d8ce      	bhi.n	8018b14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018b76:	6833      	ldr	r3, [r6, #0]
 8018b78:	fb02 c303 	mla	r3, r2, r3, ip
 8018b7c:	6033      	str	r3, [r6, #0]
 8018b7e:	6803      	ldr	r3, [r0, #0]
 8018b80:	b10b      	cbz	r3, 8018b86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018b82:	3302      	adds	r3, #2
 8018b84:	6003      	str	r3, [r0, #0]
 8018b86:	680b      	ldr	r3, [r1, #0]
 8018b88:	b10b      	cbz	r3, 8018b8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018b8a:	3301      	adds	r3, #1
 8018b8c:	600b      	str	r3, [r1, #0]
 8018b8e:	6803      	ldr	r3, [r0, #0]
 8018b90:	b10b      	cbz	r3, 8018b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018b92:	881c      	ldrh	r4, [r3, #0]
 8018b94:	e7e9      	b.n	8018b6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018b96:	680c      	ldr	r4, [r1, #0]
 8018b98:	2c00      	cmp	r4, #0
 8018b9a:	d0e6      	beq.n	8018b6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018b9c:	7824      	ldrb	r4, [r4, #0]
 8018b9e:	e7e4      	b.n	8018b6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018ba0:	680b      	ldr	r3, [r1, #0]
 8018ba2:	b10b      	cbz	r3, 8018ba8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018ba4:	781b      	ldrb	r3, [r3, #0]
 8018ba6:	e7c5      	b.n	8018b34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018ba8:	2200      	movs	r2, #0
 8018baa:	602a      	str	r2, [r5, #0]
 8018bac:	240a      	movs	r4, #10
 8018bae:	3b30      	subs	r3, #48	; 0x30
 8018bb0:	b29e      	uxth	r6, r3
 8018bb2:	2e09      	cmp	r6, #9
 8018bb4:	682a      	ldr	r2, [r5, #0]
 8018bb6:	d813      	bhi.n	8018be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018bb8:	fb04 3302 	mla	r3, r4, r2, r3
 8018bbc:	602b      	str	r3, [r5, #0]
 8018bbe:	6803      	ldr	r3, [r0, #0]
 8018bc0:	b10b      	cbz	r3, 8018bc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018bc2:	3302      	adds	r3, #2
 8018bc4:	6003      	str	r3, [r0, #0]
 8018bc6:	680b      	ldr	r3, [r1, #0]
 8018bc8:	b10b      	cbz	r3, 8018bce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018bca:	3301      	adds	r3, #1
 8018bcc:	600b      	str	r3, [r1, #0]
 8018bce:	6803      	ldr	r3, [r0, #0]
 8018bd0:	b10b      	cbz	r3, 8018bd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018bd2:	881b      	ldrh	r3, [r3, #0]
 8018bd4:	e7eb      	b.n	8018bae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018bd6:	680b      	ldr	r3, [r1, #0]
 8018bd8:	2b00      	cmp	r3, #0
 8018bda:	d0e8      	beq.n	8018bae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018bdc:	781b      	ldrb	r3, [r3, #0]
 8018bde:	e7e6      	b.n	8018bae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018be0:	2a06      	cmp	r2, #6
 8018be2:	bfa8      	it	ge
 8018be4:	2206      	movge	r2, #6
 8018be6:	602a      	str	r2, [r5, #0]
 8018be8:	e7b1      	b.n	8018b4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018bea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018bea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bee:	b0a3      	sub	sp, #140	; 0x8c
 8018bf0:	2600      	movs	r6, #0
 8018bf2:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018bf6:	4607      	mov	r7, r0
 8018bf8:	4688      	mov	r8, r1
 8018bfa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018bfe:	4631      	mov	r1, r6
 8018c00:	2242      	movs	r2, #66	; 0x42
 8018c02:	4648      	mov	r0, r9
 8018c04:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018c06:	960d      	str	r6, [sp, #52]	; 0x34
 8018c08:	f012 f955 	bl	802aeb6 <memset>
 8018c0c:	b15f      	cbz	r7, 8018c26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018c0e:	f108 3aff 	add.w	sl, r8, #4294967295
 8018c12:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018c14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018c16:	b152      	cbz	r2, 8018c2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018c18:	8812      	ldrh	r2, [r2, #0]
 8018c1a:	b10a      	cbz	r2, 8018c20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018c1c:	459a      	cmp	sl, r3
 8018c1e:	dc2e      	bgt.n	8018c7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018c20:	2200      	movs	r2, #0
 8018c22:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018c26:	4638      	mov	r0, r7
 8018c28:	b023      	add	sp, #140	; 0x8c
 8018c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c2e:	9a08      	ldr	r2, [sp, #32]
 8018c30:	2a00      	cmp	r2, #0
 8018c32:	d0f5      	beq.n	8018c20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018c34:	7812      	ldrb	r2, [r2, #0]
 8018c36:	e7f0      	b.n	8018c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018c38:	2d00      	cmp	r5, #0
 8018c3a:	d0ea      	beq.n	8018c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018c3c:	782a      	ldrb	r2, [r5, #0]
 8018c3e:	b142      	cbz	r2, 8018c52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018c40:	2a25      	cmp	r2, #37	; 0x25
 8018c42:	d001      	beq.n	8018c48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018c44:	459a      	cmp	sl, r3
 8018c46:	dc08      	bgt.n	8018c5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018c48:	f1bb 0f00 	cmp.w	fp, #0
 8018c4c:	d121      	bne.n	8018c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018c4e:	2d00      	cmp	r5, #0
 8018c50:	d0df      	beq.n	8018c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018c52:	782a      	ldrb	r2, [r5, #0]
 8018c54:	f04f 0b00 	mov.w	fp, #0
 8018c58:	e01d      	b.n	8018c96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018c5a:	f1bb 0f00 	cmp.w	fp, #0
 8018c5e:	d078      	beq.n	8018d52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018c60:	f8bb 2000 	ldrh.w	r2, [fp]
 8018c64:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018c68:	f1bb 0f00 	cmp.w	fp, #0
 8018c6c:	d002      	beq.n	8018c74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8018c6e:	f10b 0202 	add.w	r2, fp, #2
 8018c72:	9209      	str	r2, [sp, #36]	; 0x24
 8018c74:	b10d      	cbz	r5, 8018c7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018c76:	3501      	adds	r5, #1
 8018c78:	9508      	str	r5, [sp, #32]
 8018c7a:	3301      	adds	r3, #1
 8018c7c:	930d      	str	r3, [sp, #52]	; 0x34
 8018c7e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018c82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018c84:	f1bb 0f00 	cmp.w	fp, #0
 8018c88:	d0d6      	beq.n	8018c38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018c8a:	f8bb 2000 	ldrh.w	r2, [fp]
 8018c8e:	2a00      	cmp	r2, #0
 8018c90:	d1d6      	bne.n	8018c40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018c92:	f8bb 2000 	ldrh.w	r2, [fp]
 8018c96:	2a00      	cmp	r2, #0
 8018c98:	d0bb      	beq.n	8018c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018c9a:	459a      	cmp	sl, r3
 8018c9c:	ddb9      	ble.n	8018c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018c9e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018ca2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018ca6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8018caa:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8018cae:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018cb2:	960e      	str	r6, [sp, #56]	; 0x38
 8018cb4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018cb8:	960f      	str	r6, [sp, #60]	; 0x3c
 8018cba:	f1bb 0f00 	cmp.w	fp, #0
 8018cbe:	d002      	beq.n	8018cc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018cc0:	f10b 0302 	add.w	r3, fp, #2
 8018cc4:	9309      	str	r3, [sp, #36]	; 0x24
 8018cc6:	b10d      	cbz	r5, 8018ccc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018cc8:	1c6b      	adds	r3, r5, #1
 8018cca:	9308      	str	r3, [sp, #32]
 8018ccc:	ab0f      	add	r3, sp, #60	; 0x3c
 8018cce:	9305      	str	r3, [sp, #20]
 8018cd0:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018cd4:	9304      	str	r3, [sp, #16]
 8018cd6:	ab0e      	add	r3, sp, #56	; 0x38
 8018cd8:	9303      	str	r3, [sp, #12]
 8018cda:	ab0c      	add	r3, sp, #48	; 0x30
 8018cdc:	9302      	str	r3, [sp, #8]
 8018cde:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018ce2:	9301      	str	r3, [sp, #4]
 8018ce4:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018ce8:	9300      	str	r3, [sp, #0]
 8018cea:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018cee:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018cf2:	a908      	add	r1, sp, #32
 8018cf4:	a809      	add	r0, sp, #36	; 0x24
 8018cf6:	f7ff fea8 	bl	8018a4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018cfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018cfc:	2b00      	cmp	r3, #0
 8018cfe:	bfbe      	ittt	lt
 8018d00:	6823      	ldrlt	r3, [r4, #0]
 8018d02:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018d06:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018d08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018d0a:	bfb8      	it	lt
 8018d0c:	3404      	addlt	r4, #4
 8018d0e:	2b00      	cmp	r3, #0
 8018d10:	bfb8      	it	lt
 8018d12:	6823      	ldrlt	r3, [r4, #0]
 8018d14:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018d18:	bfbe      	ittt	lt
 8018d1a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018d1e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018d20:	3404      	addlt	r4, #4
 8018d22:	b1d9      	cbz	r1, 8018d5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018d24:	880b      	ldrh	r3, [r1, #0]
 8018d26:	2b69      	cmp	r3, #105	; 0x69
 8018d28:	d01f      	beq.n	8018d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018d2a:	d82f      	bhi.n	8018d8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018d2c:	2b58      	cmp	r3, #88	; 0x58
 8018d2e:	d01c      	beq.n	8018d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018d30:	d818      	bhi.n	8018d64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018d32:	2b25      	cmp	r3, #37	; 0x25
 8018d34:	d034      	beq.n	8018da0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018d36:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018d3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018d3c:	f1bb 0f00 	cmp.w	fp, #0
 8018d40:	f000 80b8 	beq.w	8018eb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018d44:	f8bb 5000 	ldrh.w	r5, [fp]
 8018d48:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018d4c:	3301      	adds	r3, #1
 8018d4e:	930d      	str	r3, [sp, #52]	; 0x34
 8018d50:	e029      	b.n	8018da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018d52:	b10d      	cbz	r5, 8018d58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018d54:	782a      	ldrb	r2, [r5, #0]
 8018d56:	e785      	b.n	8018c64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018d58:	462a      	mov	r2, r5
 8018d5a:	e783      	b.n	8018c64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018d5c:	2a00      	cmp	r2, #0
 8018d5e:	d0ea      	beq.n	8018d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018d60:	7813      	ldrb	r3, [r2, #0]
 8018d62:	e7e0      	b.n	8018d26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8018d64:	3b63      	subs	r3, #99	; 0x63
 8018d66:	2b01      	cmp	r3, #1
 8018d68:	d8e5      	bhi.n	8018d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018d6a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018d6e:	b329      	cbz	r1, 8018dbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018d70:	880b      	ldrh	r3, [r1, #0]
 8018d72:	2b69      	cmp	r3, #105	; 0x69
 8018d74:	d063      	beq.n	8018e3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018d76:	d825      	bhi.n	8018dc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018d78:	2b63      	cmp	r3, #99	; 0x63
 8018d7a:	d038      	beq.n	8018dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018d7c:	2b64      	cmp	r3, #100	; 0x64
 8018d7e:	d05e      	beq.n	8018e3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018d80:	2b58      	cmp	r3, #88	; 0x58
 8018d82:	d07b      	beq.n	8018e7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018d84:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018d88:	4625      	mov	r5, r4
 8018d8a:	e036      	b.n	8018dfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018d8c:	2b73      	cmp	r3, #115	; 0x73
 8018d8e:	d0ec      	beq.n	8018d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018d90:	d802      	bhi.n	8018d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018d92:	2b6f      	cmp	r3, #111	; 0x6f
 8018d94:	d1cf      	bne.n	8018d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018d96:	e7e8      	b.n	8018d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018d98:	2b75      	cmp	r3, #117	; 0x75
 8018d9a:	d0e6      	beq.n	8018d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018d9c:	2b78      	cmp	r3, #120	; 0x78
 8018d9e:	e7f9      	b.n	8018d94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018da0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018da2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018da6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018da8:	b10b      	cbz	r3, 8018dae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018daa:	3302      	adds	r3, #2
 8018dac:	9309      	str	r3, [sp, #36]	; 0x24
 8018dae:	9b08      	ldr	r3, [sp, #32]
 8018db0:	2b00      	cmp	r3, #0
 8018db2:	f43f af2e 	beq.w	8018c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018db6:	3301      	adds	r3, #1
 8018db8:	9308      	str	r3, [sp, #32]
 8018dba:	e72a      	b.n	8018c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018dbc:	2a00      	cmp	r2, #0
 8018dbe:	d0e1      	beq.n	8018d84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018dc0:	7813      	ldrb	r3, [r2, #0]
 8018dc2:	e7d6      	b.n	8018d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018dc4:	2b73      	cmp	r3, #115	; 0x73
 8018dc6:	d036      	beq.n	8018e36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018dc8:	d807      	bhi.n	8018dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018dca:	2b6f      	cmp	r3, #111	; 0x6f
 8018dcc:	d1da      	bne.n	8018d84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018dce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018dd0:	1d25      	adds	r5, r4, #4
 8018dd2:	eba8 0202 	sub.w	r2, r8, r2
 8018dd6:	2308      	movs	r3, #8
 8018dd8:	e04a      	b.n	8018e70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018dda:	2b75      	cmp	r3, #117	; 0x75
 8018ddc:	d043      	beq.n	8018e66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018dde:	2b78      	cmp	r3, #120	; 0x78
 8018de0:	d1d0      	bne.n	8018d84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018de2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018de4:	1d25      	adds	r5, r4, #4
 8018de6:	eba8 0202 	sub.w	r2, r8, r2
 8018dea:	2310      	movs	r3, #16
 8018dec:	e040      	b.n	8018e70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018dee:	6823      	ldr	r3, [r4, #0]
 8018df0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018df4:	1d25      	adds	r5, r4, #4
 8018df6:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018dfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018dfc:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018e00:	2b00      	cmp	r3, #0
 8018e02:	d052      	beq.n	8018eaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018e04:	881a      	ldrh	r2, [r3, #0]
 8018e06:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018e0a:	a80d      	add	r0, sp, #52	; 0x34
 8018e0c:	9005      	str	r0, [sp, #20]
 8018e0e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018e12:	9004      	str	r0, [sp, #16]
 8018e14:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018e16:	9003      	str	r0, [sp, #12]
 8018e18:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018e1c:	9002      	str	r0, [sp, #8]
 8018e1e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018e20:	9001      	str	r0, [sp, #4]
 8018e22:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018e26:	9000      	str	r0, [sp, #0]
 8018e28:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018e2c:	a810      	add	r0, sp, #64	; 0x40
 8018e2e:	f7ff fd49 	bl	80188c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018e32:	462c      	mov	r4, r5
 8018e34:	e7b7      	b.n	8018da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018e36:	6823      	ldr	r3, [r4, #0]
 8018e38:	1d25      	adds	r5, r4, #4
 8018e3a:	9310      	str	r3, [sp, #64]	; 0x40
 8018e3c:	e7dd      	b.n	8018dfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018e3e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018e40:	6820      	ldr	r0, [r4, #0]
 8018e42:	eba8 0202 	sub.w	r2, r8, r2
 8018e46:	230a      	movs	r3, #10
 8018e48:	b292      	uxth	r2, r2
 8018e4a:	4649      	mov	r1, r9
 8018e4c:	f7ff fce4 	bl	8018818 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018e50:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018e54:	2b2d      	cmp	r3, #45	; 0x2d
 8018e56:	f104 0504 	add.w	r5, r4, #4
 8018e5a:	d1ce      	bne.n	8018dfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018e5c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018e60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e62:	3302      	adds	r3, #2
 8018e64:	e7e9      	b.n	8018e3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8018e66:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018e68:	1d25      	adds	r5, r4, #4
 8018e6a:	eba8 0202 	sub.w	r2, r8, r2
 8018e6e:	230a      	movs	r3, #10
 8018e70:	b292      	uxth	r2, r2
 8018e72:	4649      	mov	r1, r9
 8018e74:	6820      	ldr	r0, [r4, #0]
 8018e76:	f7ff fcfb 	bl	8018870 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018e7a:	e7be      	b.n	8018dfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018e7c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018e7e:	6820      	ldr	r0, [r4, #0]
 8018e80:	eba8 0202 	sub.w	r2, r8, r2
 8018e84:	b292      	uxth	r2, r2
 8018e86:	2310      	movs	r3, #16
 8018e88:	4649      	mov	r1, r9
 8018e8a:	f7ff fcf1 	bl	8018870 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018e8e:	1d25      	adds	r5, r4, #4
 8018e90:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8018e94:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018e98:	2b00      	cmp	r3, #0
 8018e9a:	d0ae      	beq.n	8018dfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018e9c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018ea0:	2919      	cmp	r1, #25
 8018ea2:	d8f7      	bhi.n	8018e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018ea4:	3b20      	subs	r3, #32
 8018ea6:	8013      	strh	r3, [r2, #0]
 8018ea8:	e7f4      	b.n	8018e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018eaa:	9a08      	ldr	r2, [sp, #32]
 8018eac:	2a00      	cmp	r2, #0
 8018eae:	d0aa      	beq.n	8018e06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018eb0:	7812      	ldrb	r2, [r2, #0]
 8018eb2:	e7a8      	b.n	8018e06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018eb4:	2d00      	cmp	r5, #0
 8018eb6:	f43f af47 	beq.w	8018d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018eba:	782d      	ldrb	r5, [r5, #0]
 8018ebc:	e744      	b.n	8018d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018ebe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8018ebe:	b507      	push	{r0, r1, r2, lr}
 8018ec0:	9300      	str	r3, [sp, #0]
 8018ec2:	4613      	mov	r3, r2
 8018ec4:	2200      	movs	r2, #0
 8018ec6:	f7ff fe90 	bl	8018bea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8018eca:	b003      	add	sp, #12
 8018ecc:	f85d fb04 	ldr.w	pc, [sp], #4

08018ed0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018ed0:	b40c      	push	{r2, r3}
 8018ed2:	b507      	push	{r0, r1, r2, lr}
 8018ed4:	ab04      	add	r3, sp, #16
 8018ed6:	f853 2b04 	ldr.w	r2, [r3], #4
 8018eda:	9301      	str	r3, [sp, #4]
 8018edc:	f7ff ffef 	bl	8018ebe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018ee0:	b003      	add	sp, #12
 8018ee2:	f85d eb04 	ldr.w	lr, [sp], #4
 8018ee6:	b002      	add	sp, #8
 8018ee8:	4770      	bx	lr
	...

08018eec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8018eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ef0:	b0c5      	sub	sp, #276	; 0x114
 8018ef2:	2400      	movs	r4, #0
 8018ef4:	af11      	add	r7, sp, #68	; 0x44
 8018ef6:	4606      	mov	r6, r0
 8018ef8:	468a      	mov	sl, r1
 8018efa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018efe:	4621      	mov	r1, r4
 8018f00:	22c8      	movs	r2, #200	; 0xc8
 8018f02:	4638      	mov	r0, r7
 8018f04:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8018f08:	940d      	str	r4, [sp, #52]	; 0x34
 8018f0a:	f011 ffd4 	bl	802aeb6 <memset>
 8018f0e:	b16e      	cbz	r6, 8018f2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8018f10:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 80191b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8018f14:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018f16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018f18:	b162      	cbz	r2, 8018f34 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8018f1a:	8812      	ldrh	r2, [r2, #0]
 8018f1c:	b11a      	cbz	r2, 8018f26 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8018f1e:	f10a 31ff 	add.w	r1, sl, #4294967295
 8018f22:	4299      	cmp	r1, r3
 8018f24:	dc2e      	bgt.n	8018f84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8018f26:	2200      	movs	r2, #0
 8018f28:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018f2c:	4630      	mov	r0, r6
 8018f2e:	b045      	add	sp, #276	; 0x114
 8018f30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f34:	9a08      	ldr	r2, [sp, #32]
 8018f36:	2a00      	cmp	r2, #0
 8018f38:	d0f5      	beq.n	8018f26 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8018f3a:	7812      	ldrb	r2, [r2, #0]
 8018f3c:	e7ee      	b.n	8018f1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8018f3e:	2d00      	cmp	r5, #0
 8018f40:	d0e8      	beq.n	8018f14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018f42:	782a      	ldrb	r2, [r5, #0]
 8018f44:	b142      	cbz	r2, 8018f58 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8018f46:	2a25      	cmp	r2, #37	; 0x25
 8018f48:	d001      	beq.n	8018f4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8018f4a:	4299      	cmp	r1, r3
 8018f4c:	dc08      	bgt.n	8018f60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8018f4e:	f1b8 0f00 	cmp.w	r8, #0
 8018f52:	d121      	bne.n	8018f98 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8018f54:	2d00      	cmp	r5, #0
 8018f56:	d0dd      	beq.n	8018f14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018f58:	782a      	ldrb	r2, [r5, #0]
 8018f5a:	f04f 0800 	mov.w	r8, #0
 8018f5e:	e01d      	b.n	8018f9c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8018f60:	f1b8 0f00 	cmp.w	r8, #0
 8018f64:	d07f      	beq.n	8019066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8018f66:	f8b8 2000 	ldrh.w	r2, [r8]
 8018f6a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018f6e:	f1b8 0f00 	cmp.w	r8, #0
 8018f72:	d002      	beq.n	8018f7a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8018f74:	f108 0202 	add.w	r2, r8, #2
 8018f78:	9209      	str	r2, [sp, #36]	; 0x24
 8018f7a:	b10d      	cbz	r5, 8018f80 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8018f7c:	3501      	adds	r5, #1
 8018f7e:	9508      	str	r5, [sp, #32]
 8018f80:	3301      	adds	r3, #1
 8018f82:	930d      	str	r3, [sp, #52]	; 0x34
 8018f84:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8018f88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018f8a:	f1b8 0f00 	cmp.w	r8, #0
 8018f8e:	d0d6      	beq.n	8018f3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8018f90:	f8b8 2000 	ldrh.w	r2, [r8]
 8018f94:	2a00      	cmp	r2, #0
 8018f96:	d1d6      	bne.n	8018f46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8018f98:	f8b8 2000 	ldrh.w	r2, [r8]
 8018f9c:	2a00      	cmp	r2, #0
 8018f9e:	d0b9      	beq.n	8018f14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018fa0:	4299      	cmp	r1, r3
 8018fa2:	ddb7      	ble.n	8018f14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018fa4:	2300      	movs	r3, #0
 8018fa6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018faa:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8018fae:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8018fb2:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8018fb6:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8018fba:	930e      	str	r3, [sp, #56]	; 0x38
 8018fbc:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018fc0:	930f      	str	r3, [sp, #60]	; 0x3c
 8018fc2:	f1b8 0f00 	cmp.w	r8, #0
 8018fc6:	d002      	beq.n	8018fce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018fc8:	f108 0302 	add.w	r3, r8, #2
 8018fcc:	9309      	str	r3, [sp, #36]	; 0x24
 8018fce:	b10d      	cbz	r5, 8018fd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8018fd0:	1c6b      	adds	r3, r5, #1
 8018fd2:	9308      	str	r3, [sp, #32]
 8018fd4:	ab0f      	add	r3, sp, #60	; 0x3c
 8018fd6:	9305      	str	r3, [sp, #20]
 8018fd8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018fdc:	9304      	str	r3, [sp, #16]
 8018fde:	ab0e      	add	r3, sp, #56	; 0x38
 8018fe0:	9303      	str	r3, [sp, #12]
 8018fe2:	ab0c      	add	r3, sp, #48	; 0x30
 8018fe4:	9302      	str	r3, [sp, #8]
 8018fe6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018fea:	9301      	str	r3, [sp, #4]
 8018fec:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018ff0:	9300      	str	r3, [sp, #0]
 8018ff2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018ff6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018ffa:	a908      	add	r1, sp, #32
 8018ffc:	a809      	add	r0, sp, #36	; 0x24
 8018ffe:	f7ff fd24 	bl	8018a4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019002:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019004:	2b00      	cmp	r3, #0
 8019006:	da0b      	bge.n	8019020 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8019008:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801900c:	edd3 7a00 	vldr	s15, [r3]
 8019010:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019014:	3401      	adds	r4, #1
 8019016:	ee17 3a90 	vmov	r3, s15
 801901a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801901e:	930e      	str	r3, [sp, #56]	; 0x38
 8019020:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019022:	2b00      	cmp	r3, #0
 8019024:	da0b      	bge.n	801903e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8019026:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801902a:	edd3 7a00 	vldr	s15, [r3]
 801902e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019032:	3401      	adds	r4, #1
 8019034:	ee17 3a90 	vmov	r3, s15
 8019038:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801903c:	930f      	str	r3, [sp, #60]	; 0x3c
 801903e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019040:	b1b3      	cbz	r3, 8019070 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8019042:	881a      	ldrh	r2, [r3, #0]
 8019044:	2a25      	cmp	r2, #37	; 0x25
 8019046:	d018      	beq.n	801907a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8019048:	2a66      	cmp	r2, #102	; 0x66
 801904a:	d01c      	beq.n	8019086 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801904c:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8019050:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019052:	f1b8 0f00 	cmp.w	r8, #0
 8019056:	f000 8121 	beq.w	801929c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801905a:	f8b8 5000 	ldrh.w	r5, [r8]
 801905e:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8019062:	3301      	adds	r3, #1
 8019064:	e00d      	b.n	8019082 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8019066:	b10d      	cbz	r5, 801906c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8019068:	782a      	ldrb	r2, [r5, #0]
 801906a:	e77e      	b.n	8018f6a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801906c:	462a      	mov	r2, r5
 801906e:	e77c      	b.n	8018f6a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019070:	9b08      	ldr	r3, [sp, #32]
 8019072:	2b00      	cmp	r3, #0
 8019074:	d0ea      	beq.n	801904c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019076:	781a      	ldrb	r2, [r3, #0]
 8019078:	e7e4      	b.n	8019044 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801907a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801907c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019080:	3302      	adds	r3, #2
 8019082:	930d      	str	r3, [sp, #52]	; 0x34
 8019084:	e041      	b.n	801910a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8019086:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801908a:	edd3 7a00 	vldr	s15, [r3]
 801908e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019092:	9710      	str	r7, [sp, #64]	; 0x40
 8019094:	3401      	adds	r4, #1
 8019096:	b923      	cbnz	r3, 80190a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8019098:	2301      	movs	r3, #1
 801909a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801909e:	2306      	movs	r3, #6
 80190a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80190a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80190a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190aa:	bf48      	it	mi
 80190ac:	eef1 7a67 	vnegmi.f32	s15, s15
 80190b0:	eeb0 7ae7 	vabs.f32	s14, s15
 80190b4:	bf48      	it	mi
 80190b6:	232d      	movmi	r3, #45	; 0x2d
 80190b8:	eeb4 7a45 	vcmp.f32	s14, s10
 80190bc:	bf48      	it	mi
 80190be:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 80190c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190c6:	dd2b      	ble.n	8019120 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 80190c8:	4b3b      	ldr	r3, [pc, #236]	; (80191b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 80190ca:	9311      	str	r3, [sp, #68]	; 0x44
 80190cc:	2366      	movs	r3, #102	; 0x66
 80190ce:	9312      	str	r3, [sp, #72]	; 0x48
 80190d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80190d2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80190d6:	2b00      	cmp	r3, #0
 80190d8:	f000 80da 	beq.w	8019290 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 80190dc:	881a      	ldrh	r2, [r3, #0]
 80190de:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80190e2:	a80d      	add	r0, sp, #52	; 0x34
 80190e4:	9005      	str	r0, [sp, #20]
 80190e6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80190ea:	9004      	str	r0, [sp, #16]
 80190ec:	980e      	ldr	r0, [sp, #56]	; 0x38
 80190ee:	9003      	str	r0, [sp, #12]
 80190f0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80190f4:	9002      	str	r0, [sp, #8]
 80190f6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80190f8:	9001      	str	r0, [sp, #4]
 80190fa:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80190fe:	9000      	str	r0, [sp, #0]
 8019100:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019104:	a810      	add	r0, sp, #64	; 0x40
 8019106:	f7ff fbdd 	bl	80188c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801910a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801910c:	b10b      	cbz	r3, 8019112 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801910e:	3302      	adds	r3, #2
 8019110:	9309      	str	r3, [sp, #36]	; 0x24
 8019112:	9b08      	ldr	r3, [sp, #32]
 8019114:	2b00      	cmp	r3, #0
 8019116:	f43f aefd 	beq.w	8018f14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801911a:	3301      	adds	r3, #1
 801911c:	9308      	str	r3, [sp, #32]
 801911e:	e6f9      	b.n	8018f14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019120:	eef4 7a67 	vcmp.f32	s15, s15
 8019124:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019128:	d63a      	bvs.n	80191a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801912a:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801912e:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8019132:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8019136:	eeb0 6a67 	vmov.f32	s12, s15
 801913a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801913e:	eef0 5a47 	vmov.f32	s11, s14
 8019142:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801914a:	da2d      	bge.n	80191a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801914c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801914e:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019152:	2100      	movs	r1, #0
 8019154:	eef0 4a46 	vmov.f32	s9, s12
 8019158:	ebaa 0202 	sub.w	r2, sl, r2
 801915c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019160:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019164:	b28d      	uxth	r5, r1
 8019166:	db2c      	blt.n	80191c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019168:	1a53      	subs	r3, r2, r1
 801916a:	2b00      	cmp	r3, #0
 801916c:	dd29      	ble.n	80191c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801916e:	3101      	adds	r1, #1
 8019170:	2964      	cmp	r1, #100	; 0x64
 8019172:	d025      	beq.n	80191c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019174:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019178:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801917c:	ee17 3a10 	vmov	r3, s14
 8019180:	2b09      	cmp	r3, #9
 8019182:	bfa8      	it	ge
 8019184:	2309      	movge	r3, #9
 8019186:	ee07 3a10 	vmov	s14, r3
 801918a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801918e:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019192:	eee7 7a66 	vfms.f32	s15, s14, s13
 8019196:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801919a:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801919e:	e7dd      	b.n	801915c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80191a0:	4b06      	ldr	r3, [pc, #24]	; (80191bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80191a2:	9311      	str	r3, [sp, #68]	; 0x44
 80191a4:	236e      	movs	r3, #110	; 0x6e
 80191a6:	e792      	b.n	80190ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80191a8:	ee66 6a87 	vmul.f32	s13, s13, s14
 80191ac:	ee86 6a07 	vdiv.f32	s12, s12, s14
 80191b0:	e7c7      	b.n	8019142 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 80191b2:	bf00      	nop
 80191b4:	7f7fffff 	.word	0x7f7fffff
 80191b8:	006e0069 	.word	0x006e0069
 80191bc:	0061006e 	.word	0x0061006e
 80191c0:	2563      	movs	r5, #99	; 0x63
 80191c2:	2a63      	cmp	r2, #99	; 0x63
 80191c4:	bfd4      	ite	le
 80191c6:	ebc5 0202 	rsble	r2, r5, r2
 80191ca:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 80191ce:	2a00      	cmp	r2, #0
 80191d0:	dd43      	ble.n	801925a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80191d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80191d4:	2b00      	cmp	r3, #0
 80191d6:	dd40      	ble.n	801925a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80191d8:	f04f 0901 	mov.w	r9, #1
 80191dc:	210a      	movs	r1, #10
 80191de:	f113 33ff 	adds.w	r3, r3, #4294967295
 80191e2:	d30c      	bcc.n	80191fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 80191e4:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80191e8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80191ec:	ee17 0a10 	vmov	r0, s14
 80191f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80191f4:	fb01 0909 	mla	r9, r1, r9, r0
 80191f8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80191fc:	e7ef      	b.n	80191de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 80191fe:	3501      	adds	r5, #1
 8019200:	930f      	str	r3, [sp, #60]	; 0x3c
 8019202:	b292      	uxth	r2, r2
 8019204:	230a      	movs	r3, #10
 8019206:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801920a:	4648      	mov	r0, r9
 801920c:	f7ff fb4e 	bl	80188ac <_ZN8touchgfx7Unicode4itoaElPtti>
 8019210:	f1b9 0f01 	cmp.w	r9, #1
 8019214:	dc1f      	bgt.n	8019256 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8019216:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801921a:	2b00      	cmp	r3, #0
 801921c:	bf0c      	ite	eq
 801921e:	2300      	moveq	r3, #0
 8019220:	232e      	movne	r3, #46	; 0x2e
 8019222:	aa44      	add	r2, sp, #272	; 0x110
 8019224:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019228:	eef4 7ae4 	vcmpe.f32	s15, s9
 801922c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019230:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8019234:	f6ff af4c 	blt.w	80190d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019238:	2300      	movs	r3, #0
 801923a:	f838 2b02 	ldrh.w	r2, [r8], #2
 801923e:	1c59      	adds	r1, r3, #1
 8019240:	b98a      	cbnz	r2, 8019266 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8019242:	b29b      	uxth	r3, r3
 8019244:	2130      	movs	r1, #48	; 0x30
 8019246:	b983      	cbnz	r3, 801926a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8019248:	2331      	movs	r3, #49	; 0x31
 801924a:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801924e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019250:	3b02      	subs	r3, #2
 8019252:	9310      	str	r3, [sp, #64]	; 0x40
 8019254:	e73c      	b.n	80190d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019256:	232e      	movs	r3, #46	; 0x2e
 8019258:	e7e3      	b.n	8019222 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801925a:	ab44      	add	r3, sp, #272	; 0x110
 801925c:	3501      	adds	r5, #1
 801925e:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019262:	2300      	movs	r3, #0
 8019264:	e7e0      	b.n	8019228 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019266:	460b      	mov	r3, r1
 8019268:	e7e7      	b.n	801923a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801926a:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801926e:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019272:	2808      	cmp	r0, #8
 8019274:	d806      	bhi.n	8019284 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019276:	a944      	add	r1, sp, #272	; 0x110
 8019278:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801927c:	3201      	adds	r2, #1
 801927e:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019282:	e725      	b.n	80190d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019284:	2a39      	cmp	r2, #57	; 0x39
 8019286:	bf08      	it	eq
 8019288:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801928c:	3b01      	subs	r3, #1
 801928e:	e7da      	b.n	8019246 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019290:	9a08      	ldr	r2, [sp, #32]
 8019292:	2a00      	cmp	r2, #0
 8019294:	f43f af23 	beq.w	80190de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019298:	7812      	ldrb	r2, [r2, #0]
 801929a:	e720      	b.n	80190de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801929c:	2d00      	cmp	r5, #0
 801929e:	f43f aede 	beq.w	801905e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80192a2:	782d      	ldrb	r5, [r5, #0]
 80192a4:	e6db      	b.n	801905e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80192a6:	bf00      	nop

080192a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80192a8:	b507      	push	{r0, r1, r2, lr}
 80192aa:	9300      	str	r3, [sp, #0]
 80192ac:	4613      	mov	r3, r2
 80192ae:	2200      	movs	r2, #0
 80192b0:	f7ff fe1c 	bl	8018eec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80192b4:	b003      	add	sp, #12
 80192b6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080192bc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80192bc:	4b01      	ldr	r3, [pc, #4]	; (80192c4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80192be:	6018      	str	r0, [r3, #0]
 80192c0:	4770      	bx	lr
 80192c2:	bf00      	nop
 80192c4:	20012e0c 	.word	0x20012e0c

080192c8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80192c8:	4b06      	ldr	r3, [pc, #24]	; (80192e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80192ca:	881a      	ldrh	r2, [r3, #0]
 80192cc:	4282      	cmp	r2, r0
 80192ce:	d807      	bhi.n	80192e0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80192d0:	4b05      	ldr	r3, [pc, #20]	; (80192e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80192d2:	881b      	ldrh	r3, [r3, #0]
 80192d4:	4413      	add	r3, r2
 80192d6:	4298      	cmp	r0, r3
 80192d8:	bfac      	ite	ge
 80192da:	2000      	movge	r0, #0
 80192dc:	2001      	movlt	r0, #1
 80192de:	4770      	bx	lr
 80192e0:	2000      	movs	r0, #0
 80192e2:	4770      	bx	lr
 80192e4:	20012e2c 	.word	0x20012e2c
 80192e8:	20012e30 	.word	0x20012e30

080192ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80192ec:	b508      	push	{r3, lr}
 80192ee:	4601      	mov	r1, r0
 80192f0:	f7ff ffea 	bl	80192c8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80192f4:	b118      	cbz	r0, 80192fe <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80192f6:	4b02      	ldr	r3, [pc, #8]	; (8019300 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80192f8:	681b      	ldr	r3, [r3, #0]
 80192fa:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80192fe:	bd08      	pop	{r3, pc}
 8019300:	20012e10 	.word	0x20012e10

08019304 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019306:	4c24      	ldr	r4, [pc, #144]	; (8019398 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019308:	6823      	ldr	r3, [r4, #0]
 801930a:	2b00      	cmp	r3, #0
 801930c:	d042      	beq.n	8019394 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801930e:	4a23      	ldr	r2, [pc, #140]	; (801939c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8019310:	4d23      	ldr	r5, [pc, #140]	; (80193a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8019312:	8811      	ldrh	r1, [r2, #0]
 8019314:	f8b5 c000 	ldrh.w	ip, [r5]
 8019318:	4822      	ldr	r0, [pc, #136]	; (80193a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801931a:	4461      	add	r1, ip
 801931c:	1c4a      	adds	r2, r1, #1
 801931e:	f022 0201 	bic.w	r2, r2, #1
 8019322:	008f      	lsls	r7, r1, #2
 8019324:	0412      	lsls	r2, r2, #16
 8019326:	19de      	adds	r6, r3, r7
 8019328:	0c12      	lsrs	r2, r2, #16
 801932a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801932e:	6006      	str	r6, [r0, #0]
 8019330:	4e1d      	ldr	r6, [pc, #116]	; (80193a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8019332:	19da      	adds	r2, r3, r7
 8019334:	6032      	str	r2, [r6, #0]
 8019336:	220e      	movs	r2, #14
 8019338:	fb02 f20c 	mul.w	r2, r2, ip
 801933c:	3203      	adds	r2, #3
 801933e:	f022 0203 	bic.w	r2, r2, #3
 8019342:	443a      	add	r2, r7
 8019344:	4f19      	ldr	r7, [pc, #100]	; (80193ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019346:	4413      	add	r3, r2
 8019348:	603b      	str	r3, [r7, #0]
 801934a:	4f19      	ldr	r7, [pc, #100]	; (80193b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801934c:	2300      	movs	r3, #0
 801934e:	803b      	strh	r3, [r7, #0]
 8019350:	4f18      	ldr	r7, [pc, #96]	; (80193b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019352:	683f      	ldr	r7, [r7, #0]
 8019354:	1aba      	subs	r2, r7, r2
 8019356:	4f18      	ldr	r7, [pc, #96]	; (80193b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019358:	603a      	str	r2, [r7, #0]
 801935a:	4a18      	ldr	r2, [pc, #96]	; (80193bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801935c:	469c      	mov	ip, r3
 801935e:	8013      	strh	r3, [r2, #0]
 8019360:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019364:	428b      	cmp	r3, r1
 8019366:	d10d      	bne.n	8019384 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019368:	882d      	ldrh	r5, [r5, #0]
 801936a:	6830      	ldr	r0, [r6, #0]
 801936c:	2300      	movs	r3, #0
 801936e:	240e      	movs	r4, #14
 8019370:	429d      	cmp	r5, r3
 8019372:	d90f      	bls.n	8019394 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019374:	fb04 0203 	mla	r2, r4, r3, r0
 8019378:	3301      	adds	r3, #1
 801937a:	7b11      	ldrb	r1, [r2, #12]
 801937c:	f36f 1145 	bfc	r1, #5, #1
 8019380:	7311      	strb	r1, [r2, #12]
 8019382:	e7f5      	b.n	8019370 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019384:	6822      	ldr	r2, [r4, #0]
 8019386:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801938a:	6802      	ldr	r2, [r0, #0]
 801938c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019390:	3301      	adds	r3, #1
 8019392:	e7e7      	b.n	8019364 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019394:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019396:	bf00      	nop
 8019398:	20012e10 	.word	0x20012e10
 801939c:	20012e2c 	.word	0x20012e2c
 80193a0:	20012e30 	.word	0x20012e30
 80193a4:	20012e24 	.word	0x20012e24
 80193a8:	20012e14 	.word	0x20012e14
 80193ac:	20012e1c 	.word	0x20012e1c
 80193b0:	20012e2e 	.word	0x20012e2e
 80193b4:	20012e18 	.word	0x20012e18
 80193b8:	20012e28 	.word	0x20012e28
 80193bc:	20012e20 	.word	0x20012e20

080193c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80193c0:	4b06      	ldr	r3, [pc, #24]	; (80193dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80193c2:	681b      	ldr	r3, [r3, #0]
 80193c4:	b943      	cbnz	r3, 80193d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80193c6:	b139      	cbz	r1, 80193d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80193c8:	4b05      	ldr	r3, [pc, #20]	; (80193e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80193ca:	801a      	strh	r2, [r3, #0]
 80193cc:	4b05      	ldr	r3, [pc, #20]	; (80193e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80193ce:	6019      	str	r1, [r3, #0]
 80193d0:	4b05      	ldr	r3, [pc, #20]	; (80193e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80193d2:	6018      	str	r0, [r3, #0]
 80193d4:	f7ff bf96 	b.w	8019304 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80193d8:	4770      	bx	lr
 80193da:	bf00      	nop
 80193dc:	20012e1c 	.word	0x20012e1c
 80193e0:	20012e30 	.word	0x20012e30
 80193e4:	20012e18 	.word	0x20012e18
 80193e8:	20012e10 	.word	0x20012e10

080193ec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80193ec:	b470      	push	{r4, r5, r6}
 80193ee:	4c07      	ldr	r4, [pc, #28]	; (801940c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80193f0:	6826      	ldr	r6, [r4, #0]
 80193f2:	4605      	mov	r5, r0
 80193f4:	4610      	mov	r0, r2
 80193f6:	9a03      	ldr	r2, [sp, #12]
 80193f8:	b936      	cbnz	r6, 8019408 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80193fa:	6025      	str	r5, [r4, #0]
 80193fc:	4c04      	ldr	r4, [pc, #16]	; (8019410 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80193fe:	8021      	strh	r1, [r4, #0]
 8019400:	bc70      	pop	{r4, r5, r6}
 8019402:	4619      	mov	r1, r3
 8019404:	f7ff bfdc 	b.w	80193c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8019408:	bc70      	pop	{r4, r5, r6}
 801940a:	4770      	bx	lr
 801940c:	20012e34 	.word	0x20012e34
 8019410:	20012e2c 	.word	0x20012e2c

08019414 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8019414:	4a12      	ldr	r2, [pc, #72]	; (8019460 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8019416:	8803      	ldrh	r3, [r0, #0]
 8019418:	8812      	ldrh	r2, [r2, #0]
 801941a:	4293      	cmp	r3, r2
 801941c:	d207      	bcs.n	801942e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801941e:	4a11      	ldr	r2, [pc, #68]	; (8019464 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8019420:	6812      	ldr	r2, [r2, #0]
 8019422:	2114      	movs	r1, #20
 8019424:	fb01 2303 	mla	r3, r1, r3, r2
 8019428:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801942c:	4770      	bx	lr
 801942e:	490e      	ldr	r1, [pc, #56]	; (8019468 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8019430:	8809      	ldrh	r1, [r1, #0]
 8019432:	4411      	add	r1, r2
 8019434:	428b      	cmp	r3, r1
 8019436:	da04      	bge.n	8019442 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8019438:	1a9b      	subs	r3, r3, r2
 801943a:	4a0c      	ldr	r2, [pc, #48]	; (801946c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801943c:	210e      	movs	r1, #14
 801943e:	6812      	ldr	r2, [r2, #0]
 8019440:	e7f0      	b.n	8019424 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8019442:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019446:	4293      	cmp	r3, r2
 8019448:	d108      	bne.n	801945c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801944a:	4b09      	ldr	r3, [pc, #36]	; (8019470 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801944c:	781b      	ldrb	r3, [r3, #0]
 801944e:	b91b      	cbnz	r3, 8019458 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8019450:	4b08      	ldr	r3, [pc, #32]	; (8019474 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8019452:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019456:	4770      	bx	lr
 8019458:	4b07      	ldr	r3, [pc, #28]	; (8019478 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801945a:	e7fa      	b.n	8019452 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801945c:	2000      	movs	r0, #0
 801945e:	4770      	bx	lr
 8019460:	20012e2c 	.word	0x20012e2c
 8019464:	20012e34 	.word	0x20012e34
 8019468:	20012e30 	.word	0x20012e30
 801946c:	20012e14 	.word	0x20012e14
 8019470:	20012d9c 	.word	0x20012d9c
 8019474:	20012d9e 	.word	0x20012d9e
 8019478:	20012da0 	.word	0x20012da0

0801947c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801947c:	4a12      	ldr	r2, [pc, #72]	; (80194c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801947e:	8803      	ldrh	r3, [r0, #0]
 8019480:	8812      	ldrh	r2, [r2, #0]
 8019482:	4293      	cmp	r3, r2
 8019484:	d207      	bcs.n	8019496 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8019486:	4a11      	ldr	r2, [pc, #68]	; (80194cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8019488:	6812      	ldr	r2, [r2, #0]
 801948a:	2114      	movs	r1, #20
 801948c:	fb01 2303 	mla	r3, r1, r3, r2
 8019490:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019494:	4770      	bx	lr
 8019496:	490e      	ldr	r1, [pc, #56]	; (80194d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8019498:	8809      	ldrh	r1, [r1, #0]
 801949a:	4411      	add	r1, r2
 801949c:	428b      	cmp	r3, r1
 801949e:	da04      	bge.n	80194aa <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80194a0:	1a9b      	subs	r3, r3, r2
 80194a2:	4a0c      	ldr	r2, [pc, #48]	; (80194d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80194a4:	210e      	movs	r1, #14
 80194a6:	6812      	ldr	r2, [r2, #0]
 80194a8:	e7f0      	b.n	801948c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80194aa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80194ae:	4293      	cmp	r3, r2
 80194b0:	d108      	bne.n	80194c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80194b2:	4b09      	ldr	r3, [pc, #36]	; (80194d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80194b4:	781b      	ldrb	r3, [r3, #0]
 80194b6:	b91b      	cbnz	r3, 80194c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80194b8:	4b08      	ldr	r3, [pc, #32]	; (80194dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80194ba:	f9b3 0000 	ldrsh.w	r0, [r3]
 80194be:	4770      	bx	lr
 80194c0:	4b07      	ldr	r3, [pc, #28]	; (80194e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80194c2:	e7fa      	b.n	80194ba <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80194c4:	2000      	movs	r0, #0
 80194c6:	4770      	bx	lr
 80194c8:	20012e2c 	.word	0x20012e2c
 80194cc:	20012e34 	.word	0x20012e34
 80194d0:	20012e30 	.word	0x20012e30
 80194d4:	20012e14 	.word	0x20012e14
 80194d8:	20012d9c 	.word	0x20012d9c
 80194dc:	20012da0 	.word	0x20012da0
 80194e0:	20012d9e 	.word	0x20012d9e

080194e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80194e4:	b510      	push	{r4, lr}
 80194e6:	4a1f      	ldr	r2, [pc, #124]	; (8019564 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80194e8:	880b      	ldrh	r3, [r1, #0]
 80194ea:	8812      	ldrh	r2, [r2, #0]
 80194ec:	4293      	cmp	r3, r2
 80194ee:	d213      	bcs.n	8019518 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80194f0:	4a1d      	ldr	r2, [pc, #116]	; (8019568 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80194f2:	6812      	ldr	r2, [r2, #0]
 80194f4:	2114      	movs	r1, #20
 80194f6:	fb01 2303 	mla	r3, r1, r3, r2
 80194fa:	8a1a      	ldrh	r2, [r3, #16]
 80194fc:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019500:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019504:	8a5b      	ldrh	r3, [r3, #18]
 8019506:	8004      	strh	r4, [r0, #0]
 8019508:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801950c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8019510:	8041      	strh	r1, [r0, #2]
 8019512:	8082      	strh	r2, [r0, #4]
 8019514:	80c3      	strh	r3, [r0, #6]
 8019516:	e00e      	b.n	8019536 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019518:	4914      	ldr	r1, [pc, #80]	; (801956c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801951a:	8809      	ldrh	r1, [r1, #0]
 801951c:	4411      	add	r1, r2
 801951e:	428b      	cmp	r3, r1
 8019520:	da0a      	bge.n	8019538 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8019522:	1a9b      	subs	r3, r3, r2
 8019524:	4a12      	ldr	r2, [pc, #72]	; (8019570 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8019526:	6812      	ldr	r2, [r2, #0]
 8019528:	210e      	movs	r1, #14
 801952a:	fb01 2303 	mla	r3, r1, r3, r2
 801952e:	681a      	ldr	r2, [r3, #0]
 8019530:	6002      	str	r2, [r0, #0]
 8019532:	685a      	ldr	r2, [r3, #4]
 8019534:	6042      	str	r2, [r0, #4]
 8019536:	bd10      	pop	{r4, pc}
 8019538:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801953c:	4293      	cmp	r3, r2
 801953e:	d10b      	bne.n	8019558 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8019540:	4b0c      	ldr	r3, [pc, #48]	; (8019574 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8019542:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019546:	4b0c      	ldr	r3, [pc, #48]	; (8019578 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8019548:	8081      	strh	r1, [r0, #4]
 801954a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801954e:	80c2      	strh	r2, [r0, #6]
 8019550:	2300      	movs	r3, #0
 8019552:	8003      	strh	r3, [r0, #0]
 8019554:	8043      	strh	r3, [r0, #2]
 8019556:	e7ee      	b.n	8019536 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019558:	2300      	movs	r3, #0
 801955a:	8003      	strh	r3, [r0, #0]
 801955c:	8043      	strh	r3, [r0, #2]
 801955e:	8083      	strh	r3, [r0, #4]
 8019560:	e7d8      	b.n	8019514 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019562:	bf00      	nop
 8019564:	20012e2c 	.word	0x20012e2c
 8019568:	20012e34 	.word	0x20012e34
 801956c:	20012e30 	.word	0x20012e30
 8019570:	20012e14 	.word	0x20012e14
 8019574:	20012d98 	.word	0x20012d98
 8019578:	20012d9a 	.word	0x20012d9a

0801957c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801957c:	4a17      	ldr	r2, [pc, #92]	; (80195dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801957e:	8803      	ldrh	r3, [r0, #0]
 8019580:	8812      	ldrh	r2, [r2, #0]
 8019582:	4293      	cmp	r3, r2
 8019584:	d213      	bcs.n	80195ae <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8019586:	4a16      	ldr	r2, [pc, #88]	; (80195e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019588:	6812      	ldr	r2, [r2, #0]
 801958a:	2114      	movs	r1, #20
 801958c:	fb01 2303 	mla	r3, r1, r3, r2
 8019590:	8a1a      	ldrh	r2, [r3, #16]
 8019592:	8919      	ldrh	r1, [r3, #8]
 8019594:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019598:	428a      	cmp	r2, r1
 801959a:	db1d      	blt.n	80195d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801959c:	8a58      	ldrh	r0, [r3, #18]
 801959e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80195a2:	895b      	ldrh	r3, [r3, #10]
 80195a4:	4298      	cmp	r0, r3
 80195a6:	bfac      	ite	ge
 80195a8:	2000      	movge	r0, #0
 80195aa:	2001      	movlt	r0, #1
 80195ac:	4770      	bx	lr
 80195ae:	490d      	ldr	r1, [pc, #52]	; (80195e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80195b0:	8809      	ldrh	r1, [r1, #0]
 80195b2:	4411      	add	r1, r2
 80195b4:	428b      	cmp	r3, r1
 80195b6:	da0d      	bge.n	80195d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80195b8:	1a9b      	subs	r3, r3, r2
 80195ba:	4a0b      	ldr	r2, [pc, #44]	; (80195e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80195bc:	6812      	ldr	r2, [r2, #0]
 80195be:	210e      	movs	r1, #14
 80195c0:	fb01 2303 	mla	r3, r1, r3, r2
 80195c4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80195c8:	891a      	ldrh	r2, [r3, #8]
 80195ca:	4291      	cmp	r1, r2
 80195cc:	db04      	blt.n	80195d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80195ce:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80195d2:	e7e6      	b.n	80195a2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80195d4:	2000      	movs	r0, #0
 80195d6:	4770      	bx	lr
 80195d8:	2001      	movs	r0, #1
 80195da:	4770      	bx	lr
 80195dc:	20012e2c 	.word	0x20012e2c
 80195e0:	20012e34 	.word	0x20012e34
 80195e4:	20012e30 	.word	0x20012e30
 80195e8:	20012e14 	.word	0x20012e14

080195ec <_ZNK8touchgfx6Bitmap7getDataEv>:
 80195ec:	4a12      	ldr	r2, [pc, #72]	; (8019638 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80195ee:	8803      	ldrh	r3, [r0, #0]
 80195f0:	8811      	ldrh	r1, [r2, #0]
 80195f2:	428b      	cmp	r3, r1
 80195f4:	d20b      	bcs.n	801960e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80195f6:	4a11      	ldr	r2, [pc, #68]	; (801963c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80195f8:	6812      	ldr	r2, [r2, #0]
 80195fa:	b112      	cbz	r2, 8019602 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80195fc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019600:	b9c0      	cbnz	r0, 8019634 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8019602:	4a0f      	ldr	r2, [pc, #60]	; (8019640 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019604:	6811      	ldr	r1, [r2, #0]
 8019606:	2214      	movs	r2, #20
 8019608:	4353      	muls	r3, r2
 801960a:	58c8      	ldr	r0, [r1, r3]
 801960c:	4770      	bx	lr
 801960e:	4a0d      	ldr	r2, [pc, #52]	; (8019644 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8019610:	8812      	ldrh	r2, [r2, #0]
 8019612:	440a      	add	r2, r1
 8019614:	4293      	cmp	r3, r2
 8019616:	da04      	bge.n	8019622 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8019618:	4a08      	ldr	r2, [pc, #32]	; (801963c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801961a:	6812      	ldr	r2, [r2, #0]
 801961c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019620:	4770      	bx	lr
 8019622:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019626:	4293      	cmp	r3, r2
 8019628:	d103      	bne.n	8019632 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801962a:	4b07      	ldr	r3, [pc, #28]	; (8019648 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801962c:	681b      	ldr	r3, [r3, #0]
 801962e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8019630:	4770      	bx	lr
 8019632:	2000      	movs	r0, #0
 8019634:	4770      	bx	lr
 8019636:	bf00      	nop
 8019638:	20012e2c 	.word	0x20012e2c
 801963c:	20012e10 	.word	0x20012e10
 8019640:	20012e34 	.word	0x20012e34
 8019644:	20012e30 	.word	0x20012e30
 8019648:	20012da4 	.word	0x20012da4

0801964c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801964c:	4b24      	ldr	r3, [pc, #144]	; (80196e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801964e:	8802      	ldrh	r2, [r0, #0]
 8019650:	8818      	ldrh	r0, [r3, #0]
 8019652:	4282      	cmp	r2, r0
 8019654:	d221      	bcs.n	801969a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8019656:	4b23      	ldr	r3, [pc, #140]	; (80196e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019658:	6819      	ldr	r1, [r3, #0]
 801965a:	2314      	movs	r3, #20
 801965c:	fb03 1302 	mla	r3, r3, r2, r1
 8019660:	6858      	ldr	r0, [r3, #4]
 8019662:	2800      	cmp	r0, #0
 8019664:	d03a      	beq.n	80196dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019666:	4920      	ldr	r1, [pc, #128]	; (80196e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019668:	6809      	ldr	r1, [r1, #0]
 801966a:	2900      	cmp	r1, #0
 801966c:	d036      	beq.n	80196dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801966e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019672:	2900      	cmp	r1, #0
 8019674:	d032      	beq.n	80196dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019676:	891a      	ldrh	r2, [r3, #8]
 8019678:	8958      	ldrh	r0, [r3, #10]
 801967a:	4350      	muls	r0, r2
 801967c:	7c5a      	ldrb	r2, [r3, #17]
 801967e:	7cdb      	ldrb	r3, [r3, #19]
 8019680:	0952      	lsrs	r2, r2, #5
 8019682:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019686:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801968a:	2b0b      	cmp	r3, #11
 801968c:	bf18      	it	ne
 801968e:	0040      	lslne	r0, r0, #1
 8019690:	3003      	adds	r0, #3
 8019692:	f020 0003 	bic.w	r0, r0, #3
 8019696:	4408      	add	r0, r1
 8019698:	4770      	bx	lr
 801969a:	4b14      	ldr	r3, [pc, #80]	; (80196ec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801969c:	881b      	ldrh	r3, [r3, #0]
 801969e:	4403      	add	r3, r0
 80196a0:	429a      	cmp	r2, r3
 80196a2:	da1a      	bge.n	80196da <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80196a4:	4b12      	ldr	r3, [pc, #72]	; (80196f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80196a6:	681b      	ldr	r3, [r3, #0]
 80196a8:	1a10      	subs	r0, r2, r0
 80196aa:	210e      	movs	r1, #14
 80196ac:	fb01 3000 	mla	r0, r1, r0, r3
 80196b0:	7b03      	ldrb	r3, [r0, #12]
 80196b2:	f003 031f 	and.w	r3, r3, #31
 80196b6:	2b0b      	cmp	r3, #11
 80196b8:	d10b      	bne.n	80196d2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80196ba:	8903      	ldrh	r3, [r0, #8]
 80196bc:	8940      	ldrh	r0, [r0, #10]
 80196be:	4358      	muls	r0, r3
 80196c0:	4b09      	ldr	r3, [pc, #36]	; (80196e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80196c2:	6819      	ldr	r1, [r3, #0]
 80196c4:	3003      	adds	r0, #3
 80196c6:	f020 0303 	bic.w	r3, r0, #3
 80196ca:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80196ce:	4418      	add	r0, r3
 80196d0:	4770      	bx	lr
 80196d2:	2b0d      	cmp	r3, #13
 80196d4:	d101      	bne.n	80196da <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80196d6:	300d      	adds	r0, #13
 80196d8:	4770      	bx	lr
 80196da:	2000      	movs	r0, #0
 80196dc:	4770      	bx	lr
 80196de:	bf00      	nop
 80196e0:	20012e2c 	.word	0x20012e2c
 80196e4:	20012e34 	.word	0x20012e34
 80196e8:	20012e10 	.word	0x20012e10
 80196ec:	20012e30 	.word	0x20012e30
 80196f0:	20012e14 	.word	0x20012e14

080196f4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80196f4:	b510      	push	{r4, lr}
 80196f6:	4a17      	ldr	r2, [pc, #92]	; (8019754 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80196f8:	8803      	ldrh	r3, [r0, #0]
 80196fa:	8812      	ldrh	r2, [r2, #0]
 80196fc:	4293      	cmp	r3, r2
 80196fe:	d20c      	bcs.n	801971a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019700:	4a15      	ldr	r2, [pc, #84]	; (8019758 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8019702:	6812      	ldr	r2, [r2, #0]
 8019704:	2114      	movs	r1, #20
 8019706:	fb01 2303 	mla	r3, r1, r3, r2
 801970a:	7c58      	ldrb	r0, [r3, #17]
 801970c:	0942      	lsrs	r2, r0, #5
 801970e:	7cd8      	ldrb	r0, [r3, #19]
 8019710:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8019714:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8019718:	bd10      	pop	{r4, pc}
 801971a:	4910      	ldr	r1, [pc, #64]	; (801975c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801971c:	8809      	ldrh	r1, [r1, #0]
 801971e:	4411      	add	r1, r2
 8019720:	428b      	cmp	r3, r1
 8019722:	da09      	bge.n	8019738 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8019724:	1a9b      	subs	r3, r3, r2
 8019726:	4a0e      	ldr	r2, [pc, #56]	; (8019760 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8019728:	6812      	ldr	r2, [r2, #0]
 801972a:	210e      	movs	r1, #14
 801972c:	fb01 2303 	mla	r3, r1, r3, r2
 8019730:	7b18      	ldrb	r0, [r3, #12]
 8019732:	f000 001f 	and.w	r0, r0, #31
 8019736:	e7ef      	b.n	8019718 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019738:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801973c:	4293      	cmp	r3, r2
 801973e:	d106      	bne.n	801974e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8019740:	f7eb f810 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 8019744:	6803      	ldr	r3, [r0, #0]
 8019746:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801974a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801974c:	4718      	bx	r3
 801974e:	2000      	movs	r0, #0
 8019750:	e7e2      	b.n	8019718 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019752:	bf00      	nop
 8019754:	20012e2c 	.word	0x20012e2c
 8019758:	20012e34 	.word	0x20012e34
 801975c:	20012e30 	.word	0x20012e30
 8019760:	20012e14 	.word	0x20012e14

08019764 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019764:	2010      	movs	r0, #16
 8019766:	4770      	bx	lr

08019768 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019768:	2000      	movs	r0, #0
 801976a:	4770      	bx	lr

0801976c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801976c:	4b02      	ldr	r3, [pc, #8]	; (8019778 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801976e:	8818      	ldrh	r0, [r3, #0]
 8019770:	0040      	lsls	r0, r0, #1
 8019772:	b280      	uxth	r0, r0
 8019774:	4770      	bx	lr
 8019776:	bf00      	nop
 8019778:	20012d9e 	.word	0x20012d9e

0801977c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801977c:	2bff      	cmp	r3, #255	; 0xff
 801977e:	d050      	beq.n	8019822 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019780:	2a0b      	cmp	r2, #11
 8019782:	d04a      	beq.n	801981a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019784:	d80e      	bhi.n	80197a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019786:	2a03      	cmp	r2, #3
 8019788:	d03f      	beq.n	801980a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801978a:	d804      	bhi.n	8019796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801978c:	2a01      	cmp	r2, #1
 801978e:	d03e      	beq.n	801980e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019790:	d93f      	bls.n	8019812 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019792:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019794:	4770      	bx	lr
 8019796:	2a09      	cmp	r2, #9
 8019798:	d03f      	beq.n	801981a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801979a:	d83c      	bhi.n	8019816 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801979c:	2a08      	cmp	r2, #8
 801979e:	d03a      	beq.n	8019816 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80197a0:	2000      	movs	r0, #0
 80197a2:	4770      	bx	lr
 80197a4:	2a2f      	cmp	r2, #47	; 0x2f
 80197a6:	d024      	beq.n	80197f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80197a8:	d80d      	bhi.n	80197c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80197aa:	2a2d      	cmp	r2, #45	; 0x2d
 80197ac:	d014      	beq.n	80197d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80197ae:	d826      	bhi.n	80197fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80197b0:	2a2c      	cmp	r2, #44	; 0x2c
 80197b2:	d1f5      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197b4:	684b      	ldr	r3, [r1, #4]
 80197b6:	781b      	ldrb	r3, [r3, #0]
 80197b8:	2b01      	cmp	r3, #1
 80197ba:	d018      	beq.n	80197ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80197bc:	d323      	bcc.n	8019806 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80197be:	2b02      	cmp	r3, #2
 80197c0:	d1ee      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197c2:	6880      	ldr	r0, [r0, #8]
 80197c4:	4770      	bx	lr
 80197c6:	2a31      	cmp	r2, #49	; 0x31
 80197c8:	d004      	beq.n	80197d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80197ca:	d328      	bcc.n	801981e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80197cc:	2a32      	cmp	r2, #50	; 0x32
 80197ce:	d026      	beq.n	801981e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80197d0:	2a33      	cmp	r2, #51	; 0x33
 80197d2:	d1e5      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197d4:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80197d6:	4770      	bx	lr
 80197d8:	684b      	ldr	r3, [r1, #4]
 80197da:	781b      	ldrb	r3, [r3, #0]
 80197dc:	2b01      	cmp	r3, #1
 80197de:	d004      	beq.n	80197ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80197e0:	d30b      	bcc.n	80197fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80197e2:	2b02      	cmp	r3, #2
 80197e4:	d1dc      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197e6:	6900      	ldr	r0, [r0, #16]
 80197e8:	4770      	bx	lr
 80197ea:	6a00      	ldr	r0, [r0, #32]
 80197ec:	4770      	bx	lr
 80197ee:	6980      	ldr	r0, [r0, #24]
 80197f0:	4770      	bx	lr
 80197f2:	684b      	ldr	r3, [r1, #4]
 80197f4:	781b      	ldrb	r3, [r3, #0]
 80197f6:	2b00      	cmp	r3, #0
 80197f8:	d1d2      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197fa:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80197fc:	4770      	bx	lr
 80197fe:	684b      	ldr	r3, [r1, #4]
 8019800:	781b      	ldrb	r3, [r3, #0]
 8019802:	2b00      	cmp	r3, #0
 8019804:	d1cc      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019806:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019808:	4770      	bx	lr
 801980a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801980c:	4770      	bx	lr
 801980e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8019810:	4770      	bx	lr
 8019812:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8019814:	4770      	bx	lr
 8019816:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8019818:	4770      	bx	lr
 801981a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801981c:	4770      	bx	lr
 801981e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8019820:	4770      	bx	lr
 8019822:	2a0b      	cmp	r2, #11
 8019824:	d049      	beq.n	80198ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019826:	d80e      	bhi.n	8019846 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8019828:	2a03      	cmp	r2, #3
 801982a:	d040      	beq.n	80198ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801982c:	d804      	bhi.n	8019838 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801982e:	2a01      	cmp	r2, #1
 8019830:	d03f      	beq.n	80198b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8019832:	d940      	bls.n	80198b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019834:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019836:	4770      	bx	lr
 8019838:	2a09      	cmp	r2, #9
 801983a:	d03e      	beq.n	80198ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801983c:	d801      	bhi.n	8019842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801983e:	2a08      	cmp	r2, #8
 8019840:	d1ae      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019842:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019844:	4770      	bx	lr
 8019846:	2a2f      	cmp	r2, #47	; 0x2f
 8019848:	d024      	beq.n	8019894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801984a:	d80d      	bhi.n	8019868 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801984c:	2a2d      	cmp	r2, #45	; 0x2d
 801984e:	d014      	beq.n	801987a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019850:	d826      	bhi.n	80198a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019852:	2a2c      	cmp	r2, #44	; 0x2c
 8019854:	d1a4      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019856:	684b      	ldr	r3, [r1, #4]
 8019858:	781b      	ldrb	r3, [r3, #0]
 801985a:	2b01      	cmp	r3, #1
 801985c:	d018      	beq.n	8019890 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801985e:	d324      	bcc.n	80198aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019860:	2b02      	cmp	r3, #2
 8019862:	d19d      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019864:	68c0      	ldr	r0, [r0, #12]
 8019866:	4770      	bx	lr
 8019868:	2a31      	cmp	r2, #49	; 0x31
 801986a:	d004      	beq.n	8019876 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801986c:	d327      	bcc.n	80198be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801986e:	2a32      	cmp	r2, #50	; 0x32
 8019870:	d025      	beq.n	80198be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019872:	2a33      	cmp	r2, #51	; 0x33
 8019874:	d194      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019876:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019878:	4770      	bx	lr
 801987a:	684b      	ldr	r3, [r1, #4]
 801987c:	781b      	ldrb	r3, [r3, #0]
 801987e:	2b01      	cmp	r3, #1
 8019880:	d004      	beq.n	801988c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019882:	d30b      	bcc.n	801989c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019884:	2b02      	cmp	r3, #2
 8019886:	d18b      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019888:	6940      	ldr	r0, [r0, #20]
 801988a:	4770      	bx	lr
 801988c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801988e:	4770      	bx	lr
 8019890:	69c0      	ldr	r0, [r0, #28]
 8019892:	4770      	bx	lr
 8019894:	684b      	ldr	r3, [r1, #4]
 8019896:	781b      	ldrb	r3, [r3, #0]
 8019898:	2b00      	cmp	r3, #0
 801989a:	d181      	bne.n	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801989c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801989e:	4770      	bx	lr
 80198a0:	684b      	ldr	r3, [r1, #4]
 80198a2:	781b      	ldrb	r3, [r3, #0]
 80198a4:	2b00      	cmp	r3, #0
 80198a6:	f47f af7b 	bne.w	80197a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80198aa:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80198ac:	4770      	bx	lr
 80198ae:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80198b0:	4770      	bx	lr
 80198b2:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80198b4:	4770      	bx	lr
 80198b6:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80198b8:	4770      	bx	lr
 80198ba:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80198bc:	4770      	bx	lr
 80198be:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80198c0:	4770      	bx	lr

080198c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80198c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198c6:	b087      	sub	sp, #28
 80198c8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80198ca:	9205      	str	r2, [sp, #20]
 80198cc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80198d0:	9202      	str	r2, [sp, #8]
 80198d2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80198d6:	9101      	str	r1, [sp, #4]
 80198d8:	6841      	ldr	r1, [r0, #4]
 80198da:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80198de:	fb01 2404 	mla	r4, r1, r4, r2
 80198e2:	6802      	ldr	r2, [r0, #0]
 80198e4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80198e8:	f8de 2000 	ldr.w	r2, [lr]
 80198ec:	9203      	str	r2, [sp, #12]
 80198ee:	f8de 2004 	ldr.w	r2, [lr, #4]
 80198f2:	3204      	adds	r2, #4
 80198f4:	9204      	str	r2, [sp, #16]
 80198f6:	9a02      	ldr	r2, [sp, #8]
 80198f8:	43d6      	mvns	r6, r2
 80198fa:	b2f6      	uxtb	r6, r6
 80198fc:	9a01      	ldr	r2, [sp, #4]
 80198fe:	2a00      	cmp	r2, #0
 8019900:	dc03      	bgt.n	801990a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019902:	9a05      	ldr	r2, [sp, #20]
 8019904:	2a00      	cmp	r2, #0
 8019906:	f340 8129 	ble.w	8019b5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801990a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801990c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019910:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019914:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019918:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801991a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801991e:	2b00      	cmp	r3, #0
 8019920:	dd0e      	ble.n	8019940 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019922:	1408      	asrs	r0, r1, #16
 8019924:	d405      	bmi.n	8019932 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019926:	4560      	cmp	r0, ip
 8019928:	da03      	bge.n	8019932 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801992a:	1410      	asrs	r0, r2, #16
 801992c:	d401      	bmi.n	8019932 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801992e:	42b8      	cmp	r0, r7
 8019930:	db07      	blt.n	8019942 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019932:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019934:	4401      	add	r1, r0
 8019936:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019938:	3b01      	subs	r3, #1
 801993a:	4402      	add	r2, r0
 801993c:	3402      	adds	r4, #2
 801993e:	e7ee      	b.n	801991e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019940:	d071      	beq.n	8019a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019942:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019944:	1e58      	subs	r0, r3, #1
 8019946:	fb05 1500 	mla	r5, r5, r0, r1
 801994a:	142d      	asrs	r5, r5, #16
 801994c:	d45f      	bmi.n	8019a0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801994e:	4565      	cmp	r5, ip
 8019950:	da5d      	bge.n	8019a0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019952:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019954:	fb05 2000 	mla	r0, r5, r0, r2
 8019958:	1400      	asrs	r0, r0, #16
 801995a:	d458      	bmi.n	8019a0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801995c:	42b8      	cmp	r0, r7
 801995e:	da56      	bge.n	8019a0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019960:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019964:	4699      	mov	r9, r3
 8019966:	46a2      	mov	sl, r4
 8019968:	f1b9 0f00 	cmp.w	r9, #0
 801996c:	dd57      	ble.n	8019a1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801996e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019972:	9803      	ldr	r0, [sp, #12]
 8019974:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019978:	140d      	asrs	r5, r1, #16
 801997a:	fb07 000c 	mla	r0, r7, ip, r0
 801997e:	f109 39ff 	add.w	r9, r9, #4294967295
 8019982:	5d40      	ldrb	r0, [r0, r5]
 8019984:	9d04      	ldr	r5, [sp, #16]
 8019986:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801998a:	f8ba 5000 	ldrh.w	r5, [sl]
 801998e:	122f      	asrs	r7, r5, #8
 8019990:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019994:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019998:	fb17 f706 	smulbb	r7, r7, r6
 801999c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80199a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80199a4:	00ed      	lsls	r5, r5, #3
 80199a6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80199aa:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80199ae:	10c7      	asrs	r7, r0, #3
 80199b0:	b2ed      	uxtb	r5, r5
 80199b2:	00c0      	lsls	r0, r0, #3
 80199b4:	fb18 f806 	smulbb	r8, r8, r6
 80199b8:	fb15 f506 	smulbb	r5, r5, r6
 80199bc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80199c0:	b2c0      	uxtb	r0, r0
 80199c2:	fa1f fc8c 	uxth.w	ip, ip
 80199c6:	fb07 870b 	mla	r7, r7, fp, r8
 80199ca:	fb00 500b 	mla	r0, r0, fp, r5
 80199ce:	b280      	uxth	r0, r0
 80199d0:	b2bf      	uxth	r7, r7
 80199d2:	f10c 0501 	add.w	r5, ip, #1
 80199d6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80199da:	f107 0801 	add.w	r8, r7, #1
 80199de:	1c45      	adds	r5, r0, #1
 80199e0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80199e4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80199e8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80199ea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80199ee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80199f2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80199f6:	ea45 0c0c 	orr.w	ip, r5, ip
 80199fa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80199fe:	4401      	add	r1, r0
 8019a00:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019a02:	ea4c 0c08 	orr.w	ip, ip, r8
 8019a06:	f82a cb02 	strh.w	ip, [sl], #2
 8019a0a:	4402      	add	r2, r0
 8019a0c:	e7ac      	b.n	8019968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019a0e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019a12:	f04f 0800 	mov.w	r8, #0
 8019a16:	eb03 0008 	add.w	r0, r3, r8
 8019a1a:	2800      	cmp	r0, #0
 8019a1c:	dc41      	bgt.n	8019aa2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019a1e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a22:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019a26:	9b01      	ldr	r3, [sp, #4]
 8019a28:	2b00      	cmp	r3, #0
 8019a2a:	f340 8097 	ble.w	8019b5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019a2e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a32:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019a36:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019a3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a40:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a48:	eef0 6a62 	vmov.f32	s13, s5
 8019a4c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a54:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019a58:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019a5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a60:	eef0 6a43 	vmov.f32	s13, s6
 8019a64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a68:	ee12 2a90 	vmov	r2, s5
 8019a6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a70:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a74:	ee13 2a10 	vmov	r2, s6
 8019a78:	9313      	str	r3, [sp, #76]	; 0x4c
 8019a7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a7c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a80:	9314      	str	r3, [sp, #80]	; 0x50
 8019a82:	9b01      	ldr	r3, [sp, #4]
 8019a84:	9a05      	ldr	r2, [sp, #20]
 8019a86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a8a:	3b01      	subs	r3, #1
 8019a8c:	9301      	str	r3, [sp, #4]
 8019a8e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019a92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a94:	eeb0 3a67 	vmov.f32	s6, s15
 8019a98:	bf08      	it	eq
 8019a9a:	4613      	moveq	r3, r2
 8019a9c:	eef0 2a47 	vmov.f32	s5, s14
 8019aa0:	e72c      	b.n	80198fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019aa2:	140f      	asrs	r7, r1, #16
 8019aa4:	d453      	bmi.n	8019b4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019aa6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019aaa:	42bd      	cmp	r5, r7
 8019aac:	dd4f      	ble.n	8019b4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019aae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019ab2:	d44c      	bmi.n	8019b4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019ab4:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019ab8:	4560      	cmp	r0, ip
 8019aba:	dd48      	ble.n	8019b4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019abc:	9803      	ldr	r0, [sp, #12]
 8019abe:	b22d      	sxth	r5, r5
 8019ac0:	fb0c 0505 	mla	r5, ip, r5, r0
 8019ac4:	5de8      	ldrb	r0, [r5, r7]
 8019ac6:	9d04      	ldr	r5, [sp, #16]
 8019ac8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019acc:	f06f 0501 	mvn.w	r5, #1
 8019ad0:	fb05 fb08 	mul.w	fp, r5, r8
 8019ad4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019ad8:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019adc:	122f      	asrs	r7, r5, #8
 8019ade:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019ae2:	fb17 f706 	smulbb	r7, r7, r6
 8019ae6:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019aea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019aee:	00ed      	lsls	r5, r5, #3
 8019af0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019af4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019af8:	10c7      	asrs	r7, r0, #3
 8019afa:	b2ed      	uxtb	r5, r5
 8019afc:	00c0      	lsls	r0, r0, #3
 8019afe:	fb19 f906 	smulbb	r9, r9, r6
 8019b02:	fb15 f506 	smulbb	r5, r5, r6
 8019b06:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019b0a:	b2c0      	uxtb	r0, r0
 8019b0c:	fa1f fc8c 	uxth.w	ip, ip
 8019b10:	fb07 970a 	mla	r7, r7, sl, r9
 8019b14:	fb00 500a 	mla	r0, r0, sl, r5
 8019b18:	b2bf      	uxth	r7, r7
 8019b1a:	b280      	uxth	r0, r0
 8019b1c:	f10c 0501 	add.w	r5, ip, #1
 8019b20:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019b24:	f107 0901 	add.w	r9, r7, #1
 8019b28:	1c45      	adds	r5, r0, #1
 8019b2a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019b2e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019b32:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b36:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019b3a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019b3e:	ea45 0c0c 	orr.w	ip, r5, ip
 8019b42:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019b46:	ea4c 0c09 	orr.w	ip, ip, r9
 8019b4a:	f824 c00b 	strh.w	ip, [r4, fp]
 8019b4e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019b50:	4401      	add	r1, r0
 8019b52:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019b54:	f108 38ff 	add.w	r8, r8, #4294967295
 8019b58:	4402      	add	r2, r0
 8019b5a:	e75c      	b.n	8019a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019b5c:	b007      	add	sp, #28
 8019b5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b66:	b085      	sub	sp, #20
 8019b68:	4693      	mov	fp, r2
 8019b6a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019b6c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019b6e:	6870      	ldr	r0, [r6, #4]
 8019b70:	9100      	str	r1, [sp, #0]
 8019b72:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019b76:	fb00 2404 	mla	r4, r0, r4, r2
 8019b7a:	6832      	ldr	r2, [r6, #0]
 8019b7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019b80:	682a      	ldr	r2, [r5, #0]
 8019b82:	9201      	str	r2, [sp, #4]
 8019b84:	686a      	ldr	r2, [r5, #4]
 8019b86:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019b8a:	3204      	adds	r2, #4
 8019b8c:	9202      	str	r2, [sp, #8]
 8019b8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019b92:	9a00      	ldr	r2, [sp, #0]
 8019b94:	2a00      	cmp	r2, #0
 8019b96:	dc03      	bgt.n	8019ba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019b98:	f1bb 0f00 	cmp.w	fp, #0
 8019b9c:	f340 80a0 	ble.w	8019ce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019ba0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019ba2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019ba6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019baa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019bae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019bb0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019bb4:	2b00      	cmp	r3, #0
 8019bb6:	dd0c      	ble.n	8019bd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019bb8:	1406      	asrs	r6, r0, #16
 8019bba:	d405      	bmi.n	8019bc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019bbc:	454e      	cmp	r6, r9
 8019bbe:	da03      	bge.n	8019bc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019bc0:	1416      	asrs	r6, r2, #16
 8019bc2:	d401      	bmi.n	8019bc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019bc4:	4546      	cmp	r6, r8
 8019bc6:	db05      	blt.n	8019bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019bc8:	4470      	add	r0, lr
 8019bca:	4462      	add	r2, ip
 8019bcc:	3b01      	subs	r3, #1
 8019bce:	3402      	adds	r4, #2
 8019bd0:	e7f0      	b.n	8019bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019bd2:	d00f      	beq.n	8019bf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019bd4:	1e5e      	subs	r6, r3, #1
 8019bd6:	fb0e 0706 	mla	r7, lr, r6, r0
 8019bda:	143f      	asrs	r7, r7, #16
 8019bdc:	d541      	bpl.n	8019c62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019bde:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019be2:	4698      	mov	r8, r3
 8019be4:	9603      	str	r6, [sp, #12]
 8019be6:	f1b8 0f00 	cmp.w	r8, #0
 8019bea:	dc59      	bgt.n	8019ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019bec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019bf0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019bf4:	9b00      	ldr	r3, [sp, #0]
 8019bf6:	2b00      	cmp	r3, #0
 8019bf8:	dd72      	ble.n	8019ce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019bfa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019bfe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019c02:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019c06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019c10:	eeb0 6a62 	vmov.f32	s12, s5
 8019c14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c20:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019c24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c28:	eeb0 6a43 	vmov.f32	s12, s6
 8019c2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c30:	ee12 2a90 	vmov	r2, s5
 8019c34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c38:	fb92 fef3 	sdiv	lr, r2, r3
 8019c3c:	ee13 2a10 	vmov	r2, s6
 8019c40:	fb92 fcf3 	sdiv	ip, r2, r3
 8019c44:	9b00      	ldr	r3, [sp, #0]
 8019c46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c4a:	3b01      	subs	r3, #1
 8019c4c:	9300      	str	r3, [sp, #0]
 8019c4e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019c52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c54:	eeb0 3a67 	vmov.f32	s6, s15
 8019c58:	bf08      	it	eq
 8019c5a:	465b      	moveq	r3, fp
 8019c5c:	eef0 2a47 	vmov.f32	s5, s14
 8019c60:	e797      	b.n	8019b92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019c62:	454f      	cmp	r7, r9
 8019c64:	dabb      	bge.n	8019bde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019c66:	fb0c 2606 	mla	r6, ip, r6, r2
 8019c6a:	1436      	asrs	r6, r6, #16
 8019c6c:	d4b7      	bmi.n	8019bde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019c6e:	4546      	cmp	r6, r8
 8019c70:	dab5      	bge.n	8019bde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019c72:	461e      	mov	r6, r3
 8019c74:	46a0      	mov	r8, r4
 8019c76:	2e00      	cmp	r6, #0
 8019c78:	ddb8      	ble.n	8019bec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019c7a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019c7e:	9901      	ldr	r1, [sp, #4]
 8019c80:	1417      	asrs	r7, r2, #16
 8019c82:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019c86:	fb0a 1707 	mla	r7, sl, r7, r1
 8019c8a:	9902      	ldr	r1, [sp, #8]
 8019c8c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019c90:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019c94:	f828 7b02 	strh.w	r7, [r8], #2
 8019c98:	4470      	add	r0, lr
 8019c9a:	4462      	add	r2, ip
 8019c9c:	3e01      	subs	r6, #1
 8019c9e:	e7ea      	b.n	8019c76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019ca0:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019ca4:	d417      	bmi.n	8019cd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019ca6:	68ae      	ldr	r6, [r5, #8]
 8019ca8:	454e      	cmp	r6, r9
 8019caa:	dd14      	ble.n	8019cd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019cac:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019cb0:	d411      	bmi.n	8019cd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019cb2:	68ef      	ldr	r7, [r5, #12]
 8019cb4:	4557      	cmp	r7, sl
 8019cb6:	dd0e      	ble.n	8019cd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019cb8:	9f01      	ldr	r7, [sp, #4]
 8019cba:	b236      	sxth	r6, r6
 8019cbc:	fb0a 7606 	mla	r6, sl, r6, r7
 8019cc0:	9f02      	ldr	r7, [sp, #8]
 8019cc2:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019cc6:	f06f 0101 	mvn.w	r1, #1
 8019cca:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019cce:	fb01 f608 	mul.w	r6, r1, r8
 8019cd2:	9903      	ldr	r1, [sp, #12]
 8019cd4:	538f      	strh	r7, [r1, r6]
 8019cd6:	4470      	add	r0, lr
 8019cd8:	4462      	add	r2, ip
 8019cda:	f108 38ff 	add.w	r8, r8, #4294967295
 8019cde:	e782      	b.n	8019be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019ce0:	b005      	add	sp, #20
 8019ce2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ce6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ce6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cea:	b087      	sub	sp, #28
 8019cec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019cee:	9205      	str	r2, [sp, #20]
 8019cf0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019cf4:	9203      	str	r2, [sp, #12]
 8019cf6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019cfa:	9102      	str	r1, [sp, #8]
 8019cfc:	6861      	ldr	r1, [r4, #4]
 8019cfe:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019d02:	fb01 2000 	mla	r0, r1, r0, r2
 8019d06:	6822      	ldr	r2, [r4, #0]
 8019d08:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019d0c:	9200      	str	r2, [sp, #0]
 8019d0e:	f8dc 2000 	ldr.w	r2, [ip]
 8019d12:	9204      	str	r2, [sp, #16]
 8019d14:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019d18:	3204      	adds	r2, #4
 8019d1a:	9201      	str	r2, [sp, #4]
 8019d1c:	9a03      	ldr	r2, [sp, #12]
 8019d1e:	43d5      	mvns	r5, r2
 8019d20:	b2ed      	uxtb	r5, r5
 8019d22:	9a02      	ldr	r2, [sp, #8]
 8019d24:	2a00      	cmp	r2, #0
 8019d26:	dc03      	bgt.n	8019d30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019d28:	9a05      	ldr	r2, [sp, #20]
 8019d2a:	2a00      	cmp	r2, #0
 8019d2c:	f340 812c 	ble.w	8019f88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019d30:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019d32:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019d36:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8019d3a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019d3e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019d40:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019d44:	2b00      	cmp	r3, #0
 8019d46:	dd10      	ble.n	8019d6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019d48:	140c      	asrs	r4, r1, #16
 8019d4a:	d405      	bmi.n	8019d58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019d4c:	4574      	cmp	r4, lr
 8019d4e:	da03      	bge.n	8019d58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019d50:	1414      	asrs	r4, r2, #16
 8019d52:	d401      	bmi.n	8019d58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019d54:	42bc      	cmp	r4, r7
 8019d56:	db09      	blt.n	8019d6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019d58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019d5a:	9800      	ldr	r0, [sp, #0]
 8019d5c:	4421      	add	r1, r4
 8019d5e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019d60:	3002      	adds	r0, #2
 8019d62:	4422      	add	r2, r4
 8019d64:	3b01      	subs	r3, #1
 8019d66:	9000      	str	r0, [sp, #0]
 8019d68:	e7ec      	b.n	8019d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019d6a:	d071      	beq.n	8019e50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019d6c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019d6e:	1e5c      	subs	r4, r3, #1
 8019d70:	fb06 1604 	mla	r6, r6, r4, r1
 8019d74:	1436      	asrs	r6, r6, #16
 8019d76:	d45d      	bmi.n	8019e34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019d78:	4576      	cmp	r6, lr
 8019d7a:	da5b      	bge.n	8019e34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019d7c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019d7e:	fb06 2404 	mla	r4, r6, r4, r2
 8019d82:	1424      	asrs	r4, r4, #16
 8019d84:	d456      	bmi.n	8019e34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019d86:	42bc      	cmp	r4, r7
 8019d88:	da54      	bge.n	8019e34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019d8a:	f8dd 9000 	ldr.w	r9, [sp]
 8019d8e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019d92:	4698      	mov	r8, r3
 8019d94:	f1b8 0f00 	cmp.w	r8, #0
 8019d98:	dd54      	ble.n	8019e44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019d9a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019d9e:	9804      	ldr	r0, [sp, #16]
 8019da0:	1414      	asrs	r4, r2, #16
 8019da2:	fb07 0404 	mla	r4, r7, r4, r0
 8019da6:	140e      	asrs	r6, r1, #16
 8019da8:	9801      	ldr	r0, [sp, #4]
 8019daa:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019dae:	f8b9 4000 	ldrh.w	r4, [r9]
 8019db2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019db6:	eb00 0b0e 	add.w	fp, r0, lr
 8019dba:	1227      	asrs	r7, r4, #8
 8019dbc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019dc0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019dc4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019dc8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019dca:	fb16 f60a 	smulbb	r6, r6, sl
 8019dce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019dd2:	fb07 6705 	mla	r7, r7, r5, r6
 8019dd6:	10e6      	asrs	r6, r4, #3
 8019dd8:	00e4      	lsls	r4, r4, #3
 8019dda:	b2e4      	uxtb	r4, r4
 8019ddc:	fb1b fb0a 	smulbb	fp, fp, sl
 8019de0:	fb14 f405 	smulbb	r4, r4, r5
 8019de4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019de8:	b2bf      	uxth	r7, r7
 8019dea:	fb06 b605 	mla	r6, r6, r5, fp
 8019dee:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019df2:	b2b6      	uxth	r6, r6
 8019df4:	fa1f fe8e 	uxth.w	lr, lr
 8019df8:	1c7c      	adds	r4, r7, #1
 8019dfa:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019dfe:	f106 0b01 	add.w	fp, r6, #1
 8019e02:	f10e 0401 	add.w	r4, lr, #1
 8019e06:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8019e0a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019e0e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019e12:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019e16:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019e1a:	4327      	orrs	r7, r4
 8019e1c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019e20:	4401      	add	r1, r0
 8019e22:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019e24:	ea47 070b 	orr.w	r7, r7, fp
 8019e28:	f829 7b02 	strh.w	r7, [r9], #2
 8019e2c:	4402      	add	r2, r0
 8019e2e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019e32:	e7af      	b.n	8019d94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019e34:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019e38:	f04f 0e00 	mov.w	lr, #0
 8019e3c:	eb03 040e 	add.w	r4, r3, lr
 8019e40:	2c00      	cmp	r4, #0
 8019e42:	dc43      	bgt.n	8019ecc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019e44:	9a00      	ldr	r2, [sp, #0]
 8019e46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019e4a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019e4e:	9300      	str	r3, [sp, #0]
 8019e50:	9b02      	ldr	r3, [sp, #8]
 8019e52:	2b00      	cmp	r3, #0
 8019e54:	f340 8098 	ble.w	8019f88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019e58:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e5c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019e60:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019e64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e72:	eef0 6a62 	vmov.f32	s13, s5
 8019e76:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e82:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019e86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e8a:	eef0 6a43 	vmov.f32	s13, s6
 8019e8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e92:	ee12 2a90 	vmov	r2, s5
 8019e96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e9e:	ee13 2a10 	vmov	r2, s6
 8019ea2:	9313      	str	r3, [sp, #76]	; 0x4c
 8019ea4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ea6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019eaa:	9314      	str	r3, [sp, #80]	; 0x50
 8019eac:	9b02      	ldr	r3, [sp, #8]
 8019eae:	9a05      	ldr	r2, [sp, #20]
 8019eb0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019eb4:	3b01      	subs	r3, #1
 8019eb6:	9302      	str	r3, [sp, #8]
 8019eb8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019ebc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ebe:	eeb0 3a67 	vmov.f32	s6, s15
 8019ec2:	bf08      	it	eq
 8019ec4:	4613      	moveq	r3, r2
 8019ec6:	eef0 2a47 	vmov.f32	s5, s14
 8019eca:	e72a      	b.n	8019d22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019ecc:	140f      	asrs	r7, r1, #16
 8019ece:	d454      	bmi.n	8019f7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019ed0:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019ed4:	42be      	cmp	r6, r7
 8019ed6:	dd50      	ble.n	8019f7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019ed8:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019edc:	d44d      	bmi.n	8019f7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019ede:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8019ee2:	4544      	cmp	r4, r8
 8019ee4:	dd49      	ble.n	8019f7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019ee6:	9c04      	ldr	r4, [sp, #16]
 8019ee8:	b236      	sxth	r6, r6
 8019eea:	fb08 4606 	mla	r6, r8, r6, r4
 8019eee:	f06f 0001 	mvn.w	r0, #1
 8019ef2:	f816 8007 	ldrb.w	r8, [r6, r7]
 8019ef6:	9c01      	ldr	r4, [sp, #4]
 8019ef8:	fb00 fa0e 	mul.w	sl, r0, lr
 8019efc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019f00:	9800      	ldr	r0, [sp, #0]
 8019f02:	eb04 0b08 	add.w	fp, r4, r8
 8019f06:	f830 400a 	ldrh.w	r4, [r0, sl]
 8019f0a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019f0e:	9801      	ldr	r0, [sp, #4]
 8019f10:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019f14:	f810 8008 	ldrb.w	r8, [r0, r8]
 8019f18:	9800      	ldr	r0, [sp, #0]
 8019f1a:	1227      	asrs	r7, r4, #8
 8019f1c:	fb16 f609 	smulbb	r6, r6, r9
 8019f20:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019f24:	fb07 6705 	mla	r7, r7, r5, r6
 8019f28:	10e6      	asrs	r6, r4, #3
 8019f2a:	00e4      	lsls	r4, r4, #3
 8019f2c:	b2e4      	uxtb	r4, r4
 8019f2e:	fb1b fb09 	smulbb	fp, fp, r9
 8019f32:	fb14 f405 	smulbb	r4, r4, r5
 8019f36:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f3a:	b2bf      	uxth	r7, r7
 8019f3c:	fb06 b605 	mla	r6, r6, r5, fp
 8019f40:	fb08 4809 	mla	r8, r8, r9, r4
 8019f44:	b2b6      	uxth	r6, r6
 8019f46:	fa1f f888 	uxth.w	r8, r8
 8019f4a:	1c7c      	adds	r4, r7, #1
 8019f4c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019f50:	f106 0b01 	add.w	fp, r6, #1
 8019f54:	f108 0401 	add.w	r4, r8, #1
 8019f58:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8019f5c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019f60:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019f64:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019f68:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019f6c:	4327      	orrs	r7, r4
 8019f6e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019f72:	ea47 070b 	orr.w	r7, r7, fp
 8019f76:	f820 700a 	strh.w	r7, [r0, sl]
 8019f7a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f7c:	4401      	add	r1, r0
 8019f7e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019f80:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019f84:	4402      	add	r2, r0
 8019f86:	e759      	b.n	8019e3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019f88:	b007      	add	sp, #28
 8019f8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019f90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f94:	b085      	sub	sp, #20
 8019f96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019f9a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019f9c:	9203      	str	r2, [sp, #12]
 8019f9e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019fa2:	6870      	ldr	r0, [r6, #4]
 8019fa4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019fa6:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8019faa:	686f      	ldr	r7, [r5, #4]
 8019fac:	9101      	str	r1, [sp, #4]
 8019fae:	fb00 2404 	mla	r4, r0, r4, r2
 8019fb2:	6832      	ldr	r2, [r6, #0]
 8019fb4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019fb8:	682a      	ldr	r2, [r5, #0]
 8019fba:	9202      	str	r2, [sp, #8]
 8019fbc:	3704      	adds	r7, #4
 8019fbe:	9a01      	ldr	r2, [sp, #4]
 8019fc0:	2a00      	cmp	r2, #0
 8019fc2:	dc03      	bgt.n	8019fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019fc4:	9a03      	ldr	r2, [sp, #12]
 8019fc6:	2a00      	cmp	r2, #0
 8019fc8:	f340 80cc 	ble.w	801a164 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019fcc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019fce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019fd2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019fd6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019fda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019fdc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019fe0:	2b00      	cmp	r3, #0
 8019fe2:	dd0d      	ble.n	801a000 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019fe4:	1406      	asrs	r6, r0, #16
 8019fe6:	d405      	bmi.n	8019ff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019fe8:	454e      	cmp	r6, r9
 8019fea:	da03      	bge.n	8019ff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019fec:	1416      	asrs	r6, r2, #16
 8019fee:	d401      	bmi.n	8019ff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019ff0:	4546      	cmp	r6, r8
 8019ff2:	db06      	blt.n	801a002 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ff4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8019ff6:	4460      	add	r0, ip
 8019ff8:	4432      	add	r2, r6
 8019ffa:	3b01      	subs	r3, #1
 8019ffc:	3402      	adds	r4, #2
 8019ffe:	e7ef      	b.n	8019fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a000:	d00f      	beq.n	801a022 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a002:	1e5e      	subs	r6, r3, #1
 801a004:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a008:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a00c:	d543      	bpl.n	801a096 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a00e:	4698      	mov	r8, r3
 801a010:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a014:	f1b8 0f00 	cmp.w	r8, #0
 801a018:	dc71      	bgt.n	801a0fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a01a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a01e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a022:	9b01      	ldr	r3, [sp, #4]
 801a024:	2b00      	cmp	r3, #0
 801a026:	f340 809d 	ble.w	801a164 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a02a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a02e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a032:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a036:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a038:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a03c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a040:	eeb0 6a62 	vmov.f32	s12, s5
 801a044:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a048:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a04c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a050:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a054:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a058:	eeb0 6a43 	vmov.f32	s12, s6
 801a05c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a060:	ee12 2a90 	vmov	r2, s5
 801a064:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a068:	fb92 fcf3 	sdiv	ip, r2, r3
 801a06c:	ee13 2a10 	vmov	r2, s6
 801a070:	fb92 f3f3 	sdiv	r3, r2, r3
 801a074:	9312      	str	r3, [sp, #72]	; 0x48
 801a076:	9b01      	ldr	r3, [sp, #4]
 801a078:	9a03      	ldr	r2, [sp, #12]
 801a07a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a07e:	3b01      	subs	r3, #1
 801a080:	9301      	str	r3, [sp, #4]
 801a082:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a086:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a088:	eeb0 3a67 	vmov.f32	s6, s15
 801a08c:	bf08      	it	eq
 801a08e:	4613      	moveq	r3, r2
 801a090:	eef0 2a47 	vmov.f32	s5, s14
 801a094:	e793      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a096:	45ce      	cmp	lr, r9
 801a098:	dab9      	bge.n	801a00e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a09a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a09c:	fb01 2606 	mla	r6, r1, r6, r2
 801a0a0:	1436      	asrs	r6, r6, #16
 801a0a2:	d4b4      	bmi.n	801a00e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a0a4:	4546      	cmp	r6, r8
 801a0a6:	dab2      	bge.n	801a00e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a0a8:	4698      	mov	r8, r3
 801a0aa:	46a2      	mov	sl, r4
 801a0ac:	f1b8 0f00 	cmp.w	r8, #0
 801a0b0:	ddb3      	ble.n	801a01a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a0b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a0b6:	9902      	ldr	r1, [sp, #8]
 801a0b8:	1416      	asrs	r6, r2, #16
 801a0ba:	fb09 1606 	mla	r6, r9, r6, r1
 801a0be:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a0c2:	492a      	ldr	r1, [pc, #168]	; (801a16c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a0c4:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a0c8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a0cc:	eb07 0b0e 	add.w	fp, r7, lr
 801a0d0:	4460      	add	r0, ip
 801a0d2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a0d6:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a0da:	00f6      	lsls	r6, r6, #3
 801a0dc:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a0e0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a0e4:	ea49 0606 	orr.w	r6, r9, r6
 801a0e8:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a0ec:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a0ee:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a0f2:	f82a 6b02 	strh.w	r6, [sl], #2
 801a0f6:	440a      	add	r2, r1
 801a0f8:	f108 38ff 	add.w	r8, r8, #4294967295
 801a0fc:	e7d6      	b.n	801a0ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a0fe:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a102:	d429      	bmi.n	801a158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a104:	68ae      	ldr	r6, [r5, #8]
 801a106:	454e      	cmp	r6, r9
 801a108:	dd26      	ble.n	801a158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a10a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a10e:	d423      	bmi.n	801a158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a110:	68e9      	ldr	r1, [r5, #12]
 801a112:	4559      	cmp	r1, fp
 801a114:	dd20      	ble.n	801a158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a116:	9902      	ldr	r1, [sp, #8]
 801a118:	fa0f fe86 	sxth.w	lr, r6
 801a11c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a120:	f06f 0101 	mvn.w	r1, #1
 801a124:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a128:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a12c:	eb07 060e 	add.w	r6, r7, lr
 801a130:	fb01 f908 	mul.w	r9, r1, r8
 801a134:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a138:	7876      	ldrb	r6, [r6, #1]
 801a13a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a13e:	00f6      	lsls	r6, r6, #3
 801a140:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a144:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a148:	ea4b 0606 	orr.w	r6, fp, r6
 801a14c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a150:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a154:	f82a 6009 	strh.w	r6, [sl, r9]
 801a158:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a15a:	4460      	add	r0, ip
 801a15c:	440a      	add	r2, r1
 801a15e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a162:	e757      	b.n	801a014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a164:	b005      	add	sp, #20
 801a166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a16a:	bf00      	nop
 801a16c:	fffff800 	.word	0xfffff800

0801a170 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a174:	b087      	sub	sp, #28
 801a176:	468b      	mov	fp, r1
 801a178:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a17a:	9204      	str	r2, [sp, #16]
 801a17c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a180:	9205      	str	r2, [sp, #20]
 801a182:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a186:	6841      	ldr	r1, [r0, #4]
 801a188:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a18c:	fb01 2404 	mla	r4, r1, r4, r2
 801a190:	6802      	ldr	r2, [r0, #0]
 801a192:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a196:	f8dc 2000 	ldr.w	r2, [ip]
 801a19a:	9201      	str	r2, [sp, #4]
 801a19c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a1a0:	3204      	adds	r2, #4
 801a1a2:	9202      	str	r2, [sp, #8]
 801a1a4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a1a8:	f1bb 0f00 	cmp.w	fp, #0
 801a1ac:	dc03      	bgt.n	801a1b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a1ae:	9a04      	ldr	r2, [sp, #16]
 801a1b0:	2a00      	cmp	r2, #0
 801a1b2:	f340 8138 	ble.w	801a426 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a1b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a1b8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a1bc:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a1c0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a1c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a1c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a1ca:	2b00      	cmp	r3, #0
 801a1cc:	dd0e      	ble.n	801a1ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a1ce:	1402      	asrs	r2, r0, #16
 801a1d0:	d405      	bmi.n	801a1de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a1d2:	42ba      	cmp	r2, r7
 801a1d4:	da03      	bge.n	801a1de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a1d6:	140a      	asrs	r2, r1, #16
 801a1d8:	d401      	bmi.n	801a1de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a1da:	42b2      	cmp	r2, r6
 801a1dc:	db07      	blt.n	801a1ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a1de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a1e0:	4410      	add	r0, r2
 801a1e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a1e4:	3b01      	subs	r3, #1
 801a1e6:	4411      	add	r1, r2
 801a1e8:	3402      	adds	r4, #2
 801a1ea:	e7ee      	b.n	801a1ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a1ec:	d019      	beq.n	801a222 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a1ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a1f0:	1e5a      	subs	r2, r3, #1
 801a1f2:	fb05 0502 	mla	r5, r5, r2, r0
 801a1f6:	142d      	asrs	r5, r5, #16
 801a1f8:	d409      	bmi.n	801a20e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a1fa:	42bd      	cmp	r5, r7
 801a1fc:	da07      	bge.n	801a20e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a1fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a200:	fb05 1202 	mla	r2, r5, r2, r1
 801a204:	1412      	asrs	r2, r2, #16
 801a206:	d402      	bmi.n	801a20e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a208:	42b2      	cmp	r2, r6
 801a20a:	f2c0 80ac 	blt.w	801a366 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a20e:	f04f 0e00 	mov.w	lr, #0
 801a212:	eb03 020e 	add.w	r2, r3, lr
 801a216:	2a00      	cmp	r2, #0
 801a218:	dc3e      	bgt.n	801a298 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a21a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a21e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a222:	f1bb 0f00 	cmp.w	fp, #0
 801a226:	f340 80fe 	ble.w	801a426 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a22a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a22e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a232:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a236:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a238:	f1bb 0b01 	subs.w	fp, fp, #1
 801a23c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a240:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a244:	eeb0 6a62 	vmov.f32	s12, s5
 801a248:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a24c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a250:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a254:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a258:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a25c:	eeb0 6a43 	vmov.f32	s12, s6
 801a260:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a264:	ee12 2a90 	vmov	r2, s5
 801a268:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a26c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a270:	ee13 2a10 	vmov	r2, s6
 801a274:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a278:	9313      	str	r3, [sp, #76]	; 0x4c
 801a27a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a27c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a280:	9a04      	ldr	r2, [sp, #16]
 801a282:	9314      	str	r3, [sp, #80]	; 0x50
 801a284:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a288:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a28a:	eeb0 3a67 	vmov.f32	s6, s15
 801a28e:	bf08      	it	eq
 801a290:	4613      	moveq	r3, r2
 801a292:	eef0 2a47 	vmov.f32	s5, s14
 801a296:	e787      	b.n	801a1a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a298:	1406      	asrs	r6, r0, #16
 801a29a:	d45d      	bmi.n	801a358 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a29c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a2a0:	42b5      	cmp	r5, r6
 801a2a2:	dd59      	ble.n	801a358 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a2a4:	140f      	asrs	r7, r1, #16
 801a2a6:	d457      	bmi.n	801a358 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a2a8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a2ac:	42ba      	cmp	r2, r7
 801a2ae:	dd53      	ble.n	801a358 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a2b0:	9a01      	ldr	r2, [sp, #4]
 801a2b2:	b22d      	sxth	r5, r5
 801a2b4:	fb07 2505 	mla	r5, r7, r5, r2
 801a2b8:	5daa      	ldrb	r2, [r5, r6]
 801a2ba:	9d02      	ldr	r5, [sp, #8]
 801a2bc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a2c0:	0e2e      	lsrs	r6, r5, #24
 801a2c2:	d049      	beq.n	801a358 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a2c4:	f06f 0201 	mvn.w	r2, #1
 801a2c8:	fb02 f20e 	mul.w	r2, r2, lr
 801a2cc:	9203      	str	r2, [sp, #12]
 801a2ce:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a2d2:	9a05      	ldr	r2, [sp, #20]
 801a2d4:	4356      	muls	r6, r2
 801a2d6:	1c72      	adds	r2, r6, #1
 801a2d8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a2dc:	1212      	asrs	r2, r2, #8
 801a2de:	fa1f f982 	uxth.w	r9, r2
 801a2e2:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a2e6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a2ea:	43d2      	mvns	r2, r2
 801a2ec:	b2d2      	uxtb	r2, r2
 801a2ee:	fb16 f609 	smulbb	r6, r6, r9
 801a2f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a2f6:	fb07 6702 	mla	r7, r7, r2, r6
 801a2fa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a2fe:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a302:	b2ed      	uxtb	r5, r5
 801a304:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a308:	fa5f f888 	uxtb.w	r8, r8
 801a30c:	fb15 f509 	smulbb	r5, r5, r9
 801a310:	fb08 5502 	mla	r5, r8, r2, r5
 801a314:	b2bf      	uxth	r7, r7
 801a316:	fb1a fa09 	smulbb	sl, sl, r9
 801a31a:	b2ad      	uxth	r5, r5
 801a31c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a320:	fb06 a602 	mla	r6, r6, r2, sl
 801a324:	1c7a      	adds	r2, r7, #1
 801a326:	f105 0a01 	add.w	sl, r5, #1
 801a32a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a32e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a332:	b2b6      	uxth	r6, r6
 801a334:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a338:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a33c:	ea4a 0707 	orr.w	r7, sl, r7
 801a340:	f106 0a01 	add.w	sl, r6, #1
 801a344:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a348:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a34c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a350:	9a03      	ldr	r2, [sp, #12]
 801a352:	ea47 070a 	orr.w	r7, r7, sl
 801a356:	52a7      	strh	r7, [r4, r2]
 801a358:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a35a:	4410      	add	r0, r2
 801a35c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a35e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a362:	4411      	add	r1, r2
 801a364:	e755      	b.n	801a212 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a366:	f04f 0800 	mov.w	r8, #0
 801a36a:	eba3 0208 	sub.w	r2, r3, r8
 801a36e:	2a00      	cmp	r2, #0
 801a370:	f77f af53 	ble.w	801a21a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a374:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a378:	9f01      	ldr	r7, [sp, #4]
 801a37a:	140a      	asrs	r2, r1, #16
 801a37c:	1405      	asrs	r5, r0, #16
 801a37e:	fb06 7202 	mla	r2, r6, r2, r7
 801a382:	5d52      	ldrb	r2, [r2, r5]
 801a384:	9d02      	ldr	r5, [sp, #8]
 801a386:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a38a:	0e2e      	lsrs	r6, r5, #24
 801a38c:	d044      	beq.n	801a418 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a38e:	9a05      	ldr	r2, [sp, #20]
 801a390:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a394:	4356      	muls	r6, r2
 801a396:	1c72      	adds	r2, r6, #1
 801a398:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a39c:	1212      	asrs	r2, r2, #8
 801a39e:	fa1f f982 	uxth.w	r9, r2
 801a3a2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a3a6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a3aa:	43d2      	mvns	r2, r2
 801a3ac:	b2d2      	uxtb	r2, r2
 801a3ae:	fb16 f609 	smulbb	r6, r6, r9
 801a3b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a3b6:	fb07 6702 	mla	r7, r7, r2, r6
 801a3ba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a3be:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a3c2:	b2ed      	uxtb	r5, r5
 801a3c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a3c8:	fa5f fe8e 	uxtb.w	lr, lr
 801a3cc:	fb15 f509 	smulbb	r5, r5, r9
 801a3d0:	fb0e 5502 	mla	r5, lr, r2, r5
 801a3d4:	b2bf      	uxth	r7, r7
 801a3d6:	fb1a fa09 	smulbb	sl, sl, r9
 801a3da:	b2ad      	uxth	r5, r5
 801a3dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a3e0:	fb06 a602 	mla	r6, r6, r2, sl
 801a3e4:	1c7a      	adds	r2, r7, #1
 801a3e6:	f105 0a01 	add.w	sl, r5, #1
 801a3ea:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a3ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a3f2:	b2b6      	uxth	r6, r6
 801a3f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a3f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a3fc:	ea4a 0707 	orr.w	r7, sl, r7
 801a400:	f106 0a01 	add.w	sl, r6, #1
 801a404:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a408:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a40c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a410:	ea47 070a 	orr.w	r7, r7, sl
 801a414:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a418:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a41a:	4410      	add	r0, r2
 801a41c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a41e:	f108 0801 	add.w	r8, r8, #1
 801a422:	4411      	add	r1, r2
 801a424:	e7a1      	b.n	801a36a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a426:	b007      	add	sp, #28
 801a428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a42c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a42c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a430:	b085      	sub	sp, #20
 801a432:	468b      	mov	fp, r1
 801a434:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a436:	9203      	str	r2, [sp, #12]
 801a438:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a43c:	6841      	ldr	r1, [r0, #4]
 801a43e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a442:	fb01 2404 	mla	r4, r1, r4, r2
 801a446:	6802      	ldr	r2, [r0, #0]
 801a448:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a44c:	f8de 2000 	ldr.w	r2, [lr]
 801a450:	9200      	str	r2, [sp, #0]
 801a452:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a456:	3204      	adds	r2, #4
 801a458:	9201      	str	r2, [sp, #4]
 801a45a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a45e:	f1bb 0f00 	cmp.w	fp, #0
 801a462:	dc03      	bgt.n	801a46c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a464:	9a03      	ldr	r2, [sp, #12]
 801a466:	2a00      	cmp	r2, #0
 801a468:	f340 8153 	ble.w	801a712 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a46c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a46e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a472:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a476:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a47a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a47c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a480:	2b00      	cmp	r3, #0
 801a482:	dd0e      	ble.n	801a4a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a484:	1408      	asrs	r0, r1, #16
 801a486:	d405      	bmi.n	801a494 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a488:	42b8      	cmp	r0, r7
 801a48a:	da03      	bge.n	801a494 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a48c:	1410      	asrs	r0, r2, #16
 801a48e:	d401      	bmi.n	801a494 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a490:	42b0      	cmp	r0, r6
 801a492:	db07      	blt.n	801a4a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a494:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a496:	4401      	add	r1, r0
 801a498:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a49a:	3b01      	subs	r3, #1
 801a49c:	4402      	add	r2, r0
 801a49e:	3402      	adds	r4, #2
 801a4a0:	e7ee      	b.n	801a480 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a4a2:	d017      	beq.n	801a4d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a4a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a4a6:	1e58      	subs	r0, r3, #1
 801a4a8:	fb05 1500 	mla	r5, r5, r0, r1
 801a4ac:	142d      	asrs	r5, r5, #16
 801a4ae:	d409      	bmi.n	801a4c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a4b0:	42bd      	cmp	r5, r7
 801a4b2:	da07      	bge.n	801a4c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a4b4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a4b6:	fb05 2000 	mla	r0, r5, r0, r2
 801a4ba:	1400      	asrs	r0, r0, #16
 801a4bc:	d402      	bmi.n	801a4c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a4be:	42b0      	cmp	r0, r6
 801a4c0:	f2c0 80bc 	blt.w	801a63c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a4c4:	2600      	movs	r6, #0
 801a4c6:	1998      	adds	r0, r3, r6
 801a4c8:	2800      	cmp	r0, #0
 801a4ca:	dc3e      	bgt.n	801a54a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a4cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a4d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a4d4:	f1bb 0f00 	cmp.w	fp, #0
 801a4d8:	f340 811b 	ble.w	801a712 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a4dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a4e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a4e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a4e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4ea:	f1bb 0b01 	subs.w	fp, fp, #1
 801a4ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a4f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a4f6:	eeb0 6a62 	vmov.f32	s12, s5
 801a4fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a4fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a502:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a506:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a50a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a50e:	eeb0 6a43 	vmov.f32	s12, s6
 801a512:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a516:	ee12 2a90 	vmov	r2, s5
 801a51a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a51e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a522:	ee13 2a10 	vmov	r2, s6
 801a526:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a52a:	9311      	str	r3, [sp, #68]	; 0x44
 801a52c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a52e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a532:	9a03      	ldr	r2, [sp, #12]
 801a534:	9312      	str	r3, [sp, #72]	; 0x48
 801a536:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a53a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a53c:	eeb0 3a67 	vmov.f32	s6, s15
 801a540:	bf08      	it	eq
 801a542:	4613      	moveq	r3, r2
 801a544:	eef0 2a47 	vmov.f32	s5, s14
 801a548:	e789      	b.n	801a45e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a54a:	140f      	asrs	r7, r1, #16
 801a54c:	d426      	bmi.n	801a59c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a54e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a552:	42bd      	cmp	r5, r7
 801a554:	dd22      	ble.n	801a59c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a556:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a55a:	d41f      	bmi.n	801a59c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a55c:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a560:	4560      	cmp	r0, ip
 801a562:	dd1b      	ble.n	801a59c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a564:	9800      	ldr	r0, [sp, #0]
 801a566:	b22d      	sxth	r5, r5
 801a568:	fb0c 0505 	mla	r5, ip, r5, r0
 801a56c:	5de8      	ldrb	r0, [r5, r7]
 801a56e:	9d01      	ldr	r5, [sp, #4]
 801a570:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a574:	0e07      	lsrs	r7, r0, #24
 801a576:	2fff      	cmp	r7, #255	; 0xff
 801a578:	d116      	bne.n	801a5a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a57a:	f06f 0501 	mvn.w	r5, #1
 801a57e:	fb05 f706 	mul.w	r7, r5, r6
 801a582:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a586:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a58a:	0945      	lsrs	r5, r0, #5
 801a58c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a590:	ea4c 0505 	orr.w	r5, ip, r5
 801a594:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a598:	4305      	orrs	r5, r0
 801a59a:	53e5      	strh	r5, [r4, r7]
 801a59c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a59e:	4401      	add	r1, r0
 801a5a0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a5a2:	3e01      	subs	r6, #1
 801a5a4:	4402      	add	r2, r0
 801a5a6:	e78e      	b.n	801a4c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a5a8:	b2fd      	uxtb	r5, r7
 801a5aa:	2f00      	cmp	r7, #0
 801a5ac:	d0f6      	beq.n	801a59c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a5ae:	f06f 0701 	mvn.w	r7, #1
 801a5b2:	4377      	muls	r7, r6
 801a5b4:	fa1f f985 	uxth.w	r9, r5
 801a5b8:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a5bc:	9702      	str	r7, [sp, #8]
 801a5be:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a5c2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a5c6:	43ed      	mvns	r5, r5
 801a5c8:	b2ed      	uxtb	r5, r5
 801a5ca:	fb17 f709 	smulbb	r7, r7, r9
 801a5ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a5d2:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a5d6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a5da:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a5de:	b2c0      	uxtb	r0, r0
 801a5e0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a5e4:	fa5f f888 	uxtb.w	r8, r8
 801a5e8:	fb10 f009 	smulbb	r0, r0, r9
 801a5ec:	fb08 0005 	mla	r0, r8, r5, r0
 801a5f0:	b280      	uxth	r0, r0
 801a5f2:	fa1f fc8c 	uxth.w	ip, ip
 801a5f6:	fb1a fa09 	smulbb	sl, sl, r9
 801a5fa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a5fe:	fb07 a705 	mla	r7, r7, r5, sl
 801a602:	f100 0a01 	add.w	sl, r0, #1
 801a606:	f10c 0501 	add.w	r5, ip, #1
 801a60a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a60e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a612:	b2bf      	uxth	r7, r7
 801a614:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a618:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a61c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a620:	f107 0a01 	add.w	sl, r7, #1
 801a624:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a628:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a62c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a630:	9802      	ldr	r0, [sp, #8]
 801a632:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a636:	f824 c000 	strh.w	ip, [r4, r0]
 801a63a:	e7af      	b.n	801a59c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a63c:	f04f 0800 	mov.w	r8, #0
 801a640:	eba3 0008 	sub.w	r0, r3, r8
 801a644:	2800      	cmp	r0, #0
 801a646:	f77f af41 	ble.w	801a4cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a64a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a64e:	9f00      	ldr	r7, [sp, #0]
 801a650:	1410      	asrs	r0, r2, #16
 801a652:	140d      	asrs	r5, r1, #16
 801a654:	fb06 7000 	mla	r0, r6, r0, r7
 801a658:	5d40      	ldrb	r0, [r0, r5]
 801a65a:	9d01      	ldr	r5, [sp, #4]
 801a65c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a660:	0e2e      	lsrs	r6, r5, #24
 801a662:	2eff      	cmp	r6, #255	; 0xff
 801a664:	d112      	bne.n	801a68c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a666:	482c      	ldr	r0, [pc, #176]	; (801a718 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a668:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a66c:	0968      	lsrs	r0, r5, #5
 801a66e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a672:	4330      	orrs	r0, r6
 801a674:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a678:	4328      	orrs	r0, r5
 801a67a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a67e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a680:	4401      	add	r1, r0
 801a682:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a684:	f108 0801 	add.w	r8, r8, #1
 801a688:	4402      	add	r2, r0
 801a68a:	e7d9      	b.n	801a640 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a68c:	b2f0      	uxtb	r0, r6
 801a68e:	2e00      	cmp	r6, #0
 801a690:	d0f5      	beq.n	801a67e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a692:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a696:	fa1f f980 	uxth.w	r9, r0
 801a69a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a69e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a6a2:	43c0      	mvns	r0, r0
 801a6a4:	b2c0      	uxtb	r0, r0
 801a6a6:	fb16 f609 	smulbb	r6, r6, r9
 801a6aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a6ae:	fb07 6700 	mla	r7, r7, r0, r6
 801a6b2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a6b6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a6ba:	b2ed      	uxtb	r5, r5
 801a6bc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a6c0:	fa5f fc8c 	uxtb.w	ip, ip
 801a6c4:	fb15 f509 	smulbb	r5, r5, r9
 801a6c8:	fb0c 5500 	mla	r5, ip, r0, r5
 801a6cc:	b2bf      	uxth	r7, r7
 801a6ce:	fb1a fa09 	smulbb	sl, sl, r9
 801a6d2:	b2ad      	uxth	r5, r5
 801a6d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a6d8:	fb06 a600 	mla	r6, r6, r0, sl
 801a6dc:	1c78      	adds	r0, r7, #1
 801a6de:	f105 0a01 	add.w	sl, r5, #1
 801a6e2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a6e6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a6ea:	b2b6      	uxth	r6, r6
 801a6ec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a6f0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a6f4:	ea4a 0707 	orr.w	r7, sl, r7
 801a6f8:	f106 0a01 	add.w	sl, r6, #1
 801a6fc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a700:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a704:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a708:	ea47 070a 	orr.w	r7, r7, sl
 801a70c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a710:	e7b5      	b.n	801a67e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a712:	b005      	add	sp, #20
 801a714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a718:	fffff800 	.word	0xfffff800

0801a71c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a71c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a720:	b087      	sub	sp, #28
 801a722:	468b      	mov	fp, r1
 801a724:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a726:	9204      	str	r2, [sp, #16]
 801a728:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a72c:	9205      	str	r2, [sp, #20]
 801a72e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a732:	6861      	ldr	r1, [r4, #4]
 801a734:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a738:	fb01 2000 	mla	r0, r1, r0, r2
 801a73c:	6822      	ldr	r2, [r4, #0]
 801a73e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a742:	f8de 2000 	ldr.w	r2, [lr]
 801a746:	9201      	str	r2, [sp, #4]
 801a748:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a74c:	9202      	str	r2, [sp, #8]
 801a74e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a752:	f1bb 0f00 	cmp.w	fp, #0
 801a756:	dc03      	bgt.n	801a760 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a758:	9a04      	ldr	r2, [sp, #16]
 801a75a:	2a00      	cmp	r2, #0
 801a75c:	f340 8142 	ble.w	801a9e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a760:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a762:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a766:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a76a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a76e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a770:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a774:	2b00      	cmp	r3, #0
 801a776:	dd0e      	ble.n	801a796 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a778:	140c      	asrs	r4, r1, #16
 801a77a:	d405      	bmi.n	801a788 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a77c:	42bc      	cmp	r4, r7
 801a77e:	da03      	bge.n	801a788 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a780:	1414      	asrs	r4, r2, #16
 801a782:	d401      	bmi.n	801a788 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a784:	42b4      	cmp	r4, r6
 801a786:	db07      	blt.n	801a798 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a788:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a78a:	4421      	add	r1, r4
 801a78c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a78e:	3b01      	subs	r3, #1
 801a790:	4422      	add	r2, r4
 801a792:	3002      	adds	r0, #2
 801a794:	e7ee      	b.n	801a774 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a796:	d019      	beq.n	801a7cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a798:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a79a:	1e5c      	subs	r4, r3, #1
 801a79c:	fb05 1504 	mla	r5, r5, r4, r1
 801a7a0:	142d      	asrs	r5, r5, #16
 801a7a2:	d409      	bmi.n	801a7b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a7a4:	42bd      	cmp	r5, r7
 801a7a6:	da07      	bge.n	801a7b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a7a8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a7aa:	fb05 2404 	mla	r4, r5, r4, r2
 801a7ae:	1424      	asrs	r4, r4, #16
 801a7b0:	d402      	bmi.n	801a7b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a7b2:	42b4      	cmp	r4, r6
 801a7b4:	f2c0 80b1 	blt.w	801a91a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a7b8:	f04f 0800 	mov.w	r8, #0
 801a7bc:	eb03 0408 	add.w	r4, r3, r8
 801a7c0:	2c00      	cmp	r4, #0
 801a7c2:	dc3e      	bgt.n	801a842 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a7c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a7c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a7cc:	f1bb 0f00 	cmp.w	fp, #0
 801a7d0:	f340 8108 	ble.w	801a9e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a7d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a7d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a7dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a7e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7e2:	f1bb 0b01 	subs.w	fp, fp, #1
 801a7e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a7ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a7ee:	eeb0 6a62 	vmov.f32	s12, s5
 801a7f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a7fe:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a802:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a806:	eeb0 6a43 	vmov.f32	s12, s6
 801a80a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a80e:	ee12 2a90 	vmov	r2, s5
 801a812:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a816:	fb92 f3f3 	sdiv	r3, r2, r3
 801a81a:	ee13 2a10 	vmov	r2, s6
 801a81e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a822:	9313      	str	r3, [sp, #76]	; 0x4c
 801a824:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a826:	fb92 f3f3 	sdiv	r3, r2, r3
 801a82a:	9a04      	ldr	r2, [sp, #16]
 801a82c:	9314      	str	r3, [sp, #80]	; 0x50
 801a82e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a832:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a834:	eeb0 3a67 	vmov.f32	s6, s15
 801a838:	bf08      	it	eq
 801a83a:	4613      	moveq	r3, r2
 801a83c:	eef0 2a47 	vmov.f32	s5, s14
 801a840:	e787      	b.n	801a752 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a842:	140e      	asrs	r6, r1, #16
 801a844:	d462      	bmi.n	801a90c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a846:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a84a:	42b5      	cmp	r5, r6
 801a84c:	dd5e      	ble.n	801a90c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a84e:	1417      	asrs	r7, r2, #16
 801a850:	d45c      	bmi.n	801a90c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a852:	f8de 400c 	ldr.w	r4, [lr, #12]
 801a856:	42bc      	cmp	r4, r7
 801a858:	dd58      	ble.n	801a90c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a85a:	b22d      	sxth	r5, r5
 801a85c:	fb07 6505 	mla	r5, r7, r5, r6
 801a860:	9c02      	ldr	r4, [sp, #8]
 801a862:	5d66      	ldrb	r6, [r4, r5]
 801a864:	2e00      	cmp	r6, #0
 801a866:	d051      	beq.n	801a90c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a868:	9c01      	ldr	r4, [sp, #4]
 801a86a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801a86e:	f06f 0401 	mvn.w	r4, #1
 801a872:	fb04 f408 	mul.w	r4, r4, r8
 801a876:	9403      	str	r4, [sp, #12]
 801a878:	5b05      	ldrh	r5, [r0, r4]
 801a87a:	9c05      	ldr	r4, [sp, #20]
 801a87c:	4366      	muls	r6, r4
 801a87e:	1c74      	adds	r4, r6, #1
 801a880:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a884:	1224      	asrs	r4, r4, #8
 801a886:	b2a7      	uxth	r7, r4
 801a888:	122e      	asrs	r6, r5, #8
 801a88a:	43e4      	mvns	r4, r4
 801a88c:	b2e4      	uxtb	r4, r4
 801a88e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801a892:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a896:	fb16 f604 	smulbb	r6, r6, r4
 801a89a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a89e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a8a2:	00ed      	lsls	r5, r5, #3
 801a8a4:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a8a8:	b2ed      	uxtb	r5, r5
 801a8aa:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801a8ae:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a8b2:	fb15 f504 	smulbb	r5, r5, r4
 801a8b6:	fa5f f989 	uxtb.w	r9, r9
 801a8ba:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a8be:	fb09 5507 	mla	r5, r9, r7, r5
 801a8c2:	fb1a fa04 	smulbb	sl, sl, r4
 801a8c6:	fa1f fc8c 	uxth.w	ip, ip
 801a8ca:	b2ad      	uxth	r5, r5
 801a8cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a8d0:	fb06 a607 	mla	r6, r6, r7, sl
 801a8d4:	f10c 0401 	add.w	r4, ip, #1
 801a8d8:	f105 0a01 	add.w	sl, r5, #1
 801a8dc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a8e0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a8e4:	b2b6      	uxth	r6, r6
 801a8e6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a8ea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a8ee:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a8f2:	f106 0a01 	add.w	sl, r6, #1
 801a8f6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a8fa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a8fe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a902:	9c03      	ldr	r4, [sp, #12]
 801a904:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a908:	f820 c004 	strh.w	ip, [r0, r4]
 801a90c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a90e:	4421      	add	r1, r4
 801a910:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a912:	f108 38ff 	add.w	r8, r8, #4294967295
 801a916:	4422      	add	r2, r4
 801a918:	e750      	b.n	801a7bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a91a:	f04f 0900 	mov.w	r9, #0
 801a91e:	eba3 0409 	sub.w	r4, r3, r9
 801a922:	2c00      	cmp	r4, #0
 801a924:	f77f af4e 	ble.w	801a7c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a928:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a92c:	140d      	asrs	r5, r1, #16
 801a92e:	1414      	asrs	r4, r2, #16
 801a930:	fb06 5404 	mla	r4, r6, r4, r5
 801a934:	9d02      	ldr	r5, [sp, #8]
 801a936:	5d2e      	ldrb	r6, [r5, r4]
 801a938:	2e00      	cmp	r6, #0
 801a93a:	d04c      	beq.n	801a9d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801a93c:	9d01      	ldr	r5, [sp, #4]
 801a93e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801a942:	9c05      	ldr	r4, [sp, #20]
 801a944:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a948:	4366      	muls	r6, r4
 801a94a:	1c74      	adds	r4, r6, #1
 801a94c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a950:	1224      	asrs	r4, r4, #8
 801a952:	b2a7      	uxth	r7, r4
 801a954:	122e      	asrs	r6, r5, #8
 801a956:	43e4      	mvns	r4, r4
 801a958:	b2e4      	uxtb	r4, r4
 801a95a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a95e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a962:	fb16 f604 	smulbb	r6, r6, r4
 801a966:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a96a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a96e:	00ed      	lsls	r5, r5, #3
 801a970:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a974:	b2ed      	uxtb	r5, r5
 801a976:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a97a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a97e:	fb15 f504 	smulbb	r5, r5, r4
 801a982:	fa5f f888 	uxtb.w	r8, r8
 801a986:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a98a:	fb08 5507 	mla	r5, r8, r7, r5
 801a98e:	fb1a fa04 	smulbb	sl, sl, r4
 801a992:	fa1f fc8c 	uxth.w	ip, ip
 801a996:	b2ad      	uxth	r5, r5
 801a998:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a99c:	fb06 a607 	mla	r6, r6, r7, sl
 801a9a0:	f10c 0401 	add.w	r4, ip, #1
 801a9a4:	f105 0a01 	add.w	sl, r5, #1
 801a9a8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a9ac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a9b0:	b2b6      	uxth	r6, r6
 801a9b2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a9b6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a9ba:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a9be:	f106 0a01 	add.w	sl, r6, #1
 801a9c2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a9c6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a9ca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a9ce:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a9d2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a9d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a9d8:	4421      	add	r1, r4
 801a9da:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a9dc:	f109 0901 	add.w	r9, r9, #1
 801a9e0:	4422      	add	r2, r4
 801a9e2:	e79c      	b.n	801a91e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801a9e4:	b007      	add	sp, #28
 801a9e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a9ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a9ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9ee:	b085      	sub	sp, #20
 801a9f0:	468b      	mov	fp, r1
 801a9f2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a9f4:	9203      	str	r2, [sp, #12]
 801a9f6:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801a9fa:	6861      	ldr	r1, [r4, #4]
 801a9fc:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801aa00:	fb01 2000 	mla	r0, r1, r0, r2
 801aa04:	6822      	ldr	r2, [r4, #0]
 801aa06:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801aa0a:	f8d8 2000 	ldr.w	r2, [r8]
 801aa0e:	9200      	str	r2, [sp, #0]
 801aa10:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801aa14:	9201      	str	r2, [sp, #4]
 801aa16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aa1a:	f1bb 0f00 	cmp.w	fp, #0
 801aa1e:	dc03      	bgt.n	801aa28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801aa20:	9a03      	ldr	r2, [sp, #12]
 801aa22:	2a00      	cmp	r2, #0
 801aa24:	f340 8146 	ble.w	801acb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801aa28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aa2a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801aa2e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801aa32:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aa38:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aa3c:	2b00      	cmp	r3, #0
 801aa3e:	dd0e      	ble.n	801aa5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801aa40:	140c      	asrs	r4, r1, #16
 801aa42:	d405      	bmi.n	801aa50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801aa44:	42bc      	cmp	r4, r7
 801aa46:	da03      	bge.n	801aa50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801aa48:	1414      	asrs	r4, r2, #16
 801aa4a:	d401      	bmi.n	801aa50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801aa4c:	42b4      	cmp	r4, r6
 801aa4e:	db07      	blt.n	801aa60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801aa50:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aa52:	4421      	add	r1, r4
 801aa54:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aa56:	3b01      	subs	r3, #1
 801aa58:	4422      	add	r2, r4
 801aa5a:	3002      	adds	r0, #2
 801aa5c:	e7ee      	b.n	801aa3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801aa5e:	d017      	beq.n	801aa90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801aa60:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aa62:	1e5c      	subs	r4, r3, #1
 801aa64:	fb05 1504 	mla	r5, r5, r4, r1
 801aa68:	142d      	asrs	r5, r5, #16
 801aa6a:	d409      	bmi.n	801aa80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801aa6c:	42bd      	cmp	r5, r7
 801aa6e:	da07      	bge.n	801aa80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801aa70:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801aa72:	fb05 2404 	mla	r4, r5, r4, r2
 801aa76:	1424      	asrs	r4, r4, #16
 801aa78:	d402      	bmi.n	801aa80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801aa7a:	42b4      	cmp	r4, r6
 801aa7c:	f2c0 80b3 	blt.w	801abe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801aa80:	2600      	movs	r6, #0
 801aa82:	199c      	adds	r4, r3, r6
 801aa84:	2c00      	cmp	r4, #0
 801aa86:	dc3e      	bgt.n	801ab06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801aa88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aa8c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aa90:	f1bb 0f00 	cmp.w	fp, #0
 801aa94:	f340 810e 	ble.w	801acb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801aa98:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aa9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aaa0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aaa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aaa6:	f1bb 0b01 	subs.w	fp, fp, #1
 801aaaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aaae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aab2:	eeb0 6a62 	vmov.f32	s12, s5
 801aab6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aaba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aabe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aac2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801aac6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aaca:	eeb0 6a43 	vmov.f32	s12, s6
 801aace:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aad2:	ee12 2a90 	vmov	r2, s5
 801aad6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aada:	fb92 f3f3 	sdiv	r3, r2, r3
 801aade:	ee13 2a10 	vmov	r2, s6
 801aae2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aae6:	9311      	str	r3, [sp, #68]	; 0x44
 801aae8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aaea:	fb92 f3f3 	sdiv	r3, r2, r3
 801aaee:	9a03      	ldr	r2, [sp, #12]
 801aaf0:	9312      	str	r3, [sp, #72]	; 0x48
 801aaf2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801aaf6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aaf8:	eeb0 3a67 	vmov.f32	s6, s15
 801aafc:	bf08      	it	eq
 801aafe:	4613      	moveq	r3, r2
 801ab00:	eef0 2a47 	vmov.f32	s5, s14
 801ab04:	e789      	b.n	801aa1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ab06:	140f      	asrs	r7, r1, #16
 801ab08:	d418      	bmi.n	801ab3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ab0a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801ab0e:	42bd      	cmp	r5, r7
 801ab10:	dd14      	ble.n	801ab3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ab12:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ab16:	d411      	bmi.n	801ab3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ab18:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801ab1c:	4564      	cmp	r4, ip
 801ab1e:	dd0d      	ble.n	801ab3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ab20:	b22d      	sxth	r5, r5
 801ab22:	fb0c 7505 	mla	r5, ip, r5, r7
 801ab26:	9c01      	ldr	r4, [sp, #4]
 801ab28:	5d64      	ldrb	r4, [r4, r5]
 801ab2a:	2cff      	cmp	r4, #255	; 0xff
 801ab2c:	d10c      	bne.n	801ab48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801ab2e:	9c00      	ldr	r4, [sp, #0]
 801ab30:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801ab34:	f06f 0401 	mvn.w	r4, #1
 801ab38:	4374      	muls	r4, r6
 801ab3a:	5305      	strh	r5, [r0, r4]
 801ab3c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ab3e:	4421      	add	r1, r4
 801ab40:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ab42:	3e01      	subs	r6, #1
 801ab44:	4422      	add	r2, r4
 801ab46:	e79c      	b.n	801aa82 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ab48:	2c00      	cmp	r4, #0
 801ab4a:	d0f7      	beq.n	801ab3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ab4c:	9f00      	ldr	r7, [sp, #0]
 801ab4e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801ab52:	f06f 0501 	mvn.w	r5, #1
 801ab56:	4375      	muls	r5, r6
 801ab58:	9502      	str	r5, [sp, #8]
 801ab5a:	5b45      	ldrh	r5, [r0, r5]
 801ab5c:	fa1f fc84 	uxth.w	ip, r4
 801ab60:	122f      	asrs	r7, r5, #8
 801ab62:	43e4      	mvns	r4, r4
 801ab64:	b2e4      	uxtb	r4, r4
 801ab66:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ab6a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ab6e:	fb17 f704 	smulbb	r7, r7, r4
 801ab72:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ab76:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ab7a:	00ed      	lsls	r5, r5, #3
 801ab7c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ab80:	b2ed      	uxtb	r5, r5
 801ab82:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ab86:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ab8a:	fb15 f504 	smulbb	r5, r5, r4
 801ab8e:	fa5f f989 	uxtb.w	r9, r9
 801ab92:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ab96:	fb09 550c 	mla	r5, r9, ip, r5
 801ab9a:	fb1a fa04 	smulbb	sl, sl, r4
 801ab9e:	fa1f fe8e 	uxth.w	lr, lr
 801aba2:	b2ad      	uxth	r5, r5
 801aba4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aba8:	fb07 a70c 	mla	r7, r7, ip, sl
 801abac:	f10e 0401 	add.w	r4, lr, #1
 801abb0:	f105 0a01 	add.w	sl, r5, #1
 801abb4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801abb8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801abbc:	b2bf      	uxth	r7, r7
 801abbe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801abc2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801abc6:	ea4a 0e0e 	orr.w	lr, sl, lr
 801abca:	f107 0a01 	add.w	sl, r7, #1
 801abce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801abd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801abd6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801abda:	9c02      	ldr	r4, [sp, #8]
 801abdc:	ea4e 0e0a 	orr.w	lr, lr, sl
 801abe0:	f820 e004 	strh.w	lr, [r0, r4]
 801abe4:	e7aa      	b.n	801ab3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801abe6:	f04f 0900 	mov.w	r9, #0
 801abea:	eba3 0409 	sub.w	r4, r3, r9
 801abee:	2c00      	cmp	r4, #0
 801abf0:	f77f af4a 	ble.w	801aa88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801abf4:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801abf8:	1414      	asrs	r4, r2, #16
 801abfa:	140d      	asrs	r5, r1, #16
 801abfc:	fb06 5504 	mla	r5, r6, r4, r5
 801ac00:	9c01      	ldr	r4, [sp, #4]
 801ac02:	5d64      	ldrb	r4, [r4, r5]
 801ac04:	2cff      	cmp	r4, #255	; 0xff
 801ac06:	d10b      	bne.n	801ac20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ac08:	9c00      	ldr	r4, [sp, #0]
 801ac0a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801ac0e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801ac12:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ac14:	4421      	add	r1, r4
 801ac16:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ac18:	f109 0901 	add.w	r9, r9, #1
 801ac1c:	4422      	add	r2, r4
 801ac1e:	e7e4      	b.n	801abea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ac20:	2c00      	cmp	r4, #0
 801ac22:	d0f6      	beq.n	801ac12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ac24:	9e00      	ldr	r6, [sp, #0]
 801ac26:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801ac2a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ac2e:	b2a7      	uxth	r7, r4
 801ac30:	122e      	asrs	r6, r5, #8
 801ac32:	43e4      	mvns	r4, r4
 801ac34:	b2e4      	uxtb	r4, r4
 801ac36:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ac3a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ac3e:	fb16 f604 	smulbb	r6, r6, r4
 801ac42:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ac46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac4a:	00ed      	lsls	r5, r5, #3
 801ac4c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ac50:	b2ed      	uxtb	r5, r5
 801ac52:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ac56:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ac5a:	fb15 f504 	smulbb	r5, r5, r4
 801ac5e:	fa5f fe8e 	uxtb.w	lr, lr
 801ac62:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ac66:	fb0e 5507 	mla	r5, lr, r7, r5
 801ac6a:	fb1a fa04 	smulbb	sl, sl, r4
 801ac6e:	fa1f fc8c 	uxth.w	ip, ip
 801ac72:	b2ad      	uxth	r5, r5
 801ac74:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ac78:	fb06 a607 	mla	r6, r6, r7, sl
 801ac7c:	f10c 0401 	add.w	r4, ip, #1
 801ac80:	f105 0a01 	add.w	sl, r5, #1
 801ac84:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ac88:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ac8c:	b2b6      	uxth	r6, r6
 801ac8e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac96:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ac9a:	f106 0a01 	add.w	sl, r6, #1
 801ac9e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aca2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aca6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801acaa:	ea4c 0c0a 	orr.w	ip, ip, sl
 801acae:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801acb2:	e7ae      	b.n	801ac12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801acb4:	b005      	add	sp, #20
 801acb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801acba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801acba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acbe:	b085      	sub	sp, #20
 801acc0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801acc2:	9203      	str	r2, [sp, #12]
 801acc4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801acc8:	9201      	str	r2, [sp, #4]
 801acca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801acce:	9100      	str	r1, [sp, #0]
 801acd0:	6841      	ldr	r1, [r0, #4]
 801acd2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801acd6:	fb01 2404 	mla	r4, r1, r4, r2
 801acda:	6802      	ldr	r2, [r0, #0]
 801acdc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ace0:	f8de 2000 	ldr.w	r2, [lr]
 801ace4:	9202      	str	r2, [sp, #8]
 801ace6:	9a01      	ldr	r2, [sp, #4]
 801ace8:	43d6      	mvns	r6, r2
 801acea:	b2f6      	uxtb	r6, r6
 801acec:	9a00      	ldr	r2, [sp, #0]
 801acee:	2a00      	cmp	r2, #0
 801acf0:	dc03      	bgt.n	801acfa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801acf2:	9a03      	ldr	r2, [sp, #12]
 801acf4:	2a00      	cmp	r2, #0
 801acf6:	f340 8124 	ble.w	801af42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801acfa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801acfc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ad00:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ad04:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ad08:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ad0a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ad0e:	2b00      	cmp	r3, #0
 801ad10:	dd0e      	ble.n	801ad30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ad12:	1408      	asrs	r0, r1, #16
 801ad14:	d405      	bmi.n	801ad22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ad16:	4560      	cmp	r0, ip
 801ad18:	da03      	bge.n	801ad22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ad1a:	1410      	asrs	r0, r2, #16
 801ad1c:	d401      	bmi.n	801ad22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ad1e:	42b8      	cmp	r0, r7
 801ad20:	db07      	blt.n	801ad32 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ad22:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ad24:	4401      	add	r1, r0
 801ad26:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ad28:	3b01      	subs	r3, #1
 801ad2a:	4402      	add	r2, r0
 801ad2c:	3402      	adds	r4, #2
 801ad2e:	e7ee      	b.n	801ad0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ad30:	d06e      	beq.n	801ae10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801ad32:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ad34:	1e58      	subs	r0, r3, #1
 801ad36:	fb05 1500 	mla	r5, r5, r0, r1
 801ad3a:	142d      	asrs	r5, r5, #16
 801ad3c:	d45c      	bmi.n	801adf8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ad3e:	4565      	cmp	r5, ip
 801ad40:	da5a      	bge.n	801adf8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ad42:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ad44:	fb05 2000 	mla	r0, r5, r0, r2
 801ad48:	1400      	asrs	r0, r0, #16
 801ad4a:	d455      	bmi.n	801adf8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ad4c:	42b8      	cmp	r0, r7
 801ad4e:	da53      	bge.n	801adf8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ad50:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801ad54:	4699      	mov	r9, r3
 801ad56:	46a2      	mov	sl, r4
 801ad58:	f1b9 0f00 	cmp.w	r9, #0
 801ad5c:	dd54      	ble.n	801ae08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ad5e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ad62:	140d      	asrs	r5, r1, #16
 801ad64:	1410      	asrs	r0, r2, #16
 801ad66:	fb07 5000 	mla	r0, r7, r0, r5
 801ad6a:	9d02      	ldr	r5, [sp, #8]
 801ad6c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ad70:	f8ba 5000 	ldrh.w	r5, [sl]
 801ad74:	122f      	asrs	r7, r5, #8
 801ad76:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ad7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ad7e:	fb17 f706 	smulbb	r7, r7, r6
 801ad82:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ad86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ad8a:	00ed      	lsls	r5, r5, #3
 801ad8c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ad90:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801ad94:	10c7      	asrs	r7, r0, #3
 801ad96:	b2ed      	uxtb	r5, r5
 801ad98:	00c0      	lsls	r0, r0, #3
 801ad9a:	fb18 f806 	smulbb	r8, r8, r6
 801ad9e:	fb15 f506 	smulbb	r5, r5, r6
 801ada2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ada6:	b2c0      	uxtb	r0, r0
 801ada8:	fa1f fc8c 	uxth.w	ip, ip
 801adac:	fb07 870b 	mla	r7, r7, fp, r8
 801adb0:	fb00 500b 	mla	r0, r0, fp, r5
 801adb4:	b280      	uxth	r0, r0
 801adb6:	b2bf      	uxth	r7, r7
 801adb8:	f10c 0501 	add.w	r5, ip, #1
 801adbc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801adc0:	f107 0801 	add.w	r8, r7, #1
 801adc4:	1c45      	adds	r5, r0, #1
 801adc6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801adca:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801adce:	9811      	ldr	r0, [sp, #68]	; 0x44
 801add0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801add4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801add8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801addc:	ea45 0c0c 	orr.w	ip, r5, ip
 801ade0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ade4:	4401      	add	r1, r0
 801ade6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ade8:	ea4c 0c08 	orr.w	ip, ip, r8
 801adec:	f82a cb02 	strh.w	ip, [sl], #2
 801adf0:	4402      	add	r2, r0
 801adf2:	f109 39ff 	add.w	r9, r9, #4294967295
 801adf6:	e7af      	b.n	801ad58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801adf8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801adfc:	f04f 0800 	mov.w	r8, #0
 801ae00:	eb03 0008 	add.w	r0, r3, r8
 801ae04:	2800      	cmp	r0, #0
 801ae06:	dc41      	bgt.n	801ae8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801ae08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ae0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ae10:	9b00      	ldr	r3, [sp, #0]
 801ae12:	2b00      	cmp	r3, #0
 801ae14:	f340 8095 	ble.w	801af42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ae18:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae20:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ae24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ae32:	eef0 6a62 	vmov.f32	s13, s5
 801ae36:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae42:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801ae46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae4a:	eef0 6a43 	vmov.f32	s13, s6
 801ae4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae52:	ee12 2a90 	vmov	r2, s5
 801ae56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae5a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae5e:	ee13 2a10 	vmov	r2, s6
 801ae62:	9311      	str	r3, [sp, #68]	; 0x44
 801ae64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae66:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae6a:	9312      	str	r3, [sp, #72]	; 0x48
 801ae6c:	9b00      	ldr	r3, [sp, #0]
 801ae6e:	9a03      	ldr	r2, [sp, #12]
 801ae70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae74:	3b01      	subs	r3, #1
 801ae76:	9300      	str	r3, [sp, #0]
 801ae78:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801ae7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae7e:	eeb0 3a67 	vmov.f32	s6, s15
 801ae82:	bf08      	it	eq
 801ae84:	4613      	moveq	r3, r2
 801ae86:	eef0 2a47 	vmov.f32	s5, s14
 801ae8a:	e72f      	b.n	801acec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ae8c:	140f      	asrs	r7, r1, #16
 801ae8e:	d451      	bmi.n	801af34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ae90:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ae94:	42bd      	cmp	r5, r7
 801ae96:	dd4d      	ble.n	801af34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ae98:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ae9c:	d44a      	bmi.n	801af34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ae9e:	f8de 000c 	ldr.w	r0, [lr, #12]
 801aea2:	4560      	cmp	r0, ip
 801aea4:	dd46      	ble.n	801af34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801aea6:	b22d      	sxth	r5, r5
 801aea8:	fb0c 7505 	mla	r5, ip, r5, r7
 801aeac:	9802      	ldr	r0, [sp, #8]
 801aeae:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801aeb2:	f06f 0501 	mvn.w	r5, #1
 801aeb6:	fb05 fb08 	mul.w	fp, r5, r8
 801aeba:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801aebe:	f834 500b 	ldrh.w	r5, [r4, fp]
 801aec2:	122f      	asrs	r7, r5, #8
 801aec4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aec8:	fb17 f706 	smulbb	r7, r7, r6
 801aecc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801aed0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aed4:	00ed      	lsls	r5, r5, #3
 801aed6:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801aeda:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801aede:	10c7      	asrs	r7, r0, #3
 801aee0:	b2ed      	uxtb	r5, r5
 801aee2:	00c0      	lsls	r0, r0, #3
 801aee4:	fb19 f906 	smulbb	r9, r9, r6
 801aee8:	fb15 f506 	smulbb	r5, r5, r6
 801aeec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aef0:	b2c0      	uxtb	r0, r0
 801aef2:	fa1f fc8c 	uxth.w	ip, ip
 801aef6:	fb07 970a 	mla	r7, r7, sl, r9
 801aefa:	fb00 500a 	mla	r0, r0, sl, r5
 801aefe:	b2bf      	uxth	r7, r7
 801af00:	b280      	uxth	r0, r0
 801af02:	f10c 0501 	add.w	r5, ip, #1
 801af06:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801af0a:	f107 0901 	add.w	r9, r7, #1
 801af0e:	1c45      	adds	r5, r0, #1
 801af10:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801af14:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801af18:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801af1c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801af20:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801af24:	ea45 0c0c 	orr.w	ip, r5, ip
 801af28:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801af2c:	ea4c 0c09 	orr.w	ip, ip, r9
 801af30:	f824 c00b 	strh.w	ip, [r4, fp]
 801af34:	9811      	ldr	r0, [sp, #68]	; 0x44
 801af36:	4401      	add	r1, r0
 801af38:	9812      	ldr	r0, [sp, #72]	; 0x48
 801af3a:	f108 38ff 	add.w	r8, r8, #4294967295
 801af3e:	4402      	add	r2, r0
 801af40:	e75e      	b.n	801ae00 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801af42:	b005      	add	sp, #20
 801af44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801af48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af4c:	b085      	sub	sp, #20
 801af4e:	4693      	mov	fp, r2
 801af50:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801af52:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801af54:	6870      	ldr	r0, [r6, #4]
 801af56:	9101      	str	r1, [sp, #4]
 801af58:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801af5c:	fb00 2404 	mla	r4, r0, r4, r2
 801af60:	6832      	ldr	r2, [r6, #0]
 801af62:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801af66:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801af6a:	682a      	ldr	r2, [r5, #0]
 801af6c:	9202      	str	r2, [sp, #8]
 801af6e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801af72:	9a01      	ldr	r2, [sp, #4]
 801af74:	2a00      	cmp	r2, #0
 801af76:	dc03      	bgt.n	801af80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801af78:	f1bb 0f00 	cmp.w	fp, #0
 801af7c:	f340 809a 	ble.w	801b0b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801af80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801af82:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801af86:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801af8a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801af8e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801af90:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801af94:	2b00      	cmp	r3, #0
 801af96:	dd0c      	ble.n	801afb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801af98:	1406      	asrs	r6, r0, #16
 801af9a:	d405      	bmi.n	801afa8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801af9c:	454e      	cmp	r6, r9
 801af9e:	da03      	bge.n	801afa8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801afa0:	1416      	asrs	r6, r2, #16
 801afa2:	d401      	bmi.n	801afa8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801afa4:	4546      	cmp	r6, r8
 801afa6:	db05      	blt.n	801afb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801afa8:	4470      	add	r0, lr
 801afaa:	4462      	add	r2, ip
 801afac:	3b01      	subs	r3, #1
 801afae:	3402      	adds	r4, #2
 801afb0:	e7f0      	b.n	801af94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801afb2:	d00f      	beq.n	801afd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801afb4:	1e5e      	subs	r6, r3, #1
 801afb6:	fb0e 0706 	mla	r7, lr, r6, r0
 801afba:	143f      	asrs	r7, r7, #16
 801afbc:	d541      	bpl.n	801b042 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801afbe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801afc2:	4698      	mov	r8, r3
 801afc4:	9603      	str	r6, [sp, #12]
 801afc6:	f1b8 0f00 	cmp.w	r8, #0
 801afca:	dc56      	bgt.n	801b07a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801afcc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801afd0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afd4:	9b01      	ldr	r3, [sp, #4]
 801afd6:	2b00      	cmp	r3, #0
 801afd8:	dd6c      	ble.n	801b0b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801afda:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afe2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801afe6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801afe8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801afec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aff0:	eeb0 6a62 	vmov.f32	s12, s5
 801aff4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aff8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801affc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b000:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b004:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b008:	eeb0 6a43 	vmov.f32	s12, s6
 801b00c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b010:	ee12 2a90 	vmov	r2, s5
 801b014:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b018:	fb92 fef3 	sdiv	lr, r2, r3
 801b01c:	ee13 2a10 	vmov	r2, s6
 801b020:	fb92 fcf3 	sdiv	ip, r2, r3
 801b024:	9b01      	ldr	r3, [sp, #4]
 801b026:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b02a:	3b01      	subs	r3, #1
 801b02c:	9301      	str	r3, [sp, #4]
 801b02e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b032:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b034:	eeb0 3a67 	vmov.f32	s6, s15
 801b038:	bf08      	it	eq
 801b03a:	465b      	moveq	r3, fp
 801b03c:	eef0 2a47 	vmov.f32	s5, s14
 801b040:	e797      	b.n	801af72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b042:	454f      	cmp	r7, r9
 801b044:	dabb      	bge.n	801afbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b046:	fb0c 2606 	mla	r6, ip, r6, r2
 801b04a:	1436      	asrs	r6, r6, #16
 801b04c:	d4b7      	bmi.n	801afbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b04e:	4546      	cmp	r6, r8
 801b050:	dab5      	bge.n	801afbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b052:	461e      	mov	r6, r3
 801b054:	46a0      	mov	r8, r4
 801b056:	2e00      	cmp	r6, #0
 801b058:	ddb8      	ble.n	801afcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b05a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b05e:	9902      	ldr	r1, [sp, #8]
 801b060:	1417      	asrs	r7, r2, #16
 801b062:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b066:	fb0a 9707 	mla	r7, sl, r7, r9
 801b06a:	4470      	add	r0, lr
 801b06c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b070:	f828 7b02 	strh.w	r7, [r8], #2
 801b074:	4462      	add	r2, ip
 801b076:	3e01      	subs	r6, #1
 801b078:	e7ed      	b.n	801b056 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b07a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b07e:	d414      	bmi.n	801b0aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b080:	68ae      	ldr	r6, [r5, #8]
 801b082:	454e      	cmp	r6, r9
 801b084:	dd11      	ble.n	801b0aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b086:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b08a:	d40e      	bmi.n	801b0aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b08c:	68ef      	ldr	r7, [r5, #12]
 801b08e:	4557      	cmp	r7, sl
 801b090:	dd0b      	ble.n	801b0aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b092:	b236      	sxth	r6, r6
 801b094:	fb0a 9606 	mla	r6, sl, r6, r9
 801b098:	9f02      	ldr	r7, [sp, #8]
 801b09a:	f06f 0101 	mvn.w	r1, #1
 801b09e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b0a2:	fb01 f608 	mul.w	r6, r1, r8
 801b0a6:	9903      	ldr	r1, [sp, #12]
 801b0a8:	538f      	strh	r7, [r1, r6]
 801b0aa:	4470      	add	r0, lr
 801b0ac:	4462      	add	r2, ip
 801b0ae:	f108 38ff 	add.w	r8, r8, #4294967295
 801b0b2:	e788      	b.n	801afc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b0b4:	b005      	add	sp, #20
 801b0b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b0ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0be:	b087      	sub	sp, #28
 801b0c0:	468b      	mov	fp, r1
 801b0c2:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b0c4:	9203      	str	r2, [sp, #12]
 801b0c6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b0ca:	9204      	str	r2, [sp, #16]
 801b0cc:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b0d0:	6841      	ldr	r1, [r0, #4]
 801b0d2:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b0d6:	fb01 2505 	mla	r5, r1, r5, r2
 801b0da:	6802      	ldr	r2, [r0, #0]
 801b0dc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b0e0:	f8d9 2000 	ldr.w	r2, [r9]
 801b0e4:	9201      	str	r2, [sp, #4]
 801b0e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b0ea:	f1bb 0f00 	cmp.w	fp, #0
 801b0ee:	dc03      	bgt.n	801b0f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b0f0:	9a03      	ldr	r2, [sp, #12]
 801b0f2:	2a00      	cmp	r2, #0
 801b0f4:	f340 8159 	ble.w	801b3aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b0f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b0fa:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b0fe:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b102:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b106:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b108:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b10c:	2b00      	cmp	r3, #0
 801b10e:	dd0e      	ble.n	801b12e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b110:	1402      	asrs	r2, r0, #16
 801b112:	d405      	bmi.n	801b120 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b114:	42ba      	cmp	r2, r7
 801b116:	da03      	bge.n	801b120 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b118:	140a      	asrs	r2, r1, #16
 801b11a:	d401      	bmi.n	801b120 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b11c:	42b2      	cmp	r2, r6
 801b11e:	db07      	blt.n	801b130 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b120:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b122:	4410      	add	r0, r2
 801b124:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b126:	3b01      	subs	r3, #1
 801b128:	4411      	add	r1, r2
 801b12a:	3502      	adds	r5, #2
 801b12c:	e7ee      	b.n	801b10c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b12e:	d017      	beq.n	801b160 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b130:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b132:	1e5a      	subs	r2, r3, #1
 801b134:	fb04 0402 	mla	r4, r4, r2, r0
 801b138:	1424      	asrs	r4, r4, #16
 801b13a:	d409      	bmi.n	801b150 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b13c:	42bc      	cmp	r4, r7
 801b13e:	da07      	bge.n	801b150 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b140:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b142:	fb04 1202 	mla	r2, r4, r2, r1
 801b146:	1412      	asrs	r2, r2, #16
 801b148:	d402      	bmi.n	801b150 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b14a:	42b2      	cmp	r2, r6
 801b14c:	f2c0 80bf 	blt.w	801b2ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b150:	2700      	movs	r7, #0
 801b152:	19da      	adds	r2, r3, r7
 801b154:	2a00      	cmp	r2, #0
 801b156:	dc3e      	bgt.n	801b1d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b158:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b15c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b160:	f1bb 0f00 	cmp.w	fp, #0
 801b164:	f340 8121 	ble.w	801b3aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b168:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b16c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b170:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b174:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b176:	f1bb 0b01 	subs.w	fp, fp, #1
 801b17a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b17e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b182:	eeb0 6a62 	vmov.f32	s12, s5
 801b186:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b18a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b18e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b192:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b196:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b19a:	eeb0 6a43 	vmov.f32	s12, s6
 801b19e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b1a2:	ee12 2a90 	vmov	r2, s5
 801b1a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b1aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1ae:	ee13 2a10 	vmov	r2, s6
 801b1b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1b6:	9313      	str	r3, [sp, #76]	; 0x4c
 801b1b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b1ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1be:	9a03      	ldr	r2, [sp, #12]
 801b1c0:	9314      	str	r3, [sp, #80]	; 0x50
 801b1c2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b1c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b1c8:	eeb0 3a67 	vmov.f32	s6, s15
 801b1cc:	bf08      	it	eq
 801b1ce:	4613      	moveq	r3, r2
 801b1d0:	eef0 2a47 	vmov.f32	s5, s14
 801b1d4:	e789      	b.n	801b0ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b1d6:	1406      	asrs	r6, r0, #16
 801b1d8:	d42d      	bmi.n	801b236 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b1da:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b1de:	42b4      	cmp	r4, r6
 801b1e0:	dd29      	ble.n	801b236 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b1e2:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b1e6:	d426      	bmi.n	801b236 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b1e8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b1ec:	4562      	cmp	r2, ip
 801b1ee:	dd22      	ble.n	801b236 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b1f0:	b224      	sxth	r4, r4
 801b1f2:	9a01      	ldr	r2, [sp, #4]
 801b1f4:	fb0c 6404 	mla	r4, ip, r4, r6
 801b1f8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b1fc:	0e22      	lsrs	r2, r4, #24
 801b1fe:	d01a      	beq.n	801b236 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b200:	9e04      	ldr	r6, [sp, #16]
 801b202:	4372      	muls	r2, r6
 801b204:	1c56      	adds	r6, r2, #1
 801b206:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b20a:	1212      	asrs	r2, r2, #8
 801b20c:	0a26      	lsrs	r6, r4, #8
 801b20e:	2aff      	cmp	r2, #255	; 0xff
 801b210:	9605      	str	r6, [sp, #20]
 801b212:	d116      	bne.n	801b242 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b214:	f06f 0201 	mvn.w	r2, #1
 801b218:	fb02 fc07 	mul.w	ip, r2, r7
 801b21c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b220:	0962      	lsrs	r2, r4, #5
 801b222:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b226:	f026 0607 	bic.w	r6, r6, #7
 801b22a:	4316      	orrs	r6, r2
 801b22c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b230:	4326      	orrs	r6, r4
 801b232:	f825 600c 	strh.w	r6, [r5, ip]
 801b236:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b238:	4410      	add	r0, r2
 801b23a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b23c:	3f01      	subs	r7, #1
 801b23e:	4411      	add	r1, r2
 801b240:	e787      	b.n	801b152 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b242:	f06f 0601 	mvn.w	r6, #1
 801b246:	437e      	muls	r6, r7
 801b248:	fa1f fa82 	uxth.w	sl, r2
 801b24c:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b250:	9602      	str	r6, [sp, #8]
 801b252:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b256:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b25a:	43d2      	mvns	r2, r2
 801b25c:	b2d2      	uxtb	r2, r2
 801b25e:	fb1c fc0a 	smulbb	ip, ip, sl
 801b262:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b266:	fb0e ce02 	mla	lr, lr, r2, ip
 801b26a:	b2e4      	uxtb	r4, r4
 801b26c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b270:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b274:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b278:	fa5f f888 	uxtb.w	r8, r8
 801b27c:	fb14 f40a 	smulbb	r4, r4, sl
 801b280:	fb08 4402 	mla	r4, r8, r2, r4
 801b284:	fa1f fe8e 	uxth.w	lr, lr
 801b288:	fb16 f60a 	smulbb	r6, r6, sl
 801b28c:	b2a4      	uxth	r4, r4
 801b28e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b292:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b296:	f10e 0201 	add.w	r2, lr, #1
 801b29a:	1c66      	adds	r6, r4, #1
 801b29c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b2a0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b2a4:	fa1f fc8c 	uxth.w	ip, ip
 801b2a8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b2ac:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b2b0:	ea46 0e0e 	orr.w	lr, r6, lr
 801b2b4:	f10c 0601 	add.w	r6, ip, #1
 801b2b8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b2bc:	0976      	lsrs	r6, r6, #5
 801b2be:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b2c2:	9a02      	ldr	r2, [sp, #8]
 801b2c4:	ea4e 0e06 	orr.w	lr, lr, r6
 801b2c8:	f825 e002 	strh.w	lr, [r5, r2]
 801b2cc:	e7b3      	b.n	801b236 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b2ce:	f04f 0800 	mov.w	r8, #0
 801b2d2:	eba3 0208 	sub.w	r2, r3, r8
 801b2d6:	2a00      	cmp	r2, #0
 801b2d8:	f77f af3e 	ble.w	801b158 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b2dc:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b2e0:	1404      	asrs	r4, r0, #16
 801b2e2:	140a      	asrs	r2, r1, #16
 801b2e4:	fb06 4202 	mla	r2, r6, r2, r4
 801b2e8:	9c01      	ldr	r4, [sp, #4]
 801b2ea:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b2ee:	0e22      	lsrs	r2, r4, #24
 801b2f0:	d016      	beq.n	801b320 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b2f2:	9e04      	ldr	r6, [sp, #16]
 801b2f4:	4372      	muls	r2, r6
 801b2f6:	1c56      	adds	r6, r2, #1
 801b2f8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b2fc:	1212      	asrs	r2, r2, #8
 801b2fe:	2aff      	cmp	r2, #255	; 0xff
 801b300:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b304:	d113      	bne.n	801b32e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b306:	0962      	lsrs	r2, r4, #5
 801b308:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b30c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b310:	f026 0607 	bic.w	r6, r6, #7
 801b314:	4316      	orrs	r6, r2
 801b316:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b31a:	4326      	orrs	r6, r4
 801b31c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b320:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b322:	4410      	add	r0, r2
 801b324:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b326:	f108 0801 	add.w	r8, r8, #1
 801b32a:	4411      	add	r1, r2
 801b32c:	e7d1      	b.n	801b2d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b32e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b332:	fa1f fa82 	uxth.w	sl, r2
 801b336:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b33a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b33e:	43d2      	mvns	r2, r2
 801b340:	b2d2      	uxtb	r2, r2
 801b342:	fb17 f70a 	smulbb	r7, r7, sl
 801b346:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b34a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b34e:	b2e4      	uxtb	r4, r4
 801b350:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b354:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b358:	fa5f fe8e 	uxtb.w	lr, lr
 801b35c:	fb14 f40a 	smulbb	r4, r4, sl
 801b360:	fb0e 4402 	mla	r4, lr, r2, r4
 801b364:	b2f6      	uxtb	r6, r6
 801b366:	fa1f fc8c 	uxth.w	ip, ip
 801b36a:	fb16 f60a 	smulbb	r6, r6, sl
 801b36e:	b2a4      	uxth	r4, r4
 801b370:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b374:	fb07 6702 	mla	r7, r7, r2, r6
 801b378:	f10c 0201 	add.w	r2, ip, #1
 801b37c:	1c66      	adds	r6, r4, #1
 801b37e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b382:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b386:	b2bf      	uxth	r7, r7
 801b388:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b38c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b390:	ea46 0c0c 	orr.w	ip, r6, ip
 801b394:	1c7e      	adds	r6, r7, #1
 801b396:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b39a:	0976      	lsrs	r6, r6, #5
 801b39c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b3a0:	ea4c 0c06 	orr.w	ip, ip, r6
 801b3a4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b3a8:	e7ba      	b.n	801b320 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b3aa:	b007      	add	sp, #28
 801b3ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b3b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b3b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3b4:	b085      	sub	sp, #20
 801b3b6:	468b      	mov	fp, r1
 801b3b8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b3ba:	9203      	str	r2, [sp, #12]
 801b3bc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b3c0:	6841      	ldr	r1, [r0, #4]
 801b3c2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b3c6:	fb01 2404 	mla	r4, r1, r4, r2
 801b3ca:	6802      	ldr	r2, [r0, #0]
 801b3cc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b3d0:	f8d8 2000 	ldr.w	r2, [r8]
 801b3d4:	9201      	str	r2, [sp, #4]
 801b3d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b3da:	f1bb 0f00 	cmp.w	fp, #0
 801b3de:	dc03      	bgt.n	801b3e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b3e0:	9a03      	ldr	r2, [sp, #12]
 801b3e2:	2a00      	cmp	r2, #0
 801b3e4:	f340 814f 	ble.w	801b686 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b3e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b3ea:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b3ee:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b3f2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b3f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b3f8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b3fc:	2b00      	cmp	r3, #0
 801b3fe:	dd0e      	ble.n	801b41e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b400:	1408      	asrs	r0, r1, #16
 801b402:	d405      	bmi.n	801b410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b404:	42b8      	cmp	r0, r7
 801b406:	da03      	bge.n	801b410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b408:	1410      	asrs	r0, r2, #16
 801b40a:	d401      	bmi.n	801b410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b40c:	42b0      	cmp	r0, r6
 801b40e:	db07      	blt.n	801b420 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b410:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b412:	4401      	add	r1, r0
 801b414:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b416:	3b01      	subs	r3, #1
 801b418:	4402      	add	r2, r0
 801b41a:	3402      	adds	r4, #2
 801b41c:	e7ee      	b.n	801b3fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b41e:	d017      	beq.n	801b450 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b420:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b422:	1e58      	subs	r0, r3, #1
 801b424:	fb05 1500 	mla	r5, r5, r0, r1
 801b428:	142d      	asrs	r5, r5, #16
 801b42a:	d409      	bmi.n	801b440 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b42c:	42bd      	cmp	r5, r7
 801b42e:	da07      	bge.n	801b440 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b430:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b432:	fb05 2000 	mla	r0, r5, r0, r2
 801b436:	1400      	asrs	r0, r0, #16
 801b438:	d402      	bmi.n	801b440 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b43a:	42b0      	cmp	r0, r6
 801b43c:	f2c0 80ba 	blt.w	801b5b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b440:	2600      	movs	r6, #0
 801b442:	1998      	adds	r0, r3, r6
 801b444:	2800      	cmp	r0, #0
 801b446:	dc3e      	bgt.n	801b4c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b448:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b44c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b450:	f1bb 0f00 	cmp.w	fp, #0
 801b454:	f340 8117 	ble.w	801b686 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b458:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b45c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b460:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b464:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b466:	f1bb 0b01 	subs.w	fp, fp, #1
 801b46a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b46e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b472:	eeb0 6a62 	vmov.f32	s12, s5
 801b476:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b47a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b47e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b482:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b486:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b48a:	eeb0 6a43 	vmov.f32	s12, s6
 801b48e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b492:	ee12 2a90 	vmov	r2, s5
 801b496:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b49a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b49e:	ee13 2a10 	vmov	r2, s6
 801b4a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b4a6:	9311      	str	r3, [sp, #68]	; 0x44
 801b4a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b4aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4ae:	9a03      	ldr	r2, [sp, #12]
 801b4b0:	9312      	str	r3, [sp, #72]	; 0x48
 801b4b2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b4b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b4b8:	eeb0 3a67 	vmov.f32	s6, s15
 801b4bc:	bf08      	it	eq
 801b4be:	4613      	moveq	r3, r2
 801b4c0:	eef0 2a47 	vmov.f32	s5, s14
 801b4c4:	e789      	b.n	801b3da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b4c6:	140f      	asrs	r7, r1, #16
 801b4c8:	d424      	bmi.n	801b514 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b4ca:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b4ce:	42bd      	cmp	r5, r7
 801b4d0:	dd20      	ble.n	801b514 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b4d2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b4d6:	d41d      	bmi.n	801b514 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b4d8:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b4dc:	4560      	cmp	r0, ip
 801b4de:	dd19      	ble.n	801b514 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b4e0:	b22d      	sxth	r5, r5
 801b4e2:	fb0c 7505 	mla	r5, ip, r5, r7
 801b4e6:	9801      	ldr	r0, [sp, #4]
 801b4e8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b4ec:	0e07      	lsrs	r7, r0, #24
 801b4ee:	2fff      	cmp	r7, #255	; 0xff
 801b4f0:	d116      	bne.n	801b520 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b4f2:	f06f 0501 	mvn.w	r5, #1
 801b4f6:	fb05 f706 	mul.w	r7, r5, r6
 801b4fa:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b4fe:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b502:	0945      	lsrs	r5, r0, #5
 801b504:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b508:	ea4c 0505 	orr.w	r5, ip, r5
 801b50c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b510:	4305      	orrs	r5, r0
 801b512:	53e5      	strh	r5, [r4, r7]
 801b514:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b516:	4401      	add	r1, r0
 801b518:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b51a:	3e01      	subs	r6, #1
 801b51c:	4402      	add	r2, r0
 801b51e:	e790      	b.n	801b442 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b520:	b2fd      	uxtb	r5, r7
 801b522:	2f00      	cmp	r7, #0
 801b524:	d0f6      	beq.n	801b514 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b526:	f06f 0701 	mvn.w	r7, #1
 801b52a:	4377      	muls	r7, r6
 801b52c:	fa1f f985 	uxth.w	r9, r5
 801b530:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b534:	9702      	str	r7, [sp, #8]
 801b536:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b53a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b53e:	43ed      	mvns	r5, r5
 801b540:	b2ed      	uxtb	r5, r5
 801b542:	fb17 f709 	smulbb	r7, r7, r9
 801b546:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b54a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b54e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b552:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b556:	b2c0      	uxtb	r0, r0
 801b558:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b55c:	fa5f fe8e 	uxtb.w	lr, lr
 801b560:	fb10 f009 	smulbb	r0, r0, r9
 801b564:	fb0e 0005 	mla	r0, lr, r5, r0
 801b568:	b280      	uxth	r0, r0
 801b56a:	fa1f fc8c 	uxth.w	ip, ip
 801b56e:	fb1a fa09 	smulbb	sl, sl, r9
 801b572:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b576:	fb07 a705 	mla	r7, r7, r5, sl
 801b57a:	f100 0a01 	add.w	sl, r0, #1
 801b57e:	f10c 0501 	add.w	r5, ip, #1
 801b582:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b586:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b58a:	b2bf      	uxth	r7, r7
 801b58c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b590:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b594:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b598:	f107 0a01 	add.w	sl, r7, #1
 801b59c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b5a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b5a4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b5a8:	9802      	ldr	r0, [sp, #8]
 801b5aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b5ae:	f824 c000 	strh.w	ip, [r4, r0]
 801b5b2:	e7af      	b.n	801b514 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b5b4:	f04f 0e00 	mov.w	lr, #0
 801b5b8:	eba3 000e 	sub.w	r0, r3, lr
 801b5bc:	2800      	cmp	r0, #0
 801b5be:	f77f af43 	ble.w	801b448 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b5c2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b5c6:	140d      	asrs	r5, r1, #16
 801b5c8:	1410      	asrs	r0, r2, #16
 801b5ca:	fb06 5000 	mla	r0, r6, r0, r5
 801b5ce:	9d01      	ldr	r5, [sp, #4]
 801b5d0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b5d4:	0e2e      	lsrs	r6, r5, #24
 801b5d6:	2eff      	cmp	r6, #255	; 0xff
 801b5d8:	d112      	bne.n	801b600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b5da:	482c      	ldr	r0, [pc, #176]	; (801b68c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b5dc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b5e0:	0968      	lsrs	r0, r5, #5
 801b5e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b5e6:	4330      	orrs	r0, r6
 801b5e8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b5ec:	4328      	orrs	r0, r5
 801b5ee:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b5f2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b5f4:	4401      	add	r1, r0
 801b5f6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b5f8:	f10e 0e01 	add.w	lr, lr, #1
 801b5fc:	4402      	add	r2, r0
 801b5fe:	e7db      	b.n	801b5b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b600:	b2f0      	uxtb	r0, r6
 801b602:	2e00      	cmp	r6, #0
 801b604:	d0f5      	beq.n	801b5f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b606:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b60a:	fa1f f980 	uxth.w	r9, r0
 801b60e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b612:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b616:	43c0      	mvns	r0, r0
 801b618:	b2c0      	uxtb	r0, r0
 801b61a:	fb16 f609 	smulbb	r6, r6, r9
 801b61e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b622:	fb07 6700 	mla	r7, r7, r0, r6
 801b626:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b62a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b62e:	b2ed      	uxtb	r5, r5
 801b630:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b634:	fa5f fc8c 	uxtb.w	ip, ip
 801b638:	fb15 f509 	smulbb	r5, r5, r9
 801b63c:	fb0c 5500 	mla	r5, ip, r0, r5
 801b640:	b2bf      	uxth	r7, r7
 801b642:	fb1a fa09 	smulbb	sl, sl, r9
 801b646:	b2ad      	uxth	r5, r5
 801b648:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b64c:	fb06 a600 	mla	r6, r6, r0, sl
 801b650:	1c78      	adds	r0, r7, #1
 801b652:	f105 0a01 	add.w	sl, r5, #1
 801b656:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b65a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b65e:	b2b6      	uxth	r6, r6
 801b660:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b664:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b668:	ea4a 0707 	orr.w	r7, sl, r7
 801b66c:	f106 0a01 	add.w	sl, r6, #1
 801b670:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b674:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b678:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b67c:	ea47 070a 	orr.w	r7, r7, sl
 801b680:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b684:	e7b5      	b.n	801b5f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b686:	b005      	add	sp, #20
 801b688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b68c:	fffff800 	.word	0xfffff800

0801b690 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b694:	b087      	sub	sp, #28
 801b696:	468b      	mov	fp, r1
 801b698:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b69a:	9203      	str	r2, [sp, #12]
 801b69c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b6a0:	9204      	str	r2, [sp, #16]
 801b6a2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b6a6:	6841      	ldr	r1, [r0, #4]
 801b6a8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b6ac:	fb01 2404 	mla	r4, r1, r4, r2
 801b6b0:	6802      	ldr	r2, [r0, #0]
 801b6b2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b6b6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b6ba:	3201      	adds	r2, #1
 801b6bc:	f022 0201 	bic.w	r2, r2, #1
 801b6c0:	9200      	str	r2, [sp, #0]
 801b6c2:	f8d9 2000 	ldr.w	r2, [r9]
 801b6c6:	9201      	str	r2, [sp, #4]
 801b6c8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b6cc:	f1bb 0f00 	cmp.w	fp, #0
 801b6d0:	dc03      	bgt.n	801b6da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b6d2:	9a03      	ldr	r2, [sp, #12]
 801b6d4:	2a00      	cmp	r2, #0
 801b6d6:	f340 8169 	ble.w	801b9ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b6da:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b6dc:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b6e0:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b6e4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b6e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b6ea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b6ee:	2b00      	cmp	r3, #0
 801b6f0:	dd0e      	ble.n	801b710 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b6f2:	1402      	asrs	r2, r0, #16
 801b6f4:	d405      	bmi.n	801b702 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b6f6:	42ba      	cmp	r2, r7
 801b6f8:	da03      	bge.n	801b702 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b6fa:	140a      	asrs	r2, r1, #16
 801b6fc:	d401      	bmi.n	801b702 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b6fe:	42b2      	cmp	r2, r6
 801b700:	db07      	blt.n	801b712 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b702:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b704:	4410      	add	r0, r2
 801b706:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b708:	3b01      	subs	r3, #1
 801b70a:	4411      	add	r1, r2
 801b70c:	3402      	adds	r4, #2
 801b70e:	e7ee      	b.n	801b6ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b710:	d017      	beq.n	801b742 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b712:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b714:	1e5a      	subs	r2, r3, #1
 801b716:	fb05 0502 	mla	r5, r5, r2, r0
 801b71a:	142d      	asrs	r5, r5, #16
 801b71c:	d409      	bmi.n	801b732 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b71e:	42bd      	cmp	r5, r7
 801b720:	da07      	bge.n	801b732 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b722:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b724:	fb05 1202 	mla	r2, r5, r2, r1
 801b728:	1412      	asrs	r2, r2, #16
 801b72a:	d402      	bmi.n	801b732 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b72c:	42b2      	cmp	r2, r6
 801b72e:	f2c0 80c7 	blt.w	801b8c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801b732:	2700      	movs	r7, #0
 801b734:	19da      	adds	r2, r3, r7
 801b736:	2a00      	cmp	r2, #0
 801b738:	dc3e      	bgt.n	801b7b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b73a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b73e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b742:	f1bb 0f00 	cmp.w	fp, #0
 801b746:	f340 8131 	ble.w	801b9ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b74a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b74e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b752:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b756:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b758:	f1bb 0b01 	subs.w	fp, fp, #1
 801b75c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b760:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b764:	eeb0 6a62 	vmov.f32	s12, s5
 801b768:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b76c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b770:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b774:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b778:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b77c:	eeb0 6a43 	vmov.f32	s12, s6
 801b780:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b784:	ee12 2a90 	vmov	r2, s5
 801b788:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b78c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b790:	ee13 2a10 	vmov	r2, s6
 801b794:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b798:	9313      	str	r3, [sp, #76]	; 0x4c
 801b79a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b79c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7a0:	9a03      	ldr	r2, [sp, #12]
 801b7a2:	9314      	str	r3, [sp, #80]	; 0x50
 801b7a4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b7a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b7aa:	eeb0 3a67 	vmov.f32	s6, s15
 801b7ae:	bf08      	it	eq
 801b7b0:	4613      	moveq	r3, r2
 801b7b2:	eef0 2a47 	vmov.f32	s5, s14
 801b7b6:	e789      	b.n	801b6cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b7b8:	1405      	asrs	r5, r0, #16
 801b7ba:	d435      	bmi.n	801b828 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b7bc:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b7c0:	42aa      	cmp	r2, r5
 801b7c2:	dd31      	ble.n	801b828 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b7c4:	140e      	asrs	r6, r1, #16
 801b7c6:	d42f      	bmi.n	801b828 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b7c8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b7cc:	42b2      	cmp	r2, r6
 801b7ce:	dd2b      	ble.n	801b828 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b7d0:	9a00      	ldr	r2, [sp, #0]
 801b7d2:	fb06 5502 	mla	r5, r6, r2, r5
 801b7d6:	086a      	lsrs	r2, r5, #1
 801b7d8:	9e01      	ldr	r6, [sp, #4]
 801b7da:	5cb2      	ldrb	r2, [r6, r2]
 801b7dc:	07ee      	lsls	r6, r5, #31
 801b7de:	bf54      	ite	pl
 801b7e0:	f002 020f 	andpl.w	r2, r2, #15
 801b7e4:	1112      	asrmi	r2, r2, #4
 801b7e6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b7ea:	b2d2      	uxtb	r2, r2
 801b7ec:	b1e2      	cbz	r2, 801b828 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b7ee:	9d04      	ldr	r5, [sp, #16]
 801b7f0:	436a      	muls	r2, r5
 801b7f2:	1c55      	adds	r5, r2, #1
 801b7f4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b7f8:	4d6e      	ldr	r5, [pc, #440]	; (801b9b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b7fa:	682d      	ldr	r5, [r5, #0]
 801b7fc:	1212      	asrs	r2, r2, #8
 801b7fe:	0a2e      	lsrs	r6, r5, #8
 801b800:	2aff      	cmp	r2, #255	; 0xff
 801b802:	9605      	str	r6, [sp, #20]
 801b804:	d116      	bne.n	801b834 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b806:	f06f 0201 	mvn.w	r2, #1
 801b80a:	fb02 fc07 	mul.w	ip, r2, r7
 801b80e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b812:	096a      	lsrs	r2, r5, #5
 801b814:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b818:	f026 0607 	bic.w	r6, r6, #7
 801b81c:	4316      	orrs	r6, r2
 801b81e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b822:	432e      	orrs	r6, r5
 801b824:	f824 600c 	strh.w	r6, [r4, ip]
 801b828:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b82a:	4410      	add	r0, r2
 801b82c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b82e:	3f01      	subs	r7, #1
 801b830:	4411      	add	r1, r2
 801b832:	e77f      	b.n	801b734 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b834:	f06f 0601 	mvn.w	r6, #1
 801b838:	437e      	muls	r6, r7
 801b83a:	fa1f fa82 	uxth.w	sl, r2
 801b83e:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b842:	9602      	str	r6, [sp, #8]
 801b844:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b848:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801b84c:	43d2      	mvns	r2, r2
 801b84e:	b2d2      	uxtb	r2, r2
 801b850:	fb1c fc0a 	smulbb	ip, ip, sl
 801b854:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b858:	fb0e ce02 	mla	lr, lr, r2, ip
 801b85c:	b2ed      	uxtb	r5, r5
 801b85e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b862:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b866:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b86a:	fa5f f888 	uxtb.w	r8, r8
 801b86e:	fb15 f50a 	smulbb	r5, r5, sl
 801b872:	fb08 5502 	mla	r5, r8, r2, r5
 801b876:	fa1f fe8e 	uxth.w	lr, lr
 801b87a:	fb16 f60a 	smulbb	r6, r6, sl
 801b87e:	b2ad      	uxth	r5, r5
 801b880:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b884:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b888:	f10e 0201 	add.w	r2, lr, #1
 801b88c:	1c6e      	adds	r6, r5, #1
 801b88e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b892:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801b896:	fa1f fc8c 	uxth.w	ip, ip
 801b89a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b89e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b8a2:	ea46 0e0e 	orr.w	lr, r6, lr
 801b8a6:	f10c 0601 	add.w	r6, ip, #1
 801b8aa:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b8ae:	0976      	lsrs	r6, r6, #5
 801b8b0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b8b4:	9a02      	ldr	r2, [sp, #8]
 801b8b6:	ea4e 0e06 	orr.w	lr, lr, r6
 801b8ba:	f824 e002 	strh.w	lr, [r4, r2]
 801b8be:	e7b3      	b.n	801b828 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b8c0:	f04f 0800 	mov.w	r8, #0
 801b8c4:	eba3 0208 	sub.w	r2, r3, r8
 801b8c8:	2a00      	cmp	r2, #0
 801b8ca:	f77f af36 	ble.w	801b73a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b8ce:	9e00      	ldr	r6, [sp, #0]
 801b8d0:	1402      	asrs	r2, r0, #16
 801b8d2:	140d      	asrs	r5, r1, #16
 801b8d4:	fb06 2505 	mla	r5, r6, r5, r2
 801b8d8:	086a      	lsrs	r2, r5, #1
 801b8da:	9e01      	ldr	r6, [sp, #4]
 801b8dc:	5cb2      	ldrb	r2, [r6, r2]
 801b8de:	07ed      	lsls	r5, r5, #31
 801b8e0:	bf54      	ite	pl
 801b8e2:	f002 020f 	andpl.w	r2, r2, #15
 801b8e6:	1112      	asrmi	r2, r2, #4
 801b8e8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b8ec:	b2d2      	uxtb	r2, r2
 801b8ee:	b1c2      	cbz	r2, 801b922 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b8f0:	9d04      	ldr	r5, [sp, #16]
 801b8f2:	436a      	muls	r2, r5
 801b8f4:	1c55      	adds	r5, r2, #1
 801b8f6:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b8fa:	4d2e      	ldr	r5, [pc, #184]	; (801b9b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b8fc:	1212      	asrs	r2, r2, #8
 801b8fe:	682e      	ldr	r6, [r5, #0]
 801b900:	2aff      	cmp	r2, #255	; 0xff
 801b902:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801b906:	d113      	bne.n	801b930 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b908:	0972      	lsrs	r2, r6, #5
 801b90a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801b90e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b912:	f025 0507 	bic.w	r5, r5, #7
 801b916:	4315      	orrs	r5, r2
 801b918:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b91c:	4335      	orrs	r5, r6
 801b91e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801b922:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b924:	4410      	add	r0, r2
 801b926:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b928:	f108 0801 	add.w	r8, r8, #1
 801b92c:	4411      	add	r1, r2
 801b92e:	e7c9      	b.n	801b8c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b930:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b934:	fa1f fa82 	uxth.w	sl, r2
 801b938:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b93c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801b940:	43d2      	mvns	r2, r2
 801b942:	b2d2      	uxtb	r2, r2
 801b944:	fb17 f70a 	smulbb	r7, r7, sl
 801b948:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b94c:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b950:	b2f6      	uxtb	r6, r6
 801b952:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b956:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b95a:	fa5f fe8e 	uxtb.w	lr, lr
 801b95e:	fb16 f60a 	smulbb	r6, r6, sl
 801b962:	fb0e 6602 	mla	r6, lr, r2, r6
 801b966:	b2ed      	uxtb	r5, r5
 801b968:	fa1f fc8c 	uxth.w	ip, ip
 801b96c:	fb15 f50a 	smulbb	r5, r5, sl
 801b970:	b2b6      	uxth	r6, r6
 801b972:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b976:	fb07 5702 	mla	r7, r7, r2, r5
 801b97a:	f10c 0201 	add.w	r2, ip, #1
 801b97e:	1c75      	adds	r5, r6, #1
 801b980:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b984:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801b988:	b2bf      	uxth	r7, r7
 801b98a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b98e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b992:	ea45 0c0c 	orr.w	ip, r5, ip
 801b996:	1c7d      	adds	r5, r7, #1
 801b998:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801b99c:	096d      	lsrs	r5, r5, #5
 801b99e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b9a2:	ea4c 0c05 	orr.w	ip, ip, r5
 801b9a6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801b9aa:	e7ba      	b.n	801b922 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b9ac:	b007      	add	sp, #28
 801b9ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b9b2:	bf00      	nop
 801b9b4:	20012db4 	.word	0x20012db4

0801b9b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9bc:	b087      	sub	sp, #28
 801b9be:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801bccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801b9c2:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b9c4:	9205      	str	r2, [sp, #20]
 801b9c6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b9ca:	9101      	str	r1, [sp, #4]
 801b9cc:	6841      	ldr	r1, [r0, #4]
 801b9ce:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801b9d2:	fb01 2404 	mla	r4, r1, r4, r2
 801b9d6:	6802      	ldr	r2, [r0, #0]
 801b9d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b9dc:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b9e0:	3201      	adds	r2, #1
 801b9e2:	f022 0201 	bic.w	r2, r2, #1
 801b9e6:	9202      	str	r2, [sp, #8]
 801b9e8:	f8db 2000 	ldr.w	r2, [fp]
 801b9ec:	9203      	str	r2, [sp, #12]
 801b9ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b9f2:	9a01      	ldr	r2, [sp, #4]
 801b9f4:	2a00      	cmp	r2, #0
 801b9f6:	dc03      	bgt.n	801ba00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b9f8:	9a05      	ldr	r2, [sp, #20]
 801b9fa:	2a00      	cmp	r2, #0
 801b9fc:	f340 8162 	ble.w	801bcc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ba00:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ba02:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ba06:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801ba0a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ba0e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ba10:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ba14:	2b00      	cmp	r3, #0
 801ba16:	dd0e      	ble.n	801ba36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ba18:	1402      	asrs	r2, r0, #16
 801ba1a:	d405      	bmi.n	801ba28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ba1c:	42ba      	cmp	r2, r7
 801ba1e:	da03      	bge.n	801ba28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ba20:	140a      	asrs	r2, r1, #16
 801ba22:	d401      	bmi.n	801ba28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ba24:	42b2      	cmp	r2, r6
 801ba26:	db07      	blt.n	801ba38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ba28:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ba2a:	4410      	add	r0, r2
 801ba2c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ba2e:	3b01      	subs	r3, #1
 801ba30:	4411      	add	r1, r2
 801ba32:	3402      	adds	r4, #2
 801ba34:	e7ee      	b.n	801ba14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ba36:	d017      	beq.n	801ba68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ba38:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ba3a:	1e5a      	subs	r2, r3, #1
 801ba3c:	fb05 0502 	mla	r5, r5, r2, r0
 801ba40:	142d      	asrs	r5, r5, #16
 801ba42:	d409      	bmi.n	801ba58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ba44:	42bd      	cmp	r5, r7
 801ba46:	da07      	bge.n	801ba58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ba48:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ba4a:	fb05 1202 	mla	r2, r5, r2, r1
 801ba4e:	1412      	asrs	r2, r2, #16
 801ba50:	d402      	bmi.n	801ba58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ba52:	42b2      	cmp	r2, r6
 801ba54:	f2c0 80c3 	blt.w	801bbde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801ba58:	2500      	movs	r5, #0
 801ba5a:	195a      	adds	r2, r3, r5
 801ba5c:	2a00      	cmp	r2, #0
 801ba5e:	dc3f      	bgt.n	801bae0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ba60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ba64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ba68:	9b01      	ldr	r3, [sp, #4]
 801ba6a:	2b00      	cmp	r3, #0
 801ba6c:	f340 812a 	ble.w	801bcc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ba70:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba74:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba78:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ba7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba86:	eeb0 6a62 	vmov.f32	s12, s5
 801ba8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba92:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba96:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ba9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba9e:	eeb0 6a43 	vmov.f32	s12, s6
 801baa2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801baa6:	ee12 2a90 	vmov	r2, s5
 801baaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801baae:	fb92 f3f3 	sdiv	r3, r2, r3
 801bab2:	ee13 2a10 	vmov	r2, s6
 801bab6:	9313      	str	r3, [sp, #76]	; 0x4c
 801bab8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801baba:	fb92 f3f3 	sdiv	r3, r2, r3
 801babe:	9314      	str	r3, [sp, #80]	; 0x50
 801bac0:	9b01      	ldr	r3, [sp, #4]
 801bac2:	9a05      	ldr	r2, [sp, #20]
 801bac4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bac8:	3b01      	subs	r3, #1
 801baca:	9301      	str	r3, [sp, #4]
 801bacc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bad0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bad2:	eeb0 3a67 	vmov.f32	s6, s15
 801bad6:	bf08      	it	eq
 801bad8:	4613      	moveq	r3, r2
 801bada:	eef0 2a47 	vmov.f32	s5, s14
 801bade:	e788      	b.n	801b9f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bae0:	1406      	asrs	r6, r0, #16
 801bae2:	d42c      	bmi.n	801bb3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bae4:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bae8:	42b2      	cmp	r2, r6
 801baea:	dd28      	ble.n	801bb3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801baec:	140f      	asrs	r7, r1, #16
 801baee:	d426      	bmi.n	801bb3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801baf0:	f8db 200c 	ldr.w	r2, [fp, #12]
 801baf4:	42ba      	cmp	r2, r7
 801baf6:	dd22      	ble.n	801bb3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801baf8:	9a02      	ldr	r2, [sp, #8]
 801bafa:	fb07 6602 	mla	r6, r7, r2, r6
 801bafe:	0872      	lsrs	r2, r6, #1
 801bb00:	9f03      	ldr	r7, [sp, #12]
 801bb02:	5cba      	ldrb	r2, [r7, r2]
 801bb04:	07f6      	lsls	r6, r6, #31
 801bb06:	bf54      	ite	pl
 801bb08:	f002 020f 	andpl.w	r2, r2, #15
 801bb0c:	1112      	asrmi	r2, r2, #4
 801bb0e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bb12:	b2d2      	uxtb	r2, r2
 801bb14:	2aff      	cmp	r2, #255	; 0xff
 801bb16:	d118      	bne.n	801bb4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801bb18:	f8d8 2000 	ldr.w	r2, [r8]
 801bb1c:	f06f 0601 	mvn.w	r6, #1
 801bb20:	fb06 f705 	mul.w	r7, r6, r5
 801bb24:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bb28:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801bb2c:	0956      	lsrs	r6, r2, #5
 801bb2e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bb32:	ea4c 0606 	orr.w	r6, ip, r6
 801bb36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bb3a:	4316      	orrs	r6, r2
 801bb3c:	53e6      	strh	r6, [r4, r7]
 801bb3e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bb40:	4410      	add	r0, r2
 801bb42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb44:	3d01      	subs	r5, #1
 801bb46:	4411      	add	r1, r2
 801bb48:	e787      	b.n	801ba5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bb4a:	2a00      	cmp	r2, #0
 801bb4c:	d0f7      	beq.n	801bb3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bb4e:	f06f 0601 	mvn.w	r6, #1
 801bb52:	436e      	muls	r6, r5
 801bb54:	f8d8 c000 	ldr.w	ip, [r8]
 801bb58:	f834 e006 	ldrh.w	lr, [r4, r6]
 801bb5c:	9604      	str	r6, [sp, #16]
 801bb5e:	fa1f f982 	uxth.w	r9, r2
 801bb62:	ea4f 272e 	mov.w	r7, lr, asr #8
 801bb66:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801bb6a:	43d2      	mvns	r2, r2
 801bb6c:	b2d2      	uxtb	r2, r2
 801bb6e:	fb16 f609 	smulbb	r6, r6, r9
 801bb72:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bb76:	fb07 6702 	mla	r7, r7, r2, r6
 801bb7a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801bb7e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bb82:	fa5f fc8c 	uxtb.w	ip, ip
 801bb86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bb8a:	fa5f fe8e 	uxtb.w	lr, lr
 801bb8e:	fb1c fc09 	smulbb	ip, ip, r9
 801bb92:	fb0e cc02 	mla	ip, lr, r2, ip
 801bb96:	b2bf      	uxth	r7, r7
 801bb98:	fb1a fa09 	smulbb	sl, sl, r9
 801bb9c:	fa1f fc8c 	uxth.w	ip, ip
 801bba0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bba4:	fb06 a602 	mla	r6, r6, r2, sl
 801bba8:	1c7a      	adds	r2, r7, #1
 801bbaa:	f10c 0a01 	add.w	sl, ip, #1
 801bbae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bbb2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801bbb6:	b2b6      	uxth	r6, r6
 801bbb8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bbbc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bbc0:	ea4a 0707 	orr.w	r7, sl, r7
 801bbc4:	f106 0a01 	add.w	sl, r6, #1
 801bbc8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bbcc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bbd0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bbd4:	9a04      	ldr	r2, [sp, #16]
 801bbd6:	ea47 070a 	orr.w	r7, r7, sl
 801bbda:	52a7      	strh	r7, [r4, r2]
 801bbdc:	e7af      	b.n	801bb3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bbde:	f04f 0e00 	mov.w	lr, #0
 801bbe2:	eba3 020e 	sub.w	r2, r3, lr
 801bbe6:	2a00      	cmp	r2, #0
 801bbe8:	f77f af3a 	ble.w	801ba60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bbec:	9e02      	ldr	r6, [sp, #8]
 801bbee:	1402      	asrs	r2, r0, #16
 801bbf0:	140d      	asrs	r5, r1, #16
 801bbf2:	fb06 2505 	mla	r5, r6, r5, r2
 801bbf6:	086a      	lsrs	r2, r5, #1
 801bbf8:	9e03      	ldr	r6, [sp, #12]
 801bbfa:	5cb2      	ldrb	r2, [r6, r2]
 801bbfc:	07ed      	lsls	r5, r5, #31
 801bbfe:	bf54      	ite	pl
 801bc00:	f002 020f 	andpl.w	r2, r2, #15
 801bc04:	1112      	asrmi	r2, r2, #4
 801bc06:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bc0a:	b2d2      	uxtb	r2, r2
 801bc0c:	2aff      	cmp	r2, #255	; 0xff
 801bc0e:	d115      	bne.n	801bc3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bc10:	f8d8 5000 	ldr.w	r5, [r8]
 801bc14:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bc18:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bc1c:	096a      	lsrs	r2, r5, #5
 801bc1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bc22:	4332      	orrs	r2, r6
 801bc24:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bc28:	432a      	orrs	r2, r5
 801bc2a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bc2e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bc30:	4410      	add	r0, r2
 801bc32:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bc34:	f10e 0e01 	add.w	lr, lr, #1
 801bc38:	4411      	add	r1, r2
 801bc3a:	e7d2      	b.n	801bbe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bc3c:	2a00      	cmp	r2, #0
 801bc3e:	d0f6      	beq.n	801bc2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bc40:	f8d8 7000 	ldr.w	r7, [r8]
 801bc44:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bc48:	fa1f f982 	uxth.w	r9, r2
 801bc4c:	ea4f 262c 	mov.w	r6, ip, asr #8
 801bc50:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801bc54:	43d2      	mvns	r2, r2
 801bc56:	b2d2      	uxtb	r2, r2
 801bc58:	fb15 f509 	smulbb	r5, r5, r9
 801bc5c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bc60:	fb06 5602 	mla	r6, r6, r2, r5
 801bc64:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801bc68:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bc6c:	b2ff      	uxtb	r7, r7
 801bc6e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bc72:	fa5f fc8c 	uxtb.w	ip, ip
 801bc76:	fb17 f709 	smulbb	r7, r7, r9
 801bc7a:	fb0c 7702 	mla	r7, ip, r2, r7
 801bc7e:	b2b6      	uxth	r6, r6
 801bc80:	fb1a fa09 	smulbb	sl, sl, r9
 801bc84:	b2bf      	uxth	r7, r7
 801bc86:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bc8a:	fb05 a502 	mla	r5, r5, r2, sl
 801bc8e:	1c72      	adds	r2, r6, #1
 801bc90:	f107 0a01 	add.w	sl, r7, #1
 801bc94:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801bc98:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bc9c:	b2ad      	uxth	r5, r5
 801bc9e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bca2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bca6:	ea4a 0606 	orr.w	r6, sl, r6
 801bcaa:	f105 0a01 	add.w	sl, r5, #1
 801bcae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bcb2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bcb6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bcba:	ea46 060a 	orr.w	r6, r6, sl
 801bcbe:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801bcc2:	e7b4      	b.n	801bc2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bcc4:	b007      	add	sp, #28
 801bcc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcca:	bf00      	nop
 801bccc:	20012db4 	.word	0x20012db4

0801bcd0 <_ZN8touchgfx8LCD16bppD1Ev>:
 801bcd0:	4770      	bx	lr

0801bcd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801bcd2:	4770      	bx	lr

0801bcd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801bcd4:	4770      	bx	lr

0801bcd6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801bcd6:	4770      	bx	lr

0801bcd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801bcd8:	4770      	bx	lr

0801bcda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801bcda:	4770      	bx	lr

0801bcdc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801bcdc:	4770      	bx	lr

0801bcde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801bcde:	4770      	bx	lr

0801bce0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bce0:	4770      	bx	lr

0801bce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bce2:	4770      	bx	lr

0801bce4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bce4:	4770      	bx	lr

0801bce6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bce6:	4770      	bx	lr

0801bce8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bce8:	4770      	bx	lr

0801bcea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bcea:	4770      	bx	lr

0801bcec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bcec:	4770      	bx	lr

0801bcee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bcee:	4770      	bx	lr

0801bcf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bcf0:	4770      	bx	lr

0801bcf2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bcf2:	4770      	bx	lr

0801bcf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bcf4:	4770      	bx	lr

0801bcf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bcf6:	4770      	bx	lr

0801bcf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bcf8:	4770      	bx	lr

0801bcfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bcfa:	4770      	bx	lr

0801bcfc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bcfc:	4770      	bx	lr

0801bcfe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bcfe:	4770      	bx	lr

0801bd00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bd00:	4770      	bx	lr

0801bd02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801bd02:	4770      	bx	lr

0801bd04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bd04:	4770      	bx	lr

0801bd06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801bd06:	4770      	bx	lr

0801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bd08:	4770      	bx	lr

0801bd0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bd0a:	4770      	bx	lr

0801bd0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bd0c:	4770      	bx	lr

0801bd0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bd0e:	4770      	bx	lr

0801bd10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801bd10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bd14:	b088      	sub	sp, #32
 801bd16:	ac08      	add	r4, sp, #32
 801bd18:	4606      	mov	r6, r0
 801bd1a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801bd1e:	4620      	mov	r0, r4
 801bd20:	4688      	mov	r8, r1
 801bd22:	4691      	mov	r9, r2
 801bd24:	f7fd fc62 	bl	80195ec <_ZNK8touchgfx6Bitmap7getDataEv>
 801bd28:	6833      	ldr	r3, [r6, #0]
 801bd2a:	4605      	mov	r5, r0
 801bd2c:	4620      	mov	r0, r4
 801bd2e:	699f      	ldr	r7, [r3, #24]
 801bd30:	f7fd fb70 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801bd34:	4682      	mov	sl, r0
 801bd36:	4620      	mov	r0, r4
 801bd38:	f7fd fba0 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801bd3c:	9500      	str	r5, [sp, #0]
 801bd3e:	e9cd a001 	strd	sl, r0, [sp, #4]
 801bd42:	464b      	mov	r3, r9
 801bd44:	a806      	add	r0, sp, #24
 801bd46:	4642      	mov	r2, r8
 801bd48:	4631      	mov	r1, r6
 801bd4a:	47b8      	blx	r7
 801bd4c:	4628      	mov	r0, r5
 801bd4e:	b008      	add	sp, #32
 801bd50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801bd54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801bd54:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bd58:	2300      	movs	r3, #0
 801bd5a:	9300      	str	r3, [sp, #0]
 801bd5c:	4b3d      	ldr	r3, [pc, #244]	; (801be54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801bd5e:	781b      	ldrb	r3, [r3, #0]
 801bd60:	2b00      	cmp	r3, #0
 801bd62:	d137      	bne.n	801bdd4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801bd64:	4a3c      	ldr	r2, [pc, #240]	; (801be58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bd66:	f9b2 2000 	ldrsh.w	r2, [r2]
 801bd6a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801bd6e:	2b00      	cmp	r3, #0
 801bd70:	d132      	bne.n	801bdd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801bd72:	4b3a      	ldr	r3, [pc, #232]	; (801be5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bd74:	f9b3 3000 	ldrsh.w	r3, [r3]
 801bd78:	6808      	ldr	r0, [r1, #0]
 801bd7a:	6849      	ldr	r1, [r1, #4]
 801bd7c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801bd80:	ac02      	add	r4, sp, #8
 801bd82:	ab02      	add	r3, sp, #8
 801bd84:	c303      	stmia	r3!, {r0, r1}
 801bd86:	4669      	mov	r1, sp
 801bd88:	4620      	mov	r0, r4
 801bd8a:	f7f9 fdc1 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bd8e:	4668      	mov	r0, sp
 801bd90:	f7f9 fd7a 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd94:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801bd98:	f8bd 2000 	ldrh.w	r2, [sp]
 801bd9c:	4d30      	ldr	r5, [pc, #192]	; (801be60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801bd9e:	4413      	add	r3, r2
 801bda0:	f8ad 3008 	strh.w	r3, [sp, #8]
 801bda4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801bda8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801bdac:	6828      	ldr	r0, [r5, #0]
 801bdae:	4413      	add	r3, r2
 801bdb0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801bdb4:	6803      	ldr	r3, [r0, #0]
 801bdb6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bdb8:	4798      	blx	r3
 801bdba:	f010 0f01 	tst.w	r0, #1
 801bdbe:	462f      	mov	r7, r5
 801bdc0:	d00c      	beq.n	801bddc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801bdc2:	6828      	ldr	r0, [r5, #0]
 801bdc4:	6803      	ldr	r3, [r0, #0]
 801bdc6:	e894 0006 	ldmia.w	r4, {r1, r2}
 801bdca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801bdcc:	4798      	blx	r3
 801bdce:	b004      	add	sp, #16
 801bdd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bdd4:	4a21      	ldr	r2, [pc, #132]	; (801be5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bdd6:	e7c6      	b.n	801bd66 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801bdd8:	4b1f      	ldr	r3, [pc, #124]	; (801be58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bdda:	e7cb      	b.n	801bd74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801bddc:	6838      	ldr	r0, [r7, #0]
 801bdde:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801bde2:	6803      	ldr	r3, [r0, #0]
 801bde4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801bde8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801bdea:	4798      	blx	r3
 801bdec:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801bdf0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bdf4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801bdf8:	fb16 3602 	smlabb	r6, r6, r2, r3
 801bdfc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801be00:	6838      	ldr	r0, [r7, #0]
 801be02:	6803      	ldr	r3, [r0, #0]
 801be04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be06:	4798      	blx	r3
 801be08:	4a13      	ldr	r2, [pc, #76]	; (801be58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801be0a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801be0e:	8813      	ldrh	r3, [r2, #0]
 801be10:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801be14:	fb03 1404 	mla	r4, r3, r4, r1
 801be18:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801be1c:	435d      	muls	r5, r3
 801be1e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801be22:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801be26:	4691      	mov	r9, r2
 801be28:	6838      	ldr	r0, [r7, #0]
 801be2a:	42ac      	cmp	r4, r5
 801be2c:	6803      	ldr	r3, [r0, #0]
 801be2e:	d20e      	bcs.n	801be4e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801be30:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801be34:	4632      	mov	r2, r6
 801be36:	4643      	mov	r3, r8
 801be38:	4621      	mov	r1, r4
 801be3a:	47d0      	blx	sl
 801be3c:	f8b9 3000 	ldrh.w	r3, [r9]
 801be40:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801be44:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801be48:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801be4c:	e7ec      	b.n	801be28 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801be4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801be50:	4798      	blx	r3
 801be52:	e7bc      	b.n	801bdce <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801be54:	20012d9c 	.word	0x20012d9c
 801be58:	20012d9e 	.word	0x20012d9e
 801be5c:	20012da0 	.word	0x20012da0
 801be60:	20012da4 	.word	0x20012da4

0801be64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801be64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be68:	b08b      	sub	sp, #44	; 0x2c
 801be6a:	460f      	mov	r7, r1
 801be6c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801be70:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801be74:	4616      	mov	r6, r2
 801be76:	f1bb 0f00 	cmp.w	fp, #0
 801be7a:	d04a      	beq.n	801bf12 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801be7c:	6810      	ldr	r0, [r2, #0]
 801be7e:	6851      	ldr	r1, [r2, #4]
 801be80:	ad06      	add	r5, sp, #24
 801be82:	c503      	stmia	r5!, {r0, r1}
 801be84:	6818      	ldr	r0, [r3, #0]
 801be86:	6859      	ldr	r1, [r3, #4]
 801be88:	ad08      	add	r5, sp, #32
 801be8a:	c503      	stmia	r5!, {r0, r1}
 801be8c:	a806      	add	r0, sp, #24
 801be8e:	f7f9 fcfb 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801be92:	4631      	mov	r1, r6
 801be94:	a808      	add	r0, sp, #32
 801be96:	f7f9 fd3b 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801be9a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801be9e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801bea2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801bea6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801beaa:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801beae:	fb16 2103 	smlabb	r1, r6, r3, r2
 801beb2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801beb6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801beba:	4f5f      	ldr	r7, [pc, #380]	; (801c038 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801bebc:	440a      	add	r2, r1
 801bebe:	f8ad 2020 	strh.w	r2, [sp, #32]
 801bec2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801bec6:	6838      	ldr	r0, [r7, #0]
 801bec8:	4413      	add	r3, r2
 801beca:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801bece:	6803      	ldr	r3, [r0, #0]
 801bed0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bed2:	4798      	blx	r3
 801bed4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801bed8:	46b9      	mov	r9, r7
 801beda:	d11d      	bne.n	801bf18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801bedc:	b9fc      	cbnz	r4, 801bf1e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801bede:	f010 0f01 	tst.w	r0, #1
 801bee2:	d01c      	beq.n	801bf1e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801bee4:	f8d9 0000 	ldr.w	r0, [r9]
 801bee8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801beec:	6801      	ldr	r1, [r0, #0]
 801beee:	f8cd b00c 	str.w	fp, [sp, #12]
 801bef2:	2700      	movs	r7, #0
 801bef4:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801bef8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801befc:	9402      	str	r4, [sp, #8]
 801befe:	b2ad      	uxth	r5, r5
 801bf00:	fa1f f488 	uxth.w	r4, r8
 801bf04:	9501      	str	r5, [sp, #4]
 801bf06:	9400      	str	r4, [sp, #0]
 801bf08:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801bf0a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801bf0e:	4631      	mov	r1, r6
 801bf10:	47a0      	blx	r4
 801bf12:	b00b      	add	sp, #44	; 0x2c
 801bf14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf18:	f010 0f04 	tst.w	r0, #4
 801bf1c:	e7e1      	b.n	801bee2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801bf1e:	f8d9 0000 	ldr.w	r0, [r9]
 801bf22:	6803      	ldr	r3, [r0, #0]
 801bf24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bf26:	4798      	blx	r3
 801bf28:	4b44      	ldr	r3, [pc, #272]	; (801c03c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801bf2a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801bf2e:	881a      	ldrh	r2, [r3, #0]
 801bf30:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801bf34:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801bf38:	fb02 1404 	mla	r4, r2, r4, r1
 801bf3c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801bf40:	469a      	mov	sl, r3
 801bf42:	fb05 f502 	mul.w	r5, r5, r2
 801bf46:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801bf4a:	d059      	beq.n	801c000 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801bf4c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801bf50:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bf54:	fa1f f28b 	uxth.w	r2, fp
 801bf58:	fa1f f989 	uxth.w	r9, r9
 801bf5c:	469e      	mov	lr, r3
 801bf5e:	42ac      	cmp	r4, r5
 801bf60:	d264      	bcs.n	801c02c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801bf62:	eb04 0a07 	add.w	sl, r4, r7
 801bf66:	4554      	cmp	r4, sl
 801bf68:	d23d      	bcs.n	801bfe6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801bf6a:	8821      	ldrh	r1, [r4, #0]
 801bf6c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801bf70:	1208      	asrs	r0, r1, #8
 801bf72:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801bf76:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bf7a:	fb10 f009 	smulbb	r0, r0, r9
 801bf7e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801bf82:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bf86:	00c9      	lsls	r1, r1, #3
 801bf88:	fb0c 0c02 	mla	ip, ip, r2, r0
 801bf8c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801bf90:	10d8      	asrs	r0, r3, #3
 801bf92:	b2c9      	uxtb	r1, r1
 801bf94:	00db      	lsls	r3, r3, #3
 801bf96:	fa1f fc8c 	uxth.w	ip, ip
 801bf9a:	fb1b fb09 	smulbb	fp, fp, r9
 801bf9e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bfa2:	b2db      	uxtb	r3, r3
 801bfa4:	fb11 f109 	smulbb	r1, r1, r9
 801bfa8:	fb00 b002 	mla	r0, r0, r2, fp
 801bfac:	fb03 1302 	mla	r3, r3, r2, r1
 801bfb0:	f10c 0b01 	add.w	fp, ip, #1
 801bfb4:	b29b      	uxth	r3, r3
 801bfb6:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801bfba:	b280      	uxth	r0, r0
 801bfbc:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801bfc0:	f103 0c01 	add.w	ip, r3, #1
 801bfc4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bfc8:	1c43      	adds	r3, r0, #1
 801bfca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bfce:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bfd2:	0940      	lsrs	r0, r0, #5
 801bfd4:	ea4c 0c0b 	orr.w	ip, ip, fp
 801bfd8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfdc:	ea4c 0c00 	orr.w	ip, ip, r0
 801bfe0:	f824 cb02 	strh.w	ip, [r4], #2
 801bfe4:	e7bf      	b.n	801bf66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801bfe6:	f8be 3000 	ldrh.w	r3, [lr]
 801bfea:	eba3 0308 	sub.w	r3, r3, r8
 801bfee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bff2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801bff6:	eba3 0308 	sub.w	r3, r3, r8
 801bffa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bffe:	e7ae      	b.n	801bf5e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c000:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c004:	f8d9 0000 	ldr.w	r0, [r9]
 801c008:	42ac      	cmp	r4, r5
 801c00a:	6803      	ldr	r3, [r0, #0]
 801c00c:	d20e      	bcs.n	801c02c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c00e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c012:	4632      	mov	r2, r6
 801c014:	463b      	mov	r3, r7
 801c016:	4621      	mov	r1, r4
 801c018:	47c0      	blx	r8
 801c01a:	f8ba 3000 	ldrh.w	r3, [sl]
 801c01e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c022:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c026:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c02a:	e7eb      	b.n	801c004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c02c:	4b02      	ldr	r3, [pc, #8]	; (801c038 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c02e:	6818      	ldr	r0, [r3, #0]
 801c030:	6803      	ldr	r3, [r0, #0]
 801c032:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c034:	4798      	blx	r3
 801c036:	e76c      	b.n	801bf12 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c038:	20012da4 	.word	0x20012da4
 801c03c:	20012d9e 	.word	0x20012d9e

0801c040 <_ZN8touchgfx8LCD16bppD0Ev>:
 801c040:	b510      	push	{r4, lr}
 801c042:	2184      	movs	r1, #132	; 0x84
 801c044:	4604      	mov	r4, r0
 801c046:	f00d fe4a 	bl	8029cde <_ZdlPvj>
 801c04a:	4620      	mov	r0, r4
 801c04c:	bd10      	pop	{r4, pc}

0801c04e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c04e:	b510      	push	{r4, lr}
 801c050:	2104      	movs	r1, #4
 801c052:	4604      	mov	r4, r0
 801c054:	f00d fe43 	bl	8029cde <_ZdlPvj>
 801c058:	4620      	mov	r0, r4
 801c05a:	bd10      	pop	{r4, pc}

0801c05c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c05c:	b510      	push	{r4, lr}
 801c05e:	2104      	movs	r1, #4
 801c060:	4604      	mov	r4, r0
 801c062:	f00d fe3c 	bl	8029cde <_ZdlPvj>
 801c066:	4620      	mov	r0, r4
 801c068:	bd10      	pop	{r4, pc}

0801c06a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c06a:	b510      	push	{r4, lr}
 801c06c:	f640 0144 	movw	r1, #2116	; 0x844
 801c070:	4604      	mov	r4, r0
 801c072:	f00d fe34 	bl	8029cde <_ZdlPvj>
 801c076:	4620      	mov	r0, r4
 801c078:	bd10      	pop	{r4, pc}

0801c07a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c07a:	b510      	push	{r4, lr}
 801c07c:	2104      	movs	r1, #4
 801c07e:	4604      	mov	r4, r0
 801c080:	f00d fe2d 	bl	8029cde <_ZdlPvj>
 801c084:	4620      	mov	r0, r4
 801c086:	bd10      	pop	{r4, pc}

0801c088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c088:	b510      	push	{r4, lr}
 801c08a:	2104      	movs	r1, #4
 801c08c:	4604      	mov	r4, r0
 801c08e:	f00d fe26 	bl	8029cde <_ZdlPvj>
 801c092:	4620      	mov	r0, r4
 801c094:	bd10      	pop	{r4, pc}

0801c096 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c096:	b510      	push	{r4, lr}
 801c098:	2104      	movs	r1, #4
 801c09a:	4604      	mov	r4, r0
 801c09c:	f00d fe1f 	bl	8029cde <_ZdlPvj>
 801c0a0:	4620      	mov	r0, r4
 801c0a2:	bd10      	pop	{r4, pc}

0801c0a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c0a4:	b510      	push	{r4, lr}
 801c0a6:	2104      	movs	r1, #4
 801c0a8:	4604      	mov	r4, r0
 801c0aa:	f00d fe18 	bl	8029cde <_ZdlPvj>
 801c0ae:	4620      	mov	r0, r4
 801c0b0:	bd10      	pop	{r4, pc}

0801c0b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c0b2:	b510      	push	{r4, lr}
 801c0b4:	2104      	movs	r1, #4
 801c0b6:	4604      	mov	r4, r0
 801c0b8:	f00d fe11 	bl	8029cde <_ZdlPvj>
 801c0bc:	4620      	mov	r0, r4
 801c0be:	bd10      	pop	{r4, pc}

0801c0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c0c0:	b510      	push	{r4, lr}
 801c0c2:	2104      	movs	r1, #4
 801c0c4:	4604      	mov	r4, r0
 801c0c6:	f00d fe0a 	bl	8029cde <_ZdlPvj>
 801c0ca:	4620      	mov	r0, r4
 801c0cc:	bd10      	pop	{r4, pc}

0801c0ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c0ce:	b510      	push	{r4, lr}
 801c0d0:	2104      	movs	r1, #4
 801c0d2:	4604      	mov	r4, r0
 801c0d4:	f00d fe03 	bl	8029cde <_ZdlPvj>
 801c0d8:	4620      	mov	r0, r4
 801c0da:	bd10      	pop	{r4, pc}

0801c0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c0dc:	b510      	push	{r4, lr}
 801c0de:	2104      	movs	r1, #4
 801c0e0:	4604      	mov	r4, r0
 801c0e2:	f00d fdfc 	bl	8029cde <_ZdlPvj>
 801c0e6:	4620      	mov	r0, r4
 801c0e8:	bd10      	pop	{r4, pc}

0801c0ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c0ea:	b510      	push	{r4, lr}
 801c0ec:	2104      	movs	r1, #4
 801c0ee:	4604      	mov	r4, r0
 801c0f0:	f00d fdf5 	bl	8029cde <_ZdlPvj>
 801c0f4:	4620      	mov	r0, r4
 801c0f6:	bd10      	pop	{r4, pc}

0801c0f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c0f8:	b510      	push	{r4, lr}
 801c0fa:	2104      	movs	r1, #4
 801c0fc:	4604      	mov	r4, r0
 801c0fe:	f00d fdee 	bl	8029cde <_ZdlPvj>
 801c102:	4620      	mov	r0, r4
 801c104:	bd10      	pop	{r4, pc}

0801c106 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c106:	b510      	push	{r4, lr}
 801c108:	2104      	movs	r1, #4
 801c10a:	4604      	mov	r4, r0
 801c10c:	f00d fde7 	bl	8029cde <_ZdlPvj>
 801c110:	4620      	mov	r0, r4
 801c112:	bd10      	pop	{r4, pc}

0801c114 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c114:	b510      	push	{r4, lr}
 801c116:	2104      	movs	r1, #4
 801c118:	4604      	mov	r4, r0
 801c11a:	f00d fde0 	bl	8029cde <_ZdlPvj>
 801c11e:	4620      	mov	r0, r4
 801c120:	bd10      	pop	{r4, pc}

0801c122 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c122:	b510      	push	{r4, lr}
 801c124:	2104      	movs	r1, #4
 801c126:	4604      	mov	r4, r0
 801c128:	f00d fdd9 	bl	8029cde <_ZdlPvj>
 801c12c:	4620      	mov	r0, r4
 801c12e:	bd10      	pop	{r4, pc}

0801c130 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c130:	b510      	push	{r4, lr}
 801c132:	2104      	movs	r1, #4
 801c134:	4604      	mov	r4, r0
 801c136:	f00d fdd2 	bl	8029cde <_ZdlPvj>
 801c13a:	4620      	mov	r0, r4
 801c13c:	bd10      	pop	{r4, pc}

0801c13e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c13e:	b510      	push	{r4, lr}
 801c140:	2104      	movs	r1, #4
 801c142:	4604      	mov	r4, r0
 801c144:	f00d fdcb 	bl	8029cde <_ZdlPvj>
 801c148:	4620      	mov	r0, r4
 801c14a:	bd10      	pop	{r4, pc}

0801c14c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c14c:	b510      	push	{r4, lr}
 801c14e:	2104      	movs	r1, #4
 801c150:	4604      	mov	r4, r0
 801c152:	f00d fdc4 	bl	8029cde <_ZdlPvj>
 801c156:	4620      	mov	r0, r4
 801c158:	bd10      	pop	{r4, pc}

0801c15a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c15a:	b510      	push	{r4, lr}
 801c15c:	2104      	movs	r1, #4
 801c15e:	4604      	mov	r4, r0
 801c160:	f00d fdbd 	bl	8029cde <_ZdlPvj>
 801c164:	4620      	mov	r0, r4
 801c166:	bd10      	pop	{r4, pc}

0801c168 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c168:	b510      	push	{r4, lr}
 801c16a:	2104      	movs	r1, #4
 801c16c:	4604      	mov	r4, r0
 801c16e:	f00d fdb6 	bl	8029cde <_ZdlPvj>
 801c172:	4620      	mov	r0, r4
 801c174:	bd10      	pop	{r4, pc}

0801c176 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c176:	b510      	push	{r4, lr}
 801c178:	2104      	movs	r1, #4
 801c17a:	4604      	mov	r4, r0
 801c17c:	f00d fdaf 	bl	8029cde <_ZdlPvj>
 801c180:	4620      	mov	r0, r4
 801c182:	bd10      	pop	{r4, pc}

0801c184 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c184:	b510      	push	{r4, lr}
 801c186:	2104      	movs	r1, #4
 801c188:	4604      	mov	r4, r0
 801c18a:	f00d fda8 	bl	8029cde <_ZdlPvj>
 801c18e:	4620      	mov	r0, r4
 801c190:	bd10      	pop	{r4, pc}

0801c192 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c192:	b510      	push	{r4, lr}
 801c194:	2104      	movs	r1, #4
 801c196:	4604      	mov	r4, r0
 801c198:	f00d fda1 	bl	8029cde <_ZdlPvj>
 801c19c:	4620      	mov	r0, r4
 801c19e:	bd10      	pop	{r4, pc}

0801c1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c1a0:	b510      	push	{r4, lr}
 801c1a2:	2104      	movs	r1, #4
 801c1a4:	4604      	mov	r4, r0
 801c1a6:	f00d fd9a 	bl	8029cde <_ZdlPvj>
 801c1aa:	4620      	mov	r0, r4
 801c1ac:	bd10      	pop	{r4, pc}

0801c1ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c1ae:	b510      	push	{r4, lr}
 801c1b0:	2104      	movs	r1, #4
 801c1b2:	4604      	mov	r4, r0
 801c1b4:	f00d fd93 	bl	8029cde <_ZdlPvj>
 801c1b8:	4620      	mov	r0, r4
 801c1ba:	bd10      	pop	{r4, pc}

0801c1bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c1bc:	b510      	push	{r4, lr}
 801c1be:	2104      	movs	r1, #4
 801c1c0:	4604      	mov	r4, r0
 801c1c2:	f00d fd8c 	bl	8029cde <_ZdlPvj>
 801c1c6:	4620      	mov	r0, r4
 801c1c8:	bd10      	pop	{r4, pc}

0801c1ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c1ca:	b510      	push	{r4, lr}
 801c1cc:	2104      	movs	r1, #4
 801c1ce:	4604      	mov	r4, r0
 801c1d0:	f00d fd85 	bl	8029cde <_ZdlPvj>
 801c1d4:	4620      	mov	r0, r4
 801c1d6:	bd10      	pop	{r4, pc}

0801c1d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c1d8:	b510      	push	{r4, lr}
 801c1da:	2104      	movs	r1, #4
 801c1dc:	4604      	mov	r4, r0
 801c1de:	f00d fd7e 	bl	8029cde <_ZdlPvj>
 801c1e2:	4620      	mov	r0, r4
 801c1e4:	bd10      	pop	{r4, pc}

0801c1e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c1e6:	b510      	push	{r4, lr}
 801c1e8:	2104      	movs	r1, #4
 801c1ea:	4604      	mov	r4, r0
 801c1ec:	f00d fd77 	bl	8029cde <_ZdlPvj>
 801c1f0:	4620      	mov	r0, r4
 801c1f2:	bd10      	pop	{r4, pc}

0801c1f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c1f4:	b510      	push	{r4, lr}
 801c1f6:	2104      	movs	r1, #4
 801c1f8:	4604      	mov	r4, r0
 801c1fa:	f00d fd70 	bl	8029cde <_ZdlPvj>
 801c1fe:	4620      	mov	r0, r4
 801c200:	bd10      	pop	{r4, pc}
	...

0801c204 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c208:	b08f      	sub	sp, #60	; 0x3c
 801c20a:	461c      	mov	r4, r3
 801c20c:	9205      	str	r2, [sp, #20]
 801c20e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c212:	9100      	str	r1, [sp, #0]
 801c214:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c216:	9201      	str	r2, [sp, #4]
 801c218:	2a00      	cmp	r2, #0
 801c21a:	f000 8115 	beq.w	801c448 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c21e:	6820      	ldr	r0, [r4, #0]
 801c220:	6861      	ldr	r1, [r4, #4]
 801c222:	aa0a      	add	r2, sp, #40	; 0x28
 801c224:	c203      	stmia	r2!, {r0, r1}
 801c226:	6818      	ldr	r0, [r3, #0]
 801c228:	6859      	ldr	r1, [r3, #4]
 801c22a:	aa0c      	add	r2, sp, #48	; 0x30
 801c22c:	c203      	stmia	r2!, {r0, r1}
 801c22e:	a80a      	add	r0, sp, #40	; 0x28
 801c230:	f7f9 fb2a 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c234:	4621      	mov	r1, r4
 801c236:	a80c      	add	r0, sp, #48	; 0x30
 801c238:	f7f9 fb6a 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c23c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c240:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c244:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c248:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c24c:	bfde      	ittt	le
 801c24e:	b2b3      	uxthle	r3, r6
 801c250:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c254:	fb92 f3f3 	sdivle	r3, r2, r3
 801c258:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c25c:	bfc8      	it	gt
 801c25e:	2301      	movgt	r3, #1
 801c260:	fb92 f1f3 	sdiv	r1, r2, r3
 801c264:	fa1f fc81 	uxth.w	ip, r1
 801c268:	fb0c 2413 	mls	r4, ip, r3, r2
 801c26c:	fb14 f406 	smulbb	r4, r4, r6
 801c270:	441d      	add	r5, r3
 801c272:	4404      	add	r4, r0
 801c274:	4661      	mov	r1, ip
 801c276:	3d01      	subs	r5, #1
 801c278:	b2a4      	uxth	r4, r4
 801c27a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c27e:	b131      	cbz	r1, 801c28e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c280:	9b05      	ldr	r3, [sp, #20]
 801c282:	9900      	ldr	r1, [sp, #0]
 801c284:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c288:	ba1b      	rev	r3, r3
 801c28a:	4419      	add	r1, r3
 801c28c:	9100      	str	r1, [sp, #0]
 801c28e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c292:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c296:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c29a:	4418      	add	r0, r3
 801c29c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c2a0:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c2a4:	441a      	add	r2, r3
 801c2a6:	4b6a      	ldr	r3, [pc, #424]	; (801c450 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c2a8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c2ac:	6818      	ldr	r0, [r3, #0]
 801c2ae:	6803      	ldr	r3, [r0, #0]
 801c2b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c2b2:	4798      	blx	r3
 801c2b4:	4967      	ldr	r1, [pc, #412]	; (801c454 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c2b6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c2ba:	880b      	ldrh	r3, [r1, #0]
 801c2bc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c2c0:	9109      	str	r1, [sp, #36]	; 0x24
 801c2c2:	fb03 c202 	mla	r2, r3, r2, ip
 801c2c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c2ca:	4373      	muls	r3, r6
 801c2cc:	b2ad      	uxth	r5, r5
 801c2ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c2d2:	00ad      	lsls	r5, r5, #2
 801c2d4:	9306      	str	r3, [sp, #24]
 801c2d6:	1d2b      	adds	r3, r5, #4
 801c2d8:	9307      	str	r3, [sp, #28]
 801c2da:	9b01      	ldr	r3, [sp, #4]
 801c2dc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c2e0:	9103      	str	r1, [sp, #12]
 801c2e2:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c2e6:	2c00      	cmp	r4, #0
 801c2e8:	bf0c      	ite	eq
 801c2ea:	46c6      	moveq	lr, r8
 801c2ec:	f04f 0e00 	movne.w	lr, #0
 801c2f0:	2300      	movs	r3, #0
 801c2f2:	b292      	uxth	r2, r2
 801c2f4:	fa1f fe8e 	uxth.w	lr, lr
 801c2f8:	9302      	str	r3, [sp, #8]
 801c2fa:	9204      	str	r2, [sp, #16]
 801c2fc:	9a06      	ldr	r2, [sp, #24]
 801c2fe:	4282      	cmp	r2, r0
 801c300:	f240 809d 	bls.w	801c43e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c304:	b963      	cbnz	r3, 801c320 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c306:	9b00      	ldr	r3, [sp, #0]
 801c308:	781a      	ldrb	r2, [r3, #0]
 801c30a:	0993      	lsrs	r3, r2, #6
 801c30c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c310:	9202      	str	r2, [sp, #8]
 801c312:	1e5a      	subs	r2, r3, #1
 801c314:	2a02      	cmp	r2, #2
 801c316:	d815      	bhi.n	801c344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c318:	9a00      	ldr	r2, [sp, #0]
 801c31a:	3201      	adds	r2, #1
 801c31c:	9200      	str	r2, [sp, #0]
 801c31e:	b29b      	uxth	r3, r3
 801c320:	b1b4      	cbz	r4, 801c350 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c322:	429c      	cmp	r4, r3
 801c324:	bf95      	itete	ls
 801c326:	1b1c      	subls	r4, r3, r4
 801c328:	1ae4      	subhi	r4, r4, r3
 801c32a:	fa1f fa84 	uxthls.w	sl, r4
 801c32e:	b2a4      	uxthhi	r4, r4
 801c330:	bf87      	ittee	hi
 801c332:	4671      	movhi	r1, lr
 801c334:	f04f 0a00 	movhi.w	sl, #0
 801c338:	fa1f f188 	uxthls.w	r1, r8
 801c33c:	2400      	movls	r4, #0
 801c33e:	4653      	mov	r3, sl
 801c340:	468e      	mov	lr, r1
 801c342:	e7db      	b.n	801c2fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c344:	9a00      	ldr	r2, [sp, #0]
 801c346:	9b00      	ldr	r3, [sp, #0]
 801c348:	3202      	adds	r2, #2
 801c34a:	785b      	ldrb	r3, [r3, #1]
 801c34c:	9200      	str	r2, [sp, #0]
 801c34e:	e7e7      	b.n	801c320 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c350:	2202      	movs	r2, #2
 801c352:	4615      	mov	r5, r2
 801c354:	9907      	ldr	r1, [sp, #28]
 801c356:	9a02      	ldr	r2, [sp, #8]
 801c358:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c35c:	9905      	ldr	r1, [sp, #20]
 801c35e:	4573      	cmp	r3, lr
 801c360:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c364:	9a01      	ldr	r2, [sp, #4]
 801c366:	bf2b      	itete	cs
 801c368:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c36c:	ebae 0103 	subcc.w	r1, lr, r3
 801c370:	46f1      	movcs	r9, lr
 801c372:	4699      	movcc	r9, r3
 801c374:	bf27      	ittee	cs
 801c376:	fa1f fa8a 	uxthcs.w	sl, sl
 801c37a:	4621      	movcs	r1, r4
 801c37c:	b289      	uxthcc	r1, r1
 801c37e:	46a2      	movcc	sl, r4
 801c380:	2aff      	cmp	r2, #255	; 0xff
 801c382:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c386:	d105      	bne.n	801c394 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c388:	4481      	add	r9, r0
 801c38a:	4581      	cmp	r9, r0
 801c38c:	d045      	beq.n	801c41a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c38e:	f820 cb02 	strh.w	ip, [r0], #2
 801c392:	e7fa      	b.n	801c38a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c394:	9d03      	ldr	r5, [sp, #12]
 801c396:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c39a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c39e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c3a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c3a6:	436a      	muls	r2, r5
 801c3a8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c3ac:	fa5f fc8c 	uxtb.w	ip, ip
 801c3b0:	9208      	str	r2, [sp, #32]
 801c3b2:	fb0b fb05 	mul.w	fp, fp, r5
 801c3b6:	fb0c fc05 	mul.w	ip, ip, r5
 801c3ba:	4481      	add	r9, r0
 801c3bc:	4581      	cmp	r9, r0
 801c3be:	d02c      	beq.n	801c41a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c3c0:	8802      	ldrh	r2, [r0, #0]
 801c3c2:	9d04      	ldr	r5, [sp, #16]
 801c3c4:	9f04      	ldr	r7, [sp, #16]
 801c3c6:	1216      	asrs	r6, r2, #8
 801c3c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c3cc:	fb16 f605 	smulbb	r6, r6, r5
 801c3d0:	9d08      	ldr	r5, [sp, #32]
 801c3d2:	442e      	add	r6, r5
 801c3d4:	10d5      	asrs	r5, r2, #3
 801c3d6:	00d2      	lsls	r2, r2, #3
 801c3d8:	b2d2      	uxtb	r2, r2
 801c3da:	fb12 f207 	smulbb	r2, r2, r7
 801c3de:	b2b6      	uxth	r6, r6
 801c3e0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c3e4:	4462      	add	r2, ip
 801c3e6:	fb15 f507 	smulbb	r5, r5, r7
 801c3ea:	b292      	uxth	r2, r2
 801c3ec:	1c77      	adds	r7, r6, #1
 801c3ee:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c3f2:	1c57      	adds	r7, r2, #1
 801c3f4:	445d      	add	r5, fp
 801c3f6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c3fa:	b2ad      	uxth	r5, r5
 801c3fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c400:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c404:	4316      	orrs	r6, r2
 801c406:	1c6a      	adds	r2, r5, #1
 801c408:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c40c:	096d      	lsrs	r5, r5, #5
 801c40e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c412:	432e      	orrs	r6, r5
 801c414:	f820 6b02 	strh.w	r6, [r0], #2
 801c418:	e7d0      	b.n	801c3bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c41a:	4573      	cmp	r3, lr
 801c41c:	d38f      	bcc.n	801c33e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c41e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c422:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c424:	fa1f f188 	uxth.w	r1, r8
 801c428:	1a64      	subs	r4, r4, r1
 801c42a:	881b      	ldrh	r3, [r3, #0]
 801c42c:	b2a4      	uxth	r4, r4
 801c42e:	2c00      	cmp	r4, #0
 801c430:	eba3 0308 	sub.w	r3, r3, r8
 801c434:	bf18      	it	ne
 801c436:	2100      	movne	r1, #0
 801c438:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c43c:	e77f      	b.n	801c33e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c43e:	4b04      	ldr	r3, [pc, #16]	; (801c450 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c440:	6818      	ldr	r0, [r3, #0]
 801c442:	6803      	ldr	r3, [r0, #0]
 801c444:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c446:	4798      	blx	r3
 801c448:	b00f      	add	sp, #60	; 0x3c
 801c44a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c44e:	bf00      	nop
 801c450:	20012da4 	.word	0x20012da4
 801c454:	20012d9e 	.word	0x20012d9e

0801c458 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c45c:	b09f      	sub	sp, #124	; 0x7c
 801c45e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c462:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c466:	9209      	str	r2, [sp, #36]	; 0x24
 801c468:	461d      	mov	r5, r3
 801c46a:	4604      	mov	r4, r0
 801c46c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c46e:	2a00      	cmp	r2, #0
 801c470:	f000 81eb 	beq.w	801c84a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c474:	6828      	ldr	r0, [r5, #0]
 801c476:	6869      	ldr	r1, [r5, #4]
 801c478:	aa1a      	add	r2, sp, #104	; 0x68
 801c47a:	c203      	stmia	r2!, {r0, r1}
 801c47c:	6818      	ldr	r0, [r3, #0]
 801c47e:	6859      	ldr	r1, [r3, #4]
 801c480:	aa1c      	add	r2, sp, #112	; 0x70
 801c482:	c203      	stmia	r2!, {r0, r1}
 801c484:	a81a      	add	r0, sp, #104	; 0x68
 801c486:	f7f9 f9ff 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c48a:	4629      	mov	r1, r5
 801c48c:	a81c      	add	r0, sp, #112	; 0x70
 801c48e:	f7f9 fa3f 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c492:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c496:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c49a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c49e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c4a2:	bfd7      	itett	le
 801c4a4:	b29a      	uxthle	r2, r3
 801c4a6:	2201      	movgt	r2, #1
 801c4a8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c4ac:	fb91 f2f2 	sdivle	r2, r1, r2
 801c4b0:	9202      	str	r2, [sp, #8]
 801c4b2:	9802      	ldr	r0, [sp, #8]
 801c4b4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c4b8:	fb92 f0f0 	sdiv	r0, r2, r0
 801c4bc:	b280      	uxth	r0, r0
 801c4be:	9010      	str	r0, [sp, #64]	; 0x40
 801c4c0:	9902      	ldr	r1, [sp, #8]
 801c4c2:	9802      	ldr	r0, [sp, #8]
 801c4c4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c4c6:	4488      	add	r8, r1
 801c4c8:	fb05 2510 	mls	r5, r5, r0, r2
 801c4cc:	fb15 f503 	smulbb	r5, r5, r3
 801c4d0:	f108 38ff 	add.w	r8, r8, #4294967295
 801c4d4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c4d8:	fb98 f8f1 	sdiv	r8, r8, r1
 801c4dc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c4e0:	440d      	add	r5, r1
 801c4e2:	4419      	add	r1, r3
 801c4e4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c4e8:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c4ec:	441a      	add	r2, r3
 801c4ee:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c4f2:	9304      	str	r3, [sp, #16]
 801c4f4:	4b95      	ldr	r3, [pc, #596]	; (801c74c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c4f6:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c4fa:	6818      	ldr	r0, [r3, #0]
 801c4fc:	6803      	ldr	r3, [r0, #0]
 801c4fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c500:	4798      	blx	r3
 801c502:	4b93      	ldr	r3, [pc, #588]	; (801c750 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c504:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c508:	881a      	ldrh	r2, [r3, #0]
 801c50a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c50e:	9318      	str	r3, [sp, #96]	; 0x60
 801c510:	fb02 7101 	mla	r1, r2, r1, r7
 801c514:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c518:	4356      	muls	r6, r2
 801c51a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c51e:	f108 0801 	add.w	r8, r8, #1
 801c522:	920a      	str	r2, [sp, #40]	; 0x28
 801c524:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c526:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c52a:	930f      	str	r3, [sp, #60]	; 0x3c
 801c52c:	fa1f f888 	uxth.w	r8, r8
 801c530:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c534:	f108 0204 	add.w	r2, r8, #4
 801c538:	9211      	str	r2, [sp, #68]	; 0x44
 801c53a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c53c:	4b85      	ldr	r3, [pc, #532]	; (801c754 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c53e:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c542:	b2ad      	uxth	r5, r5
 801c544:	9215      	str	r2, [sp, #84]	; 0x54
 801c546:	2d00      	cmp	r5, #0
 801c548:	9a04      	ldr	r2, [sp, #16]
 801c54a:	f04f 0100 	mov.w	r1, #0
 801c54e:	bf18      	it	ne
 801c550:	2200      	movne	r2, #0
 801c552:	1b1b      	subs	r3, r3, r4
 801c554:	b292      	uxth	r2, r2
 801c556:	910d      	str	r1, [sp, #52]	; 0x34
 801c558:	9319      	str	r3, [sp, #100]	; 0x64
 801c55a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c55c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c55e:	fa11 f383 	uxtah	r3, r1, r3
 801c562:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c564:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c568:	3304      	adds	r3, #4
 801c56a:	9306      	str	r3, [sp, #24]
 801c56c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c56e:	4283      	cmp	r3, r0
 801c570:	f240 8166 	bls.w	801c840 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c574:	9902      	ldr	r1, [sp, #8]
 801c576:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c57a:	fbb5 f3f3 	udiv	r3, r5, r3
 801c57e:	1acb      	subs	r3, r1, r3
 801c580:	b29b      	uxth	r3, r3
 801c582:	9316      	str	r3, [sp, #88]	; 0x58
 801c584:	9b06      	ldr	r3, [sp, #24]
 801c586:	9e06      	ldr	r6, [sp, #24]
 801c588:	7859      	ldrb	r1, [r3, #1]
 801c58a:	789b      	ldrb	r3, [r3, #2]
 801c58c:	7836      	ldrb	r6, [r6, #0]
 801c58e:	9612      	str	r6, [sp, #72]	; 0x48
 801c590:	021b      	lsls	r3, r3, #8
 801c592:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c596:	9906      	ldr	r1, [sp, #24]
 801c598:	78c9      	ldrb	r1, [r1, #3]
 801c59a:	430b      	orrs	r3, r1
 801c59c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c59e:	3601      	adds	r6, #1
 801c5a0:	4419      	add	r1, r3
 801c5a2:	9605      	str	r6, [sp, #20]
 801c5a4:	1c4e      	adds	r6, r1, #1
 801c5a6:	9603      	str	r6, [sp, #12]
 801c5a8:	7849      	ldrb	r1, [r1, #1]
 801c5aa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c5ac:	0209      	lsls	r1, r1, #8
 801c5ae:	5cf3      	ldrb	r3, [r6, r3]
 801c5b0:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c5b4:	4319      	orrs	r1, r3
 801c5b6:	b28b      	uxth	r3, r1
 801c5b8:	930c      	str	r3, [sp, #48]	; 0x30
 801c5ba:	2300      	movs	r3, #0
 801c5bc:	f04f 0a01 	mov.w	sl, #1
 801c5c0:	9307      	str	r3, [sp, #28]
 801c5c2:	469c      	mov	ip, r3
 801c5c4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c5c8:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c5cc:	46d3      	mov	fp, sl
 801c5ce:	4657      	mov	r7, sl
 801c5d0:	930e      	str	r3, [sp, #56]	; 0x38
 801c5d2:	2d00      	cmp	r5, #0
 801c5d4:	d07e      	beq.n	801c6d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c5d6:	42af      	cmp	r7, r5
 801c5d8:	d26e      	bcs.n	801c6b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c5da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c5dc:	9201      	str	r2, [sp, #4]
 801c5de:	1bed      	subs	r5, r5, r7
 801c5e0:	4283      	cmp	r3, r0
 801c5e2:	b2ad      	uxth	r5, r5
 801c5e4:	d802      	bhi.n	801c5ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c5e6:	e073      	b.n	801c6d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c5e8:	2b00      	cmp	r3, #0
 801c5ea:	d15f      	bne.n	801c6ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c5ec:	9b03      	ldr	r3, [sp, #12]
 801c5ee:	785b      	ldrb	r3, [r3, #1]
 801c5f0:	f1cb 0207 	rsb	r2, fp, #7
 801c5f4:	4093      	lsls	r3, r2
 801c5f6:	005b      	lsls	r3, r3, #1
 801c5f8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c5fc:	9b03      	ldr	r3, [sp, #12]
 801c5fe:	781b      	ldrb	r3, [r3, #0]
 801c600:	fa43 f30b 	asr.w	r3, r3, fp
 801c604:	b2db      	uxtb	r3, r3
 801c606:	4313      	orrs	r3, r2
 801c608:	f10b 0201 	add.w	r2, fp, #1
 801c60c:	fa5f fb82 	uxtb.w	fp, r2
 801c610:	9a03      	ldr	r2, [sp, #12]
 801c612:	f1bb 0f08 	cmp.w	fp, #8
 801c616:	bf15      	itete	ne
 801c618:	3201      	addne	r2, #1
 801c61a:	3202      	addeq	r2, #2
 801c61c:	9203      	strne	r2, [sp, #12]
 801c61e:	9203      	streq	r2, [sp, #12]
 801c620:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c622:	b29f      	uxth	r7, r3
 801c624:	bf08      	it	eq
 801c626:	f04f 0b00 	moveq.w	fp, #0
 801c62a:	42ba      	cmp	r2, r7
 801c62c:	d309      	bcc.n	801c642 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c62e:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c632:	2301      	movs	r3, #1
 801c634:	9a05      	ldr	r2, [sp, #20]
 801c636:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801c63a:	d30e      	bcc.n	801c65a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801c63c:	469a      	mov	sl, r3
 801c63e:	2600      	movs	r6, #0
 801c640:	e035      	b.n	801c6ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801c642:	9b05      	ldr	r3, [sp, #20]
 801c644:	429f      	cmp	r7, r3
 801c646:	d318      	bcc.n	801c67a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801c648:	eb04 030a 	add.w	r3, r4, sl
 801c64c:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801c650:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801c654:	f10a 0301 	add.w	r3, sl, #1
 801c658:	b29b      	uxth	r3, r3
 801c65a:	9a05      	ldr	r2, [sp, #20]
 801c65c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c660:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c662:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c666:	7116      	strb	r6, [r2, #4]
 801c668:	f10a 0601 	add.w	r6, sl, #1
 801c66c:	80d1      	strh	r1, [r2, #6]
 801c66e:	7156      	strb	r6, [r2, #5]
 801c670:	9a05      	ldr	r2, [sp, #20]
 801c672:	3201      	adds	r2, #1
 801c674:	b292      	uxth	r2, r2
 801c676:	9205      	str	r2, [sp, #20]
 801c678:	e7e0      	b.n	801c63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801c67a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801c67e:	463a      	mov	r2, r7
 801c680:	795b      	ldrb	r3, [r3, #5]
 801c682:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c686:	4426      	add	r6, r4
 801c688:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c68a:	eb01 0c06 	add.w	ip, r1, r6
 801c68e:	f1bc 0f00 	cmp.w	ip, #0
 801c692:	dd07      	ble.n	801c6a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801c694:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c698:	f892 c004 	ldrb.w	ip, [r2, #4]
 801c69c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801c6a0:	88d2      	ldrh	r2, [r2, #6]
 801c6a2:	e7f1      	b.n	801c688 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801c6a4:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c6a8:	b29b      	uxth	r3, r3
 801c6aa:	e7c3      	b.n	801c634 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801c6ac:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c6ae:	970c      	str	r7, [sp, #48]	; 0x30
 801c6b0:	9a01      	ldr	r2, [sp, #4]
 801c6b2:	46b4      	mov	ip, r6
 801c6b4:	461f      	mov	r7, r3
 801c6b6:	e78c      	b.n	801c5d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801c6b8:	1b7b      	subs	r3, r7, r5
 801c6ba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c6be:	9201      	str	r2, [sp, #4]
 801c6c0:	eb0c 0605 	add.w	r6, ip, r5
 801c6c4:	b29b      	uxth	r3, r3
 801c6c6:	b2b6      	uxth	r6, r6
 801c6c8:	2500      	movs	r5, #0
 801c6ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c6cc:	4282      	cmp	r2, r0
 801c6ce:	d88b      	bhi.n	801c5e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c6d0:	9a01      	ldr	r2, [sp, #4]
 801c6d2:	e74b      	b.n	801c56c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801c6d4:	4297      	cmp	r7, r2
 801c6d6:	d332      	bcc.n	801c73e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801c6d8:	1abb      	subs	r3, r7, r2
 801c6da:	b29b      	uxth	r3, r3
 801c6dc:	9208      	str	r2, [sp, #32]
 801c6de:	9501      	str	r5, [sp, #4]
 801c6e0:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c6e2:	29ff      	cmp	r1, #255	; 0xff
 801c6e4:	9908      	ldr	r1, [sp, #32]
 801c6e6:	eb0c 0601 	add.w	r6, ip, r1
 801c6ea:	d135      	bne.n	801c758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801c6ec:	f1a0 0e02 	sub.w	lr, r0, #2
 801c6f0:	b2b6      	uxth	r6, r6
 801c6f2:	45b4      	cmp	ip, r6
 801c6f4:	f040 808c 	bne.w	801c810 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801c6f8:	9908      	ldr	r1, [sp, #32]
 801c6fa:	4297      	cmp	r7, r2
 801c6fc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c700:	d3e2      	bcc.n	801c6c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801c702:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c704:	9904      	ldr	r1, [sp, #16]
 801c706:	8812      	ldrh	r2, [r2, #0]
 801c708:	1a52      	subs	r2, r2, r1
 801c70a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c70e:	9a07      	ldr	r2, [sp, #28]
 801c710:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c712:	3201      	adds	r2, #1
 801c714:	428a      	cmp	r2, r1
 801c716:	9207      	str	r2, [sp, #28]
 801c718:	f040 8087 	bne.w	801c82a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c71c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c720:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801c724:	9b04      	ldr	r3, [sp, #16]
 801c726:	1bed      	subs	r5, r5, r7
 801c728:	b2ad      	uxth	r5, r5
 801c72a:	2d00      	cmp	r5, #0
 801c72c:	bf08      	it	eq
 801c72e:	461a      	moveq	r2, r3
 801c730:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c732:	bf18      	it	ne
 801c734:	2200      	movne	r2, #0
 801c736:	3301      	adds	r3, #1
 801c738:	930d      	str	r3, [sp, #52]	; 0x34
 801c73a:	b292      	uxth	r2, r2
 801c73c:	e70d      	b.n	801c55a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801c73e:	1bd1      	subs	r1, r2, r7
 801c740:	b28b      	uxth	r3, r1
 801c742:	9301      	str	r3, [sp, #4]
 801c744:	9708      	str	r7, [sp, #32]
 801c746:	462b      	mov	r3, r5
 801c748:	e7ca      	b.n	801c6e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801c74a:	bf00      	nop
 801c74c:	20012da4 	.word	0x20012da4
 801c750:	20012d9e 	.word	0x20012d9e
 801c754:	fffff7fb 	.word	0xfffff7fb
 801c758:	b2b6      	uxth	r6, r6
 801c75a:	900b      	str	r0, [sp, #44]	; 0x2c
 801c75c:	45b4      	cmp	ip, r6
 801c75e:	d0cb      	beq.n	801c6f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801c760:	f10c 0101 	add.w	r1, ip, #1
 801c764:	44a4      	add	ip, r4
 801c766:	9117      	str	r1, [sp, #92]	; 0x5c
 801c768:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c76c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c76e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c772:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c774:	f8b1 c000 	ldrh.w	ip, [r1]
 801c778:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c77a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801c77e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c782:	fb1e fe01 	smulbb	lr, lr, r1
 801c786:	ea4f 2825 	mov.w	r8, r5, asr #8
 801c78a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c78c:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c790:	fb08 e801 	mla	r8, r8, r1, lr
 801c794:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801c798:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c79a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c79e:	fb19 f901 	smulbb	r9, r9, r1
 801c7a2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801c7a6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c7a8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c7ac:	fb0e 9e01 	mla	lr, lr, r1, r9
 801c7b0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c7b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c7b6:	fa5f fc8c 	uxtb.w	ip, ip
 801c7ba:	fb1c fc01 	smulbb	ip, ip, r1
 801c7be:	00ed      	lsls	r5, r5, #3
 801c7c0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c7c2:	b2ed      	uxtb	r5, r5
 801c7c4:	fb05 c501 	mla	r5, r5, r1, ip
 801c7c8:	fa1f f888 	uxth.w	r8, r8
 801c7cc:	fa1f fe8e 	uxth.w	lr, lr
 801c7d0:	b2ad      	uxth	r5, r5
 801c7d2:	f108 0c01 	add.w	ip, r8, #1
 801c7d6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801c7da:	f10e 0901 	add.w	r9, lr, #1
 801c7de:	f105 0c01 	add.w	ip, r5, #1
 801c7e2:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801c7e6:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801c7ea:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c7ee:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c7f2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c7f6:	ea4c 0808 	orr.w	r8, ip, r8
 801c7fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c7fc:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801c800:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c804:	ea48 0809 	orr.w	r8, r8, r9
 801c808:	f821 8b02 	strh.w	r8, [r1], #2
 801c80c:	910b      	str	r1, [sp, #44]	; 0x2c
 801c80e:	e7a5      	b.n	801c75c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801c810:	f10c 0801 	add.w	r8, ip, #1
 801c814:	44a4      	add	ip, r4
 801c816:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c818:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c81c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c820:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801c824:	fa1f fc88 	uxth.w	ip, r8
 801c828:	e763      	b.n	801c6f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801c82a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c82e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c832:	1aad      	subs	r5, r5, r2
 801c834:	b2ad      	uxth	r5, r5
 801c836:	2d00      	cmp	r5, #0
 801c838:	bf18      	it	ne
 801c83a:	2200      	movne	r2, #0
 801c83c:	9201      	str	r2, [sp, #4]
 801c83e:	e744      	b.n	801c6ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801c840:	4b03      	ldr	r3, [pc, #12]	; (801c850 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801c842:	6818      	ldr	r0, [r3, #0]
 801c844:	6803      	ldr	r3, [r0, #0]
 801c846:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c848:	4798      	blx	r3
 801c84a:	b01f      	add	sp, #124	; 0x7c
 801c84c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c850:	20012da4 	.word	0x20012da4

0801c854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c858:	b08f      	sub	sp, #60	; 0x3c
 801c85a:	461c      	mov	r4, r3
 801c85c:	9203      	str	r2, [sp, #12]
 801c85e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c862:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c864:	9202      	str	r2, [sp, #8]
 801c866:	460f      	mov	r7, r1
 801c868:	2a00      	cmp	r2, #0
 801c86a:	f000 8128 	beq.w	801cabe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801c86e:	6820      	ldr	r0, [r4, #0]
 801c870:	6861      	ldr	r1, [r4, #4]
 801c872:	aa0a      	add	r2, sp, #40	; 0x28
 801c874:	c203      	stmia	r2!, {r0, r1}
 801c876:	6818      	ldr	r0, [r3, #0]
 801c878:	6859      	ldr	r1, [r3, #4]
 801c87a:	aa0c      	add	r2, sp, #48	; 0x30
 801c87c:	c203      	stmia	r2!, {r0, r1}
 801c87e:	a80a      	add	r0, sp, #40	; 0x28
 801c880:	f7f9 f802 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c884:	4621      	mov	r1, r4
 801c886:	a80c      	add	r0, sp, #48	; 0x30
 801c888:	f7f9 f842 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c88c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c890:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c894:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c898:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c89c:	bfde      	ittt	le
 801c89e:	b2b3      	uxthle	r3, r6
 801c8a0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c8a4:	fb92 f3f3 	sdivle	r3, r2, r3
 801c8a8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c8ac:	bfc8      	it	gt
 801c8ae:	2301      	movgt	r3, #1
 801c8b0:	fb92 f1f3 	sdiv	r1, r2, r3
 801c8b4:	fa1f fc81 	uxth.w	ip, r1
 801c8b8:	fb0c 2413 	mls	r4, ip, r3, r2
 801c8bc:	fb14 f406 	smulbb	r4, r4, r6
 801c8c0:	441d      	add	r5, r3
 801c8c2:	4404      	add	r4, r0
 801c8c4:	4661      	mov	r1, ip
 801c8c6:	3d01      	subs	r5, #1
 801c8c8:	b2a4      	uxth	r4, r4
 801c8ca:	fb95 f5f3 	sdiv	r5, r5, r3
 801c8ce:	b121      	cbz	r1, 801c8da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801c8d0:	9b03      	ldr	r3, [sp, #12]
 801c8d2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c8d6:	ba1b      	rev	r3, r3
 801c8d8:	441f      	add	r7, r3
 801c8da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c8de:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801c8e2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c8e6:	4418      	add	r0, r3
 801c8e8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c8ec:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c8f0:	441a      	add	r2, r3
 801c8f2:	4b74      	ldr	r3, [pc, #464]	; (801cac4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c8f4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c8f8:	6818      	ldr	r0, [r3, #0]
 801c8fa:	6803      	ldr	r3, [r0, #0]
 801c8fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c8fe:	4798      	blx	r3
 801c900:	4a71      	ldr	r2, [pc, #452]	; (801cac8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801c902:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801c906:	8813      	ldrh	r3, [r2, #0]
 801c908:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c90c:	9209      	str	r2, [sp, #36]	; 0x24
 801c90e:	fb03 c101 	mla	r1, r3, r1, ip
 801c912:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c916:	4373      	muls	r3, r6
 801c918:	b2ad      	uxth	r5, r5
 801c91a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c91e:	00ad      	lsls	r5, r5, #2
 801c920:	2c00      	cmp	r4, #0
 801c922:	9304      	str	r3, [sp, #16]
 801c924:	f105 0304 	add.w	r3, r5, #4
 801c928:	9305      	str	r3, [sp, #20]
 801c92a:	bf0c      	ite	eq
 801c92c:	46c8      	moveq	r8, r9
 801c92e:	f04f 0800 	movne.w	r8, #0
 801c932:	2300      	movs	r3, #0
 801c934:	fa1f f888 	uxth.w	r8, r8
 801c938:	9301      	str	r3, [sp, #4]
 801c93a:	9a04      	ldr	r2, [sp, #16]
 801c93c:	4282      	cmp	r2, r0
 801c93e:	f240 80b9 	bls.w	801cab4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801c942:	b95b      	cbnz	r3, 801c95c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801c944:	783a      	ldrb	r2, [r7, #0]
 801c946:	0993      	lsrs	r3, r2, #6
 801c948:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c94c:	9201      	str	r2, [sp, #4]
 801c94e:	1e5a      	subs	r2, r3, #1
 801c950:	2a02      	cmp	r2, #2
 801c952:	bf8d      	iteet	hi
 801c954:	787b      	ldrbhi	r3, [r7, #1]
 801c956:	3701      	addls	r7, #1
 801c958:	b29b      	uxthls	r3, r3
 801c95a:	3702      	addhi	r7, #2
 801c95c:	b184      	cbz	r4, 801c980 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801c95e:	429c      	cmp	r4, r3
 801c960:	bf95      	itete	ls
 801c962:	1b1c      	subls	r4, r3, r4
 801c964:	1ae4      	subhi	r4, r4, r3
 801c966:	fa1f fa84 	uxthls.w	sl, r4
 801c96a:	b2a4      	uxthhi	r4, r4
 801c96c:	bf87      	ittee	hi
 801c96e:	46c4      	movhi	ip, r8
 801c970:	f04f 0a00 	movhi.w	sl, #0
 801c974:	fa1f fc89 	uxthls.w	ip, r9
 801c978:	2400      	movls	r4, #0
 801c97a:	4653      	mov	r3, sl
 801c97c:	46e0      	mov	r8, ip
 801c97e:	e7dc      	b.n	801c93a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801c980:	2204      	movs	r2, #4
 801c982:	4615      	mov	r5, r2
 801c984:	9905      	ldr	r1, [sp, #20]
 801c986:	9a01      	ldr	r2, [sp, #4]
 801c988:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c98c:	9903      	ldr	r1, [sp, #12]
 801c98e:	588a      	ldr	r2, [r1, r2]
 801c990:	4543      	cmp	r3, r8
 801c992:	bf27      	ittee	cs
 801c994:	eba3 0a08 	subcs.w	sl, r3, r8
 801c998:	46c6      	movcs	lr, r8
 801c99a:	eba8 0c03 	subcc.w	ip, r8, r3
 801c99e:	469e      	movcc	lr, r3
 801c9a0:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801c9a4:	bf27      	ittee	cs
 801c9a6:	fa1f fa8a 	uxthcs.w	sl, sl
 801c9aa:	46a4      	movcs	ip, r4
 801c9ac:	fa1f fc8c 	uxthcc.w	ip, ip
 801c9b0:	46a2      	movcc	sl, r4
 801c9b2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801c9b6:	2900      	cmp	r1, #0
 801c9b8:	d066      	beq.n	801ca88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801c9ba:	29ff      	cmp	r1, #255	; 0xff
 801c9bc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801c9c0:	d114      	bne.n	801c9ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c9c2:	9d02      	ldr	r5, [sp, #8]
 801c9c4:	2dff      	cmp	r5, #255	; 0xff
 801c9c6:	d111      	bne.n	801c9ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c9c8:	0951      	lsrs	r1, r2, #5
 801c9ca:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c9ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c9d2:	f026 0607 	bic.w	r6, r6, #7
 801c9d6:	430e      	orrs	r6, r1
 801c9d8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c9dc:	4316      	orrs	r6, r2
 801c9de:	b2b6      	uxth	r6, r6
 801c9e0:	4486      	add	lr, r0
 801c9e2:	4586      	cmp	lr, r0
 801c9e4:	d051      	beq.n	801ca8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c9e6:	f820 6b02 	strh.w	r6, [r0], #2
 801c9ea:	e7fa      	b.n	801c9e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801c9ec:	9d02      	ldr	r5, [sp, #8]
 801c9ee:	4369      	muls	r1, r5
 801c9f0:	1c4d      	adds	r5, r1, #1
 801c9f2:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801c9f6:	122d      	asrs	r5, r5, #8
 801c9f8:	ea6f 0b05 	mvn.w	fp, r5
 801c9fc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ca00:	b2ad      	uxth	r5, r5
 801ca02:	b2f6      	uxtb	r6, r6
 801ca04:	b2d2      	uxtb	r2, r2
 801ca06:	fb11 f105 	smulbb	r1, r1, r5
 801ca0a:	fb16 f605 	smulbb	r6, r6, r5
 801ca0e:	fb12 f205 	smulbb	r2, r2, r5
 801ca12:	b289      	uxth	r1, r1
 801ca14:	b2b6      	uxth	r6, r6
 801ca16:	b292      	uxth	r2, r2
 801ca18:	9106      	str	r1, [sp, #24]
 801ca1a:	9607      	str	r6, [sp, #28]
 801ca1c:	9208      	str	r2, [sp, #32]
 801ca1e:	4486      	add	lr, r0
 801ca20:	fa5f fb8b 	uxtb.w	fp, fp
 801ca24:	4586      	cmp	lr, r0
 801ca26:	d030      	beq.n	801ca8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ca28:	8802      	ldrh	r2, [r0, #0]
 801ca2a:	9906      	ldr	r1, [sp, #24]
 801ca2c:	1216      	asrs	r6, r2, #8
 801ca2e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ca32:	10d5      	asrs	r5, r2, #3
 801ca34:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ca38:	fb06 160b 	mla	r6, r6, fp, r1
 801ca3c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ca40:	9907      	ldr	r1, [sp, #28]
 801ca42:	00d2      	lsls	r2, r2, #3
 801ca44:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ca48:	fb05 150b 	mla	r5, r5, fp, r1
 801ca4c:	b2d2      	uxtb	r2, r2
 801ca4e:	9908      	ldr	r1, [sp, #32]
 801ca50:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ca54:	b2b6      	uxth	r6, r6
 801ca56:	fb02 120b 	mla	r2, r2, fp, r1
 801ca5a:	b292      	uxth	r2, r2
 801ca5c:	1c71      	adds	r1, r6, #1
 801ca5e:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801ca62:	1c51      	adds	r1, r2, #1
 801ca64:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ca68:	b2ad      	uxth	r5, r5
 801ca6a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ca6e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ca72:	4316      	orrs	r6, r2
 801ca74:	1c6a      	adds	r2, r5, #1
 801ca76:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ca7a:	096d      	lsrs	r5, r5, #5
 801ca7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ca80:	432e      	orrs	r6, r5
 801ca82:	f820 6b02 	strh.w	r6, [r0], #2
 801ca86:	e7cd      	b.n	801ca24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801ca88:	4470      	add	r0, lr
 801ca8a:	4543      	cmp	r3, r8
 801ca8c:	f4ff af75 	bcc.w	801c97a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ca90:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801ca94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ca96:	fa1f fc89 	uxth.w	ip, r9
 801ca9a:	eba4 040c 	sub.w	r4, r4, ip
 801ca9e:	881b      	ldrh	r3, [r3, #0]
 801caa0:	b2a4      	uxth	r4, r4
 801caa2:	2c00      	cmp	r4, #0
 801caa4:	eba3 0309 	sub.w	r3, r3, r9
 801caa8:	bf18      	it	ne
 801caaa:	f04f 0c00 	movne.w	ip, #0
 801caae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cab2:	e762      	b.n	801c97a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cab4:	4b03      	ldr	r3, [pc, #12]	; (801cac4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cab6:	6818      	ldr	r0, [r3, #0]
 801cab8:	6803      	ldr	r3, [r0, #0]
 801caba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cabc:	4798      	blx	r3
 801cabe:	b00f      	add	sp, #60	; 0x3c
 801cac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cac4:	20012da4 	.word	0x20012da4
 801cac8:	20012d9e 	.word	0x20012d9e

0801cacc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801cacc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cad0:	b093      	sub	sp, #76	; 0x4c
 801cad2:	461c      	mov	r4, r3
 801cad4:	9205      	str	r2, [sp, #20]
 801cad6:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801cada:	9101      	str	r1, [sp, #4]
 801cadc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cade:	9202      	str	r2, [sp, #8]
 801cae0:	2a00      	cmp	r2, #0
 801cae2:	f000 812c 	beq.w	801cd3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801cae6:	6820      	ldr	r0, [r4, #0]
 801cae8:	6861      	ldr	r1, [r4, #4]
 801caea:	aa0e      	add	r2, sp, #56	; 0x38
 801caec:	c203      	stmia	r2!, {r0, r1}
 801caee:	6818      	ldr	r0, [r3, #0]
 801caf0:	6859      	ldr	r1, [r3, #4]
 801caf2:	aa10      	add	r2, sp, #64	; 0x40
 801caf4:	c203      	stmia	r2!, {r0, r1}
 801caf6:	a80e      	add	r0, sp, #56	; 0x38
 801caf8:	f7f8 fec6 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cafc:	4621      	mov	r1, r4
 801cafe:	a810      	add	r0, sp, #64	; 0x40
 801cb00:	f7f8 ff06 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb04:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801cb08:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801cb0c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801cb10:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cb14:	bfde      	ittt	le
 801cb16:	b2b3      	uxthle	r3, r6
 801cb18:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cb1c:	fb92 f3f3 	sdivle	r3, r2, r3
 801cb20:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cb24:	bfc8      	it	gt
 801cb26:	2301      	movgt	r3, #1
 801cb28:	fb92 f1f3 	sdiv	r1, r2, r3
 801cb2c:	fa1f fc81 	uxth.w	ip, r1
 801cb30:	fb0c 2413 	mls	r4, ip, r3, r2
 801cb34:	fb14 f406 	smulbb	r4, r4, r6
 801cb38:	441d      	add	r5, r3
 801cb3a:	4404      	add	r4, r0
 801cb3c:	4661      	mov	r1, ip
 801cb3e:	3d01      	subs	r5, #1
 801cb40:	b2a4      	uxth	r4, r4
 801cb42:	fb95 f5f3 	sdiv	r5, r5, r3
 801cb46:	b131      	cbz	r1, 801cb56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801cb48:	9b05      	ldr	r3, [sp, #20]
 801cb4a:	9901      	ldr	r1, [sp, #4]
 801cb4c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cb50:	ba1b      	rev	r3, r3
 801cb52:	4419      	add	r1, r3
 801cb54:	9101      	str	r1, [sp, #4]
 801cb56:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cb5a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801cb5e:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801cb62:	4418      	add	r0, r3
 801cb64:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801cb68:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801cb6c:	441a      	add	r2, r3
 801cb6e:	4b75      	ldr	r3, [pc, #468]	; (801cd44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cb70:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801cb74:	6818      	ldr	r0, [r3, #0]
 801cb76:	6803      	ldr	r3, [r0, #0]
 801cb78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cb7a:	4798      	blx	r3
 801cb7c:	4972      	ldr	r1, [pc, #456]	; (801cd48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801cb7e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801cb82:	880b      	ldrh	r3, [r1, #0]
 801cb84:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cb88:	910d      	str	r1, [sp, #52]	; 0x34
 801cb8a:	fb03 c202 	mla	r2, r3, r2, ip
 801cb8e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cb92:	4373      	muls	r3, r6
 801cb94:	b2ad      	uxth	r5, r5
 801cb96:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cb9a:	00ad      	lsls	r5, r5, #2
 801cb9c:	9308      	str	r3, [sp, #32]
 801cb9e:	1d2b      	adds	r3, r5, #4
 801cba0:	9309      	str	r3, [sp, #36]	; 0x24
 801cba2:	9b02      	ldr	r3, [sp, #8]
 801cba4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cba8:	9106      	str	r1, [sp, #24]
 801cbaa:	43da      	mvns	r2, r3
 801cbac:	2c00      	cmp	r4, #0
 801cbae:	bf0c      	ite	eq
 801cbb0:	46dc      	moveq	ip, fp
 801cbb2:	f04f 0c00 	movne.w	ip, #0
 801cbb6:	2300      	movs	r3, #0
 801cbb8:	b2d2      	uxtb	r2, r2
 801cbba:	fa1f fc8c 	uxth.w	ip, ip
 801cbbe:	9303      	str	r3, [sp, #12]
 801cbc0:	9207      	str	r2, [sp, #28]
 801cbc2:	9a08      	ldr	r2, [sp, #32]
 801cbc4:	4282      	cmp	r2, r0
 801cbc6:	f240 80b5 	bls.w	801cd34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cbca:	b963      	cbnz	r3, 801cbe6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cbcc:	9b01      	ldr	r3, [sp, #4]
 801cbce:	781a      	ldrb	r2, [r3, #0]
 801cbd0:	0993      	lsrs	r3, r2, #6
 801cbd2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cbd6:	9203      	str	r2, [sp, #12]
 801cbd8:	1e5a      	subs	r2, r3, #1
 801cbda:	2a02      	cmp	r2, #2
 801cbdc:	d815      	bhi.n	801cc0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801cbde:	9a01      	ldr	r2, [sp, #4]
 801cbe0:	3201      	adds	r2, #1
 801cbe2:	9201      	str	r2, [sp, #4]
 801cbe4:	b29b      	uxth	r3, r3
 801cbe6:	b1b4      	cbz	r4, 801cc16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801cbe8:	429c      	cmp	r4, r3
 801cbea:	bf95      	itete	ls
 801cbec:	1b1c      	subls	r4, r3, r4
 801cbee:	1ae4      	subhi	r4, r4, r3
 801cbf0:	fa1f f884 	uxthls.w	r8, r4
 801cbf4:	b2a4      	uxthhi	r4, r4
 801cbf6:	bf87      	ittee	hi
 801cbf8:	4666      	movhi	r6, ip
 801cbfa:	f04f 0800 	movhi.w	r8, #0
 801cbfe:	fa1f f68b 	uxthls.w	r6, fp
 801cc02:	2400      	movls	r4, #0
 801cc04:	4643      	mov	r3, r8
 801cc06:	46b4      	mov	ip, r6
 801cc08:	e7db      	b.n	801cbc2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801cc0a:	9a01      	ldr	r2, [sp, #4]
 801cc0c:	9b01      	ldr	r3, [sp, #4]
 801cc0e:	3202      	adds	r2, #2
 801cc10:	785b      	ldrb	r3, [r3, #1]
 801cc12:	9201      	str	r2, [sp, #4]
 801cc14:	e7e7      	b.n	801cbe6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cc16:	2203      	movs	r2, #3
 801cc18:	4615      	mov	r5, r2
 801cc1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cc1c:	9a03      	ldr	r2, [sp, #12]
 801cc1e:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cc22:	9905      	ldr	r1, [sp, #20]
 801cc24:	4563      	cmp	r3, ip
 801cc26:	eb01 0502 	add.w	r5, r1, r2
 801cc2a:	9902      	ldr	r1, [sp, #8]
 801cc2c:	bf29      	itett	cs
 801cc2e:	eba3 080c 	subcs.w	r8, r3, ip
 801cc32:	ebac 0603 	subcc.w	r6, ip, r3
 801cc36:	fa1f f888 	uxthcs.w	r8, r8
 801cc3a:	46e1      	movcs	r9, ip
 801cc3c:	bf2f      	iteee	cs
 801cc3e:	4626      	movcs	r6, r4
 801cc40:	b2b6      	uxthcc	r6, r6
 801cc42:	4699      	movcc	r9, r3
 801cc44:	46a0      	movcc	r8, r4
 801cc46:	29ff      	cmp	r1, #255	; 0xff
 801cc48:	d04a      	beq.n	801cce0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801cc4a:	9f06      	ldr	r7, [sp, #24]
 801cc4c:	78a9      	ldrb	r1, [r5, #2]
 801cc4e:	9004      	str	r0, [sp, #16]
 801cc50:	4379      	muls	r1, r7
 801cc52:	910a      	str	r1, [sp, #40]	; 0x28
 801cc54:	7869      	ldrb	r1, [r5, #1]
 801cc56:	4379      	muls	r1, r7
 801cc58:	910b      	str	r1, [sp, #44]	; 0x2c
 801cc5a:	9905      	ldr	r1, [sp, #20]
 801cc5c:	5c8a      	ldrb	r2, [r1, r2]
 801cc5e:	437a      	muls	r2, r7
 801cc60:	920c      	str	r2, [sp, #48]	; 0x30
 801cc62:	46ca      	mov	sl, r9
 801cc64:	f1ba 0f00 	cmp.w	sl, #0
 801cc68:	d03d      	beq.n	801cce6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801cc6a:	9a04      	ldr	r2, [sp, #16]
 801cc6c:	9f07      	ldr	r7, [sp, #28]
 801cc6e:	8812      	ldrh	r2, [r2, #0]
 801cc70:	1215      	asrs	r5, r2, #8
 801cc72:	46be      	mov	lr, r7
 801cc74:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cc78:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801cc7a:	10d1      	asrs	r1, r2, #3
 801cc7c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cc80:	fb05 750e 	mla	r5, r5, lr, r7
 801cc84:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cc88:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801cc8a:	00d2      	lsls	r2, r2, #3
 801cc8c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801cc90:	fb01 710e 	mla	r1, r1, lr, r7
 801cc94:	b2d2      	uxtb	r2, r2
 801cc96:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801cc98:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cc9c:	b2ad      	uxth	r5, r5
 801cc9e:	fb02 720e 	mla	r2, r2, lr, r7
 801cca2:	b292      	uxth	r2, r2
 801cca4:	f105 0e01 	add.w	lr, r5, #1
 801cca8:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ccac:	f102 0e01 	add.w	lr, r2, #1
 801ccb0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801ccb4:	b289      	uxth	r1, r1
 801ccb6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ccba:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ccbe:	4315      	orrs	r5, r2
 801ccc0:	1c4a      	adds	r2, r1, #1
 801ccc2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ccc6:	0949      	lsrs	r1, r1, #5
 801ccc8:	9a04      	ldr	r2, [sp, #16]
 801ccca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ccce:	430d      	orrs	r5, r1
 801ccd0:	f822 5b02 	strh.w	r5, [r2], #2
 801ccd4:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ccd8:	9204      	str	r2, [sp, #16]
 801ccda:	fa1f fa8a 	uxth.w	sl, sl
 801ccde:	e7c1      	b.n	801cc64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801cce0:	4649      	mov	r1, r9
 801cce2:	4686      	mov	lr, r0
 801cce4:	b999      	cbnz	r1, 801cd0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801cce6:	4563      	cmp	r3, ip
 801cce8:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801ccec:	d38a      	bcc.n	801cc04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ccee:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801ccf2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ccf4:	fa1f f68b 	uxth.w	r6, fp
 801ccf8:	1ba4      	subs	r4, r4, r6
 801ccfa:	881b      	ldrh	r3, [r3, #0]
 801ccfc:	b2a4      	uxth	r4, r4
 801ccfe:	2c00      	cmp	r4, #0
 801cd00:	eba3 030b 	sub.w	r3, r3, fp
 801cd04:	bf18      	it	ne
 801cd06:	2600      	movne	r6, #0
 801cd08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cd0c:	e77a      	b.n	801cc04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801cd0e:	78aa      	ldrb	r2, [r5, #2]
 801cd10:	4f0e      	ldr	r7, [pc, #56]	; (801cd4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801cd12:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801cd16:	786a      	ldrb	r2, [r5, #1]
 801cd18:	00d2      	lsls	r2, r2, #3
 801cd1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd1e:	ea4a 0202 	orr.w	r2, sl, r2
 801cd22:	f895 a000 	ldrb.w	sl, [r5]
 801cd26:	3901      	subs	r1, #1
 801cd28:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801cd2c:	f82e 2b02 	strh.w	r2, [lr], #2
 801cd30:	b289      	uxth	r1, r1
 801cd32:	e7d7      	b.n	801cce4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801cd34:	4b03      	ldr	r3, [pc, #12]	; (801cd44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cd36:	6818      	ldr	r0, [r3, #0]
 801cd38:	6803      	ldr	r3, [r0, #0]
 801cd3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cd3c:	4798      	blx	r3
 801cd3e:	b013      	add	sp, #76	; 0x4c
 801cd40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd44:	20012da4 	.word	0x20012da4
 801cd48:	20012d9e 	.word	0x20012d9e
 801cd4c:	fffff800 	.word	0xfffff800

0801cd50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cd50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd54:	b09d      	sub	sp, #116	; 0x74
 801cd56:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801cd5a:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801cd5e:	920e      	str	r2, [sp, #56]	; 0x38
 801cd60:	461c      	mov	r4, r3
 801cd62:	4683      	mov	fp, r0
 801cd64:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cd66:	2a00      	cmp	r2, #0
 801cd68:	f000 81e0 	beq.w	801d12c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801cd6c:	6820      	ldr	r0, [r4, #0]
 801cd6e:	6861      	ldr	r1, [r4, #4]
 801cd70:	aa18      	add	r2, sp, #96	; 0x60
 801cd72:	c203      	stmia	r2!, {r0, r1}
 801cd74:	6818      	ldr	r0, [r3, #0]
 801cd76:	6859      	ldr	r1, [r3, #4]
 801cd78:	aa1a      	add	r2, sp, #104	; 0x68
 801cd7a:	c203      	stmia	r2!, {r0, r1}
 801cd7c:	a818      	add	r0, sp, #96	; 0x60
 801cd7e:	f7f8 fd83 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd82:	4621      	mov	r1, r4
 801cd84:	a81a      	add	r0, sp, #104	; 0x68
 801cd86:	f7f8 fdc3 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd8a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801cd8e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801cd92:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801cd96:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801cd9a:	bfd7      	itett	le
 801cd9c:	b29a      	uxthle	r2, r3
 801cd9e:	2201      	movgt	r2, #1
 801cda0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801cda4:	fb91 f2f2 	sdivle	r2, r1, r2
 801cda8:	9202      	str	r2, [sp, #8]
 801cdaa:	9802      	ldr	r0, [sp, #8]
 801cdac:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801cdb0:	fb92 f0f0 	sdiv	r0, r2, r0
 801cdb4:	b280      	uxth	r0, r0
 801cdb6:	900f      	str	r0, [sp, #60]	; 0x3c
 801cdb8:	9902      	ldr	r1, [sp, #8]
 801cdba:	9802      	ldr	r0, [sp, #8]
 801cdbc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801cdbe:	440c      	add	r4, r1
 801cdc0:	fb05 2510 	mls	r5, r5, r0, r2
 801cdc4:	fb15 f503 	smulbb	r5, r5, r3
 801cdc8:	3c01      	subs	r4, #1
 801cdca:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801cdce:	fb94 f4f1 	sdiv	r4, r4, r1
 801cdd2:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801cdd6:	440d      	add	r5, r1
 801cdd8:	4419      	add	r1, r3
 801cdda:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801cdde:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801cde2:	441a      	add	r2, r3
 801cde4:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801cde8:	9306      	str	r3, [sp, #24]
 801cdea:	4bb3      	ldr	r3, [pc, #716]	; (801d0b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801cdec:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801cdf0:	6818      	ldr	r0, [r3, #0]
 801cdf2:	6803      	ldr	r3, [r0, #0]
 801cdf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cdf6:	4798      	blx	r3
 801cdf8:	4bb0      	ldr	r3, [pc, #704]	; (801d0bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801cdfa:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801cdfe:	881a      	ldrh	r2, [r3, #0]
 801ce00:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801ce04:	9316      	str	r3, [sp, #88]	; 0x58
 801ce06:	fb02 7101 	mla	r1, r2, r1, r7
 801ce0a:	3401      	adds	r4, #1
 801ce0c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801ce10:	b2a4      	uxth	r4, r4
 801ce12:	4356      	muls	r6, r2
 801ce14:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801ce18:	00a4      	lsls	r4, r4, #2
 801ce1a:	920a      	str	r2, [sp, #40]	; 0x28
 801ce1c:	1d22      	adds	r2, r4, #4
 801ce1e:	b2ad      	uxth	r5, r5
 801ce20:	9213      	str	r2, [sp, #76]	; 0x4c
 801ce22:	4ba7      	ldr	r3, [pc, #668]	; (801d0c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801ce24:	9a06      	ldr	r2, [sp, #24]
 801ce26:	2d00      	cmp	r5, #0
 801ce28:	bf0c      	ite	eq
 801ce2a:	4611      	moveq	r1, r2
 801ce2c:	2100      	movne	r1, #0
 801ce2e:	2200      	movs	r2, #0
 801ce30:	eba3 030b 	sub.w	r3, r3, fp
 801ce34:	b289      	uxth	r1, r1
 801ce36:	920d      	str	r2, [sp, #52]	; 0x34
 801ce38:	9317      	str	r3, [sp, #92]	; 0x5c
 801ce3a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ce3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ce3e:	fa12 f383 	uxtah	r3, r2, r3
 801ce42:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ce44:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801ce48:	3304      	adds	r3, #4
 801ce4a:	9308      	str	r3, [sp, #32]
 801ce4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ce4e:	4543      	cmp	r3, r8
 801ce50:	f240 8167 	bls.w	801d122 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801ce54:	9a02      	ldr	r2, [sp, #8]
 801ce56:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801ce5a:	fbb5 f3f3 	udiv	r3, r5, r3
 801ce5e:	1ad3      	subs	r3, r2, r3
 801ce60:	b29b      	uxth	r3, r3
 801ce62:	9314      	str	r3, [sp, #80]	; 0x50
 801ce64:	9b08      	ldr	r3, [sp, #32]
 801ce66:	9808      	ldr	r0, [sp, #32]
 801ce68:	785a      	ldrb	r2, [r3, #1]
 801ce6a:	789b      	ldrb	r3, [r3, #2]
 801ce6c:	7800      	ldrb	r0, [r0, #0]
 801ce6e:	9010      	str	r0, [sp, #64]	; 0x40
 801ce70:	021b      	lsls	r3, r3, #8
 801ce72:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ce76:	9a08      	ldr	r2, [sp, #32]
 801ce78:	78d2      	ldrb	r2, [r2, #3]
 801ce7a:	4313      	orrs	r3, r2
 801ce7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ce7e:	3001      	adds	r0, #1
 801ce80:	441a      	add	r2, r3
 801ce82:	9007      	str	r0, [sp, #28]
 801ce84:	1c50      	adds	r0, r2, #1
 801ce86:	9005      	str	r0, [sp, #20]
 801ce88:	7852      	ldrb	r2, [r2, #1]
 801ce8a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ce8c:	0212      	lsls	r2, r2, #8
 801ce8e:	5cc3      	ldrb	r3, [r0, r3]
 801ce90:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801ce94:	431a      	orrs	r2, r3
 801ce96:	b293      	uxth	r3, r2
 801ce98:	930b      	str	r3, [sp, #44]	; 0x2c
 801ce9a:	2300      	movs	r3, #0
 801ce9c:	9309      	str	r3, [sp, #36]	; 0x24
 801ce9e:	2301      	movs	r3, #1
 801cea0:	9301      	str	r3, [sp, #4]
 801cea2:	9304      	str	r3, [sp, #16]
 801cea4:	2300      	movs	r3, #0
 801cea6:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801ceaa:	9303      	str	r3, [sp, #12]
 801ceac:	f04f 0e01 	mov.w	lr, #1
 801ceb0:	2d00      	cmp	r5, #0
 801ceb2:	d07c      	beq.n	801cfae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801ceb4:	45ae      	cmp	lr, r5
 801ceb6:	d26b      	bcs.n	801cf90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801ceb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ceba:	eba5 050e 	sub.w	r5, r5, lr
 801cebe:	4543      	cmp	r3, r8
 801cec0:	b2ad      	uxth	r5, r5
 801cec2:	460c      	mov	r4, r1
 801cec4:	d802      	bhi.n	801cecc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801cec6:	e070      	b.n	801cfaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801cec8:	2b00      	cmp	r3, #0
 801ceca:	d15c      	bne.n	801cf86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cecc:	9b05      	ldr	r3, [sp, #20]
 801cece:	9a04      	ldr	r2, [sp, #16]
 801ced0:	785b      	ldrb	r3, [r3, #1]
 801ced2:	9904      	ldr	r1, [sp, #16]
 801ced4:	f1c2 0207 	rsb	r2, r2, #7
 801ced8:	4093      	lsls	r3, r2
 801ceda:	005b      	lsls	r3, r3, #1
 801cedc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801cee0:	9b05      	ldr	r3, [sp, #20]
 801cee2:	781b      	ldrb	r3, [r3, #0]
 801cee4:	410b      	asrs	r3, r1
 801cee6:	3101      	adds	r1, #1
 801cee8:	b2c9      	uxtb	r1, r1
 801ceea:	2908      	cmp	r1, #8
 801ceec:	9104      	str	r1, [sp, #16]
 801ceee:	9905      	ldr	r1, [sp, #20]
 801cef0:	bf0a      	itet	eq
 801cef2:	3102      	addeq	r1, #2
 801cef4:	3101      	addne	r1, #1
 801cef6:	9105      	streq	r1, [sp, #20]
 801cef8:	b2db      	uxtb	r3, r3
 801cefa:	bf0a      	itet	eq
 801cefc:	2100      	moveq	r1, #0
 801cefe:	9105      	strne	r1, [sp, #20]
 801cf00:	9104      	streq	r1, [sp, #16]
 801cf02:	4313      	orrs	r3, r2
 801cf04:	9910      	ldr	r1, [sp, #64]	; 0x40
 801cf06:	b29a      	uxth	r2, r3
 801cf08:	4291      	cmp	r1, r2
 801cf0a:	d30a      	bcc.n	801cf22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801cf0c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801cf10:	2301      	movs	r3, #1
 801cf12:	9907      	ldr	r1, [sp, #28]
 801cf14:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801cf18:	d30f      	bcc.n	801cf3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801cf1a:	2100      	movs	r1, #0
 801cf1c:	9301      	str	r3, [sp, #4]
 801cf1e:	9103      	str	r1, [sp, #12]
 801cf20:	e032      	b.n	801cf88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801cf22:	9b07      	ldr	r3, [sp, #28]
 801cf24:	429a      	cmp	r2, r3
 801cf26:	d318      	bcc.n	801cf5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801cf28:	9b01      	ldr	r3, [sp, #4]
 801cf2a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801cf2e:	445b      	add	r3, fp
 801cf30:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801cf34:	9b01      	ldr	r3, [sp, #4]
 801cf36:	3301      	adds	r3, #1
 801cf38:	b29b      	uxth	r3, r3
 801cf3a:	9907      	ldr	r1, [sp, #28]
 801cf3c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801cf40:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801cf44:	7108      	strb	r0, [r1, #4]
 801cf46:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801cf48:	80c8      	strh	r0, [r1, #6]
 801cf4a:	9801      	ldr	r0, [sp, #4]
 801cf4c:	3001      	adds	r0, #1
 801cf4e:	7148      	strb	r0, [r1, #5]
 801cf50:	9907      	ldr	r1, [sp, #28]
 801cf52:	3101      	adds	r1, #1
 801cf54:	b289      	uxth	r1, r1
 801cf56:	9107      	str	r1, [sp, #28]
 801cf58:	e7df      	b.n	801cf1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801cf5a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801cf5e:	4611      	mov	r1, r2
 801cf60:	795b      	ldrb	r3, [r3, #5]
 801cf62:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801cf66:	4458      	add	r0, fp
 801cf68:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801cf6a:	4406      	add	r6, r0
 801cf6c:	2e00      	cmp	r6, #0
 801cf6e:	dd06      	ble.n	801cf7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801cf70:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801cf74:	790e      	ldrb	r6, [r1, #4]
 801cf76:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801cf7a:	88c9      	ldrh	r1, [r1, #6]
 801cf7c:	e7f4      	b.n	801cf68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801cf7e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801cf82:	b29b      	uxth	r3, r3
 801cf84:	e7c5      	b.n	801cf12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801cf86:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801cf88:	920b      	str	r2, [sp, #44]	; 0x2c
 801cf8a:	4621      	mov	r1, r4
 801cf8c:	469e      	mov	lr, r3
 801cf8e:	e78f      	b.n	801ceb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801cf90:	9a03      	ldr	r2, [sp, #12]
 801cf92:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801cf96:	442a      	add	r2, r5
 801cf98:	ebae 0305 	sub.w	r3, lr, r5
 801cf9c:	b292      	uxth	r2, r2
 801cf9e:	b29b      	uxth	r3, r3
 801cfa0:	9203      	str	r2, [sp, #12]
 801cfa2:	2500      	movs	r5, #0
 801cfa4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cfa6:	4542      	cmp	r2, r8
 801cfa8:	d88e      	bhi.n	801cec8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801cfaa:	4621      	mov	r1, r4
 801cfac:	e74e      	b.n	801ce4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801cfae:	458e      	cmp	lr, r1
 801cfb0:	bf29      	itett	cs
 801cfb2:	ebae 0301 	subcs.w	r3, lr, r1
 801cfb6:	eba1 040e 	subcc.w	r4, r1, lr
 801cfba:	b29b      	uxthcs	r3, r3
 801cfbc:	910c      	strcs	r1, [sp, #48]	; 0x30
 801cfbe:	bf2f      	iteee	cs
 801cfc0:	462c      	movcs	r4, r5
 801cfc2:	b2a4      	uxthcc	r4, r4
 801cfc4:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801cfc8:	462b      	movcc	r3, r5
 801cfca:	f04f 0900 	mov.w	r9, #0
 801cfce:	9a03      	ldr	r2, [sp, #12]
 801cfd0:	980c      	ldr	r0, [sp, #48]	; 0x30
 801cfd2:	444a      	add	r2, r9
 801cfd4:	4548      	cmp	r0, r9
 801cfd6:	b292      	uxth	r2, r2
 801cfd8:	d074      	beq.n	801d0c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801cfda:	445a      	add	r2, fp
 801cfdc:	2004      	movs	r0, #4
 801cfde:	4605      	mov	r5, r0
 801cfe0:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801cfe4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cfe6:	fb15 0202 	smlabb	r2, r5, r2, r0
 801cfea:	9812      	ldr	r0, [sp, #72]	; 0x48
 801cfec:	5880      	ldr	r0, [r0, r2]
 801cfee:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801cff2:	d014      	beq.n	801d01e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801cff4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801cff8:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801cffc:	d112      	bne.n	801d024 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801cffe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d000:	2aff      	cmp	r2, #255	; 0xff
 801d002:	d10f      	bne.n	801d024 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d004:	0942      	lsrs	r2, r0, #5
 801d006:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d00a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d00e:	f025 0507 	bic.w	r5, r5, #7
 801d012:	4315      	orrs	r5, r2
 801d014:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d018:	4305      	orrs	r5, r0
 801d01a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d01e:	f109 0901 	add.w	r9, r9, #1
 801d022:	e7d4      	b.n	801cfce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d024:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d028:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d02c:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801d030:	9215      	str	r2, [sp, #84]	; 0x54
 801d032:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d034:	fb02 fa0a 	mul.w	sl, r2, sl
 801d038:	f10a 0201 	add.w	r2, sl, #1
 801d03c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d040:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d044:	1212      	asrs	r2, r2, #8
 801d046:	fa1f fa82 	uxth.w	sl, r2
 801d04a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d04e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d052:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d056:	43d2      	mvns	r2, r2
 801d058:	b2d2      	uxtb	r2, r2
 801d05a:	fb16 f60a 	smulbb	r6, r6, sl
 801d05e:	fa5f fc8c 	uxtb.w	ip, ip
 801d062:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d066:	b2c0      	uxtb	r0, r0
 801d068:	fb07 6702 	mla	r7, r7, r2, r6
 801d06c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d070:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d072:	fb10 f00a 	smulbb	r0, r0, sl
 801d076:	fb0c 0002 	mla	r0, ip, r2, r0
 801d07a:	b2ed      	uxtb	r5, r5
 801d07c:	b2bf      	uxth	r7, r7
 801d07e:	fb15 f50a 	smulbb	r5, r5, sl
 801d082:	b280      	uxth	r0, r0
 801d084:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d088:	fb06 5602 	mla	r6, r6, r2, r5
 801d08c:	1c7a      	adds	r2, r7, #1
 801d08e:	1c45      	adds	r5, r0, #1
 801d090:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d094:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d098:	b2b6      	uxth	r6, r6
 801d09a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d09e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d0a2:	432f      	orrs	r7, r5
 801d0a4:	1c75      	adds	r5, r6, #1
 801d0a6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d0aa:	096d      	lsrs	r5, r5, #5
 801d0ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d0b0:	432f      	orrs	r7, r5
 801d0b2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d0b6:	e7b2      	b.n	801d01e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d0b8:	20012da4 	.word	0x20012da4
 801d0bc:	20012d9e 	.word	0x20012d9e
 801d0c0:	fffff7fb 	.word	0xfffff7fb
 801d0c4:	9203      	str	r2, [sp, #12]
 801d0c6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d0c8:	458e      	cmp	lr, r1
 801d0ca:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d0ce:	f4ff af68 	bcc.w	801cfa2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d0d2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d0d4:	9906      	ldr	r1, [sp, #24]
 801d0d6:	8812      	ldrh	r2, [r2, #0]
 801d0d8:	1a52      	subs	r2, r2, r1
 801d0da:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d0de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d0e0:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d0e2:	3201      	adds	r2, #1
 801d0e4:	428a      	cmp	r2, r1
 801d0e6:	9209      	str	r2, [sp, #36]	; 0x24
 801d0e8:	d111      	bne.n	801d10e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d0ea:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d0ee:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d0f2:	9b06      	ldr	r3, [sp, #24]
 801d0f4:	eba5 0509 	sub.w	r5, r5, r9
 801d0f8:	b2ad      	uxth	r5, r5
 801d0fa:	2d00      	cmp	r5, #0
 801d0fc:	bf08      	it	eq
 801d0fe:	4619      	moveq	r1, r3
 801d100:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d102:	bf18      	it	ne
 801d104:	2100      	movne	r1, #0
 801d106:	3301      	adds	r3, #1
 801d108:	930d      	str	r3, [sp, #52]	; 0x34
 801d10a:	b289      	uxth	r1, r1
 801d10c:	e695      	b.n	801ce3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d10e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d112:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d116:	1b2d      	subs	r5, r5, r4
 801d118:	b2ad      	uxth	r5, r5
 801d11a:	2d00      	cmp	r5, #0
 801d11c:	bf18      	it	ne
 801d11e:	2400      	movne	r4, #0
 801d120:	e740      	b.n	801cfa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d122:	4b04      	ldr	r3, [pc, #16]	; (801d134 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d124:	6818      	ldr	r0, [r3, #0]
 801d126:	6803      	ldr	r3, [r0, #0]
 801d128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d12a:	4798      	blx	r3
 801d12c:	b01d      	add	sp, #116	; 0x74
 801d12e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d132:	bf00      	nop
 801d134:	20012da4 	.word	0x20012da4

0801d138 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d13c:	b09f      	sub	sp, #124	; 0x7c
 801d13e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d142:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d146:	920a      	str	r2, [sp, #40]	; 0x28
 801d148:	461d      	mov	r5, r3
 801d14a:	4604      	mov	r4, r0
 801d14c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d14e:	2a00      	cmp	r2, #0
 801d150:	f000 81fa 	beq.w	801d548 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d154:	6828      	ldr	r0, [r5, #0]
 801d156:	6869      	ldr	r1, [r5, #4]
 801d158:	aa1a      	add	r2, sp, #104	; 0x68
 801d15a:	c203      	stmia	r2!, {r0, r1}
 801d15c:	6818      	ldr	r0, [r3, #0]
 801d15e:	6859      	ldr	r1, [r3, #4]
 801d160:	aa1c      	add	r2, sp, #112	; 0x70
 801d162:	c203      	stmia	r2!, {r0, r1}
 801d164:	a81a      	add	r0, sp, #104	; 0x68
 801d166:	f7f8 fb8f 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d16a:	4629      	mov	r1, r5
 801d16c:	a81c      	add	r0, sp, #112	; 0x70
 801d16e:	f7f8 fbcf 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d172:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d176:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d17a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d17e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d182:	bfd7      	itett	le
 801d184:	b29a      	uxthle	r2, r3
 801d186:	2201      	movgt	r2, #1
 801d188:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d18c:	fb91 f2f2 	sdivle	r2, r1, r2
 801d190:	9201      	str	r2, [sp, #4]
 801d192:	9801      	ldr	r0, [sp, #4]
 801d194:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d198:	fb92 f0f0 	sdiv	r0, r2, r0
 801d19c:	b280      	uxth	r0, r0
 801d19e:	9010      	str	r0, [sp, #64]	; 0x40
 801d1a0:	9901      	ldr	r1, [sp, #4]
 801d1a2:	9801      	ldr	r0, [sp, #4]
 801d1a4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d1a6:	440e      	add	r6, r1
 801d1a8:	fb05 2510 	mls	r5, r5, r0, r2
 801d1ac:	fb15 f503 	smulbb	r5, r5, r3
 801d1b0:	3e01      	subs	r6, #1
 801d1b2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d1b6:	fb96 f6f1 	sdiv	r6, r6, r1
 801d1ba:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d1be:	440d      	add	r5, r1
 801d1c0:	4419      	add	r1, r3
 801d1c2:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d1c6:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d1ca:	441a      	add	r2, r3
 801d1cc:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d1d0:	9304      	str	r3, [sp, #16]
 801d1d2:	4b96      	ldr	r3, [pc, #600]	; (801d42c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d1d4:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d1d8:	6818      	ldr	r0, [r3, #0]
 801d1da:	6803      	ldr	r3, [r0, #0]
 801d1dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d1de:	4798      	blx	r3
 801d1e0:	4b93      	ldr	r3, [pc, #588]	; (801d430 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d1e2:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d1e6:	881a      	ldrh	r2, [r3, #0]
 801d1e8:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d1ec:	9318      	str	r3, [sp, #96]	; 0x60
 801d1ee:	fb02 c101 	mla	r1, r2, r1, ip
 801d1f2:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d1f6:	4357      	muls	r7, r2
 801d1f8:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d1fc:	3601      	adds	r6, #1
 801d1fe:	920b      	str	r2, [sp, #44]	; 0x2c
 801d200:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d202:	4b8c      	ldr	r3, [pc, #560]	; (801d434 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d204:	b2b6      	uxth	r6, r6
 801d206:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d20a:	1d32      	adds	r2, r6, #4
 801d20c:	9206      	str	r2, [sp, #24]
 801d20e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d210:	43d2      	mvns	r2, r2
 801d212:	b2d2      	uxtb	r2, r2
 801d214:	b2ad      	uxth	r5, r5
 801d216:	9215      	str	r2, [sp, #84]	; 0x54
 801d218:	9a04      	ldr	r2, [sp, #16]
 801d21a:	2d00      	cmp	r5, #0
 801d21c:	bf0c      	ite	eq
 801d21e:	4611      	moveq	r1, r2
 801d220:	2100      	movne	r1, #0
 801d222:	2200      	movs	r2, #0
 801d224:	1b1b      	subs	r3, r3, r4
 801d226:	b289      	uxth	r1, r1
 801d228:	920d      	str	r2, [sp, #52]	; 0x34
 801d22a:	9319      	str	r3, [sp, #100]	; 0x64
 801d22c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d22e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d230:	fa12 f383 	uxtah	r3, r2, r3
 801d234:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d236:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d23a:	3304      	adds	r3, #4
 801d23c:	9307      	str	r3, [sp, #28]
 801d23e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d240:	455b      	cmp	r3, fp
 801d242:	f240 817c 	bls.w	801d53e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d246:	9a01      	ldr	r2, [sp, #4]
 801d248:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d24c:	fbb5 f3f3 	udiv	r3, r5, r3
 801d250:	1ad3      	subs	r3, r2, r3
 801d252:	b29b      	uxth	r3, r3
 801d254:	9316      	str	r3, [sp, #88]	; 0x58
 801d256:	9b07      	ldr	r3, [sp, #28]
 801d258:	9807      	ldr	r0, [sp, #28]
 801d25a:	785a      	ldrb	r2, [r3, #1]
 801d25c:	789b      	ldrb	r3, [r3, #2]
 801d25e:	7800      	ldrb	r0, [r0, #0]
 801d260:	9011      	str	r0, [sp, #68]	; 0x44
 801d262:	021b      	lsls	r3, r3, #8
 801d264:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d268:	9a07      	ldr	r2, [sp, #28]
 801d26a:	78d2      	ldrb	r2, [r2, #3]
 801d26c:	4313      	orrs	r3, r2
 801d26e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d270:	3001      	adds	r0, #1
 801d272:	441a      	add	r2, r3
 801d274:	9005      	str	r0, [sp, #20]
 801d276:	1c50      	adds	r0, r2, #1
 801d278:	9003      	str	r0, [sp, #12]
 801d27a:	7852      	ldrb	r2, [r2, #1]
 801d27c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d27e:	0212      	lsls	r2, r2, #8
 801d280:	5cc3      	ldrb	r3, [r0, r3]
 801d282:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d286:	431a      	orrs	r2, r3
 801d288:	b293      	uxth	r3, r2
 801d28a:	930c      	str	r3, [sp, #48]	; 0x30
 801d28c:	2300      	movs	r3, #0
 801d28e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d292:	9308      	str	r3, [sp, #32]
 801d294:	461a      	mov	r2, r3
 801d296:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d29a:	930e      	str	r3, [sp, #56]	; 0x38
 801d29c:	f04f 0801 	mov.w	r8, #1
 801d2a0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d2a4:	f8cd 8008 	str.w	r8, [sp, #8]
 801d2a8:	46c4      	mov	ip, r8
 801d2aa:	930f      	str	r3, [sp, #60]	; 0x3c
 801d2ac:	2d00      	cmp	r5, #0
 801d2ae:	d07c      	beq.n	801d3aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d2b0:	45ac      	cmp	ip, r5
 801d2b2:	d26c      	bcs.n	801d38e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d2b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d2b6:	eba5 050c 	sub.w	r5, r5, ip
 801d2ba:	455b      	cmp	r3, fp
 801d2bc:	b2ad      	uxth	r5, r5
 801d2be:	4608      	mov	r0, r1
 801d2c0:	d802      	bhi.n	801d2c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d2c2:	e070      	b.n	801d3a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d2c4:	2b00      	cmp	r3, #0
 801d2c6:	d15c      	bne.n	801d382 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d2c8:	9b03      	ldr	r3, [sp, #12]
 801d2ca:	9a02      	ldr	r2, [sp, #8]
 801d2cc:	785b      	ldrb	r3, [r3, #1]
 801d2ce:	9902      	ldr	r1, [sp, #8]
 801d2d0:	f1c2 0207 	rsb	r2, r2, #7
 801d2d4:	4093      	lsls	r3, r2
 801d2d6:	005b      	lsls	r3, r3, #1
 801d2d8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d2dc:	9b03      	ldr	r3, [sp, #12]
 801d2de:	781b      	ldrb	r3, [r3, #0]
 801d2e0:	410b      	asrs	r3, r1
 801d2e2:	3101      	adds	r1, #1
 801d2e4:	b2c9      	uxtb	r1, r1
 801d2e6:	2908      	cmp	r1, #8
 801d2e8:	9102      	str	r1, [sp, #8]
 801d2ea:	9903      	ldr	r1, [sp, #12]
 801d2ec:	bf0a      	itet	eq
 801d2ee:	3102      	addeq	r1, #2
 801d2f0:	3101      	addne	r1, #1
 801d2f2:	9103      	streq	r1, [sp, #12]
 801d2f4:	b2db      	uxtb	r3, r3
 801d2f6:	bf0a      	itet	eq
 801d2f8:	2100      	moveq	r1, #0
 801d2fa:	9103      	strne	r1, [sp, #12]
 801d2fc:	9102      	streq	r1, [sp, #8]
 801d2fe:	4313      	orrs	r3, r2
 801d300:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d302:	b29a      	uxth	r2, r3
 801d304:	4291      	cmp	r1, r2
 801d306:	d30a      	bcc.n	801d31e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d308:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d30c:	2301      	movs	r3, #1
 801d30e:	9905      	ldr	r1, [sp, #20]
 801d310:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d314:	d30f      	bcc.n	801d336 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d316:	2100      	movs	r1, #0
 801d318:	4698      	mov	r8, r3
 801d31a:	9100      	str	r1, [sp, #0]
 801d31c:	e032      	b.n	801d384 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d31e:	9b05      	ldr	r3, [sp, #20]
 801d320:	429a      	cmp	r2, r3
 801d322:	d318      	bcc.n	801d356 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d324:	eb04 0308 	add.w	r3, r4, r8
 801d328:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d32c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d330:	f108 0301 	add.w	r3, r8, #1
 801d334:	b29b      	uxth	r3, r3
 801d336:	9905      	ldr	r1, [sp, #20]
 801d338:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d33c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d340:	710e      	strb	r6, [r1, #4]
 801d342:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d344:	80ce      	strh	r6, [r1, #6]
 801d346:	f108 0601 	add.w	r6, r8, #1
 801d34a:	714e      	strb	r6, [r1, #5]
 801d34c:	9905      	ldr	r1, [sp, #20]
 801d34e:	3101      	adds	r1, #1
 801d350:	b289      	uxth	r1, r1
 801d352:	9105      	str	r1, [sp, #20]
 801d354:	e7df      	b.n	801d316 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d356:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d35a:	4611      	mov	r1, r2
 801d35c:	795b      	ldrb	r3, [r3, #5]
 801d35e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d362:	4426      	add	r6, r4
 801d364:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d366:	4437      	add	r7, r6
 801d368:	2f00      	cmp	r7, #0
 801d36a:	dd06      	ble.n	801d37a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d36c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d370:	790f      	ldrb	r7, [r1, #4]
 801d372:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d376:	88c9      	ldrh	r1, [r1, #6]
 801d378:	e7f4      	b.n	801d364 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d37a:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d37e:	b29b      	uxth	r3, r3
 801d380:	e7c5      	b.n	801d30e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d382:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d384:	920c      	str	r2, [sp, #48]	; 0x30
 801d386:	4601      	mov	r1, r0
 801d388:	9a00      	ldr	r2, [sp, #0]
 801d38a:	469c      	mov	ip, r3
 801d38c:	e78e      	b.n	801d2ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d38e:	1957      	adds	r7, r2, r5
 801d390:	ebac 0305 	sub.w	r3, ip, r5
 801d394:	b2ba      	uxth	r2, r7
 801d396:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d39a:	9200      	str	r2, [sp, #0]
 801d39c:	b29b      	uxth	r3, r3
 801d39e:	2500      	movs	r5, #0
 801d3a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d3a2:	455a      	cmp	r2, fp
 801d3a4:	d88e      	bhi.n	801d2c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d3a6:	4601      	mov	r1, r0
 801d3a8:	e749      	b.n	801d23e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d3aa:	458c      	cmp	ip, r1
 801d3ac:	bf2c      	ite	cs
 801d3ae:	4628      	movcs	r0, r5
 801d3b0:	462b      	movcc	r3, r5
 801d3b2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d3b4:	bf27      	ittee	cs
 801d3b6:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d3b8:	ebac 0301 	subcs.w	r3, ip, r1
 801d3bc:	eba1 000c 	subcc.w	r0, r1, ip
 801d3c0:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d3c4:	bf2c      	ite	cs
 801d3c6:	b29b      	uxthcs	r3, r3
 801d3c8:	b280      	uxthcc	r0, r0
 801d3ca:	2dff      	cmp	r5, #255	; 0xff
 801d3cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d3ce:	eb02 0705 	add.w	r7, r2, r5
 801d3d2:	b2bd      	uxth	r5, r7
 801d3d4:	9500      	str	r5, [sp, #0]
 801d3d6:	d12f      	bne.n	801d438 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d3d8:	465e      	mov	r6, fp
 801d3da:	9d00      	ldr	r5, [sp, #0]
 801d3dc:	42aa      	cmp	r2, r5
 801d3de:	f040 8084 	bne.w	801d4ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d3e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d3e4:	458c      	cmp	ip, r1
 801d3e6:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d3ea:	d3d8      	bcc.n	801d39e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d3ec:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d3ee:	9904      	ldr	r1, [sp, #16]
 801d3f0:	8812      	ldrh	r2, [r2, #0]
 801d3f2:	1a52      	subs	r2, r2, r1
 801d3f4:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d3f8:	9a08      	ldr	r2, [sp, #32]
 801d3fa:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d3fc:	3201      	adds	r2, #1
 801d3fe:	428a      	cmp	r2, r1
 801d400:	9208      	str	r2, [sp, #32]
 801d402:	f040 8092 	bne.w	801d52a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d406:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d40a:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d40e:	9b04      	ldr	r3, [sp, #16]
 801d410:	eba5 050c 	sub.w	r5, r5, ip
 801d414:	b2ad      	uxth	r5, r5
 801d416:	2d00      	cmp	r5, #0
 801d418:	bf08      	it	eq
 801d41a:	4619      	moveq	r1, r3
 801d41c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d41e:	bf18      	it	ne
 801d420:	2100      	movne	r1, #0
 801d422:	3301      	adds	r3, #1
 801d424:	930d      	str	r3, [sp, #52]	; 0x34
 801d426:	b289      	uxth	r1, r1
 801d428:	e700      	b.n	801d22c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d42a:	bf00      	nop
 801d42c:	20012da4 	.word	0x20012da4
 801d430:	20012d9e 	.word	0x20012d9e
 801d434:	fffff7fb 	.word	0xfffff7fb
 801d438:	46d9      	mov	r9, fp
 801d43a:	9d00      	ldr	r5, [sp, #0]
 801d43c:	42aa      	cmp	r2, r5
 801d43e:	d0d0      	beq.n	801d3e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d440:	1c55      	adds	r5, r2, #1
 801d442:	4422      	add	r2, r4
 801d444:	9517      	str	r5, [sp, #92]	; 0x5c
 801d446:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d44a:	9a06      	ldr	r2, [sp, #24]
 801d44c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d450:	4472      	add	r2, lr
 801d452:	9212      	str	r2, [sp, #72]	; 0x48
 801d454:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d456:	f8b9 2000 	ldrh.w	r2, [r9]
 801d45a:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d45e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d460:	1216      	asrs	r6, r2, #8
 801d462:	fb1a fa07 	smulbb	sl, sl, r7
 801d466:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d46a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d46c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d470:	fb06 a607 	mla	r6, r6, r7, sl
 801d474:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d476:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d47a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d47c:	10d5      	asrs	r5, r2, #3
 801d47e:	fb1a fa07 	smulbb	sl, sl, r7
 801d482:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d486:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d488:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d48c:	fb05 a507 	mla	r5, r5, r7, sl
 801d490:	9f06      	ldr	r7, [sp, #24]
 801d492:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d496:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d498:	00d2      	lsls	r2, r2, #3
 801d49a:	fb1e fe07 	smulbb	lr, lr, r7
 801d49e:	b2d2      	uxtb	r2, r2
 801d4a0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d4a2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d4a6:	b2b6      	uxth	r6, r6
 801d4a8:	fb02 e207 	mla	r2, r2, r7, lr
 801d4ac:	b292      	uxth	r2, r2
 801d4ae:	b2ad      	uxth	r5, r5
 801d4b0:	f106 0a01 	add.w	sl, r6, #1
 801d4b4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d4b8:	f102 0e01 	add.w	lr, r2, #1
 801d4bc:	f105 0a01 	add.w	sl, r5, #1
 801d4c0:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d4c4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d4c8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d4cc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d4d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d4d4:	ea4e 0606 	orr.w	r6, lr, r6
 801d4d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d4dc:	ea46 060a 	orr.w	r6, r6, sl
 801d4e0:	f829 6b02 	strh.w	r6, [r9], #2
 801d4e4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d4e8:	e7a7      	b.n	801d43a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d4ea:	f102 0e01 	add.w	lr, r2, #1
 801d4ee:	4422      	add	r2, r4
 801d4f0:	9f06      	ldr	r7, [sp, #24]
 801d4f2:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d4f6:	9a06      	ldr	r2, [sp, #24]
 801d4f8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d4fc:	eb02 0a05 	add.w	sl, r2, r5
 801d500:	4a13      	ldr	r2, [pc, #76]	; (801d550 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d502:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d506:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d50a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d50e:	00d2      	lsls	r2, r2, #3
 801d510:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d514:	ea49 0202 	orr.w	r2, r9, r2
 801d518:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d51c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d520:	f826 2b02 	strh.w	r2, [r6], #2
 801d524:	fa1f f28e 	uxth.w	r2, lr
 801d528:	e757      	b.n	801d3da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d52a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d52e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d532:	1a2d      	subs	r5, r5, r0
 801d534:	b2ad      	uxth	r5, r5
 801d536:	2d00      	cmp	r5, #0
 801d538:	bf18      	it	ne
 801d53a:	2000      	movne	r0, #0
 801d53c:	e730      	b.n	801d3a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d53e:	4b05      	ldr	r3, [pc, #20]	; (801d554 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d540:	6818      	ldr	r0, [r3, #0]
 801d542:	6803      	ldr	r3, [r0, #0]
 801d544:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d546:	4798      	blx	r3
 801d548:	b01f      	add	sp, #124	; 0x7c
 801d54a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d54e:	bf00      	nop
 801d550:	fffff800 	.word	0xfffff800
 801d554:	20012da4 	.word	0x20012da4

0801d558 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d55c:	b091      	sub	sp, #68	; 0x44
 801d55e:	469b      	mov	fp, r3
 801d560:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d564:	4616      	mov	r6, r2
 801d566:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d56a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d56e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d572:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d576:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d57a:	4604      	mov	r4, r0
 801d57c:	460d      	mov	r5, r1
 801d57e:	4640      	mov	r0, r8
 801d580:	4659      	mov	r1, fp
 801d582:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d586:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d58a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d58e:	f7f3 fa1d 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 801d592:	4631      	mov	r1, r6
 801d594:	4640      	mov	r0, r8
 801d596:	f7f3 fa19 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 801d59a:	4b74      	ldr	r3, [pc, #464]	; (801d76c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d59c:	8818      	ldrh	r0, [r3, #0]
 801d59e:	4b74      	ldr	r3, [pc, #464]	; (801d770 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d5a0:	8819      	ldrh	r1, [r3, #0]
 801d5a2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d5a6:	2b00      	cmp	r3, #0
 801d5a8:	b202      	sxth	r2, r0
 801d5aa:	b20e      	sxth	r6, r1
 801d5ac:	da07      	bge.n	801d5be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d5ae:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d5b2:	4463      	add	r3, ip
 801d5b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d5b8:	2300      	movs	r3, #0
 801d5ba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d5be:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d5c2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d5c6:	1ad2      	subs	r2, r2, r3
 801d5c8:	4594      	cmp	ip, r2
 801d5ca:	bfc4      	itt	gt
 801d5cc:	1ac2      	subgt	r2, r0, r3
 801d5ce:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d5d2:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d5d6:	2a00      	cmp	r2, #0
 801d5d8:	da07      	bge.n	801d5ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d5da:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d5de:	4462      	add	r2, ip
 801d5e0:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d5e4:	2200      	movs	r2, #0
 801d5e6:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d5ea:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d5ee:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d5f2:	eba6 060a 	sub.w	r6, r6, sl
 801d5f6:	42b2      	cmp	r2, r6
 801d5f8:	bfc4      	itt	gt
 801d5fa:	eba1 020a 	subgt.w	r2, r1, sl
 801d5fe:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801d602:	4a5c      	ldr	r2, [pc, #368]	; (801d774 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801d604:	7812      	ldrb	r2, [r2, #0]
 801d606:	b9a2      	cbnz	r2, 801d632 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801d608:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d60c:	4286      	cmp	r6, r0
 801d60e:	4640      	mov	r0, r8
 801d610:	9303      	str	r3, [sp, #12]
 801d612:	bf14      	ite	ne
 801d614:	2600      	movne	r6, #0
 801d616:	2601      	moveq	r6, #1
 801d618:	f7f3 fa1b 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d61c:	9b03      	ldr	r3, [sp, #12]
 801d61e:	b160      	cbz	r0, 801d63a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801d620:	2300      	movs	r3, #0
 801d622:	8023      	strh	r3, [r4, #0]
 801d624:	8063      	strh	r3, [r4, #2]
 801d626:	80a3      	strh	r3, [r4, #4]
 801d628:	4620      	mov	r0, r4
 801d62a:	80e3      	strh	r3, [r4, #6]
 801d62c:	b011      	add	sp, #68	; 0x44
 801d62e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d632:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d636:	428e      	cmp	r6, r1
 801d638:	e7e9      	b.n	801d60e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801d63a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d63e:	9205      	str	r2, [sp, #20]
 801d640:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d644:	9206      	str	r2, [sp, #24]
 801d646:	f8bb 2000 	ldrh.w	r2, [fp]
 801d64a:	900e      	str	r0, [sp, #56]	; 0x38
 801d64c:	1a9b      	subs	r3, r3, r2
 801d64e:	b21b      	sxth	r3, r3
 801d650:	9303      	str	r3, [sp, #12]
 801d652:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d656:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801d65a:	ebaa 0a03 	sub.w	sl, sl, r3
 801d65e:	fa0f f38a 	sxth.w	r3, sl
 801d662:	9304      	str	r3, [sp, #16]
 801d664:	9b03      	ldr	r3, [sp, #12]
 801d666:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801d66a:	9b04      	ldr	r3, [sp, #16]
 801d66c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d670:	9b05      	ldr	r3, [sp, #20]
 801d672:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801d676:	a90e      	add	r1, sp, #56	; 0x38
 801d678:	9b06      	ldr	r3, [sp, #24]
 801d67a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801d67e:	a80c      	add	r0, sp, #48	; 0x30
 801d680:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801d684:	f7f8 f944 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d688:	4640      	mov	r0, r8
 801d68a:	f7f8 f8fd 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d68e:	a80e      	add	r0, sp, #56	; 0x38
 801d690:	f7f8 f8fa 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d694:	4b38      	ldr	r3, [pc, #224]	; (801d778 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801d696:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801d69a:	881b      	ldrh	r3, [r3, #0]
 801d69c:	9307      	str	r3, [sp, #28]
 801d69e:	682b      	ldr	r3, [r5, #0]
 801d6a0:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801d77c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d6a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d6a6:	4628      	mov	r0, r5
 801d6a8:	4798      	blx	r3
 801d6aa:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801d6ae:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801d6b2:	4681      	mov	r9, r0
 801d6b4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801d6b8:	f8db 0000 	ldr.w	r0, [fp]
 801d6bc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d6be:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d6c2:	6803      	ldr	r3, [r0, #0]
 801d6c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d6c6:	4798      	blx	r3
 801d6c8:	4607      	mov	r7, r0
 801d6ca:	f8db 0000 	ldr.w	r0, [fp]
 801d6ce:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801d6d2:	6803      	ldr	r3, [r0, #0]
 801d6d4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d6d8:	9109      	str	r1, [sp, #36]	; 0x24
 801d6da:	9208      	str	r2, [sp, #32]
 801d6dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d6de:	4798      	blx	r3
 801d6e0:	f010 0f01 	tst.w	r0, #1
 801d6e4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d6e8:	d012      	beq.n	801d710 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801d6ea:	f8db 0000 	ldr.w	r0, [fp]
 801d6ee:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801d6f2:	6803      	ldr	r3, [r0, #0]
 801d6f4:	9200      	str	r2, [sp, #0]
 801d6f6:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801d6f8:	e898 0006 	ldmia.w	r8, {r1, r2}
 801d6fc:	462b      	mov	r3, r5
 801d6fe:	47b0      	blx	r6
 801d700:	9b03      	ldr	r3, [sp, #12]
 801d702:	8023      	strh	r3, [r4, #0]
 801d704:	9b04      	ldr	r3, [sp, #16]
 801d706:	8063      	strh	r3, [r4, #2]
 801d708:	9b05      	ldr	r3, [sp, #20]
 801d70a:	80a3      	strh	r3, [r4, #4]
 801d70c:	9b06      	ldr	r3, [sp, #24]
 801d70e:	e78b      	b.n	801d628 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801d710:	fb09 f202 	mul.w	r2, r9, r2
 801d714:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801d718:	440f      	add	r7, r1
 801d71a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801d71e:	b166      	cbz	r6, 801d73a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d720:	9a07      	ldr	r2, [sp, #28]
 801d722:	4592      	cmp	sl, r2
 801d724:	d109      	bne.n	801d73a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d726:	f8db 0000 	ldr.w	r0, [fp]
 801d72a:	6802      	ldr	r2, [r0, #0]
 801d72c:	fb09 f303 	mul.w	r3, r9, r3
 801d730:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801d732:	4629      	mov	r1, r5
 801d734:	463a      	mov	r2, r7
 801d736:	47b0      	blx	r6
 801d738:	e7e2      	b.n	801d700 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d73a:	fb0a f303 	mul.w	r3, sl, r3
 801d73e:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801d77c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d742:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801d746:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801d74a:	4545      	cmp	r5, r8
 801d74c:	d2d8      	bcs.n	801d700 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d74e:	f8db 0000 	ldr.w	r0, [fp]
 801d752:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d756:	6802      	ldr	r2, [r0, #0]
 801d758:	4629      	mov	r1, r5
 801d75a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801d75e:	005b      	lsls	r3, r3, #1
 801d760:	463a      	mov	r2, r7
 801d762:	47d0      	blx	sl
 801d764:	444f      	add	r7, r9
 801d766:	4435      	add	r5, r6
 801d768:	e7ef      	b.n	801d74a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801d76a:	bf00      	nop
 801d76c:	20012d98 	.word	0x20012d98
 801d770:	20012d9a 	.word	0x20012d9a
 801d774:	20012d9c 	.word	0x20012d9c
 801d778:	20012d9e 	.word	0x20012d9e
 801d77c:	20012da4 	.word	0x20012da4

0801d780 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801d780:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d782:	4606      	mov	r6, r0
 801d784:	b087      	sub	sp, #28
 801d786:	460c      	mov	r4, r1
 801d788:	4617      	mov	r7, r2
 801d78a:	461d      	mov	r5, r3
 801d78c:	b333      	cbz	r3, 801d7dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d78e:	4608      	mov	r0, r1
 801d790:	f7f3 f95f 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d794:	bb10      	cbnz	r0, 801d7dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d796:	6820      	ldr	r0, [r4, #0]
 801d798:	6861      	ldr	r1, [r4, #4]
 801d79a:	4c1c      	ldr	r4, [pc, #112]	; (801d80c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801d79c:	ab04      	add	r3, sp, #16
 801d79e:	c303      	stmia	r3!, {r0, r1}
 801d7a0:	a804      	add	r0, sp, #16
 801d7a2:	f7f8 f871 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7a6:	6820      	ldr	r0, [r4, #0]
 801d7a8:	6803      	ldr	r3, [r0, #0]
 801d7aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d7ac:	4798      	blx	r3
 801d7ae:	2dff      	cmp	r5, #255	; 0xff
 801d7b0:	d016      	beq.n	801d7e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801d7b2:	f010 0f08 	tst.w	r0, #8
 801d7b6:	6820      	ldr	r0, [r4, #0]
 801d7b8:	d015      	beq.n	801d7e6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801d7ba:	2400      	movs	r4, #0
 801d7bc:	6801      	ldr	r1, [r0, #0]
 801d7be:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801d7c2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d7c6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801d7ca:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801d7ce:	9401      	str	r4, [sp, #4]
 801d7d0:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801d7d4:	9400      	str	r4, [sp, #0]
 801d7d6:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801d7d8:	4639      	mov	r1, r7
 801d7da:	47a0      	blx	r4
 801d7dc:	b007      	add	sp, #28
 801d7de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d7e0:	f010 0f02 	tst.w	r0, #2
 801d7e4:	e7e7      	b.n	801d7b6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801d7e6:	6803      	ldr	r3, [r0, #0]
 801d7e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d7ea:	4798      	blx	r3
 801d7ec:	4b08      	ldr	r3, [pc, #32]	; (801d810 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801d7ee:	881a      	ldrh	r2, [r3, #0]
 801d7f0:	6833      	ldr	r3, [r6, #0]
 801d7f2:	e9cd 7500 	strd	r7, r5, [sp]
 801d7f6:	4601      	mov	r1, r0
 801d7f8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801d7fa:	4630      	mov	r0, r6
 801d7fc:	ab04      	add	r3, sp, #16
 801d7fe:	47a8      	blx	r5
 801d800:	6820      	ldr	r0, [r4, #0]
 801d802:	6803      	ldr	r3, [r0, #0]
 801d804:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d806:	4798      	blx	r3
 801d808:	e7e8      	b.n	801d7dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d80a:	bf00      	nop
 801d80c:	20012da4 	.word	0x20012da4
 801d810:	20012d9e 	.word	0x20012d9e

0801d814 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801d814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d818:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801d81c:	9e08      	ldr	r6, [sp, #32]
 801d81e:	4688      	mov	r8, r1
 801d820:	4614      	mov	r4, r2
 801d822:	461d      	mov	r5, r3
 801d824:	2f00      	cmp	r7, #0
 801d826:	f000 80a9 	beq.w	801d97c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d82a:	4618      	mov	r0, r3
 801d82c:	f7f3 f911 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d830:	2800      	cmp	r0, #0
 801d832:	f040 80a3 	bne.w	801d97c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d836:	f9b5 1000 	ldrsh.w	r1, [r5]
 801d83a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801d83e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801d842:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801d846:	fb04 1303 	mla	r3, r4, r3, r1
 801d84a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801d84e:	4365      	muls	r5, r4
 801d850:	2fff      	cmp	r7, #255	; 0xff
 801d852:	eba4 0200 	sub.w	r2, r4, r0
 801d856:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801d85a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801d85e:	d04a      	beq.n	801d8f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801d860:	b2bc      	uxth	r4, r7
 801d862:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801d866:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801d86a:	fa5f f788 	uxtb.w	r7, r8
 801d86e:	b2f3      	uxtb	r3, r6
 801d870:	0040      	lsls	r0, r0, #1
 801d872:	fb0e fe04 	mul.w	lr, lr, r4
 801d876:	4367      	muls	r7, r4
 801d878:	4363      	muls	r3, r4
 801d87a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801d87e:	fa1f fc8c 	uxth.w	ip, ip
 801d882:	42a9      	cmp	r1, r5
 801d884:	d27a      	bcs.n	801d97c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d886:	eb01 0900 	add.w	r9, r1, r0
 801d88a:	4549      	cmp	r1, r9
 801d88c:	d231      	bcs.n	801d8f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801d88e:	880a      	ldrh	r2, [r1, #0]
 801d890:	1214      	asrs	r4, r2, #8
 801d892:	10d6      	asrs	r6, r2, #3
 801d894:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d898:	00d2      	lsls	r2, r2, #3
 801d89a:	b2d2      	uxtb	r2, r2
 801d89c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d8a0:	fb14 f40c 	smulbb	r4, r4, ip
 801d8a4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d8a8:	4474      	add	r4, lr
 801d8aa:	fb12 f20c 	smulbb	r2, r2, ip
 801d8ae:	b2a4      	uxth	r4, r4
 801d8b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d8b4:	441a      	add	r2, r3
 801d8b6:	b292      	uxth	r2, r2
 801d8b8:	f104 0a01 	add.w	sl, r4, #1
 801d8bc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d8c0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d8c4:	fb16 f60c 	smulbb	r6, r6, ip
 801d8c8:	f102 0a01 	add.w	sl, r2, #1
 801d8cc:	443e      	add	r6, r7
 801d8ce:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801d8d2:	b2b6      	uxth	r6, r6
 801d8d4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d8d8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d8dc:	4322      	orrs	r2, r4
 801d8de:	1c74      	adds	r4, r6, #1
 801d8e0:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801d8e4:	0976      	lsrs	r6, r6, #5
 801d8e6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d8ea:	4332      	orrs	r2, r6
 801d8ec:	f821 2b02 	strh.w	r2, [r1], #2
 801d8f0:	e7cb      	b.n	801d88a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801d8f2:	4441      	add	r1, r8
 801d8f4:	e7c5      	b.n	801d882 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801d8f6:	4f22      	ldr	r7, [pc, #136]	; (801d980 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801d8f8:	0973      	lsrs	r3, r6, #5
 801d8fa:	ea08 0707 	and.w	r7, r8, r7
 801d8fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d902:	433b      	orrs	r3, r7
 801d904:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801d908:	4333      	orrs	r3, r6
 801d90a:	07e7      	lsls	r7, r4, #31
 801d90c:	b29b      	uxth	r3, r3
 801d90e:	d50b      	bpl.n	801d928 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801d910:	0040      	lsls	r0, r0, #1
 801d912:	0052      	lsls	r2, r2, #1
 801d914:	42a9      	cmp	r1, r5
 801d916:	d231      	bcs.n	801d97c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d918:	180c      	adds	r4, r1, r0
 801d91a:	42a1      	cmp	r1, r4
 801d91c:	d202      	bcs.n	801d924 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801d91e:	f821 3b02 	strh.w	r3, [r1], #2
 801d922:	e7fa      	b.n	801d91a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801d924:	4411      	add	r1, r2
 801d926:	e7f5      	b.n	801d914 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801d928:	078e      	lsls	r6, r1, #30
 801d92a:	d008      	beq.n	801d93e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801d92c:	0066      	lsls	r6, r4, #1
 801d92e:	460a      	mov	r2, r1
 801d930:	42aa      	cmp	r2, r5
 801d932:	d202      	bcs.n	801d93a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801d934:	8013      	strh	r3, [r2, #0]
 801d936:	4432      	add	r2, r6
 801d938:	e7fa      	b.n	801d930 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801d93a:	3102      	adds	r1, #2
 801d93c:	3801      	subs	r0, #1
 801d93e:	07c2      	lsls	r2, r0, #31
 801d940:	d50b      	bpl.n	801d95a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801d942:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801d946:	3a01      	subs	r2, #1
 801d948:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801d94c:	0066      	lsls	r6, r4, #1
 801d94e:	42aa      	cmp	r2, r5
 801d950:	d202      	bcs.n	801d958 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801d952:	8013      	strh	r3, [r2, #0]
 801d954:	4432      	add	r2, r6
 801d956:	e7fa      	b.n	801d94e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801d958:	3801      	subs	r0, #1
 801d95a:	b178      	cbz	r0, 801d97c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d95c:	1040      	asrs	r0, r0, #1
 801d95e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801d962:	0080      	lsls	r0, r0, #2
 801d964:	0064      	lsls	r4, r4, #1
 801d966:	42a9      	cmp	r1, r5
 801d968:	d208      	bcs.n	801d97c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d96a:	180e      	adds	r6, r1, r0
 801d96c:	460a      	mov	r2, r1
 801d96e:	42b2      	cmp	r2, r6
 801d970:	d202      	bcs.n	801d978 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801d972:	f842 3b04 	str.w	r3, [r2], #4
 801d976:	e7fa      	b.n	801d96e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801d978:	4421      	add	r1, r4
 801d97a:	e7f4      	b.n	801d966 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801d97c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d980:	00fff800 	.word	0x00fff800

0801d984 <_ZN8touchgfx8LCD16bppC1Ev>:
 801d984:	2200      	movs	r2, #0
 801d986:	4912      	ldr	r1, [pc, #72]	; (801d9d0 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801d988:	6042      	str	r2, [r0, #4]
 801d98a:	6001      	str	r1, [r0, #0]
 801d98c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801d990:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801d994:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801d998:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801d99c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801d9a0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801d9a4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801d9a8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801d9ac:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801d9b0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801d9b4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801d9b8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801d9bc:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801d9c0:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801d9c4:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801d9c8:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801d9cc:	4770      	bx	lr
 801d9ce:	bf00      	nop
 801d9d0:	0802f6c8 	.word	0x0802f6c8

0801d9d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801d9d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9d8:	460d      	mov	r5, r1
 801d9da:	b08d      	sub	sp, #52	; 0x34
 801d9dc:	4604      	mov	r4, r0
 801d9de:	6808      	ldr	r0, [r1, #0]
 801d9e0:	6849      	ldr	r1, [r1, #4]
 801d9e2:	4699      	mov	r9, r3
 801d9e4:	ab08      	add	r3, sp, #32
 801d9e6:	c303      	stmia	r3!, {r0, r1}
 801d9e8:	6810      	ldr	r0, [r2, #0]
 801d9ea:	6851      	ldr	r1, [r2, #4]
 801d9ec:	ab0a      	add	r3, sp, #40	; 0x28
 801d9ee:	c303      	stmia	r3!, {r0, r1}
 801d9f0:	a808      	add	r0, sp, #32
 801d9f2:	f7f7 ff49 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d9f6:	4629      	mov	r1, r5
 801d9f8:	a80a      	add	r0, sp, #40	; 0x28
 801d9fa:	f7f7 ff89 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d9fe:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801da02:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801da06:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801da0a:	4d63      	ldr	r5, [pc, #396]	; (801db98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801da0c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801da10:	6828      	ldr	r0, [r5, #0]
 801da12:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801da16:	fb11 2103 	smlabb	r1, r1, r3, r2
 801da1a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801da1e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801da22:	440a      	add	r2, r1
 801da24:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801da28:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801da2c:	4413      	add	r3, r2
 801da2e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801da32:	6803      	ldr	r3, [r0, #0]
 801da34:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801da36:	4798      	blx	r3
 801da38:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801da3c:	d119      	bne.n	801da72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801da3e:	f010 0f20 	tst.w	r0, #32
 801da42:	6828      	ldr	r0, [r5, #0]
 801da44:	d018      	beq.n	801da78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801da46:	2500      	movs	r5, #0
 801da48:	6801      	ldr	r1, [r0, #0]
 801da4a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801da4e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801da52:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801da56:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801da5a:	9502      	str	r5, [sp, #8]
 801da5c:	b2b6      	uxth	r6, r6
 801da5e:	fa1f f588 	uxth.w	r5, r8
 801da62:	9601      	str	r6, [sp, #4]
 801da64:	9500      	str	r5, [sp, #0]
 801da66:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801da68:	4621      	mov	r1, r4
 801da6a:	47a8      	blx	r5
 801da6c:	b00d      	add	sp, #52	; 0x34
 801da6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da72:	f010 0f40 	tst.w	r0, #64	; 0x40
 801da76:	e7e4      	b.n	801da42 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801da78:	6803      	ldr	r3, [r0, #0]
 801da7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801da7c:	4798      	blx	r3
 801da7e:	4947      	ldr	r1, [pc, #284]	; (801db9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801da80:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801da84:	880b      	ldrh	r3, [r1, #0]
 801da86:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801da8a:	fb03 5202 	mla	r2, r3, r2, r5
 801da8e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801da92:	4373      	muls	r3, r6
 801da94:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801da98:	9307      	str	r3, [sp, #28]
 801da9a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801da9e:	9306      	str	r3, [sp, #24]
 801daa0:	468a      	mov	sl, r1
 801daa2:	9b07      	ldr	r3, [sp, #28]
 801daa4:	4298      	cmp	r0, r3
 801daa6:	d270      	bcs.n	801db8a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801daa8:	9b06      	ldr	r3, [sp, #24]
 801daaa:	4621      	mov	r1, r4
 801daac:	eb00 0b03 	add.w	fp, r0, r3
 801dab0:	4558      	cmp	r0, fp
 801dab2:	d25d      	bcs.n	801db70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801dab4:	f851 4b04 	ldr.w	r4, [r1], #4
 801dab8:	0e23      	lsrs	r3, r4, #24
 801daba:	d014      	beq.n	801dae6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dabc:	2bff      	cmp	r3, #255	; 0xff
 801dabe:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801dac2:	d112      	bne.n	801daea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dac4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dac8:	d10f      	bne.n	801daea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801daca:	0963      	lsrs	r3, r4, #5
 801dacc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801dad0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dad4:	f02c 0c07 	bic.w	ip, ip, #7
 801dad8:	ea43 0c0c 	orr.w	ip, r3, ip
 801dadc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801dae0:	ea4c 0404 	orr.w	r4, ip, r4
 801dae4:	8004      	strh	r4, [r0, #0]
 801dae6:	3002      	adds	r0, #2
 801dae8:	e7e2      	b.n	801dab0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801daea:	fb09 f303 	mul.w	r3, r9, r3
 801daee:	8807      	ldrh	r7, [r0, #0]
 801daf0:	1c5a      	adds	r2, r3, #1
 801daf2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801daf6:	1212      	asrs	r2, r2, #8
 801daf8:	123e      	asrs	r6, r7, #8
 801dafa:	b293      	uxth	r3, r2
 801dafc:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801db00:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801db04:	43d2      	mvns	r2, r2
 801db06:	b2d2      	uxtb	r2, r2
 801db08:	10fd      	asrs	r5, r7, #3
 801db0a:	fb1e fe03 	smulbb	lr, lr, r3
 801db0e:	00ff      	lsls	r7, r7, #3
 801db10:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801db14:	fb06 e602 	mla	r6, r6, r2, lr
 801db18:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801db1c:	b2ff      	uxtb	r7, r7
 801db1e:	fa5f fc8c 	uxtb.w	ip, ip
 801db22:	b2e4      	uxtb	r4, r4
 801db24:	b2b6      	uxth	r6, r6
 801db26:	fb1c fc03 	smulbb	ip, ip, r3
 801db2a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801db2e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801db32:	fb14 f403 	smulbb	r4, r4, r3
 801db36:	fb05 c502 	mla	r5, r5, r2, ip
 801db3a:	f106 0e01 	add.w	lr, r6, #1
 801db3e:	fb07 4702 	mla	r7, r7, r2, r4
 801db42:	b2ad      	uxth	r5, r5
 801db44:	b2bf      	uxth	r7, r7
 801db46:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801db4a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801db4e:	f105 0c01 	add.w	ip, r5, #1
 801db52:	1c7e      	adds	r6, r7, #1
 801db54:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801db58:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801db5c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801db60:	096d      	lsrs	r5, r5, #5
 801db62:	ea46 060e 	orr.w	r6, r6, lr
 801db66:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801db6a:	432e      	orrs	r6, r5
 801db6c:	8006      	strh	r6, [r0, #0]
 801db6e:	e7ba      	b.n	801dae6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801db70:	f8ba 3000 	ldrh.w	r3, [sl]
 801db74:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801db78:	eba3 0308 	sub.w	r3, r3, r8
 801db7c:	eba4 0408 	sub.w	r4, r4, r8
 801db80:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801db84:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801db88:	e78b      	b.n	801daa2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801db8a:	4b03      	ldr	r3, [pc, #12]	; (801db98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801db8c:	6818      	ldr	r0, [r3, #0]
 801db8e:	6803      	ldr	r3, [r0, #0]
 801db90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801db92:	4798      	blx	r3
 801db94:	e76a      	b.n	801da6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801db96:	bf00      	nop
 801db98:	20012da4 	.word	0x20012da4
 801db9c:	20012d9e 	.word	0x20012d9e

0801dba0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801dba0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dba4:	460c      	mov	r4, r1
 801dba6:	b085      	sub	sp, #20
 801dba8:	6810      	ldr	r0, [r2, #0]
 801dbaa:	6851      	ldr	r1, [r2, #4]
 801dbac:	466d      	mov	r5, sp
 801dbae:	c503      	stmia	r5!, {r0, r1}
 801dbb0:	6818      	ldr	r0, [r3, #0]
 801dbb2:	6859      	ldr	r1, [r3, #4]
 801dbb4:	4616      	mov	r6, r2
 801dbb6:	c503      	stmia	r5!, {r0, r1}
 801dbb8:	4668      	mov	r0, sp
 801dbba:	f7f7 fe65 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dbbe:	4631      	mov	r1, r6
 801dbc0:	a802      	add	r0, sp, #8
 801dbc2:	f7f7 fea5 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dbc6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801dbca:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801dbce:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801dbd2:	4d28      	ldr	r5, [pc, #160]	; (801dc74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801dbd4:	4e28      	ldr	r6, [pc, #160]	; (801dc78 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801dbd6:	6828      	ldr	r0, [r5, #0]
 801dbd8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801dbdc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801dbe0:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dbe4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801dbe8:	f8bd 1000 	ldrh.w	r1, [sp]
 801dbec:	440a      	add	r2, r1
 801dbee:	f8ad 2008 	strh.w	r2, [sp, #8]
 801dbf2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801dbf6:	4413      	add	r3, r2
 801dbf8:	f8ad 300a 	strh.w	r3, [sp, #10]
 801dbfc:	6803      	ldr	r3, [r0, #0]
 801dbfe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dc00:	4798      	blx	r3
 801dc02:	8833      	ldrh	r3, [r6, #0]
 801dc04:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801dc08:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801dc0c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801dc7c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801dc10:	fb03 1202 	mla	r2, r3, r2, r1
 801dc14:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dc18:	fb08 f303 	mul.w	r3, r8, r3
 801dc1c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dc20:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801dc24:	4298      	cmp	r0, r3
 801dc26:	d21d      	bcs.n	801dc64 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801dc28:	eb00 080c 	add.w	r8, r0, ip
 801dc2c:	4540      	cmp	r0, r8
 801dc2e:	d20f      	bcs.n	801dc50 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801dc30:	f854 1b04 	ldr.w	r1, [r4], #4
 801dc34:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801dc38:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801dc3c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dc40:	ea42 0209 	orr.w	r2, r2, r9
 801dc44:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801dc48:	430a      	orrs	r2, r1
 801dc4a:	f820 2b02 	strh.w	r2, [r0], #2
 801dc4e:	e7ed      	b.n	801dc2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801dc50:	8832      	ldrh	r2, [r6, #0]
 801dc52:	1bd2      	subs	r2, r2, r7
 801dc54:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dc58:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801dc5c:	1bd2      	subs	r2, r2, r7
 801dc5e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801dc62:	e7df      	b.n	801dc24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801dc64:	6828      	ldr	r0, [r5, #0]
 801dc66:	6803      	ldr	r3, [r0, #0]
 801dc68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dc6a:	4798      	blx	r3
 801dc6c:	b005      	add	sp, #20
 801dc6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dc72:	bf00      	nop
 801dc74:	20012da4 	.word	0x20012da4
 801dc78:	20012d9e 	.word	0x20012d9e
 801dc7c:	fffff800 	.word	0xfffff800

0801dc80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801dc80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dc84:	460e      	mov	r6, r1
 801dc86:	b08e      	sub	sp, #56	; 0x38
 801dc88:	4604      	mov	r4, r0
 801dc8a:	6808      	ldr	r0, [r1, #0]
 801dc8c:	6849      	ldr	r1, [r1, #4]
 801dc8e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801de68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801dc92:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801de6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801dc96:	461d      	mov	r5, r3
 801dc98:	ab0a      	add	r3, sp, #40	; 0x28
 801dc9a:	c303      	stmia	r3!, {r0, r1}
 801dc9c:	6810      	ldr	r0, [r2, #0]
 801dc9e:	6851      	ldr	r1, [r2, #4]
 801dca0:	ab0c      	add	r3, sp, #48	; 0x30
 801dca2:	c303      	stmia	r3!, {r0, r1}
 801dca4:	a80a      	add	r0, sp, #40	; 0x28
 801dca6:	f7f7 fdef 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dcaa:	4631      	mov	r1, r6
 801dcac:	a80c      	add	r0, sp, #48	; 0x30
 801dcae:	f7f7 fe2f 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dcb2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801dcb6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801dcba:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801dcbe:	f8d8 0000 	ldr.w	r0, [r8]
 801dcc2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801dcc6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801dcca:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dcce:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801dcd2:	440c      	add	r4, r1
 801dcd4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801dcd8:	440a      	add	r2, r1
 801dcda:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801dcde:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801dce2:	4413      	add	r3, r2
 801dce4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801dce8:	6803      	ldr	r3, [r0, #0]
 801dcea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dcec:	4798      	blx	r3
 801dcee:	2dff      	cmp	r5, #255	; 0xff
 801dcf0:	d124      	bne.n	801dd3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801dcf2:	f010 0f01 	tst.w	r0, #1
 801dcf6:	f8d8 0000 	ldr.w	r0, [r8]
 801dcfa:	d022      	beq.n	801dd42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801dcfc:	2100      	movs	r1, #0
 801dcfe:	f8d0 c000 	ldr.w	ip, [r0]
 801dd02:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801dd06:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801dd0a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801dd0e:	f04f 0e01 	mov.w	lr, #1
 801dd12:	f8cd e018 	str.w	lr, [sp, #24]
 801dd16:	f8b9 e000 	ldrh.w	lr, [r9]
 801dd1a:	9503      	str	r5, [sp, #12]
 801dd1c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801dd20:	b2b6      	uxth	r6, r6
 801dd22:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801dd26:	9102      	str	r1, [sp, #8]
 801dd28:	b2bf      	uxth	r7, r7
 801dd2a:	9601      	str	r6, [sp, #4]
 801dd2c:	9700      	str	r7, [sp, #0]
 801dd2e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801dd32:	4621      	mov	r1, r4
 801dd34:	47a8      	blx	r5
 801dd36:	b00e      	add	sp, #56	; 0x38
 801dd38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dd3c:	f010 0f04 	tst.w	r0, #4
 801dd40:	e7d9      	b.n	801dcf6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801dd42:	6803      	ldr	r3, [r0, #0]
 801dd44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dd46:	4798      	blx	r3
 801dd48:	f8b9 3000 	ldrh.w	r3, [r9]
 801dd4c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801dd50:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801dd54:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801dd58:	fb03 1202 	mla	r2, r3, r2, r1
 801dd5c:	ebac 0c07 	sub.w	ip, ip, r7
 801dd60:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dd64:	435e      	muls	r6, r3
 801dd66:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801dd6a:	2dff      	cmp	r5, #255	; 0xff
 801dd6c:	eba3 0707 	sub.w	r7, r3, r7
 801dd70:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801dd74:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801dd78:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801dd7c:	d049      	beq.n	801de12 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801dd7e:	43eb      	mvns	r3, r5
 801dd80:	fa1f f985 	uxth.w	r9, r5
 801dd84:	b2db      	uxtb	r3, r3
 801dd86:	42b0      	cmp	r0, r6
 801dd88:	d266      	bcs.n	801de58 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801dd8a:	eb00 0a0e 	add.w	sl, r0, lr
 801dd8e:	4550      	cmp	r0, sl
 801dd90:	4621      	mov	r1, r4
 801dd92:	f104 0403 	add.w	r4, r4, #3
 801dd96:	d25b      	bcs.n	801de50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801dd98:	8802      	ldrh	r2, [r0, #0]
 801dd9a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801dd9e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801dda2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801dda6:	fb11 f109 	smulbb	r1, r1, r9
 801ddaa:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801ddae:	10d5      	asrs	r5, r2, #3
 801ddb0:	fb08 1803 	mla	r8, r8, r3, r1
 801ddb4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ddb8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ddbc:	fb11 f109 	smulbb	r1, r1, r9
 801ddc0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ddc4:	fb05 1503 	mla	r5, r5, r3, r1
 801ddc8:	00d2      	lsls	r2, r2, #3
 801ddca:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ddce:	b2d2      	uxtb	r2, r2
 801ddd0:	fb11 f109 	smulbb	r1, r1, r9
 801ddd4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ddd8:	fa1f f888 	uxth.w	r8, r8
 801dddc:	fb02 1203 	mla	r2, r2, r3, r1
 801dde0:	b292      	uxth	r2, r2
 801dde2:	f108 0101 	add.w	r1, r8, #1
 801dde6:	b2ad      	uxth	r5, r5
 801dde8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801ddec:	1c51      	adds	r1, r2, #1
 801ddee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ddf2:	1c69      	adds	r1, r5, #1
 801ddf4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ddf8:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ddfc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801de00:	096d      	lsrs	r5, r5, #5
 801de02:	ea42 0208 	orr.w	r2, r2, r8
 801de06:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801de0a:	432a      	orrs	r2, r5
 801de0c:	f820 2b02 	strh.w	r2, [r0], #2
 801de10:	e7bd      	b.n	801dd8e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801de12:	4a14      	ldr	r2, [pc, #80]	; (801de64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801de14:	42b0      	cmp	r0, r6
 801de16:	d21f      	bcs.n	801de58 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801de18:	eb00 050e 	add.w	r5, r0, lr
 801de1c:	42a8      	cmp	r0, r5
 801de1e:	4621      	mov	r1, r4
 801de20:	f104 0403 	add.w	r4, r4, #3
 801de24:	d210      	bcs.n	801de48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801de26:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801de2a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801de2e:	00db      	lsls	r3, r3, #3
 801de30:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801de34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801de38:	430b      	orrs	r3, r1
 801de3a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801de3e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801de42:	f820 3b02 	strh.w	r3, [r0], #2
 801de46:	e7e9      	b.n	801de1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801de48:	4438      	add	r0, r7
 801de4a:	eb01 040c 	add.w	r4, r1, ip
 801de4e:	e7e1      	b.n	801de14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801de50:	4438      	add	r0, r7
 801de52:	eb01 040c 	add.w	r4, r1, ip
 801de56:	e796      	b.n	801dd86 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801de58:	4b03      	ldr	r3, [pc, #12]	; (801de68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801de5a:	6818      	ldr	r0, [r3, #0]
 801de5c:	6803      	ldr	r3, [r0, #0]
 801de5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de60:	4798      	blx	r3
 801de62:	e768      	b.n	801dd36 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801de64:	fffff800 	.word	0xfffff800
 801de68:	20012da4 	.word	0x20012da4
 801de6c:	20012d9e 	.word	0x20012d9e

0801de70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801de70:	b4f0      	push	{r4, r5, r6, r7}
 801de72:	4616      	mov	r6, r2
 801de74:	2e01      	cmp	r6, #1
 801de76:	461c      	mov	r4, r3
 801de78:	460d      	mov	r5, r1
 801de7a:	9a04      	ldr	r2, [sp, #16]
 801de7c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801de80:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801de84:	d012      	beq.n	801deac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801de86:	d303      	bcc.n	801de90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801de88:	2e02      	cmp	r6, #2
 801de8a:	d00a      	beq.n	801dea2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801de8c:	bcf0      	pop	{r4, r5, r6, r7}
 801de8e:	4770      	bx	lr
 801de90:	6805      	ldr	r5, [r0, #0]
 801de92:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801de96:	68ed      	ldr	r5, [r5, #12]
 801de98:	4613      	mov	r3, r2
 801de9a:	46ac      	mov	ip, r5
 801de9c:	4622      	mov	r2, r4
 801de9e:	bcf0      	pop	{r4, r5, r6, r7}
 801dea0:	4760      	bx	ip
 801dea2:	4621      	mov	r1, r4
 801dea4:	4628      	mov	r0, r5
 801dea6:	bcf0      	pop	{r4, r5, r6, r7}
 801dea8:	f7ff bd94 	b.w	801d9d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801deac:	4621      	mov	r1, r4
 801deae:	4628      	mov	r0, r5
 801deb0:	bcf0      	pop	{r4, r5, r6, r7}
 801deb2:	f7ff bee5 	b.w	801dc80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801deb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801deb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801debc:	4681      	mov	r9, r0
 801debe:	b093      	sub	sp, #76	; 0x4c
 801dec0:	6810      	ldr	r0, [r2, #0]
 801dec2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801dec6:	4f6d      	ldr	r7, [pc, #436]	; (801e07c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801dec8:	4688      	mov	r8, r1
 801deca:	6851      	ldr	r1, [r2, #4]
 801decc:	ac0e      	add	r4, sp, #56	; 0x38
 801dece:	c403      	stmia	r4!, {r0, r1}
 801ded0:	6818      	ldr	r0, [r3, #0]
 801ded2:	6859      	ldr	r1, [r3, #4]
 801ded4:	ac10      	add	r4, sp, #64	; 0x40
 801ded6:	4616      	mov	r6, r2
 801ded8:	c403      	stmia	r4!, {r0, r1}
 801deda:	a80e      	add	r0, sp, #56	; 0x38
 801dedc:	f7f7 fcd4 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dee0:	4631      	mov	r1, r6
 801dee2:	a810      	add	r0, sp, #64	; 0x40
 801dee4:	f7f7 fd14 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dee8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801deec:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801def0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801def4:	4e62      	ldr	r6, [pc, #392]	; (801e080 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801def6:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801defa:	6830      	ldr	r0, [r6, #0]
 801defc:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801df00:	fb11 2103 	smlabb	r1, r1, r3, r2
 801df04:	4489      	add	r9, r1
 801df06:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801df0a:	440a      	add	r2, r1
 801df0c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801df10:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801df14:	4413      	add	r3, r2
 801df16:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801df1a:	6803      	ldr	r3, [r0, #0]
 801df1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801df1e:	4798      	blx	r3
 801df20:	f010 0f80 	tst.w	r0, #128	; 0x80
 801df24:	6830      	ldr	r0, [r6, #0]
 801df26:	d01d      	beq.n	801df64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801df28:	2200      	movs	r2, #0
 801df2a:	6801      	ldr	r1, [r0, #0]
 801df2c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801df30:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801df34:	220b      	movs	r2, #11
 801df36:	9207      	str	r2, [sp, #28]
 801df38:	883a      	ldrh	r2, [r7, #0]
 801df3a:	9206      	str	r2, [sp, #24]
 801df3c:	2201      	movs	r2, #1
 801df3e:	e9cd a204 	strd	sl, r2, [sp, #16]
 801df42:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801df46:	9203      	str	r2, [sp, #12]
 801df48:	b2a4      	uxth	r4, r4
 801df4a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801df4e:	9200      	str	r2, [sp, #0]
 801df50:	b2ad      	uxth	r5, r5
 801df52:	9502      	str	r5, [sp, #8]
 801df54:	9401      	str	r4, [sp, #4]
 801df56:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801df58:	4642      	mov	r2, r8
 801df5a:	4649      	mov	r1, r9
 801df5c:	47a0      	blx	r4
 801df5e:	b013      	add	sp, #76	; 0x4c
 801df60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df64:	6803      	ldr	r3, [r0, #0]
 801df66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df68:	4798      	blx	r3
 801df6a:	883b      	ldrh	r3, [r7, #0]
 801df6c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801df70:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801df74:	fb03 1202 	mla	r2, r3, r2, r1
 801df78:	435d      	muls	r5, r3
 801df7a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801df7e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801df82:	920c      	str	r2, [sp, #48]	; 0x30
 801df84:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801df88:	1b12      	subs	r2, r2, r4
 801df8a:	920d      	str	r2, [sp, #52]	; 0x34
 801df8c:	0062      	lsls	r2, r4, #1
 801df8e:	1b1c      	subs	r4, r3, r4
 801df90:	0063      	lsls	r3, r4, #1
 801df92:	920a      	str	r2, [sp, #40]	; 0x28
 801df94:	930b      	str	r3, [sp, #44]	; 0x2c
 801df96:	f04f 0e04 	mov.w	lr, #4
 801df9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801df9c:	4298      	cmp	r0, r3
 801df9e:	d266      	bcs.n	801e06e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801dfa0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dfa2:	eb00 0b03 	add.w	fp, r0, r3
 801dfa6:	4558      	cmp	r0, fp
 801dfa8:	d25c      	bcs.n	801e064 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801dfaa:	f819 3b01 	ldrb.w	r3, [r9], #1
 801dfae:	fb1e e303 	smlabb	r3, lr, r3, lr
 801dfb2:	f858 2003 	ldr.w	r2, [r8, r3]
 801dfb6:	0e11      	lsrs	r1, r2, #24
 801dfb8:	d012      	beq.n	801dfe0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801dfba:	29ff      	cmp	r1, #255	; 0xff
 801dfbc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801dfc0:	d110      	bne.n	801dfe4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801dfc2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801dfc6:	d10d      	bne.n	801dfe4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801dfc8:	0953      	lsrs	r3, r2, #5
 801dfca:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801dfce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dfd2:	f027 0707 	bic.w	r7, r7, #7
 801dfd6:	431f      	orrs	r7, r3
 801dfd8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dfdc:	433a      	orrs	r2, r7
 801dfde:	8002      	strh	r2, [r0, #0]
 801dfe0:	3002      	adds	r0, #2
 801dfe2:	e7e0      	b.n	801dfa6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801dfe4:	fb0a f101 	mul.w	r1, sl, r1
 801dfe8:	8806      	ldrh	r6, [r0, #0]
 801dfea:	1c4b      	adds	r3, r1, #1
 801dfec:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801dff0:	1235      	asrs	r5, r6, #8
 801dff2:	10f4      	asrs	r4, r6, #3
 801dff4:	121b      	asrs	r3, r3, #8
 801dff6:	00f6      	lsls	r6, r6, #3
 801dff8:	b299      	uxth	r1, r3
 801dffa:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801dffe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e002:	b2f6      	uxtb	r6, r6
 801e004:	43db      	mvns	r3, r3
 801e006:	b2d2      	uxtb	r2, r2
 801e008:	b2db      	uxtb	r3, r3
 801e00a:	fb1c fc01 	smulbb	ip, ip, r1
 801e00e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e012:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e016:	fb12 f201 	smulbb	r2, r2, r1
 801e01a:	fb05 c503 	mla	r5, r5, r3, ip
 801e01e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e022:	b2ff      	uxtb	r7, r7
 801e024:	fb06 2203 	mla	r2, r6, r3, r2
 801e028:	b2ad      	uxth	r5, r5
 801e02a:	fb17 f701 	smulbb	r7, r7, r1
 801e02e:	b292      	uxth	r2, r2
 801e030:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e034:	fb04 7403 	mla	r4, r4, r3, r7
 801e038:	f105 0c01 	add.w	ip, r5, #1
 801e03c:	1c57      	adds	r7, r2, #1
 801e03e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e042:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e046:	b2a4      	uxth	r4, r4
 801e048:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e04c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e050:	433d      	orrs	r5, r7
 801e052:	1c67      	adds	r7, r4, #1
 801e054:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e058:	0964      	lsrs	r4, r4, #5
 801e05a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e05e:	4325      	orrs	r5, r4
 801e060:	8005      	strh	r5, [r0, #0]
 801e062:	e7bd      	b.n	801dfe0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e064:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e066:	4418      	add	r0, r3
 801e068:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e06a:	4499      	add	r9, r3
 801e06c:	e795      	b.n	801df9a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e06e:	4b04      	ldr	r3, [pc, #16]	; (801e080 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e070:	6818      	ldr	r0, [r3, #0]
 801e072:	6803      	ldr	r3, [r0, #0]
 801e074:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e076:	4798      	blx	r3
 801e078:	e771      	b.n	801df5e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e07a:	bf00      	nop
 801e07c:	20012d9e 	.word	0x20012d9e
 801e080:	20012da4 	.word	0x20012da4

0801e084 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e088:	b087      	sub	sp, #28
 801e08a:	4680      	mov	r8, r0
 801e08c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e090:	460d      	mov	r5, r1
 801e092:	4614      	mov	r4, r2
 801e094:	2e00      	cmp	r6, #0
 801e096:	f000 80b9 	beq.w	801e20c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e09a:	6810      	ldr	r0, [r2, #0]
 801e09c:	6851      	ldr	r1, [r2, #4]
 801e09e:	af02      	add	r7, sp, #8
 801e0a0:	c703      	stmia	r7!, {r0, r1}
 801e0a2:	6818      	ldr	r0, [r3, #0]
 801e0a4:	6859      	ldr	r1, [r3, #4]
 801e0a6:	af04      	add	r7, sp, #16
 801e0a8:	c703      	stmia	r7!, {r0, r1}
 801e0aa:	a802      	add	r0, sp, #8
 801e0ac:	f7f7 fbec 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e0b0:	4621      	mov	r1, r4
 801e0b2:	a804      	add	r0, sp, #16
 801e0b4:	f7f7 fc2c 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e0b8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e0bc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e0c0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e0c4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e0c8:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e0cc:	eb08 0401 	add.w	r4, r8, r1
 801e0d0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e0d4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e0d8:	440a      	add	r2, r1
 801e0da:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e0de:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e0e2:	4413      	add	r3, r2
 801e0e4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e0e8:	4b4a      	ldr	r3, [pc, #296]	; (801e214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e0ea:	6818      	ldr	r0, [r3, #0]
 801e0ec:	6803      	ldr	r3, [r0, #0]
 801e0ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e0f0:	4798      	blx	r3
 801e0f2:	4b49      	ldr	r3, [pc, #292]	; (801e218 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e0f4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e0f8:	881a      	ldrh	r2, [r3, #0]
 801e0fa:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e0fe:	2eff      	cmp	r6, #255	; 0xff
 801e100:	fb02 c101 	mla	r1, r2, r1, ip
 801e104:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e108:	fb02 f207 	mul.w	r2, r2, r7
 801e10c:	f105 0104 	add.w	r1, r5, #4
 801e110:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e114:	461d      	mov	r5, r3
 801e116:	d05a      	beq.n	801e1ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e118:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e11c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e120:	b2b6      	uxth	r6, r6
 801e122:	fa1f fe8e 	uxth.w	lr, lr
 801e126:	9301      	str	r3, [sp, #4]
 801e128:	4282      	cmp	r2, r0
 801e12a:	d96a      	bls.n	801e202 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e12c:	eb00 0b0a 	add.w	fp, r0, sl
 801e130:	4583      	cmp	fp, r0
 801e132:	d940      	bls.n	801e1b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e134:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e138:	8805      	ldrh	r5, [r0, #0]
 801e13a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e13e:	122f      	asrs	r7, r5, #8
 801e140:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e144:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e148:	fb17 f70e 	smulbb	r7, r7, lr
 801e14c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e150:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e154:	00ed      	lsls	r5, r5, #3
 801e156:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e15a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e15e:	10df      	asrs	r7, r3, #3
 801e160:	b2ed      	uxtb	r5, r5
 801e162:	00db      	lsls	r3, r3, #3
 801e164:	fa1f fc8c 	uxth.w	ip, ip
 801e168:	fb19 f90e 	smulbb	r9, r9, lr
 801e16c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e170:	b2db      	uxtb	r3, r3
 801e172:	fb15 f50e 	smulbb	r5, r5, lr
 801e176:	fb07 9706 	mla	r7, r7, r6, r9
 801e17a:	fb03 5306 	mla	r3, r3, r6, r5
 801e17e:	f10c 0901 	add.w	r9, ip, #1
 801e182:	b29b      	uxth	r3, r3
 801e184:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e188:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e18c:	f103 0c01 	add.w	ip, r3, #1
 801e190:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e194:	b2bf      	uxth	r7, r7
 801e196:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e19a:	ea4c 0c09 	orr.w	ip, ip, r9
 801e19e:	f107 0901 	add.w	r9, r7, #1
 801e1a2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e1a6:	097f      	lsrs	r7, r7, #5
 801e1a8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e1ac:	ea4c 0c07 	orr.w	ip, ip, r7
 801e1b0:	f820 cb02 	strh.w	ip, [r0], #2
 801e1b4:	e7bc      	b.n	801e130 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e1b6:	9b01      	ldr	r3, [sp, #4]
 801e1b8:	881b      	ldrh	r3, [r3, #0]
 801e1ba:	eba3 0308 	sub.w	r3, r3, r8
 801e1be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e1c2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e1c6:	eba3 0308 	sub.w	r3, r3, r8
 801e1ca:	441c      	add	r4, r3
 801e1cc:	e7ac      	b.n	801e128 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e1ce:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e1d2:	4282      	cmp	r2, r0
 801e1d4:	d915      	bls.n	801e202 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e1d6:	eb00 060a 	add.w	r6, r0, sl
 801e1da:	4286      	cmp	r6, r0
 801e1dc:	d906      	bls.n	801e1ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e1de:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e1e2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e1e6:	f820 3b02 	strh.w	r3, [r0], #2
 801e1ea:	e7f6      	b.n	801e1da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e1ec:	882b      	ldrh	r3, [r5, #0]
 801e1ee:	eba3 0308 	sub.w	r3, r3, r8
 801e1f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e1f6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e1fa:	eba3 0308 	sub.w	r3, r3, r8
 801e1fe:	441c      	add	r4, r3
 801e200:	e7e7      	b.n	801e1d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e202:	4b04      	ldr	r3, [pc, #16]	; (801e214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e204:	6818      	ldr	r0, [r3, #0]
 801e206:	6803      	ldr	r3, [r0, #0]
 801e208:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e20a:	4798      	blx	r3
 801e20c:	b007      	add	sp, #28
 801e20e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e212:	bf00      	nop
 801e214:	20012da4 	.word	0x20012da4
 801e218:	20012d9e 	.word	0x20012d9e

0801e21c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e21c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e220:	b091      	sub	sp, #68	; 0x44
 801e222:	4680      	mov	r8, r0
 801e224:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e228:	460f      	mov	r7, r1
 801e22a:	4614      	mov	r4, r2
 801e22c:	2d00      	cmp	r5, #0
 801e22e:	d051      	beq.n	801e2d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e230:	6810      	ldr	r0, [r2, #0]
 801e232:	6851      	ldr	r1, [r2, #4]
 801e234:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e438 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e238:	ae0c      	add	r6, sp, #48	; 0x30
 801e23a:	c603      	stmia	r6!, {r0, r1}
 801e23c:	6818      	ldr	r0, [r3, #0]
 801e23e:	6859      	ldr	r1, [r3, #4]
 801e240:	ae0e      	add	r6, sp, #56	; 0x38
 801e242:	c603      	stmia	r6!, {r0, r1}
 801e244:	a80c      	add	r0, sp, #48	; 0x30
 801e246:	f7f7 fb1f 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e24a:	4621      	mov	r1, r4
 801e24c:	a80e      	add	r0, sp, #56	; 0x38
 801e24e:	f7f7 fb5f 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e252:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e256:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e25a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e25e:	f8d9 0000 	ldr.w	r0, [r9]
 801e262:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e266:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e26a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e26e:	eb08 0401 	add.w	r4, r8, r1
 801e272:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e276:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e43c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e27a:	440a      	add	r2, r1
 801e27c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e280:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e284:	4413      	add	r3, r2
 801e286:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e28a:	6803      	ldr	r3, [r0, #0]
 801e28c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e28e:	4798      	blx	r3
 801e290:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e294:	f8d9 0000 	ldr.w	r0, [r9]
 801e298:	d01f      	beq.n	801e2da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e29a:	2200      	movs	r2, #0
 801e29c:	6801      	ldr	r1, [r0, #0]
 801e29e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e2a2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e2a6:	220b      	movs	r2, #11
 801e2a8:	9207      	str	r2, [sp, #28]
 801e2aa:	f8b8 2000 	ldrh.w	r2, [r8]
 801e2ae:	9206      	str	r2, [sp, #24]
 801e2b0:	2201      	movs	r2, #1
 801e2b2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e2b6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e2ba:	9203      	str	r2, [sp, #12]
 801e2bc:	fa1f f28a 	uxth.w	r2, sl
 801e2c0:	9202      	str	r2, [sp, #8]
 801e2c2:	b2b6      	uxth	r6, r6
 801e2c4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e2c8:	9200      	str	r2, [sp, #0]
 801e2ca:	9601      	str	r6, [sp, #4]
 801e2cc:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e2ce:	463a      	mov	r2, r7
 801e2d0:	4621      	mov	r1, r4
 801e2d2:	47a8      	blx	r5
 801e2d4:	b011      	add	sp, #68	; 0x44
 801e2d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e2da:	6803      	ldr	r3, [r0, #0]
 801e2dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e2de:	4798      	blx	r3
 801e2e0:	f8b8 2000 	ldrh.w	r2, [r8]
 801e2e4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e2e8:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e2ec:	2dff      	cmp	r5, #255	; 0xff
 801e2ee:	fb02 1303 	mla	r3, r2, r3, r1
 801e2f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e2f6:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e2fa:	fb0a fa02 	mul.w	sl, sl, r2
 801e2fe:	d062      	beq.n	801e3c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e300:	ea6f 0c05 	mvn.w	ip, r5
 801e304:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e308:	930a      	str	r3, [sp, #40]	; 0x28
 801e30a:	b2ad      	uxth	r5, r5
 801e30c:	fa5f fc8c 	uxtb.w	ip, ip
 801e310:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e314:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e316:	4298      	cmp	r0, r3
 801e318:	f080 8085 	bcs.w	801e426 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e31c:	eb00 0b09 	add.w	fp, r0, r9
 801e320:	4558      	cmp	r0, fp
 801e322:	d246      	bcs.n	801e3b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e324:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e328:	2303      	movs	r3, #3
 801e32a:	2204      	movs	r2, #4
 801e32c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e330:	eb07 0a0e 	add.w	sl, r7, lr
 801e334:	8803      	ldrh	r3, [r0, #0]
 801e336:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e33a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e33e:	1219      	asrs	r1, r3, #8
 801e340:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e344:	fb18 f805 	smulbb	r8, r8, r5
 801e348:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e34c:	10da      	asrs	r2, r3, #3
 801e34e:	fb01 810c 	mla	r1, r1, ip, r8
 801e352:	00db      	lsls	r3, r3, #3
 801e354:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e358:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e35c:	b2db      	uxtb	r3, r3
 801e35e:	fb18 f805 	smulbb	r8, r8, r5
 801e362:	fb1e fe05 	smulbb	lr, lr, r5
 801e366:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e36a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e36e:	b289      	uxth	r1, r1
 801e370:	fb02 820c 	mla	r2, r2, ip, r8
 801e374:	fb03 e30c 	mla	r3, r3, ip, lr
 801e378:	b292      	uxth	r2, r2
 801e37a:	b29b      	uxth	r3, r3
 801e37c:	f101 0801 	add.w	r8, r1, #1
 801e380:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e384:	f103 0e01 	add.w	lr, r3, #1
 801e388:	f102 0801 	add.w	r8, r2, #1
 801e38c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e390:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e394:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e398:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e39c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e3a0:	ea4e 0101 	orr.w	r1, lr, r1
 801e3a4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e3a8:	ea41 0108 	orr.w	r1, r1, r8
 801e3ac:	f820 1b02 	strh.w	r1, [r0], #2
 801e3b0:	e7b6      	b.n	801e320 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e3b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e3b4:	881b      	ldrh	r3, [r3, #0]
 801e3b6:	1b9b      	subs	r3, r3, r6
 801e3b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e3bc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e3c0:	1b9b      	subs	r3, r3, r6
 801e3c2:	441c      	add	r4, r3
 801e3c4:	e7a6      	b.n	801e314 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e3c6:	491b      	ldr	r1, [pc, #108]	; (801e434 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e3c8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e3cc:	2203      	movs	r2, #3
 801e3ce:	2504      	movs	r5, #4
 801e3d0:	4550      	cmp	r0, sl
 801e3d2:	d228      	bcs.n	801e426 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e3d4:	eb00 0c09 	add.w	ip, r0, r9
 801e3d8:	4560      	cmp	r0, ip
 801e3da:	4623      	mov	r3, r4
 801e3dc:	d219      	bcs.n	801e412 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e3de:	f893 e000 	ldrb.w	lr, [r3]
 801e3e2:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e3e6:	eb07 0b0e 	add.w	fp, r7, lr
 801e3ea:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e3ee:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e3f2:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e3f6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e3fa:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e3fe:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e402:	ea43 030b 	orr.w	r3, r3, fp
 801e406:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e40a:	3401      	adds	r4, #1
 801e40c:	f820 3b02 	strh.w	r3, [r0], #2
 801e410:	e7e2      	b.n	801e3d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e412:	f8b8 3000 	ldrh.w	r3, [r8]
 801e416:	1b9b      	subs	r3, r3, r6
 801e418:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e41c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e420:	1b9b      	subs	r3, r3, r6
 801e422:	441c      	add	r4, r3
 801e424:	e7d4      	b.n	801e3d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e426:	4b04      	ldr	r3, [pc, #16]	; (801e438 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e428:	6818      	ldr	r0, [r3, #0]
 801e42a:	6803      	ldr	r3, [r0, #0]
 801e42c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e42e:	4798      	blx	r3
 801e430:	e750      	b.n	801e2d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e432:	bf00      	nop
 801e434:	fffff800 	.word	0xfffff800
 801e438:	20012da4 	.word	0x20012da4
 801e43c:	20012d9e 	.word	0x20012d9e

0801e440 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e440:	b4f0      	push	{r4, r5, r6, r7}
 801e442:	460c      	mov	r4, r1
 801e444:	4611      	mov	r1, r2
 801e446:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e44a:	780f      	ldrb	r7, [r1, #0]
 801e44c:	784e      	ldrb	r6, [r1, #1]
 801e44e:	2f01      	cmp	r7, #1
 801e450:	461a      	mov	r2, r3
 801e452:	9b04      	ldr	r3, [sp, #16]
 801e454:	d036      	beq.n	801e4c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e456:	d31e      	bcc.n	801e496 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e458:	2f02      	cmp	r7, #2
 801e45a:	d14a      	bne.n	801e4f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e45c:	2e03      	cmp	r6, #3
 801e45e:	d848      	bhi.n	801e4f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e460:	e8df f006 	tbb	[pc, r6]
 801e464:	16140702 	.word	0x16140702
 801e468:	9504      	str	r5, [sp, #16]
 801e46a:	4620      	mov	r0, r4
 801e46c:	bcf0      	pop	{r4, r5, r6, r7}
 801e46e:	f7ff be09 	b.w	801e084 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e472:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e474:	2800      	cmp	r0, #0
 801e476:	d03c      	beq.n	801e4f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e478:	6806      	ldr	r6, [r0, #0]
 801e47a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e47e:	68b5      	ldr	r5, [r6, #8]
 801e480:	4613      	mov	r3, r2
 801e482:	46ac      	mov	ip, r5
 801e484:	460a      	mov	r2, r1
 801e486:	4621      	mov	r1, r4
 801e488:	bcf0      	pop	{r4, r5, r6, r7}
 801e48a:	4760      	bx	ip
 801e48c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e48e:	e7f1      	b.n	801e474 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e490:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e494:	e7ee      	b.n	801e474 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e496:	2e03      	cmp	r6, #3
 801e498:	d82b      	bhi.n	801e4f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e49a:	e8df f006 	tbb	[pc, r6]
 801e49e:	0702      	.short	0x0702
 801e4a0:	100e      	.short	0x100e
 801e4a2:	9504      	str	r5, [sp, #16]
 801e4a4:	4620      	mov	r0, r4
 801e4a6:	bcf0      	pop	{r4, r5, r6, r7}
 801e4a8:	f7ff bd06 	b.w	801deb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e4ac:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e4ae:	b300      	cbz	r0, 801e4f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e4b0:	6806      	ldr	r6, [r0, #0]
 801e4b2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e4b6:	68f5      	ldr	r5, [r6, #12]
 801e4b8:	e7e2      	b.n	801e480 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e4ba:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e4bc:	e7f7      	b.n	801e4ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e4be:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e4c2:	e7f4      	b.n	801e4ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e4c4:	2e03      	cmp	r6, #3
 801e4c6:	d814      	bhi.n	801e4f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e4c8:	e8df f006 	tbb	[pc, r6]
 801e4cc:	100e0702 	.word	0x100e0702
 801e4d0:	9504      	str	r5, [sp, #16]
 801e4d2:	4620      	mov	r0, r4
 801e4d4:	bcf0      	pop	{r4, r5, r6, r7}
 801e4d6:	f7ff bea1 	b.w	801e21c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e4da:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e4dc:	b148      	cbz	r0, 801e4f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e4de:	6806      	ldr	r6, [r0, #0]
 801e4e0:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e4e4:	6935      	ldr	r5, [r6, #16]
 801e4e6:	e7cb      	b.n	801e480 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e4e8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e4ea:	e7f7      	b.n	801e4dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e4ec:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e4f0:	e7f4      	b.n	801e4dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e4f2:	bcf0      	pop	{r4, r5, r6, r7}
 801e4f4:	4770      	bx	lr
	...

0801e4f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e4f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4fc:	4604      	mov	r4, r0
 801e4fe:	b087      	sub	sp, #28
 801e500:	6810      	ldr	r0, [r2, #0]
 801e502:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e506:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801e740 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e50a:	460e      	mov	r6, r1
 801e50c:	6851      	ldr	r1, [r2, #4]
 801e50e:	ad02      	add	r5, sp, #8
 801e510:	c503      	stmia	r5!, {r0, r1}
 801e512:	6818      	ldr	r0, [r3, #0]
 801e514:	6859      	ldr	r1, [r3, #4]
 801e516:	ad04      	add	r5, sp, #16
 801e518:	4617      	mov	r7, r2
 801e51a:	c503      	stmia	r5!, {r0, r1}
 801e51c:	a802      	add	r0, sp, #8
 801e51e:	f7f7 f9b3 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e522:	4639      	mov	r1, r7
 801e524:	a804      	add	r0, sp, #16
 801e526:	f7f7 f9f3 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e52a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e52e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e532:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e536:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e53a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e53e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e542:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e546:	440e      	add	r6, r1
 801e548:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e54c:	440a      	add	r2, r1
 801e54e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e552:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e556:	4413      	add	r3, r2
 801e558:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e55c:	4b77      	ldr	r3, [pc, #476]	; (801e73c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e55e:	6818      	ldr	r0, [r3, #0]
 801e560:	6803      	ldr	r3, [r0, #0]
 801e562:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e564:	4798      	blx	r3
 801e566:	f8b9 b000 	ldrh.w	fp, [r9]
 801e56a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e56e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e572:	fb0b 2303 	mla	r3, fp, r3, r2
 801e576:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e57a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e57e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e582:	fb05 f50b 	mul.w	r5, r5, fp
 801e586:	9300      	str	r3, [sp, #0]
 801e588:	d069      	beq.n	801e65e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e58a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e58e:	4558      	cmp	r0, fp
 801e590:	f080 80cc 	bcs.w	801e72c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e594:	9b00      	ldr	r3, [sp, #0]
 801e596:	18c3      	adds	r3, r0, r3
 801e598:	9301      	str	r3, [sp, #4]
 801e59a:	4631      	mov	r1, r6
 801e59c:	9b01      	ldr	r3, [sp, #4]
 801e59e:	4298      	cmp	r0, r3
 801e5a0:	d24f      	bcs.n	801e642 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e5a2:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e5a6:	2a00      	cmp	r2, #0
 801e5a8:	d048      	beq.n	801e63c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e5aa:	fb0a f202 	mul.w	r2, sl, r2
 801e5ae:	1c53      	adds	r3, r2, #1
 801e5b0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e5b4:	121b      	asrs	r3, r3, #8
 801e5b6:	d041      	beq.n	801e63c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e5b8:	8802      	ldrh	r2, [r0, #0]
 801e5ba:	f8b4 c000 	ldrh.w	ip, [r4]
 801e5be:	b29e      	uxth	r6, r3
 801e5c0:	1215      	asrs	r5, r2, #8
 801e5c2:	43db      	mvns	r3, r3
 801e5c4:	b2db      	uxtb	r3, r3
 801e5c6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e5ca:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e5ce:	fb15 f503 	smulbb	r5, r5, r3
 801e5d2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e5d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e5da:	00d2      	lsls	r2, r2, #3
 801e5dc:	fb07 5706 	mla	r7, r7, r6, r5
 801e5e0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e5e4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e5e8:	b2d2      	uxtb	r2, r2
 801e5ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e5ee:	b2bf      	uxth	r7, r7
 801e5f0:	fb1e fe03 	smulbb	lr, lr, r3
 801e5f4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e5f8:	fa5f fc8c 	uxtb.w	ip, ip
 801e5fc:	fb12 f203 	smulbb	r2, r2, r3
 801e600:	fb05 e506 	mla	r5, r5, r6, lr
 801e604:	fb0c 2c06 	mla	ip, ip, r6, r2
 801e608:	f107 0e01 	add.w	lr, r7, #1
 801e60c:	fa1f fc8c 	uxth.w	ip, ip
 801e610:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801e614:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801e618:	f10c 0701 	add.w	r7, ip, #1
 801e61c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e620:	b2ad      	uxth	r5, r5
 801e622:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e626:	ea47 070e 	orr.w	r7, r7, lr
 801e62a:	f105 0e01 	add.w	lr, r5, #1
 801e62e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e632:	096d      	lsrs	r5, r5, #5
 801e634:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e638:	432f      	orrs	r7, r5
 801e63a:	8007      	strh	r7, [r0, #0]
 801e63c:	3002      	adds	r0, #2
 801e63e:	3402      	adds	r4, #2
 801e640:	e7ac      	b.n	801e59c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801e642:	f8b9 3000 	ldrh.w	r3, [r9]
 801e646:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e64a:	eba3 0308 	sub.w	r3, r3, r8
 801e64e:	eba6 0608 	sub.w	r6, r6, r8
 801e652:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e656:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e65a:	440e      	add	r6, r1
 801e65c:	e797      	b.n	801e58e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801e65e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801e662:	42a8      	cmp	r0, r5
 801e664:	d262      	bcs.n	801e72c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e666:	9b00      	ldr	r3, [sp, #0]
 801e668:	4631      	mov	r1, r6
 801e66a:	eb00 0b03 	add.w	fp, r0, r3
 801e66e:	4558      	cmp	r0, fp
 801e670:	d24e      	bcs.n	801e710 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801e672:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e676:	b12b      	cbz	r3, 801e684 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e678:	2bff      	cmp	r3, #255	; 0xff
 801e67a:	f8b4 e000 	ldrh.w	lr, [r4]
 801e67e:	d104      	bne.n	801e68a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801e680:	f8a0 e000 	strh.w	lr, [r0]
 801e684:	3002      	adds	r0, #2
 801e686:	3402      	adds	r4, #2
 801e688:	e7f1      	b.n	801e66e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801e68a:	8802      	ldrh	r2, [r0, #0]
 801e68c:	b29f      	uxth	r7, r3
 801e68e:	1216      	asrs	r6, r2, #8
 801e690:	43db      	mvns	r3, r3
 801e692:	b2db      	uxtb	r3, r3
 801e694:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e698:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e69c:	fb16 f603 	smulbb	r6, r6, r3
 801e6a0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801e6a4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e6a8:	00d2      	lsls	r2, r2, #3
 801e6aa:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e6ae:	b2d2      	uxtb	r2, r2
 801e6b0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e6b4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e6b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e6bc:	fb1a fa03 	smulbb	sl, sl, r3
 801e6c0:	fa1f fc8c 	uxth.w	ip, ip
 801e6c4:	fb12 f303 	smulbb	r3, r2, r3
 801e6c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e6cc:	fa5f fe8e 	uxtb.w	lr, lr
 801e6d0:	fb06 a607 	mla	r6, r6, r7, sl
 801e6d4:	f10c 0201 	add.w	r2, ip, #1
 801e6d8:	fb0e 3307 	mla	r3, lr, r7, r3
 801e6dc:	b2b6      	uxth	r6, r6
 801e6de:	b29b      	uxth	r3, r3
 801e6e0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e6e4:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801e6e8:	f106 0a01 	add.w	sl, r6, #1
 801e6ec:	f103 0c01 	add.w	ip, r3, #1
 801e6f0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e6f4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e6f8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e6fc:	0976      	lsrs	r6, r6, #5
 801e6fe:	ea4c 0c02 	orr.w	ip, ip, r2
 801e702:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e706:	ea4c 0c06 	orr.w	ip, ip, r6
 801e70a:	f8a0 c000 	strh.w	ip, [r0]
 801e70e:	e7b9      	b.n	801e684 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e710:	f8b9 3000 	ldrh.w	r3, [r9]
 801e714:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e718:	eba3 0308 	sub.w	r3, r3, r8
 801e71c:	eba6 0608 	sub.w	r6, r6, r8
 801e720:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e724:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e728:	440e      	add	r6, r1
 801e72a:	e79a      	b.n	801e662 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801e72c:	4b03      	ldr	r3, [pc, #12]	; (801e73c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e72e:	6818      	ldr	r0, [r3, #0]
 801e730:	6803      	ldr	r3, [r0, #0]
 801e732:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e734:	4798      	blx	r3
 801e736:	b007      	add	sp, #28
 801e738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e73c:	20012da4 	.word	0x20012da4
 801e740:	20012d9e 	.word	0x20012d9e

0801e744 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801e744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e748:	b089      	sub	sp, #36	; 0x24
 801e74a:	4682      	mov	sl, r0
 801e74c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801e750:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e752:	460f      	mov	r7, r1
 801e754:	4691      	mov	r9, r2
 801e756:	4698      	mov	r8, r3
 801e758:	2e00      	cmp	r6, #0
 801e75a:	d03d      	beq.n	801e7d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e75c:	4608      	mov	r0, r1
 801e75e:	f7fa fe59 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e762:	4605      	mov	r5, r0
 801e764:	4638      	mov	r0, r7
 801e766:	f7fa fe89 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e76a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801e76e:	4638      	mov	r0, r7
 801e770:	f8ad 9008 	strh.w	r9, [sp, #8]
 801e774:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e778:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e77c:	f7fa ff36 	bl	80195ec <_ZNK8touchgfx6Bitmap7getDataEv>
 801e780:	4605      	mov	r5, r0
 801e782:	4638      	mov	r0, r7
 801e784:	f7fa ff62 	bl	801964c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e788:	4681      	mov	r9, r0
 801e78a:	4638      	mov	r0, r7
 801e78c:	f7fa ffb2 	bl	80196f4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801e790:	280b      	cmp	r0, #11
 801e792:	d821      	bhi.n	801e7d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e794:	e8df f000 	tbb	[pc, r0]
 801e798:	2006aebe 	.word	0x2006aebe
 801e79c:	20202020 	.word	0x20202020
 801e7a0:	b5202020 	.word	0xb5202020
 801e7a4:	4bb0      	ldr	r3, [pc, #704]	; (801ea68 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801e7a6:	6818      	ldr	r0, [r3, #0]
 801e7a8:	6803      	ldr	r3, [r0, #0]
 801e7aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e7ac:	4798      	blx	r3
 801e7ae:	2eff      	cmp	r6, #255	; 0xff
 801e7b0:	d101      	bne.n	801e7b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e7b2:	0683      	lsls	r3, r0, #26
 801e7b4:	d506      	bpl.n	801e7c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801e7b6:	4633      	mov	r3, r6
 801e7b8:	4622      	mov	r2, r4
 801e7ba:	a902      	add	r1, sp, #8
 801e7bc:	4628      	mov	r0, r5
 801e7be:	f7ff f909 	bl	801d9d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e7c2:	e009      	b.n	801e7d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e7c4:	4638      	mov	r0, r7
 801e7c6:	f7fa fed9 	bl	801957c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e7ca:	b940      	cbnz	r0, 801e7de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801e7cc:	4623      	mov	r3, r4
 801e7ce:	aa02      	add	r2, sp, #8
 801e7d0:	4629      	mov	r1, r5
 801e7d2:	4650      	mov	r0, sl
 801e7d4:	f7ff f9e4 	bl	801dba0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e7d8:	b009      	add	sp, #36	; 0x24
 801e7da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7de:	f10d 0818 	add.w	r8, sp, #24
 801e7e2:	4639      	mov	r1, r7
 801e7e4:	4640      	mov	r0, r8
 801e7e6:	f7fa fe7d 	bl	80194e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e7ea:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e7ee:	af04      	add	r7, sp, #16
 801e7f0:	e887 0003 	stmia.w	r7, {r0, r1}
 801e7f4:	4638      	mov	r0, r7
 801e7f6:	4621      	mov	r1, r4
 801e7f8:	f7f2 f8e8 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 801e7fc:	4638      	mov	r0, r7
 801e7fe:	f7f2 f928 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e802:	2800      	cmp	r0, #0
 801e804:	d1d7      	bne.n	801e7b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e806:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e80a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e80e:	4293      	cmp	r3, r2
 801e810:	dd12      	ble.n	801e838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801e812:	1a9b      	subs	r3, r3, r2
 801e814:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e818:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e81c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e820:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e824:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e828:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e82c:	4642      	mov	r2, r8
 801e82e:	4633      	mov	r3, r6
 801e830:	a902      	add	r1, sp, #8
 801e832:	4628      	mov	r0, r5
 801e834:	f7ff f8ce 	bl	801d9d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e838:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e83c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e840:	4293      	cmp	r3, r2
 801e842:	dd12      	ble.n	801e86a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801e844:	1a9b      	subs	r3, r3, r2
 801e846:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e84a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e84e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e852:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e856:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e85a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e85e:	23ff      	movs	r3, #255	; 0xff
 801e860:	4642      	mov	r2, r8
 801e862:	a902      	add	r1, sp, #8
 801e864:	4628      	mov	r0, r5
 801e866:	f7ff f8b5 	bl	801d9d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e86a:	463b      	mov	r3, r7
 801e86c:	aa02      	add	r2, sp, #8
 801e86e:	4629      	mov	r1, r5
 801e870:	4650      	mov	r0, sl
 801e872:	f7ff f995 	bl	801dba0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e876:	88a2      	ldrh	r2, [r4, #4]
 801e878:	8823      	ldrh	r3, [r4, #0]
 801e87a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e87e:	4413      	add	r3, r2
 801e880:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e884:	440a      	add	r2, r1
 801e886:	b29b      	uxth	r3, r3
 801e888:	b292      	uxth	r2, r2
 801e88a:	b211      	sxth	r1, r2
 801e88c:	b218      	sxth	r0, r3
 801e88e:	4288      	cmp	r0, r1
 801e890:	dd12      	ble.n	801e8b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801e892:	1a9b      	subs	r3, r3, r2
 801e894:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e898:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801e89c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e8a0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e8a4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e8a8:	23ff      	movs	r3, #255	; 0xff
 801e8aa:	4642      	mov	r2, r8
 801e8ac:	a902      	add	r1, sp, #8
 801e8ae:	4628      	mov	r0, r5
 801e8b0:	f8ad 601a 	strh.w	r6, [sp, #26]
 801e8b4:	f7ff f88e 	bl	801d9d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e8b8:	88e2      	ldrh	r2, [r4, #6]
 801e8ba:	8863      	ldrh	r3, [r4, #2]
 801e8bc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e8c0:	4413      	add	r3, r2
 801e8c2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e8c6:	440a      	add	r2, r1
 801e8c8:	b29b      	uxth	r3, r3
 801e8ca:	b292      	uxth	r2, r2
 801e8cc:	b211      	sxth	r1, r2
 801e8ce:	b218      	sxth	r0, r3
 801e8d0:	4288      	cmp	r0, r1
 801e8d2:	dd81      	ble.n	801e7d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e8d4:	1a9b      	subs	r3, r3, r2
 801e8d6:	f9b4 6000 	ldrsh.w	r6, [r4]
 801e8da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e8de:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e8e2:	f8ad 6018 	strh.w	r6, [sp, #24]
 801e8e6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e8ea:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e8ee:	23ff      	movs	r3, #255	; 0xff
 801e8f0:	4642      	mov	r2, r8
 801e8f2:	e762      	b.n	801e7ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801e8f4:	4633      	mov	r3, r6
 801e8f6:	4622      	mov	r2, r4
 801e8f8:	a902      	add	r1, sp, #8
 801e8fa:	4628      	mov	r0, r5
 801e8fc:	f7ff f9c0 	bl	801dc80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801e900:	e76a      	b.n	801e7d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e902:	e9cd 4600 	strd	r4, r6, [sp]
 801e906:	ab02      	add	r3, sp, #8
 801e908:	464a      	mov	r2, r9
 801e90a:	4629      	mov	r1, r5
 801e90c:	4650      	mov	r0, sl
 801e90e:	f7ff fd97 	bl	801e440 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801e912:	e761      	b.n	801e7d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e914:	4638      	mov	r0, r7
 801e916:	f7fa fe31 	bl	801957c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e91a:	b950      	cbnz	r0, 801e932 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801e91c:	e9cd 6000 	strd	r6, r0, [sp]
 801e920:	f8da 3000 	ldr.w	r3, [sl]
 801e924:	aa02      	add	r2, sp, #8
 801e926:	68de      	ldr	r6, [r3, #12]
 801e928:	4629      	mov	r1, r5
 801e92a:	4623      	mov	r3, r4
 801e92c:	4650      	mov	r0, sl
 801e92e:	47b0      	blx	r6
 801e930:	e752      	b.n	801e7d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e932:	f10d 0818 	add.w	r8, sp, #24
 801e936:	4639      	mov	r1, r7
 801e938:	4640      	mov	r0, r8
 801e93a:	f7fa fdd3 	bl	80194e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e93e:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e942:	af04      	add	r7, sp, #16
 801e944:	e887 0003 	stmia.w	r7, {r0, r1}
 801e948:	4638      	mov	r0, r7
 801e94a:	4621      	mov	r1, r4
 801e94c:	f7f2 f83e 	bl	80109cc <_ZN8touchgfx4RectaNERKS0_>
 801e950:	4638      	mov	r0, r7
 801e952:	f7f2 f87e 	bl	8010a52 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e956:	b138      	cbz	r0, 801e968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801e958:	9600      	str	r6, [sp, #0]
 801e95a:	4623      	mov	r3, r4
 801e95c:	aa02      	add	r2, sp, #8
 801e95e:	4649      	mov	r1, r9
 801e960:	4628      	mov	r0, r5
 801e962:	f7ff fdc9 	bl	801e4f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e966:	e737      	b.n	801e7d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e968:	e9cd 6000 	strd	r6, r0, [sp]
 801e96c:	f8da 3000 	ldr.w	r3, [sl]
 801e970:	aa02      	add	r2, sp, #8
 801e972:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801e976:	4629      	mov	r1, r5
 801e978:	463b      	mov	r3, r7
 801e97a:	4650      	mov	r0, sl
 801e97c:	47d8      	blx	fp
 801e97e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e982:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e986:	4293      	cmp	r3, r2
 801e988:	dd13      	ble.n	801e9b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801e98a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e98e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e992:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e996:	1a9b      	subs	r3, r3, r2
 801e998:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e99c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e9a0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e9a4:	9600      	str	r6, [sp, #0]
 801e9a6:	4643      	mov	r3, r8
 801e9a8:	aa02      	add	r2, sp, #8
 801e9aa:	4649      	mov	r1, r9
 801e9ac:	4628      	mov	r0, r5
 801e9ae:	f7ff fda3 	bl	801e4f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e9b2:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e9b6:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e9ba:	4293      	cmp	r3, r2
 801e9bc:	dd13      	ble.n	801e9e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801e9be:	1a9b      	subs	r3, r3, r2
 801e9c0:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e9c4:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e9c8:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e9cc:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e9d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e9d4:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e9d8:	9600      	str	r6, [sp, #0]
 801e9da:	4643      	mov	r3, r8
 801e9dc:	aa02      	add	r2, sp, #8
 801e9de:	4649      	mov	r1, r9
 801e9e0:	4628      	mov	r0, r5
 801e9e2:	f7ff fd89 	bl	801e4f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e9e6:	88a2      	ldrh	r2, [r4, #4]
 801e9e8:	8823      	ldrh	r3, [r4, #0]
 801e9ea:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e9ee:	4413      	add	r3, r2
 801e9f0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e9f4:	440a      	add	r2, r1
 801e9f6:	b29b      	uxth	r3, r3
 801e9f8:	b292      	uxth	r2, r2
 801e9fa:	b211      	sxth	r1, r2
 801e9fc:	b218      	sxth	r0, r3
 801e9fe:	4288      	cmp	r0, r1
 801ea00:	dd13      	ble.n	801ea2a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801ea02:	1a9b      	subs	r3, r3, r2
 801ea04:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ea08:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801ea0c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ea10:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ea14:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ea18:	9600      	str	r6, [sp, #0]
 801ea1a:	4643      	mov	r3, r8
 801ea1c:	aa02      	add	r2, sp, #8
 801ea1e:	4649      	mov	r1, r9
 801ea20:	4628      	mov	r0, r5
 801ea22:	f8ad 701a 	strh.w	r7, [sp, #26]
 801ea26:	f7ff fd67 	bl	801e4f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ea2a:	88e2      	ldrh	r2, [r4, #6]
 801ea2c:	8863      	ldrh	r3, [r4, #2]
 801ea2e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ea32:	4413      	add	r3, r2
 801ea34:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ea38:	440a      	add	r2, r1
 801ea3a:	b29b      	uxth	r3, r3
 801ea3c:	b292      	uxth	r2, r2
 801ea3e:	b211      	sxth	r1, r2
 801ea40:	b218      	sxth	r0, r3
 801ea42:	4288      	cmp	r0, r1
 801ea44:	f77f aec8 	ble.w	801e7d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea48:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ea4c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ea50:	f8ad 7018 	strh.w	r7, [sp, #24]
 801ea54:	1a9b      	subs	r3, r3, r2
 801ea56:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ea5a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ea5e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ea62:	9600      	str	r6, [sp, #0]
 801ea64:	4643      	mov	r3, r8
 801ea66:	e779      	b.n	801e95c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801ea68:	20012da4 	.word	0x20012da4

0801ea6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801ea6c:	b180      	cbz	r0, 801ea90 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801ea6e:	2903      	cmp	r1, #3
 801ea70:	d81c      	bhi.n	801eaac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ea72:	e8df f001 	tbb	[pc, r1]
 801ea76:	1d02      	.short	0x1d02
 801ea78:	1f08      	.short	0x1f08
 801ea7a:	4b10      	ldr	r3, [pc, #64]	; (801eabc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ea7c:	8818      	ldrh	r0, [r3, #0]
 801ea7e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ea82:	4240      	negs	r0, r0
 801ea84:	4770      	bx	lr
 801ea86:	4b0d      	ldr	r3, [pc, #52]	; (801eabc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ea88:	8818      	ldrh	r0, [r3, #0]
 801ea8a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ea8e:	4770      	bx	lr
 801ea90:	2903      	cmp	r1, #3
 801ea92:	d80b      	bhi.n	801eaac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ea94:	a301      	add	r3, pc, #4	; (adr r3, 801ea9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801ea96:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ea9a:	bf00      	nop
 801ea9c:	0801eab1 	.word	0x0801eab1
 801eaa0:	0801ea87 	.word	0x0801ea87
 801eaa4:	0801eab5 	.word	0x0801eab5
 801eaa8:	0801ea7b 	.word	0x0801ea7b
 801eaac:	2000      	movs	r0, #0
 801eaae:	4770      	bx	lr
 801eab0:	2001      	movs	r0, #1
 801eab2:	4770      	bx	lr
 801eab4:	f04f 30ff 	mov.w	r0, #4294967295
 801eab8:	4770      	bx	lr
 801eaba:	bf00      	nop
 801eabc:	20012d9e 	.word	0x20012d9e

0801eac0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801eac0:	b180      	cbz	r0, 801eae4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801eac2:	2903      	cmp	r1, #3
 801eac4:	d81c      	bhi.n	801eb00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801eac6:	e8df f001 	tbb	[pc, r1]
 801eaca:	021d      	.short	0x021d
 801eacc:	071f      	.short	0x071f
 801eace:	4b10      	ldr	r3, [pc, #64]	; (801eb10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ead0:	8818      	ldrh	r0, [r3, #0]
 801ead2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ead6:	4770      	bx	lr
 801ead8:	4b0d      	ldr	r3, [pc, #52]	; (801eb10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801eada:	8818      	ldrh	r0, [r3, #0]
 801eadc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801eae0:	4240      	negs	r0, r0
 801eae2:	4770      	bx	lr
 801eae4:	2903      	cmp	r1, #3
 801eae6:	d80b      	bhi.n	801eb00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801eae8:	a301      	add	r3, pc, #4	; (adr r3, 801eaf0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801eaea:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801eaee:	bf00      	nop
 801eaf0:	0801eacf 	.word	0x0801eacf
 801eaf4:	0801eb09 	.word	0x0801eb09
 801eaf8:	0801ead9 	.word	0x0801ead9
 801eafc:	0801eb05 	.word	0x0801eb05
 801eb00:	2000      	movs	r0, #0
 801eb02:	4770      	bx	lr
 801eb04:	2001      	movs	r0, #1
 801eb06:	4770      	bx	lr
 801eb08:	f04f 30ff 	mov.w	r0, #4294967295
 801eb0c:	4770      	bx	lr
 801eb0e:	bf00      	nop
 801eb10:	20012d9e 	.word	0x20012d9e

0801eb14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801eb14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb18:	b099      	sub	sp, #100	; 0x64
 801eb1a:	910b      	str	r1, [sp, #44]	; 0x2c
 801eb1c:	a914      	add	r1, sp, #80	; 0x50
 801eb1e:	e881 000c 	stmia.w	r1, {r2, r3}
 801eb22:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801eb26:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801eb2a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801eb2e:	9309      	str	r3, [sp, #36]	; 0x24
 801eb30:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801eb34:	9310      	str	r3, [sp, #64]	; 0x40
 801eb36:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801eb3a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801eb3e:	930c      	str	r3, [sp, #48]	; 0x30
 801eb40:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801eb44:	798f      	ldrb	r7, [r1, #6]
 801eb46:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801eb4a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801eb4e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801eb52:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801eb56:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801eb5a:	431f      	orrs	r7, r3
 801eb5c:	f000 8195 	beq.w	801ee8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eb60:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801eb64:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801eb68:	f891 9007 	ldrb.w	r9, [r1, #7]
 801eb6c:	ea59 0903 	orrs.w	r9, r9, r3
 801eb70:	f000 818b 	beq.w	801ee8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eb74:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801eb78:	b29b      	uxth	r3, r3
 801eb7a:	2d00      	cmp	r5, #0
 801eb7c:	f000 812e 	beq.w	801eddc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801eb80:	1aed      	subs	r5, r5, r3
 801eb82:	b2ad      	uxth	r5, r5
 801eb84:	042b      	lsls	r3, r5, #16
 801eb86:	d502      	bpl.n	801eb8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801eb88:	1b64      	subs	r4, r4, r5
 801eb8a:	b224      	sxth	r4, r4
 801eb8c:	2500      	movs	r5, #0
 801eb8e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801eb92:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801eb96:	428c      	cmp	r4, r1
 801eb98:	b28b      	uxth	r3, r1
 801eb9a:	bfbf      	itttt	lt
 801eb9c:	18ed      	addlt	r5, r5, r3
 801eb9e:	1b2c      	sublt	r4, r5, r4
 801eba0:	b2a5      	uxthlt	r5, r4
 801eba2:	460c      	movlt	r4, r1
 801eba4:	8891      	ldrh	r1, [r2, #4]
 801eba6:	440b      	add	r3, r1
 801eba8:	b21b      	sxth	r3, r3
 801ebaa:	930f      	str	r3, [sp, #60]	; 0x3c
 801ebac:	88d3      	ldrh	r3, [r2, #6]
 801ebae:	8852      	ldrh	r2, [r2, #2]
 801ebb0:	4413      	add	r3, r2
 801ebb2:	b21b      	sxth	r3, r3
 801ebb4:	930d      	str	r3, [sp, #52]	; 0x34
 801ebb6:	4bbe      	ldr	r3, [pc, #760]	; (801eeb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801ebb8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ebba:	f893 b000 	ldrb.w	fp, [r3]
 801ebbe:	f10b 3cff 	add.w	ip, fp, #4294967295
 801ebc2:	f1dc 0300 	rsbs	r3, ip, #0
 801ebc6:	eb43 030c 	adc.w	r3, r3, ip
 801ebca:	930e      	str	r3, [sp, #56]	; 0x38
 801ebcc:	4621      	mov	r1, r4
 801ebce:	4653      	mov	r3, sl
 801ebd0:	a814      	add	r0, sp, #80	; 0x50
 801ebd2:	f7f6 fcce 	bl	8015572 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801ebd6:	4621      	mov	r1, r4
 801ebd8:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ebdc:	4653      	mov	r3, sl
 801ebde:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ebe0:	a814      	add	r0, sp, #80	; 0x50
 801ebe2:	f7f6 fce3 	bl	80155ac <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801ebe6:	a918      	add	r1, sp, #96	; 0x60
 801ebe8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801ebec:	a817      	add	r0, sp, #92	; 0x5c
 801ebee:	f7f6 fe09 	bl	8015804 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801ebf2:	f1ba 0f00 	cmp.w	sl, #0
 801ebf6:	f040 80f4 	bne.w	801ede2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801ebfa:	f1bb 0f01 	cmp.w	fp, #1
 801ebfe:	f040 80f8 	bne.w	801edf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801ec02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ec04:	2b00      	cmp	r3, #0
 801ec06:	f040 8145 	bne.w	801ee94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801ec0a:	b2ba      	uxth	r2, r7
 801ec0c:	b905      	cbnz	r5, 801ec10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801ec0e:	b16e      	cbz	r6, 801ec2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801ec10:	fb06 5302 	mla	r3, r6, r2, r5
 801ec14:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801ec16:	fb08 f303 	mul.w	r3, r8, r3
 801ec1a:	4631      	mov	r1, r6
 801ec1c:	f003 0607 	and.w	r6, r3, #7
 801ec20:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801ec24:	9328      	str	r3, [sp, #160]	; 0xa0
 801ec26:	eba9 0301 	sub.w	r3, r9, r1
 801ec2a:	930a      	str	r3, [sp, #40]	; 0x28
 801ec2c:	4651      	mov	r1, sl
 801ec2e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ec30:	f7ff ff1c 	bl	801ea6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801ec34:	4681      	mov	r9, r0
 801ec36:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ec38:	f7ff ff42 	bl	801eac0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801ec3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ec3e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ec40:	eba3 0a01 	sub.w	sl, r3, r1
 801ec44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec46:	459a      	cmp	sl, r3
 801ec48:	bfa8      	it	ge
 801ec4a:	469a      	movge	sl, r3
 801ec4c:	f1ba 0f00 	cmp.w	sl, #0
 801ec50:	4683      	mov	fp, r0
 801ec52:	f340 811a 	ble.w	801ee8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ec56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ec58:	1b64      	subs	r4, r4, r5
 801ec5a:	1b1c      	subs	r4, r3, r4
 801ec5c:	42bc      	cmp	r4, r7
 801ec5e:	bfd4      	ite	le
 801ec60:	ebc5 0504 	rsble	r5, r5, r4
 801ec64:	ebc5 0507 	rsbgt	r5, r5, r7
 801ec68:	2d00      	cmp	r5, #0
 801ec6a:	f340 810e 	ble.w	801ee8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ec6e:	1b52      	subs	r2, r2, r5
 801ec70:	fb08 f302 	mul.w	r3, r8, r2
 801ec74:	930f      	str	r3, [sp, #60]	; 0x3c
 801ec76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ec78:	2b00      	cmp	r3, #0
 801ec7a:	f040 8116 	bne.w	801eeaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ec7e:	4b8d      	ldr	r3, [pc, #564]	; (801eeb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801ec80:	6818      	ldr	r0, [r3, #0]
 801ec82:	6803      	ldr	r3, [r0, #0]
 801ec84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ec86:	4798      	blx	r3
 801ec88:	2301      	movs	r3, #1
 801ec8a:	fa03 f308 	lsl.w	r3, r3, r8
 801ec8e:	4a8a      	ldr	r2, [pc, #552]	; (801eeb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801ec90:	3b01      	subs	r3, #1
 801ec92:	b2db      	uxtb	r3, r3
 801ec94:	8811      	ldrh	r1, [r2, #0]
 801ec96:	930e      	str	r3, [sp, #56]	; 0x38
 801ec98:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801ec9c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801eca0:	fb01 2303 	mla	r3, r1, r3, r2
 801eca4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801eca8:	930a      	str	r3, [sp, #40]	; 0x28
 801ecaa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ecac:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801ecb0:	9313      	str	r3, [sp, #76]	; 0x4c
 801ecb2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ecb4:	0a19      	lsrs	r1, r3, #8
 801ecb6:	b2cb      	uxtb	r3, r1
 801ecb8:	9312      	str	r3, [sp, #72]	; 0x48
 801ecba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ecbc:	b2db      	uxtb	r3, r3
 801ecbe:	9311      	str	r3, [sp, #68]	; 0x44
 801ecc0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ecc2:	095a      	lsrs	r2, r3, #5
 801ecc4:	4b7d      	ldr	r3, [pc, #500]	; (801eebc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ecc6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ecca:	400b      	ands	r3, r1
 801eccc:	4313      	orrs	r3, r2
 801ecce:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ecd0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ecd4:	4313      	orrs	r3, r2
 801ecd6:	b29b      	uxth	r3, r3
 801ecd8:	9310      	str	r3, [sp, #64]	; 0x40
 801ecda:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ecdc:	781a      	ldrb	r2, [r3, #0]
 801ecde:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801ece2:	4132      	asrs	r2, r6
 801ece4:	fb05 b919 	mls	r9, r5, r9, fp
 801ece8:	fb03 fb05 	mul.w	fp, r3, r5
 801ecec:	b2d2      	uxtb	r2, r2
 801ecee:	930d      	str	r3, [sp, #52]	; 0x34
 801ecf0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801ecf4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801ecf8:	f0c0 80f5 	bcc.w	801eee6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801ecfc:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801ed00:	46ae      	mov	lr, r5
 801ed02:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801ed06:	f0c0 80dd 	bcc.w	801eec4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801ed0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ed0c:	4013      	ands	r3, r2
 801ed0e:	d055      	beq.n	801edbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801ed10:	20ff      	movs	r0, #255	; 0xff
 801ed12:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ed14:	fb90 f1f1 	sdiv	r1, r0, r1
 801ed18:	434b      	muls	r3, r1
 801ed1a:	2bfe      	cmp	r3, #254	; 0xfe
 801ed1c:	dd03      	ble.n	801ed26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801ed1e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ed20:	4281      	cmp	r1, r0
 801ed22:	f000 80cd 	beq.w	801eec0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801ed26:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ed28:	f8bc 4000 	ldrh.w	r4, [ip]
 801ed2c:	fb11 f303 	smulbb	r3, r1, r3
 801ed30:	b29b      	uxth	r3, r3
 801ed32:	1c59      	adds	r1, r3, #1
 801ed34:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ed38:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ed3c:	b29f      	uxth	r7, r3
 801ed3e:	43db      	mvns	r3, r3
 801ed40:	b2db      	uxtb	r3, r3
 801ed42:	9309      	str	r3, [sp, #36]	; 0x24
 801ed44:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ed46:	1220      	asrs	r0, r4, #8
 801ed48:	fb13 f907 	smulbb	r9, r3, r7
 801ed4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ed50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed52:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801ed56:	fb00 9003 	mla	r0, r0, r3, r9
 801ed5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ed5c:	10e1      	asrs	r1, r4, #3
 801ed5e:	fb13 f907 	smulbb	r9, r3, r7
 801ed62:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ed66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed68:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ed6c:	fb01 9103 	mla	r1, r1, r3, r9
 801ed70:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ed72:	00e4      	lsls	r4, r4, #3
 801ed74:	fb13 f707 	smulbb	r7, r3, r7
 801ed78:	b2e4      	uxtb	r4, r4
 801ed7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed7c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ed80:	fb04 7403 	mla	r4, r4, r3, r7
 801ed84:	b280      	uxth	r0, r0
 801ed86:	b2a4      	uxth	r4, r4
 801ed88:	1c43      	adds	r3, r0, #1
 801ed8a:	f104 0901 	add.w	r9, r4, #1
 801ed8e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ed92:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801ed96:	b289      	uxth	r1, r1
 801ed98:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801ed9c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801eda0:	ea49 0000 	orr.w	r0, r9, r0
 801eda4:	f101 0901 	add.w	r9, r1, #1
 801eda8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801edac:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801edb0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801edb4:	ea40 0009 	orr.w	r0, r0, r9
 801edb8:	f8ac 0000 	strh.w	r0, [ip]
 801edbc:	4446      	add	r6, r8
 801edbe:	b2b6      	uxth	r6, r6
 801edc0:	2e07      	cmp	r6, #7
 801edc2:	bf81      	itttt	hi
 801edc4:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801edc6:	785a      	ldrbhi	r2, [r3, #1]
 801edc8:	3301      	addhi	r3, #1
 801edca:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801edcc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801edce:	bf9a      	itte	ls
 801edd0:	fa42 f208 	asrls.w	r2, r2, r8
 801edd4:	b2d2      	uxtbls	r2, r2
 801edd6:	2600      	movhi	r6, #0
 801edd8:	449c      	add	ip, r3
 801edda:	e792      	b.n	801ed02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801eddc:	441c      	add	r4, r3
 801edde:	b224      	sxth	r4, r4
 801ede0:	e6d5      	b.n	801eb8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ede2:	f1ba 0f01 	cmp.w	sl, #1
 801ede6:	f47f af0c 	bne.w	801ec02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801edea:	f1bb 0f01 	cmp.w	fp, #1
 801edee:	f47f af08 	bne.w	801ec02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801edf2:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801eeb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801edf6:	f8db 0000 	ldr.w	r0, [fp]
 801edfa:	6803      	ldr	r3, [r0, #0]
 801edfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801edfe:	4798      	blx	r3
 801ee00:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801ee04:	465a      	mov	r2, fp
 801ee06:	d006      	beq.n	801ee16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ee08:	f1b8 0f04 	cmp.w	r8, #4
 801ee0c:	d140      	bne.n	801ee90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ee0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ee10:	3300      	adds	r3, #0
 801ee12:	bf18      	it	ne
 801ee14:	2301      	movne	r3, #1
 801ee16:	0580      	lsls	r0, r0, #22
 801ee18:	d56e      	bpl.n	801eef8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ee1a:	f1b8 0f08 	cmp.w	r8, #8
 801ee1e:	d16b      	bne.n	801eef8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ee20:	2b00      	cmp	r3, #0
 801ee22:	bf0c      	ite	eq
 801ee24:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801ee28:	f44f 7180 	movne.w	r1, #256	; 0x100
 801ee2c:	2d00      	cmp	r5, #0
 801ee2e:	f47f aee8 	bne.w	801ec02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ee32:	2e00      	cmp	r6, #0
 801ee34:	f47f aee5 	bne.w	801ec02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ee38:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ee3a:	19e3      	adds	r3, r4, r7
 801ee3c:	4283      	cmp	r3, r0
 801ee3e:	f73f aee0 	bgt.w	801ec02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ee42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee44:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ee46:	444b      	add	r3, r9
 801ee48:	4283      	cmp	r3, r0
 801ee4a:	f73f aeda 	bgt.w	801ec02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ee4e:	6810      	ldr	r0, [r2, #0]
 801ee50:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801ee54:	6804      	ldr	r4, [r0, #0]
 801ee56:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ee5a:	b2bf      	uxth	r7, r7
 801ee5c:	f1b8 0f08 	cmp.w	r8, #8
 801ee60:	f04f 0500 	mov.w	r5, #0
 801ee64:	bf18      	it	ne
 801ee66:	3701      	addne	r7, #1
 801ee68:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ee6c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ee6e:	9104      	str	r1, [sp, #16]
 801ee70:	bf18      	it	ne
 801ee72:	f027 0701 	bicne.w	r7, r7, #1
 801ee76:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ee78:	bf18      	it	ne
 801ee7a:	b2bf      	uxthne	r7, r7
 801ee7c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801ee80:	e9cd 7900 	strd	r7, r9, [sp]
 801ee84:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ee86:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ee88:	47a0      	blx	r4
 801ee8a:	b019      	add	sp, #100	; 0x64
 801ee8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee90:	2300      	movs	r3, #0
 801ee92:	e7c0      	b.n	801ee16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ee94:	2208      	movs	r2, #8
 801ee96:	fb92 f3f8 	sdiv	r3, r2, r8
 801ee9a:	1e5a      	subs	r2, r3, #1
 801ee9c:	443a      	add	r2, r7
 801ee9e:	fb92 f2f3 	sdiv	r2, r2, r3
 801eea2:	fb12 f203 	smulbb	r2, r2, r3
 801eea6:	b292      	uxth	r2, r2
 801eea8:	e6b0      	b.n	801ec0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801eeaa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801eeac:	e6ec      	b.n	801ec88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801eeae:	bf00      	nop
 801eeb0:	20012d9c 	.word	0x20012d9c
 801eeb4:	20012da4 	.word	0x20012da4
 801eeb8:	20012d9e 	.word	0x20012d9e
 801eebc:	00fff800 	.word	0x00fff800
 801eec0:	9810      	ldr	r0, [sp, #64]	; 0x40
 801eec2:	e779      	b.n	801edb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801eec4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eec6:	b153      	cbz	r3, 801eede <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801eec8:	441e      	add	r6, r3
 801eeca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801eecc:	b2b6      	uxth	r6, r6
 801eece:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801eed2:	f006 0607 	and.w	r6, r6, #7
 801eed6:	781a      	ldrb	r2, [r3, #0]
 801eed8:	9328      	str	r3, [sp, #160]	; 0xa0
 801eeda:	4132      	asrs	r2, r6
 801eedc:	b2d2      	uxtb	r2, r2
 801eede:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eee0:	445b      	add	r3, fp
 801eee2:	930a      	str	r3, [sp, #40]	; 0x28
 801eee4:	e706      	b.n	801ecf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801eee6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eee8:	2b00      	cmp	r3, #0
 801eeea:	d1ce      	bne.n	801ee8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eeec:	4b05      	ldr	r3, [pc, #20]	; (801ef04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801eeee:	6818      	ldr	r0, [r3, #0]
 801eef0:	6803      	ldr	r3, [r0, #0]
 801eef2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801eef4:	4798      	blx	r3
 801eef6:	e7c8      	b.n	801ee8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eef8:	2b00      	cmp	r3, #0
 801eefa:	f43f ae82 	beq.w	801ec02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801eefe:	f44f 7180 	mov.w	r1, #256	; 0x100
 801ef02:	e793      	b.n	801ee2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ef04:	20012da4 	.word	0x20012da4

0801ef08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801ef08:	b538      	push	{r3, r4, r5, lr}
 801ef0a:	4c15      	ldr	r4, [pc, #84]	; (801ef60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801ef0c:	7823      	ldrb	r3, [r4, #0]
 801ef0e:	f3bf 8f5b 	dmb	ish
 801ef12:	07da      	lsls	r2, r3, #31
 801ef14:	4605      	mov	r5, r0
 801ef16:	d40b      	bmi.n	801ef30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ef18:	4620      	mov	r0, r4
 801ef1a:	f00a fee2 	bl	8029ce2 <__cxa_guard_acquire>
 801ef1e:	b138      	cbz	r0, 801ef30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ef20:	4620      	mov	r0, r4
 801ef22:	f00a feea 	bl	8029cfa <__cxa_guard_release>
 801ef26:	4a0f      	ldr	r2, [pc, #60]	; (801ef64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ef28:	490f      	ldr	r1, [pc, #60]	; (801ef68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801ef2a:	4810      	ldr	r0, [pc, #64]	; (801ef6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801ef2c:	f00a fed2 	bl	8029cd4 <__aeabi_atexit>
 801ef30:	4c0f      	ldr	r4, [pc, #60]	; (801ef70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801ef32:	7823      	ldrb	r3, [r4, #0]
 801ef34:	f3bf 8f5b 	dmb	ish
 801ef38:	07db      	lsls	r3, r3, #31
 801ef3a:	d40b      	bmi.n	801ef54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801ef3c:	4620      	mov	r0, r4
 801ef3e:	f00a fed0 	bl	8029ce2 <__cxa_guard_acquire>
 801ef42:	b138      	cbz	r0, 801ef54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801ef44:	4620      	mov	r0, r4
 801ef46:	f00a fed8 	bl	8029cfa <__cxa_guard_release>
 801ef4a:	4a06      	ldr	r2, [pc, #24]	; (801ef64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ef4c:	4909      	ldr	r1, [pc, #36]	; (801ef74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801ef4e:	480a      	ldr	r0, [pc, #40]	; (801ef78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801ef50:	f00a fec0 	bl	8029cd4 <__aeabi_atexit>
 801ef54:	4b05      	ldr	r3, [pc, #20]	; (801ef6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801ef56:	612b      	str	r3, [r5, #16]
 801ef58:	4b07      	ldr	r3, [pc, #28]	; (801ef78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801ef5a:	616b      	str	r3, [r5, #20]
 801ef5c:	bd38      	pop	{r3, r4, r5, pc}
 801ef5e:	bf00      	nop
 801ef60:	20012e84 	.word	0x20012e84
 801ef64:	20000000 	.word	0x20000000
 801ef68:	0801bd0b 	.word	0x0801bd0b
 801ef6c:	200000d4 	.word	0x200000d4
 801ef70:	20012e88 	.word	0x20012e88
 801ef74:	0801bd09 	.word	0x0801bd09
 801ef78:	200000d8 	.word	0x200000d8

0801ef7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801ef7c:	b538      	push	{r3, r4, r5, lr}
 801ef7e:	4c15      	ldr	r4, [pc, #84]	; (801efd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801ef80:	7823      	ldrb	r3, [r4, #0]
 801ef82:	f3bf 8f5b 	dmb	ish
 801ef86:	07da      	lsls	r2, r3, #31
 801ef88:	4605      	mov	r5, r0
 801ef8a:	d40b      	bmi.n	801efa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ef8c:	4620      	mov	r0, r4
 801ef8e:	f00a fea8 	bl	8029ce2 <__cxa_guard_acquire>
 801ef92:	b138      	cbz	r0, 801efa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ef94:	4620      	mov	r0, r4
 801ef96:	f00a feb0 	bl	8029cfa <__cxa_guard_release>
 801ef9a:	4a0f      	ldr	r2, [pc, #60]	; (801efd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801ef9c:	490f      	ldr	r1, [pc, #60]	; (801efdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801ef9e:	4810      	ldr	r0, [pc, #64]	; (801efe0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801efa0:	f00a fe98 	bl	8029cd4 <__aeabi_atexit>
 801efa4:	4c0f      	ldr	r4, [pc, #60]	; (801efe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801efa6:	7823      	ldrb	r3, [r4, #0]
 801efa8:	f3bf 8f5b 	dmb	ish
 801efac:	07db      	lsls	r3, r3, #31
 801efae:	d40b      	bmi.n	801efc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801efb0:	4620      	mov	r0, r4
 801efb2:	f00a fe96 	bl	8029ce2 <__cxa_guard_acquire>
 801efb6:	b138      	cbz	r0, 801efc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801efb8:	4620      	mov	r0, r4
 801efba:	f00a fe9e 	bl	8029cfa <__cxa_guard_release>
 801efbe:	4a06      	ldr	r2, [pc, #24]	; (801efd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801efc0:	4909      	ldr	r1, [pc, #36]	; (801efe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801efc2:	480a      	ldr	r0, [pc, #40]	; (801efec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801efc4:	f00a fe86 	bl	8029cd4 <__aeabi_atexit>
 801efc8:	4b05      	ldr	r3, [pc, #20]	; (801efe0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801efca:	60ab      	str	r3, [r5, #8]
 801efcc:	4b07      	ldr	r3, [pc, #28]	; (801efec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801efce:	60eb      	str	r3, [r5, #12]
 801efd0:	bd38      	pop	{r3, r4, r5, pc}
 801efd2:	bf00      	nop
 801efd4:	20012e5c 	.word	0x20012e5c
 801efd8:	20000000 	.word	0x20000000
 801efdc:	0801bd0f 	.word	0x0801bd0f
 801efe0:	200000ac 	.word	0x200000ac
 801efe4:	20012e60 	.word	0x20012e60
 801efe8:	0801bd0d 	.word	0x0801bd0d
 801efec:	200000b0 	.word	0x200000b0

0801eff0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801eff0:	b510      	push	{r4, lr}
 801eff2:	4604      	mov	r4, r0
 801eff4:	f7ff ff88 	bl	801ef08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801eff8:	4620      	mov	r0, r4
 801effa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801effe:	f7ff bfbd 	b.w	801ef7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f004 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f004:	b538      	push	{r3, r4, r5, lr}
 801f006:	4c15      	ldr	r4, [pc, #84]	; (801f05c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f008:	7823      	ldrb	r3, [r4, #0]
 801f00a:	f3bf 8f5b 	dmb	ish
 801f00e:	07da      	lsls	r2, r3, #31
 801f010:	4605      	mov	r5, r0
 801f012:	d40b      	bmi.n	801f02c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f014:	4620      	mov	r0, r4
 801f016:	f00a fe64 	bl	8029ce2 <__cxa_guard_acquire>
 801f01a:	b138      	cbz	r0, 801f02c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f01c:	4620      	mov	r0, r4
 801f01e:	f00a fe6c 	bl	8029cfa <__cxa_guard_release>
 801f022:	4a0f      	ldr	r2, [pc, #60]	; (801f060 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f024:	490f      	ldr	r1, [pc, #60]	; (801f064 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f026:	4810      	ldr	r0, [pc, #64]	; (801f068 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f028:	f00a fe54 	bl	8029cd4 <__aeabi_atexit>
 801f02c:	4c0f      	ldr	r4, [pc, #60]	; (801f06c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f02e:	7823      	ldrb	r3, [r4, #0]
 801f030:	f3bf 8f5b 	dmb	ish
 801f034:	07db      	lsls	r3, r3, #31
 801f036:	d40b      	bmi.n	801f050 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f038:	4620      	mov	r0, r4
 801f03a:	f00a fe52 	bl	8029ce2 <__cxa_guard_acquire>
 801f03e:	b138      	cbz	r0, 801f050 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f040:	4620      	mov	r0, r4
 801f042:	f00a fe5a 	bl	8029cfa <__cxa_guard_release>
 801f046:	4a06      	ldr	r2, [pc, #24]	; (801f060 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f048:	4909      	ldr	r1, [pc, #36]	; (801f070 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f04a:	480a      	ldr	r0, [pc, #40]	; (801f074 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f04c:	f00a fe42 	bl	8029cd4 <__aeabi_atexit>
 801f050:	4b05      	ldr	r3, [pc, #20]	; (801f068 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f052:	622b      	str	r3, [r5, #32]
 801f054:	4b07      	ldr	r3, [pc, #28]	; (801f074 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f056:	626b      	str	r3, [r5, #36]	; 0x24
 801f058:	bd38      	pop	{r3, r4, r5, pc}
 801f05a:	bf00      	nop
 801f05c:	20012e8c 	.word	0x20012e8c
 801f060:	20000000 	.word	0x20000000
 801f064:	0801bd03 	.word	0x0801bd03
 801f068:	200000dc 	.word	0x200000dc
 801f06c:	20012e90 	.word	0x20012e90
 801f070:	0801bd01 	.word	0x0801bd01
 801f074:	200000e0 	.word	0x200000e0

0801f078 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f078:	b538      	push	{r3, r4, r5, lr}
 801f07a:	4c15      	ldr	r4, [pc, #84]	; (801f0d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f07c:	7823      	ldrb	r3, [r4, #0]
 801f07e:	f3bf 8f5b 	dmb	ish
 801f082:	07da      	lsls	r2, r3, #31
 801f084:	4605      	mov	r5, r0
 801f086:	d40b      	bmi.n	801f0a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f088:	4620      	mov	r0, r4
 801f08a:	f00a fe2a 	bl	8029ce2 <__cxa_guard_acquire>
 801f08e:	b138      	cbz	r0, 801f0a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f090:	4620      	mov	r0, r4
 801f092:	f00a fe32 	bl	8029cfa <__cxa_guard_release>
 801f096:	4a0f      	ldr	r2, [pc, #60]	; (801f0d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f098:	490f      	ldr	r1, [pc, #60]	; (801f0d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f09a:	4810      	ldr	r0, [pc, #64]	; (801f0dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f09c:	f00a fe1a 	bl	8029cd4 <__aeabi_atexit>
 801f0a0:	4c0f      	ldr	r4, [pc, #60]	; (801f0e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f0a2:	7823      	ldrb	r3, [r4, #0]
 801f0a4:	f3bf 8f5b 	dmb	ish
 801f0a8:	07db      	lsls	r3, r3, #31
 801f0aa:	d40b      	bmi.n	801f0c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f0ac:	4620      	mov	r0, r4
 801f0ae:	f00a fe18 	bl	8029ce2 <__cxa_guard_acquire>
 801f0b2:	b138      	cbz	r0, 801f0c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f0b4:	4620      	mov	r0, r4
 801f0b6:	f00a fe20 	bl	8029cfa <__cxa_guard_release>
 801f0ba:	4a06      	ldr	r2, [pc, #24]	; (801f0d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f0bc:	4909      	ldr	r1, [pc, #36]	; (801f0e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f0be:	480a      	ldr	r0, [pc, #40]	; (801f0e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f0c0:	f00a fe08 	bl	8029cd4 <__aeabi_atexit>
 801f0c4:	4b05      	ldr	r3, [pc, #20]	; (801f0dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f0c6:	61ab      	str	r3, [r5, #24]
 801f0c8:	4b07      	ldr	r3, [pc, #28]	; (801f0e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f0ca:	61eb      	str	r3, [r5, #28]
 801f0cc:	bd38      	pop	{r3, r4, r5, pc}
 801f0ce:	bf00      	nop
 801f0d0:	20012e64 	.word	0x20012e64
 801f0d4:	20000000 	.word	0x20000000
 801f0d8:	0801bd07 	.word	0x0801bd07
 801f0dc:	200000b4 	.word	0x200000b4
 801f0e0:	20012e68 	.word	0x20012e68
 801f0e4:	0801bd05 	.word	0x0801bd05
 801f0e8:	200000b8 	.word	0x200000b8

0801f0ec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f0ec:	b510      	push	{r4, lr}
 801f0ee:	4604      	mov	r4, r0
 801f0f0:	f7ff ff88 	bl	801f004 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f0f4:	4620      	mov	r0, r4
 801f0f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f0fa:	f7ff bfbd 	b.w	801f078 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f100 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f100:	b538      	push	{r3, r4, r5, lr}
 801f102:	4c15      	ldr	r4, [pc, #84]	; (801f158 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f104:	7823      	ldrb	r3, [r4, #0]
 801f106:	f3bf 8f5b 	dmb	ish
 801f10a:	07da      	lsls	r2, r3, #31
 801f10c:	4605      	mov	r5, r0
 801f10e:	d40b      	bmi.n	801f128 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f110:	4620      	mov	r0, r4
 801f112:	f00a fde6 	bl	8029ce2 <__cxa_guard_acquire>
 801f116:	b138      	cbz	r0, 801f128 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f118:	4620      	mov	r0, r4
 801f11a:	f00a fdee 	bl	8029cfa <__cxa_guard_release>
 801f11e:	4a0f      	ldr	r2, [pc, #60]	; (801f15c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f120:	490f      	ldr	r1, [pc, #60]	; (801f160 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f122:	4810      	ldr	r0, [pc, #64]	; (801f164 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f124:	f00a fdd6 	bl	8029cd4 <__aeabi_atexit>
 801f128:	4c0f      	ldr	r4, [pc, #60]	; (801f168 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f12a:	7823      	ldrb	r3, [r4, #0]
 801f12c:	f3bf 8f5b 	dmb	ish
 801f130:	07db      	lsls	r3, r3, #31
 801f132:	d40b      	bmi.n	801f14c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f134:	4620      	mov	r0, r4
 801f136:	f00a fdd4 	bl	8029ce2 <__cxa_guard_acquire>
 801f13a:	b138      	cbz	r0, 801f14c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f13c:	4620      	mov	r0, r4
 801f13e:	f00a fddc 	bl	8029cfa <__cxa_guard_release>
 801f142:	4a06      	ldr	r2, [pc, #24]	; (801f15c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f144:	4909      	ldr	r1, [pc, #36]	; (801f16c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f146:	480a      	ldr	r0, [pc, #40]	; (801f170 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f148:	f00a fdc4 	bl	8029cd4 <__aeabi_atexit>
 801f14c:	4b05      	ldr	r3, [pc, #20]	; (801f164 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f14e:	632b      	str	r3, [r5, #48]	; 0x30
 801f150:	4b07      	ldr	r3, [pc, #28]	; (801f170 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f152:	636b      	str	r3, [r5, #52]	; 0x34
 801f154:	bd38      	pop	{r3, r4, r5, pc}
 801f156:	bf00      	nop
 801f158:	20012e9c 	.word	0x20012e9c
 801f15c:	20000000 	.word	0x20000000
 801f160:	0801bcfb 	.word	0x0801bcfb
 801f164:	200000ec 	.word	0x200000ec
 801f168:	20012ea0 	.word	0x20012ea0
 801f16c:	0801bcf9 	.word	0x0801bcf9
 801f170:	200000f0 	.word	0x200000f0

0801f174 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f174:	b538      	push	{r3, r4, r5, lr}
 801f176:	4c15      	ldr	r4, [pc, #84]	; (801f1cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f178:	7823      	ldrb	r3, [r4, #0]
 801f17a:	f3bf 8f5b 	dmb	ish
 801f17e:	07da      	lsls	r2, r3, #31
 801f180:	4605      	mov	r5, r0
 801f182:	d40b      	bmi.n	801f19c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f184:	4620      	mov	r0, r4
 801f186:	f00a fdac 	bl	8029ce2 <__cxa_guard_acquire>
 801f18a:	b138      	cbz	r0, 801f19c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f18c:	4620      	mov	r0, r4
 801f18e:	f00a fdb4 	bl	8029cfa <__cxa_guard_release>
 801f192:	4a0f      	ldr	r2, [pc, #60]	; (801f1d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f194:	490f      	ldr	r1, [pc, #60]	; (801f1d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f196:	4810      	ldr	r0, [pc, #64]	; (801f1d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f198:	f00a fd9c 	bl	8029cd4 <__aeabi_atexit>
 801f19c:	4c0f      	ldr	r4, [pc, #60]	; (801f1dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f19e:	7823      	ldrb	r3, [r4, #0]
 801f1a0:	f3bf 8f5b 	dmb	ish
 801f1a4:	07db      	lsls	r3, r3, #31
 801f1a6:	d40b      	bmi.n	801f1c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f1a8:	4620      	mov	r0, r4
 801f1aa:	f00a fd9a 	bl	8029ce2 <__cxa_guard_acquire>
 801f1ae:	b138      	cbz	r0, 801f1c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f1b0:	4620      	mov	r0, r4
 801f1b2:	f00a fda2 	bl	8029cfa <__cxa_guard_release>
 801f1b6:	4a06      	ldr	r2, [pc, #24]	; (801f1d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f1b8:	4909      	ldr	r1, [pc, #36]	; (801f1e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f1ba:	480a      	ldr	r0, [pc, #40]	; (801f1e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f1bc:	f00a fd8a 	bl	8029cd4 <__aeabi_atexit>
 801f1c0:	4b05      	ldr	r3, [pc, #20]	; (801f1d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f1c2:	62ab      	str	r3, [r5, #40]	; 0x28
 801f1c4:	4b07      	ldr	r3, [pc, #28]	; (801f1e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f1c6:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f1c8:	bd38      	pop	{r3, r4, r5, pc}
 801f1ca:	bf00      	nop
 801f1cc:	20012e6c 	.word	0x20012e6c
 801f1d0:	20000000 	.word	0x20000000
 801f1d4:	0801bcff 	.word	0x0801bcff
 801f1d8:	200000bc 	.word	0x200000bc
 801f1dc:	20012e70 	.word	0x20012e70
 801f1e0:	0801bcfd 	.word	0x0801bcfd
 801f1e4:	200000c0 	.word	0x200000c0

0801f1e8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f1e8:	b510      	push	{r4, lr}
 801f1ea:	4604      	mov	r4, r0
 801f1ec:	f7ff ff88 	bl	801f100 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f1f0:	4620      	mov	r0, r4
 801f1f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f1f6:	f7ff bfbd 	b.w	801f174 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f1fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f1fc:	b538      	push	{r3, r4, r5, lr}
 801f1fe:	4c15      	ldr	r4, [pc, #84]	; (801f254 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f200:	7823      	ldrb	r3, [r4, #0]
 801f202:	f3bf 8f5b 	dmb	ish
 801f206:	07da      	lsls	r2, r3, #31
 801f208:	4605      	mov	r5, r0
 801f20a:	d40b      	bmi.n	801f224 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f20c:	4620      	mov	r0, r4
 801f20e:	f00a fd68 	bl	8029ce2 <__cxa_guard_acquire>
 801f212:	b138      	cbz	r0, 801f224 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f214:	4620      	mov	r0, r4
 801f216:	f00a fd70 	bl	8029cfa <__cxa_guard_release>
 801f21a:	4a0f      	ldr	r2, [pc, #60]	; (801f258 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f21c:	490f      	ldr	r1, [pc, #60]	; (801f25c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f21e:	4810      	ldr	r0, [pc, #64]	; (801f260 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f220:	f00a fd58 	bl	8029cd4 <__aeabi_atexit>
 801f224:	4c0f      	ldr	r4, [pc, #60]	; (801f264 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f226:	7823      	ldrb	r3, [r4, #0]
 801f228:	f3bf 8f5b 	dmb	ish
 801f22c:	07db      	lsls	r3, r3, #31
 801f22e:	d40b      	bmi.n	801f248 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f230:	4620      	mov	r0, r4
 801f232:	f00a fd56 	bl	8029ce2 <__cxa_guard_acquire>
 801f236:	b138      	cbz	r0, 801f248 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f238:	4620      	mov	r0, r4
 801f23a:	f00a fd5e 	bl	8029cfa <__cxa_guard_release>
 801f23e:	4a06      	ldr	r2, [pc, #24]	; (801f258 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f240:	4909      	ldr	r1, [pc, #36]	; (801f268 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f242:	480a      	ldr	r0, [pc, #40]	; (801f26c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f244:	f00a fd46 	bl	8029cd4 <__aeabi_atexit>
 801f248:	4b05      	ldr	r3, [pc, #20]	; (801f260 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f24a:	652b      	str	r3, [r5, #80]	; 0x50
 801f24c:	4b07      	ldr	r3, [pc, #28]	; (801f26c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f24e:	656b      	str	r3, [r5, #84]	; 0x54
 801f250:	bd38      	pop	{r3, r4, r5, pc}
 801f252:	bf00      	nop
 801f254:	20012ea4 	.word	0x20012ea4
 801f258:	20000000 	.word	0x20000000
 801f25c:	0801bceb 	.word	0x0801bceb
 801f260:	200000f4 	.word	0x200000f4
 801f264:	20012ea8 	.word	0x20012ea8
 801f268:	0801bce9 	.word	0x0801bce9
 801f26c:	200000f8 	.word	0x200000f8

0801f270 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f270:	b538      	push	{r3, r4, r5, lr}
 801f272:	4c15      	ldr	r4, [pc, #84]	; (801f2c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f274:	7823      	ldrb	r3, [r4, #0]
 801f276:	f3bf 8f5b 	dmb	ish
 801f27a:	07da      	lsls	r2, r3, #31
 801f27c:	4605      	mov	r5, r0
 801f27e:	d40b      	bmi.n	801f298 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f280:	4620      	mov	r0, r4
 801f282:	f00a fd2e 	bl	8029ce2 <__cxa_guard_acquire>
 801f286:	b138      	cbz	r0, 801f298 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f288:	4620      	mov	r0, r4
 801f28a:	f00a fd36 	bl	8029cfa <__cxa_guard_release>
 801f28e:	4a0f      	ldr	r2, [pc, #60]	; (801f2cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f290:	490f      	ldr	r1, [pc, #60]	; (801f2d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f292:	4810      	ldr	r0, [pc, #64]	; (801f2d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f294:	f00a fd1e 	bl	8029cd4 <__aeabi_atexit>
 801f298:	4c0f      	ldr	r4, [pc, #60]	; (801f2d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f29a:	7823      	ldrb	r3, [r4, #0]
 801f29c:	f3bf 8f5b 	dmb	ish
 801f2a0:	07db      	lsls	r3, r3, #31
 801f2a2:	d40b      	bmi.n	801f2bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f2a4:	4620      	mov	r0, r4
 801f2a6:	f00a fd1c 	bl	8029ce2 <__cxa_guard_acquire>
 801f2aa:	b138      	cbz	r0, 801f2bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f2ac:	4620      	mov	r0, r4
 801f2ae:	f00a fd24 	bl	8029cfa <__cxa_guard_release>
 801f2b2:	4a06      	ldr	r2, [pc, #24]	; (801f2cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f2b4:	4909      	ldr	r1, [pc, #36]	; (801f2dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f2b6:	480a      	ldr	r0, [pc, #40]	; (801f2e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f2b8:	f00a fd0c 	bl	8029cd4 <__aeabi_atexit>
 801f2bc:	4b05      	ldr	r3, [pc, #20]	; (801f2d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f2be:	64ab      	str	r3, [r5, #72]	; 0x48
 801f2c0:	4b07      	ldr	r3, [pc, #28]	; (801f2e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f2c2:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f2c4:	bd38      	pop	{r3, r4, r5, pc}
 801f2c6:	bf00      	nop
 801f2c8:	20012eac 	.word	0x20012eac
 801f2cc:	20000000 	.word	0x20000000
 801f2d0:	0801bcef 	.word	0x0801bcef
 801f2d4:	200000fc 	.word	0x200000fc
 801f2d8:	20012eb0 	.word	0x20012eb0
 801f2dc:	0801bced 	.word	0x0801bced
 801f2e0:	20000100 	.word	0x20000100

0801f2e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f2e4:	b538      	push	{r3, r4, r5, lr}
 801f2e6:	4c15      	ldr	r4, [pc, #84]	; (801f33c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f2e8:	7823      	ldrb	r3, [r4, #0]
 801f2ea:	f3bf 8f5b 	dmb	ish
 801f2ee:	07da      	lsls	r2, r3, #31
 801f2f0:	4605      	mov	r5, r0
 801f2f2:	d40b      	bmi.n	801f30c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f2f4:	4620      	mov	r0, r4
 801f2f6:	f00a fcf4 	bl	8029ce2 <__cxa_guard_acquire>
 801f2fa:	b138      	cbz	r0, 801f30c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f2fc:	4620      	mov	r0, r4
 801f2fe:	f00a fcfc 	bl	8029cfa <__cxa_guard_release>
 801f302:	4a0f      	ldr	r2, [pc, #60]	; (801f340 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f304:	490f      	ldr	r1, [pc, #60]	; (801f344 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f306:	4810      	ldr	r0, [pc, #64]	; (801f348 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f308:	f00a fce4 	bl	8029cd4 <__aeabi_atexit>
 801f30c:	4c0f      	ldr	r4, [pc, #60]	; (801f34c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f30e:	7823      	ldrb	r3, [r4, #0]
 801f310:	f3bf 8f5b 	dmb	ish
 801f314:	07db      	lsls	r3, r3, #31
 801f316:	d40b      	bmi.n	801f330 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f318:	4620      	mov	r0, r4
 801f31a:	f00a fce2 	bl	8029ce2 <__cxa_guard_acquire>
 801f31e:	b138      	cbz	r0, 801f330 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f320:	4620      	mov	r0, r4
 801f322:	f00a fcea 	bl	8029cfa <__cxa_guard_release>
 801f326:	4a06      	ldr	r2, [pc, #24]	; (801f340 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f328:	4909      	ldr	r1, [pc, #36]	; (801f350 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f32a:	480a      	ldr	r0, [pc, #40]	; (801f354 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f32c:	f00a fcd2 	bl	8029cd4 <__aeabi_atexit>
 801f330:	4b05      	ldr	r3, [pc, #20]	; (801f348 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f332:	642b      	str	r3, [r5, #64]	; 0x40
 801f334:	4b07      	ldr	r3, [pc, #28]	; (801f354 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f336:	646b      	str	r3, [r5, #68]	; 0x44
 801f338:	bd38      	pop	{r3, r4, r5, pc}
 801f33a:	bf00      	nop
 801f33c:	20012e74 	.word	0x20012e74
 801f340:	20000000 	.word	0x20000000
 801f344:	0801bcf3 	.word	0x0801bcf3
 801f348:	200000c4 	.word	0x200000c4
 801f34c:	20012e78 	.word	0x20012e78
 801f350:	0801bcf1 	.word	0x0801bcf1
 801f354:	200000c8 	.word	0x200000c8

0801f358 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f358:	b538      	push	{r3, r4, r5, lr}
 801f35a:	4c15      	ldr	r4, [pc, #84]	; (801f3b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f35c:	7823      	ldrb	r3, [r4, #0]
 801f35e:	f3bf 8f5b 	dmb	ish
 801f362:	07da      	lsls	r2, r3, #31
 801f364:	4605      	mov	r5, r0
 801f366:	d40b      	bmi.n	801f380 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f368:	4620      	mov	r0, r4
 801f36a:	f00a fcba 	bl	8029ce2 <__cxa_guard_acquire>
 801f36e:	b138      	cbz	r0, 801f380 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f370:	4620      	mov	r0, r4
 801f372:	f00a fcc2 	bl	8029cfa <__cxa_guard_release>
 801f376:	4a0f      	ldr	r2, [pc, #60]	; (801f3b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f378:	490f      	ldr	r1, [pc, #60]	; (801f3b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f37a:	4810      	ldr	r0, [pc, #64]	; (801f3bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f37c:	f00a fcaa 	bl	8029cd4 <__aeabi_atexit>
 801f380:	4c0f      	ldr	r4, [pc, #60]	; (801f3c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f382:	7823      	ldrb	r3, [r4, #0]
 801f384:	f3bf 8f5b 	dmb	ish
 801f388:	07db      	lsls	r3, r3, #31
 801f38a:	d40b      	bmi.n	801f3a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f38c:	4620      	mov	r0, r4
 801f38e:	f00a fca8 	bl	8029ce2 <__cxa_guard_acquire>
 801f392:	b138      	cbz	r0, 801f3a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f394:	4620      	mov	r0, r4
 801f396:	f00a fcb0 	bl	8029cfa <__cxa_guard_release>
 801f39a:	4a06      	ldr	r2, [pc, #24]	; (801f3b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f39c:	4909      	ldr	r1, [pc, #36]	; (801f3c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f39e:	480a      	ldr	r0, [pc, #40]	; (801f3c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f3a0:	f00a fc98 	bl	8029cd4 <__aeabi_atexit>
 801f3a4:	4b05      	ldr	r3, [pc, #20]	; (801f3bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f3a6:	63ab      	str	r3, [r5, #56]	; 0x38
 801f3a8:	4b07      	ldr	r3, [pc, #28]	; (801f3c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f3aa:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f3ac:	bd38      	pop	{r3, r4, r5, pc}
 801f3ae:	bf00      	nop
 801f3b0:	20012e94 	.word	0x20012e94
 801f3b4:	20000000 	.word	0x20000000
 801f3b8:	0801bcf7 	.word	0x0801bcf7
 801f3bc:	200000e4 	.word	0x200000e4
 801f3c0:	20012e98 	.word	0x20012e98
 801f3c4:	0801bcf5 	.word	0x0801bcf5
 801f3c8:	200000e8 	.word	0x200000e8

0801f3cc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f3cc:	b510      	push	{r4, lr}
 801f3ce:	4604      	mov	r4, r0
 801f3d0:	f7ff ff14 	bl	801f1fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f3d4:	4620      	mov	r0, r4
 801f3d6:	f7ff ff85 	bl	801f2e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f3da:	4620      	mov	r0, r4
 801f3dc:	f7ff ff48 	bl	801f270 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f3e0:	4620      	mov	r0, r4
 801f3e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f3e6:	f7ff bfb7 	b.w	801f358 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f3ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f3ec:	b538      	push	{r3, r4, r5, lr}
 801f3ee:	4c15      	ldr	r4, [pc, #84]	; (801f444 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f3f0:	7823      	ldrb	r3, [r4, #0]
 801f3f2:	f3bf 8f5b 	dmb	ish
 801f3f6:	07da      	lsls	r2, r3, #31
 801f3f8:	4605      	mov	r5, r0
 801f3fa:	d40b      	bmi.n	801f414 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f3fc:	4620      	mov	r0, r4
 801f3fe:	f00a fc70 	bl	8029ce2 <__cxa_guard_acquire>
 801f402:	b138      	cbz	r0, 801f414 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f404:	4620      	mov	r0, r4
 801f406:	f00a fc78 	bl	8029cfa <__cxa_guard_release>
 801f40a:	4a0f      	ldr	r2, [pc, #60]	; (801f448 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f40c:	490f      	ldr	r1, [pc, #60]	; (801f44c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f40e:	4810      	ldr	r0, [pc, #64]	; (801f450 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f410:	f00a fc60 	bl	8029cd4 <__aeabi_atexit>
 801f414:	4c0f      	ldr	r4, [pc, #60]	; (801f454 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f416:	7823      	ldrb	r3, [r4, #0]
 801f418:	f3bf 8f5b 	dmb	ish
 801f41c:	07db      	lsls	r3, r3, #31
 801f41e:	d40b      	bmi.n	801f438 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f420:	4620      	mov	r0, r4
 801f422:	f00a fc5e 	bl	8029ce2 <__cxa_guard_acquire>
 801f426:	b138      	cbz	r0, 801f438 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f428:	4620      	mov	r0, r4
 801f42a:	f00a fc66 	bl	8029cfa <__cxa_guard_release>
 801f42e:	4a06      	ldr	r2, [pc, #24]	; (801f448 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f430:	4909      	ldr	r1, [pc, #36]	; (801f458 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f432:	480a      	ldr	r0, [pc, #40]	; (801f45c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f434:	f00a fc4e 	bl	8029cd4 <__aeabi_atexit>
 801f438:	4b05      	ldr	r3, [pc, #20]	; (801f450 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f43a:	662b      	str	r3, [r5, #96]	; 0x60
 801f43c:	4b07      	ldr	r3, [pc, #28]	; (801f45c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f43e:	666b      	str	r3, [r5, #100]	; 0x64
 801f440:	bd38      	pop	{r3, r4, r5, pc}
 801f442:	bf00      	nop
 801f444:	20012e7c 	.word	0x20012e7c
 801f448:	20000000 	.word	0x20000000
 801f44c:	0801bce3 	.word	0x0801bce3
 801f450:	200000cc 	.word	0x200000cc
 801f454:	20012e80 	.word	0x20012e80
 801f458:	0801bce1 	.word	0x0801bce1
 801f45c:	200000d0 	.word	0x200000d0

0801f460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f460:	b538      	push	{r3, r4, r5, lr}
 801f462:	4c15      	ldr	r4, [pc, #84]	; (801f4b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f464:	7823      	ldrb	r3, [r4, #0]
 801f466:	f3bf 8f5b 	dmb	ish
 801f46a:	07da      	lsls	r2, r3, #31
 801f46c:	4605      	mov	r5, r0
 801f46e:	d40b      	bmi.n	801f488 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f470:	4620      	mov	r0, r4
 801f472:	f00a fc36 	bl	8029ce2 <__cxa_guard_acquire>
 801f476:	b138      	cbz	r0, 801f488 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f478:	4620      	mov	r0, r4
 801f47a:	f00a fc3e 	bl	8029cfa <__cxa_guard_release>
 801f47e:	4a0f      	ldr	r2, [pc, #60]	; (801f4bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f480:	490f      	ldr	r1, [pc, #60]	; (801f4c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f482:	4810      	ldr	r0, [pc, #64]	; (801f4c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f484:	f00a fc26 	bl	8029cd4 <__aeabi_atexit>
 801f488:	4c0f      	ldr	r4, [pc, #60]	; (801f4c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f48a:	7823      	ldrb	r3, [r4, #0]
 801f48c:	f3bf 8f5b 	dmb	ish
 801f490:	07db      	lsls	r3, r3, #31
 801f492:	d40b      	bmi.n	801f4ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f494:	4620      	mov	r0, r4
 801f496:	f00a fc24 	bl	8029ce2 <__cxa_guard_acquire>
 801f49a:	b138      	cbz	r0, 801f4ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f49c:	4620      	mov	r0, r4
 801f49e:	f00a fc2c 	bl	8029cfa <__cxa_guard_release>
 801f4a2:	4a06      	ldr	r2, [pc, #24]	; (801f4bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f4a4:	4909      	ldr	r1, [pc, #36]	; (801f4cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f4a6:	480a      	ldr	r0, [pc, #40]	; (801f4d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f4a8:	f00a fc14 	bl	8029cd4 <__aeabi_atexit>
 801f4ac:	4b05      	ldr	r3, [pc, #20]	; (801f4c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f4ae:	65ab      	str	r3, [r5, #88]	; 0x58
 801f4b0:	4b07      	ldr	r3, [pc, #28]	; (801f4d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f4b2:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f4b4:	bd38      	pop	{r3, r4, r5, pc}
 801f4b6:	bf00      	nop
 801f4b8:	20012e54 	.word	0x20012e54
 801f4bc:	20000000 	.word	0x20000000
 801f4c0:	0801bce7 	.word	0x0801bce7
 801f4c4:	200000a4 	.word	0x200000a4
 801f4c8:	20012e58 	.word	0x20012e58
 801f4cc:	0801bce5 	.word	0x0801bce5
 801f4d0:	200000a8 	.word	0x200000a8

0801f4d4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f4d4:	b510      	push	{r4, lr}
 801f4d6:	4604      	mov	r4, r0
 801f4d8:	f7ff ff88 	bl	801f3ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f4dc:	4620      	mov	r0, r4
 801f4de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f4e2:	f7ff bfbd 	b.w	801f460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f4e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f4e8:	b538      	push	{r3, r4, r5, lr}
 801f4ea:	4c15      	ldr	r4, [pc, #84]	; (801f540 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f4ec:	7823      	ldrb	r3, [r4, #0]
 801f4ee:	f3bf 8f5b 	dmb	ish
 801f4f2:	07da      	lsls	r2, r3, #31
 801f4f4:	4605      	mov	r5, r0
 801f4f6:	d40b      	bmi.n	801f510 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f4f8:	4620      	mov	r0, r4
 801f4fa:	f00a fbf2 	bl	8029ce2 <__cxa_guard_acquire>
 801f4fe:	b138      	cbz	r0, 801f510 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f500:	4620      	mov	r0, r4
 801f502:	f00a fbfa 	bl	8029cfa <__cxa_guard_release>
 801f506:	4a0f      	ldr	r2, [pc, #60]	; (801f544 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f508:	490f      	ldr	r1, [pc, #60]	; (801f548 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f50a:	4810      	ldr	r0, [pc, #64]	; (801f54c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f50c:	f00a fbe2 	bl	8029cd4 <__aeabi_atexit>
 801f510:	4c0f      	ldr	r4, [pc, #60]	; (801f550 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f512:	7823      	ldrb	r3, [r4, #0]
 801f514:	f3bf 8f5b 	dmb	ish
 801f518:	07db      	lsls	r3, r3, #31
 801f51a:	d40b      	bmi.n	801f534 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f51c:	4620      	mov	r0, r4
 801f51e:	f00a fbe0 	bl	8029ce2 <__cxa_guard_acquire>
 801f522:	b138      	cbz	r0, 801f534 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f524:	4620      	mov	r0, r4
 801f526:	f00a fbe8 	bl	8029cfa <__cxa_guard_release>
 801f52a:	4a06      	ldr	r2, [pc, #24]	; (801f544 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f52c:	4909      	ldr	r1, [pc, #36]	; (801f554 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f52e:	480a      	ldr	r0, [pc, #40]	; (801f558 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f530:	f00a fbd0 	bl	8029cd4 <__aeabi_atexit>
 801f534:	4b05      	ldr	r3, [pc, #20]	; (801f54c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f536:	672b      	str	r3, [r5, #112]	; 0x70
 801f538:	4b07      	ldr	r3, [pc, #28]	; (801f558 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f53a:	676b      	str	r3, [r5, #116]	; 0x74
 801f53c:	bd38      	pop	{r3, r4, r5, pc}
 801f53e:	bf00      	nop
 801f540:	20012e4c 	.word	0x20012e4c
 801f544:	20000000 	.word	0x20000000
 801f548:	0801bcdb 	.word	0x0801bcdb
 801f54c:	2000009c 	.word	0x2000009c
 801f550:	20012e50 	.word	0x20012e50
 801f554:	0801bcd9 	.word	0x0801bcd9
 801f558:	200000a0 	.word	0x200000a0

0801f55c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f55c:	b538      	push	{r3, r4, r5, lr}
 801f55e:	4c15      	ldr	r4, [pc, #84]	; (801f5b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f560:	7823      	ldrb	r3, [r4, #0]
 801f562:	f3bf 8f5b 	dmb	ish
 801f566:	07da      	lsls	r2, r3, #31
 801f568:	4605      	mov	r5, r0
 801f56a:	d40b      	bmi.n	801f584 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f56c:	4620      	mov	r0, r4
 801f56e:	f00a fbb8 	bl	8029ce2 <__cxa_guard_acquire>
 801f572:	b138      	cbz	r0, 801f584 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f574:	4620      	mov	r0, r4
 801f576:	f00a fbc0 	bl	8029cfa <__cxa_guard_release>
 801f57a:	4a0f      	ldr	r2, [pc, #60]	; (801f5b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f57c:	490f      	ldr	r1, [pc, #60]	; (801f5bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f57e:	4810      	ldr	r0, [pc, #64]	; (801f5c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f580:	f00a fba8 	bl	8029cd4 <__aeabi_atexit>
 801f584:	4c0f      	ldr	r4, [pc, #60]	; (801f5c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f586:	7823      	ldrb	r3, [r4, #0]
 801f588:	f3bf 8f5b 	dmb	ish
 801f58c:	07db      	lsls	r3, r3, #31
 801f58e:	d40b      	bmi.n	801f5a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f590:	4620      	mov	r0, r4
 801f592:	f00a fba6 	bl	8029ce2 <__cxa_guard_acquire>
 801f596:	b138      	cbz	r0, 801f5a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f598:	4620      	mov	r0, r4
 801f59a:	f00a fbae 	bl	8029cfa <__cxa_guard_release>
 801f59e:	4a06      	ldr	r2, [pc, #24]	; (801f5b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f5a0:	4909      	ldr	r1, [pc, #36]	; (801f5c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f5a2:	480a      	ldr	r0, [pc, #40]	; (801f5cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f5a4:	f00a fb96 	bl	8029cd4 <__aeabi_atexit>
 801f5a8:	4b05      	ldr	r3, [pc, #20]	; (801f5c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f5aa:	66ab      	str	r3, [r5, #104]	; 0x68
 801f5ac:	4b07      	ldr	r3, [pc, #28]	; (801f5cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f5ae:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f5b0:	bd38      	pop	{r3, r4, r5, pc}
 801f5b2:	bf00      	nop
 801f5b4:	20012e44 	.word	0x20012e44
 801f5b8:	20000000 	.word	0x20000000
 801f5bc:	0801bcdf 	.word	0x0801bcdf
 801f5c0:	20000094 	.word	0x20000094
 801f5c4:	20012e48 	.word	0x20012e48
 801f5c8:	0801bcdd 	.word	0x0801bcdd
 801f5cc:	20000098 	.word	0x20000098

0801f5d0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f5d0:	b510      	push	{r4, lr}
 801f5d2:	4604      	mov	r4, r0
 801f5d4:	f7ff ff88 	bl	801f4e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f5d8:	4620      	mov	r0, r4
 801f5da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f5de:	f7ff bfbd 	b.w	801f55c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f5e2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f5e2:	b510      	push	{r4, lr}
 801f5e4:	4604      	mov	r4, r0
 801f5e6:	f7ff fff3 	bl	801f5d0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f5ea:	4620      	mov	r0, r4
 801f5ec:	f7ff ff72 	bl	801f4d4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f5f0:	4620      	mov	r0, r4
 801f5f2:	f7ff fdf9 	bl	801f1e8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f5f6:	4620      	mov	r0, r4
 801f5f8:	f7ff fcfa 	bl	801eff0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801f5fc:	4620      	mov	r0, r4
 801f5fe:	f7ff fd75 	bl	801f0ec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801f602:	4620      	mov	r0, r4
 801f604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f608:	f7ff bee0 	b.w	801f3cc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801f60c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801f60c:	b538      	push	{r3, r4, r5, lr}
 801f60e:	4c0b      	ldr	r4, [pc, #44]	; (801f63c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801f610:	7823      	ldrb	r3, [r4, #0]
 801f612:	f3bf 8f5b 	dmb	ish
 801f616:	07db      	lsls	r3, r3, #31
 801f618:	4605      	mov	r5, r0
 801f61a:	d40b      	bmi.n	801f634 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f61c:	4620      	mov	r0, r4
 801f61e:	f00a fb60 	bl	8029ce2 <__cxa_guard_acquire>
 801f622:	b138      	cbz	r0, 801f634 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f624:	4620      	mov	r0, r4
 801f626:	f00a fb68 	bl	8029cfa <__cxa_guard_release>
 801f62a:	4a05      	ldr	r2, [pc, #20]	; (801f640 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801f62c:	4905      	ldr	r1, [pc, #20]	; (801f644 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801f62e:	4806      	ldr	r0, [pc, #24]	; (801f648 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f630:	f00a fb50 	bl	8029cd4 <__aeabi_atexit>
 801f634:	4b04      	ldr	r3, [pc, #16]	; (801f648 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f636:	67ab      	str	r3, [r5, #120]	; 0x78
 801f638:	bd38      	pop	{r3, r4, r5, pc}
 801f63a:	bf00      	nop
 801f63c:	20012e38 	.word	0x20012e38
 801f640:	20000000 	.word	0x20000000
 801f644:	0801bcd7 	.word	0x0801bcd7
 801f648:	2000008c 	.word	0x2000008c

0801f64c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801f64c:	b538      	push	{r3, r4, r5, lr}
 801f64e:	4c0b      	ldr	r4, [pc, #44]	; (801f67c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801f650:	7823      	ldrb	r3, [r4, #0]
 801f652:	f3bf 8f5b 	dmb	ish
 801f656:	07db      	lsls	r3, r3, #31
 801f658:	4605      	mov	r5, r0
 801f65a:	d40b      	bmi.n	801f674 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f65c:	4620      	mov	r0, r4
 801f65e:	f00a fb40 	bl	8029ce2 <__cxa_guard_acquire>
 801f662:	b138      	cbz	r0, 801f674 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f664:	4620      	mov	r0, r4
 801f666:	f00a fb48 	bl	8029cfa <__cxa_guard_release>
 801f66a:	4a05      	ldr	r2, [pc, #20]	; (801f680 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801f66c:	4905      	ldr	r1, [pc, #20]	; (801f684 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801f66e:	4806      	ldr	r0, [pc, #24]	; (801f688 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f670:	f00a fb30 	bl	8029cd4 <__aeabi_atexit>
 801f674:	4b04      	ldr	r3, [pc, #16]	; (801f688 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f676:	67eb      	str	r3, [r5, #124]	; 0x7c
 801f678:	bd38      	pop	{r3, r4, r5, pc}
 801f67a:	bf00      	nop
 801f67c:	20012e3c 	.word	0x20012e3c
 801f680:	20000000 	.word	0x20000000
 801f684:	0801bcd5 	.word	0x0801bcd5
 801f688:	20000090 	.word	0x20000090

0801f68c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801f68c:	b570      	push	{r4, r5, r6, lr}
 801f68e:	4d0d      	ldr	r5, [pc, #52]	; (801f6c4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801f690:	4c0d      	ldr	r4, [pc, #52]	; (801f6c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801f692:	782b      	ldrb	r3, [r5, #0]
 801f694:	f3bf 8f5b 	dmb	ish
 801f698:	f013 0f01 	tst.w	r3, #1
 801f69c:	4606      	mov	r6, r0
 801f69e:	d10d      	bne.n	801f6bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f6a0:	4628      	mov	r0, r5
 801f6a2:	f00a fb1e 	bl	8029ce2 <__cxa_guard_acquire>
 801f6a6:	b148      	cbz	r0, 801f6bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f6a8:	4b08      	ldr	r3, [pc, #32]	; (801f6cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801f6aa:	6023      	str	r3, [r4, #0]
 801f6ac:	4628      	mov	r0, r5
 801f6ae:	f00a fb24 	bl	8029cfa <__cxa_guard_release>
 801f6b2:	4a07      	ldr	r2, [pc, #28]	; (801f6d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801f6b4:	4907      	ldr	r1, [pc, #28]	; (801f6d4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801f6b6:	4620      	mov	r0, r4
 801f6b8:	f00a fb0c 	bl	8029cd4 <__aeabi_atexit>
 801f6bc:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801f6c0:	bd70      	pop	{r4, r5, r6, pc}
 801f6c2:	bf00      	nop
 801f6c4:	20012e40 	.word	0x20012e40
 801f6c8:	20012eb4 	.word	0x20012eb4
 801f6cc:	0802f47c 	.word	0x0802f47c
 801f6d0:	20000000 	.word	0x20000000
 801f6d4:	0801bcd3 	.word	0x0801bcd3

0801f6d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801f6d8:	b510      	push	{r4, lr}
 801f6da:	4604      	mov	r4, r0
 801f6dc:	f7ff ff96 	bl	801f60c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801f6e0:	4620      	mov	r0, r4
 801f6e2:	f7ff ffb3 	bl	801f64c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801f6e6:	4620      	mov	r0, r4
 801f6e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f6ec:	f7ff bfce 	b.w	801f68c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801f6f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801f6f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6f4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801f6f8:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801f6fc:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801f700:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801f704:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801f708:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801f70c:	8808      	ldrh	r0, [r1, #0]
 801f70e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801f712:	2d00      	cmp	r5, #0
 801f714:	eb02 0a0c 	add.w	sl, r2, ip
 801f718:	f2c0 80b0 	blt.w	801f87c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f71c:	45ab      	cmp	fp, r5
 801f71e:	f340 80ad 	ble.w	801f87c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f722:	2c00      	cmp	r4, #0
 801f724:	f2c0 80a8 	blt.w	801f878 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f728:	45a6      	cmp	lr, r4
 801f72a:	f340 80a5 	ble.w	801f878 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f72e:	f812 200c 	ldrb.w	r2, [r2, ip]
 801f732:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801f736:	1c62      	adds	r2, r4, #1
 801f738:	f100 80a3 	bmi.w	801f882 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f73c:	4596      	cmp	lr, r2
 801f73e:	f340 80a0 	ble.w	801f882 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f742:	f1b9 0f00 	cmp.w	r9, #0
 801f746:	f000 809c 	beq.w	801f882 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f74a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f74e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f752:	3501      	adds	r5, #1
 801f754:	f100 8099 	bmi.w	801f88a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f758:	45ab      	cmp	fp, r5
 801f75a:	f340 8096 	ble.w	801f88a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f75e:	2f00      	cmp	r7, #0
 801f760:	f000 8093 	beq.w	801f88a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f764:	2c00      	cmp	r4, #0
 801f766:	f2c0 808e 	blt.w	801f886 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f76a:	45a6      	cmp	lr, r4
 801f76c:	f340 808b 	ble.w	801f886 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f770:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801f774:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801f778:	3401      	adds	r4, #1
 801f77a:	f100 8089 	bmi.w	801f890 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f77e:	45a6      	cmp	lr, r4
 801f780:	f340 8086 	ble.w	801f890 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f784:	f1b9 0f00 	cmp.w	r9, #0
 801f788:	f000 8082 	beq.w	801f890 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f78c:	44d6      	add	lr, sl
 801f78e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f792:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801f796:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f79a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f79e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f7a2:	fb19 fe07 	smulbb	lr, r9, r7
 801f7a6:	ea44 0808 	orr.w	r8, r4, r8
 801f7aa:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f7ae:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f7b2:	f1c7 0210 	rsb	r2, r7, #16
 801f7b6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f7ba:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f7be:	ea44 0c0c 	orr.w	ip, r4, ip
 801f7c2:	eba2 0209 	sub.w	r2, r2, r9
 801f7c6:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f7ca:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f7ce:	fb04 f40c 	mul.w	r4, r4, ip
 801f7d2:	fb02 4808 	mla	r8, r2, r8, r4
 801f7d6:	041a      	lsls	r2, r3, #16
 801f7d8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f7dc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f7e0:	4313      	orrs	r3, r2
 801f7e2:	042a      	lsls	r2, r5, #16
 801f7e4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f7e8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f7ec:	fb0e 8303 	mla	r3, lr, r3, r8
 801f7f0:	432a      	orrs	r2, r5
 801f7f2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f7f6:	fb07 3202 	mla	r2, r7, r2, r3
 801f7fa:	0d53      	lsrs	r3, r2, #21
 801f7fc:	0952      	lsrs	r2, r2, #5
 801f7fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f802:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f806:	431a      	orrs	r2, r3
 801f808:	b293      	uxth	r3, r2
 801f80a:	b2b4      	uxth	r4, r6
 801f80c:	1202      	asrs	r2, r0, #8
 801f80e:	43f6      	mvns	r6, r6
 801f810:	b2f6      	uxtb	r6, r6
 801f812:	121d      	asrs	r5, r3, #8
 801f814:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f818:	fb12 f206 	smulbb	r2, r2, r6
 801f81c:	10c7      	asrs	r7, r0, #3
 801f81e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f822:	00c0      	lsls	r0, r0, #3
 801f824:	fb05 2504 	mla	r5, r5, r4, r2
 801f828:	b2c0      	uxtb	r0, r0
 801f82a:	10da      	asrs	r2, r3, #3
 801f82c:	00db      	lsls	r3, r3, #3
 801f82e:	b2db      	uxtb	r3, r3
 801f830:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f834:	fb10 f006 	smulbb	r0, r0, r6
 801f838:	b2ad      	uxth	r5, r5
 801f83a:	fb03 0004 	mla	r0, r3, r4, r0
 801f83e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f842:	fb17 f706 	smulbb	r7, r7, r6
 801f846:	b280      	uxth	r0, r0
 801f848:	1c6b      	adds	r3, r5, #1
 801f84a:	fb02 7204 	mla	r2, r2, r4, r7
 801f84e:	b292      	uxth	r2, r2
 801f850:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f854:	1c43      	adds	r3, r0, #1
 801f856:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f85a:	1c50      	adds	r0, r2, #1
 801f85c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f860:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f864:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f868:	0952      	lsrs	r2, r2, #5
 801f86a:	432b      	orrs	r3, r5
 801f86c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f870:	4313      	orrs	r3, r2
 801f872:	800b      	strh	r3, [r1, #0]
 801f874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f878:	4680      	mov	r8, r0
 801f87a:	e75c      	b.n	801f736 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801f87c:	4684      	mov	ip, r0
 801f87e:	4680      	mov	r8, r0
 801f880:	e767      	b.n	801f752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f882:	4684      	mov	ip, r0
 801f884:	e765      	b.n	801f752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f886:	4605      	mov	r5, r0
 801f888:	e776      	b.n	801f778 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801f88a:	4603      	mov	r3, r0
 801f88c:	4605      	mov	r5, r0
 801f88e:	e782      	b.n	801f796 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801f890:	4603      	mov	r3, r0
 801f892:	e780      	b.n	801f796 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801f894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f898:	b099      	sub	sp, #100	; 0x64
 801f89a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801f89e:	9215      	str	r2, [sp, #84]	; 0x54
 801f8a0:	9309      	str	r3, [sp, #36]	; 0x24
 801f8a2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801f8a4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801f8a8:	930d      	str	r3, [sp, #52]	; 0x34
 801f8aa:	910c      	str	r1, [sp, #48]	; 0x30
 801f8ac:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801f8b0:	9016      	str	r0, [sp, #88]	; 0x58
 801f8b2:	6850      	ldr	r0, [r2, #4]
 801f8b4:	6812      	ldr	r2, [r2, #0]
 801f8b6:	fb00 1303 	mla	r3, r0, r3, r1
 801f8ba:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801f8be:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f8c0:	681b      	ldr	r3, [r3, #0]
 801f8c2:	930b      	str	r3, [sp, #44]	; 0x2c
 801f8c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f8c6:	685e      	ldr	r6, [r3, #4]
 801f8c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f8ca:	43db      	mvns	r3, r3
 801f8cc:	b2db      	uxtb	r3, r3
 801f8ce:	3604      	adds	r6, #4
 801f8d0:	930a      	str	r3, [sp, #40]	; 0x28
 801f8d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f8d4:	2b00      	cmp	r3, #0
 801f8d6:	dc03      	bgt.n	801f8e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f8d8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801f8da:	2b00      	cmp	r3, #0
 801f8dc:	f340 8225 	ble.w	801fd2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f8e0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f8e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f8e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f8ea:	1e48      	subs	r0, r1, #1
 801f8ec:	1e57      	subs	r7, r2, #1
 801f8ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8f0:	2b00      	cmp	r3, #0
 801f8f2:	f340 80e3 	ble.w	801fabc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801f8f6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801f8fa:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f8fe:	d406      	bmi.n	801f90e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f900:	4584      	cmp	ip, r0
 801f902:	da04      	bge.n	801f90e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f904:	2b00      	cmp	r3, #0
 801f906:	db02      	blt.n	801f90e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f908:	42bb      	cmp	r3, r7
 801f90a:	f2c0 80d8 	blt.w	801fabe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f90e:	f11c 0c01 	adds.w	ip, ip, #1
 801f912:	f100 80c9 	bmi.w	801faa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f916:	4561      	cmp	r1, ip
 801f918:	f2c0 80c6 	blt.w	801faa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f91c:	3301      	adds	r3, #1
 801f91e:	f100 80c3 	bmi.w	801faa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f922:	429a      	cmp	r2, r3
 801f924:	f2c0 80c0 	blt.w	801faa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f928:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f92c:	4647      	mov	r7, r8
 801f92e:	f1bb 0f00 	cmp.w	fp, #0
 801f932:	f340 80e3 	ble.w	801fafc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801f936:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f938:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f93a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f93e:	689b      	ldr	r3, [r3, #8]
 801f940:	ea5f 422a 	movs.w	r2, sl, asr #16
 801f944:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f948:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801f94c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f950:	f100 8121 	bmi.w	801fb96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f954:	f103 39ff 	add.w	r9, r3, #4294967295
 801f958:	454a      	cmp	r2, r9
 801f95a:	f280 811c 	bge.w	801fb96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f95e:	f1bc 0f00 	cmp.w	ip, #0
 801f962:	f2c0 8118 	blt.w	801fb96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f966:	f10e 39ff 	add.w	r9, lr, #4294967295
 801f96a:	45cc      	cmp	ip, r9
 801f96c:	f280 8113 	bge.w	801fb96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f970:	b21b      	sxth	r3, r3
 801f972:	fb0c 2203 	mla	r2, ip, r3, r2
 801f976:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f978:	eb04 0902 	add.w	r9, r4, r2
 801f97c:	5ca2      	ldrb	r2, [r4, r2]
 801f97e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801f982:	2800      	cmp	r0, #0
 801f984:	f000 80fe 	beq.w	801fb84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f988:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f98c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801f990:	9211      	str	r2, [sp, #68]	; 0x44
 801f992:	b151      	cbz	r1, 801f9aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f994:	eb09 0203 	add.w	r2, r9, r3
 801f998:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f99c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f9a0:	930f      	str	r3, [sp, #60]	; 0x3c
 801f9a2:	7853      	ldrb	r3, [r2, #1]
 801f9a4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f9a8:	9312      	str	r3, [sp, #72]	; 0x48
 801f9aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f9ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f9ae:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f9b2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f9b6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f9ba:	ea4c 0c03 	orr.w	ip, ip, r3
 801f9be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f9c0:	041b      	lsls	r3, r3, #16
 801f9c2:	fb10 f201 	smulbb	r2, r0, r1
 801f9c6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801f9ca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f9ce:	10d2      	asrs	r2, r2, #3
 801f9d0:	4323      	orrs	r3, r4
 801f9d2:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801f9d6:	4353      	muls	r3, r2
 801f9d8:	fb09 330c 	mla	r3, r9, ip, r3
 801f9dc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f9e0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f9e4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f9e8:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f9ec:	f1c1 0c10 	rsb	ip, r1, #16
 801f9f0:	ebac 0c00 	sub.w	ip, ip, r0
 801f9f4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f9f8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f9fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f9fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fa00:	0418      	lsls	r0, r3, #16
 801fa02:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fa06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fa0a:	4318      	orrs	r0, r3
 801fa0c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801fa10:	fb02 c200 	mla	r2, r2, r0, ip
 801fa14:	0d53      	lsrs	r3, r2, #21
 801fa16:	0952      	lsrs	r2, r2, #5
 801fa18:	8838      	ldrh	r0, [r7, #0]
 801fa1a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fa1e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fa22:	431a      	orrs	r2, r3
 801fa24:	b292      	uxth	r2, r2
 801fa26:	1201      	asrs	r1, r0, #8
 801fa28:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801fa2c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801fa30:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fa34:	fb11 f104 	smulbb	r1, r1, r4
 801fa38:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801fa3c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fa40:	00c0      	lsls	r0, r0, #3
 801fa42:	fb0c 1c03 	mla	ip, ip, r3, r1
 801fa46:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fa4a:	10d1      	asrs	r1, r2, #3
 801fa4c:	b2c0      	uxtb	r0, r0
 801fa4e:	00d2      	lsls	r2, r2, #3
 801fa50:	b2d2      	uxtb	r2, r2
 801fa52:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fa56:	fb1e fe04 	smulbb	lr, lr, r4
 801fa5a:	fb10 f004 	smulbb	r0, r0, r4
 801fa5e:	fa1f fc8c 	uxth.w	ip, ip
 801fa62:	fb01 e103 	mla	r1, r1, r3, lr
 801fa66:	fb02 0303 	mla	r3, r2, r3, r0
 801fa6a:	b29a      	uxth	r2, r3
 801fa6c:	f10c 0301 	add.w	r3, ip, #1
 801fa70:	b289      	uxth	r1, r1
 801fa72:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fa76:	1c53      	adds	r3, r2, #1
 801fa78:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fa7c:	1c4a      	adds	r2, r1, #1
 801fa7e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fa82:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fa86:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fa8a:	0949      	lsrs	r1, r1, #5
 801fa8c:	ea43 030c 	orr.w	r3, r3, ip
 801fa90:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fa94:	430b      	orrs	r3, r1
 801fa96:	803b      	strh	r3, [r7, #0]
 801fa98:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fa9a:	449a      	add	sl, r3
 801fa9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fa9e:	3702      	adds	r7, #2
 801faa0:	441d      	add	r5, r3
 801faa2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801faa6:	e742      	b.n	801f92e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801faa8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801faaa:	449a      	add	sl, r3
 801faac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801faae:	441d      	add	r5, r3
 801fab0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fab2:	3b01      	subs	r3, #1
 801fab4:	9309      	str	r3, [sp, #36]	; 0x24
 801fab6:	f108 0802 	add.w	r8, r8, #2
 801faba:	e718      	b.n	801f8ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801fabc:	d023      	beq.n	801fb06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fabe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fac0:	9825      	ldr	r0, [sp, #148]	; 0x94
 801fac2:	3b01      	subs	r3, #1
 801fac4:	fb00 a003 	mla	r0, r0, r3, sl
 801fac8:	1400      	asrs	r0, r0, #16
 801faca:	f53f af2d 	bmi.w	801f928 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801face:	3901      	subs	r1, #1
 801fad0:	4288      	cmp	r0, r1
 801fad2:	f6bf af29 	bge.w	801f928 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fad6:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fad8:	fb01 5303 	mla	r3, r1, r3, r5
 801fadc:	141b      	asrs	r3, r3, #16
 801fade:	f53f af23 	bmi.w	801f928 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fae2:	3a01      	subs	r2, #1
 801fae4:	4293      	cmp	r3, r2
 801fae6:	f6bf af1f 	bge.w	801f928 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801faea:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801faee:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801faf2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801faf6:	f1be 0f00 	cmp.w	lr, #0
 801fafa:	dc6c      	bgt.n	801fbd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801fafc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fafe:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fb02:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801fb06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fb08:	2b00      	cmp	r3, #0
 801fb0a:	f340 810e 	ble.w	801fd2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fb0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fb12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fb16:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fb1a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fb1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fb20:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fb24:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fb28:	eef0 6a62 	vmov.f32	s13, s5
 801fb2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fb30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb34:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fb38:	ee16 aa90 	vmov	sl, s13
 801fb3c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fb40:	eef0 6a43 	vmov.f32	s13, s6
 801fb44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fb48:	ee12 2a90 	vmov	r2, s5
 801fb4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fb50:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb54:	ee13 2a10 	vmov	r2, s6
 801fb58:	9325      	str	r3, [sp, #148]	; 0x94
 801fb5a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fb5c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb60:	9326      	str	r3, [sp, #152]	; 0x98
 801fb62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fb64:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801fb66:	3b01      	subs	r3, #1
 801fb68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb6c:	930c      	str	r3, [sp, #48]	; 0x30
 801fb6e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fb70:	bf08      	it	eq
 801fb72:	4613      	moveq	r3, r2
 801fb74:	ee16 5a90 	vmov	r5, s13
 801fb78:	9309      	str	r3, [sp, #36]	; 0x24
 801fb7a:	eeb0 3a67 	vmov.f32	s6, s15
 801fb7e:	eef0 2a47 	vmov.f32	s5, s14
 801fb82:	e6a6      	b.n	801f8d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fb84:	2900      	cmp	r1, #0
 801fb86:	f43f af10 	beq.w	801f9aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fb8a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fb8e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fb92:	930f      	str	r3, [sp, #60]	; 0x3c
 801fb94:	e709      	b.n	801f9aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fb96:	f112 0901 	adds.w	r9, r2, #1
 801fb9a:	f53f af7d 	bmi.w	801fa98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fb9e:	454b      	cmp	r3, r9
 801fba0:	f6ff af7a 	blt.w	801fa98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fba4:	f11c 0901 	adds.w	r9, ip, #1
 801fba8:	f53f af76 	bmi.w	801fa98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fbac:	45ce      	cmp	lr, r9
 801fbae:	f6ff af73 	blt.w	801fa98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fbb2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fbb4:	9202      	str	r2, [sp, #8]
 801fbb6:	b21b      	sxth	r3, r3
 801fbb8:	fa0f f28e 	sxth.w	r2, lr
 801fbbc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801fbc0:	e9cd c003 	strd	ip, r0, [sp, #12]
 801fbc4:	9201      	str	r2, [sp, #4]
 801fbc6:	9300      	str	r3, [sp, #0]
 801fbc8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fbca:	9816      	ldr	r0, [sp, #88]	; 0x58
 801fbcc:	4633      	mov	r3, r6
 801fbce:	4639      	mov	r1, r7
 801fbd0:	f7ff fd8e 	bl	801f6f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801fbd4:	e760      	b.n	801fa98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fbd6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fbd8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fbda:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fbde:	ea4f 422a 	mov.w	r2, sl, asr #16
 801fbe2:	1429      	asrs	r1, r5, #16
 801fbe4:	fb03 2101 	mla	r1, r3, r1, r2
 801fbe8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fbea:	440a      	add	r2, r1
 801fbec:	5c61      	ldrb	r1, [r4, r1]
 801fbee:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801fbf2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fbf6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801fbfa:	f1bc 0f00 	cmp.w	ip, #0
 801fbfe:	f000 808c 	beq.w	801fd1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801fc02:	7857      	ldrb	r7, [r2, #1]
 801fc04:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801fc08:	9413      	str	r4, [sp, #76]	; 0x4c
 801fc0a:	b140      	cbz	r0, 801fc1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fc0c:	18d7      	adds	r7, r2, r3
 801fc0e:	5cd3      	ldrb	r3, [r2, r3]
 801fc10:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fc14:	9310      	str	r3, [sp, #64]	; 0x40
 801fc16:	787b      	ldrb	r3, [r7, #1]
 801fc18:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fc1c:	9314      	str	r3, [sp, #80]	; 0x50
 801fc1e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fc20:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fc22:	fb1c f200 	smulbb	r2, ip, r0
 801fc26:	041f      	lsls	r7, r3, #16
 801fc28:	10d2      	asrs	r2, r2, #3
 801fc2a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fc2e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801fc32:	431f      	orrs	r7, r3
 801fc34:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801fc38:	9317      	str	r3, [sp, #92]	; 0x5c
 801fc3a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fc3c:	041b      	lsls	r3, r3, #16
 801fc3e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801fc42:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fc46:	ea43 030b 	orr.w	r3, r3, fp
 801fc4a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fc4c:	4353      	muls	r3, r2
 801fc4e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fc52:	fb04 3707 	mla	r7, r4, r7, r3
 801fc56:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fc5a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801fc5e:	ea43 0b01 	orr.w	fp, r3, r1
 801fc62:	f1c0 0110 	rsb	r1, r0, #16
 801fc66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fc68:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fc6a:	eba1 0c0c 	sub.w	ip, r1, ip
 801fc6e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fc72:	fb0c 770b 	mla	r7, ip, fp, r7
 801fc76:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fc7a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801fc7e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fc82:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801fc86:	ea4c 0c0b 	orr.w	ip, ip, fp
 801fc8a:	fb02 770c 	mla	r7, r2, ip, r7
 801fc8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fc90:	0d79      	lsrs	r1, r7, #21
 801fc92:	097f      	lsrs	r7, r7, #5
 801fc94:	8812      	ldrh	r2, [r2, #0]
 801fc96:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fc9a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fc9e:	430f      	orrs	r7, r1
 801fca0:	b2bb      	uxth	r3, r7
 801fca2:	1211      	asrs	r1, r2, #8
 801fca4:	1218      	asrs	r0, r3, #8
 801fca6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fcaa:	fb11 f104 	smulbb	r1, r1, r4
 801fcae:	10d7      	asrs	r7, r2, #3
 801fcb0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fcb4:	00d2      	lsls	r2, r2, #3
 801fcb6:	fb00 1009 	mla	r0, r0, r9, r1
 801fcba:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fcbe:	10d9      	asrs	r1, r3, #3
 801fcc0:	b2d2      	uxtb	r2, r2
 801fcc2:	00db      	lsls	r3, r3, #3
 801fcc4:	fb17 f704 	smulbb	r7, r7, r4
 801fcc8:	fb12 f204 	smulbb	r2, r2, r4
 801fccc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fcd0:	b2db      	uxtb	r3, r3
 801fcd2:	b280      	uxth	r0, r0
 801fcd4:	fb01 7109 	mla	r1, r1, r9, r7
 801fcd8:	fb03 2309 	mla	r3, r3, r9, r2
 801fcdc:	b29b      	uxth	r3, r3
 801fcde:	b289      	uxth	r1, r1
 801fce0:	1c42      	adds	r2, r0, #1
 801fce2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fce6:	1c4f      	adds	r7, r1, #1
 801fce8:	1c5a      	adds	r2, r3, #1
 801fcea:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fcee:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801fcf2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fcf6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fcfa:	0949      	lsrs	r1, r1, #5
 801fcfc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fcfe:	4310      	orrs	r0, r2
 801fd00:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fd04:	4308      	orrs	r0, r1
 801fd06:	f823 0b02 	strh.w	r0, [r3], #2
 801fd0a:	930e      	str	r3, [sp, #56]	; 0x38
 801fd0c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fd0e:	449a      	add	sl, r3
 801fd10:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fd12:	f10e 3eff 	add.w	lr, lr, #4294967295
 801fd16:	441d      	add	r5, r3
 801fd18:	e6ed      	b.n	801faf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801fd1a:	2800      	cmp	r0, #0
 801fd1c:	f43f af7f 	beq.w	801fc1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fd20:	5cd3      	ldrb	r3, [r2, r3]
 801fd22:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fd26:	9310      	str	r3, [sp, #64]	; 0x40
 801fd28:	e779      	b.n	801fc1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fd2a:	b019      	add	sp, #100	; 0x64
 801fd2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fd30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801fd30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fd34:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801fd38:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801fd3c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801fd40:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801fd44:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801fd48:	8808      	ldrh	r0, [r1, #0]
 801fd4a:	fb08 470e 	mla	r7, r8, lr, r4
 801fd4e:	f1b8 0f00 	cmp.w	r8, #0
 801fd52:	eb02 0907 	add.w	r9, r2, r7
 801fd56:	db67      	blt.n	801fe28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fd58:	45c2      	cmp	sl, r8
 801fd5a:	dd65      	ble.n	801fe28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fd5c:	2c00      	cmp	r4, #0
 801fd5e:	db61      	blt.n	801fe24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fd60:	45a6      	cmp	lr, r4
 801fd62:	dd5f      	ble.n	801fe24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fd64:	5dd2      	ldrb	r2, [r2, r7]
 801fd66:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801fd6a:	1c62      	adds	r2, r4, #1
 801fd6c:	d45f      	bmi.n	801fe2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fd6e:	4596      	cmp	lr, r2
 801fd70:	dd5d      	ble.n	801fe2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fd72:	2d00      	cmp	r5, #0
 801fd74:	d05b      	beq.n	801fe2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fd76:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fd7a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801fd7e:	f118 0801 	adds.w	r8, r8, #1
 801fd82:	d458      	bmi.n	801fe36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fd84:	45c2      	cmp	sl, r8
 801fd86:	dd56      	ble.n	801fe36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fd88:	2e00      	cmp	r6, #0
 801fd8a:	d054      	beq.n	801fe36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fd8c:	2c00      	cmp	r4, #0
 801fd8e:	db50      	blt.n	801fe32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801fd90:	45a6      	cmp	lr, r4
 801fd92:	dd4e      	ble.n	801fe32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801fd94:	f819 200e 	ldrb.w	r2, [r9, lr]
 801fd98:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801fd9c:	3401      	adds	r4, #1
 801fd9e:	d407      	bmi.n	801fdb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fda0:	45a6      	cmp	lr, r4
 801fda2:	dd05      	ble.n	801fdb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fda4:	b125      	cbz	r5, 801fdb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fda6:	44ce      	add	lr, r9
 801fda8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801fdac:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801fdb0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801fdb4:	fb15 f406 	smulbb	r4, r5, r6
 801fdb8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fdbc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801fdc0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fdc4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801fdc8:	ea43 0c0c 	orr.w	ip, r3, ip
 801fdcc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801fdd0:	f1c6 0310 	rsb	r3, r6, #16
 801fdd4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fdd8:	1b5b      	subs	r3, r3, r5
 801fdda:	ea4e 0707 	orr.w	r7, lr, r7
 801fdde:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801fde2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801fde6:	437d      	muls	r5, r7
 801fde8:	fb03 5c0c 	mla	ip, r3, ip, r5
 801fdec:	0403      	lsls	r3, r0, #16
 801fdee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fdf2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fdf6:	4318      	orrs	r0, r3
 801fdf8:	0413      	lsls	r3, r2, #16
 801fdfa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fdfe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fe02:	4313      	orrs	r3, r2
 801fe04:	fb04 c000 	mla	r0, r4, r0, ip
 801fe08:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801fe0c:	fb06 0003 	mla	r0, r6, r3, r0
 801fe10:	0d43      	lsrs	r3, r0, #21
 801fe12:	0940      	lsrs	r0, r0, #5
 801fe14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fe18:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fe1c:	4318      	orrs	r0, r3
 801fe1e:	8008      	strh	r0, [r1, #0]
 801fe20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fe24:	4684      	mov	ip, r0
 801fe26:	e7a0      	b.n	801fd6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801fe28:	4607      	mov	r7, r0
 801fe2a:	4684      	mov	ip, r0
 801fe2c:	e7a7      	b.n	801fd7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801fe2e:	4607      	mov	r7, r0
 801fe30:	e7a5      	b.n	801fd7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801fe32:	4602      	mov	r2, r0
 801fe34:	e7b2      	b.n	801fd9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801fe36:	4602      	mov	r2, r0
 801fe38:	e7ba      	b.n	801fdb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801fe3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fe3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe3e:	b093      	sub	sp, #76	; 0x4c
 801fe40:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801fe44:	920f      	str	r2, [sp, #60]	; 0x3c
 801fe46:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fe48:	9108      	str	r1, [sp, #32]
 801fe4a:	9306      	str	r3, [sp, #24]
 801fe4c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801fe50:	9010      	str	r0, [sp, #64]	; 0x40
 801fe52:	6850      	ldr	r0, [r2, #4]
 801fe54:	6812      	ldr	r2, [r2, #0]
 801fe56:	fb00 1303 	mla	r3, r0, r3, r1
 801fe5a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fe5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fe60:	681b      	ldr	r3, [r3, #0]
 801fe62:	9307      	str	r3, [sp, #28]
 801fe64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fe66:	685f      	ldr	r7, [r3, #4]
 801fe68:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801fe6c:	3704      	adds	r7, #4
 801fe6e:	9b08      	ldr	r3, [sp, #32]
 801fe70:	2b00      	cmp	r3, #0
 801fe72:	dc03      	bgt.n	801fe7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801fe74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fe76:	2b00      	cmp	r3, #0
 801fe78:	f340 81b2 	ble.w	80201e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801fe7c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fe7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fe82:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fe86:	1e48      	subs	r0, r1, #1
 801fe88:	f102 3cff 	add.w	ip, r2, #4294967295
 801fe8c:	9b06      	ldr	r3, [sp, #24]
 801fe8e:	2b00      	cmp	r3, #0
 801fe90:	f340 80a9 	ble.w	801ffe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801fe94:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fe98:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fe9c:	d406      	bmi.n	801feac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801fe9e:	4586      	cmp	lr, r0
 801fea0:	da04      	bge.n	801feac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801fea2:	2b00      	cmp	r3, #0
 801fea4:	db02      	blt.n	801feac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801fea6:	4563      	cmp	r3, ip
 801fea8:	f2c0 809e 	blt.w	801ffe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801feac:	f11e 0e01 	adds.w	lr, lr, #1
 801feb0:	f100 808f 	bmi.w	801ffd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801feb4:	4571      	cmp	r1, lr
 801feb6:	f2c0 808c 	blt.w	801ffd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801feba:	3301      	adds	r3, #1
 801febc:	f100 8089 	bmi.w	801ffd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fec0:	429a      	cmp	r2, r3
 801fec2:	f2c0 8086 	blt.w	801ffd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fec6:	f8dd b018 	ldr.w	fp, [sp, #24]
 801feca:	46c8      	mov	r8, r9
 801fecc:	f1bb 0f00 	cmp.w	fp, #0
 801fed0:	f340 80a6 	ble.w	8020020 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801fed4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801fed6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fed8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fedc:	689b      	ldr	r3, [r3, #8]
 801fede:	1422      	asrs	r2, r4, #16
 801fee0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801fee4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fee8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801feec:	f100 80e3 	bmi.w	80200b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801fef0:	f103 3aff 	add.w	sl, r3, #4294967295
 801fef4:	4552      	cmp	r2, sl
 801fef6:	f280 80de 	bge.w	80200b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801fefa:	f1bc 0f00 	cmp.w	ip, #0
 801fefe:	f2c0 80da 	blt.w	80200b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ff02:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ff06:	45d4      	cmp	ip, sl
 801ff08:	f280 80d5 	bge.w	80200b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ff0c:	b21b      	sxth	r3, r3
 801ff0e:	fb0c 2203 	mla	r2, ip, r3, r2
 801ff12:	9d07      	ldr	r5, [sp, #28]
 801ff14:	eb05 0a02 	add.w	sl, r5, r2
 801ff18:	5caa      	ldrb	r2, [r5, r2]
 801ff1a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ff1e:	2800      	cmp	r0, #0
 801ff20:	f000 80c0 	beq.w	80200a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ff24:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ff28:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ff2c:	920b      	str	r2, [sp, #44]	; 0x2c
 801ff2e:	b151      	cbz	r1, 801ff46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ff30:	eb0a 0203 	add.w	r2, sl, r3
 801ff34:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ff38:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ff3c:	9309      	str	r3, [sp, #36]	; 0x24
 801ff3e:	7853      	ldrb	r3, [r2, #1]
 801ff40:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ff44:	930c      	str	r3, [sp, #48]	; 0x30
 801ff46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ff4a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ff4e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ff52:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ff56:	ea4c 0c03 	orr.w	ip, ip, r3
 801ff5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ff5c:	041b      	lsls	r3, r3, #16
 801ff5e:	fb10 f201 	smulbb	r2, r0, r1
 801ff62:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ff66:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ff6a:	10d2      	asrs	r2, r2, #3
 801ff6c:	432b      	orrs	r3, r5
 801ff6e:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ff72:	4353      	muls	r3, r2
 801ff74:	fb0a 330c 	mla	r3, sl, ip, r3
 801ff78:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ff7c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ff80:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ff84:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ff88:	f1c1 0c10 	rsb	ip, r1, #16
 801ff8c:	ebac 0c00 	sub.w	ip, ip, r0
 801ff90:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ff94:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ff98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff9a:	0418      	lsls	r0, r3, #16
 801ff9c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ffa0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ffa4:	4318      	orrs	r0, r3
 801ffa6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ffaa:	fb02 c200 	mla	r2, r2, r0, ip
 801ffae:	0d53      	lsrs	r3, r2, #21
 801ffb0:	0952      	lsrs	r2, r2, #5
 801ffb2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ffb6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ffba:	431a      	orrs	r2, r3
 801ffbc:	f8a8 2000 	strh.w	r2, [r8]
 801ffc0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ffc2:	441c      	add	r4, r3
 801ffc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ffc6:	f108 0802 	add.w	r8, r8, #2
 801ffca:	441e      	add	r6, r3
 801ffcc:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ffd0:	e77c      	b.n	801fecc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ffd2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ffd4:	441c      	add	r4, r3
 801ffd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ffd8:	441e      	add	r6, r3
 801ffda:	9b06      	ldr	r3, [sp, #24]
 801ffdc:	3b01      	subs	r3, #1
 801ffde:	9306      	str	r3, [sp, #24]
 801ffe0:	f109 0902 	add.w	r9, r9, #2
 801ffe4:	e752      	b.n	801fe8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ffe6:	d020      	beq.n	802002a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ffe8:	9b06      	ldr	r3, [sp, #24]
 801ffea:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ffec:	3b01      	subs	r3, #1
 801ffee:	fb00 4003 	mla	r0, r0, r3, r4
 801fff2:	1400      	asrs	r0, r0, #16
 801fff4:	f53f af67 	bmi.w	801fec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801fff8:	3901      	subs	r1, #1
 801fffa:	4288      	cmp	r0, r1
 801fffc:	f6bf af63 	bge.w	801fec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020000:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020002:	fb01 6303 	mla	r3, r1, r3, r6
 8020006:	141b      	asrs	r3, r3, #16
 8020008:	f53f af5d 	bmi.w	801fec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802000c:	3a01      	subs	r2, #1
 802000e:	4293      	cmp	r3, r2
 8020010:	f6bf af59 	bge.w	801fec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020014:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8020018:	46ca      	mov	sl, r9
 802001a:	f1b8 0f00 	cmp.w	r8, #0
 802001e:	dc67      	bgt.n	80200f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8020020:	9b06      	ldr	r3, [sp, #24]
 8020022:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020026:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802002a:	9b08      	ldr	r3, [sp, #32]
 802002c:	2b00      	cmp	r3, #0
 802002e:	f340 80d7 	ble.w	80201e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020032:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020036:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802003a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802003e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020040:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020044:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020048:	eeb0 6a62 	vmov.f32	s12, s5
 802004c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020050:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020054:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020058:	ee16 4a10 	vmov	r4, s12
 802005c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020060:	eeb0 6a43 	vmov.f32	s12, s6
 8020064:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020068:	ee12 2a90 	vmov	r2, s5
 802006c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020070:	fb92 f3f3 	sdiv	r3, r2, r3
 8020074:	ee13 2a10 	vmov	r2, s6
 8020078:	931f      	str	r3, [sp, #124]	; 0x7c
 802007a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802007c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020080:	9320      	str	r3, [sp, #128]	; 0x80
 8020082:	9b08      	ldr	r3, [sp, #32]
 8020084:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020086:	3b01      	subs	r3, #1
 8020088:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802008c:	9308      	str	r3, [sp, #32]
 802008e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020090:	bf08      	it	eq
 8020092:	4613      	moveq	r3, r2
 8020094:	ee16 6a10 	vmov	r6, s12
 8020098:	9306      	str	r3, [sp, #24]
 802009a:	eeb0 3a67 	vmov.f32	s6, s15
 802009e:	eef0 2a47 	vmov.f32	s5, s14
 80200a2:	e6e4      	b.n	801fe6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80200a4:	2900      	cmp	r1, #0
 80200a6:	f43f af4e 	beq.w	801ff46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80200aa:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80200ae:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80200b2:	9309      	str	r3, [sp, #36]	; 0x24
 80200b4:	e747      	b.n	801ff46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80200b6:	f112 0a01 	adds.w	sl, r2, #1
 80200ba:	d481      	bmi.n	801ffc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80200bc:	4553      	cmp	r3, sl
 80200be:	f6ff af7f 	blt.w	801ffc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80200c2:	f11c 0a01 	adds.w	sl, ip, #1
 80200c6:	f53f af7b 	bmi.w	801ffc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80200ca:	45d6      	cmp	lr, sl
 80200cc:	f6ff af78 	blt.w	801ffc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80200d0:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80200d4:	b21b      	sxth	r3, r3
 80200d6:	fa0f f28e 	sxth.w	r2, lr
 80200da:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80200de:	9201      	str	r2, [sp, #4]
 80200e0:	9300      	str	r3, [sp, #0]
 80200e2:	9a07      	ldr	r2, [sp, #28]
 80200e4:	9810      	ldr	r0, [sp, #64]	; 0x40
 80200e6:	463b      	mov	r3, r7
 80200e8:	4641      	mov	r1, r8
 80200ea:	f7ff fe21 	bl	801fd30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80200ee:	e767      	b.n	801ffc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80200f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80200f2:	9d07      	ldr	r5, [sp, #28]
 80200f4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80200f8:	1422      	asrs	r2, r4, #16
 80200fa:	1431      	asrs	r1, r6, #16
 80200fc:	fb03 2101 	mla	r1, r3, r1, r2
 8020100:	9a07      	ldr	r2, [sp, #28]
 8020102:	440a      	add	r2, r1
 8020104:	5c69      	ldrb	r1, [r5, r1]
 8020106:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802010a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802010e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8020112:	f1be 0f00 	cmp.w	lr, #0
 8020116:	d05c      	beq.n	80201d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020118:	f892 c001 	ldrb.w	ip, [r2, #1]
 802011c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8020120:	950d      	str	r5, [sp, #52]	; 0x34
 8020122:	b150      	cbz	r0, 802013a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020124:	eb02 0c03 	add.w	ip, r2, r3
 8020128:	5cd3      	ldrb	r3, [r2, r3]
 802012a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802012e:	930a      	str	r3, [sp, #40]	; 0x28
 8020130:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020134:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020138:	930e      	str	r3, [sp, #56]	; 0x38
 802013a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802013c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802013e:	fb1e f200 	smulbb	r2, lr, r0
 8020142:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020146:	10d2      	asrs	r2, r2, #3
 8020148:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802014c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020150:	ea4c 0c03 	orr.w	ip, ip, r3
 8020154:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020158:	9311      	str	r3, [sp, #68]	; 0x44
 802015a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802015c:	041b      	lsls	r3, r3, #16
 802015e:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020162:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020166:	ea43 030b 	orr.w	r3, r3, fp
 802016a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802016c:	4353      	muls	r3, r2
 802016e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020172:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020176:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802017a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802017e:	ea43 0b01 	orr.w	fp, r3, r1
 8020182:	f1c0 0110 	rsb	r1, r0, #16
 8020186:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020188:	eba1 0e0e 	sub.w	lr, r1, lr
 802018c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020190:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020194:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020198:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 802019c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80201a0:	ea4b 0e0e 	orr.w	lr, fp, lr
 80201a4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80201a8:	fb02 cc0e 	mla	ip, r2, lr, ip
 80201ac:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80201b0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80201b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80201b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80201bc:	ea43 0c0c 	orr.w	ip, r3, ip
 80201c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80201c2:	f82a cb02 	strh.w	ip, [sl], #2
 80201c6:	441c      	add	r4, r3
 80201c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80201ca:	f108 38ff 	add.w	r8, r8, #4294967295
 80201ce:	441e      	add	r6, r3
 80201d0:	e723      	b.n	802001a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80201d2:	2800      	cmp	r0, #0
 80201d4:	d0b1      	beq.n	802013a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80201d6:	5cd3      	ldrb	r3, [r2, r3]
 80201d8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80201dc:	930a      	str	r3, [sp, #40]	; 0x28
 80201de:	e7ac      	b.n	802013a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80201e0:	b013      	add	sp, #76	; 0x4c
 80201e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080201e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80201e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80201ea:	880d      	ldrh	r5, [r1, #0]
 80201ec:	b087      	sub	sp, #28
 80201ee:	10ef      	asrs	r7, r5, #3
 80201f0:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80201f4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80201f8:	00ed      	lsls	r5, r5, #3
 80201fa:	9701      	str	r7, [sp, #4]
 80201fc:	b2ed      	uxtb	r5, r5
 80201fe:	9502      	str	r5, [sp, #8]
 8020200:	9d01      	ldr	r5, [sp, #4]
 8020202:	9103      	str	r1, [sp, #12]
 8020204:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020208:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 802020c:	9902      	ldr	r1, [sp, #8]
 802020e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8020212:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8020216:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 802021a:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802021e:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8020222:	022d      	lsls	r5, r5, #8
 8020224:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8020228:	fb06 0709 	mla	r7, r6, r9, r0
 802022c:	430d      	orrs	r5, r1
 802022e:	2e00      	cmp	r6, #0
 8020230:	eb02 0c07 	add.w	ip, r2, r7
 8020234:	9505      	str	r5, [sp, #20]
 8020236:	f2c0 80b6 	blt.w	80203a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802023a:	45b3      	cmp	fp, r6
 802023c:	f340 80b3 	ble.w	80203a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020240:	2800      	cmp	r0, #0
 8020242:	f2c0 80ae 	blt.w	80203a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020246:	4581      	cmp	r9, r0
 8020248:	f340 80ab 	ble.w	80203a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802024c:	5dd7      	ldrb	r7, [r2, r7]
 802024e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020252:	441f      	add	r7, r3
 8020254:	1c42      	adds	r2, r0, #1
 8020256:	f100 80a9 	bmi.w	80203ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802025a:	4591      	cmp	r9, r2
 802025c:	f340 80a6 	ble.w	80203ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020260:	2c00      	cmp	r4, #0
 8020262:	f000 80a3 	beq.w	80203ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020266:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802026a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802026e:	441d      	add	r5, r3
 8020270:	3601      	adds	r6, #1
 8020272:	f100 809f 	bmi.w	80203b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020276:	45b3      	cmp	fp, r6
 8020278:	f340 809c 	ble.w	80203b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802027c:	f1be 0f00 	cmp.w	lr, #0
 8020280:	f000 8098 	beq.w	80203b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020284:	2800      	cmp	r0, #0
 8020286:	f2c0 8093 	blt.w	80203b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802028a:	4581      	cmp	r9, r0
 802028c:	f340 8090 	ble.w	80203b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020290:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020294:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020298:	441e      	add	r6, r3
 802029a:	3001      	adds	r0, #1
 802029c:	f100 808d 	bmi.w	80203ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80202a0:	4581      	cmp	r9, r0
 80202a2:	f340 808a 	ble.w	80203ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80202a6:	2c00      	cmp	r4, #0
 80202a8:	f000 8087 	beq.w	80203ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80202ac:	44e1      	add	r9, ip
 80202ae:	f899 2001 	ldrb.w	r2, [r9, #1]
 80202b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80202b6:	4413      	add	r3, r2
 80202b8:	b2a4      	uxth	r4, r4
 80202ba:	fa1f fe8e 	uxth.w	lr, lr
 80202be:	fb04 fb0e 	mul.w	fp, r4, lr
 80202c2:	0124      	lsls	r4, r4, #4
 80202c4:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80202c8:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80202cc:	eba4 040b 	sub.w	r4, r4, fp
 80202d0:	fa1f f08e 	uxth.w	r0, lr
 80202d4:	b2a2      	uxth	r2, r4
 80202d6:	78ac      	ldrb	r4, [r5, #2]
 80202d8:	f897 c002 	ldrb.w	ip, [r7, #2]
 80202dc:	9901      	ldr	r1, [sp, #4]
 80202de:	eba9 0900 	sub.w	r9, r9, r0
 80202e2:	fa1f f989 	uxth.w	r9, r9
 80202e6:	4354      	muls	r4, r2
 80202e8:	fb09 440c 	mla	r4, r9, ip, r4
 80202ec:	f896 c002 	ldrb.w	ip, [r6, #2]
 80202f0:	fb00 440c 	mla	r4, r0, ip, r4
 80202f4:	f893 c002 	ldrb.w	ip, [r3, #2]
 80202f8:	fa1f fe88 	uxth.w	lr, r8
 80202fc:	ea6f 0808 	mvn.w	r8, r8
 8020300:	fa5f f888 	uxtb.w	r8, r8
 8020304:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020308:	fb1a fa08 	smulbb	sl, sl, r8
 802030c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020310:	fb0c ac0e 	mla	ip, ip, lr, sl
 8020314:	f895 a001 	ldrb.w	sl, [r5, #1]
 8020318:	787c      	ldrb	r4, [r7, #1]
 802031a:	782d      	ldrb	r5, [r5, #0]
 802031c:	783f      	ldrb	r7, [r7, #0]
 802031e:	fb02 fa0a 	mul.w	sl, r2, sl
 8020322:	fb09 aa04 	mla	sl, r9, r4, sl
 8020326:	7874      	ldrb	r4, [r6, #1]
 8020328:	436a      	muls	r2, r5
 802032a:	7835      	ldrb	r5, [r6, #0]
 802032c:	fb00 aa04 	mla	sl, r0, r4, sl
 8020330:	fb09 2207 	mla	r2, r9, r7, r2
 8020334:	785c      	ldrb	r4, [r3, #1]
 8020336:	781b      	ldrb	r3, [r3, #0]
 8020338:	fb00 2005 	mla	r0, r0, r5, r2
 802033c:	fb0b a404 	mla	r4, fp, r4, sl
 8020340:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020344:	9b02      	ldr	r3, [sp, #8]
 8020346:	fb11 fa08 	smulbb	sl, r1, r8
 802034a:	fa1f fc8c 	uxth.w	ip, ip
 802034e:	fb13 f808 	smulbb	r8, r3, r8
 8020352:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020356:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802035a:	fb04 a40e 	mla	r4, r4, lr, sl
 802035e:	f10c 0301 	add.w	r3, ip, #1
 8020362:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020366:	fa1f fe8e 	uxth.w	lr, lr
 802036a:	b2a4      	uxth	r4, r4
 802036c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020370:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020374:	f104 0a01 	add.w	sl, r4, #1
 8020378:	f10e 0c01 	add.w	ip, lr, #1
 802037c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020380:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020384:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020388:	0964      	lsrs	r4, r4, #5
 802038a:	ea4c 0c03 	orr.w	ip, ip, r3
 802038e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020392:	9b03      	ldr	r3, [sp, #12]
 8020394:	ea4c 0c04 	orr.w	ip, ip, r4
 8020398:	f8a3 c000 	strh.w	ip, [r3]
 802039c:	b007      	add	sp, #28
 802039e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203a2:	af05      	add	r7, sp, #20
 80203a4:	e756      	b.n	8020254 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80203a6:	ad05      	add	r5, sp, #20
 80203a8:	462f      	mov	r7, r5
 80203aa:	e761      	b.n	8020270 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80203ac:	ad05      	add	r5, sp, #20
 80203ae:	e75f      	b.n	8020270 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80203b0:	ae05      	add	r6, sp, #20
 80203b2:	e772      	b.n	802029a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80203b4:	ab05      	add	r3, sp, #20
 80203b6:	461e      	mov	r6, r3
 80203b8:	e77e      	b.n	80202b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80203ba:	ab05      	add	r3, sp, #20
 80203bc:	e77c      	b.n	80202b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080203be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80203be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203c2:	b095      	sub	sp, #84	; 0x54
 80203c4:	9212      	str	r2, [sp, #72]	; 0x48
 80203c6:	9309      	str	r3, [sp, #36]	; 0x24
 80203c8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80203ca:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80203ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80203d0:	910e      	str	r1, [sp, #56]	; 0x38
 80203d2:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80203d6:	9013      	str	r0, [sp, #76]	; 0x4c
 80203d8:	6850      	ldr	r0, [r2, #4]
 80203da:	6812      	ldr	r2, [r2, #0]
 80203dc:	fb00 1303 	mla	r3, r0, r3, r1
 80203e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80203e4:	930a      	str	r3, [sp, #40]	; 0x28
 80203e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80203e8:	681b      	ldr	r3, [r3, #0]
 80203ea:	930d      	str	r3, [sp, #52]	; 0x34
 80203ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80203ee:	685c      	ldr	r4, [r3, #4]
 80203f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80203f2:	43db      	mvns	r3, r3
 80203f4:	b2db      	uxtb	r3, r3
 80203f6:	3404      	adds	r4, #4
 80203f8:	930b      	str	r3, [sp, #44]	; 0x2c
 80203fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80203fc:	2b00      	cmp	r3, #0
 80203fe:	dc03      	bgt.n	8020408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020400:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020402:	2b00      	cmp	r3, #0
 8020404:	f340 8255 	ble.w	80208b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020408:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802040a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802040e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020412:	1e48      	subs	r0, r1, #1
 8020414:	1e55      	subs	r5, r2, #1
 8020416:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020418:	2b00      	cmp	r3, #0
 802041a:	f340 80f9 	ble.w	8020610 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802041e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8020420:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020422:	1436      	asrs	r6, r6, #16
 8020424:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020428:	d406      	bmi.n	8020438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802042a:	4286      	cmp	r6, r0
 802042c:	da04      	bge.n	8020438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802042e:	2b00      	cmp	r3, #0
 8020430:	db02      	blt.n	8020438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020432:	42ab      	cmp	r3, r5
 8020434:	f2c0 80ed 	blt.w	8020612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8020438:	3601      	adds	r6, #1
 802043a:	f100 80da 	bmi.w	80205f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802043e:	42b1      	cmp	r1, r6
 8020440:	f2c0 80d7 	blt.w	80205f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020444:	3301      	adds	r3, #1
 8020446:	f100 80d4 	bmi.w	80205f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802044a:	429a      	cmp	r2, r3
 802044c:	f2c0 80d1 	blt.w	80205f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020450:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020452:	9311      	str	r3, [sp, #68]	; 0x44
 8020454:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020456:	930c      	str	r3, [sp, #48]	; 0x30
 8020458:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802045a:	2b00      	cmp	r3, #0
 802045c:	f340 80fa 	ble.w	8020654 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8020460:	9826      	ldr	r0, [sp, #152]	; 0x98
 8020462:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020464:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020466:	68c6      	ldr	r6, [r0, #12]
 8020468:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802046a:	141d      	asrs	r5, r3, #16
 802046c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020470:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020472:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020474:	1400      	asrs	r0, r0, #16
 8020476:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802047a:	6892      	ldr	r2, [r2, #8]
 802047c:	f100 813e 	bmi.w	80206fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020480:	1e57      	subs	r7, r2, #1
 8020482:	42b8      	cmp	r0, r7
 8020484:	f280 813a 	bge.w	80206fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020488:	2d00      	cmp	r5, #0
 802048a:	f2c0 8137 	blt.w	80206fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802048e:	1e77      	subs	r7, r6, #1
 8020490:	42bd      	cmp	r5, r7
 8020492:	f280 8133 	bge.w	80206fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020496:	b212      	sxth	r2, r2
 8020498:	fb05 0002 	mla	r0, r5, r2, r0
 802049c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802049e:	f815 a000 	ldrb.w	sl, [r5, r0]
 80204a2:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80204a6:	182e      	adds	r6, r5, r0
 80204a8:	eb04 050a 	add.w	r5, r4, sl
 80204ac:	2b00      	cmp	r3, #0
 80204ae:	f000 8117 	beq.w	80206e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80204b2:	f896 c001 	ldrb.w	ip, [r6, #1]
 80204b6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80204ba:	44a4      	add	ip, r4
 80204bc:	2900      	cmp	r1, #0
 80204be:	f000 8117 	beq.w	80206f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80204c2:	18b0      	adds	r0, r6, r2
 80204c4:	5cb2      	ldrb	r2, [r6, r2]
 80204c6:	7840      	ldrb	r0, [r0, #1]
 80204c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80204cc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80204d0:	4422      	add	r2, r4
 80204d2:	4420      	add	r0, r4
 80204d4:	b29b      	uxth	r3, r3
 80204d6:	b289      	uxth	r1, r1
 80204d8:	fb03 f901 	mul.w	r9, r3, r1
 80204dc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80204e0:	011b      	lsls	r3, r3, #4
 80204e2:	b289      	uxth	r1, r1
 80204e4:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80204e8:	f895 b002 	ldrb.w	fp, [r5, #2]
 80204ec:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80204ee:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80204f2:	f8b6 e000 	ldrh.w	lr, [r6]
 80204f6:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80204fa:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80204fe:	eba3 0309 	sub.w	r3, r3, r9
 8020502:	b29b      	uxth	r3, r3
 8020504:	eba8 0801 	sub.w	r8, r8, r1
 8020508:	fa1f f888 	uxth.w	r8, r8
 802050c:	435f      	muls	r7, r3
 802050e:	fb08 770b 	mla	r7, r8, fp, r7
 8020512:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020516:	9310      	str	r3, [sp, #64]	; 0x40
 8020518:	fb01 770b 	mla	r7, r1, fp, r7
 802051c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020520:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020522:	fb09 770b 	mla	r7, r9, fp, r7
 8020526:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 802052a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802052e:	fb1b fb03 	smulbb	fp, fp, r3
 8020532:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020536:	fb07 b706 	mla	r7, r7, r6, fp
 802053a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802053c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020540:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020544:	f89c c000 	ldrb.w	ip, [ip]
 8020548:	435d      	muls	r5, r3
 802054a:	fb08 550b 	mla	r5, r8, fp, r5
 802054e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020552:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020554:	fb01 550b 	mla	r5, r1, fp, r5
 8020558:	f890 b001 	ldrb.w	fp, [r0, #1]
 802055c:	fb09 550b 	mla	r5, r9, fp, r5
 8020560:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020564:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020568:	fb1b fb03 	smulbb	fp, fp, r3
 802056c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802056e:	fb03 f30c 	mul.w	r3, r3, ip
 8020572:	f892 c000 	ldrb.w	ip, [r2]
 8020576:	fb08 330a 	mla	r3, r8, sl, r3
 802057a:	fb01 330c 	mla	r3, r1, ip, r3
 802057e:	f890 c000 	ldrb.w	ip, [r0]
 8020582:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020586:	fb09 3c0c 	mla	ip, r9, ip, r3
 802058a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802058c:	fa5f fe8e 	uxtb.w	lr, lr
 8020590:	b2bf      	uxth	r7, r7
 8020592:	fb1e fe03 	smulbb	lr, lr, r3
 8020596:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802059a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802059e:	fb05 b506 	mla	r5, r5, r6, fp
 80205a2:	1c7b      	adds	r3, r7, #1
 80205a4:	fb0c e606 	mla	r6, ip, r6, lr
 80205a8:	b2ad      	uxth	r5, r5
 80205aa:	b2b6      	uxth	r6, r6
 80205ac:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80205b0:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80205b4:	f105 0b01 	add.w	fp, r5, #1
 80205b8:	1c77      	adds	r7, r6, #1
 80205ba:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80205be:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80205c2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80205c6:	096d      	lsrs	r5, r5, #5
 80205c8:	431f      	orrs	r7, r3
 80205ca:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80205ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80205d0:	433d      	orrs	r5, r7
 80205d2:	801d      	strh	r5, [r3, #0]
 80205d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80205d6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80205d8:	3302      	adds	r3, #2
 80205da:	930c      	str	r3, [sp, #48]	; 0x30
 80205dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80205de:	4413      	add	r3, r2
 80205e0:	931f      	str	r3, [sp, #124]	; 0x7c
 80205e2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80205e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80205e6:	4413      	add	r3, r2
 80205e8:	9320      	str	r3, [sp, #128]	; 0x80
 80205ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80205ec:	3b01      	subs	r3, #1
 80205ee:	9311      	str	r3, [sp, #68]	; 0x44
 80205f0:	e732      	b.n	8020458 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80205f2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80205f4:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80205f6:	4433      	add	r3, r6
 80205f8:	931f      	str	r3, [sp, #124]	; 0x7c
 80205fa:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80205fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80205fe:	4433      	add	r3, r6
 8020600:	9320      	str	r3, [sp, #128]	; 0x80
 8020602:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020604:	3b01      	subs	r3, #1
 8020606:	9309      	str	r3, [sp, #36]	; 0x24
 8020608:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802060a:	3302      	adds	r3, #2
 802060c:	930a      	str	r3, [sp, #40]	; 0x28
 802060e:	e702      	b.n	8020416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020610:	d027      	beq.n	8020662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8020612:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020614:	9821      	ldr	r0, [sp, #132]	; 0x84
 8020616:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8020618:	3b01      	subs	r3, #1
 802061a:	fb00 5003 	mla	r0, r0, r3, r5
 802061e:	1400      	asrs	r0, r0, #16
 8020620:	f53f af16 	bmi.w	8020450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020624:	3901      	subs	r1, #1
 8020626:	4288      	cmp	r0, r1
 8020628:	f6bf af12 	bge.w	8020450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802062c:	9922      	ldr	r1, [sp, #136]	; 0x88
 802062e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020630:	fb01 0303 	mla	r3, r1, r3, r0
 8020634:	141b      	asrs	r3, r3, #16
 8020636:	f53f af0b 	bmi.w	8020450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802063a:	3a01      	subs	r2, #1
 802063c:	4293      	cmp	r3, r2
 802063e:	f6bf af07 	bge.w	8020450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020642:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020644:	9311      	str	r3, [sp, #68]	; 0x44
 8020646:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 802064a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802064c:	930c      	str	r3, [sp, #48]	; 0x30
 802064e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020650:	2b00      	cmp	r3, #0
 8020652:	dc70      	bgt.n	8020736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020654:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020656:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020658:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802065c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020660:	930a      	str	r3, [sp, #40]	; 0x28
 8020662:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020664:	2b00      	cmp	r3, #0
 8020666:	f340 8124 	ble.w	80208b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 802066a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802066e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020672:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020676:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020678:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802067c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020680:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020684:	eef0 6a62 	vmov.f32	s13, s5
 8020688:	ee61 7a27 	vmul.f32	s15, s2, s15
 802068c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020690:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020694:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8020698:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802069c:	eef0 6a43 	vmov.f32	s13, s6
 80206a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80206a4:	ee12 2a90 	vmov	r2, s5
 80206a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80206ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80206b0:	ee13 2a10 	vmov	r2, s6
 80206b4:	9321      	str	r3, [sp, #132]	; 0x84
 80206b6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80206b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80206bc:	9322      	str	r3, [sp, #136]	; 0x88
 80206be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80206c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80206c2:	3b01      	subs	r3, #1
 80206c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80206c8:	930e      	str	r3, [sp, #56]	; 0x38
 80206ca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80206cc:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80206d0:	bf08      	it	eq
 80206d2:	4613      	moveq	r3, r2
 80206d4:	9309      	str	r3, [sp, #36]	; 0x24
 80206d6:	eeb0 3a67 	vmov.f32	s6, s15
 80206da:	eef0 2a47 	vmov.f32	s5, s14
 80206de:	e68c      	b.n	80203fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80206e0:	b149      	cbz	r1, 80206f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80206e2:	5cb2      	ldrb	r2, [r6, r2]
 80206e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80206e8:	4422      	add	r2, r4
 80206ea:	4628      	mov	r0, r5
 80206ec:	46ac      	mov	ip, r5
 80206ee:	e6f1      	b.n	80204d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80206f0:	4628      	mov	r0, r5
 80206f2:	462a      	mov	r2, r5
 80206f4:	e6ee      	b.n	80204d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80206f6:	4628      	mov	r0, r5
 80206f8:	462a      	mov	r2, r5
 80206fa:	e7f7      	b.n	80206ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80206fc:	1c47      	adds	r7, r0, #1
 80206fe:	f53f af69 	bmi.w	80205d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020702:	42ba      	cmp	r2, r7
 8020704:	f6ff af66 	blt.w	80205d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020708:	1c6f      	adds	r7, r5, #1
 802070a:	f53f af63 	bmi.w	80205d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802070e:	42be      	cmp	r6, r7
 8020710:	f6ff af60 	blt.w	80205d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020714:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020716:	9002      	str	r0, [sp, #8]
 8020718:	b236      	sxth	r6, r6
 802071a:	b212      	sxth	r2, r2
 802071c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8020720:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8020724:	9200      	str	r2, [sp, #0]
 8020726:	9601      	str	r6, [sp, #4]
 8020728:	4623      	mov	r3, r4
 802072a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802072e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020730:	f7ff fd59 	bl	80201e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8020734:	e74e      	b.n	80205d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020736:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020738:	9820      	ldr	r0, [sp, #128]	; 0x80
 802073a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 802073c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802073e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020742:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020744:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020748:	142d      	asrs	r5, r5, #16
 802074a:	1400      	asrs	r0, r0, #16
 802074c:	fb02 5000 	mla	r0, r2, r0, r5
 8020750:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020752:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020756:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802075a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802075e:	182e      	adds	r6, r5, r0
 8020760:	eb04 0509 	add.w	r5, r4, r9
 8020764:	2b00      	cmp	r3, #0
 8020766:	f000 8096 	beq.w	8020896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802076a:	7877      	ldrb	r7, [r6, #1]
 802076c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020770:	4427      	add	r7, r4
 8020772:	2900      	cmp	r1, #0
 8020774:	f000 8097 	beq.w	80208a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020778:	18b0      	adds	r0, r6, r2
 802077a:	5cb2      	ldrb	r2, [r6, r2]
 802077c:	7840      	ldrb	r0, [r0, #1]
 802077e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020782:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020786:	4422      	add	r2, r4
 8020788:	4420      	add	r0, r4
 802078a:	b29b      	uxth	r3, r3
 802078c:	b289      	uxth	r1, r1
 802078e:	fb03 f801 	mul.w	r8, r3, r1
 8020792:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020794:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020798:	f8b6 c000 	ldrh.w	ip, [r6]
 802079c:	78be      	ldrb	r6, [r7, #2]
 802079e:	f814 9009 	ldrb.w	r9, [r4, r9]
 80207a2:	011b      	lsls	r3, r3, #4
 80207a4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80207a8:	b289      	uxth	r1, r1
 80207aa:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80207ae:	eba3 0308 	sub.w	r3, r3, r8
 80207b2:	b29b      	uxth	r3, r3
 80207b4:	ebae 0e01 	sub.w	lr, lr, r1
 80207b8:	fa1f fe8e 	uxth.w	lr, lr
 80207bc:	435e      	muls	r6, r3
 80207be:	fb0e 660b 	mla	r6, lr, fp, r6
 80207c2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80207c6:	9310      	str	r3, [sp, #64]	; 0x40
 80207c8:	fb01 660b 	mla	r6, r1, fp, r6
 80207cc:	f890 b002 	ldrb.w	fp, [r0, #2]
 80207d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80207d2:	fb08 660b 	mla	r6, r8, fp, r6
 80207d6:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80207da:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80207de:	fb1b fb03 	smulbb	fp, fp, r3
 80207e2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80207e6:	fb06 b60a 	mla	r6, r6, sl, fp
 80207ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80207ec:	f895 b001 	ldrb.w	fp, [r5, #1]
 80207f0:	787d      	ldrb	r5, [r7, #1]
 80207f2:	783f      	ldrb	r7, [r7, #0]
 80207f4:	435d      	muls	r5, r3
 80207f6:	fb0e 550b 	mla	r5, lr, fp, r5
 80207fa:	f892 b001 	ldrb.w	fp, [r2, #1]
 80207fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020800:	fb01 550b 	mla	r5, r1, fp, r5
 8020804:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020808:	fb08 550b 	mla	r5, r8, fp, r5
 802080c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8020810:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020814:	fb1b fb03 	smulbb	fp, fp, r3
 8020818:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802081a:	437b      	muls	r3, r7
 802081c:	7817      	ldrb	r7, [r2, #0]
 802081e:	fb0e 3309 	mla	r3, lr, r9, r3
 8020822:	fb01 3307 	mla	r3, r1, r7, r3
 8020826:	7807      	ldrb	r7, [r0, #0]
 8020828:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802082c:	fb08 3707 	mla	r7, r8, r7, r3
 8020830:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020832:	fa5f fc8c 	uxtb.w	ip, ip
 8020836:	fb1c fc03 	smulbb	ip, ip, r3
 802083a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802083e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020842:	fb05 b50a 	mla	r5, r5, sl, fp
 8020846:	fb07 c70a 	mla	r7, r7, sl, ip
 802084a:	b2b6      	uxth	r6, r6
 802084c:	b2ad      	uxth	r5, r5
 802084e:	b2bf      	uxth	r7, r7
 8020850:	1c73      	adds	r3, r6, #1
 8020852:	1c7a      	adds	r2, r7, #1
 8020854:	f105 0b01 	add.w	fp, r5, #1
 8020858:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802085c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020860:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020864:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020868:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 802086c:	096d      	lsrs	r5, r5, #5
 802086e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020870:	4316      	orrs	r6, r2
 8020872:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020876:	432e      	orrs	r6, r5
 8020878:	f823 6b02 	strh.w	r6, [r3], #2
 802087c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802087e:	930c      	str	r3, [sp, #48]	; 0x30
 8020880:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020882:	4413      	add	r3, r2
 8020884:	931f      	str	r3, [sp, #124]	; 0x7c
 8020886:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020888:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802088a:	4413      	add	r3, r2
 802088c:	9320      	str	r3, [sp, #128]	; 0x80
 802088e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020890:	3b01      	subs	r3, #1
 8020892:	9311      	str	r3, [sp, #68]	; 0x44
 8020894:	e6db      	b.n	802064e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8020896:	b149      	cbz	r1, 80208ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020898:	5cb2      	ldrb	r2, [r6, r2]
 802089a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802089e:	4422      	add	r2, r4
 80208a0:	4628      	mov	r0, r5
 80208a2:	462f      	mov	r7, r5
 80208a4:	e771      	b.n	802078a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80208a6:	4628      	mov	r0, r5
 80208a8:	462a      	mov	r2, r5
 80208aa:	e76e      	b.n	802078a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80208ac:	4628      	mov	r0, r5
 80208ae:	462a      	mov	r2, r5
 80208b0:	e7f7      	b.n	80208a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80208b2:	b015      	add	sp, #84	; 0x54
 80208b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080208b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80208b8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80208bc:	880f      	ldrh	r7, [r1, #0]
 80208be:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80208c2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80208c6:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80208ca:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80208ce:	023c      	lsls	r4, r7, #8
 80208d0:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 80208d4:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 80208d8:	017c      	lsls	r4, r7, #5
 80208da:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 80208de:	00ff      	lsls	r7, r7, #3
 80208e0:	ea4b 0404 	orr.w	r4, fp, r4
 80208e4:	b2ff      	uxtb	r7, r7
 80208e6:	fb05 ca0e 	mla	sl, r5, lr, ip
 80208ea:	4327      	orrs	r7, r4
 80208ec:	2d00      	cmp	r5, #0
 80208ee:	eb02 080a 	add.w	r8, r2, sl
 80208f2:	9701      	str	r7, [sp, #4]
 80208f4:	db7e      	blt.n	80209f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80208f6:	45a9      	cmp	r9, r5
 80208f8:	dd7c      	ble.n	80209f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80208fa:	f1bc 0f00 	cmp.w	ip, #0
 80208fe:	db77      	blt.n	80209f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020900:	45e6      	cmp	lr, ip
 8020902:	dd75      	ble.n	80209f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020904:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020908:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802090c:	441f      	add	r7, r3
 802090e:	f11c 0201 	adds.w	r2, ip, #1
 8020912:	d472      	bmi.n	80209fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020914:	4596      	cmp	lr, r2
 8020916:	dd70      	ble.n	80209fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020918:	2800      	cmp	r0, #0
 802091a:	d06e      	beq.n	80209fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 802091c:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020920:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020924:	441c      	add	r4, r3
 8020926:	3501      	adds	r5, #1
 8020928:	d46b      	bmi.n	8020a02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802092a:	45a9      	cmp	r9, r5
 802092c:	dd69      	ble.n	8020a02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802092e:	2e00      	cmp	r6, #0
 8020930:	d067      	beq.n	8020a02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020932:	f1bc 0f00 	cmp.w	ip, #0
 8020936:	db62      	blt.n	80209fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020938:	45e6      	cmp	lr, ip
 802093a:	dd60      	ble.n	80209fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 802093c:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020940:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020944:	441d      	add	r5, r3
 8020946:	f11c 0201 	adds.w	r2, ip, #1
 802094a:	d45d      	bmi.n	8020a08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802094c:	4596      	cmp	lr, r2
 802094e:	dd5b      	ble.n	8020a08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020950:	2800      	cmp	r0, #0
 8020952:	d059      	beq.n	8020a08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020954:	44c6      	add	lr, r8
 8020956:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802095a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802095e:	4413      	add	r3, r2
 8020960:	b280      	uxth	r0, r0
 8020962:	b2b2      	uxth	r2, r6
 8020964:	fb00 f602 	mul.w	r6, r0, r2
 8020968:	0100      	lsls	r0, r0, #4
 802096a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802096e:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020972:	1b80      	subs	r0, r0, r6
 8020974:	fa1f fc82 	uxth.w	ip, r2
 8020978:	b282      	uxth	r2, r0
 802097a:	78a0      	ldrb	r0, [r4, #2]
 802097c:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020980:	f897 9000 	ldrb.w	r9, [r7]
 8020984:	787f      	ldrb	r7, [r7, #1]
 8020986:	eba8 080c 	sub.w	r8, r8, ip
 802098a:	fa1f f888 	uxth.w	r8, r8
 802098e:	4350      	muls	r0, r2
 8020990:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020994:	78a8      	ldrb	r0, [r5, #2]
 8020996:	fb0c e000 	mla	r0, ip, r0, lr
 802099a:	f893 e002 	ldrb.w	lr, [r3, #2]
 802099e:	fb06 0e0e 	mla	lr, r6, lr, r0
 80209a2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80209a6:	f894 e000 	ldrb.w	lr, [r4]
 80209aa:	fb02 fe0e 	mul.w	lr, r2, lr
 80209ae:	fb08 e909 	mla	r9, r8, r9, lr
 80209b2:	f895 e000 	ldrb.w	lr, [r5]
 80209b6:	fb0c 990e 	mla	r9, ip, lr, r9
 80209ba:	f893 e000 	ldrb.w	lr, [r3]
 80209be:	785b      	ldrb	r3, [r3, #1]
 80209c0:	fb06 9e0e 	mla	lr, r6, lr, r9
 80209c4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80209c8:	ea4e 0e00 	orr.w	lr, lr, r0
 80209cc:	7860      	ldrb	r0, [r4, #1]
 80209ce:	4350      	muls	r0, r2
 80209d0:	786a      	ldrb	r2, [r5, #1]
 80209d2:	fb08 0007 	mla	r0, r8, r7, r0
 80209d6:	fb0c 0202 	mla	r2, ip, r2, r0
 80209da:	fb06 2303 	mla	r3, r6, r3, r2
 80209de:	095b      	lsrs	r3, r3, #5
 80209e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80209e4:	ea4e 0303 	orr.w	r3, lr, r3
 80209e8:	800b      	strh	r3, [r1, #0]
 80209ea:	b003      	add	sp, #12
 80209ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209f0:	af01      	add	r7, sp, #4
 80209f2:	e78c      	b.n	802090e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80209f4:	ac01      	add	r4, sp, #4
 80209f6:	4627      	mov	r7, r4
 80209f8:	e795      	b.n	8020926 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80209fa:	ac01      	add	r4, sp, #4
 80209fc:	e793      	b.n	8020926 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80209fe:	ad01      	add	r5, sp, #4
 8020a00:	e7a1      	b.n	8020946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020a02:	ab01      	add	r3, sp, #4
 8020a04:	461d      	mov	r5, r3
 8020a06:	e7ab      	b.n	8020960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020a08:	ab01      	add	r3, sp, #4
 8020a0a:	e7a9      	b.n	8020960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020a0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a10:	b08f      	sub	sp, #60	; 0x3c
 8020a12:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020a16:	920c      	str	r2, [sp, #48]	; 0x30
 8020a18:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8020a1a:	910a      	str	r1, [sp, #40]	; 0x28
 8020a1c:	9306      	str	r3, [sp, #24]
 8020a1e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020a22:	900d      	str	r0, [sp, #52]	; 0x34
 8020a24:	6850      	ldr	r0, [r2, #4]
 8020a26:	6812      	ldr	r2, [r2, #0]
 8020a28:	fb00 1303 	mla	r3, r0, r3, r1
 8020a2c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020a30:	9307      	str	r3, [sp, #28]
 8020a32:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a34:	681b      	ldr	r3, [r3, #0]
 8020a36:	9308      	str	r3, [sp, #32]
 8020a38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a3a:	685c      	ldr	r4, [r3, #4]
 8020a3c:	3404      	adds	r4, #4
 8020a3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020a40:	2b00      	cmp	r3, #0
 8020a42:	dc03      	bgt.n	8020a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020a44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020a46:	2b00      	cmp	r3, #0
 8020a48:	f340 81d6 	ble.w	8020df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020a4c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a4e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a52:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020a56:	1e48      	subs	r0, r1, #1
 8020a58:	1e56      	subs	r6, r2, #1
 8020a5a:	9b06      	ldr	r3, [sp, #24]
 8020a5c:	2b00      	cmp	r3, #0
 8020a5e:	f340 80b7 	ble.w	8020bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020a62:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020a66:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020a6a:	d406      	bmi.n	8020a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a6c:	4287      	cmp	r7, r0
 8020a6e:	da04      	bge.n	8020a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a70:	2b00      	cmp	r3, #0
 8020a72:	db02      	blt.n	8020a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a74:	42b3      	cmp	r3, r6
 8020a76:	f2c0 80ac 	blt.w	8020bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020a7a:	3701      	adds	r7, #1
 8020a7c:	f100 809d 	bmi.w	8020bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020a80:	42b9      	cmp	r1, r7
 8020a82:	f2c0 809a 	blt.w	8020bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020a86:	3301      	adds	r3, #1
 8020a88:	f100 8097 	bmi.w	8020bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020a8c:	429a      	cmp	r2, r3
 8020a8e:	f2c0 8094 	blt.w	8020bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020a92:	9b06      	ldr	r3, [sp, #24]
 8020a94:	930b      	str	r3, [sp, #44]	; 0x2c
 8020a96:	9b07      	ldr	r3, [sp, #28]
 8020a98:	9309      	str	r3, [sp, #36]	; 0x24
 8020a9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020a9c:	2b00      	cmp	r3, #0
 8020a9e:	f340 80b5 	ble.w	8020c0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020aa2:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020aa4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020aa6:	68c7      	ldr	r7, [r0, #12]
 8020aa8:	6892      	ldr	r2, [r2, #8]
 8020aaa:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020aae:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020ab2:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020ab6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020aba:	f100 80fb 	bmi.w	8020cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020abe:	f102 3cff 	add.w	ip, r2, #4294967295
 8020ac2:	4560      	cmp	r0, ip
 8020ac4:	f280 80f6 	bge.w	8020cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ac8:	2e00      	cmp	r6, #0
 8020aca:	f2c0 80f3 	blt.w	8020cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ace:	f107 3cff 	add.w	ip, r7, #4294967295
 8020ad2:	4566      	cmp	r6, ip
 8020ad4:	f280 80ee 	bge.w	8020cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ad8:	b212      	sxth	r2, r2
 8020ada:	fb06 0002 	mla	r0, r6, r2, r0
 8020ade:	9e08      	ldr	r6, [sp, #32]
 8020ae0:	1837      	adds	r7, r6, r0
 8020ae2:	5c30      	ldrb	r0, [r6, r0]
 8020ae4:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020ae8:	eb04 0c08 	add.w	ip, r4, r8
 8020aec:	2b00      	cmp	r3, #0
 8020aee:	f000 80d3 	beq.w	8020c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020af2:	787e      	ldrb	r6, [r7, #1]
 8020af4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020af8:	4426      	add	r6, r4
 8020afa:	2900      	cmp	r1, #0
 8020afc:	f000 80d4 	beq.w	8020ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020b00:	18b8      	adds	r0, r7, r2
 8020b02:	5cba      	ldrb	r2, [r7, r2]
 8020b04:	7840      	ldrb	r0, [r0, #1]
 8020b06:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020b0a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020b0e:	4422      	add	r2, r4
 8020b10:	4420      	add	r0, r4
 8020b12:	b29b      	uxth	r3, r3
 8020b14:	b289      	uxth	r1, r1
 8020b16:	fb03 f901 	mul.w	r9, r3, r1
 8020b1a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020b1e:	011b      	lsls	r3, r3, #4
 8020b20:	b289      	uxth	r1, r1
 8020b22:	78b7      	ldrb	r7, [r6, #2]
 8020b24:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020b28:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020b2c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020b30:	eba3 0309 	sub.w	r3, r3, r9
 8020b34:	b29b      	uxth	r3, r3
 8020b36:	ebae 0e01 	sub.w	lr, lr, r1
 8020b3a:	fa1f fe8e 	uxth.w	lr, lr
 8020b3e:	435f      	muls	r7, r3
 8020b40:	fb0e 770a 	mla	r7, lr, sl, r7
 8020b44:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020b48:	fb01 770a 	mla	r7, r1, sl, r7
 8020b4c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020b50:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020b54:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020b58:	f896 8000 	ldrb.w	r8, [r6]
 8020b5c:	7876      	ldrb	r6, [r6, #1]
 8020b5e:	fb03 f808 	mul.w	r8, r3, r8
 8020b62:	fb0e 8807 	mla	r8, lr, r7, r8
 8020b66:	7817      	ldrb	r7, [r2, #0]
 8020b68:	fb01 8807 	mla	r8, r1, r7, r8
 8020b6c:	7807      	ldrb	r7, [r0, #0]
 8020b6e:	fb09 8707 	mla	r7, r9, r7, r8
 8020b72:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020b76:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020b7a:	ea47 070a 	orr.w	r7, r7, sl
 8020b7e:	4373      	muls	r3, r6
 8020b80:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020b84:	fb0e 330c 	mla	r3, lr, ip, r3
 8020b88:	fb01 310a 	mla	r1, r1, sl, r3
 8020b8c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020b90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020b92:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020b96:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020b9a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020b9e:	ea47 070a 	orr.w	r7, r7, sl
 8020ba2:	801f      	strh	r7, [r3, #0]
 8020ba4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ba6:	3302      	adds	r3, #2
 8020ba8:	9309      	str	r3, [sp, #36]	; 0x24
 8020baa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020bac:	449b      	add	fp, r3
 8020bae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020bb0:	441d      	add	r5, r3
 8020bb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020bb4:	3b01      	subs	r3, #1
 8020bb6:	930b      	str	r3, [sp, #44]	; 0x2c
 8020bb8:	e76f      	b.n	8020a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020bba:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020bbc:	449b      	add	fp, r3
 8020bbe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020bc0:	441d      	add	r5, r3
 8020bc2:	9b06      	ldr	r3, [sp, #24]
 8020bc4:	3b01      	subs	r3, #1
 8020bc6:	9306      	str	r3, [sp, #24]
 8020bc8:	9b07      	ldr	r3, [sp, #28]
 8020bca:	3302      	adds	r3, #2
 8020bcc:	9307      	str	r3, [sp, #28]
 8020bce:	e744      	b.n	8020a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020bd0:	d023      	beq.n	8020c1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020bd2:	9b06      	ldr	r3, [sp, #24]
 8020bd4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020bd6:	3b01      	subs	r3, #1
 8020bd8:	fb00 b003 	mla	r0, r0, r3, fp
 8020bdc:	1400      	asrs	r0, r0, #16
 8020bde:	f53f af58 	bmi.w	8020a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020be2:	3901      	subs	r1, #1
 8020be4:	4288      	cmp	r0, r1
 8020be6:	f6bf af54 	bge.w	8020a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020bea:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020bec:	fb01 5303 	mla	r3, r1, r3, r5
 8020bf0:	141b      	asrs	r3, r3, #16
 8020bf2:	f53f af4e 	bmi.w	8020a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020bf6:	3a01      	subs	r2, #1
 8020bf8:	4293      	cmp	r3, r2
 8020bfa:	f6bf af4a 	bge.w	8020a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020bfe:	9b06      	ldr	r3, [sp, #24]
 8020c00:	9309      	str	r3, [sp, #36]	; 0x24
 8020c02:	9b07      	ldr	r3, [sp, #28]
 8020c04:	930b      	str	r3, [sp, #44]	; 0x2c
 8020c06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c08:	2b00      	cmp	r3, #0
 8020c0a:	dc70      	bgt.n	8020cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020c0c:	9b06      	ldr	r3, [sp, #24]
 8020c0e:	9a07      	ldr	r2, [sp, #28]
 8020c10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020c14:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020c18:	9307      	str	r3, [sp, #28]
 8020c1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020c1c:	2b00      	cmp	r3, #0
 8020c1e:	f340 80eb 	ble.w	8020df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020c22:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020c26:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020c2a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020c2e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020c30:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020c34:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020c38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020c3c:	eef0 6a62 	vmov.f32	s13, s5
 8020c40:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020c44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c48:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020c4c:	ee16 ba90 	vmov	fp, s13
 8020c50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020c54:	eef0 6a43 	vmov.f32	s13, s6
 8020c58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020c5c:	ee12 2a90 	vmov	r2, s5
 8020c60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020c64:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c68:	ee13 2a10 	vmov	r2, s6
 8020c6c:	931b      	str	r3, [sp, #108]	; 0x6c
 8020c6e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020c70:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c74:	931c      	str	r3, [sp, #112]	; 0x70
 8020c76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020c78:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020c7a:	3b01      	subs	r3, #1
 8020c7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c80:	930a      	str	r3, [sp, #40]	; 0x28
 8020c82:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020c84:	bf08      	it	eq
 8020c86:	4613      	moveq	r3, r2
 8020c88:	ee16 5a90 	vmov	r5, s13
 8020c8c:	9306      	str	r3, [sp, #24]
 8020c8e:	eeb0 3a67 	vmov.f32	s6, s15
 8020c92:	eef0 2a47 	vmov.f32	s5, s14
 8020c96:	e6d2      	b.n	8020a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020c98:	b149      	cbz	r1, 8020cae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8020c9a:	5cba      	ldrb	r2, [r7, r2]
 8020c9c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020ca0:	4422      	add	r2, r4
 8020ca2:	4660      	mov	r0, ip
 8020ca4:	4666      	mov	r6, ip
 8020ca6:	e734      	b.n	8020b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020ca8:	4660      	mov	r0, ip
 8020caa:	4662      	mov	r2, ip
 8020cac:	e731      	b.n	8020b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020cae:	4660      	mov	r0, ip
 8020cb0:	4662      	mov	r2, ip
 8020cb2:	e7f7      	b.n	8020ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020cb4:	f110 0c01 	adds.w	ip, r0, #1
 8020cb8:	f53f af74 	bmi.w	8020ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020cbc:	4562      	cmp	r2, ip
 8020cbe:	f6ff af71 	blt.w	8020ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020cc2:	f116 0c01 	adds.w	ip, r6, #1
 8020cc6:	f53f af6d 	bmi.w	8020ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020cca:	4567      	cmp	r7, ip
 8020ccc:	f6ff af6a 	blt.w	8020ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020cd0:	b23f      	sxth	r7, r7
 8020cd2:	b212      	sxth	r2, r2
 8020cd4:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020cd8:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020cdc:	9200      	str	r2, [sp, #0]
 8020cde:	9701      	str	r7, [sp, #4]
 8020ce0:	4623      	mov	r3, r4
 8020ce2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020ce6:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020ce8:	f7ff fde6 	bl	80208b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020cec:	e75a      	b.n	8020ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020cee:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020cf0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020cf4:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020cf8:	1428      	asrs	r0, r5, #16
 8020cfa:	fb02 6000 	mla	r0, r2, r0, r6
 8020cfe:	9e08      	ldr	r6, [sp, #32]
 8020d00:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020d04:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020d08:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020d0c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020d10:	1837      	adds	r7, r6, r0
 8020d12:	eb04 0c08 	add.w	ip, r4, r8
 8020d16:	2b00      	cmp	r3, #0
 8020d18:	d060      	beq.n	8020ddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020d1a:	787e      	ldrb	r6, [r7, #1]
 8020d1c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020d20:	4426      	add	r6, r4
 8020d22:	2900      	cmp	r1, #0
 8020d24:	d062      	beq.n	8020dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020d26:	18b8      	adds	r0, r7, r2
 8020d28:	5cba      	ldrb	r2, [r7, r2]
 8020d2a:	7840      	ldrb	r0, [r0, #1]
 8020d2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020d30:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020d34:	4422      	add	r2, r4
 8020d36:	4420      	add	r0, r4
 8020d38:	b29b      	uxth	r3, r3
 8020d3a:	b289      	uxth	r1, r1
 8020d3c:	fb03 f901 	mul.w	r9, r3, r1
 8020d40:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020d44:	011b      	lsls	r3, r3, #4
 8020d46:	b289      	uxth	r1, r1
 8020d48:	78b7      	ldrb	r7, [r6, #2]
 8020d4a:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020d4e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020d52:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020d56:	eba3 0309 	sub.w	r3, r3, r9
 8020d5a:	b29b      	uxth	r3, r3
 8020d5c:	ebae 0e01 	sub.w	lr, lr, r1
 8020d60:	fa1f fe8e 	uxth.w	lr, lr
 8020d64:	435f      	muls	r7, r3
 8020d66:	fb0e 770a 	mla	r7, lr, sl, r7
 8020d6a:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020d6e:	fb01 770a 	mla	r7, r1, sl, r7
 8020d72:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020d76:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020d7a:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020d7e:	f896 8000 	ldrb.w	r8, [r6]
 8020d82:	7876      	ldrb	r6, [r6, #1]
 8020d84:	fb03 f808 	mul.w	r8, r3, r8
 8020d88:	fb0e 8807 	mla	r8, lr, r7, r8
 8020d8c:	7817      	ldrb	r7, [r2, #0]
 8020d8e:	fb01 8807 	mla	r8, r1, r7, r8
 8020d92:	7807      	ldrb	r7, [r0, #0]
 8020d94:	fb09 8707 	mla	r7, r9, r7, r8
 8020d98:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020d9c:	4373      	muls	r3, r6
 8020d9e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020da2:	7856      	ldrb	r6, [r2, #1]
 8020da4:	ea47 070a 	orr.w	r7, r7, sl
 8020da8:	fb0e 330c 	mla	r3, lr, ip, r3
 8020dac:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020db0:	fb01 3306 	mla	r3, r1, r6, r3
 8020db4:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020db8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020dbc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020dbe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020dc2:	ea47 070a 	orr.w	r7, r7, sl
 8020dc6:	f823 7b02 	strh.w	r7, [r3], #2
 8020dca:	930b      	str	r3, [sp, #44]	; 0x2c
 8020dcc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020dce:	449b      	add	fp, r3
 8020dd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020dd2:	441d      	add	r5, r3
 8020dd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020dd6:	3b01      	subs	r3, #1
 8020dd8:	9309      	str	r3, [sp, #36]	; 0x24
 8020dda:	e714      	b.n	8020c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020ddc:	b149      	cbz	r1, 8020df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020dde:	5cba      	ldrb	r2, [r7, r2]
 8020de0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020de4:	4422      	add	r2, r4
 8020de6:	4660      	mov	r0, ip
 8020de8:	4666      	mov	r6, ip
 8020dea:	e7a5      	b.n	8020d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020dec:	4660      	mov	r0, ip
 8020dee:	4662      	mov	r2, ip
 8020df0:	e7a2      	b.n	8020d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020df2:	4660      	mov	r0, ip
 8020df4:	4662      	mov	r2, ip
 8020df6:	e7f7      	b.n	8020de8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020df8:	b00f      	add	sp, #60	; 0x3c
 8020dfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020dfe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8020dfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e02:	b085      	sub	sp, #20
 8020e04:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020e08:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8020e0c:	9102      	str	r1, [sp, #8]
 8020e0e:	2c00      	cmp	r4, #0
 8020e10:	fb04 710c 	mla	r1, r4, ip, r7
 8020e14:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020e18:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8020e1c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020e20:	eb02 0e01 	add.w	lr, r2, r1
 8020e24:	f2c0 8122 	blt.w	802106c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020e28:	45a0      	cmp	r8, r4
 8020e2a:	f340 811f 	ble.w	802106c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020e2e:	2f00      	cmp	r7, #0
 8020e30:	f2c0 811a 	blt.w	8021068 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020e34:	45bc      	cmp	ip, r7
 8020e36:	f340 8117 	ble.w	8021068 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020e3a:	5c52      	ldrb	r2, [r2, r1]
 8020e3c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020e40:	1c7a      	adds	r2, r7, #1
 8020e42:	f100 8116 	bmi.w	8021072 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020e46:	4594      	cmp	ip, r2
 8020e48:	f340 8113 	ble.w	8021072 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020e4c:	2e00      	cmp	r6, #0
 8020e4e:	f000 8112 	beq.w	8021076 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8020e52:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020e56:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020e5a:	3401      	adds	r4, #1
 8020e5c:	f100 810f 	bmi.w	802107e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020e60:	45a0      	cmp	r8, r4
 8020e62:	f340 810c 	ble.w	802107e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020e66:	2800      	cmp	r0, #0
 8020e68:	f000 810c 	beq.w	8021084 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8020e6c:	2f00      	cmp	r7, #0
 8020e6e:	f2c0 8104 	blt.w	802107a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020e72:	45bc      	cmp	ip, r7
 8020e74:	f340 8101 	ble.w	802107a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020e78:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8020e7c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020e80:	3701      	adds	r7, #1
 8020e82:	f100 8102 	bmi.w	802108a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020e86:	45bc      	cmp	ip, r7
 8020e88:	f340 80ff 	ble.w	802108a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020e8c:	2e00      	cmp	r6, #0
 8020e8e:	f000 80fe 	beq.w	802108e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8020e92:	44f4      	add	ip, lr
 8020e94:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020e98:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020e9c:	b2b6      	uxth	r6, r6
 8020e9e:	b280      	uxth	r0, r0
 8020ea0:	fb00 fe06 	mul.w	lr, r0, r6
 8020ea4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020ea8:	0136      	lsls	r6, r6, #4
 8020eaa:	eba6 070e 	sub.w	r7, r6, lr
 8020eae:	b280      	uxth	r0, r0
 8020eb0:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020eb4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020eb8:	b2bf      	uxth	r7, r7
 8020eba:	1a1b      	subs	r3, r3, r0
 8020ebc:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020ec0:	b29b      	uxth	r3, r3
 8020ec2:	fb0a f607 	mul.w	r6, sl, r7
 8020ec6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020eca:	fb0b 6603 	mla	r6, fp, r3, r6
 8020ece:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020ed2:	fb00 6609 	mla	r6, r0, r9, r6
 8020ed6:	fb0e 6608 	mla	r6, lr, r8, r6
 8020eda:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020ede:	9600      	str	r6, [sp, #0]
 8020ee0:	2e00      	cmp	r6, #0
 8020ee2:	f000 80be 	beq.w	8021062 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8020ee6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020eea:	fb0b fc0c 	mul.w	ip, fp, ip
 8020eee:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8020ef2:	fb0b f505 	mul.w	r5, fp, r5
 8020ef6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020efa:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8020efe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020f02:	44dc      	add	ip, fp
 8020f04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f08:	9501      	str	r5, [sp, #4]
 8020f0a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8020f0e:	9503      	str	r5, [sp, #12]
 8020f10:	9d01      	ldr	r5, [sp, #4]
 8020f12:	9e02      	ldr	r6, [sp, #8]
 8020f14:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020f18:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020f1c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8020f20:	fb0a fc0c 	mul.w	ip, sl, ip
 8020f24:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020f28:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020f2c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020f30:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020f34:	4465      	add	r5, ip
 8020f36:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020f3a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020f3e:	fb09 fc0c 	mul.w	ip, r9, ip
 8020f42:	fb09 f904 	mul.w	r9, r9, r4
 8020f46:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8020f4a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020f4e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8020f52:	fb08 f404 	mul.w	r4, r8, r4
 8020f56:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020f5a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020f5e:	fb08 f802 	mul.w	r8, r8, r2
 8020f62:	fb0a fa01 	mul.w	sl, sl, r1
 8020f66:	0a22      	lsrs	r2, r4, #8
 8020f68:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8020f6c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020f70:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8020f74:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020f78:	4414      	add	r4, r2
 8020f7a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020f7e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8020f82:	0a2d      	lsrs	r5, r5, #8
 8020f84:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020f88:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020f8c:	9a03      	ldr	r2, [sp, #12]
 8020f8e:	8836      	ldrh	r6, [r6, #0]
 8020f90:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020f94:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020f98:	437d      	muls	r5, r7
 8020f9a:	4461      	add	r1, ip
 8020f9c:	0a24      	lsrs	r4, r4, #8
 8020f9e:	fb02 5503 	mla	r5, r2, r3, r5
 8020fa2:	0a09      	lsrs	r1, r1, #8
 8020fa4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020fa8:	fb04 540e 	mla	r4, r4, lr, r5
 8020fac:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020fb0:	fb01 4100 	mla	r1, r1, r0, r4
 8020fb4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020fb8:	0a09      	lsrs	r1, r1, #8
 8020fba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020fbe:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020fc2:	fb07 f70a 	mul.w	r7, r7, sl
 8020fc6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020fca:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8020fce:	fb03 7101 	mla	r1, r3, r1, r7
 8020fd2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020fd6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020fda:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020fde:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020fe2:	fb00 e101 	mla	r1, r0, r1, lr
 8020fe6:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8020fea:	9a00      	ldr	r2, [sp, #0]
 8020fec:	b287      	uxth	r7, r0
 8020fee:	437a      	muls	r2, r7
 8020ff0:	0a09      	lsrs	r1, r1, #8
 8020ff2:	1c53      	adds	r3, r2, #1
 8020ff4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020ff8:	4321      	orrs	r1, r4
 8020ffa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020ffe:	1235      	asrs	r5, r6, #8
 8021000:	0c0a      	lsrs	r2, r1, #16
 8021002:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8021006:	b2db      	uxtb	r3, r3
 8021008:	fb12 f207 	smulbb	r2, r2, r7
 802100c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021010:	fb05 2503 	mla	r5, r5, r3, r2
 8021014:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8021018:	10f2      	asrs	r2, r6, #3
 802101a:	b2c8      	uxtb	r0, r1
 802101c:	00f6      	lsls	r6, r6, #3
 802101e:	fb14 f407 	smulbb	r4, r4, r7
 8021022:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021026:	b2f6      	uxtb	r6, r6
 8021028:	fb10 f007 	smulbb	r0, r0, r7
 802102c:	fb02 4203 	mla	r2, r2, r3, r4
 8021030:	b2ad      	uxth	r5, r5
 8021032:	fb06 0303 	mla	r3, r6, r3, r0
 8021036:	b299      	uxth	r1, r3
 8021038:	b294      	uxth	r4, r2
 802103a:	1c6b      	adds	r3, r5, #1
 802103c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021040:	1c62      	adds	r2, r4, #1
 8021042:	1c4b      	adds	r3, r1, #1
 8021044:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021048:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802104c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021050:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021054:	0952      	lsrs	r2, r2, #5
 8021056:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802105a:	432b      	orrs	r3, r5
 802105c:	4313      	orrs	r3, r2
 802105e:	9a02      	ldr	r2, [sp, #8]
 8021060:	8013      	strh	r3, [r2, #0]
 8021062:	b005      	add	sp, #20
 8021064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021068:	2500      	movs	r5, #0
 802106a:	e6e9      	b.n	8020e40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 802106c:	2100      	movs	r1, #0
 802106e:	460d      	mov	r5, r1
 8021070:	e6f3      	b.n	8020e5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021072:	2100      	movs	r1, #0
 8021074:	e6f1      	b.n	8020e5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021076:	4631      	mov	r1, r6
 8021078:	e6ef      	b.n	8020e5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802107a:	2400      	movs	r4, #0
 802107c:	e700      	b.n	8020e80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802107e:	2200      	movs	r2, #0
 8021080:	4614      	mov	r4, r2
 8021082:	e70b      	b.n	8020e9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021084:	4602      	mov	r2, r0
 8021086:	4604      	mov	r4, r0
 8021088:	e708      	b.n	8020e9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802108a:	2200      	movs	r2, #0
 802108c:	e706      	b.n	8020e9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802108e:	4632      	mov	r2, r6
 8021090:	e704      	b.n	8020e9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021092 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021092:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021096:	b09f      	sub	sp, #124	; 0x7c
 8021098:	921b      	str	r2, [sp, #108]	; 0x6c
 802109a:	9309      	str	r3, [sp, #36]	; 0x24
 802109c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802109e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80210a2:	931c      	str	r3, [sp, #112]	; 0x70
 80210a4:	9119      	str	r1, [sp, #100]	; 0x64
 80210a6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80210aa:	901d      	str	r0, [sp, #116]	; 0x74
 80210ac:	6850      	ldr	r0, [r2, #4]
 80210ae:	6812      	ldr	r2, [r2, #0]
 80210b0:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80210b2:	fb00 1303 	mla	r3, r0, r3, r1
 80210b6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80210ba:	930c      	str	r3, [sp, #48]	; 0x30
 80210bc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80210be:	681b      	ldr	r3, [r3, #0]
 80210c0:	9312      	str	r3, [sp, #72]	; 0x48
 80210c2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80210c4:	685e      	ldr	r6, [r3, #4]
 80210c6:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80210ca:	930d      	str	r3, [sp, #52]	; 0x34
 80210cc:	3604      	adds	r6, #4
 80210ce:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80210d0:	2b00      	cmp	r3, #0
 80210d2:	dc03      	bgt.n	80210dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80210d4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80210d6:	2b00      	cmp	r3, #0
 80210d8:	f340 8388 	ble.w	80217ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80210dc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80210de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80210e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80210e6:	1e48      	subs	r0, r1, #1
 80210e8:	1e57      	subs	r7, r2, #1
 80210ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80210ec:	2b00      	cmp	r3, #0
 80210ee:	f340 8195 	ble.w	802141c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80210f2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80210f4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80210f8:	ea4f 4325 	mov.w	r3, r5, asr #16
 80210fc:	d406      	bmi.n	802110c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80210fe:	4584      	cmp	ip, r0
 8021100:	da04      	bge.n	802110c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021102:	2b00      	cmp	r3, #0
 8021104:	db02      	blt.n	802110c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021106:	42bb      	cmp	r3, r7
 8021108:	f2c0 8189 	blt.w	802141e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802110c:	f11c 0c01 	adds.w	ip, ip, #1
 8021110:	f100 8177 	bmi.w	8021402 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021114:	4561      	cmp	r1, ip
 8021116:	f2c0 8174 	blt.w	8021402 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802111a:	3301      	adds	r3, #1
 802111c:	f100 8171 	bmi.w	8021402 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021120:	429a      	cmp	r2, r3
 8021122:	f2c0 816e 	blt.w	8021402 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021126:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021128:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802112a:	931a      	str	r3, [sp, #104]	; 0x68
 802112c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802112e:	2b00      	cmp	r3, #0
 8021130:	f340 8193 	ble.w	802145a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021134:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021136:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802113a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802113c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8021140:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021142:	141b      	asrs	r3, r3, #16
 8021144:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021148:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802114c:	f100 81d6 	bmi.w	80214fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021150:	f100 38ff 	add.w	r8, r0, #4294967295
 8021154:	4543      	cmp	r3, r8
 8021156:	f280 81d1 	bge.w	80214fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802115a:	f1bc 0f00 	cmp.w	ip, #0
 802115e:	f2c0 81cd 	blt.w	80214fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021162:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021166:	45c4      	cmp	ip, r8
 8021168:	f280 81c8 	bge.w	80214fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802116c:	b200      	sxth	r0, r0
 802116e:	fb0c 3300 	mla	r3, ip, r0, r3
 8021172:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021174:	eb04 0803 	add.w	r8, r4, r3
 8021178:	5ce3      	ldrb	r3, [r4, r3]
 802117a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802117e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021182:	2a00      	cmp	r2, #0
 8021184:	f000 81af 	beq.w	80214e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021188:	f898 c001 	ldrb.w	ip, [r8, #1]
 802118c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021190:	940e      	str	r4, [sp, #56]	; 0x38
 8021192:	0e24      	lsrs	r4, r4, #24
 8021194:	9415      	str	r4, [sp, #84]	; 0x54
 8021196:	b179      	cbz	r1, 80211b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021198:	eb08 0c00 	add.w	ip, r8, r0
 802119c:	f818 0000 	ldrb.w	r0, [r8, r0]
 80211a0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80211a4:	900a      	str	r0, [sp, #40]	; 0x28
 80211a6:	0e00      	lsrs	r0, r0, #24
 80211a8:	9013      	str	r0, [sp, #76]	; 0x4c
 80211aa:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80211ae:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80211b2:	900f      	str	r0, [sp, #60]	; 0x3c
 80211b4:	0e00      	lsrs	r0, r0, #24
 80211b6:	9016      	str	r0, [sp, #88]	; 0x58
 80211b8:	b292      	uxth	r2, r2
 80211ba:	b289      	uxth	r1, r1
 80211bc:	fb02 f901 	mul.w	r9, r2, r1
 80211c0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80211c4:	0112      	lsls	r2, r2, #4
 80211c6:	eba2 0809 	sub.w	r8, r2, r9
 80211ca:	b289      	uxth	r1, r1
 80211cc:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80211d0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80211d2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80211d4:	fa1f f888 	uxth.w	r8, r8
 80211d8:	1a52      	subs	r2, r2, r1
 80211da:	b292      	uxth	r2, r2
 80211dc:	fb08 f000 	mul.w	r0, r8, r0
 80211e0:	fb02 000e 	mla	r0, r2, lr, r0
 80211e4:	fb01 0004 	mla	r0, r1, r4, r0
 80211e8:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80211ea:	fb09 0004 	mla	r0, r9, r4, r0
 80211ee:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80211f2:	2800      	cmp	r0, #0
 80211f4:	f000 80fa 	beq.w	80213ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80211f8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80211fc:	d01b      	beq.n	8021236 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80211fe:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021202:	fb0e fa0a 	mul.w	sl, lr, sl
 8021206:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802120a:	fb0e fe03 	mul.w	lr, lr, r3
 802120e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021212:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021216:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802121a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802121e:	4453      	add	r3, sl
 8021220:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021224:	0a1b      	lsrs	r3, r3, #8
 8021226:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802122a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802122e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021232:	ea43 030c 	orr.w	r3, r3, ip
 8021236:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021238:	2cff      	cmp	r4, #255	; 0xff
 802123a:	d021      	beq.n	8021280 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802123c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802123e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021242:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021244:	fb04 fb0b 	mul.w	fp, r4, fp
 8021248:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802124a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802124e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021250:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021254:	fb04 fa0a 	mul.w	sl, r4, sl
 8021258:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802125c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021260:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021264:	44de      	add	lr, fp
 8021266:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802126a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802126e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021272:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021276:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802127a:	ea4e 040a 	orr.w	r4, lr, sl
 802127e:	940e      	str	r4, [sp, #56]	; 0x38
 8021280:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021282:	2cff      	cmp	r4, #255	; 0xff
 8021284:	d021      	beq.n	80212ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021286:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021288:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802128c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802128e:	fb04 fb0b 	mul.w	fp, r4, fp
 8021292:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021294:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021298:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802129a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802129e:	fb04 fa0a 	mul.w	sl, r4, sl
 80212a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80212a6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80212aa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80212ae:	44de      	add	lr, fp
 80212b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80212b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80212b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80212bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80212c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80212c4:	ea4e 040a 	orr.w	r4, lr, sl
 80212c8:	940a      	str	r4, [sp, #40]	; 0x28
 80212ca:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80212cc:	2cff      	cmp	r4, #255	; 0xff
 80212ce:	d021      	beq.n	8021314 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80212d0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80212d2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80212d6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80212d8:	fb04 fb0b 	mul.w	fp, r4, fp
 80212dc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80212de:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80212e2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80212e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80212e8:	fb04 fa0a 	mul.w	sl, r4, sl
 80212ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80212f0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80212f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80212f8:	44de      	add	lr, fp
 80212fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80212fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021302:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021306:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802130a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802130e:	ea4e 040a 	orr.w	r4, lr, sl
 8021312:	940f      	str	r4, [sp, #60]	; 0x3c
 8021314:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021316:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802131a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802131c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021320:	fb08 fc0c 	mul.w	ip, r8, ip
 8021324:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021328:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802132c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802132e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021332:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021336:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021338:	fb09 cc0e 	mla	ip, r9, lr, ip
 802133c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021340:	fb08 f80e 	mul.w	r8, r8, lr
 8021344:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021348:	fb02 8303 	mla	r3, r2, r3, r8
 802134c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802134e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021350:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021354:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021356:	fb01 330a 	mla	r3, r1, sl, r3
 802135a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802135e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021360:	fb09 3901 	mla	r9, r9, r1, r3
 8021364:	4342      	muls	r2, r0
 8021366:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802136a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802136e:	883b      	ldrh	r3, [r7, #0]
 8021370:	1c50      	adds	r0, r2, #1
 8021372:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021376:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802137a:	ea4c 0c09 	orr.w	ip, ip, r9
 802137e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021382:	1219      	asrs	r1, r3, #8
 8021384:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021388:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802138c:	b2c0      	uxtb	r0, r0
 802138e:	fb12 f204 	smulbb	r2, r2, r4
 8021392:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021396:	fb01 2100 	mla	r1, r1, r0, r2
 802139a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802139e:	10da      	asrs	r2, r3, #3
 80213a0:	fa5f fc8c 	uxtb.w	ip, ip
 80213a4:	00db      	lsls	r3, r3, #3
 80213a6:	fb1c fc04 	smulbb	ip, ip, r4
 80213aa:	b2db      	uxtb	r3, r3
 80213ac:	b289      	uxth	r1, r1
 80213ae:	fb03 c300 	mla	r3, r3, r0, ip
 80213b2:	fa1f fc83 	uxth.w	ip, r3
 80213b6:	1c4b      	adds	r3, r1, #1
 80213b8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80213bc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80213c0:	fb1e fe04 	smulbb	lr, lr, r4
 80213c4:	f10c 0301 	add.w	r3, ip, #1
 80213c8:	fb02 e200 	mla	r2, r2, r0, lr
 80213cc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80213d0:	b292      	uxth	r2, r2
 80213d2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80213d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80213da:	430b      	orrs	r3, r1
 80213dc:	1c51      	adds	r1, r2, #1
 80213de:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80213e2:	0952      	lsrs	r2, r2, #5
 80213e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80213e8:	4313      	orrs	r3, r2
 80213ea:	803b      	strh	r3, [r7, #0]
 80213ec:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80213ee:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80213f0:	441a      	add	r2, r3
 80213f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80213f4:	9229      	str	r2, [sp, #164]	; 0xa4
 80213f6:	441d      	add	r5, r3
 80213f8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80213fa:	3b01      	subs	r3, #1
 80213fc:	3702      	adds	r7, #2
 80213fe:	931a      	str	r3, [sp, #104]	; 0x68
 8021400:	e694      	b.n	802112c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021402:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021404:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021406:	441c      	add	r4, r3
 8021408:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802140a:	9429      	str	r4, [sp, #164]	; 0xa4
 802140c:	441d      	add	r5, r3
 802140e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021410:	3b01      	subs	r3, #1
 8021412:	9309      	str	r3, [sp, #36]	; 0x24
 8021414:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021416:	3302      	adds	r3, #2
 8021418:	930c      	str	r3, [sp, #48]	; 0x30
 802141a:	e666      	b.n	80210ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802141c:	d024      	beq.n	8021468 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802141e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021420:	982b      	ldr	r0, [sp, #172]	; 0xac
 8021422:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021424:	3b01      	subs	r3, #1
 8021426:	fb00 4003 	mla	r0, r0, r3, r4
 802142a:	1400      	asrs	r0, r0, #16
 802142c:	f53f ae7b 	bmi.w	8021126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021430:	3901      	subs	r1, #1
 8021432:	4288      	cmp	r0, r1
 8021434:	f6bf ae77 	bge.w	8021126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021438:	992c      	ldr	r1, [sp, #176]	; 0xb0
 802143a:	fb01 5303 	mla	r3, r1, r3, r5
 802143e:	141b      	asrs	r3, r3, #16
 8021440:	f53f ae71 	bmi.w	8021126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021444:	3a01      	subs	r2, #1
 8021446:	4293      	cmp	r3, r2
 8021448:	f6bf ae6d 	bge.w	8021126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802144c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021450:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8021454:	f1bb 0f00 	cmp.w	fp, #0
 8021458:	dc70      	bgt.n	802153c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 802145a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802145c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021460:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021462:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021466:	930c      	str	r3, [sp, #48]	; 0x30
 8021468:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802146a:	2b00      	cmp	r3, #0
 802146c:	f340 81be 	ble.w	80217ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021470:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021474:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021478:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802147c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802147e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021482:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021486:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802148a:	eef0 6a62 	vmov.f32	s13, s5
 802148e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021492:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021496:	ee77 2a62 	vsub.f32	s5, s14, s5
 802149a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802149e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80214a2:	eef0 6a43 	vmov.f32	s13, s6
 80214a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80214aa:	ee12 2a90 	vmov	r2, s5
 80214ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80214b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80214b6:	ee13 2a10 	vmov	r2, s6
 80214ba:	932b      	str	r3, [sp, #172]	; 0xac
 80214bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214be:	fb92 f3f3 	sdiv	r3, r2, r3
 80214c2:	932c      	str	r3, [sp, #176]	; 0xb0
 80214c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80214c6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80214c8:	3b01      	subs	r3, #1
 80214ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80214ce:	9319      	str	r3, [sp, #100]	; 0x64
 80214d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214d2:	bf08      	it	eq
 80214d4:	4613      	moveq	r3, r2
 80214d6:	ee16 5a90 	vmov	r5, s13
 80214da:	9309      	str	r3, [sp, #36]	; 0x24
 80214dc:	eeb0 3a67 	vmov.f32	s6, s15
 80214e0:	eef0 2a47 	vmov.f32	s5, s14
 80214e4:	e5f3      	b.n	80210ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80214e6:	2900      	cmp	r1, #0
 80214e8:	f43f ae66 	beq.w	80211b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80214ec:	f818 0000 	ldrb.w	r0, [r8, r0]
 80214f0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80214f4:	900a      	str	r0, [sp, #40]	; 0x28
 80214f6:	0e00      	lsrs	r0, r0, #24
 80214f8:	9013      	str	r0, [sp, #76]	; 0x4c
 80214fa:	e65d      	b.n	80211b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80214fc:	f113 0801 	adds.w	r8, r3, #1
 8021500:	f53f af74 	bmi.w	80213ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021504:	4540      	cmp	r0, r8
 8021506:	f6ff af71 	blt.w	80213ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802150a:	f11c 0801 	adds.w	r8, ip, #1
 802150e:	f53f af6d 	bmi.w	80213ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021512:	45c6      	cmp	lr, r8
 8021514:	f6ff af6a 	blt.w	80213ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021518:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 802151a:	9302      	str	r3, [sp, #8]
 802151c:	b200      	sxth	r0, r0
 802151e:	fa0f f38e 	sxth.w	r3, lr
 8021522:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021526:	e9cd c203 	strd	ip, r2, [sp, #12]
 802152a:	9301      	str	r3, [sp, #4]
 802152c:	9000      	str	r0, [sp, #0]
 802152e:	4633      	mov	r3, r6
 8021530:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8021532:	981d      	ldr	r0, [sp, #116]	; 0x74
 8021534:	4639      	mov	r1, r7
 8021536:	f7ff fc62 	bl	8020dfe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802153a:	e757      	b.n	80213ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802153c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802153e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021540:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021544:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021546:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802154a:	1427      	asrs	r7, r4, #16
 802154c:	142b      	asrs	r3, r5, #16
 802154e:	fb01 7303 	mla	r3, r1, r3, r7
 8021552:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021554:	18e7      	adds	r7, r4, r3
 8021556:	5ce3      	ldrb	r3, [r4, r3]
 8021558:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802155c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021560:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021564:	2a00      	cmp	r2, #0
 8021566:	f000 8137 	beq.w	80217d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802156a:	f897 e001 	ldrb.w	lr, [r7, #1]
 802156e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021572:	9410      	str	r4, [sp, #64]	; 0x40
 8021574:	0e24      	lsrs	r4, r4, #24
 8021576:	9417      	str	r4, [sp, #92]	; 0x5c
 8021578:	b170      	cbz	r0, 8021598 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802157a:	eb07 0e01 	add.w	lr, r7, r1
 802157e:	5c79      	ldrb	r1, [r7, r1]
 8021580:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021584:	910b      	str	r1, [sp, #44]	; 0x2c
 8021586:	0e09      	lsrs	r1, r1, #24
 8021588:	9114      	str	r1, [sp, #80]	; 0x50
 802158a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802158e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021592:	9111      	str	r1, [sp, #68]	; 0x44
 8021594:	0e09      	lsrs	r1, r1, #24
 8021596:	9118      	str	r1, [sp, #96]	; 0x60
 8021598:	b292      	uxth	r2, r2
 802159a:	b280      	uxth	r0, r0
 802159c:	fb02 f800 	mul.w	r8, r2, r0
 80215a0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80215a4:	0112      	lsls	r2, r2, #4
 80215a6:	eba2 0e08 	sub.w	lr, r2, r8
 80215aa:	b280      	uxth	r0, r0
 80215ac:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80215b0:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80215b2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80215b4:	fa1f fe8e 	uxth.w	lr, lr
 80215b8:	1a12      	subs	r2, r2, r0
 80215ba:	b292      	uxth	r2, r2
 80215bc:	fb0e f101 	mul.w	r1, lr, r1
 80215c0:	fb02 110c 	mla	r1, r2, ip, r1
 80215c4:	fb00 1104 	mla	r1, r0, r4, r1
 80215c8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80215ca:	fb08 1104 	mla	r1, r8, r4, r1
 80215ce:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80215d2:	2900      	cmp	r1, #0
 80215d4:	f000 80f5 	beq.w	80217c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80215d8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80215dc:	d019      	beq.n	8021612 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80215de:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80215e2:	fb0c fa0a 	mul.w	sl, ip, sl
 80215e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80215ea:	fb0c fc03 	mul.w	ip, ip, r3
 80215ee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80215f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80215f6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80215fa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80215fe:	4453      	add	r3, sl
 8021600:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021604:	0a1b      	lsrs	r3, r3, #8
 8021606:	0a3f      	lsrs	r7, r7, #8
 8021608:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802160c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021610:	433b      	orrs	r3, r7
 8021612:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021614:	2cff      	cmp	r4, #255	; 0xff
 8021616:	d020      	beq.n	802165a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8021618:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802161a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802161e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021620:	4367      	muls	r7, r4
 8021622:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021624:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021628:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802162a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802162e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021632:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021636:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802163a:	44bc      	add	ip, r7
 802163c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021640:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021644:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021648:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802164c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021650:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021654:	ea4c 040a 	orr.w	r4, ip, sl
 8021658:	9410      	str	r4, [sp, #64]	; 0x40
 802165a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802165c:	2cff      	cmp	r4, #255	; 0xff
 802165e:	d020      	beq.n	80216a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8021660:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021662:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021666:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021668:	4367      	muls	r7, r4
 802166a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802166c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021670:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021672:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021676:	fb04 fa0a 	mul.w	sl, r4, sl
 802167a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802167e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021682:	44bc      	add	ip, r7
 8021684:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021688:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802168c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021690:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021694:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021698:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802169c:	ea4c 040a 	orr.w	r4, ip, sl
 80216a0:	940b      	str	r4, [sp, #44]	; 0x2c
 80216a2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80216a4:	2cff      	cmp	r4, #255	; 0xff
 80216a6:	d020      	beq.n	80216ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80216a8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80216aa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80216ae:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80216b0:	4367      	muls	r7, r4
 80216b2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80216b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80216b8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80216ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80216be:	fb04 fa0a 	mul.w	sl, r4, sl
 80216c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80216c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80216ca:	44bc      	add	ip, r7
 80216cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80216d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80216d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80216d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80216dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80216e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80216e4:	ea4c 040a 	orr.w	r4, ip, sl
 80216e8:	9411      	str	r4, [sp, #68]	; 0x44
 80216ea:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80216ec:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80216f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80216f2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80216f6:	fb0e f707 	mul.w	r7, lr, r7
 80216fa:	fb02 770c 	mla	r7, r2, ip, r7
 80216fe:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021702:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021704:	fb00 770c 	mla	r7, r0, ip, r7
 8021708:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802170c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802170e:	fb08 770c 	mla	r7, r8, ip, r7
 8021712:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021716:	fb0e fe0c 	mul.w	lr, lr, ip
 802171a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802171e:	fb02 e303 	mla	r3, r2, r3, lr
 8021722:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021724:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021726:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802172a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802172c:	fb00 330a 	mla	r3, r0, sl, r3
 8021730:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8021734:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021738:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802173a:	f8b9 0000 	ldrh.w	r0, [r9]
 802173e:	434b      	muls	r3, r1
 8021740:	0a3f      	lsrs	r7, r7, #8
 8021742:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021746:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802174a:	1c59      	adds	r1, r3, #1
 802174c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021750:	ea47 070c 	orr.w	r7, r7, ip
 8021754:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021758:	1202      	asrs	r2, r0, #8
 802175a:	0c3b      	lsrs	r3, r7, #16
 802175c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021760:	b2c9      	uxtb	r1, r1
 8021762:	fb13 f304 	smulbb	r3, r3, r4
 8021766:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802176a:	fb02 3201 	mla	r2, r2, r1, r3
 802176e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021772:	10c3      	asrs	r3, r0, #3
 8021774:	b2ff      	uxtb	r7, r7
 8021776:	00c0      	lsls	r0, r0, #3
 8021778:	b292      	uxth	r2, r2
 802177a:	fb1c fc04 	smulbb	ip, ip, r4
 802177e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021782:	b2c0      	uxtb	r0, r0
 8021784:	fb17 f704 	smulbb	r7, r7, r4
 8021788:	fb03 c301 	mla	r3, r3, r1, ip
 802178c:	fb00 7001 	mla	r0, r0, r1, r7
 8021790:	f102 0c01 	add.w	ip, r2, #1
 8021794:	b280      	uxth	r0, r0
 8021796:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802179a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802179e:	1c42      	adds	r2, r0, #1
 80217a0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80217a4:	b29b      	uxth	r3, r3
 80217a6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80217aa:	ea42 020c 	orr.w	r2, r2, ip
 80217ae:	f103 0c01 	add.w	ip, r3, #1
 80217b2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80217b6:	095b      	lsrs	r3, r3, #5
 80217b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80217bc:	431a      	orrs	r2, r3
 80217be:	f8a9 2000 	strh.w	r2, [r9]
 80217c2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80217c4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80217c6:	441a      	add	r2, r3
 80217c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80217ca:	9229      	str	r2, [sp, #164]	; 0xa4
 80217cc:	f109 0902 	add.w	r9, r9, #2
 80217d0:	441d      	add	r5, r3
 80217d2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80217d6:	e63d      	b.n	8021454 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80217d8:	2800      	cmp	r0, #0
 80217da:	f43f aedd 	beq.w	8021598 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80217de:	5c79      	ldrb	r1, [r7, r1]
 80217e0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80217e4:	910b      	str	r1, [sp, #44]	; 0x2c
 80217e6:	0e09      	lsrs	r1, r1, #24
 80217e8:	9114      	str	r1, [sp, #80]	; 0x50
 80217ea:	e6d5      	b.n	8021598 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80217ec:	b01f      	add	sp, #124	; 0x7c
 80217ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080217f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80217f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80217f6:	b089      	sub	sp, #36	; 0x24
 80217f8:	9101      	str	r1, [sp, #4]
 80217fa:	9801      	ldr	r0, [sp, #4]
 80217fc:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8021800:	8800      	ldrh	r0, [r0, #0]
 8021802:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8021806:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 802180a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802180e:	1206      	asrs	r6, r0, #8
 8021810:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8021814:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021818:	9602      	str	r6, [sp, #8]
 802181a:	10c6      	asrs	r6, r0, #3
 802181c:	00c0      	lsls	r0, r0, #3
 802181e:	b2c0      	uxtb	r0, r0
 8021820:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021824:	9004      	str	r0, [sp, #16]
 8021826:	2f00      	cmp	r7, #0
 8021828:	fb07 100c 	mla	r0, r7, ip, r1
 802182c:	9603      	str	r6, [sp, #12]
 802182e:	eb02 0e00 	add.w	lr, r2, r0
 8021832:	f2c0 810a 	blt.w	8021a4a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021836:	45b8      	cmp	r8, r7
 8021838:	f340 8107 	ble.w	8021a4a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802183c:	2900      	cmp	r1, #0
 802183e:	f2c0 8102 	blt.w	8021a46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021842:	458c      	cmp	ip, r1
 8021844:	f340 80ff 	ble.w	8021a46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021848:	5c12      	ldrb	r2, [r2, r0]
 802184a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802184e:	1c4a      	adds	r2, r1, #1
 8021850:	f100 80fe 	bmi.w	8021a50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021854:	4594      	cmp	ip, r2
 8021856:	f340 80fb 	ble.w	8021a50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802185a:	2d00      	cmp	r5, #0
 802185c:	f000 80fa 	beq.w	8021a54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8021860:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021864:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8021868:	3701      	adds	r7, #1
 802186a:	f100 80f7 	bmi.w	8021a5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802186e:	45b8      	cmp	r8, r7
 8021870:	f340 80f4 	ble.w	8021a5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021874:	2c00      	cmp	r4, #0
 8021876:	f000 80f4 	beq.w	8021a62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802187a:	2900      	cmp	r1, #0
 802187c:	eb0e 020c 	add.w	r2, lr, ip
 8021880:	f2c0 80ea 	blt.w	8021a58 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021884:	458c      	cmp	ip, r1
 8021886:	f340 80e7 	ble.w	8021a58 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802188a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802188e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8021892:	3101      	adds	r1, #1
 8021894:	f100 80e8 	bmi.w	8021a68 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021898:	458c      	cmp	ip, r1
 802189a:	f340 80e5 	ble.w	8021a68 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802189e:	2d00      	cmp	r5, #0
 80218a0:	f000 80e4 	beq.w	8021a6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80218a4:	7852      	ldrb	r2, [r2, #1]
 80218a6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80218aa:	0e0b      	lsrs	r3, r1, #24
 80218ac:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80218b0:	9300      	str	r3, [sp, #0]
 80218b2:	b2a4      	uxth	r4, r4
 80218b4:	b2ab      	uxth	r3, r5
 80218b6:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80218ba:	fb03 f904 	mul.w	r9, r3, r4
 80218be:	fb0a f505 	mul.w	r5, sl, r5
 80218c2:	011b      	lsls	r3, r3, #4
 80218c4:	eba3 0e09 	sub.w	lr, r3, r9
 80218c8:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80218cc:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80218d0:	0a28      	lsrs	r0, r5, #8
 80218d2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80218d6:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80218da:	4405      	add	r5, r0
 80218dc:	0a2d      	lsrs	r5, r5, #8
 80218de:	fb0a f303 	mul.w	r3, sl, r3
 80218e2:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 80218e6:	9005      	str	r0, [sp, #20]
 80218e8:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80218ec:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80218f0:	0a1b      	lsrs	r3, r3, #8
 80218f2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80218f6:	9306      	str	r3, [sp, #24]
 80218f8:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80218fc:	fb0b f303 	mul.w	r3, fp, r3
 8021900:	0a1d      	lsrs	r5, r3, #8
 8021902:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021906:	ea4f 6817 	mov.w	r8, r7, lsr #24
 802190a:	fb0b f606 	mul.w	r6, fp, r6
 802190e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8021912:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8021916:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802191a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802191e:	fb08 f707 	mul.w	r7, r8, r7
 8021922:	441d      	add	r5, r3
 8021924:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8021928:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802192c:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021930:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021934:	fb08 fc0c 	mul.w	ip, r8, ip
 8021938:	0a1b      	lsrs	r3, r3, #8
 802193a:	9307      	str	r3, [sp, #28]
 802193c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021940:	0e0b      	lsrs	r3, r1, #24
 8021942:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021946:	435f      	muls	r7, r3
 8021948:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802194c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021950:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021954:	4460      	add	r0, ip
 8021956:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802195a:	b2a4      	uxth	r4, r4
 802195c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021960:	0a2d      	lsrs	r5, r5, #8
 8021962:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021966:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802196a:	fa1f fe8e 	uxth.w	lr, lr
 802196e:	4359      	muls	r1, r3
 8021970:	1b12      	subs	r2, r2, r4
 8021972:	9b05      	ldr	r3, [sp, #20]
 8021974:	44bc      	add	ip, r7
 8021976:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802197a:	b292      	uxth	r2, r2
 802197c:	fb05 f50e 	mul.w	r5, r5, lr
 8021980:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021984:	fb03 5502 	mla	r5, r3, r2, r5
 8021988:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802198c:	9b06      	ldr	r3, [sp, #24]
 802198e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021992:	0a36      	lsrs	r6, r6, #8
 8021994:	0a00      	lsrs	r0, r0, #8
 8021996:	fb0c 5509 	mla	r5, ip, r9, r5
 802199a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802199e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80219a2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80219a6:	fb00 5504 	mla	r5, r0, r4, r5
 80219aa:	fb0e f606 	mul.w	r6, lr, r6
 80219ae:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80219b2:	0a09      	lsrs	r1, r1, #8
 80219b4:	9b07      	ldr	r3, [sp, #28]
 80219b6:	fb02 6000 	mla	r0, r2, r0, r6
 80219ba:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80219be:	fb09 0001 	mla	r0, r9, r1, r0
 80219c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80219c6:	fb0e fe0b 	mul.w	lr, lr, fp
 80219ca:	fb04 0003 	mla	r0, r4, r3, r0
 80219ce:	fb02 e20a 	mla	r2, r2, sl, lr
 80219d2:	9b00      	ldr	r3, [sp, #0]
 80219d4:	fb04 2408 	mla	r4, r4, r8, r2
 80219d8:	fb09 4903 	mla	r9, r9, r3, r4
 80219dc:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80219e0:	9b02      	ldr	r3, [sp, #8]
 80219e2:	9a04      	ldr	r2, [sp, #16]
 80219e4:	fa5f f989 	uxtb.w	r9, r9
 80219e8:	fb03 f109 	mul.w	r1, r3, r9
 80219ec:	9b03      	ldr	r3, [sp, #12]
 80219ee:	0a2d      	lsrs	r5, r5, #8
 80219f0:	0a00      	lsrs	r0, r0, #8
 80219f2:	fb03 f309 	mul.w	r3, r3, r9
 80219f6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80219fa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80219fe:	4305      	orrs	r5, r0
 8021a00:	fb02 f909 	mul.w	r9, r2, r9
 8021a04:	1c58      	adds	r0, r3, #1
 8021a06:	1c4a      	adds	r2, r1, #1
 8021a08:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021a0c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021a10:	0a2b      	lsrs	r3, r5, #8
 8021a12:	0c2a      	lsrs	r2, r5, #16
 8021a14:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021a18:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021a1c:	00db      	lsls	r3, r3, #3
 8021a1e:	0212      	lsls	r2, r2, #8
 8021a20:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021a24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021a28:	4313      	orrs	r3, r2
 8021a2a:	f109 0201 	add.w	r2, r9, #1
 8021a2e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021a32:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021a36:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021a3a:	431d      	orrs	r5, r3
 8021a3c:	9b01      	ldr	r3, [sp, #4]
 8021a3e:	801d      	strh	r5, [r3, #0]
 8021a40:	b009      	add	sp, #36	; 0x24
 8021a42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a46:	2000      	movs	r0, #0
 8021a48:	e701      	b.n	802184e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8021a4a:	2600      	movs	r6, #0
 8021a4c:	4630      	mov	r0, r6
 8021a4e:	e70b      	b.n	8021868 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021a50:	2600      	movs	r6, #0
 8021a52:	e709      	b.n	8021868 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021a54:	462e      	mov	r6, r5
 8021a56:	e707      	b.n	8021868 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021a58:	2700      	movs	r7, #0
 8021a5a:	e71a      	b.n	8021892 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8021a5c:	2100      	movs	r1, #0
 8021a5e:	460f      	mov	r7, r1
 8021a60:	e723      	b.n	80218aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021a62:	4621      	mov	r1, r4
 8021a64:	4627      	mov	r7, r4
 8021a66:	e720      	b.n	80218aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021a68:	2100      	movs	r1, #0
 8021a6a:	e71e      	b.n	80218aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021a6c:	4629      	mov	r1, r5
 8021a6e:	e71c      	b.n	80218aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021a70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a74:	b09b      	sub	sp, #108	; 0x6c
 8021a76:	9218      	str	r2, [sp, #96]	; 0x60
 8021a78:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021a7a:	9116      	str	r1, [sp, #88]	; 0x58
 8021a7c:	9307      	str	r3, [sp, #28]
 8021a7e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021a82:	9019      	str	r0, [sp, #100]	; 0x64
 8021a84:	6850      	ldr	r0, [r2, #4]
 8021a86:	6812      	ldr	r2, [r2, #0]
 8021a88:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8021a8a:	fb00 1303 	mla	r3, r0, r3, r1
 8021a8e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021a92:	930a      	str	r3, [sp, #40]	; 0x28
 8021a94:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a96:	681b      	ldr	r3, [r3, #0]
 8021a98:	930f      	str	r3, [sp, #60]	; 0x3c
 8021a9a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a9c:	685e      	ldr	r6, [r3, #4]
 8021a9e:	3604      	adds	r6, #4
 8021aa0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021aa2:	2b00      	cmp	r3, #0
 8021aa4:	dc03      	bgt.n	8021aae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021aa6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021aa8:	2b00      	cmp	r3, #0
 8021aaa:	f340 8373 	ble.w	8022194 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021aae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021ab0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021ab4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021ab8:	1e48      	subs	r0, r1, #1
 8021aba:	1e57      	subs	r7, r2, #1
 8021abc:	9b07      	ldr	r3, [sp, #28]
 8021abe:	2b00      	cmp	r3, #0
 8021ac0:	f340 8190 	ble.w	8021de4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021ac4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021ac6:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021aca:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021ace:	d406      	bmi.n	8021ade <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021ad0:	4584      	cmp	ip, r0
 8021ad2:	da04      	bge.n	8021ade <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021ad4:	2b00      	cmp	r3, #0
 8021ad6:	db02      	blt.n	8021ade <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021ad8:	42bb      	cmp	r3, r7
 8021ada:	f2c0 8184 	blt.w	8021de6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021ade:	f11c 0c01 	adds.w	ip, ip, #1
 8021ae2:	f100 8172 	bmi.w	8021dca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021ae6:	4561      	cmp	r1, ip
 8021ae8:	f2c0 816f 	blt.w	8021dca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021aec:	3301      	adds	r3, #1
 8021aee:	f100 816c 	bmi.w	8021dca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021af2:	429a      	cmp	r2, r3
 8021af4:	f2c0 8169 	blt.w	8021dca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021af8:	9b07      	ldr	r3, [sp, #28]
 8021afa:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021afc:	9317      	str	r3, [sp, #92]	; 0x5c
 8021afe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021b00:	2b00      	cmp	r3, #0
 8021b02:	f340 818e 	ble.w	8021e22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021b06:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021b08:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021b0c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021b0e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021b12:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021b14:	141b      	asrs	r3, r3, #16
 8021b16:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021b1a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021b1e:	f100 81d1 	bmi.w	8021ec4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021b22:	f101 38ff 	add.w	r8, r1, #4294967295
 8021b26:	4543      	cmp	r3, r8
 8021b28:	f280 81cc 	bge.w	8021ec4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021b2c:	f1bc 0f00 	cmp.w	ip, #0
 8021b30:	f2c0 81c8 	blt.w	8021ec4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021b34:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021b38:	45c4      	cmp	ip, r8
 8021b3a:	f280 81c3 	bge.w	8021ec4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021b3e:	b209      	sxth	r1, r1
 8021b40:	fb0c 3301 	mla	r3, ip, r1, r3
 8021b44:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021b46:	eb04 0803 	add.w	r8, r4, r3
 8021b4a:	5ce3      	ldrb	r3, [r4, r3]
 8021b4c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021b50:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021b54:	2a00      	cmp	r2, #0
 8021b56:	f000 81aa 	beq.w	8021eae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021b5a:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021b5e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021b62:	940b      	str	r4, [sp, #44]	; 0x2c
 8021b64:	0e24      	lsrs	r4, r4, #24
 8021b66:	9412      	str	r4, [sp, #72]	; 0x48
 8021b68:	b178      	cbz	r0, 8021b8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021b6a:	eb08 0c01 	add.w	ip, r8, r1
 8021b6e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021b72:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021b76:	9108      	str	r1, [sp, #32]
 8021b78:	0e09      	lsrs	r1, r1, #24
 8021b7a:	9110      	str	r1, [sp, #64]	; 0x40
 8021b7c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021b80:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021b84:	910c      	str	r1, [sp, #48]	; 0x30
 8021b86:	0e09      	lsrs	r1, r1, #24
 8021b88:	9113      	str	r1, [sp, #76]	; 0x4c
 8021b8a:	b292      	uxth	r2, r2
 8021b8c:	b280      	uxth	r0, r0
 8021b8e:	fb02 f900 	mul.w	r9, r2, r0
 8021b92:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021b96:	0112      	lsls	r2, r2, #4
 8021b98:	eba2 0809 	sub.w	r8, r2, r9
 8021b9c:	b280      	uxth	r0, r0
 8021b9e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021ba2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021ba4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021ba6:	fa1f f888 	uxth.w	r8, r8
 8021baa:	1a12      	subs	r2, r2, r0
 8021bac:	b292      	uxth	r2, r2
 8021bae:	fb08 f101 	mul.w	r1, r8, r1
 8021bb2:	fb02 110e 	mla	r1, r2, lr, r1
 8021bb6:	fb00 1104 	mla	r1, r0, r4, r1
 8021bba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021bbc:	fb09 1104 	mla	r1, r9, r4, r1
 8021bc0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021bc4:	2900      	cmp	r1, #0
 8021bc6:	f000 80f5 	beq.w	8021db4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021bca:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021bce:	d01b      	beq.n	8021c08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021bd0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021bd4:	fb0e fa0a 	mul.w	sl, lr, sl
 8021bd8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021bdc:	fb0e fe03 	mul.w	lr, lr, r3
 8021be0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021be4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021be8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021bec:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021bf0:	4453      	add	r3, sl
 8021bf2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021bf6:	0a1b      	lsrs	r3, r3, #8
 8021bf8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021bfc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021c00:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021c04:	ea43 030c 	orr.w	r3, r3, ip
 8021c08:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021c0a:	2cff      	cmp	r4, #255	; 0xff
 8021c0c:	d021      	beq.n	8021c52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021c0e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021c10:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021c14:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021c16:	fb04 fb0b 	mul.w	fp, r4, fp
 8021c1a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021c1c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021c20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021c22:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021c26:	fb04 fa0a 	mul.w	sl, r4, sl
 8021c2a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c2e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021c32:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021c36:	44de      	add	lr, fp
 8021c38:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021c3c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c44:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021c4c:	ea4e 040a 	orr.w	r4, lr, sl
 8021c50:	940b      	str	r4, [sp, #44]	; 0x2c
 8021c52:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021c54:	2cff      	cmp	r4, #255	; 0xff
 8021c56:	d021      	beq.n	8021c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021c58:	9c08      	ldr	r4, [sp, #32]
 8021c5a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021c5e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021c60:	fb04 fb0b 	mul.w	fp, r4, fp
 8021c64:	9c08      	ldr	r4, [sp, #32]
 8021c66:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021c6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021c6c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021c70:	fb04 fa0a 	mul.w	sl, r4, sl
 8021c74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c78:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021c7c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021c80:	44de      	add	lr, fp
 8021c82:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021c86:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021c96:	ea4e 040a 	orr.w	r4, lr, sl
 8021c9a:	9408      	str	r4, [sp, #32]
 8021c9c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021c9e:	2cff      	cmp	r4, #255	; 0xff
 8021ca0:	d021      	beq.n	8021ce6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021ca2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021ca4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021ca8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021caa:	fb04 fb0b 	mul.w	fp, r4, fp
 8021cae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021cb0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021cb4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021cb6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021cba:	fb04 fa0a 	mul.w	sl, r4, sl
 8021cbe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021cc2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021cc6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021cca:	44de      	add	lr, fp
 8021ccc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021cd0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021cd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021cd8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021cdc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021ce0:	ea4e 040a 	orr.w	r4, lr, sl
 8021ce4:	940c      	str	r4, [sp, #48]	; 0x30
 8021ce6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021ce8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021cec:	9c08      	ldr	r4, [sp, #32]
 8021cee:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021cf2:	fb08 fc0c 	mul.w	ip, r8, ip
 8021cf6:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021cfa:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021cfe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021d00:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021d04:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021d08:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021d0a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021d0e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021d12:	fb08 f80e 	mul.w	r8, r8, lr
 8021d16:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021d1a:	fb02 8303 	mla	r3, r2, r3, r8
 8021d1e:	9a08      	ldr	r2, [sp, #32]
 8021d20:	f8b7 8000 	ldrh.w	r8, [r7]
 8021d24:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021d28:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021d2a:	fb00 330a 	mla	r3, r0, sl, r3
 8021d2e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021d32:	fb09 3900 	mla	r9, r9, r0, r3
 8021d36:	43c9      	mvns	r1, r1
 8021d38:	ea4f 2228 	mov.w	r2, r8, asr #8
 8021d3c:	fa5f fe81 	uxtb.w	lr, r1
 8021d40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021d44:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021d48:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021d4c:	fb02 f20e 	mul.w	r2, r2, lr
 8021d50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021d54:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021d58:	ea4c 0c09 	orr.w	ip, ip, r9
 8021d5c:	1c53      	adds	r3, r2, #1
 8021d5e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8021d62:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8021d66:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021d6a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021d6e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021d72:	4a63      	ldr	r2, [pc, #396]	; (8021f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8021d74:	fb00 f00e 	mul.w	r0, r0, lr
 8021d78:	b2db      	uxtb	r3, r3
 8021d7a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021d7e:	1c43      	adds	r3, r0, #1
 8021d80:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021d84:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021d88:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021d8c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021d90:	b2c9      	uxtb	r1, r1
 8021d92:	00db      	lsls	r3, r3, #3
 8021d94:	fb01 f10e 	mul.w	r1, r1, lr
 8021d98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021d9c:	4313      	orrs	r3, r2
 8021d9e:	1c4a      	adds	r2, r1, #1
 8021da0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021da4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021da8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021dac:	ea4c 0c03 	orr.w	ip, ip, r3
 8021db0:	f8a7 c000 	strh.w	ip, [r7]
 8021db4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021db6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021db8:	441a      	add	r2, r3
 8021dba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021dbc:	9225      	str	r2, [sp, #148]	; 0x94
 8021dbe:	441d      	add	r5, r3
 8021dc0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021dc2:	3b01      	subs	r3, #1
 8021dc4:	3702      	adds	r7, #2
 8021dc6:	9317      	str	r3, [sp, #92]	; 0x5c
 8021dc8:	e699      	b.n	8021afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021dca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021dcc:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021dce:	441c      	add	r4, r3
 8021dd0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021dd2:	9425      	str	r4, [sp, #148]	; 0x94
 8021dd4:	441d      	add	r5, r3
 8021dd6:	9b07      	ldr	r3, [sp, #28]
 8021dd8:	3b01      	subs	r3, #1
 8021dda:	9307      	str	r3, [sp, #28]
 8021ddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021dde:	3302      	adds	r3, #2
 8021de0:	930a      	str	r3, [sp, #40]	; 0x28
 8021de2:	e66b      	b.n	8021abc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021de4:	d024      	beq.n	8021e30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021de6:	9b07      	ldr	r3, [sp, #28]
 8021de8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021dea:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021dec:	3b01      	subs	r3, #1
 8021dee:	fb00 4003 	mla	r0, r0, r3, r4
 8021df2:	1400      	asrs	r0, r0, #16
 8021df4:	f53f ae80 	bmi.w	8021af8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021df8:	3901      	subs	r1, #1
 8021dfa:	4288      	cmp	r0, r1
 8021dfc:	f6bf ae7c 	bge.w	8021af8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021e00:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021e02:	fb01 5303 	mla	r3, r1, r3, r5
 8021e06:	141b      	asrs	r3, r3, #16
 8021e08:	f53f ae76 	bmi.w	8021af8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021e0c:	3a01      	subs	r2, #1
 8021e0e:	4293      	cmp	r3, r2
 8021e10:	f6bf ae72 	bge.w	8021af8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021e14:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021e18:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8021e1c:	f1bb 0f00 	cmp.w	fp, #0
 8021e20:	dc70      	bgt.n	8021f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021e22:	9b07      	ldr	r3, [sp, #28]
 8021e24:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021e28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021e2a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021e2e:	930a      	str	r3, [sp, #40]	; 0x28
 8021e30:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021e32:	2b00      	cmp	r3, #0
 8021e34:	f340 81ae 	ble.w	8022194 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021e38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021e3c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021e40:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021e44:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021e4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021e4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021e52:	eef0 6a62 	vmov.f32	s13, s5
 8021e56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021e5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021e62:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8021e66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021e6a:	eef0 6a43 	vmov.f32	s13, s6
 8021e6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021e72:	ee12 2a90 	vmov	r2, s5
 8021e76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021e7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e7e:	ee13 2a10 	vmov	r2, s6
 8021e82:	9327      	str	r3, [sp, #156]	; 0x9c
 8021e84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e86:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e8a:	9328      	str	r3, [sp, #160]	; 0xa0
 8021e8c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021e8e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021e90:	3b01      	subs	r3, #1
 8021e92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e96:	9316      	str	r3, [sp, #88]	; 0x58
 8021e98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e9a:	bf08      	it	eq
 8021e9c:	4613      	moveq	r3, r2
 8021e9e:	ee16 5a90 	vmov	r5, s13
 8021ea2:	9307      	str	r3, [sp, #28]
 8021ea4:	eeb0 3a67 	vmov.f32	s6, s15
 8021ea8:	eef0 2a47 	vmov.f32	s5, s14
 8021eac:	e5f8      	b.n	8021aa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021eae:	2800      	cmp	r0, #0
 8021eb0:	f43f ae6b 	beq.w	8021b8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021eb4:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021eb8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021ebc:	9108      	str	r1, [sp, #32]
 8021ebe:	0e09      	lsrs	r1, r1, #24
 8021ec0:	9110      	str	r1, [sp, #64]	; 0x40
 8021ec2:	e662      	b.n	8021b8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021ec4:	f113 0801 	adds.w	r8, r3, #1
 8021ec8:	f53f af74 	bmi.w	8021db4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021ecc:	4541      	cmp	r1, r8
 8021ece:	f6ff af71 	blt.w	8021db4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021ed2:	f11c 0801 	adds.w	r8, ip, #1
 8021ed6:	f53f af6d 	bmi.w	8021db4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021eda:	45c6      	cmp	lr, r8
 8021edc:	f6ff af6a 	blt.w	8021db4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021ee0:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8021ee4:	b209      	sxth	r1, r1
 8021ee6:	fa0f f38e 	sxth.w	r3, lr
 8021eea:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8021eee:	9301      	str	r3, [sp, #4]
 8021ef0:	9100      	str	r1, [sp, #0]
 8021ef2:	4633      	mov	r3, r6
 8021ef4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021ef6:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021ef8:	4639      	mov	r1, r7
 8021efa:	f7ff fc7a 	bl	80217f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8021efe:	e759      	b.n	8021db4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021f00:	fffff800 	.word	0xfffff800
 8021f04:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021f06:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021f08:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021f0c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021f0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021f12:	1427      	asrs	r7, r4, #16
 8021f14:	142b      	asrs	r3, r5, #16
 8021f16:	fb01 7303 	mla	r3, r1, r3, r7
 8021f1a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021f1c:	18e7      	adds	r7, r4, r3
 8021f1e:	5ce3      	ldrb	r3, [r4, r3]
 8021f20:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021f24:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021f28:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021f2c:	2a00      	cmp	r2, #0
 8021f2e:	f000 8127 	beq.w	8022180 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021f32:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021f36:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021f3a:	940d      	str	r4, [sp, #52]	; 0x34
 8021f3c:	0e24      	lsrs	r4, r4, #24
 8021f3e:	9414      	str	r4, [sp, #80]	; 0x50
 8021f40:	b170      	cbz	r0, 8021f60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021f42:	eb07 0e01 	add.w	lr, r7, r1
 8021f46:	5c79      	ldrb	r1, [r7, r1]
 8021f48:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021f4c:	9109      	str	r1, [sp, #36]	; 0x24
 8021f4e:	0e09      	lsrs	r1, r1, #24
 8021f50:	9111      	str	r1, [sp, #68]	; 0x44
 8021f52:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021f56:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021f5a:	910e      	str	r1, [sp, #56]	; 0x38
 8021f5c:	0e09      	lsrs	r1, r1, #24
 8021f5e:	9115      	str	r1, [sp, #84]	; 0x54
 8021f60:	b292      	uxth	r2, r2
 8021f62:	b280      	uxth	r0, r0
 8021f64:	fb02 f800 	mul.w	r8, r2, r0
 8021f68:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021f6c:	0112      	lsls	r2, r2, #4
 8021f6e:	eba2 0e08 	sub.w	lr, r2, r8
 8021f72:	b280      	uxth	r0, r0
 8021f74:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021f78:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021f7a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021f7c:	fa1f fe8e 	uxth.w	lr, lr
 8021f80:	1a09      	subs	r1, r1, r0
 8021f82:	b289      	uxth	r1, r1
 8021f84:	fb0e f202 	mul.w	r2, lr, r2
 8021f88:	fb01 220c 	mla	r2, r1, ip, r2
 8021f8c:	fb00 2204 	mla	r2, r0, r4, r2
 8021f90:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021f92:	fb08 2204 	mla	r2, r8, r4, r2
 8021f96:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021f9a:	2a00      	cmp	r2, #0
 8021f9c:	f000 80e5 	beq.w	802216a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021fa0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021fa4:	d019      	beq.n	8021fda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8021fa6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021faa:	fb0c fa0a 	mul.w	sl, ip, sl
 8021fae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021fb2:	fb0c fc03 	mul.w	ip, ip, r3
 8021fb6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021fba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021fbe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021fc2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021fc6:	4453      	add	r3, sl
 8021fc8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021fcc:	0a1b      	lsrs	r3, r3, #8
 8021fce:	0a3f      	lsrs	r7, r7, #8
 8021fd0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021fd4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021fd8:	433b      	orrs	r3, r7
 8021fda:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021fdc:	2cff      	cmp	r4, #255	; 0xff
 8021fde:	d020      	beq.n	8022022 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021fe0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021fe2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021fe6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021fe8:	4367      	muls	r7, r4
 8021fea:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021fec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021ff0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021ff2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021ff6:	fb04 fa0a 	mul.w	sl, r4, sl
 8021ffa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021ffe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022002:	44bc      	add	ip, r7
 8022004:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022008:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802200c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022010:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022014:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022018:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802201c:	ea4c 040a 	orr.w	r4, ip, sl
 8022020:	940d      	str	r4, [sp, #52]	; 0x34
 8022022:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022024:	2cff      	cmp	r4, #255	; 0xff
 8022026:	d020      	beq.n	802206a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8022028:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802202a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802202e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022030:	4367      	muls	r7, r4
 8022032:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022034:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022038:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802203a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802203e:	fb04 fa0a 	mul.w	sl, r4, sl
 8022042:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022046:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802204a:	44bc      	add	ip, r7
 802204c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022050:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022054:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022058:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802205c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022060:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022064:	ea4c 040a 	orr.w	r4, ip, sl
 8022068:	9409      	str	r4, [sp, #36]	; 0x24
 802206a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802206c:	2cff      	cmp	r4, #255	; 0xff
 802206e:	d020      	beq.n	80220b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022070:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022072:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022076:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022078:	4367      	muls	r7, r4
 802207a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802207c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022080:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022082:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022086:	fb04 fa0a 	mul.w	sl, r4, sl
 802208a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802208e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022092:	44bc      	add	ip, r7
 8022094:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022098:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802209c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80220a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80220a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80220ac:	ea4c 040a 	orr.w	r4, ip, sl
 80220b0:	940e      	str	r4, [sp, #56]	; 0x38
 80220b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80220b4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80220b8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80220ba:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80220be:	fb0e f707 	mul.w	r7, lr, r7
 80220c2:	fb01 770c 	mla	r7, r1, ip, r7
 80220c6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80220ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80220cc:	fb00 770c 	mla	r7, r0, ip, r7
 80220d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80220d4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80220d6:	fb08 770c 	mla	r7, r8, ip, r7
 80220da:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80220de:	fb0e fe0c 	mul.w	lr, lr, ip
 80220e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80220e6:	fb01 e303 	mla	r3, r1, r3, lr
 80220ea:	9909      	ldr	r1, [sp, #36]	; 0x24
 80220ec:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80220f0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80220f2:	fb00 330a 	mla	r3, r0, sl, r3
 80220f6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80220fa:	fb08 3c0c 	mla	ip, r8, ip, r3
 80220fe:	f8b9 3000 	ldrh.w	r3, [r9]
 8022102:	43d2      	mvns	r2, r2
 8022104:	1218      	asrs	r0, r3, #8
 8022106:	b2d2      	uxtb	r2, r2
 8022108:	10d9      	asrs	r1, r3, #3
 802210a:	0a3f      	lsrs	r7, r7, #8
 802210c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022110:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022114:	00db      	lsls	r3, r3, #3
 8022116:	4350      	muls	r0, r2
 8022118:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802211c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022120:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022124:	b2db      	uxtb	r3, r3
 8022126:	ea47 070c 	orr.w	r7, r7, ip
 802212a:	4351      	muls	r1, r2
 802212c:	4353      	muls	r3, r2
 802212e:	1c42      	adds	r2, r0, #1
 8022130:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022134:	0c3a      	lsrs	r2, r7, #16
 8022136:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802213a:	4a18      	ldr	r2, [pc, #96]	; (802219c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 802213c:	b2c0      	uxtb	r0, r0
 802213e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8022142:	1c4a      	adds	r2, r1, #1
 8022144:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022148:	0a3a      	lsrs	r2, r7, #8
 802214a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802214e:	00c9      	lsls	r1, r1, #3
 8022150:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022154:	4301      	orrs	r1, r0
 8022156:	1c58      	adds	r0, r3, #1
 8022158:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802215c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022160:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022164:	4308      	orrs	r0, r1
 8022166:	f8a9 0000 	strh.w	r0, [r9]
 802216a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802216c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802216e:	441a      	add	r2, r3
 8022170:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022172:	9225      	str	r2, [sp, #148]	; 0x94
 8022174:	f109 0902 	add.w	r9, r9, #2
 8022178:	441d      	add	r5, r3
 802217a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802217e:	e64d      	b.n	8021e1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022180:	2800      	cmp	r0, #0
 8022182:	f43f aeed 	beq.w	8021f60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022186:	5c79      	ldrb	r1, [r7, r1]
 8022188:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802218c:	9109      	str	r1, [sp, #36]	; 0x24
 802218e:	0e09      	lsrs	r1, r1, #24
 8022190:	9111      	str	r1, [sp, #68]	; 0x44
 8022192:	e6e5      	b.n	8021f60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022194:	b01b      	add	sp, #108	; 0x6c
 8022196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802219a:	bf00      	nop
 802219c:	fffff800 	.word	0xfffff800

080221a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80221a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80221a4:	b085      	sub	sp, #20
 80221a6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80221aa:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80221ae:	9103      	str	r1, [sp, #12]
 80221b0:	fb00 7406 	mla	r4, r0, r6, r7
 80221b4:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80221b8:	2800      	cmp	r0, #0
 80221ba:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80221be:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80221c2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80221c6:	9501      	str	r5, [sp, #4]
 80221c8:	eb03 0904 	add.w	r9, r3, r4
 80221cc:	f2c0 8150 	blt.w	8022470 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80221d0:	4583      	cmp	fp, r0
 80221d2:	f340 814d 	ble.w	8022470 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80221d6:	2f00      	cmp	r7, #0
 80221d8:	f2c0 8146 	blt.w	8022468 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80221dc:	42be      	cmp	r6, r7
 80221de:	f340 8143 	ble.w	8022468 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80221e2:	f813 c004 	ldrb.w	ip, [r3, r4]
 80221e6:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80221ea:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80221ee:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80221f2:	4355      	muls	r5, r2
 80221f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80221f8:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80221fc:	fb0c f203 	mul.w	r2, ip, r3
 8022200:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022204:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022208:	441d      	add	r5, r3
 802220a:	f102 0320 	add.w	r3, r2, #32
 802220e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022212:	0a1b      	lsrs	r3, r3, #8
 8022214:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022218:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802221c:	431c      	orrs	r4, r3
 802221e:	1c7b      	adds	r3, r7, #1
 8022220:	f100 812b 	bmi.w	802247a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022224:	429e      	cmp	r6, r3
 8022226:	f340 8128 	ble.w	802247a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802222a:	2900      	cmp	r1, #0
 802222c:	f000 8128 	beq.w	8022480 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8022230:	9a01      	ldr	r2, [sp, #4]
 8022232:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022236:	8855      	ldrh	r5, [r2, #2]
 8022238:	ea4f 08e3 	mov.w	r8, r3, asr #3
 802223c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022240:	fb08 f802 	mul.w	r8, r8, r2
 8022244:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022248:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802224c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022250:	435d      	muls	r5, r3
 8022252:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022256:	44d0      	add	r8, sl
 8022258:	f105 0a20 	add.w	sl, r5, #32
 802225c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022260:	0a2d      	lsrs	r5, r5, #8
 8022262:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022266:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802226a:	432a      	orrs	r2, r5
 802226c:	3001      	adds	r0, #1
 802226e:	f100 810d 	bmi.w	802248c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022272:	4583      	cmp	fp, r0
 8022274:	f340 810a 	ble.w	802248c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022278:	f1be 0f00 	cmp.w	lr, #0
 802227c:	f000 810b 	beq.w	8022496 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022280:	2f00      	cmp	r7, #0
 8022282:	f2c0 8100 	blt.w	8022486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022286:	42be      	cmp	r6, r7
 8022288:	f340 80fd 	ble.w	8022486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802228c:	9801      	ldr	r0, [sp, #4]
 802228e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022292:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022296:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802229a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802229e:	fb0a fa00 	mul.w	sl, sl, r0
 80222a2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80222a6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80222aa:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80222ae:	fb05 f808 	mul.w	r8, r5, r8
 80222b2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80222b6:	4482      	add	sl, r0
 80222b8:	f108 0020 	add.w	r0, r8, #32
 80222bc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80222c0:	0a00      	lsrs	r0, r0, #8
 80222c2:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80222c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80222ca:	ea4b 0b00 	orr.w	fp, fp, r0
 80222ce:	3701      	adds	r7, #1
 80222d0:	f100 80e6 	bmi.w	80224a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80222d4:	42be      	cmp	r6, r7
 80222d6:	f340 80e3 	ble.w	80224a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80222da:	2900      	cmp	r1, #0
 80222dc:	f000 80e3 	beq.w	80224a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80222e0:	3601      	adds	r6, #1
 80222e2:	9801      	ldr	r0, [sp, #4]
 80222e4:	f819 7006 	ldrb.w	r7, [r9, r6]
 80222e8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80222ec:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80222f0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80222f4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80222f8:	fb09 f906 	mul.w	r9, r9, r6
 80222fc:	fb07 f800 	mul.w	r8, r7, r0
 8022300:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022304:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022308:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802230c:	44d1      	add	r9, sl
 802230e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022312:	f108 0020 	add.w	r0, r8, #32
 8022316:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802231a:	0a00      	lsrs	r0, r0, #8
 802231c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022320:	4330      	orrs	r0, r6
 8022322:	b28e      	uxth	r6, r1
 8022324:	fa1f f98e 	uxth.w	r9, lr
 8022328:	fb06 f809 	mul.w	r8, r6, r9
 802232c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022330:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022334:	0136      	lsls	r6, r6, #4
 8022336:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802233a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802233e:	9601      	str	r6, [sp, #4]
 8022340:	ea4a 0404 	orr.w	r4, sl, r4
 8022344:	fa1f f689 	uxth.w	r6, r9
 8022348:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802234c:	fb11 f90e 	smulbb	r9, r1, lr
 8022350:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022354:	9602      	str	r6, [sp, #8]
 8022356:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802235a:	4626      	mov	r6, r4
 802235c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022360:	f1ce 0410 	rsb	r4, lr, #16
 8022364:	1a64      	subs	r4, r4, r1
 8022366:	ea4a 0202 	orr.w	r2, sl, r2
 802236a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802236e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022372:	434a      	muls	r2, r1
 8022374:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022378:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802237c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022380:	fb04 2406 	mla	r4, r4, r6, r2
 8022384:	ea4a 0000 	orr.w	r0, sl, r0
 8022388:	fb09 4200 	mla	r2, r9, r0, r4
 802238c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022390:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022394:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022398:	ea44 0b0b 	orr.w	fp, r4, fp
 802239c:	9c01      	ldr	r4, [sp, #4]
 802239e:	9e02      	ldr	r6, [sp, #8]
 80223a0:	9903      	ldr	r1, [sp, #12]
 80223a2:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80223a6:	1ba4      	subs	r4, r4, r6
 80223a8:	9e01      	ldr	r6, [sp, #4]
 80223aa:	8808      	ldrh	r0, [r1, #0]
 80223ac:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80223b0:	eba6 0608 	sub.w	r6, r6, r8
 80223b4:	b2b6      	uxth	r6, r6
 80223b6:	b2a4      	uxth	r4, r4
 80223b8:	4373      	muls	r3, r6
 80223ba:	fb0c 3304 	mla	r3, ip, r4, r3
 80223be:	9c02      	ldr	r4, [sp, #8]
 80223c0:	fb04 3505 	mla	r5, r4, r5, r3
 80223c4:	fb08 5707 	mla	r7, r8, r7, r5
 80223c8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80223cc:	b289      	uxth	r1, r1
 80223ce:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80223d2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80223d6:	434f      	muls	r7, r1
 80223d8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80223dc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80223e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80223e4:	1c7b      	adds	r3, r7, #1
 80223e6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80223ea:	ea42 0e0e 	orr.w	lr, r2, lr
 80223ee:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80223f2:	fa1f f28e 	uxth.w	r2, lr
 80223f6:	1203      	asrs	r3, r0, #8
 80223f8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80223fc:	b2ff      	uxtb	r7, r7
 80223fe:	1215      	asrs	r5, r2, #8
 8022400:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022404:	fb13 f307 	smulbb	r3, r3, r7
 8022408:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802240c:	fb05 3501 	mla	r5, r5, r1, r3
 8022410:	10c3      	asrs	r3, r0, #3
 8022412:	10d4      	asrs	r4, r2, #3
 8022414:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022418:	fb13 f307 	smulbb	r3, r3, r7
 802241c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8022420:	fb04 3401 	mla	r4, r4, r1, r3
 8022424:	00c3      	lsls	r3, r0, #3
 8022426:	00d2      	lsls	r2, r2, #3
 8022428:	b2db      	uxtb	r3, r3
 802242a:	fb13 f307 	smulbb	r3, r3, r7
 802242e:	b2d2      	uxtb	r2, r2
 8022430:	fb02 3101 	mla	r1, r2, r1, r3
 8022434:	b2ad      	uxth	r5, r5
 8022436:	b289      	uxth	r1, r1
 8022438:	b2a4      	uxth	r4, r4
 802243a:	1c6b      	adds	r3, r5, #1
 802243c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022440:	1c62      	adds	r2, r4, #1
 8022442:	1c4b      	adds	r3, r1, #1
 8022444:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022448:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802244c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022450:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022454:	0964      	lsrs	r4, r4, #5
 8022456:	432b      	orrs	r3, r5
 8022458:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802245c:	9a03      	ldr	r2, [sp, #12]
 802245e:	4323      	orrs	r3, r4
 8022460:	8013      	strh	r3, [r2, #0]
 8022462:	b005      	add	sp, #20
 8022464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022468:	f04f 0c00 	mov.w	ip, #0
 802246c:	4664      	mov	r4, ip
 802246e:	e6d6      	b.n	802221e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8022470:	2300      	movs	r3, #0
 8022472:	469c      	mov	ip, r3
 8022474:	461a      	mov	r2, r3
 8022476:	461c      	mov	r4, r3
 8022478:	e6f8      	b.n	802226c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802247a:	2300      	movs	r3, #0
 802247c:	461a      	mov	r2, r3
 802247e:	e6f5      	b.n	802226c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022480:	460b      	mov	r3, r1
 8022482:	460a      	mov	r2, r1
 8022484:	e6f2      	b.n	802226c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022486:	2500      	movs	r5, #0
 8022488:	46ab      	mov	fp, r5
 802248a:	e720      	b.n	80222ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 802248c:	2700      	movs	r7, #0
 802248e:	463d      	mov	r5, r7
 8022490:	4638      	mov	r0, r7
 8022492:	46bb      	mov	fp, r7
 8022494:	e745      	b.n	8022322 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022496:	4677      	mov	r7, lr
 8022498:	4675      	mov	r5, lr
 802249a:	4670      	mov	r0, lr
 802249c:	46f3      	mov	fp, lr
 802249e:	e740      	b.n	8022322 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80224a0:	2700      	movs	r7, #0
 80224a2:	4638      	mov	r0, r7
 80224a4:	e73d      	b.n	8022322 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80224a6:	460f      	mov	r7, r1
 80224a8:	4608      	mov	r0, r1
 80224aa:	e73a      	b.n	8022322 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080224ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80224ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80224b0:	b097      	sub	sp, #92	; 0x5c
 80224b2:	9214      	str	r2, [sp, #80]	; 0x50
 80224b4:	9308      	str	r3, [sp, #32]
 80224b6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80224b8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80224bc:	9312      	str	r3, [sp, #72]	; 0x48
 80224be:	9111      	str	r1, [sp, #68]	; 0x44
 80224c0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80224c4:	9015      	str	r0, [sp, #84]	; 0x54
 80224c6:	6850      	ldr	r0, [r2, #4]
 80224c8:	6812      	ldr	r2, [r2, #0]
 80224ca:	fb00 1303 	mla	r3, r0, r3, r1
 80224ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80224d2:	9309      	str	r3, [sp, #36]	; 0x24
 80224d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80224d6:	681b      	ldr	r3, [r3, #0]
 80224d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80224da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80224dc:	685b      	ldr	r3, [r3, #4]
 80224de:	930c      	str	r3, [sp, #48]	; 0x30
 80224e0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80224e4:	930a      	str	r3, [sp, #40]	; 0x28
 80224e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80224e8:	2b00      	cmp	r3, #0
 80224ea:	dc03      	bgt.n	80224f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80224ec:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80224ee:	2b00      	cmp	r3, #0
 80224f0:	f340 83cb 	ble.w	8022c8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80224f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80224f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80224fa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80224fe:	1e48      	subs	r0, r1, #1
 8022500:	1e55      	subs	r5, r2, #1
 8022502:	9b08      	ldr	r3, [sp, #32]
 8022504:	2b00      	cmp	r3, #0
 8022506:	f340 81a3 	ble.w	8022850 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802250a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802250c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802250e:	1436      	asrs	r6, r6, #16
 8022510:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022514:	d406      	bmi.n	8022524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022516:	4286      	cmp	r6, r0
 8022518:	da04      	bge.n	8022524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802251a:	2b00      	cmp	r3, #0
 802251c:	db02      	blt.n	8022524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802251e:	42ab      	cmp	r3, r5
 8022520:	f2c0 8197 	blt.w	8022852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022524:	3601      	adds	r6, #1
 8022526:	f100 8184 	bmi.w	8022832 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802252a:	42b1      	cmp	r1, r6
 802252c:	f2c0 8181 	blt.w	8022832 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022530:	3301      	adds	r3, #1
 8022532:	f100 817e 	bmi.w	8022832 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022536:	429a      	cmp	r2, r3
 8022538:	f2c0 817b 	blt.w	8022832 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802253c:	9b08      	ldr	r3, [sp, #32]
 802253e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022540:	9313      	str	r3, [sp, #76]	; 0x4c
 8022542:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022546:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022548:	2b00      	cmp	r3, #0
 802254a:	f340 81a4 	ble.w	8022896 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802254e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022550:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022552:	1418      	asrs	r0, r3, #16
 8022554:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022556:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802255a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802255c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022560:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022562:	142d      	asrs	r5, r5, #16
 8022564:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022568:	f100 81f8 	bmi.w	802295c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802256c:	f102 3eff 	add.w	lr, r2, #4294967295
 8022570:	4575      	cmp	r5, lr
 8022572:	f280 81f3 	bge.w	802295c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022576:	2800      	cmp	r0, #0
 8022578:	f2c0 81f0 	blt.w	802295c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802257c:	f103 3eff 	add.w	lr, r3, #4294967295
 8022580:	4570      	cmp	r0, lr
 8022582:	f280 81eb 	bge.w	802295c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022586:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022588:	b212      	sxth	r2, r2
 802258a:	fb00 5002 	mla	r0, r0, r2, r5
 802258e:	fa1f fe81 	uxth.w	lr, r1
 8022592:	eb03 0a00 	add.w	sl, r3, r0
 8022596:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802259a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802259e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80225a2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80225a6:	b29b      	uxth	r3, r3
 80225a8:	f1bc 0f00 	cmp.w	ip, #0
 80225ac:	f000 81b9 	beq.w	8022922 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80225b0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80225b4:	940d      	str	r4, [sp, #52]	; 0x34
 80225b6:	eb0a 0b02 	add.w	fp, sl, r2
 80225ba:	fa1f fa8c 	uxth.w	sl, ip
 80225be:	fb0a fe0e 	mul.w	lr, sl, lr
 80225c2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80225c6:	fa1f fa8a 	uxth.w	sl, sl
 80225ca:	eba5 050e 	sub.w	r5, r5, lr
 80225ce:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80225d2:	940e      	str	r4, [sp, #56]	; 0x38
 80225d4:	eba3 030a 	sub.w	r3, r3, sl
 80225d8:	b2ad      	uxth	r5, r5
 80225da:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80225dc:	b29b      	uxth	r3, r3
 80225de:	fb08 f505 	mul.w	r5, r8, r5
 80225e2:	fb09 5303 	mla	r3, r9, r3, r5
 80225e6:	fb0a 3304 	mla	r3, sl, r4, r3
 80225ea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80225ec:	fb0e 3304 	mla	r3, lr, r4, r3
 80225f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80225f4:	2b00      	cmp	r3, #0
 80225f6:	f000 810f 	beq.w	8022818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80225fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80225fc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022600:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022604:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022608:	f000 8190 	beq.w	802292c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 802260c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022610:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022614:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022618:	fb09 f000 	mul.w	r0, r9, r0
 802261c:	fb0a fe0e 	mul.w	lr, sl, lr
 8022620:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022624:	f100 0b20 	add.w	fp, r0, #32
 8022628:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802262c:	44ce      	add	lr, r9
 802262e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022632:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022636:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802263a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802263e:	ea4e 0909 	orr.w	r9, lr, r9
 8022642:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022646:	8868      	ldrh	r0, [r5, #2]
 8022648:	d019      	beq.n	802267e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802264a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802264e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022652:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022656:	fb08 f800 	mul.w	r8, r8, r0
 802265a:	fb0a fe0e 	mul.w	lr, sl, lr
 802265e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022662:	f108 0b20 	add.w	fp, r8, #32
 8022666:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802266a:	4486      	add	lr, r0
 802266c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022670:	0a00      	lsrs	r0, r0, #8
 8022672:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022676:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802267a:	ea4e 0000 	orr.w	r0, lr, r0
 802267e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022682:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022686:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802268a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802268e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022692:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022696:	ea4e 0909 	orr.w	r9, lr, r9
 802269a:	ea4a 0000 	orr.w	r0, sl, r0
 802269e:	f1bc 0f00 	cmp.w	ip, #0
 80226a2:	f000 8145 	beq.w	8022930 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80226a6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80226aa:	3a01      	subs	r2, #1
 80226ac:	0052      	lsls	r2, r2, #1
 80226ae:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80226b0:	3202      	adds	r2, #2
 80226b2:	2cff      	cmp	r4, #255	; 0xff
 80226b4:	eb05 0e02 	add.w	lr, r5, r2
 80226b8:	5aaa      	ldrh	r2, [r5, r2]
 80226ba:	d018      	beq.n	80226ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80226bc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80226c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80226c4:	fb04 fa02 	mul.w	sl, r4, r2
 80226c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80226cc:	fb08 f805 	mul.w	r8, r8, r5
 80226d0:	f10a 0520 	add.w	r5, sl, #32
 80226d4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80226d8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80226dc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80226e0:	4442      	add	r2, r8
 80226e2:	0a2d      	lsrs	r5, r5, #8
 80226e4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80226e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80226ec:	432a      	orrs	r2, r5
 80226ee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80226f0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80226f4:	2cff      	cmp	r4, #255	; 0xff
 80226f6:	d01a      	beq.n	802272e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80226f8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80226fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022700:	fb04 fa05 	mul.w	sl, r4, r5
 8022704:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022708:	fb08 f80e 	mul.w	r8, r8, lr
 802270c:	f10a 0e20 	add.w	lr, sl, #32
 8022710:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022714:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022718:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802271c:	4445      	add	r5, r8
 802271e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022722:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022726:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802272a:	ea45 050e 	orr.w	r5, r5, lr
 802272e:	fb1c fe01 	smulbb	lr, ip, r1
 8022732:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022736:	f1cc 0810 	rsb	r8, ip, #16
 802273a:	eba8 0801 	sub.w	r8, r8, r1
 802273e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022742:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022746:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802274a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802274e:	4341      	muls	r1, r0
 8022750:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022754:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022758:	ea4a 0202 	orr.w	r2, sl, r2
 802275c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022760:	fb09 1108 	mla	r1, r9, r8, r1
 8022764:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022768:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802276c:	fb0c 1102 	mla	r1, ip, r2, r1
 8022770:	ea4b 0505 	orr.w	r5, fp, r5
 8022774:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022778:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802277c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022780:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022784:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022788:	ea42 0e0e 	orr.w	lr, r2, lr
 802278c:	fa1f f28e 	uxth.w	r2, lr
 8022790:	2bff      	cmp	r3, #255	; 0xff
 8022792:	d103      	bne.n	802279c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022794:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022796:	29ff      	cmp	r1, #255	; 0xff
 8022798:	f000 80de 	beq.w	8022958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 802279c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802279e:	8838      	ldrh	r0, [r7, #0]
 80227a0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80227a2:	434b      	muls	r3, r1
 80227a4:	f103 0c01 	add.w	ip, r3, #1
 80227a8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80227ac:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80227b0:	fa5f fc83 	uxtb.w	ip, r3
 80227b4:	1203      	asrs	r3, r0, #8
 80227b6:	1215      	asrs	r5, r2, #8
 80227b8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80227bc:	fb13 f30c 	smulbb	r3, r3, ip
 80227c0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80227c4:	fb05 3501 	mla	r5, r5, r1, r3
 80227c8:	10c3      	asrs	r3, r0, #3
 80227ca:	10d1      	asrs	r1, r2, #3
 80227cc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80227d0:	fb13 f30c 	smulbb	r3, r3, ip
 80227d4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80227d8:	fb01 3104 	mla	r1, r1, r4, r3
 80227dc:	00c3      	lsls	r3, r0, #3
 80227de:	00d2      	lsls	r2, r2, #3
 80227e0:	b2db      	uxtb	r3, r3
 80227e2:	b2d2      	uxtb	r2, r2
 80227e4:	fb13 f30c 	smulbb	r3, r3, ip
 80227e8:	b2ad      	uxth	r5, r5
 80227ea:	fb02 3304 	mla	r3, r2, r4, r3
 80227ee:	b29a      	uxth	r2, r3
 80227f0:	1c6b      	adds	r3, r5, #1
 80227f2:	b289      	uxth	r1, r1
 80227f4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80227f8:	1c53      	adds	r3, r2, #1
 80227fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80227fe:	1c4a      	adds	r2, r1, #1
 8022800:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022804:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022808:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802280c:	0949      	lsrs	r1, r1, #5
 802280e:	432b      	orrs	r3, r5
 8022810:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022814:	430b      	orrs	r3, r1
 8022816:	803b      	strh	r3, [r7, #0]
 8022818:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802281a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802281c:	4413      	add	r3, r2
 802281e:	9321      	str	r3, [sp, #132]	; 0x84
 8022820:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022822:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022824:	441a      	add	r2, r3
 8022826:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022828:	9222      	str	r2, [sp, #136]	; 0x88
 802282a:	3b01      	subs	r3, #1
 802282c:	3702      	adds	r7, #2
 802282e:	9313      	str	r3, [sp, #76]	; 0x4c
 8022830:	e689      	b.n	8022546 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022832:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022834:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8022836:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8022838:	4433      	add	r3, r6
 802283a:	9321      	str	r3, [sp, #132]	; 0x84
 802283c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802283e:	441c      	add	r4, r3
 8022840:	9b08      	ldr	r3, [sp, #32]
 8022842:	9422      	str	r4, [sp, #136]	; 0x88
 8022844:	3b01      	subs	r3, #1
 8022846:	9308      	str	r3, [sp, #32]
 8022848:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802284a:	3302      	adds	r3, #2
 802284c:	9309      	str	r3, [sp, #36]	; 0x24
 802284e:	e658      	b.n	8022502 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022850:	d028      	beq.n	80228a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022852:	9b08      	ldr	r3, [sp, #32]
 8022854:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022856:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022858:	3b01      	subs	r3, #1
 802285a:	fb00 5003 	mla	r0, r0, r3, r5
 802285e:	1400      	asrs	r0, r0, #16
 8022860:	f53f ae6c 	bmi.w	802253c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022864:	3901      	subs	r1, #1
 8022866:	4288      	cmp	r0, r1
 8022868:	f6bf ae68 	bge.w	802253c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802286c:	9924      	ldr	r1, [sp, #144]	; 0x90
 802286e:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022870:	fb01 0303 	mla	r3, r1, r3, r0
 8022874:	141b      	asrs	r3, r3, #16
 8022876:	f53f ae61 	bmi.w	802253c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802287a:	3a01      	subs	r2, #1
 802287c:	4293      	cmp	r3, r2
 802287e:	f6bf ae5d 	bge.w	802253c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022882:	9b08      	ldr	r3, [sp, #32]
 8022884:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022888:	9313      	str	r3, [sp, #76]	; 0x4c
 802288a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802288e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022890:	2b00      	cmp	r3, #0
 8022892:	f300 8082 	bgt.w	802299a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022896:	9b08      	ldr	r3, [sp, #32]
 8022898:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802289c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802289e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80228a2:	9309      	str	r3, [sp, #36]	; 0x24
 80228a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80228a6:	2b00      	cmp	r3, #0
 80228a8:	f340 81ef 	ble.w	8022c8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80228ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80228b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80228b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80228b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80228ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80228be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80228c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80228c6:	eef0 6a62 	vmov.f32	s13, s5
 80228ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80228ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80228d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80228d6:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80228da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80228de:	eef0 6a43 	vmov.f32	s13, s6
 80228e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80228e6:	ee12 2a90 	vmov	r2, s5
 80228ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80228ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80228f2:	ee13 2a10 	vmov	r2, s6
 80228f6:	9323      	str	r3, [sp, #140]	; 0x8c
 80228f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80228fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80228fe:	9324      	str	r3, [sp, #144]	; 0x90
 8022900:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022902:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022904:	3b01      	subs	r3, #1
 8022906:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802290a:	9311      	str	r3, [sp, #68]	; 0x44
 802290c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802290e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8022912:	bf08      	it	eq
 8022914:	4613      	moveq	r3, r2
 8022916:	9308      	str	r3, [sp, #32]
 8022918:	eeb0 3a67 	vmov.f32	s6, s15
 802291c:	eef0 2a47 	vmov.f32	s5, s14
 8022920:	e5e1      	b.n	80224e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022922:	fb08 f505 	mul.w	r5, r8, r5
 8022926:	fb09 5303 	mla	r3, r9, r3, r5
 802292a:	e661      	b.n	80225f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802292c:	4681      	mov	r9, r0
 802292e:	e688      	b.n	8022642 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022930:	f1c1 0210 	rsb	r2, r1, #16
 8022934:	4341      	muls	r1, r0
 8022936:	fb09 1902 	mla	r9, r9, r2, r1
 802293a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802293e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022942:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022946:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802294a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802294e:	ea42 0909 	orr.w	r9, r2, r9
 8022952:	fa1f f289 	uxth.w	r2, r9
 8022956:	e71b      	b.n	8022790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022958:	803a      	strh	r2, [r7, #0]
 802295a:	e75d      	b.n	8022818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802295c:	f115 0e01 	adds.w	lr, r5, #1
 8022960:	f53f af5a 	bmi.w	8022818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022964:	4572      	cmp	r2, lr
 8022966:	f6ff af57 	blt.w	8022818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802296a:	f110 0e01 	adds.w	lr, r0, #1
 802296e:	f53f af53 	bmi.w	8022818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022972:	4573      	cmp	r3, lr
 8022974:	f6ff af50 	blt.w	8022818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022978:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802297a:	9502      	str	r5, [sp, #8]
 802297c:	b21b      	sxth	r3, r3
 802297e:	b212      	sxth	r2, r2
 8022980:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022984:	9301      	str	r3, [sp, #4]
 8022986:	9200      	str	r2, [sp, #0]
 8022988:	e9cd c405 	strd	ip, r4, [sp, #20]
 802298c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022990:	4639      	mov	r1, r7
 8022992:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022994:	f7ff fc04 	bl	80221a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022998:	e73e      	b.n	8022818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802299a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802299c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80229a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80229a2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80229a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80229a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80229ac:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80229ae:	141f      	asrs	r7, r3, #16
 80229b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80229b2:	141b      	asrs	r3, r3, #16
 80229b4:	fb01 3707 	mla	r7, r1, r7, r3
 80229b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80229ba:	fa1f fc82 	uxth.w	ip, r2
 80229be:	eb03 0a07 	add.w	sl, r3, r7
 80229c2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80229c6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80229ca:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80229ce:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80229d2:	b29b      	uxth	r3, r3
 80229d4:	2d00      	cmp	r5, #0
 80229d6:	f000 813d 	beq.w	8022c54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80229da:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80229de:	940f      	str	r4, [sp, #60]	; 0x3c
 80229e0:	eb0a 0b01 	add.w	fp, sl, r1
 80229e4:	fa1f fa85 	uxth.w	sl, r5
 80229e8:	fb0a fc0c 	mul.w	ip, sl, ip
 80229ec:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80229f0:	fa1f fa8a 	uxth.w	sl, sl
 80229f4:	eba0 000c 	sub.w	r0, r0, ip
 80229f8:	eba3 030a 	sub.w	r3, r3, sl
 80229fc:	b280      	uxth	r0, r0
 80229fe:	fb08 f000 	mul.w	r0, r8, r0
 8022a02:	b29b      	uxth	r3, r3
 8022a04:	fb09 0303 	mla	r3, r9, r3, r0
 8022a08:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022a0a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022a0e:	9410      	str	r4, [sp, #64]	; 0x40
 8022a10:	fb0a 3300 	mla	r3, sl, r0, r3
 8022a14:	fb0c 3304 	mla	r3, ip, r4, r3
 8022a18:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022a1c:	2b00      	cmp	r3, #0
 8022a1e:	f000 810b 	beq.w	8022c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022a22:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022a24:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a26:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022a2a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022a2e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022a32:	f000 8114 	beq.w	8022c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022a36:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022a3a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022a3e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022a42:	fb09 f707 	mul.w	r7, r9, r7
 8022a46:	fb0a fc0c 	mul.w	ip, sl, ip
 8022a4a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022a4e:	f107 0b20 	add.w	fp, r7, #32
 8022a52:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022a56:	44cc      	add	ip, r9
 8022a58:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022a5c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022a60:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022a64:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022a68:	ea4c 0909 	orr.w	r9, ip, r9
 8022a6c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022a70:	8847      	ldrh	r7, [r0, #2]
 8022a72:	d019      	beq.n	8022aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022a74:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022a78:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022a7c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022a80:	fb08 f807 	mul.w	r8, r8, r7
 8022a84:	fb0a fc0c 	mul.w	ip, sl, ip
 8022a88:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022a8c:	f108 0b20 	add.w	fp, r8, #32
 8022a90:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022a94:	44bc      	add	ip, r7
 8022a96:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022a9a:	0a3f      	lsrs	r7, r7, #8
 8022a9c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022aa0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022aa4:	ea4c 0707 	orr.w	r7, ip, r7
 8022aa8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022aac:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022ab0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022ab4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022ab8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022abc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022ac0:	ea4c 0909 	orr.w	r9, ip, r9
 8022ac4:	ea4a 0707 	orr.w	r7, sl, r7
 8022ac8:	2d00      	cmp	r5, #0
 8022aca:	f000 80ca 	beq.w	8022c62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022ace:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022ad2:	3901      	subs	r1, #1
 8022ad4:	0049      	lsls	r1, r1, #1
 8022ad6:	3102      	adds	r1, #2
 8022ad8:	eb00 0c01 	add.w	ip, r0, r1
 8022adc:	5a41      	ldrh	r1, [r0, r1]
 8022ade:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022ae0:	28ff      	cmp	r0, #255	; 0xff
 8022ae2:	d019      	beq.n	8022b18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022ae4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022ae6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022aea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022aee:	fb04 fa01 	mul.w	sl, r4, r1
 8022af2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022af6:	fb08 f800 	mul.w	r8, r8, r0
 8022afa:	f10a 0020 	add.w	r0, sl, #32
 8022afe:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022b02:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022b06:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022b0a:	4441      	add	r1, r8
 8022b0c:	0a00      	lsrs	r0, r0, #8
 8022b0e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022b12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022b16:	4301      	orrs	r1, r0
 8022b18:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022b1a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022b1e:	2cff      	cmp	r4, #255	; 0xff
 8022b20:	d01a      	beq.n	8022b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022b22:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022b26:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022b2a:	fb04 fa00 	mul.w	sl, r4, r0
 8022b2e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022b32:	fb08 f80c 	mul.w	r8, r8, ip
 8022b36:	f10a 0c20 	add.w	ip, sl, #32
 8022b3a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022b3e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022b42:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022b46:	4440      	add	r0, r8
 8022b48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022b4c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022b50:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022b54:	ea40 000c 	orr.w	r0, r0, ip
 8022b58:	fb15 fc02 	smulbb	ip, r5, r2
 8022b5c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022b60:	f1c5 0810 	rsb	r8, r5, #16
 8022b64:	eba8 0802 	sub.w	r8, r8, r2
 8022b68:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022b6c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022b70:	437a      	muls	r2, r7
 8022b72:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022b76:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022b7a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022b7e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022b82:	fb09 2208 	mla	r2, r9, r8, r2
 8022b86:	ea4a 0101 	orr.w	r1, sl, r1
 8022b8a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022b8e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022b92:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022b96:	fb05 2201 	mla	r2, r5, r1, r2
 8022b9a:	ea4b 0000 	orr.w	r0, fp, r0
 8022b9e:	fb0c 2200 	mla	r2, ip, r0, r2
 8022ba2:	0d57      	lsrs	r7, r2, #21
 8022ba4:	0952      	lsrs	r2, r2, #5
 8022ba6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022baa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022bae:	433a      	orrs	r2, r7
 8022bb0:	2bff      	cmp	r3, #255	; 0xff
 8022bb2:	b292      	uxth	r2, r2
 8022bb4:	d102      	bne.n	8022bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022bb6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022bb8:	29ff      	cmp	r1, #255	; 0xff
 8022bba:	d063      	beq.n	8022c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022bbc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022bbe:	f8be 1000 	ldrh.w	r1, [lr]
 8022bc2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022bc4:	4343      	muls	r3, r0
 8022bc6:	1c58      	adds	r0, r3, #1
 8022bc8:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022bcc:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022bd0:	1208      	asrs	r0, r1, #8
 8022bd2:	b2db      	uxtb	r3, r3
 8022bd4:	1215      	asrs	r5, r2, #8
 8022bd6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022bda:	fb10 f003 	smulbb	r0, r0, r3
 8022bde:	10cf      	asrs	r7, r1, #3
 8022be0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022be4:	00c9      	lsls	r1, r1, #3
 8022be6:	fb05 0504 	mla	r5, r5, r4, r0
 8022bea:	b2c9      	uxtb	r1, r1
 8022bec:	10d0      	asrs	r0, r2, #3
 8022bee:	00d2      	lsls	r2, r2, #3
 8022bf0:	fb11 f103 	smulbb	r1, r1, r3
 8022bf4:	b2d2      	uxtb	r2, r2
 8022bf6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022bfa:	fb02 1204 	mla	r2, r2, r4, r1
 8022bfe:	fb17 f703 	smulbb	r7, r7, r3
 8022c02:	b2ad      	uxth	r5, r5
 8022c04:	b292      	uxth	r2, r2
 8022c06:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022c0a:	fb00 7004 	mla	r0, r0, r4, r7
 8022c0e:	1c6b      	adds	r3, r5, #1
 8022c10:	1c57      	adds	r7, r2, #1
 8022c12:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022c16:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022c1a:	b280      	uxth	r0, r0
 8022c1c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022c20:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022c24:	433d      	orrs	r5, r7
 8022c26:	1c47      	adds	r7, r0, #1
 8022c28:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022c2c:	097f      	lsrs	r7, r7, #5
 8022c2e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022c32:	433d      	orrs	r5, r7
 8022c34:	f8ae 5000 	strh.w	r5, [lr]
 8022c38:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022c3a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022c3c:	4413      	add	r3, r2
 8022c3e:	9321      	str	r3, [sp, #132]	; 0x84
 8022c40:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022c42:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c44:	441a      	add	r2, r3
 8022c46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022c48:	9222      	str	r2, [sp, #136]	; 0x88
 8022c4a:	3b01      	subs	r3, #1
 8022c4c:	f10e 0e02 	add.w	lr, lr, #2
 8022c50:	9313      	str	r3, [sp, #76]	; 0x4c
 8022c52:	e61c      	b.n	802288e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022c54:	fb08 f000 	mul.w	r0, r8, r0
 8022c58:	fb09 0303 	mla	r3, r9, r3, r0
 8022c5c:	e6dc      	b.n	8022a18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022c5e:	46b9      	mov	r9, r7
 8022c60:	e704      	b.n	8022a6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022c62:	f1c2 0110 	rsb	r1, r2, #16
 8022c66:	437a      	muls	r2, r7
 8022c68:	fb09 2901 	mla	r9, r9, r1, r2
 8022c6c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022c70:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022c74:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022c78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022c7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c80:	4302      	orrs	r2, r0
 8022c82:	e795      	b.n	8022bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022c84:	f8ae 2000 	strh.w	r2, [lr]
 8022c88:	e7d6      	b.n	8022c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022c8a:	b017      	add	sp, #92	; 0x5c
 8022c8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022c90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c94:	b085      	sub	sp, #20
 8022c96:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022c9a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022c9e:	9103      	str	r1, [sp, #12]
 8022ca0:	fb00 7406 	mla	r4, r0, r6, r7
 8022ca4:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022ca8:	2800      	cmp	r0, #0
 8022caa:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022cae:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022cb2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022cb6:	9501      	str	r5, [sp, #4]
 8022cb8:	eb02 0904 	add.w	r9, r2, r4
 8022cbc:	f2c0 8141 	blt.w	8022f42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022cc0:	4583      	cmp	fp, r0
 8022cc2:	f340 813e 	ble.w	8022f42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022cc6:	2f00      	cmp	r7, #0
 8022cc8:	f2c0 8137 	blt.w	8022f3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022ccc:	42be      	cmp	r6, r7
 8022cce:	f340 8134 	ble.w	8022f3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022cd2:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022cd6:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022cda:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022cde:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022ce2:	4355      	muls	r5, r2
 8022ce4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ce8:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022cec:	fb0c f203 	mul.w	r2, ip, r3
 8022cf0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022cf4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022cf8:	441d      	add	r5, r3
 8022cfa:	f102 0320 	add.w	r3, r2, #32
 8022cfe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022d02:	0a1b      	lsrs	r3, r3, #8
 8022d04:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022d08:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d0c:	431c      	orrs	r4, r3
 8022d0e:	1c7b      	adds	r3, r7, #1
 8022d10:	f100 811c 	bmi.w	8022f4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022d14:	429e      	cmp	r6, r3
 8022d16:	f340 8119 	ble.w	8022f4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022d1a:	2900      	cmp	r1, #0
 8022d1c:	f000 8119 	beq.w	8022f52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022d20:	9a01      	ldr	r2, [sp, #4]
 8022d22:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022d26:	8855      	ldrh	r5, [r2, #2]
 8022d28:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022d2c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022d30:	fb08 f802 	mul.w	r8, r8, r2
 8022d34:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022d38:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022d3c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022d40:	435d      	muls	r5, r3
 8022d42:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022d46:	44d0      	add	r8, sl
 8022d48:	f105 0a20 	add.w	sl, r5, #32
 8022d4c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022d50:	0a2d      	lsrs	r5, r5, #8
 8022d52:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022d56:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022d5a:	432a      	orrs	r2, r5
 8022d5c:	3001      	adds	r0, #1
 8022d5e:	f100 80fe 	bmi.w	8022f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022d62:	4583      	cmp	fp, r0
 8022d64:	f340 80fb 	ble.w	8022f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022d68:	f1be 0f00 	cmp.w	lr, #0
 8022d6c:	f000 80fc 	beq.w	8022f68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022d70:	2f00      	cmp	r7, #0
 8022d72:	f2c0 80f1 	blt.w	8022f58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022d76:	42be      	cmp	r6, r7
 8022d78:	f340 80ee 	ble.w	8022f58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022d7c:	9801      	ldr	r0, [sp, #4]
 8022d7e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022d82:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022d86:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022d8a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022d8e:	fb0a fa00 	mul.w	sl, sl, r0
 8022d92:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022d96:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022d9a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022d9e:	fb05 f808 	mul.w	r8, r5, r8
 8022da2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022da6:	4482      	add	sl, r0
 8022da8:	f108 0020 	add.w	r0, r8, #32
 8022dac:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022db0:	0a00      	lsrs	r0, r0, #8
 8022db2:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022db6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022dba:	ea4b 0b00 	orr.w	fp, fp, r0
 8022dbe:	3701      	adds	r7, #1
 8022dc0:	f100 80d7 	bmi.w	8022f72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022dc4:	42be      	cmp	r6, r7
 8022dc6:	f340 80d4 	ble.w	8022f72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022dca:	2900      	cmp	r1, #0
 8022dcc:	f000 80d4 	beq.w	8022f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022dd0:	3601      	adds	r6, #1
 8022dd2:	9801      	ldr	r0, [sp, #4]
 8022dd4:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022dd8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022ddc:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022de0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022de4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022de8:	fb09 f906 	mul.w	r9, r9, r6
 8022dec:	fb07 f800 	mul.w	r8, r7, r0
 8022df0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022df4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022df8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022dfc:	44d1      	add	r9, sl
 8022dfe:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022e02:	f108 0020 	add.w	r0, r8, #32
 8022e06:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022e0a:	0a00      	lsrs	r0, r0, #8
 8022e0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e10:	4330      	orrs	r0, r6
 8022e12:	b28e      	uxth	r6, r1
 8022e14:	fa1f f98e 	uxth.w	r9, lr
 8022e18:	fb06 f809 	mul.w	r8, r6, r9
 8022e1c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022e20:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022e24:	0136      	lsls	r6, r6, #4
 8022e26:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022e2a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022e2e:	9601      	str	r6, [sp, #4]
 8022e30:	ea4a 0404 	orr.w	r4, sl, r4
 8022e34:	fa1f f689 	uxth.w	r6, r9
 8022e38:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022e3c:	fb11 f90e 	smulbb	r9, r1, lr
 8022e40:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022e44:	9602      	str	r6, [sp, #8]
 8022e46:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022e4a:	4626      	mov	r6, r4
 8022e4c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022e50:	f1ce 0410 	rsb	r4, lr, #16
 8022e54:	1a64      	subs	r4, r4, r1
 8022e56:	ea4a 0202 	orr.w	r2, sl, r2
 8022e5a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022e5e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022e62:	434a      	muls	r2, r1
 8022e64:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022e68:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022e6c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022e70:	fb04 2406 	mla	r4, r4, r6, r2
 8022e74:	ea4a 0000 	orr.w	r0, sl, r0
 8022e78:	fb09 4200 	mla	r2, r9, r0, r4
 8022e7c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022e80:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022e84:	9801      	ldr	r0, [sp, #4]
 8022e86:	9903      	ldr	r1, [sp, #12]
 8022e88:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022e8c:	ea44 0b0b 	orr.w	fp, r4, fp
 8022e90:	9c02      	ldr	r4, [sp, #8]
 8022e92:	8809      	ldrh	r1, [r1, #0]
 8022e94:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022e98:	1b00      	subs	r0, r0, r4
 8022e9a:	9c01      	ldr	r4, [sp, #4]
 8022e9c:	eba4 0608 	sub.w	r6, r4, r8
 8022ea0:	b2b6      	uxth	r6, r6
 8022ea2:	b280      	uxth	r0, r0
 8022ea4:	4373      	muls	r3, r6
 8022ea6:	fb0c 3300 	mla	r3, ip, r0, r3
 8022eaa:	9802      	ldr	r0, [sp, #8]
 8022eac:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022eb0:	fb00 3505 	mla	r5, r0, r5, r3
 8022eb4:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022eb8:	fb08 5707 	mla	r7, r8, r7, r5
 8022ebc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022ec0:	120b      	asrs	r3, r1, #8
 8022ec2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022ec6:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022eca:	b2ff      	uxtb	r7, r7
 8022ecc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ed0:	10c8      	asrs	r0, r1, #3
 8022ed2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022ed6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022eda:	00c9      	lsls	r1, r1, #3
 8022edc:	437b      	muls	r3, r7
 8022ede:	ea42 0e0e 	orr.w	lr, r2, lr
 8022ee2:	b2c9      	uxtb	r1, r1
 8022ee4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022ee8:	fa1f f28e 	uxth.w	r2, lr
 8022eec:	4378      	muls	r0, r7
 8022eee:	434f      	muls	r7, r1
 8022ef0:	1c59      	adds	r1, r3, #1
 8022ef2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022ef6:	1213      	asrs	r3, r2, #8
 8022ef8:	f023 0307 	bic.w	r3, r3, #7
 8022efc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022f00:	1c41      	adds	r1, r0, #1
 8022f02:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022f06:	10d1      	asrs	r1, r2, #3
 8022f08:	f021 0103 	bic.w	r1, r1, #3
 8022f0c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022f10:	021b      	lsls	r3, r3, #8
 8022f12:	00c9      	lsls	r1, r1, #3
 8022f14:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022f18:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8022f1c:	430b      	orrs	r3, r1
 8022f1e:	1c79      	adds	r1, r7, #1
 8022f20:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8022f24:	00d2      	lsls	r2, r2, #3
 8022f26:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8022f2a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022f2e:	431a      	orrs	r2, r3
 8022f30:	9b03      	ldr	r3, [sp, #12]
 8022f32:	801a      	strh	r2, [r3, #0]
 8022f34:	b005      	add	sp, #20
 8022f36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f3a:	f04f 0c00 	mov.w	ip, #0
 8022f3e:	4664      	mov	r4, ip
 8022f40:	e6e5      	b.n	8022d0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8022f42:	2300      	movs	r3, #0
 8022f44:	469c      	mov	ip, r3
 8022f46:	461a      	mov	r2, r3
 8022f48:	461c      	mov	r4, r3
 8022f4a:	e707      	b.n	8022d5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022f4c:	2300      	movs	r3, #0
 8022f4e:	461a      	mov	r2, r3
 8022f50:	e704      	b.n	8022d5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022f52:	460b      	mov	r3, r1
 8022f54:	460a      	mov	r2, r1
 8022f56:	e701      	b.n	8022d5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022f58:	2500      	movs	r5, #0
 8022f5a:	46ab      	mov	fp, r5
 8022f5c:	e72f      	b.n	8022dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8022f5e:	2700      	movs	r7, #0
 8022f60:	463d      	mov	r5, r7
 8022f62:	4638      	mov	r0, r7
 8022f64:	46bb      	mov	fp, r7
 8022f66:	e754      	b.n	8022e12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022f68:	4677      	mov	r7, lr
 8022f6a:	4675      	mov	r5, lr
 8022f6c:	4670      	mov	r0, lr
 8022f6e:	46f3      	mov	fp, lr
 8022f70:	e74f      	b.n	8022e12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022f72:	2700      	movs	r7, #0
 8022f74:	4638      	mov	r0, r7
 8022f76:	e74c      	b.n	8022e12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022f78:	460f      	mov	r7, r1
 8022f7a:	4608      	mov	r0, r1
 8022f7c:	e749      	b.n	8022e12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08022f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f84:	b093      	sub	sp, #76	; 0x4c
 8022f86:	9210      	str	r2, [sp, #64]	; 0x40
 8022f88:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022f8a:	910e      	str	r1, [sp, #56]	; 0x38
 8022f8c:	9306      	str	r3, [sp, #24]
 8022f8e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022f92:	9011      	str	r0, [sp, #68]	; 0x44
 8022f94:	6850      	ldr	r0, [r2, #4]
 8022f96:	6812      	ldr	r2, [r2, #0]
 8022f98:	fb00 1303 	mla	r3, r0, r3, r1
 8022f9c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022fa0:	9307      	str	r3, [sp, #28]
 8022fa2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fa4:	681b      	ldr	r3, [r3, #0]
 8022fa6:	9308      	str	r3, [sp, #32]
 8022fa8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022faa:	685b      	ldr	r3, [r3, #4]
 8022fac:	9309      	str	r3, [sp, #36]	; 0x24
 8022fae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022fb0:	2b00      	cmp	r3, #0
 8022fb2:	dc03      	bgt.n	8022fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022fb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022fb6:	2b00      	cmp	r3, #0
 8022fb8:	f340 83b4 	ble.w	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022fbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022fc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022fc6:	1e48      	subs	r0, r1, #1
 8022fc8:	1e55      	subs	r5, r2, #1
 8022fca:	9b06      	ldr	r3, [sp, #24]
 8022fcc:	2b00      	cmp	r3, #0
 8022fce:	f340 8163 	ble.w	8023298 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8022fd2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8022fd4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022fd6:	1436      	asrs	r6, r6, #16
 8022fd8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022fdc:	d406      	bmi.n	8022fec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022fde:	4286      	cmp	r6, r0
 8022fe0:	da04      	bge.n	8022fec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022fe2:	2b00      	cmp	r3, #0
 8022fe4:	db02      	blt.n	8022fec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022fe6:	42ab      	cmp	r3, r5
 8022fe8:	f2c0 8157 	blt.w	802329a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8022fec:	3601      	adds	r6, #1
 8022fee:	f100 8144 	bmi.w	802327a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022ff2:	42b1      	cmp	r1, r6
 8022ff4:	f2c0 8141 	blt.w	802327a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022ff8:	3301      	adds	r3, #1
 8022ffa:	f100 813e 	bmi.w	802327a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022ffe:	429a      	cmp	r2, r3
 8023000:	f2c0 813b 	blt.w	802327a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023004:	9b06      	ldr	r3, [sp, #24]
 8023006:	9f07      	ldr	r7, [sp, #28]
 8023008:	930f      	str	r3, [sp, #60]	; 0x3c
 802300a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802300e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023010:	2b00      	cmp	r3, #0
 8023012:	f340 8164 	ble.w	80232de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8023016:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023018:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802301a:	1418      	asrs	r0, r3, #16
 802301c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802301e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023022:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023024:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8023028:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802302a:	142d      	asrs	r5, r5, #16
 802302c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023030:	f100 81ee 	bmi.w	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023034:	f102 3eff 	add.w	lr, r2, #4294967295
 8023038:	4575      	cmp	r5, lr
 802303a:	f280 81e9 	bge.w	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802303e:	2800      	cmp	r0, #0
 8023040:	f2c0 81e6 	blt.w	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023044:	f103 3eff 	add.w	lr, r3, #4294967295
 8023048:	4570      	cmp	r0, lr
 802304a:	f280 81e1 	bge.w	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802304e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023050:	b212      	sxth	r2, r2
 8023052:	fb00 5002 	mla	r0, r0, r2, r5
 8023056:	fa1f fe81 	uxth.w	lr, r1
 802305a:	eb03 0a00 	add.w	sl, r3, r0
 802305e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023062:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023066:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802306a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802306e:	b29b      	uxth	r3, r3
 8023070:	f1bc 0f00 	cmp.w	ip, #0
 8023074:	f000 8179 	beq.w	802336a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023078:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802307c:	940a      	str	r4, [sp, #40]	; 0x28
 802307e:	eb0a 0b02 	add.w	fp, sl, r2
 8023082:	fa1f fa8c 	uxth.w	sl, ip
 8023086:	fb0a fe0e 	mul.w	lr, sl, lr
 802308a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802308e:	fa1f fa8a 	uxth.w	sl, sl
 8023092:	eba5 050e 	sub.w	r5, r5, lr
 8023096:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802309a:	940b      	str	r4, [sp, #44]	; 0x2c
 802309c:	eba3 030a 	sub.w	r3, r3, sl
 80230a0:	b2ad      	uxth	r5, r5
 80230a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80230a4:	b29b      	uxth	r3, r3
 80230a6:	fb08 f505 	mul.w	r5, r8, r5
 80230aa:	fb09 5303 	mla	r3, r9, r3, r5
 80230ae:	fb0a 3304 	mla	r3, sl, r4, r3
 80230b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80230b4:	fb0e 3304 	mla	r3, lr, r4, r3
 80230b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80230bc:	2b00      	cmp	r3, #0
 80230be:	f000 80cf 	beq.w	8023260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80230c2:	9c08      	ldr	r4, [sp, #32]
 80230c4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80230c8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80230cc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80230d0:	f000 8150 	beq.w	8023374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80230d4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80230d8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80230dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80230e0:	fb09 f000 	mul.w	r0, r9, r0
 80230e4:	fb0a fe0e 	mul.w	lr, sl, lr
 80230e8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80230ec:	f100 0b20 	add.w	fp, r0, #32
 80230f0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80230f4:	44ce      	add	lr, r9
 80230f6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80230fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80230fe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023102:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023106:	ea4e 0909 	orr.w	r9, lr, r9
 802310a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802310e:	8868      	ldrh	r0, [r5, #2]
 8023110:	d019      	beq.n	8023146 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023112:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023116:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802311a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802311e:	fb08 f800 	mul.w	r8, r8, r0
 8023122:	fb0a fe0e 	mul.w	lr, sl, lr
 8023126:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802312a:	f108 0b20 	add.w	fp, r8, #32
 802312e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023132:	4486      	add	lr, r0
 8023134:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023138:	0a00      	lsrs	r0, r0, #8
 802313a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802313e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023142:	ea4e 0000 	orr.w	r0, lr, r0
 8023146:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802314a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802314e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023152:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023156:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802315a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802315e:	ea4e 0909 	orr.w	r9, lr, r9
 8023162:	ea4a 0000 	orr.w	r0, sl, r0
 8023166:	f1bc 0f00 	cmp.w	ip, #0
 802316a:	f000 8105 	beq.w	8023378 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802316e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023172:	3a01      	subs	r2, #1
 8023174:	0052      	lsls	r2, r2, #1
 8023176:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023178:	3202      	adds	r2, #2
 802317a:	2cff      	cmp	r4, #255	; 0xff
 802317c:	eb05 0e02 	add.w	lr, r5, r2
 8023180:	5aaa      	ldrh	r2, [r5, r2]
 8023182:	d018      	beq.n	80231b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023184:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023188:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802318c:	fb04 fa02 	mul.w	sl, r4, r2
 8023190:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023194:	fb08 f805 	mul.w	r8, r8, r5
 8023198:	f10a 0520 	add.w	r5, sl, #32
 802319c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80231a0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80231a4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80231a8:	4442      	add	r2, r8
 80231aa:	0a2d      	lsrs	r5, r5, #8
 80231ac:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80231b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80231b4:	432a      	orrs	r2, r5
 80231b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80231b8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80231bc:	2cff      	cmp	r4, #255	; 0xff
 80231be:	d01a      	beq.n	80231f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80231c0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80231c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80231c8:	fb04 fa05 	mul.w	sl, r4, r5
 80231cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80231d0:	fb08 f80e 	mul.w	r8, r8, lr
 80231d4:	f10a 0e20 	add.w	lr, sl, #32
 80231d8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80231dc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80231e0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80231e4:	4445      	add	r5, r8
 80231e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80231ea:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80231ee:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80231f2:	ea45 050e 	orr.w	r5, r5, lr
 80231f6:	fb1c fe01 	smulbb	lr, ip, r1
 80231fa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80231fe:	f1cc 0810 	rsb	r8, ip, #16
 8023202:	eba8 0801 	sub.w	r8, r8, r1
 8023206:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802320a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802320e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023212:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023216:	4341      	muls	r1, r0
 8023218:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802321c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023220:	ea4a 0202 	orr.w	r2, sl, r2
 8023224:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023228:	fb09 1108 	mla	r1, r9, r8, r1
 802322c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023230:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023234:	fb0c 1102 	mla	r1, ip, r2, r1
 8023238:	ea4b 0505 	orr.w	r5, fp, r5
 802323c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023240:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023244:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023248:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802324c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023250:	ea42 0e0e 	orr.w	lr, r2, lr
 8023254:	fa1f f28e 	uxth.w	r2, lr
 8023258:	2bff      	cmp	r3, #255	; 0xff
 802325a:	f040 80a1 	bne.w	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802325e:	803a      	strh	r2, [r7, #0]
 8023260:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023262:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023264:	4413      	add	r3, r2
 8023266:	931d      	str	r3, [sp, #116]	; 0x74
 8023268:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802326a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802326c:	441a      	add	r2, r3
 802326e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023270:	921e      	str	r2, [sp, #120]	; 0x78
 8023272:	3b01      	subs	r3, #1
 8023274:	3702      	adds	r7, #2
 8023276:	930f      	str	r3, [sp, #60]	; 0x3c
 8023278:	e6c9      	b.n	802300e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802327a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802327c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802327e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023280:	4433      	add	r3, r6
 8023282:	931d      	str	r3, [sp, #116]	; 0x74
 8023284:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023286:	441c      	add	r4, r3
 8023288:	9b06      	ldr	r3, [sp, #24]
 802328a:	941e      	str	r4, [sp, #120]	; 0x78
 802328c:	3b01      	subs	r3, #1
 802328e:	9306      	str	r3, [sp, #24]
 8023290:	9b07      	ldr	r3, [sp, #28]
 8023292:	3302      	adds	r3, #2
 8023294:	9307      	str	r3, [sp, #28]
 8023296:	e698      	b.n	8022fca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023298:	d028      	beq.n	80232ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802329a:	9b06      	ldr	r3, [sp, #24]
 802329c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802329e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80232a0:	3b01      	subs	r3, #1
 80232a2:	fb00 5003 	mla	r0, r0, r3, r5
 80232a6:	1400      	asrs	r0, r0, #16
 80232a8:	f53f aeac 	bmi.w	8023004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80232ac:	3901      	subs	r1, #1
 80232ae:	4288      	cmp	r0, r1
 80232b0:	f6bf aea8 	bge.w	8023004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80232b4:	9920      	ldr	r1, [sp, #128]	; 0x80
 80232b6:	981e      	ldr	r0, [sp, #120]	; 0x78
 80232b8:	fb01 0303 	mla	r3, r1, r3, r0
 80232bc:	141b      	asrs	r3, r3, #16
 80232be:	f53f aea1 	bmi.w	8023004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80232c2:	3a01      	subs	r2, #1
 80232c4:	4293      	cmp	r3, r2
 80232c6:	f6bf ae9d 	bge.w	8023004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80232ca:	9b06      	ldr	r3, [sp, #24]
 80232cc:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80232d0:	930f      	str	r3, [sp, #60]	; 0x3c
 80232d2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80232d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80232d8:	2b00      	cmp	r3, #0
 80232da:	f300 80b6 	bgt.w	802344a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80232de:	9b06      	ldr	r3, [sp, #24]
 80232e0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80232e4:	9b07      	ldr	r3, [sp, #28]
 80232e6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80232ea:	9307      	str	r3, [sp, #28]
 80232ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80232ee:	2b00      	cmp	r3, #0
 80232f0:	f340 8218 	ble.w	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80232f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80232f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80232fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023300:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023302:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023306:	ee31 1a05 	vadd.f32	s2, s2, s10
 802330a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802330e:	eef0 6a62 	vmov.f32	s13, s5
 8023312:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023316:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802331a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802331e:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8023322:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023326:	eef0 6a43 	vmov.f32	s13, s6
 802332a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802332e:	ee12 2a90 	vmov	r2, s5
 8023332:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023336:	fb92 f3f3 	sdiv	r3, r2, r3
 802333a:	ee13 2a10 	vmov	r2, s6
 802333e:	931f      	str	r3, [sp, #124]	; 0x7c
 8023340:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023342:	fb92 f3f3 	sdiv	r3, r2, r3
 8023346:	9320      	str	r3, [sp, #128]	; 0x80
 8023348:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802334a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802334c:	3b01      	subs	r3, #1
 802334e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023352:	930e      	str	r3, [sp, #56]	; 0x38
 8023354:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023356:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 802335a:	bf08      	it	eq
 802335c:	4613      	moveq	r3, r2
 802335e:	9306      	str	r3, [sp, #24]
 8023360:	eeb0 3a67 	vmov.f32	s6, s15
 8023364:	eef0 2a47 	vmov.f32	s5, s14
 8023368:	e621      	b.n	8022fae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802336a:	fb08 f505 	mul.w	r5, r8, r5
 802336e:	fb09 5303 	mla	r3, r9, r3, r5
 8023372:	e6a1      	b.n	80230b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023374:	4681      	mov	r9, r0
 8023376:	e6c8      	b.n	802310a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023378:	f1c1 0210 	rsb	r2, r1, #16
 802337c:	4341      	muls	r1, r0
 802337e:	fb09 1902 	mla	r9, r9, r2, r1
 8023382:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023386:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802338a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802338e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023392:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023396:	ea42 0909 	orr.w	r9, r2, r9
 802339a:	fa1f f289 	uxth.w	r2, r9
 802339e:	e75b      	b.n	8023258 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80233a0:	f8b7 c000 	ldrh.w	ip, [r7]
 80233a4:	43db      	mvns	r3, r3
 80233a6:	ea4f 202c 	mov.w	r0, ip, asr #8
 80233aa:	fa5f fe83 	uxtb.w	lr, r3
 80233ae:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80233b2:	fb00 f00e 	mul.w	r0, r0, lr
 80233b6:	1c41      	adds	r1, r0, #1
 80233b8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80233bc:	1211      	asrs	r1, r2, #8
 80233be:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80233c2:	f021 0107 	bic.w	r1, r1, #7
 80233c6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80233ca:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80233ce:	48d7      	ldr	r0, [pc, #860]	; (802372c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80233d0:	fb05 f50e 	mul.w	r5, r5, lr
 80233d4:	b2c9      	uxtb	r1, r1
 80233d6:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80233da:	1c69      	adds	r1, r5, #1
 80233dc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80233e0:	10d1      	asrs	r1, r2, #3
 80233e2:	f021 0103 	bic.w	r1, r1, #3
 80233e6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80233ea:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80233ee:	b2db      	uxtb	r3, r3
 80233f0:	00c9      	lsls	r1, r1, #3
 80233f2:	fb03 f30e 	mul.w	r3, r3, lr
 80233f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80233fa:	4301      	orrs	r1, r0
 80233fc:	1c58      	adds	r0, r3, #1
 80233fe:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023402:	00d2      	lsls	r2, r2, #3
 8023404:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023408:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802340c:	430a      	orrs	r2, r1
 802340e:	e726      	b.n	802325e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8023410:	f115 0e01 	adds.w	lr, r5, #1
 8023414:	f53f af24 	bmi.w	8023260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023418:	4572      	cmp	r2, lr
 802341a:	f6ff af21 	blt.w	8023260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802341e:	f110 0e01 	adds.w	lr, r0, #1
 8023422:	f53f af1d 	bmi.w	8023260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023426:	4573      	cmp	r3, lr
 8023428:	f6ff af1a 	blt.w	8023260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802342c:	b21b      	sxth	r3, r3
 802342e:	b212      	sxth	r2, r2
 8023430:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8023434:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8023438:	9301      	str	r3, [sp, #4]
 802343a:	9200      	str	r2, [sp, #0]
 802343c:	4639      	mov	r1, r7
 802343e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8023442:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023444:	f7ff fc24 	bl	8022c90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023448:	e70a      	b.n	8023260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802344a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802344c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023450:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023452:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023456:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023458:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802345c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802345e:	141f      	asrs	r7, r3, #16
 8023460:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023462:	141b      	asrs	r3, r3, #16
 8023464:	fb01 3707 	mla	r7, r1, r7, r3
 8023468:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802346a:	fa1f fc82 	uxth.w	ip, r2
 802346e:	eb03 0a07 	add.w	sl, r3, r7
 8023472:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023476:	f813 9007 	ldrb.w	r9, [r3, r7]
 802347a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802347e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023482:	b29b      	uxth	r3, r3
 8023484:	2d00      	cmp	r5, #0
 8023486:	f000 80fe 	beq.w	8023686 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802348a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802348e:	940c      	str	r4, [sp, #48]	; 0x30
 8023490:	eb0a 0b01 	add.w	fp, sl, r1
 8023494:	fa1f fa85 	uxth.w	sl, r5
 8023498:	fb0a fc0c 	mul.w	ip, sl, ip
 802349c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80234a0:	fa1f fa8a 	uxth.w	sl, sl
 80234a4:	eba0 000c 	sub.w	r0, r0, ip
 80234a8:	eba3 030a 	sub.w	r3, r3, sl
 80234ac:	b280      	uxth	r0, r0
 80234ae:	fb08 f000 	mul.w	r0, r8, r0
 80234b2:	b29b      	uxth	r3, r3
 80234b4:	fb09 0303 	mla	r3, r9, r3, r0
 80234b8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80234ba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80234be:	940d      	str	r4, [sp, #52]	; 0x34
 80234c0:	fb0a 3300 	mla	r3, sl, r0, r3
 80234c4:	fb0c 3304 	mla	r3, ip, r4, r3
 80234c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80234cc:	2b00      	cmp	r3, #0
 80234ce:	f000 80cc 	beq.w	802366a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80234d2:	9808      	ldr	r0, [sp, #32]
 80234d4:	9c08      	ldr	r4, [sp, #32]
 80234d6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80234da:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80234de:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80234e2:	f000 80d5 	beq.w	8023690 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80234e6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80234ea:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80234ee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80234f2:	fb09 f707 	mul.w	r7, r9, r7
 80234f6:	fb0a fc0c 	mul.w	ip, sl, ip
 80234fa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80234fe:	f107 0b20 	add.w	fp, r7, #32
 8023502:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023506:	44cc      	add	ip, r9
 8023508:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802350c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023510:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023514:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023518:	ea4c 0909 	orr.w	r9, ip, r9
 802351c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023520:	8847      	ldrh	r7, [r0, #2]
 8023522:	d019      	beq.n	8023558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8023524:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023528:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802352c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023530:	fb08 f807 	mul.w	r8, r8, r7
 8023534:	fb0a fc0c 	mul.w	ip, sl, ip
 8023538:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802353c:	f108 0b20 	add.w	fp, r8, #32
 8023540:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023544:	44bc      	add	ip, r7
 8023546:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802354a:	0a3f      	lsrs	r7, r7, #8
 802354c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023550:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023554:	ea4c 0707 	orr.w	r7, ip, r7
 8023558:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802355c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023560:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023564:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023568:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802356c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023570:	ea4c 0909 	orr.w	r9, ip, r9
 8023574:	ea4a 0707 	orr.w	r7, sl, r7
 8023578:	2d00      	cmp	r5, #0
 802357a:	f000 808b 	beq.w	8023694 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802357e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023582:	3901      	subs	r1, #1
 8023584:	0049      	lsls	r1, r1, #1
 8023586:	3102      	adds	r1, #2
 8023588:	eb00 0c01 	add.w	ip, r0, r1
 802358c:	5a41      	ldrh	r1, [r0, r1]
 802358e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023590:	28ff      	cmp	r0, #255	; 0xff
 8023592:	d019      	beq.n	80235c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8023594:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023596:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802359a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802359e:	fb04 fa01 	mul.w	sl, r4, r1
 80235a2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80235a6:	fb08 f800 	mul.w	r8, r8, r0
 80235aa:	f10a 0020 	add.w	r0, sl, #32
 80235ae:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80235b2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80235b6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80235ba:	4441      	add	r1, r8
 80235bc:	0a00      	lsrs	r0, r0, #8
 80235be:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80235c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80235c6:	4301      	orrs	r1, r0
 80235c8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80235ca:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80235ce:	2cff      	cmp	r4, #255	; 0xff
 80235d0:	d01a      	beq.n	8023608 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80235d2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80235d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80235da:	fb04 fa00 	mul.w	sl, r4, r0
 80235de:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80235e2:	fb08 f80c 	mul.w	r8, r8, ip
 80235e6:	f10a 0c20 	add.w	ip, sl, #32
 80235ea:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80235ee:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80235f2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80235f6:	4440      	add	r0, r8
 80235f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80235fc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023600:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023604:	ea40 000c 	orr.w	r0, r0, ip
 8023608:	fb15 fc02 	smulbb	ip, r5, r2
 802360c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023610:	f1c5 0810 	rsb	r8, r5, #16
 8023614:	eba8 0802 	sub.w	r8, r8, r2
 8023618:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802361c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023620:	437a      	muls	r2, r7
 8023622:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023626:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802362a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802362e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023632:	fb09 2208 	mla	r2, r9, r8, r2
 8023636:	ea4a 0101 	orr.w	r1, sl, r1
 802363a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802363e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023642:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023646:	fb05 2201 	mla	r2, r5, r1, r2
 802364a:	ea4b 0000 	orr.w	r0, fp, r0
 802364e:	fb0c 2200 	mla	r2, ip, r0, r2
 8023652:	0d57      	lsrs	r7, r2, #21
 8023654:	0952      	lsrs	r2, r2, #5
 8023656:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802365a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802365e:	433a      	orrs	r2, r7
 8023660:	2bff      	cmp	r3, #255	; 0xff
 8023662:	b292      	uxth	r2, r2
 8023664:	d127      	bne.n	80236b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8023666:	f8ae 2000 	strh.w	r2, [lr]
 802366a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802366c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802366e:	4413      	add	r3, r2
 8023670:	931d      	str	r3, [sp, #116]	; 0x74
 8023672:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023674:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023676:	441a      	add	r2, r3
 8023678:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802367a:	921e      	str	r2, [sp, #120]	; 0x78
 802367c:	3b01      	subs	r3, #1
 802367e:	f10e 0e02 	add.w	lr, lr, #2
 8023682:	930f      	str	r3, [sp, #60]	; 0x3c
 8023684:	e627      	b.n	80232d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023686:	fb08 f000 	mul.w	r0, r8, r0
 802368a:	fb09 0303 	mla	r3, r9, r3, r0
 802368e:	e71b      	b.n	80234c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8023690:	46b9      	mov	r9, r7
 8023692:	e743      	b.n	802351c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8023694:	f1c2 0110 	rsb	r1, r2, #16
 8023698:	437a      	muls	r2, r7
 802369a:	fb09 2901 	mla	r9, r9, r1, r2
 802369e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80236a2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80236a6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80236aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80236b2:	4302      	orrs	r2, r0
 80236b4:	e7d4      	b.n	8023660 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80236b6:	f8be 7000 	ldrh.w	r7, [lr]
 80236ba:	4c1c      	ldr	r4, [pc, #112]	; (802372c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80236bc:	43db      	mvns	r3, r3
 80236be:	1238      	asrs	r0, r7, #8
 80236c0:	fa5f fc83 	uxtb.w	ip, r3
 80236c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80236c8:	10fd      	asrs	r5, r7, #3
 80236ca:	fb00 f00c 	mul.w	r0, r0, ip
 80236ce:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80236d2:	fb05 f10c 	mul.w	r1, r5, ip
 80236d6:	1c45      	adds	r5, r0, #1
 80236d8:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80236dc:	1215      	asrs	r5, r2, #8
 80236de:	f025 0507 	bic.w	r5, r5, #7
 80236e2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80236e6:	1c4d      	adds	r5, r1, #1
 80236e8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80236ec:	10d1      	asrs	r1, r2, #3
 80236ee:	f021 0103 	bic.w	r1, r1, #3
 80236f2:	00fb      	lsls	r3, r7, #3
 80236f4:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80236f8:	b2db      	uxtb	r3, r3
 80236fa:	b2c0      	uxtb	r0, r0
 80236fc:	00c9      	lsls	r1, r1, #3
 80236fe:	fb03 f30c 	mul.w	r3, r3, ip
 8023702:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023706:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802370a:	4308      	orrs	r0, r1
 802370c:	1c59      	adds	r1, r3, #1
 802370e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023712:	00d2      	lsls	r2, r2, #3
 8023714:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023718:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 802371c:	4318      	orrs	r0, r3
 802371e:	f8ae 0000 	strh.w	r0, [lr]
 8023722:	e7a2      	b.n	802366a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023724:	b013      	add	sp, #76	; 0x4c
 8023726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802372a:	bf00      	nop
 802372c:	fffff800 	.word	0xfffff800

08023730 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8023730:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023734:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8023738:	fb05 4c03 	mla	ip, r5, r3, r4
 802373c:	2d00      	cmp	r5, #0
 802373e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8023742:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8023746:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802374a:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802374e:	8808      	ldrh	r0, [r1, #0]
 8023750:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8023754:	f2c0 80a7 	blt.w	80238a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023758:	45aa      	cmp	sl, r5
 802375a:	f340 80a4 	ble.w	80238a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802375e:	2c00      	cmp	r4, #0
 8023760:	f2c0 809f 	blt.w	80238a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023764:	42a3      	cmp	r3, r4
 8023766:	f340 809c 	ble.w	80238a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802376a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802376e:	1c62      	adds	r2, r4, #1
 8023770:	f100 809c 	bmi.w	80238ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023774:	4293      	cmp	r3, r2
 8023776:	f340 8099 	ble.w	80238ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802377a:	f1b9 0f00 	cmp.w	r9, #0
 802377e:	f000 8095 	beq.w	80238ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023782:	f8be c002 	ldrh.w	ip, [lr, #2]
 8023786:	3501      	adds	r5, #1
 8023788:	f100 8094 	bmi.w	80238b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802378c:	45aa      	cmp	sl, r5
 802378e:	f340 8091 	ble.w	80238b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023792:	2f00      	cmp	r7, #0
 8023794:	f000 808e 	beq.w	80238b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023798:	2c00      	cmp	r4, #0
 802379a:	f2c0 8089 	blt.w	80238b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802379e:	42a3      	cmp	r3, r4
 80237a0:	f340 8086 	ble.w	80238b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80237a4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80237a8:	3401      	adds	r4, #1
 80237aa:	f100 8086 	bmi.w	80238ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80237ae:	42a3      	cmp	r3, r4
 80237b0:	f340 8083 	ble.w	80238ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80237b4:	f1b9 0f00 	cmp.w	r9, #0
 80237b8:	d07f      	beq.n	80238ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80237ba:	3301      	adds	r3, #1
 80237bc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80237c0:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80237c4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80237c8:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80237cc:	fb19 fe07 	smulbb	lr, r9, r7
 80237d0:	ea44 0808 	orr.w	r8, r4, r8
 80237d4:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80237d8:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80237dc:	f1c7 0210 	rsb	r2, r7, #16
 80237e0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80237e4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80237e8:	ea44 0c0c 	orr.w	ip, r4, ip
 80237ec:	eba2 0209 	sub.w	r2, r2, r9
 80237f0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80237f4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80237f8:	fb04 f40c 	mul.w	r4, r4, ip
 80237fc:	fb02 4808 	mla	r8, r2, r8, r4
 8023800:	041a      	lsls	r2, r3, #16
 8023802:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023806:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802380a:	4313      	orrs	r3, r2
 802380c:	042a      	lsls	r2, r5, #16
 802380e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023812:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023816:	fb0e 8303 	mla	r3, lr, r3, r8
 802381a:	432a      	orrs	r2, r5
 802381c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8023820:	fb07 3202 	mla	r2, r7, r2, r3
 8023824:	0d53      	lsrs	r3, r2, #21
 8023826:	0952      	lsrs	r2, r2, #5
 8023828:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802382c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023830:	431a      	orrs	r2, r3
 8023832:	b293      	uxth	r3, r2
 8023834:	b2b4      	uxth	r4, r6
 8023836:	1202      	asrs	r2, r0, #8
 8023838:	43f6      	mvns	r6, r6
 802383a:	b2f6      	uxtb	r6, r6
 802383c:	121d      	asrs	r5, r3, #8
 802383e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023842:	fb12 f206 	smulbb	r2, r2, r6
 8023846:	10c7      	asrs	r7, r0, #3
 8023848:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802384c:	00c0      	lsls	r0, r0, #3
 802384e:	fb05 2504 	mla	r5, r5, r4, r2
 8023852:	b2c0      	uxtb	r0, r0
 8023854:	10da      	asrs	r2, r3, #3
 8023856:	00db      	lsls	r3, r3, #3
 8023858:	b2db      	uxtb	r3, r3
 802385a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802385e:	fb10 f006 	smulbb	r0, r0, r6
 8023862:	b2ad      	uxth	r5, r5
 8023864:	fb03 0004 	mla	r0, r3, r4, r0
 8023868:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802386c:	fb17 f706 	smulbb	r7, r7, r6
 8023870:	b280      	uxth	r0, r0
 8023872:	1c6b      	adds	r3, r5, #1
 8023874:	fb02 7204 	mla	r2, r2, r4, r7
 8023878:	b292      	uxth	r2, r2
 802387a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802387e:	1c43      	adds	r3, r0, #1
 8023880:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023884:	1c50      	adds	r0, r2, #1
 8023886:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802388a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802388e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023892:	0952      	lsrs	r2, r2, #5
 8023894:	432b      	orrs	r3, r5
 8023896:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802389a:	4313      	orrs	r3, r2
 802389c:	800b      	strh	r3, [r1, #0]
 802389e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80238a2:	4680      	mov	r8, r0
 80238a4:	e763      	b.n	802376e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80238a6:	4684      	mov	ip, r0
 80238a8:	4680      	mov	r8, r0
 80238aa:	e76c      	b.n	8023786 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80238ac:	4684      	mov	ip, r0
 80238ae:	e76a      	b.n	8023786 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80238b0:	4605      	mov	r5, r0
 80238b2:	e779      	b.n	80237a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80238b4:	4603      	mov	r3, r0
 80238b6:	4605      	mov	r5, r0
 80238b8:	e782      	b.n	80237c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80238ba:	4603      	mov	r3, r0
 80238bc:	e780      	b.n	80237c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080238be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80238be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80238c2:	b093      	sub	sp, #76	; 0x4c
 80238c4:	461d      	mov	r5, r3
 80238c6:	9210      	str	r2, [sp, #64]	; 0x40
 80238c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80238ca:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80238ce:	920b      	str	r2, [sp, #44]	; 0x2c
 80238d0:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80238d4:	910a      	str	r1, [sp, #40]	; 0x28
 80238d6:	6859      	ldr	r1, [r3, #4]
 80238d8:	681b      	ldr	r3, [r3, #0]
 80238da:	9011      	str	r0, [sp, #68]	; 0x44
 80238dc:	fb01 2707 	mla	r7, r1, r7, r2
 80238e0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80238e4:	9307      	str	r3, [sp, #28]
 80238e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80238e8:	681b      	ldr	r3, [r3, #0]
 80238ea:	9309      	str	r3, [sp, #36]	; 0x24
 80238ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80238ee:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80238f2:	43db      	mvns	r3, r3
 80238f4:	b2db      	uxtb	r3, r3
 80238f6:	9308      	str	r3, [sp, #32]
 80238f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80238fa:	2b00      	cmp	r3, #0
 80238fc:	dc03      	bgt.n	8023906 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80238fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023900:	2b00      	cmp	r3, #0
 8023902:	f340 8203 	ble.w	8023d0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023906:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023908:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802390c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023910:	1e48      	subs	r0, r1, #1
 8023912:	f102 3cff 	add.w	ip, r2, #4294967295
 8023916:	2d00      	cmp	r5, #0
 8023918:	f340 80da 	ble.w	8023ad0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802391c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023920:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023924:	d406      	bmi.n	8023934 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023926:	4586      	cmp	lr, r0
 8023928:	da04      	bge.n	8023934 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802392a:	2b00      	cmp	r3, #0
 802392c:	db02      	blt.n	8023934 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802392e:	4563      	cmp	r3, ip
 8023930:	f2c0 80cf 	blt.w	8023ad2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023934:	f11e 0e01 	adds.w	lr, lr, #1
 8023938:	f100 80c1 	bmi.w	8023abe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802393c:	4571      	cmp	r1, lr
 802393e:	f2c0 80be 	blt.w	8023abe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023942:	3301      	adds	r3, #1
 8023944:	f100 80bb 	bmi.w	8023abe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023948:	429a      	cmp	r2, r3
 802394a:	f2c0 80b8 	blt.w	8023abe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802394e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023952:	46a9      	mov	r9, r5
 8023954:	f1b9 0f00 	cmp.w	r9, #0
 8023958:	f340 80d8 	ble.w	8023b0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802395c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802395e:	1421      	asrs	r1, r4, #16
 8023960:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023964:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023968:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802396c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023970:	f100 8111 	bmi.w	8023b96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023974:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023978:	4551      	cmp	r1, sl
 802397a:	f280 810c 	bge.w	8023b96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802397e:	2800      	cmp	r0, #0
 8023980:	f2c0 8109 	blt.w	8023b96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023984:	f103 3aff 	add.w	sl, r3, #4294967295
 8023988:	4550      	cmp	r0, sl
 802398a:	f280 8104 	bge.w	8023b96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802398e:	fa0f f38e 	sxth.w	r3, lr
 8023992:	fb00 1103 	mla	r1, r0, r3, r1
 8023996:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023998:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 802399c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80239a0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80239a4:	f1bc 0f00 	cmp.w	ip, #0
 80239a8:	d007      	beq.n	80239ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80239aa:	005b      	lsls	r3, r3, #1
 80239ac:	eb0a 0003 	add.w	r0, sl, r3
 80239b0:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80239b4:	930c      	str	r3, [sp, #48]	; 0x30
 80239b6:	8843      	ldrh	r3, [r0, #2]
 80239b8:	930d      	str	r3, [sp, #52]	; 0x34
 80239ba:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80239be:	fb12 f30c 	smulbb	r3, r2, ip
 80239c2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80239c6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80239ca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80239ce:	10db      	asrs	r3, r3, #3
 80239d0:	ea40 000e 	orr.w	r0, r0, lr
 80239d4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80239d8:	f1cc 0e10 	rsb	lr, ip, #16
 80239dc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80239e0:	ebae 0e02 	sub.w	lr, lr, r2
 80239e4:	ea4a 0101 	orr.w	r1, sl, r1
 80239e8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80239ec:	4351      	muls	r1, r2
 80239ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80239f0:	9f08      	ldr	r7, [sp, #32]
 80239f2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80239f6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80239fa:	0410      	lsls	r0, r2, #16
 80239fc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023a00:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023a04:	4310      	orrs	r0, r2
 8023a06:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023a08:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023a0a:	0412      	lsls	r2, r2, #16
 8023a0c:	fb03 e000 	mla	r0, r3, r0, lr
 8023a10:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023a14:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023a18:	ea42 020e 	orr.w	r2, r2, lr
 8023a1c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023a20:	fb03 0302 	mla	r3, r3, r2, r0
 8023a24:	0d5a      	lsrs	r2, r3, #21
 8023a26:	095b      	lsrs	r3, r3, #5
 8023a28:	f8b8 0000 	ldrh.w	r0, [r8]
 8023a2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023a30:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023a34:	4313      	orrs	r3, r2
 8023a36:	b29b      	uxth	r3, r3
 8023a38:	1201      	asrs	r1, r0, #8
 8023a3a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8023a3e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023a42:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023a46:	fb11 f107 	smulbb	r1, r1, r7
 8023a4a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8023a4e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023a52:	00c0      	lsls	r0, r0, #3
 8023a54:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023a58:	b2c0      	uxtb	r0, r0
 8023a5a:	10d9      	asrs	r1, r3, #3
 8023a5c:	00db      	lsls	r3, r3, #3
 8023a5e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023a62:	b2db      	uxtb	r3, r3
 8023a64:	fb10 f007 	smulbb	r0, r0, r7
 8023a68:	fa1f fc8c 	uxth.w	ip, ip
 8023a6c:	fb03 0302 	mla	r3, r3, r2, r0
 8023a70:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023a74:	fb1e fe07 	smulbb	lr, lr, r7
 8023a78:	fb01 e102 	mla	r1, r1, r2, lr
 8023a7c:	b29a      	uxth	r2, r3
 8023a7e:	f10c 0301 	add.w	r3, ip, #1
 8023a82:	b289      	uxth	r1, r1
 8023a84:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023a88:	1c53      	adds	r3, r2, #1
 8023a8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023a8e:	1c4a      	adds	r2, r1, #1
 8023a90:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023a94:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023a98:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023a9c:	0949      	lsrs	r1, r1, #5
 8023a9e:	ea43 030c 	orr.w	r3, r3, ip
 8023aa2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023aa6:	430b      	orrs	r3, r1
 8023aa8:	f8a8 3000 	strh.w	r3, [r8]
 8023aac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023aae:	441c      	add	r4, r3
 8023ab0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ab2:	f108 0802 	add.w	r8, r8, #2
 8023ab6:	441e      	add	r6, r3
 8023ab8:	f109 39ff 	add.w	r9, r9, #4294967295
 8023abc:	e74a      	b.n	8023954 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023abe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023ac0:	441c      	add	r4, r3
 8023ac2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ac4:	441e      	add	r6, r3
 8023ac6:	9b07      	ldr	r3, [sp, #28]
 8023ac8:	3302      	adds	r3, #2
 8023aca:	3d01      	subs	r5, #1
 8023acc:	9307      	str	r3, [sp, #28]
 8023ace:	e722      	b.n	8023916 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023ad0:	d022      	beq.n	8023b18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023ad2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023ad4:	1e6b      	subs	r3, r5, #1
 8023ad6:	fb00 4003 	mla	r0, r0, r3, r4
 8023ada:	1400      	asrs	r0, r0, #16
 8023adc:	f53f af37 	bmi.w	802394e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023ae0:	3901      	subs	r1, #1
 8023ae2:	4288      	cmp	r0, r1
 8023ae4:	f6bf af33 	bge.w	802394e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023ae8:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023aea:	fb01 6303 	mla	r3, r1, r3, r6
 8023aee:	141b      	asrs	r3, r3, #16
 8023af0:	f53f af2d 	bmi.w	802394e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023af4:	3a01      	subs	r2, #1
 8023af6:	4293      	cmp	r3, r2
 8023af8:	f6bf af29 	bge.w	802394e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023afc:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023b00:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023b04:	46a8      	mov	r8, r5
 8023b06:	f1b8 0f00 	cmp.w	r8, #0
 8023b0a:	dc5e      	bgt.n	8023bca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023b0c:	9b07      	ldr	r3, [sp, #28]
 8023b0e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023b12:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023b16:	9307      	str	r3, [sp, #28]
 8023b18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b1a:	2b00      	cmp	r3, #0
 8023b1c:	f340 80f6 	ble.w	8023d0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023b20:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023b24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023b28:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023b2c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023b2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023b32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023b36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023b3a:	eef0 6a62 	vmov.f32	s13, s5
 8023b3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023b42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b46:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023b4a:	ee16 4a90 	vmov	r4, s13
 8023b4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023b52:	eef0 6a43 	vmov.f32	s13, s6
 8023b56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023b5a:	ee12 2a90 	vmov	r2, s5
 8023b5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023b62:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b66:	ee13 2a10 	vmov	r2, s6
 8023b6a:	931f      	str	r3, [sp, #124]	; 0x7c
 8023b6c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023b6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b72:	9320      	str	r3, [sp, #128]	; 0x80
 8023b74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b76:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023b78:	3b01      	subs	r3, #1
 8023b7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b7e:	930a      	str	r3, [sp, #40]	; 0x28
 8023b80:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023b82:	ee16 6a90 	vmov	r6, s13
 8023b86:	bf14      	ite	ne
 8023b88:	461d      	movne	r5, r3
 8023b8a:	4615      	moveq	r5, r2
 8023b8c:	eeb0 3a67 	vmov.f32	s6, s15
 8023b90:	eef0 2a47 	vmov.f32	s5, s14
 8023b94:	e6b0      	b.n	80238f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023b96:	f111 0a01 	adds.w	sl, r1, #1
 8023b9a:	d487      	bmi.n	8023aac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023b9c:	45d6      	cmp	lr, sl
 8023b9e:	db85      	blt.n	8023aac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023ba0:	f110 0a01 	adds.w	sl, r0, #1
 8023ba4:	d482      	bmi.n	8023aac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023ba6:	4553      	cmp	r3, sl
 8023ba8:	db80      	blt.n	8023aac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023baa:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023bac:	9101      	str	r1, [sp, #4]
 8023bae:	b21b      	sxth	r3, r3
 8023bb0:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023bb4:	9300      	str	r3, [sp, #0]
 8023bb6:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023bba:	fa0f f38e 	sxth.w	r3, lr
 8023bbe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023bc0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023bc2:	4641      	mov	r1, r8
 8023bc4:	f7ff fdb4 	bl	8023730 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023bc8:	e770      	b.n	8023aac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023bca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023bcc:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023bce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023bd2:	1430      	asrs	r0, r6, #16
 8023bd4:	1423      	asrs	r3, r4, #16
 8023bd6:	fb01 3000 	mla	r0, r1, r0, r3
 8023bda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023bdc:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023be0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023be4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023be8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023bec:	8858      	ldrh	r0, [r3, #2]
 8023bee:	f1be 0f00 	cmp.w	lr, #0
 8023bf2:	d00b      	beq.n	8023c0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023bf4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023bf8:	3901      	subs	r1, #1
 8023bfa:	0049      	lsls	r1, r1, #1
 8023bfc:	3102      	adds	r1, #2
 8023bfe:	eb03 0b01 	add.w	fp, r3, r1
 8023c02:	5a5b      	ldrh	r3, [r3, r1]
 8023c04:	930e      	str	r3, [sp, #56]	; 0x38
 8023c06:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023c0a:	930f      	str	r3, [sp, #60]	; 0x3c
 8023c0c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023c10:	fb12 f30e 	smulbb	r3, r2, lr
 8023c14:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023c18:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023c1c:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023c20:	10db      	asrs	r3, r3, #3
 8023c22:	ea41 010c 	orr.w	r1, r1, ip
 8023c26:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023c2a:	f1ce 0c10 	rsb	ip, lr, #16
 8023c2e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023c32:	ebac 0c02 	sub.w	ip, ip, r2
 8023c36:	ea4b 0000 	orr.w	r0, fp, r0
 8023c3a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023c3e:	4350      	muls	r0, r2
 8023c40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023c42:	9f08      	ldr	r7, [sp, #32]
 8023c44:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023c48:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023c4c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023c50:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023c54:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023c56:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023c58:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023c5c:	0412      	lsls	r2, r2, #16
 8023c5e:	ea4b 0101 	orr.w	r1, fp, r1
 8023c62:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023c66:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023c6a:	fb03 c101 	mla	r1, r3, r1, ip
 8023c6e:	4302      	orrs	r2, r0
 8023c70:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023c74:	fb03 1202 	mla	r2, r3, r2, r1
 8023c78:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8023c7c:	0952      	lsrs	r2, r2, #5
 8023c7e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023c82:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023c86:	f8b9 2000 	ldrh.w	r2, [r9]
 8023c8a:	ea4b 0303 	orr.w	r3, fp, r3
 8023c8e:	b29b      	uxth	r3, r3
 8023c90:	1211      	asrs	r1, r2, #8
 8023c92:	1218      	asrs	r0, r3, #8
 8023c94:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023c98:	fb11 f107 	smulbb	r1, r1, r7
 8023c9c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023ca0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023ca4:	00d2      	lsls	r2, r2, #3
 8023ca6:	fb00 100a 	mla	r0, r0, sl, r1
 8023caa:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8023cae:	10d9      	asrs	r1, r3, #3
 8023cb0:	b2d2      	uxtb	r2, r2
 8023cb2:	00db      	lsls	r3, r3, #3
 8023cb4:	fb1c fc07 	smulbb	ip, ip, r7
 8023cb8:	fb12 f207 	smulbb	r2, r2, r7
 8023cbc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023cc0:	b2db      	uxtb	r3, r3
 8023cc2:	b280      	uxth	r0, r0
 8023cc4:	fb01 c10a 	mla	r1, r1, sl, ip
 8023cc8:	fb03 230a 	mla	r3, r3, sl, r2
 8023ccc:	b29b      	uxth	r3, r3
 8023cce:	b289      	uxth	r1, r1
 8023cd0:	1c42      	adds	r2, r0, #1
 8023cd2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023cd6:	f101 0c01 	add.w	ip, r1, #1
 8023cda:	1c5a      	adds	r2, r3, #1
 8023cdc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023ce0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023ce4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023ce6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023cea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023cee:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023cf2:	4310      	orrs	r0, r2
 8023cf4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023cf8:	441c      	add	r4, r3
 8023cfa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023cfc:	ea40 000c 	orr.w	r0, r0, ip
 8023d00:	f829 0b02 	strh.w	r0, [r9], #2
 8023d04:	441e      	add	r6, r3
 8023d06:	f108 38ff 	add.w	r8, r8, #4294967295
 8023d0a:	e6fc      	b.n	8023b06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023d0c:	b013      	add	sp, #76	; 0x4c
 8023d0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023d12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023d12:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023d16:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023d1a:	fb0e 4703 	mla	r7, lr, r3, r4
 8023d1e:	f1be 0f00 	cmp.w	lr, #0
 8023d22:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023d26:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8023d2a:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8023d2e:	8808      	ldrh	r0, [r1, #0]
 8023d30:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023d34:	db60      	blt.n	8023df8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023d36:	45f1      	cmp	r9, lr
 8023d38:	dd5e      	ble.n	8023df8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023d3a:	2c00      	cmp	r4, #0
 8023d3c:	db5a      	blt.n	8023df4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023d3e:	42a3      	cmp	r3, r4
 8023d40:	dd58      	ble.n	8023df4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023d42:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023d46:	1c62      	adds	r2, r4, #1
 8023d48:	d459      	bmi.n	8023dfe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023d4a:	4293      	cmp	r3, r2
 8023d4c:	dd57      	ble.n	8023dfe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023d4e:	2d00      	cmp	r5, #0
 8023d50:	d055      	beq.n	8023dfe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023d52:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023d56:	f11e 0e01 	adds.w	lr, lr, #1
 8023d5a:	d454      	bmi.n	8023e06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023d5c:	45f1      	cmp	r9, lr
 8023d5e:	dd52      	ble.n	8023e06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023d60:	2e00      	cmp	r6, #0
 8023d62:	d050      	beq.n	8023e06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023d64:	2c00      	cmp	r4, #0
 8023d66:	db4c      	blt.n	8023e02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023d68:	42a3      	cmp	r3, r4
 8023d6a:	dd4a      	ble.n	8023e02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023d6c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023d70:	3401      	adds	r4, #1
 8023d72:	d405      	bmi.n	8023d80 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023d74:	42a3      	cmp	r3, r4
 8023d76:	dd03      	ble.n	8023d80 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023d78:	b115      	cbz	r5, 8023d80 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023d7a:	3301      	adds	r3, #1
 8023d7c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023d80:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023d84:	fb15 f406 	smulbb	r4, r5, r6
 8023d88:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023d8c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023d90:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023d94:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023d98:	ea43 0c0c 	orr.w	ip, r3, ip
 8023d9c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023da0:	f1c6 0310 	rsb	r3, r6, #16
 8023da4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023da8:	1b5b      	subs	r3, r3, r5
 8023daa:	ea4e 0707 	orr.w	r7, lr, r7
 8023dae:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023db2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023db6:	437d      	muls	r5, r7
 8023db8:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023dbc:	0403      	lsls	r3, r0, #16
 8023dbe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023dc2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023dc6:	4318      	orrs	r0, r3
 8023dc8:	0413      	lsls	r3, r2, #16
 8023dca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023dce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023dd2:	4313      	orrs	r3, r2
 8023dd4:	fb04 c000 	mla	r0, r4, r0, ip
 8023dd8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023ddc:	fb06 0003 	mla	r0, r6, r3, r0
 8023de0:	0d43      	lsrs	r3, r0, #21
 8023de2:	0940      	lsrs	r0, r0, #5
 8023de4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023de8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023dec:	4318      	orrs	r0, r3
 8023dee:	8008      	strh	r0, [r1, #0]
 8023df0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023df4:	4684      	mov	ip, r0
 8023df6:	e7a6      	b.n	8023d46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023df8:	4607      	mov	r7, r0
 8023dfa:	4684      	mov	ip, r0
 8023dfc:	e7ab      	b.n	8023d56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023dfe:	4607      	mov	r7, r0
 8023e00:	e7a9      	b.n	8023d56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023e02:	4602      	mov	r2, r0
 8023e04:	e7b4      	b.n	8023d70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023e06:	4602      	mov	r2, r0
 8023e08:	e7ba      	b.n	8023d80 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08023e0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023e0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023e0e:	b08f      	sub	sp, #60	; 0x3c
 8023e10:	461d      	mov	r5, r3
 8023e12:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023e14:	920c      	str	r2, [sp, #48]	; 0x30
 8023e16:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8023e1a:	9107      	str	r1, [sp, #28]
 8023e1c:	6859      	ldr	r1, [r3, #4]
 8023e1e:	681b      	ldr	r3, [r3, #0]
 8023e20:	900d      	str	r0, [sp, #52]	; 0x34
 8023e22:	fb01 2707 	mla	r7, r1, r7, r2
 8023e26:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8023e2a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e2c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023e30:	f8d3 8000 	ldr.w	r8, [r3]
 8023e34:	9b07      	ldr	r3, [sp, #28]
 8023e36:	2b00      	cmp	r3, #0
 8023e38:	dc03      	bgt.n	8023e42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023e3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023e3c:	2b00      	cmp	r3, #0
 8023e3e:	f340 8181 	ble.w	8024144 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023e42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e44:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023e48:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023e4c:	1e48      	subs	r0, r1, #1
 8023e4e:	f102 3cff 	add.w	ip, r2, #4294967295
 8023e52:	2d00      	cmp	r5, #0
 8023e54:	f340 809b 	ble.w	8023f8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023e58:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023e5c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023e60:	d406      	bmi.n	8023e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023e62:	4586      	cmp	lr, r0
 8023e64:	da04      	bge.n	8023e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023e66:	2b00      	cmp	r3, #0
 8023e68:	db02      	blt.n	8023e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023e6a:	4563      	cmp	r3, ip
 8023e6c:	f2c0 8090 	blt.w	8023f90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023e70:	f11e 0e01 	adds.w	lr, lr, #1
 8023e74:	f100 8084 	bmi.w	8023f80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023e78:	4571      	cmp	r1, lr
 8023e7a:	f2c0 8081 	blt.w	8023f80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023e7e:	3301      	adds	r3, #1
 8023e80:	d47e      	bmi.n	8023f80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023e82:	429a      	cmp	r2, r3
 8023e84:	db7c      	blt.n	8023f80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023e86:	46aa      	mov	sl, r5
 8023e88:	46b9      	mov	r9, r7
 8023e8a:	f1ba 0f00 	cmp.w	sl, #0
 8023e8e:	f340 8099 	ble.w	8023fc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8023e92:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e94:	1421      	asrs	r1, r4, #16
 8023e96:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023e9a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023e9e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023ea2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023ea6:	f100 80d0 	bmi.w	802404a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023eaa:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023eae:	4559      	cmp	r1, fp
 8023eb0:	f280 80cb 	bge.w	802404a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023eb4:	2800      	cmp	r0, #0
 8023eb6:	f2c0 80c8 	blt.w	802404a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023eba:	f103 3bff 	add.w	fp, r3, #4294967295
 8023ebe:	4558      	cmp	r0, fp
 8023ec0:	f280 80c3 	bge.w	802404a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023ec4:	fa0f fe8e 	sxth.w	lr, lr
 8023ec8:	fb00 110e 	mla	r1, r0, lr, r1
 8023ecc:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023ed0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8023ed4:	8841      	ldrh	r1, [r0, #2]
 8023ed6:	f1bc 0f00 	cmp.w	ip, #0
 8023eda:	d00b      	beq.n	8023ef4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023edc:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023ee0:	3b01      	subs	r3, #1
 8023ee2:	005b      	lsls	r3, r3, #1
 8023ee4:	3302      	adds	r3, #2
 8023ee6:	eb00 0e03 	add.w	lr, r0, r3
 8023eea:	5ac3      	ldrh	r3, [r0, r3]
 8023eec:	9308      	str	r3, [sp, #32]
 8023eee:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8023ef2:	9309      	str	r3, [sp, #36]	; 0x24
 8023ef4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023ef8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023efc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023f00:	ea40 000b 	orr.w	r0, r0, fp
 8023f04:	fb12 f30c 	smulbb	r3, r2, ip
 8023f08:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023f0c:	10db      	asrs	r3, r3, #3
 8023f0e:	f1cc 0e10 	rsb	lr, ip, #16
 8023f12:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023f16:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023f1a:	ebae 0e02 	sub.w	lr, lr, r2
 8023f1e:	ea4b 0101 	orr.w	r1, fp, r1
 8023f22:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023f26:	4351      	muls	r1, r2
 8023f28:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023f2a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023f2e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023f32:	0410      	lsls	r0, r2, #16
 8023f34:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023f38:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023f3c:	4310      	orrs	r0, r2
 8023f3e:	9a08      	ldr	r2, [sp, #32]
 8023f40:	9908      	ldr	r1, [sp, #32]
 8023f42:	0412      	lsls	r2, r2, #16
 8023f44:	fb03 e000 	mla	r0, r3, r0, lr
 8023f48:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023f4c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023f50:	ea42 020e 	orr.w	r2, r2, lr
 8023f54:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023f58:	fb03 0302 	mla	r3, r3, r2, r0
 8023f5c:	0d5a      	lsrs	r2, r3, #21
 8023f5e:	095b      	lsrs	r3, r3, #5
 8023f60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023f64:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023f68:	4313      	orrs	r3, r2
 8023f6a:	f8a9 3000 	strh.w	r3, [r9]
 8023f6e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023f70:	441c      	add	r4, r3
 8023f72:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f74:	f109 0902 	add.w	r9, r9, #2
 8023f78:	441e      	add	r6, r3
 8023f7a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023f7e:	e784      	b.n	8023e8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8023f80:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023f82:	441c      	add	r4, r3
 8023f84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f86:	3d01      	subs	r5, #1
 8023f88:	441e      	add	r6, r3
 8023f8a:	3702      	adds	r7, #2
 8023f8c:	e761      	b.n	8023e52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023f8e:	d01d      	beq.n	8023fcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023f90:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023f92:	1e6b      	subs	r3, r5, #1
 8023f94:	fb00 4003 	mla	r0, r0, r3, r4
 8023f98:	1400      	asrs	r0, r0, #16
 8023f9a:	f53f af74 	bmi.w	8023e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023f9e:	3901      	subs	r1, #1
 8023fa0:	4288      	cmp	r0, r1
 8023fa2:	f6bf af70 	bge.w	8023e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023fa6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023fa8:	fb01 6303 	mla	r3, r1, r3, r6
 8023fac:	141b      	asrs	r3, r3, #16
 8023fae:	f53f af6a 	bmi.w	8023e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023fb2:	3a01      	subs	r2, #1
 8023fb4:	4293      	cmp	r3, r2
 8023fb6:	f6bf af66 	bge.w	8023e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023fba:	46a9      	mov	r9, r5
 8023fbc:	46ba      	mov	sl, r7
 8023fbe:	f1b9 0f00 	cmp.w	r9, #0
 8023fc2:	dc5a      	bgt.n	802407a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8023fc4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023fc8:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8023fcc:	9b07      	ldr	r3, [sp, #28]
 8023fce:	2b00      	cmp	r3, #0
 8023fd0:	f340 80b8 	ble.w	8024144 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023fd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023fd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023fdc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023fe0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023fe2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023fe6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023fea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023fee:	eef0 6a62 	vmov.f32	s13, s5
 8023ff2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023ff6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023ffa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023ffe:	ee16 4a90 	vmov	r4, s13
 8024002:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024006:	eef0 6a43 	vmov.f32	s13, s6
 802400a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802400e:	ee12 2a90 	vmov	r2, s5
 8024012:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024016:	fb92 f3f3 	sdiv	r3, r2, r3
 802401a:	ee13 2a10 	vmov	r2, s6
 802401e:	931b      	str	r3, [sp, #108]	; 0x6c
 8024020:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024022:	fb92 f3f3 	sdiv	r3, r2, r3
 8024026:	931c      	str	r3, [sp, #112]	; 0x70
 8024028:	9b07      	ldr	r3, [sp, #28]
 802402a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802402c:	3b01      	subs	r3, #1
 802402e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024032:	9307      	str	r3, [sp, #28]
 8024034:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024036:	ee16 6a90 	vmov	r6, s13
 802403a:	bf14      	ite	ne
 802403c:	461d      	movne	r5, r3
 802403e:	4615      	moveq	r5, r2
 8024040:	eeb0 3a67 	vmov.f32	s6, s15
 8024044:	eef0 2a47 	vmov.f32	s5, s14
 8024048:	e6f4      	b.n	8023e34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802404a:	f111 0b01 	adds.w	fp, r1, #1
 802404e:	d48e      	bmi.n	8023f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024050:	45de      	cmp	lr, fp
 8024052:	db8c      	blt.n	8023f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024054:	f110 0b01 	adds.w	fp, r0, #1
 8024058:	d489      	bmi.n	8023f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802405a:	455b      	cmp	r3, fp
 802405c:	db87      	blt.n	8023f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802405e:	b21b      	sxth	r3, r3
 8024060:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024064:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024068:	9300      	str	r3, [sp, #0]
 802406a:	4642      	mov	r2, r8
 802406c:	fa0f f38e 	sxth.w	r3, lr
 8024070:	4649      	mov	r1, r9
 8024072:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024074:	f7ff fe4d 	bl	8023d12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024078:	e779      	b.n	8023f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802407a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802407c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8024080:	1420      	asrs	r0, r4, #16
 8024082:	1431      	asrs	r1, r6, #16
 8024084:	fb03 0101 	mla	r1, r3, r1, r0
 8024088:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802408c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024090:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024094:	8841      	ldrh	r1, [r0, #2]
 8024096:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802409a:	f1be 0f00 	cmp.w	lr, #0
 802409e:	d00b      	beq.n	80240b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80240a0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80240a4:	3b01      	subs	r3, #1
 80240a6:	005b      	lsls	r3, r3, #1
 80240a8:	3302      	adds	r3, #2
 80240aa:	eb00 0b03 	add.w	fp, r0, r3
 80240ae:	5ac3      	ldrh	r3, [r0, r3]
 80240b0:	930a      	str	r3, [sp, #40]	; 0x28
 80240b2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80240b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80240b8:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80240bc:	fb12 f30e 	smulbb	r3, r2, lr
 80240c0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80240c4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80240c8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80240cc:	10db      	asrs	r3, r3, #3
 80240ce:	ea40 000c 	orr.w	r0, r0, ip
 80240d2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80240d6:	f1ce 0c10 	rsb	ip, lr, #16
 80240da:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80240de:	ebac 0c02 	sub.w	ip, ip, r2
 80240e2:	ea4b 0101 	orr.w	r1, fp, r1
 80240e6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80240ea:	4351      	muls	r1, r2
 80240ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80240ee:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80240f2:	fb0c 1c00 	mla	ip, ip, r0, r1
 80240f6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80240fa:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80240fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024100:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024102:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024106:	0412      	lsls	r2, r2, #16
 8024108:	ea4b 0000 	orr.w	r0, fp, r0
 802410c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024110:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8024114:	fb03 c000 	mla	r0, r3, r0, ip
 8024118:	ea42 0b0b 	orr.w	fp, r2, fp
 802411c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024120:	fb03 000b 	mla	r0, r3, fp, r0
 8024124:	0d43      	lsrs	r3, r0, #21
 8024126:	0940      	lsrs	r0, r0, #5
 8024128:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802412c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024130:	4318      	orrs	r0, r3
 8024132:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024134:	f82a 0b02 	strh.w	r0, [sl], #2
 8024138:	441c      	add	r4, r3
 802413a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802413c:	f109 39ff 	add.w	r9, r9, #4294967295
 8024140:	441e      	add	r6, r3
 8024142:	e73c      	b.n	8023fbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024144:	b00f      	add	sp, #60	; 0x3c
 8024146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802414a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802414a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802414e:	b085      	sub	sp, #20
 8024150:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024154:	9102      	str	r1, [sp, #8]
 8024156:	2c00      	cmp	r4, #0
 8024158:	fb04 7103 	mla	r1, r4, r3, r7
 802415c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024160:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024164:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024168:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802416c:	f2c0 811b 	blt.w	80243a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024170:	45a6      	cmp	lr, r4
 8024172:	f340 8118 	ble.w	80243a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024176:	2f00      	cmp	r7, #0
 8024178:	f2c0 8113 	blt.w	80243a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802417c:	42bb      	cmp	r3, r7
 802417e:	f340 8110 	ble.w	80243a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024182:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024186:	1c7a      	adds	r2, r7, #1
 8024188:	f100 8110 	bmi.w	80243ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802418c:	4293      	cmp	r3, r2
 802418e:	f340 810d 	ble.w	80243ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024192:	2e00      	cmp	r6, #0
 8024194:	f000 810c 	beq.w	80243b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024198:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802419c:	3401      	adds	r4, #1
 802419e:	f100 810b 	bmi.w	80243b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80241a2:	45a6      	cmp	lr, r4
 80241a4:	f340 8108 	ble.w	80243b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80241a8:	2800      	cmp	r0, #0
 80241aa:	f000 8108 	beq.w	80243be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80241ae:	2f00      	cmp	r7, #0
 80241b0:	f2c0 8100 	blt.w	80243b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80241b4:	42bb      	cmp	r3, r7
 80241b6:	f340 80fd 	ble.w	80243b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80241ba:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80241be:	3701      	adds	r7, #1
 80241c0:	f100 8100 	bmi.w	80243c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80241c4:	42bb      	cmp	r3, r7
 80241c6:	f340 80fd 	ble.w	80243c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80241ca:	2e00      	cmp	r6, #0
 80241cc:	f000 80fc 	beq.w	80243c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80241d0:	3301      	adds	r3, #1
 80241d2:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80241d6:	b2b6      	uxth	r6, r6
 80241d8:	b280      	uxth	r0, r0
 80241da:	fb00 fe06 	mul.w	lr, r0, r6
 80241de:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80241e2:	0136      	lsls	r6, r6, #4
 80241e4:	eba6 070e 	sub.w	r7, r6, lr
 80241e8:	b280      	uxth	r0, r0
 80241ea:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80241ee:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80241f2:	b2bf      	uxth	r7, r7
 80241f4:	1a1b      	subs	r3, r3, r0
 80241f6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80241fa:	b29b      	uxth	r3, r3
 80241fc:	fb0a f607 	mul.w	r6, sl, r7
 8024200:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024204:	fb0b 6603 	mla	r6, fp, r3, r6
 8024208:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802420c:	fb00 6609 	mla	r6, r0, r9, r6
 8024210:	fb0e 6608 	mla	r6, lr, r8, r6
 8024214:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024218:	9600      	str	r6, [sp, #0]
 802421a:	2e00      	cmp	r6, #0
 802421c:	f000 80be 	beq.w	802439c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8024220:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024224:	fb0b fc0c 	mul.w	ip, fp, ip
 8024228:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802422c:	fb0b f505 	mul.w	r5, fp, r5
 8024230:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024234:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024238:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802423c:	44dc      	add	ip, fp
 802423e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024242:	9501      	str	r5, [sp, #4]
 8024244:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024248:	9503      	str	r5, [sp, #12]
 802424a:	9d01      	ldr	r5, [sp, #4]
 802424c:	9e02      	ldr	r6, [sp, #8]
 802424e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024252:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024256:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802425a:	fb0a fc0c 	mul.w	ip, sl, ip
 802425e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024262:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024266:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802426a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802426e:	4465      	add	r5, ip
 8024270:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024274:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024278:	fb09 fc0c 	mul.w	ip, r9, ip
 802427c:	fb09 f904 	mul.w	r9, r9, r4
 8024280:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024284:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024288:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802428c:	fb08 f404 	mul.w	r4, r8, r4
 8024290:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024294:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024298:	fb08 f802 	mul.w	r8, r8, r2
 802429c:	fb0a fa01 	mul.w	sl, sl, r1
 80242a0:	0a22      	lsrs	r2, r4, #8
 80242a2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80242a6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80242aa:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80242ae:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80242b2:	4414      	add	r4, r2
 80242b4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80242b8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80242bc:	0a2d      	lsrs	r5, r5, #8
 80242be:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80242c2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80242c6:	9a03      	ldr	r2, [sp, #12]
 80242c8:	8836      	ldrh	r6, [r6, #0]
 80242ca:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80242ce:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80242d2:	437d      	muls	r5, r7
 80242d4:	4461      	add	r1, ip
 80242d6:	0a24      	lsrs	r4, r4, #8
 80242d8:	fb02 5503 	mla	r5, r2, r3, r5
 80242dc:	0a09      	lsrs	r1, r1, #8
 80242de:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80242e2:	fb04 540e 	mla	r4, r4, lr, r5
 80242e6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80242ea:	fb01 4100 	mla	r1, r1, r0, r4
 80242ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80242f2:	0a09      	lsrs	r1, r1, #8
 80242f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80242f8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80242fc:	fb07 f70a 	mul.w	r7, r7, sl
 8024300:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024304:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024308:	fb03 7101 	mla	r1, r3, r1, r7
 802430c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024310:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024314:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024318:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802431c:	fb00 e101 	mla	r1, r0, r1, lr
 8024320:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8024324:	9a00      	ldr	r2, [sp, #0]
 8024326:	b287      	uxth	r7, r0
 8024328:	437a      	muls	r2, r7
 802432a:	0a09      	lsrs	r1, r1, #8
 802432c:	1c53      	adds	r3, r2, #1
 802432e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024332:	4321      	orrs	r1, r4
 8024334:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024338:	1235      	asrs	r5, r6, #8
 802433a:	0c0a      	lsrs	r2, r1, #16
 802433c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8024340:	b2db      	uxtb	r3, r3
 8024342:	fb12 f207 	smulbb	r2, r2, r7
 8024346:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802434a:	fb05 2503 	mla	r5, r5, r3, r2
 802434e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024352:	10f2      	asrs	r2, r6, #3
 8024354:	b2c8      	uxtb	r0, r1
 8024356:	00f6      	lsls	r6, r6, #3
 8024358:	fb14 f407 	smulbb	r4, r4, r7
 802435c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024360:	b2f6      	uxtb	r6, r6
 8024362:	fb10 f007 	smulbb	r0, r0, r7
 8024366:	fb02 4203 	mla	r2, r2, r3, r4
 802436a:	b2ad      	uxth	r5, r5
 802436c:	fb06 0303 	mla	r3, r6, r3, r0
 8024370:	b299      	uxth	r1, r3
 8024372:	b294      	uxth	r4, r2
 8024374:	1c6b      	adds	r3, r5, #1
 8024376:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802437a:	1c62      	adds	r2, r4, #1
 802437c:	1c4b      	adds	r3, r1, #1
 802437e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024382:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024386:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802438a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802438e:	0952      	lsrs	r2, r2, #5
 8024390:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024394:	432b      	orrs	r3, r5
 8024396:	4313      	orrs	r3, r2
 8024398:	9a02      	ldr	r2, [sp, #8]
 802439a:	8013      	strh	r3, [r2, #0]
 802439c:	b005      	add	sp, #20
 802439e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80243a2:	2500      	movs	r5, #0
 80243a4:	e6ef      	b.n	8024186 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80243a6:	2100      	movs	r1, #0
 80243a8:	460d      	mov	r5, r1
 80243aa:	e6f7      	b.n	802419c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80243ac:	2100      	movs	r1, #0
 80243ae:	e6f5      	b.n	802419c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80243b0:	4631      	mov	r1, r6
 80243b2:	e6f3      	b.n	802419c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80243b4:	2400      	movs	r4, #0
 80243b6:	e702      	b.n	80241be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80243b8:	2200      	movs	r2, #0
 80243ba:	4614      	mov	r4, r2
 80243bc:	e70b      	b.n	80241d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80243be:	4602      	mov	r2, r0
 80243c0:	4604      	mov	r4, r0
 80243c2:	e708      	b.n	80241d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80243c4:	2200      	movs	r2, #0
 80243c6:	e706      	b.n	80241d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80243c8:	4632      	mov	r2, r6
 80243ca:	e704      	b.n	80241d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080243cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80243cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80243d0:	b09d      	sub	sp, #116	; 0x74
 80243d2:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80243d6:	9219      	str	r2, [sp, #100]	; 0x64
 80243d8:	9307      	str	r3, [sp, #28]
 80243da:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80243dc:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80243e0:	931a      	str	r3, [sp, #104]	; 0x68
 80243e2:	9117      	str	r1, [sp, #92]	; 0x5c
 80243e4:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80243e8:	901b      	str	r0, [sp, #108]	; 0x6c
 80243ea:	6850      	ldr	r0, [r2, #4]
 80243ec:	6812      	ldr	r2, [r2, #0]
 80243ee:	fb00 1303 	mla	r3, r0, r3, r1
 80243f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80243f6:	930a      	str	r3, [sp, #40]	; 0x28
 80243f8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80243fa:	681b      	ldr	r3, [r3, #0]
 80243fc:	9310      	str	r3, [sp, #64]	; 0x40
 80243fe:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8024402:	930b      	str	r3, [sp, #44]	; 0x2c
 8024404:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024406:	2b00      	cmp	r3, #0
 8024408:	dc03      	bgt.n	8024412 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802440a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802440c:	2b00      	cmp	r3, #0
 802440e:	f340 8375 	ble.w	8024afc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024412:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024414:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024418:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802441c:	1e48      	subs	r0, r1, #1
 802441e:	1e57      	subs	r7, r2, #1
 8024420:	9b07      	ldr	r3, [sp, #28]
 8024422:	2b00      	cmp	r3, #0
 8024424:	f340 818e 	ble.w	8024744 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8024428:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802442c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024430:	d406      	bmi.n	8024440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024432:	4584      	cmp	ip, r0
 8024434:	da04      	bge.n	8024440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024436:	2b00      	cmp	r3, #0
 8024438:	db02      	blt.n	8024440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802443a:	42bb      	cmp	r3, r7
 802443c:	f2c0 8183 	blt.w	8024746 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024440:	f11c 0c01 	adds.w	ip, ip, #1
 8024444:	f100 8173 	bmi.w	802472e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024448:	4561      	cmp	r1, ip
 802444a:	f2c0 8170 	blt.w	802472e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802444e:	3301      	adds	r3, #1
 8024450:	f100 816d 	bmi.w	802472e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024454:	429a      	cmp	r2, r3
 8024456:	f2c0 816a 	blt.w	802472e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802445a:	9b07      	ldr	r3, [sp, #28]
 802445c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802445e:	9318      	str	r3, [sp, #96]	; 0x60
 8024460:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024462:	2b00      	cmp	r3, #0
 8024464:	f340 818c 	ble.w	8024780 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024468:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802446a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802446c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024470:	689b      	ldr	r3, [r3, #8]
 8024472:	1422      	asrs	r2, r4, #16
 8024474:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024478:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802447c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024480:	f100 81cd 	bmi.w	802481e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024484:	f103 38ff 	add.w	r8, r3, #4294967295
 8024488:	4542      	cmp	r2, r8
 802448a:	f280 81c8 	bge.w	802481e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802448e:	f1bc 0f00 	cmp.w	ip, #0
 8024492:	f2c0 81c4 	blt.w	802481e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024496:	f10e 38ff 	add.w	r8, lr, #4294967295
 802449a:	45c4      	cmp	ip, r8
 802449c:	f280 81bf 	bge.w	802481e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80244a0:	b21b      	sxth	r3, r3
 80244a2:	fb0c 2203 	mla	r2, ip, r3, r2
 80244a6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80244a8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80244ac:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80244b0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80244b4:	2800      	cmp	r0, #0
 80244b6:	f000 81a9 	beq.w	802480c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80244ba:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80244be:	950c      	str	r5, [sp, #48]	; 0x30
 80244c0:	0e2d      	lsrs	r5, r5, #24
 80244c2:	9513      	str	r5, [sp, #76]	; 0x4c
 80244c4:	b181      	cbz	r1, 80244e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80244c6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80244ca:	3b01      	subs	r3, #1
 80244cc:	009b      	lsls	r3, r3, #2
 80244ce:	3304      	adds	r3, #4
 80244d0:	eb08 0c03 	add.w	ip, r8, r3
 80244d4:	f858 3003 	ldr.w	r3, [r8, r3]
 80244d8:	9308      	str	r3, [sp, #32]
 80244da:	0e1b      	lsrs	r3, r3, #24
 80244dc:	9311      	str	r3, [sp, #68]	; 0x44
 80244de:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80244e2:	930d      	str	r3, [sp, #52]	; 0x34
 80244e4:	0e1b      	lsrs	r3, r3, #24
 80244e6:	9314      	str	r3, [sp, #80]	; 0x50
 80244e8:	b280      	uxth	r0, r0
 80244ea:	b289      	uxth	r1, r1
 80244ec:	fb00 f901 	mul.w	r9, r0, r1
 80244f0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80244f4:	0100      	lsls	r0, r0, #4
 80244f6:	eba0 0809 	sub.w	r8, r0, r9
 80244fa:	b289      	uxth	r1, r1
 80244fc:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024500:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8024502:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024504:	fa1f f888 	uxth.w	r8, r8
 8024508:	1a5b      	subs	r3, r3, r1
 802450a:	b29b      	uxth	r3, r3
 802450c:	fb08 f000 	mul.w	r0, r8, r0
 8024510:	fb03 000e 	mla	r0, r3, lr, r0
 8024514:	fb01 0005 	mla	r0, r1, r5, r0
 8024518:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802451a:	fb09 0005 	mla	r0, r9, r5, r0
 802451e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8024522:	2800      	cmp	r0, #0
 8024524:	f000 80fa 	beq.w	802471c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024528:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802452c:	d01b      	beq.n	8024566 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802452e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024532:	fb0e fa0a 	mul.w	sl, lr, sl
 8024536:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802453a:	fb0e fe02 	mul.w	lr, lr, r2
 802453e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024542:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024546:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802454a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802454e:	4452      	add	r2, sl
 8024550:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024554:	0a12      	lsrs	r2, r2, #8
 8024556:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802455a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802455e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024562:	ea42 020c 	orr.w	r2, r2, ip
 8024566:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024568:	2dff      	cmp	r5, #255	; 0xff
 802456a:	d021      	beq.n	80245b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802456c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802456e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024572:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024574:	fb05 fb0b 	mul.w	fp, r5, fp
 8024578:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802457a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802457e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024580:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024584:	fb05 fa0a 	mul.w	sl, r5, sl
 8024588:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802458c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024590:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024594:	44de      	add	lr, fp
 8024596:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802459a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802459e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80245a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245aa:	ea4e 050a 	orr.w	r5, lr, sl
 80245ae:	950c      	str	r5, [sp, #48]	; 0x30
 80245b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245b2:	2dff      	cmp	r5, #255	; 0xff
 80245b4:	d021      	beq.n	80245fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80245b6:	9d08      	ldr	r5, [sp, #32]
 80245b8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80245bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245be:	fb05 fb0b 	mul.w	fp, r5, fp
 80245c2:	9d08      	ldr	r5, [sp, #32]
 80245c4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80245c8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245ca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80245ce:	fb05 fa0a 	mul.w	sl, r5, sl
 80245d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80245d6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80245da:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80245de:	44de      	add	lr, fp
 80245e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80245e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80245e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80245f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245f4:	ea4e 050a 	orr.w	r5, lr, sl
 80245f8:	9508      	str	r5, [sp, #32]
 80245fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80245fc:	2dff      	cmp	r5, #255	; 0xff
 80245fe:	d021      	beq.n	8024644 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8024600:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024602:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024606:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024608:	fb05 fb0b 	mul.w	fp, r5, fp
 802460c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802460e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024612:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024614:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024618:	fb05 fa0a 	mul.w	sl, r5, sl
 802461c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024620:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024624:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024628:	44de      	add	lr, fp
 802462a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802462e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024632:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024636:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802463a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802463e:	ea4e 050a 	orr.w	r5, lr, sl
 8024642:	950d      	str	r5, [sp, #52]	; 0x34
 8024644:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024646:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802464a:	9d08      	ldr	r5, [sp, #32]
 802464c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024650:	fb08 fc0c 	mul.w	ip, r8, ip
 8024654:	fb03 cc0e 	mla	ip, r3, lr, ip
 8024658:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802465c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802465e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024662:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024666:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024668:	fb09 cc0e 	mla	ip, r9, lr, ip
 802466c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024670:	fb08 f80e 	mul.w	r8, r8, lr
 8024674:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024678:	fb03 8202 	mla	r2, r3, r2, r8
 802467c:	9b08      	ldr	r3, [sp, #32]
 802467e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024680:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8024684:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024686:	fb01 220a 	mla	r2, r1, sl, r2
 802468a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802468e:	fb09 2901 	mla	r9, r9, r1, r2
 8024692:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024694:	883b      	ldrh	r3, [r7, #0]
 8024696:	4342      	muls	r2, r0
 8024698:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802469c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80246a0:	1c50      	adds	r0, r2, #1
 80246a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80246a6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80246aa:	ea4c 0c09 	orr.w	ip, ip, r9
 80246ae:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80246b2:	1219      	asrs	r1, r3, #8
 80246b4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80246b8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80246bc:	b2c0      	uxtb	r0, r0
 80246be:	fb12 f205 	smulbb	r2, r2, r5
 80246c2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80246c6:	fb01 2100 	mla	r1, r1, r0, r2
 80246ca:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80246ce:	10da      	asrs	r2, r3, #3
 80246d0:	fa5f fc8c 	uxtb.w	ip, ip
 80246d4:	00db      	lsls	r3, r3, #3
 80246d6:	fb1c fc05 	smulbb	ip, ip, r5
 80246da:	b2db      	uxtb	r3, r3
 80246dc:	b289      	uxth	r1, r1
 80246de:	fb03 c300 	mla	r3, r3, r0, ip
 80246e2:	fa1f fc83 	uxth.w	ip, r3
 80246e6:	1c4b      	adds	r3, r1, #1
 80246e8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80246ec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80246f0:	fb1e fe05 	smulbb	lr, lr, r5
 80246f4:	f10c 0301 	add.w	r3, ip, #1
 80246f8:	fb02 e200 	mla	r2, r2, r0, lr
 80246fc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024700:	b292      	uxth	r2, r2
 8024702:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024706:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802470a:	430b      	orrs	r3, r1
 802470c:	1c51      	adds	r1, r2, #1
 802470e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024712:	0952      	lsrs	r2, r2, #5
 8024714:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024718:	4313      	orrs	r3, r2
 802471a:	803b      	strh	r3, [r7, #0]
 802471c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802471e:	441c      	add	r4, r3
 8024720:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024722:	441e      	add	r6, r3
 8024724:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024726:	3b01      	subs	r3, #1
 8024728:	3702      	adds	r7, #2
 802472a:	9318      	str	r3, [sp, #96]	; 0x60
 802472c:	e698      	b.n	8024460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802472e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024730:	441c      	add	r4, r3
 8024732:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024734:	441e      	add	r6, r3
 8024736:	9b07      	ldr	r3, [sp, #28]
 8024738:	3b01      	subs	r3, #1
 802473a:	9307      	str	r3, [sp, #28]
 802473c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802473e:	3302      	adds	r3, #2
 8024740:	930a      	str	r3, [sp, #40]	; 0x28
 8024742:	e66d      	b.n	8024420 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8024744:	d023      	beq.n	802478e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024746:	9b07      	ldr	r3, [sp, #28]
 8024748:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802474a:	3b01      	subs	r3, #1
 802474c:	fb00 4003 	mla	r0, r0, r3, r4
 8024750:	1400      	asrs	r0, r0, #16
 8024752:	f53f ae82 	bmi.w	802445a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024756:	3901      	subs	r1, #1
 8024758:	4288      	cmp	r0, r1
 802475a:	f6bf ae7e 	bge.w	802445a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802475e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8024760:	fb01 6303 	mla	r3, r1, r3, r6
 8024764:	141b      	asrs	r3, r3, #16
 8024766:	f53f ae78 	bmi.w	802445a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802476a:	3a01      	subs	r2, #1
 802476c:	4293      	cmp	r3, r2
 802476e:	f6bf ae74 	bge.w	802445a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024772:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024776:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802477a:	f1bb 0f00 	cmp.w	fp, #0
 802477e:	dc6c      	bgt.n	802485a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024780:	9b07      	ldr	r3, [sp, #28]
 8024782:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024786:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024788:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802478c:	930a      	str	r3, [sp, #40]	; 0x28
 802478e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024790:	2b00      	cmp	r3, #0
 8024792:	f340 81b3 	ble.w	8024afc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024796:	ee30 0a04 	vadd.f32	s0, s0, s8
 802479a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802479e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80247a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80247a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80247a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80247ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80247b0:	eef0 6a62 	vmov.f32	s13, s5
 80247b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80247b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80247c0:	ee16 4a90 	vmov	r4, s13
 80247c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80247c8:	eef0 6a43 	vmov.f32	s13, s6
 80247cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80247d0:	ee12 2a90 	vmov	r2, s5
 80247d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80247d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80247dc:	ee13 2a10 	vmov	r2, s6
 80247e0:	9329      	str	r3, [sp, #164]	; 0xa4
 80247e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80247e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80247e8:	932a      	str	r3, [sp, #168]	; 0xa8
 80247ea:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80247ec:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80247ee:	3b01      	subs	r3, #1
 80247f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247f4:	9317      	str	r3, [sp, #92]	; 0x5c
 80247f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80247f8:	bf08      	it	eq
 80247fa:	4613      	moveq	r3, r2
 80247fc:	ee16 6a90 	vmov	r6, s13
 8024800:	9307      	str	r3, [sp, #28]
 8024802:	eeb0 3a67 	vmov.f32	s6, s15
 8024806:	eef0 2a47 	vmov.f32	s5, s14
 802480a:	e5fb      	b.n	8024404 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802480c:	2900      	cmp	r1, #0
 802480e:	f43f ae6b 	beq.w	80244e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024812:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024816:	9308      	str	r3, [sp, #32]
 8024818:	0e1b      	lsrs	r3, r3, #24
 802481a:	9311      	str	r3, [sp, #68]	; 0x44
 802481c:	e664      	b.n	80244e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802481e:	f112 0801 	adds.w	r8, r2, #1
 8024822:	f53f af7b 	bmi.w	802471c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024826:	4543      	cmp	r3, r8
 8024828:	f6ff af78 	blt.w	802471c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802482c:	f11c 0801 	adds.w	r8, ip, #1
 8024830:	f53f af74 	bmi.w	802471c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024834:	45c6      	cmp	lr, r8
 8024836:	f6ff af71 	blt.w	802471c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802483a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802483c:	9201      	str	r2, [sp, #4]
 802483e:	fa0f f28e 	sxth.w	r2, lr
 8024842:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8024846:	e9cd c002 	strd	ip, r0, [sp, #8]
 802484a:	9200      	str	r2, [sp, #0]
 802484c:	b21b      	sxth	r3, r3
 802484e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024850:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024852:	4639      	mov	r1, r7
 8024854:	f7ff fc79 	bl	802414a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024858:	e760      	b.n	802471c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802485a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802485c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802485e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024862:	1427      	asrs	r7, r4, #16
 8024864:	1433      	asrs	r3, r6, #16
 8024866:	fb01 7303 	mla	r3, r1, r3, r7
 802486a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802486e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024872:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024876:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802487a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802487e:	2a00      	cmp	r2, #0
 8024880:	f000 8133 	beq.w	8024aea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024884:	687d      	ldr	r5, [r7, #4]
 8024886:	950e      	str	r5, [sp, #56]	; 0x38
 8024888:	0e2d      	lsrs	r5, r5, #24
 802488a:	9515      	str	r5, [sp, #84]	; 0x54
 802488c:	b178      	cbz	r0, 80248ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802488e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8024892:	3901      	subs	r1, #1
 8024894:	0089      	lsls	r1, r1, #2
 8024896:	3104      	adds	r1, #4
 8024898:	eb07 0e01 	add.w	lr, r7, r1
 802489c:	5879      	ldr	r1, [r7, r1]
 802489e:	9109      	str	r1, [sp, #36]	; 0x24
 80248a0:	0e09      	lsrs	r1, r1, #24
 80248a2:	9112      	str	r1, [sp, #72]	; 0x48
 80248a4:	f8de 1004 	ldr.w	r1, [lr, #4]
 80248a8:	910f      	str	r1, [sp, #60]	; 0x3c
 80248aa:	0e09      	lsrs	r1, r1, #24
 80248ac:	9116      	str	r1, [sp, #88]	; 0x58
 80248ae:	b292      	uxth	r2, r2
 80248b0:	b280      	uxth	r0, r0
 80248b2:	fb02 f800 	mul.w	r8, r2, r0
 80248b6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80248ba:	0112      	lsls	r2, r2, #4
 80248bc:	eba2 0e08 	sub.w	lr, r2, r8
 80248c0:	b280      	uxth	r0, r0
 80248c2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80248c6:	9915      	ldr	r1, [sp, #84]	; 0x54
 80248c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80248ca:	fa1f fe8e 	uxth.w	lr, lr
 80248ce:	1a12      	subs	r2, r2, r0
 80248d0:	b292      	uxth	r2, r2
 80248d2:	fb0e f101 	mul.w	r1, lr, r1
 80248d6:	fb02 110c 	mla	r1, r2, ip, r1
 80248da:	fb00 1105 	mla	r1, r0, r5, r1
 80248de:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80248e0:	fb08 1105 	mla	r1, r8, r5, r1
 80248e4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80248e8:	2900      	cmp	r1, #0
 80248ea:	f000 80f5 	beq.w	8024ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80248ee:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80248f2:	d019      	beq.n	8024928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80248f4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80248f8:	fb0c fa0a 	mul.w	sl, ip, sl
 80248fc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024900:	fb0c fc03 	mul.w	ip, ip, r3
 8024904:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024908:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802490c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024910:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024914:	4453      	add	r3, sl
 8024916:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802491a:	0a1b      	lsrs	r3, r3, #8
 802491c:	0a3f      	lsrs	r7, r7, #8
 802491e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024922:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024926:	433b      	orrs	r3, r7
 8024928:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802492a:	2dff      	cmp	r5, #255	; 0xff
 802492c:	d020      	beq.n	8024970 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802492e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024930:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024934:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024936:	436f      	muls	r7, r5
 8024938:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802493a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802493e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024940:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024944:	fb05 fa0a 	mul.w	sl, r5, sl
 8024948:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802494c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024950:	44bc      	add	ip, r7
 8024952:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024956:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802495a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802495e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024962:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024966:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802496a:	ea4c 050a 	orr.w	r5, ip, sl
 802496e:	950e      	str	r5, [sp, #56]	; 0x38
 8024970:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024972:	2dff      	cmp	r5, #255	; 0xff
 8024974:	d020      	beq.n	80249b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024976:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024978:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802497c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802497e:	436f      	muls	r7, r5
 8024980:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024982:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024986:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024988:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802498c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024990:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024994:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024998:	44bc      	add	ip, r7
 802499a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802499e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80249a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80249a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80249aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80249ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80249b2:	ea4c 050a 	orr.w	r5, ip, sl
 80249b6:	9509      	str	r5, [sp, #36]	; 0x24
 80249b8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80249ba:	2dff      	cmp	r5, #255	; 0xff
 80249bc:	d020      	beq.n	8024a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80249be:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80249c0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80249c4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80249c6:	436f      	muls	r7, r5
 80249c8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80249ca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80249ce:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80249d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80249d4:	fb05 fa0a 	mul.w	sl, r5, sl
 80249d8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80249dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80249e0:	44bc      	add	ip, r7
 80249e2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80249e6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80249ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80249ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80249f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80249f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80249fa:	ea4c 050a 	orr.w	r5, ip, sl
 80249fe:	950f      	str	r5, [sp, #60]	; 0x3c
 8024a00:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a02:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a06:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024a08:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024a0c:	fb0e f707 	mul.w	r7, lr, r7
 8024a10:	fb02 770c 	mla	r7, r2, ip, r7
 8024a14:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024a18:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024a1a:	fb00 770c 	mla	r7, r0, ip, r7
 8024a1e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024a22:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a24:	fb08 770c 	mla	r7, r8, ip, r7
 8024a28:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024a2c:	fb0e fe0c 	mul.w	lr, lr, ip
 8024a30:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024a34:	fb02 e303 	mla	r3, r2, r3, lr
 8024a38:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024a3a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024a3c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024a40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024a42:	fb00 330a 	mla	r3, r0, sl, r3
 8024a46:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024a4a:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024a4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024a50:	f8b9 0000 	ldrh.w	r0, [r9]
 8024a54:	4359      	muls	r1, r3
 8024a56:	0a3f      	lsrs	r7, r7, #8
 8024a58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a5c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024a60:	1c4b      	adds	r3, r1, #1
 8024a62:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024a66:	ea47 070c 	orr.w	r7, r7, ip
 8024a6a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024a6e:	1202      	asrs	r2, r0, #8
 8024a70:	0c3b      	lsrs	r3, r7, #16
 8024a72:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024a76:	b2c9      	uxtb	r1, r1
 8024a78:	fb13 f305 	smulbb	r3, r3, r5
 8024a7c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024a80:	fb02 3201 	mla	r2, r2, r1, r3
 8024a84:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024a88:	10c3      	asrs	r3, r0, #3
 8024a8a:	b2ff      	uxtb	r7, r7
 8024a8c:	00c0      	lsls	r0, r0, #3
 8024a8e:	b2c0      	uxtb	r0, r0
 8024a90:	fb17 f705 	smulbb	r7, r7, r5
 8024a94:	fb00 7001 	mla	r0, r0, r1, r7
 8024a98:	b292      	uxth	r2, r2
 8024a9a:	fb1c fc05 	smulbb	ip, ip, r5
 8024a9e:	b280      	uxth	r0, r0
 8024aa0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024aa4:	fb03 c301 	mla	r3, r3, r1, ip
 8024aa8:	1c51      	adds	r1, r2, #1
 8024aaa:	f100 0c01 	add.w	ip, r0, #1
 8024aae:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024ab2:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024ab6:	b29b      	uxth	r3, r3
 8024ab8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024abc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024ac0:	ea4c 0202 	orr.w	r2, ip, r2
 8024ac4:	f103 0c01 	add.w	ip, r3, #1
 8024ac8:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024acc:	095b      	lsrs	r3, r3, #5
 8024ace:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024ad2:	431a      	orrs	r2, r3
 8024ad4:	f8a9 2000 	strh.w	r2, [r9]
 8024ad8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024ada:	441c      	add	r4, r3
 8024adc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024ade:	f109 0902 	add.w	r9, r9, #2
 8024ae2:	441e      	add	r6, r3
 8024ae4:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024ae8:	e647      	b.n	802477a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024aea:	2800      	cmp	r0, #0
 8024aec:	f43f aedf 	beq.w	80248ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024af0:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024af4:	9109      	str	r1, [sp, #36]	; 0x24
 8024af6:	0e09      	lsrs	r1, r1, #24
 8024af8:	9112      	str	r1, [sp, #72]	; 0x48
 8024afa:	e6d8      	b.n	80248ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024afc:	b01d      	add	sp, #116	; 0x74
 8024afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024b02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024b02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b06:	b085      	sub	sp, #20
 8024b08:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024b0c:	9102      	str	r1, [sp, #8]
 8024b0e:	2c00      	cmp	r4, #0
 8024b10:	fb04 7103 	mla	r1, r4, r3, r7
 8024b14:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024b18:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024b1c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024b20:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024b24:	f2c0 810c 	blt.w	8024d40 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024b28:	45a6      	cmp	lr, r4
 8024b2a:	f340 8109 	ble.w	8024d40 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024b2e:	2f00      	cmp	r7, #0
 8024b30:	f2c0 8104 	blt.w	8024d3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024b34:	42bb      	cmp	r3, r7
 8024b36:	f340 8101 	ble.w	8024d3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024b3a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024b3e:	1c7a      	adds	r2, r7, #1
 8024b40:	f100 8101 	bmi.w	8024d46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024b44:	4293      	cmp	r3, r2
 8024b46:	f340 80fe 	ble.w	8024d46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024b4a:	2e00      	cmp	r6, #0
 8024b4c:	f000 80fd 	beq.w	8024d4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024b50:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024b54:	3401      	adds	r4, #1
 8024b56:	f100 80fc 	bmi.w	8024d52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024b5a:	45a6      	cmp	lr, r4
 8024b5c:	f340 80f9 	ble.w	8024d52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024b60:	2800      	cmp	r0, #0
 8024b62:	f000 80f9 	beq.w	8024d58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024b66:	2f00      	cmp	r7, #0
 8024b68:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024b6c:	f2c0 80ef 	blt.w	8024d4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024b70:	42bb      	cmp	r3, r7
 8024b72:	f340 80ec 	ble.w	8024d4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024b76:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024b7a:	3701      	adds	r7, #1
 8024b7c:	f100 80ef 	bmi.w	8024d5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024b80:	42bb      	cmp	r3, r7
 8024b82:	f340 80ec 	ble.w	8024d5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024b86:	2e00      	cmp	r6, #0
 8024b88:	f000 80eb 	beq.w	8024d62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024b8c:	6852      	ldr	r2, [r2, #4]
 8024b8e:	b2b6      	uxth	r6, r6
 8024b90:	b280      	uxth	r0, r0
 8024b92:	fb00 fe06 	mul.w	lr, r0, r6
 8024b96:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024b9a:	0136      	lsls	r6, r6, #4
 8024b9c:	eba6 070e 	sub.w	r7, r6, lr
 8024ba0:	b280      	uxth	r0, r0
 8024ba2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024ba6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024baa:	b2bf      	uxth	r7, r7
 8024bac:	1a1b      	subs	r3, r3, r0
 8024bae:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024bb2:	b29b      	uxth	r3, r3
 8024bb4:	fb07 f60a 	mul.w	r6, r7, sl
 8024bb8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024bbc:	fb0b 6603 	mla	r6, fp, r3, r6
 8024bc0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024bc4:	fb00 6609 	mla	r6, r0, r9, r6
 8024bc8:	fb0e 6608 	mla	r6, lr, r8, r6
 8024bcc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024bd0:	9600      	str	r6, [sp, #0]
 8024bd2:	2e00      	cmp	r6, #0
 8024bd4:	f000 80af 	beq.w	8024d36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024bd8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024bdc:	fb0b fc0c 	mul.w	ip, fp, ip
 8024be0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024be4:	fb0b f505 	mul.w	r5, fp, r5
 8024be8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024bec:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024bf0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024bf4:	44dc      	add	ip, fp
 8024bf6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024bfa:	9501      	str	r5, [sp, #4]
 8024bfc:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024c00:	9503      	str	r5, [sp, #12]
 8024c02:	9d01      	ldr	r5, [sp, #4]
 8024c04:	9e02      	ldr	r6, [sp, #8]
 8024c06:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024c0a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024c0e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024c12:	fb0a fc0c 	mul.w	ip, sl, ip
 8024c16:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024c1a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024c1e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024c22:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024c26:	4465      	add	r5, ip
 8024c28:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024c2c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024c30:	fb09 fc0c 	mul.w	ip, r9, ip
 8024c34:	fb09 f904 	mul.w	r9, r9, r4
 8024c38:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024c3c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024c40:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024c44:	fb08 f404 	mul.w	r4, r8, r4
 8024c48:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024c4c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024c50:	fb08 f802 	mul.w	r8, r8, r2
 8024c54:	fb0a fa01 	mul.w	sl, sl, r1
 8024c58:	0a22      	lsrs	r2, r4, #8
 8024c5a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024c5e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024c62:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024c66:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024c6a:	4414      	add	r4, r2
 8024c6c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024c70:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024c74:	0a2d      	lsrs	r5, r5, #8
 8024c76:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024c7a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024c7e:	9a03      	ldr	r2, [sp, #12]
 8024c80:	8836      	ldrh	r6, [r6, #0]
 8024c82:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024c86:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024c8a:	437d      	muls	r5, r7
 8024c8c:	4461      	add	r1, ip
 8024c8e:	0a24      	lsrs	r4, r4, #8
 8024c90:	fb02 5503 	mla	r5, r2, r3, r5
 8024c94:	0a09      	lsrs	r1, r1, #8
 8024c96:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024c9a:	fb04 540e 	mla	r4, r4, lr, r5
 8024c9e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024ca2:	fb01 4100 	mla	r1, r1, r0, r4
 8024ca6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024caa:	0a09      	lsrs	r1, r1, #8
 8024cac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024cb0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024cb4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024cb8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024cbc:	fb07 f70a 	mul.w	r7, r7, sl
 8024cc0:	fb03 7101 	mla	r1, r3, r1, r7
 8024cc4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024cc8:	9b00      	ldr	r3, [sp, #0]
 8024cca:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024cce:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024cd2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024cd6:	fb00 e101 	mla	r1, r0, r1, lr
 8024cda:	43da      	mvns	r2, r3
 8024cdc:	1233      	asrs	r3, r6, #8
 8024cde:	b2d2      	uxtb	r2, r2
 8024ce0:	10f0      	asrs	r0, r6, #3
 8024ce2:	0a09      	lsrs	r1, r1, #8
 8024ce4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024ce8:	00f6      	lsls	r6, r6, #3
 8024cea:	4353      	muls	r3, r2
 8024cec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024cf0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024cf4:	b2f6      	uxtb	r6, r6
 8024cf6:	4321      	orrs	r1, r4
 8024cf8:	4350      	muls	r0, r2
 8024cfa:	4356      	muls	r6, r2
 8024cfc:	1c5a      	adds	r2, r3, #1
 8024cfe:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024d02:	0c0b      	lsrs	r3, r1, #16
 8024d04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d08:	1c42      	adds	r2, r0, #1
 8024d0a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024d0e:	0a0a      	lsrs	r2, r1, #8
 8024d10:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024d14:	021b      	lsls	r3, r3, #8
 8024d16:	00d2      	lsls	r2, r2, #3
 8024d18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024d1c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024d20:	4313      	orrs	r3, r2
 8024d22:	1c72      	adds	r2, r6, #1
 8024d24:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024d28:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8024d2c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024d30:	4319      	orrs	r1, r3
 8024d32:	9b02      	ldr	r3, [sp, #8]
 8024d34:	8019      	strh	r1, [r3, #0]
 8024d36:	b005      	add	sp, #20
 8024d38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d3c:	2500      	movs	r5, #0
 8024d3e:	e6fe      	b.n	8024b3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024d40:	2100      	movs	r1, #0
 8024d42:	460d      	mov	r5, r1
 8024d44:	e706      	b.n	8024b54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024d46:	2100      	movs	r1, #0
 8024d48:	e704      	b.n	8024b54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024d4a:	4631      	mov	r1, r6
 8024d4c:	e702      	b.n	8024b54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024d4e:	2400      	movs	r4, #0
 8024d50:	e713      	b.n	8024b7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024d52:	2200      	movs	r2, #0
 8024d54:	4614      	mov	r4, r2
 8024d56:	e71a      	b.n	8024b8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024d58:	4602      	mov	r2, r0
 8024d5a:	4604      	mov	r4, r0
 8024d5c:	e717      	b.n	8024b8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024d5e:	2200      	movs	r2, #0
 8024d60:	e715      	b.n	8024b8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024d62:	4632      	mov	r2, r6
 8024d64:	e713      	b.n	8024b8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024d68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d6c:	b09b      	sub	sp, #108	; 0x6c
 8024d6e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024d72:	9218      	str	r2, [sp, #96]	; 0x60
 8024d74:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024d76:	9116      	str	r1, [sp, #88]	; 0x58
 8024d78:	9307      	str	r3, [sp, #28]
 8024d7a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024d7e:	9019      	str	r0, [sp, #100]	; 0x64
 8024d80:	6850      	ldr	r0, [r2, #4]
 8024d82:	6812      	ldr	r2, [r2, #0]
 8024d84:	fb00 1303 	mla	r3, r0, r3, r1
 8024d88:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024d8c:	930a      	str	r3, [sp, #40]	; 0x28
 8024d8e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024d90:	681b      	ldr	r3, [r3, #0]
 8024d92:	930f      	str	r3, [sp, #60]	; 0x3c
 8024d94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024d96:	2b00      	cmp	r3, #0
 8024d98:	dc03      	bgt.n	8024da2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024d9a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024d9c:	2b00      	cmp	r3, #0
 8024d9e:	f340 8386 	ble.w	80254ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024da2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024da4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024da8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024dac:	1e48      	subs	r0, r1, #1
 8024dae:	1e57      	subs	r7, r2, #1
 8024db0:	9b07      	ldr	r3, [sp, #28]
 8024db2:	2b00      	cmp	r3, #0
 8024db4:	f340 8166 	ble.w	8025084 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024db8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024dbc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024dc0:	d406      	bmi.n	8024dd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024dc2:	4584      	cmp	ip, r0
 8024dc4:	da04      	bge.n	8024dd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024dc6:	2b00      	cmp	r3, #0
 8024dc8:	db02      	blt.n	8024dd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024dca:	42bb      	cmp	r3, r7
 8024dcc:	f2c0 815b 	blt.w	8025086 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024dd0:	f11c 0c01 	adds.w	ip, ip, #1
 8024dd4:	f100 814b 	bmi.w	802506e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024dd8:	4561      	cmp	r1, ip
 8024dda:	f2c0 8148 	blt.w	802506e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024dde:	3301      	adds	r3, #1
 8024de0:	f100 8145 	bmi.w	802506e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024de4:	429a      	cmp	r2, r3
 8024de6:	f2c0 8142 	blt.w	802506e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024dea:	9b07      	ldr	r3, [sp, #28]
 8024dec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024dee:	9317      	str	r3, [sp, #92]	; 0x5c
 8024df0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024df2:	2b00      	cmp	r3, #0
 8024df4:	f340 8165 	ble.w	80250c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024df8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8024dfa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024dfc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024e00:	689b      	ldr	r3, [r3, #8]
 8024e02:	1422      	asrs	r2, r4, #16
 8024e04:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024e08:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024e0c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024e10:	f100 81d5 	bmi.w	80251be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024e14:	f103 38ff 	add.w	r8, r3, #4294967295
 8024e18:	4542      	cmp	r2, r8
 8024e1a:	f280 81d0 	bge.w	80251be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024e1e:	f1bc 0f00 	cmp.w	ip, #0
 8024e22:	f2c0 81cc 	blt.w	80251be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024e26:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024e2a:	45c4      	cmp	ip, r8
 8024e2c:	f280 81c7 	bge.w	80251be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024e30:	b21b      	sxth	r3, r3
 8024e32:	fb0c 2203 	mla	r2, ip, r3, r2
 8024e36:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024e38:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024e3c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024e40:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024e44:	2900      	cmp	r1, #0
 8024e46:	f000 8182 	beq.w	802514e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8024e4a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024e4e:	950b      	str	r5, [sp, #44]	; 0x2c
 8024e50:	0e2d      	lsrs	r5, r5, #24
 8024e52:	9512      	str	r5, [sp, #72]	; 0x48
 8024e54:	b180      	cbz	r0, 8024e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024e56:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024e5a:	3b01      	subs	r3, #1
 8024e5c:	009b      	lsls	r3, r3, #2
 8024e5e:	3304      	adds	r3, #4
 8024e60:	eb08 0c03 	add.w	ip, r8, r3
 8024e64:	f858 3003 	ldr.w	r3, [r8, r3]
 8024e68:	9308      	str	r3, [sp, #32]
 8024e6a:	0e1b      	lsrs	r3, r3, #24
 8024e6c:	9310      	str	r3, [sp, #64]	; 0x40
 8024e6e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024e72:	930c      	str	r3, [sp, #48]	; 0x30
 8024e74:	0e1b      	lsrs	r3, r3, #24
 8024e76:	9313      	str	r3, [sp, #76]	; 0x4c
 8024e78:	b289      	uxth	r1, r1
 8024e7a:	b280      	uxth	r0, r0
 8024e7c:	fb01 f900 	mul.w	r9, r1, r0
 8024e80:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024e84:	0109      	lsls	r1, r1, #4
 8024e86:	eba1 0809 	sub.w	r8, r1, r9
 8024e8a:	b280      	uxth	r0, r0
 8024e8c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024e90:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8024e92:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024e94:	fa1f f888 	uxth.w	r8, r8
 8024e98:	1a09      	subs	r1, r1, r0
 8024e9a:	b289      	uxth	r1, r1
 8024e9c:	fb08 f303 	mul.w	r3, r8, r3
 8024ea0:	fb01 330e 	mla	r3, r1, lr, r3
 8024ea4:	fb00 3305 	mla	r3, r0, r5, r3
 8024ea8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024eaa:	fb09 3305 	mla	r3, r9, r5, r3
 8024eae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024eb2:	2b00      	cmp	r3, #0
 8024eb4:	f000 80d2 	beq.w	802505c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024eb8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024ebc:	d01b      	beq.n	8024ef6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024ebe:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024ec2:	fb0e fa0a 	mul.w	sl, lr, sl
 8024ec6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024eca:	fb0e fe02 	mul.w	lr, lr, r2
 8024ece:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024ed2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024ed6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024eda:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024ede:	4452      	add	r2, sl
 8024ee0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024ee4:	0a12      	lsrs	r2, r2, #8
 8024ee6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024eea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024eee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024ef2:	ea42 020c 	orr.w	r2, r2, ip
 8024ef6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024ef8:	2dff      	cmp	r5, #255	; 0xff
 8024efa:	d021      	beq.n	8024f40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8024efc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024efe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024f02:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024f04:	fb05 fb0b 	mul.w	fp, r5, fp
 8024f08:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024f0a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024f0e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024f10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024f14:	fb05 fa0a 	mul.w	sl, r5, sl
 8024f18:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024f1c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024f20:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024f24:	44de      	add	lr, fp
 8024f26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024f2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024f2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024f36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f3a:	ea4e 050a 	orr.w	r5, lr, sl
 8024f3e:	950b      	str	r5, [sp, #44]	; 0x2c
 8024f40:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024f42:	2dff      	cmp	r5, #255	; 0xff
 8024f44:	d021      	beq.n	8024f8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024f46:	9d08      	ldr	r5, [sp, #32]
 8024f48:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024f4c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024f4e:	fb05 fb0b 	mul.w	fp, r5, fp
 8024f52:	9d08      	ldr	r5, [sp, #32]
 8024f54:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024f58:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024f5a:	fb05 fa0e 	mul.w	sl, r5, lr
 8024f5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024f62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024f66:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024f6a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024f6e:	44de      	add	lr, fp
 8024f70:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024f74:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024f78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024f80:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f84:	ea4e 050a 	orr.w	r5, lr, sl
 8024f88:	9508      	str	r5, [sp, #32]
 8024f8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024f8c:	2dff      	cmp	r5, #255	; 0xff
 8024f8e:	d021      	beq.n	8024fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024f90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024f92:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024f96:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024f98:	fb05 fb0b 	mul.w	fp, r5, fp
 8024f9c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024f9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024fa2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024fa4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024fa8:	fb05 fa0a 	mul.w	sl, r5, sl
 8024fac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024fb0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024fb4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024fb8:	44de      	add	lr, fp
 8024fba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024fbe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024fc2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024fc6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024fca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024fce:	ea4e 050a 	orr.w	r5, lr, sl
 8024fd2:	950c      	str	r5, [sp, #48]	; 0x30
 8024fd4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024fd6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024fda:	9d08      	ldr	r5, [sp, #32]
 8024fdc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024fe0:	fb08 fc0c 	mul.w	ip, r8, ip
 8024fe4:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024fe8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024fec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024fee:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024ff2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024ff6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024ff8:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024ffc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025000:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025004:	fb08 f80e 	mul.w	r8, r8, lr
 8025008:	fb01 8202 	mla	r2, r1, r2, r8
 802500c:	9908      	ldr	r1, [sp, #32]
 802500e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025012:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025014:	fb00 220a 	mla	r2, r0, sl, r2
 8025018:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 802501c:	fb09 2900 	mla	r9, r9, r0, r2
 8025020:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025024:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025028:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802502c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025030:	ea4c 0c09 	orr.w	ip, ip, r9
 8025034:	2bff      	cmp	r3, #255	; 0xff
 8025036:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802503a:	f040 8091 	bne.w	8025160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802503e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8025042:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8025046:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802504a:	f022 0207 	bic.w	r2, r2, #7
 802504e:	431a      	orrs	r2, r3
 8025050:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025054:	ea4c 0c02 	orr.w	ip, ip, r2
 8025058:	f8a7 c000 	strh.w	ip, [r7]
 802505c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802505e:	441c      	add	r4, r3
 8025060:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025062:	441e      	add	r6, r3
 8025064:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025066:	3b01      	subs	r3, #1
 8025068:	3702      	adds	r7, #2
 802506a:	9317      	str	r3, [sp, #92]	; 0x5c
 802506c:	e6c0      	b.n	8024df0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802506e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025070:	441c      	add	r4, r3
 8025072:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025074:	441e      	add	r6, r3
 8025076:	9b07      	ldr	r3, [sp, #28]
 8025078:	3b01      	subs	r3, #1
 802507a:	9307      	str	r3, [sp, #28]
 802507c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802507e:	3302      	adds	r3, #2
 8025080:	930a      	str	r3, [sp, #40]	; 0x28
 8025082:	e695      	b.n	8024db0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025084:	d024      	beq.n	80250d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025086:	9b07      	ldr	r3, [sp, #28]
 8025088:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802508a:	3b01      	subs	r3, #1
 802508c:	fb00 4003 	mla	r0, r0, r3, r4
 8025090:	1400      	asrs	r0, r0, #16
 8025092:	f53f aeaa 	bmi.w	8024dea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025096:	3901      	subs	r1, #1
 8025098:	4288      	cmp	r0, r1
 802509a:	f6bf aea6 	bge.w	8024dea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802509e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80250a0:	fb01 6303 	mla	r3, r1, r3, r6
 80250a4:	141b      	asrs	r3, r3, #16
 80250a6:	f53f aea0 	bmi.w	8024dea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80250aa:	3a01      	subs	r2, #1
 80250ac:	4293      	cmp	r3, r2
 80250ae:	f6bf ae9c 	bge.w	8024dea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80250b2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80250b6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80250ba:	f1bb 0f00 	cmp.w	fp, #0
 80250be:	f300 809a 	bgt.w	80251f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80250c2:	9b07      	ldr	r3, [sp, #28]
 80250c4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80250c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80250ca:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80250ce:	930a      	str	r3, [sp, #40]	; 0x28
 80250d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80250d2:	2b00      	cmp	r3, #0
 80250d4:	f340 81eb 	ble.w	80254ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80250d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80250dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80250e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80250e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80250e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80250ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80250ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80250f2:	eef0 6a62 	vmov.f32	s13, s5
 80250f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80250fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80250fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025102:	ee16 4a90 	vmov	r4, s13
 8025106:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802510a:	eef0 6a43 	vmov.f32	s13, s6
 802510e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025112:	ee12 2a90 	vmov	r2, s5
 8025116:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802511a:	fb92 f3f3 	sdiv	r3, r2, r3
 802511e:	ee13 2a10 	vmov	r2, s6
 8025122:	9327      	str	r3, [sp, #156]	; 0x9c
 8025124:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025126:	fb92 f3f3 	sdiv	r3, r2, r3
 802512a:	9328      	str	r3, [sp, #160]	; 0xa0
 802512c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802512e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025130:	3b01      	subs	r3, #1
 8025132:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025136:	9316      	str	r3, [sp, #88]	; 0x58
 8025138:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802513a:	bf08      	it	eq
 802513c:	4613      	moveq	r3, r2
 802513e:	ee16 6a90 	vmov	r6, s13
 8025142:	9307      	str	r3, [sp, #28]
 8025144:	eeb0 3a67 	vmov.f32	s6, s15
 8025148:	eef0 2a47 	vmov.f32	s5, s14
 802514c:	e622      	b.n	8024d94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802514e:	2800      	cmp	r0, #0
 8025150:	f43f ae92 	beq.w	8024e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025154:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025158:	9308      	str	r3, [sp, #32]
 802515a:	0e1b      	lsrs	r3, r3, #24
 802515c:	9310      	str	r3, [sp, #64]	; 0x40
 802515e:	e68b      	b.n	8024e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025160:	8839      	ldrh	r1, [r7, #0]
 8025162:	4dd4      	ldr	r5, [pc, #848]	; (80254b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025164:	43db      	mvns	r3, r3
 8025166:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802516a:	fa5f f883 	uxtb.w	r8, r3
 802516e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025172:	fb0e fe08 	mul.w	lr, lr, r8
 8025176:	10c8      	asrs	r0, r1, #3
 8025178:	00cb      	lsls	r3, r1, #3
 802517a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802517e:	f10e 0101 	add.w	r1, lr, #1
 8025182:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025186:	fb00 f008 	mul.w	r0, r0, r8
 802518a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802518e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025192:	f100 0e01 	add.w	lr, r0, #1
 8025196:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802519a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802519e:	b2db      	uxtb	r3, r3
 80251a0:	b2c9      	uxtb	r1, r1
 80251a2:	00d2      	lsls	r2, r2, #3
 80251a4:	fb03 f308 	mul.w	r3, r3, r8
 80251a8:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80251ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80251b0:	430a      	orrs	r2, r1
 80251b2:	1c59      	adds	r1, r3, #1
 80251b4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80251b8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80251bc:	e748      	b.n	8025050 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80251be:	f112 0801 	adds.w	r8, r2, #1
 80251c2:	f53f af4b 	bmi.w	802505c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80251c6:	4543      	cmp	r3, r8
 80251c8:	f6ff af48 	blt.w	802505c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80251cc:	f11c 0801 	adds.w	r8, ip, #1
 80251d0:	f53f af44 	bmi.w	802505c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80251d4:	45c6      	cmp	lr, r8
 80251d6:	f6ff af41 	blt.w	802505c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80251da:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80251de:	fa0f f28e 	sxth.w	r2, lr
 80251e2:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80251e6:	9200      	str	r2, [sp, #0]
 80251e8:	b21b      	sxth	r3, r3
 80251ea:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80251ec:	9819      	ldr	r0, [sp, #100]	; 0x64
 80251ee:	4639      	mov	r1, r7
 80251f0:	f7ff fc87 	bl	8024b02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80251f4:	e732      	b.n	802505c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80251f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80251f8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80251fa:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80251fe:	1421      	asrs	r1, r4, #16
 8025200:	1433      	asrs	r3, r6, #16
 8025202:	fb07 1303 	mla	r3, r7, r3, r1
 8025206:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025208:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802520c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025210:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025214:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025218:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802521c:	2a00      	cmp	r2, #0
 802521e:	f000 8107 	beq.w	8025430 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8025222:	684d      	ldr	r5, [r1, #4]
 8025224:	950d      	str	r5, [sp, #52]	; 0x34
 8025226:	0e2d      	lsrs	r5, r5, #24
 8025228:	9514      	str	r5, [sp, #80]	; 0x50
 802522a:	b178      	cbz	r0, 802524c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802522c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8025230:	3f01      	subs	r7, #1
 8025232:	00bf      	lsls	r7, r7, #2
 8025234:	3704      	adds	r7, #4
 8025236:	eb01 0e07 	add.w	lr, r1, r7
 802523a:	59c9      	ldr	r1, [r1, r7]
 802523c:	9109      	str	r1, [sp, #36]	; 0x24
 802523e:	0e09      	lsrs	r1, r1, #24
 8025240:	9111      	str	r1, [sp, #68]	; 0x44
 8025242:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025246:	910e      	str	r1, [sp, #56]	; 0x38
 8025248:	0e09      	lsrs	r1, r1, #24
 802524a:	9115      	str	r1, [sp, #84]	; 0x54
 802524c:	b292      	uxth	r2, r2
 802524e:	b280      	uxth	r0, r0
 8025250:	fb02 f900 	mul.w	r9, r2, r0
 8025254:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025258:	0112      	lsls	r2, r2, #4
 802525a:	eba2 0e09 	sub.w	lr, r2, r9
 802525e:	b280      	uxth	r0, r0
 8025260:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025264:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025266:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025268:	fa1f fe8e 	uxth.w	lr, lr
 802526c:	1a09      	subs	r1, r1, r0
 802526e:	b289      	uxth	r1, r1
 8025270:	fb0e f202 	mul.w	r2, lr, r2
 8025274:	fb01 220c 	mla	r2, r1, ip, r2
 8025278:	fb00 2205 	mla	r2, r0, r5, r2
 802527c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802527e:	fb09 2205 	mla	r2, r9, r5, r2
 8025282:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025286:	2a00      	cmp	r2, #0
 8025288:	f000 80c9 	beq.w	802541e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802528c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025290:	d019      	beq.n	80252c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025292:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025296:	fb0c fa0a 	mul.w	sl, ip, sl
 802529a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802529e:	fb0c fc03 	mul.w	ip, ip, r3
 80252a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80252a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80252aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80252ae:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80252b2:	4453      	add	r3, sl
 80252b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80252b8:	0a1b      	lsrs	r3, r3, #8
 80252ba:	0a3f      	lsrs	r7, r7, #8
 80252bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80252c0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80252c4:	433b      	orrs	r3, r7
 80252c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80252c8:	2dff      	cmp	r5, #255	; 0xff
 80252ca:	d020      	beq.n	802530e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80252cc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80252ce:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80252d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80252d4:	436f      	muls	r7, r5
 80252d6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80252d8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80252dc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80252de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80252e2:	fb05 fa0a 	mul.w	sl, r5, sl
 80252e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80252ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80252ee:	44bc      	add	ip, r7
 80252f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80252f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80252f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80252fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025300:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025304:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025308:	ea4c 050a 	orr.w	r5, ip, sl
 802530c:	950d      	str	r5, [sp, #52]	; 0x34
 802530e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025310:	2dff      	cmp	r5, #255	; 0xff
 8025312:	d020      	beq.n	8025356 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8025314:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025316:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802531a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802531c:	436f      	muls	r7, r5
 802531e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025320:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025324:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025326:	fb05 fa0c 	mul.w	sl, r5, ip
 802532a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802532e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025332:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025336:	44bc      	add	ip, r7
 8025338:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802533c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025340:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025344:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025348:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802534c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025350:	ea4c 050a 	orr.w	r5, ip, sl
 8025354:	9509      	str	r5, [sp, #36]	; 0x24
 8025356:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025358:	2dff      	cmp	r5, #255	; 0xff
 802535a:	d020      	beq.n	802539e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802535c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802535e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025362:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025364:	436f      	muls	r7, r5
 8025366:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025368:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802536c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802536e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025372:	fb05 fa0a 	mul.w	sl, r5, sl
 8025376:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802537a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802537e:	44bc      	add	ip, r7
 8025380:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025384:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025388:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802538c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025390:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025394:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025398:	ea4c 050a 	orr.w	r5, ip, sl
 802539c:	950e      	str	r5, [sp, #56]	; 0x38
 802539e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80253a0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80253a4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80253a6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80253aa:	fb0e f707 	mul.w	r7, lr, r7
 80253ae:	fb01 770c 	mla	r7, r1, ip, r7
 80253b2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80253b6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80253b8:	fb00 770c 	mla	r7, r0, ip, r7
 80253bc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80253c0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80253c2:	fb09 770c 	mla	r7, r9, ip, r7
 80253c6:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80253ca:	fb0e fe0c 	mul.w	lr, lr, ip
 80253ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80253d2:	fb01 e303 	mla	r3, r1, r3, lr
 80253d6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80253d8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80253dc:	990e      	ldr	r1, [sp, #56]	; 0x38
 80253de:	fb00 330a 	mla	r3, r0, sl, r3
 80253e2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80253e6:	fb09 3c0c 	mla	ip, r9, ip, r3
 80253ea:	0a3f      	lsrs	r7, r7, #8
 80253ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80253f0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80253f4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80253f8:	ea47 070c 	orr.w	r7, r7, ip
 80253fc:	2aff      	cmp	r2, #255	; 0xff
 80253fe:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8025402:	d11e      	bne.n	8025442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8025404:	097a      	lsrs	r2, r7, #5
 8025406:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802540a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802540e:	f023 0307 	bic.w	r3, r3, #7
 8025412:	4313      	orrs	r3, r2
 8025414:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025418:	431f      	orrs	r7, r3
 802541a:	f8a8 7000 	strh.w	r7, [r8]
 802541e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025420:	441c      	add	r4, r3
 8025422:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025424:	f108 0802 	add.w	r8, r8, #2
 8025428:	441e      	add	r6, r3
 802542a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802542e:	e644      	b.n	80250ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8025430:	2800      	cmp	r0, #0
 8025432:	f43f af0b 	beq.w	802524c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025436:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802543a:	9109      	str	r1, [sp, #36]	; 0x24
 802543c:	0e09      	lsrs	r1, r1, #24
 802543e:	9111      	str	r1, [sp, #68]	; 0x44
 8025440:	e704      	b.n	802524c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025442:	f8b8 1000 	ldrh.w	r1, [r8]
 8025446:	43d2      	mvns	r2, r2
 8025448:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802544c:	fa5f fe82 	uxtb.w	lr, r2
 8025450:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025454:	fb0c fc0e 	mul.w	ip, ip, lr
 8025458:	10c8      	asrs	r0, r1, #3
 802545a:	00ca      	lsls	r2, r1, #3
 802545c:	f10c 0101 	add.w	r1, ip, #1
 8025460:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025464:	0c39      	lsrs	r1, r7, #16
 8025466:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802546a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802546e:	4911      	ldr	r1, [pc, #68]	; (80254b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025470:	fb00 f00e 	mul.w	r0, r0, lr
 8025474:	fa5f fc8c 	uxtb.w	ip, ip
 8025478:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802547c:	b2d2      	uxtb	r2, r2
 802547e:	1c41      	adds	r1, r0, #1
 8025480:	fb02 f20e 	mul.w	r2, r2, lr
 8025484:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025488:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802548c:	1c51      	adds	r1, r2, #1
 802548e:	00c0      	lsls	r0, r0, #3
 8025490:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025494:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025498:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802549c:	ea4c 0c00 	orr.w	ip, ip, r0
 80254a0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80254a4:	ea47 0c0c 	orr.w	ip, r7, ip
 80254a8:	f8a8 c000 	strh.w	ip, [r8]
 80254ac:	e7b7      	b.n	802541e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80254ae:	b01b      	add	sp, #108	; 0x6c
 80254b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80254b4:	fffff800 	.word	0xfffff800

080254b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80254b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80254bc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80254c0:	2d00      	cmp	r5, #0
 80254c2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80254c6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80254ca:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80254ce:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80254d2:	fb05 0e03 	mla	lr, r5, r3, r0
 80254d6:	f2c0 808c 	blt.w	80255f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80254da:	45a9      	cmp	r9, r5
 80254dc:	f340 8089 	ble.w	80255f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80254e0:	2800      	cmp	r0, #0
 80254e2:	f2c0 8084 	blt.w	80255ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80254e6:	4580      	cmp	r8, r0
 80254e8:	f340 8081 	ble.w	80255ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80254ec:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80254f0:	f01e 0f01 	tst.w	lr, #1
 80254f4:	5d16      	ldrb	r6, [r2, r4]
 80254f6:	bf0c      	ite	eq
 80254f8:	f006 060f 	andeq.w	r6, r6, #15
 80254fc:	1136      	asrne	r6, r6, #4
 80254fe:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025502:	b2f6      	uxtb	r6, r6
 8025504:	1c44      	adds	r4, r0, #1
 8025506:	d477      	bmi.n	80255f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025508:	45a0      	cmp	r8, r4
 802550a:	dd75      	ble.n	80255f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802550c:	2f00      	cmp	r7, #0
 802550e:	d075      	beq.n	80255fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8025510:	f10e 0a01 	add.w	sl, lr, #1
 8025514:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025518:	f01a 0f01 	tst.w	sl, #1
 802551c:	5d14      	ldrb	r4, [r2, r4]
 802551e:	bf0c      	ite	eq
 8025520:	f004 040f 	andeq.w	r4, r4, #15
 8025524:	1124      	asrne	r4, r4, #4
 8025526:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802552a:	b2e4      	uxtb	r4, r4
 802552c:	3501      	adds	r5, #1
 802552e:	d469      	bmi.n	8025604 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025530:	45a9      	cmp	r9, r5
 8025532:	dd67      	ble.n	8025604 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025534:	f1bc 0f00 	cmp.w	ip, #0
 8025538:	d067      	beq.n	802560a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802553a:	2800      	cmp	r0, #0
 802553c:	db60      	blt.n	8025600 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802553e:	4580      	cmp	r8, r0
 8025540:	dd5e      	ble.n	8025600 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025542:	eb03 090e 	add.w	r9, r3, lr
 8025546:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802554a:	f019 0f01 	tst.w	r9, #1
 802554e:	5d55      	ldrb	r5, [r2, r5]
 8025550:	bf0c      	ite	eq
 8025552:	f005 050f 	andeq.w	r5, r5, #15
 8025556:	112d      	asrne	r5, r5, #4
 8025558:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802555c:	b2ed      	uxtb	r5, r5
 802555e:	3001      	adds	r0, #1
 8025560:	d456      	bmi.n	8025610 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025562:	4580      	cmp	r8, r0
 8025564:	dd54      	ble.n	8025610 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025566:	2f00      	cmp	r7, #0
 8025568:	d054      	beq.n	8025614 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802556a:	3301      	adds	r3, #1
 802556c:	449e      	add	lr, r3
 802556e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025572:	f01e 0f01 	tst.w	lr, #1
 8025576:	5cd0      	ldrb	r0, [r2, r3]
 8025578:	bf0c      	ite	eq
 802557a:	f000 000f 	andeq.w	r0, r0, #15
 802557e:	1100      	asrne	r0, r0, #4
 8025580:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025584:	b2c3      	uxtb	r3, r0
 8025586:	b2ba      	uxth	r2, r7
 8025588:	fa1f fc8c 	uxth.w	ip, ip
 802558c:	fb02 f00c 	mul.w	r0, r2, ip
 8025590:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025594:	0112      	lsls	r2, r2, #4
 8025596:	fa1f fc8c 	uxth.w	ip, ip
 802559a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802559e:	1a12      	subs	r2, r2, r0
 80255a0:	eba7 070c 	sub.w	r7, r7, ip
 80255a4:	b292      	uxth	r2, r2
 80255a6:	b2bf      	uxth	r7, r7
 80255a8:	4362      	muls	r2, r4
 80255aa:	fb06 2207 	mla	r2, r6, r7, r2
 80255ae:	fb0c 2505 	mla	r5, ip, r5, r2
 80255b2:	fb00 5303 	mla	r3, r0, r3, r5
 80255b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80255ba:	b1b3      	cbz	r3, 80255ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80255bc:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80255c0:	435a      	muls	r2, r3
 80255c2:	1c53      	adds	r3, r2, #1
 80255c4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80255c8:	4a2d      	ldr	r2, [pc, #180]	; (8025680 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80255ca:	121b      	asrs	r3, r3, #8
 80255cc:	6812      	ldr	r2, [r2, #0]
 80255ce:	2bff      	cmp	r3, #255	; 0xff
 80255d0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80255d4:	d120      	bne.n	8025618 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80255d6:	4b2b      	ldr	r3, [pc, #172]	; (8025684 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80255d8:	0950      	lsrs	r0, r2, #5
 80255da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80255de:	4033      	ands	r3, r6
 80255e0:	4318      	orrs	r0, r3
 80255e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80255e6:	4302      	orrs	r2, r0
 80255e8:	800a      	strh	r2, [r1, #0]
 80255ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80255ee:	2600      	movs	r6, #0
 80255f0:	e788      	b.n	8025504 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80255f2:	2400      	movs	r4, #0
 80255f4:	4626      	mov	r6, r4
 80255f6:	e799      	b.n	802552c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80255f8:	2400      	movs	r4, #0
 80255fa:	e797      	b.n	802552c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80255fc:	463c      	mov	r4, r7
 80255fe:	e795      	b.n	802552c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025600:	2500      	movs	r5, #0
 8025602:	e7ac      	b.n	802555e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8025604:	2300      	movs	r3, #0
 8025606:	461d      	mov	r5, r3
 8025608:	e7bd      	b.n	8025586 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802560a:	4663      	mov	r3, ip
 802560c:	4665      	mov	r5, ip
 802560e:	e7ba      	b.n	8025586 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025610:	2300      	movs	r3, #0
 8025612:	e7b8      	b.n	8025586 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025614:	463b      	mov	r3, r7
 8025616:	e7b6      	b.n	8025586 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025618:	880d      	ldrh	r5, [r1, #0]
 802561a:	b29f      	uxth	r7, r3
 802561c:	122c      	asrs	r4, r5, #8
 802561e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8025622:	43db      	mvns	r3, r3
 8025624:	b2db      	uxtb	r3, r3
 8025626:	fb10 f007 	smulbb	r0, r0, r7
 802562a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802562e:	fb04 0403 	mla	r4, r4, r3, r0
 8025632:	b2f6      	uxtb	r6, r6
 8025634:	10e8      	asrs	r0, r5, #3
 8025636:	b2d2      	uxtb	r2, r2
 8025638:	00ed      	lsls	r5, r5, #3
 802563a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802563e:	fb12 f207 	smulbb	r2, r2, r7
 8025642:	fb16 f607 	smulbb	r6, r6, r7
 8025646:	b2ed      	uxtb	r5, r5
 8025648:	b2a4      	uxth	r4, r4
 802564a:	fb00 6603 	mla	r6, r0, r3, r6
 802564e:	fb05 2303 	mla	r3, r5, r3, r2
 8025652:	b29a      	uxth	r2, r3
 8025654:	1c63      	adds	r3, r4, #1
 8025656:	b2b0      	uxth	r0, r6
 8025658:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802565c:	1c53      	adds	r3, r2, #1
 802565e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025662:	1c42      	adds	r2, r0, #1
 8025664:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025668:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802566c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025670:	0940      	lsrs	r0, r0, #5
 8025672:	4323      	orrs	r3, r4
 8025674:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025678:	4303      	orrs	r3, r0
 802567a:	800b      	strh	r3, [r1, #0]
 802567c:	e7b5      	b.n	80255ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802567e:	bf00      	nop
 8025680:	20012db4 	.word	0x20012db4
 8025684:	00fff800 	.word	0x00fff800

08025688 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802568c:	b097      	sub	sp, #92	; 0x5c
 802568e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8025692:	9214      	str	r2, [sp, #80]	; 0x50
 8025694:	9309      	str	r3, [sp, #36]	; 0x24
 8025696:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025698:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802569c:	910d      	str	r1, [sp, #52]	; 0x34
 802569e:	930f      	str	r3, [sp, #60]	; 0x3c
 80256a0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80256a4:	9015      	str	r0, [sp, #84]	; 0x54
 80256a6:	6850      	ldr	r0, [r2, #4]
 80256a8:	6812      	ldr	r2, [r2, #0]
 80256aa:	fb00 1303 	mla	r3, r0, r3, r1
 80256ae:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80256b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80256b4:	689b      	ldr	r3, [r3, #8]
 80256b6:	3301      	adds	r3, #1
 80256b8:	f023 0301 	bic.w	r3, r3, #1
 80256bc:	930a      	str	r3, [sp, #40]	; 0x28
 80256be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80256c0:	681f      	ldr	r7, [r3, #0]
 80256c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80256c4:	2b00      	cmp	r3, #0
 80256c6:	dc03      	bgt.n	80256d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80256c8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80256ca:	2b00      	cmp	r3, #0
 80256cc:	f340 8287 	ble.w	8025bde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80256d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80256d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80256d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80256da:	1e48      	subs	r0, r1, #1
 80256dc:	f102 3cff 	add.w	ip, r2, #4294967295
 80256e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80256e2:	2b00      	cmp	r3, #0
 80256e4:	f340 80c4 	ble.w	8025870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80256e8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80256ec:	ea4f 4326 	mov.w	r3, r6, asr #16
 80256f0:	d406      	bmi.n	8025700 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80256f2:	4586      	cmp	lr, r0
 80256f4:	da04      	bge.n	8025700 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80256f6:	2b00      	cmp	r3, #0
 80256f8:	db02      	blt.n	8025700 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80256fa:	4563      	cmp	r3, ip
 80256fc:	f2c0 80b9 	blt.w	8025872 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025700:	f11e 0e01 	adds.w	lr, lr, #1
 8025704:	f100 80aa 	bmi.w	802585c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025708:	4571      	cmp	r1, lr
 802570a:	f2c0 80a7 	blt.w	802585c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802570e:	3301      	adds	r3, #1
 8025710:	f100 80a4 	bmi.w	802585c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025714:	429a      	cmp	r2, r3
 8025716:	f2c0 80a1 	blt.w	802585c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802571a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802571c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8025720:	930e      	str	r3, [sp, #56]	; 0x38
 8025722:	46c8      	mov	r8, r9
 8025724:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025726:	2b00      	cmp	r3, #0
 8025728:	f340 80c3 	ble.w	80258b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802572c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802572e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025732:	1423      	asrs	r3, r4, #16
 8025734:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025738:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802573c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025740:	f100 814d 	bmi.w	80259de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025744:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025748:	455b      	cmp	r3, fp
 802574a:	f280 8148 	bge.w	80259de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802574e:	2800      	cmp	r0, #0
 8025750:	f2c0 8145 	blt.w	80259de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025754:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025758:	4558      	cmp	r0, fp
 802575a:	f280 8140 	bge.w	80259de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802575e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025760:	fb00 3305 	mla	r3, r0, r5, r3
 8025764:	0858      	lsrs	r0, r3, #1
 8025766:	07dd      	lsls	r5, r3, #31
 8025768:	f817 c000 	ldrb.w	ip, [r7, r0]
 802576c:	bf54      	ite	pl
 802576e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025772:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025776:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802577a:	fa5f fc8c 	uxtb.w	ip, ip
 802577e:	2a00      	cmp	r2, #0
 8025780:	f000 80db 	beq.w	802593a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8025784:	1c58      	adds	r0, r3, #1
 8025786:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802578a:	07c0      	lsls	r0, r0, #31
 802578c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025790:	bf54      	ite	pl
 8025792:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025796:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802579a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802579e:	fa5f f08e 	uxtb.w	r0, lr
 80257a2:	9010      	str	r0, [sp, #64]	; 0x40
 80257a4:	b1c9      	cbz	r1, 80257da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80257a6:	4453      	add	r3, sl
 80257a8:	0858      	lsrs	r0, r3, #1
 80257aa:	07dd      	lsls	r5, r3, #31
 80257ac:	5c38      	ldrb	r0, [r7, r0]
 80257ae:	bf54      	ite	pl
 80257b0:	f000 000f 	andpl.w	r0, r0, #15
 80257b4:	1100      	asrmi	r0, r0, #4
 80257b6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80257ba:	3301      	adds	r3, #1
 80257bc:	b2c0      	uxtb	r0, r0
 80257be:	900b      	str	r0, [sp, #44]	; 0x2c
 80257c0:	0858      	lsrs	r0, r3, #1
 80257c2:	07dd      	lsls	r5, r3, #31
 80257c4:	f817 e000 	ldrb.w	lr, [r7, r0]
 80257c8:	bf54      	ite	pl
 80257ca:	f00e 030f 	andpl.w	r3, lr, #15
 80257ce:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80257d2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80257d6:	b2db      	uxtb	r3, r3
 80257d8:	9311      	str	r3, [sp, #68]	; 0x44
 80257da:	b292      	uxth	r2, r2
 80257dc:	b289      	uxth	r1, r1
 80257de:	fb02 f301 	mul.w	r3, r2, r1
 80257e2:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80257e6:	0112      	lsls	r2, r2, #4
 80257e8:	b289      	uxth	r1, r1
 80257ea:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80257ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80257f0:	1ad2      	subs	r2, r2, r3
 80257f2:	1a40      	subs	r0, r0, r1
 80257f4:	b292      	uxth	r2, r2
 80257f6:	436a      	muls	r2, r5
 80257f8:	b280      	uxth	r0, r0
 80257fa:	fb0c 2c00 	mla	ip, ip, r0, r2
 80257fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025800:	fb01 c102 	mla	r1, r1, r2, ip
 8025804:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025806:	fb03 1302 	mla	r3, r3, r2, r1
 802580a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802580e:	b1db      	cbz	r3, 8025848 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025810:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025812:	4353      	muls	r3, r2
 8025814:	1c5a      	adds	r2, r3, #1
 8025816:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802581a:	4ac6      	ldr	r2, [pc, #792]	; (8025b34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802581c:	121b      	asrs	r3, r3, #8
 802581e:	6812      	ldr	r2, [r2, #0]
 8025820:	2bff      	cmp	r3, #255	; 0xff
 8025822:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025826:	f040 8099 	bne.w	802595c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802582a:	0953      	lsrs	r3, r2, #5
 802582c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025830:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025834:	f02c 0c07 	bic.w	ip, ip, #7
 8025838:	ea43 0c0c 	orr.w	ip, r3, ip
 802583c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025840:	ea4c 0202 	orr.w	r2, ip, r2
 8025844:	f8a8 2000 	strh.w	r2, [r8]
 8025848:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802584a:	441c      	add	r4, r3
 802584c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802584e:	441e      	add	r6, r3
 8025850:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025852:	3b01      	subs	r3, #1
 8025854:	f108 0802 	add.w	r8, r8, #2
 8025858:	930e      	str	r3, [sp, #56]	; 0x38
 802585a:	e763      	b.n	8025724 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802585c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802585e:	441c      	add	r4, r3
 8025860:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025862:	441e      	add	r6, r3
 8025864:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025866:	3b01      	subs	r3, #1
 8025868:	9309      	str	r3, [sp, #36]	; 0x24
 802586a:	f109 0902 	add.w	r9, r9, #2
 802586e:	e737      	b.n	80256e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025870:	d024      	beq.n	80258bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025872:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025874:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025876:	3b01      	subs	r3, #1
 8025878:	fb00 4003 	mla	r0, r0, r3, r4
 802587c:	1400      	asrs	r0, r0, #16
 802587e:	f53f af4c 	bmi.w	802571a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025882:	3901      	subs	r1, #1
 8025884:	4288      	cmp	r0, r1
 8025886:	f6bf af48 	bge.w	802571a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802588a:	9924      	ldr	r1, [sp, #144]	; 0x90
 802588c:	fb01 6303 	mla	r3, r1, r3, r6
 8025890:	141b      	asrs	r3, r3, #16
 8025892:	f53f af42 	bmi.w	802571a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025896:	3a01      	subs	r2, #1
 8025898:	4293      	cmp	r3, r2
 802589a:	f6bf af3e 	bge.w	802571a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802589e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80258a2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80258a6:	930e      	str	r3, [sp, #56]	; 0x38
 80258a8:	46c8      	mov	r8, r9
 80258aa:	f1bb 0f00 	cmp.w	fp, #0
 80258ae:	f300 80b7 	bgt.w	8025a20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80258b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80258b4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80258b8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80258bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80258be:	2b00      	cmp	r3, #0
 80258c0:	f340 818d 	ble.w	8025bde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80258c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80258c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80258cc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80258d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80258d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80258d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80258da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80258de:	eef0 6a62 	vmov.f32	s13, s5
 80258e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80258e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80258ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 80258ee:	ee16 4a90 	vmov	r4, s13
 80258f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80258f6:	eef0 6a43 	vmov.f32	s13, s6
 80258fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80258fe:	ee12 2a90 	vmov	r2, s5
 8025902:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025906:	fb92 f3f3 	sdiv	r3, r2, r3
 802590a:	ee13 2a10 	vmov	r2, s6
 802590e:	9323      	str	r3, [sp, #140]	; 0x8c
 8025910:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025912:	fb92 f3f3 	sdiv	r3, r2, r3
 8025916:	9324      	str	r3, [sp, #144]	; 0x90
 8025918:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802591a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802591c:	3b01      	subs	r3, #1
 802591e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025922:	930d      	str	r3, [sp, #52]	; 0x34
 8025924:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025926:	bf08      	it	eq
 8025928:	4613      	moveq	r3, r2
 802592a:	ee16 6a90 	vmov	r6, s13
 802592e:	9309      	str	r3, [sp, #36]	; 0x24
 8025930:	eeb0 3a67 	vmov.f32	s6, s15
 8025934:	eef0 2a47 	vmov.f32	s5, s14
 8025938:	e6c3      	b.n	80256c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802593a:	2900      	cmp	r1, #0
 802593c:	f43f af4d 	beq.w	80257da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025940:	eb0a 0003 	add.w	r0, sl, r3
 8025944:	0843      	lsrs	r3, r0, #1
 8025946:	07c0      	lsls	r0, r0, #31
 8025948:	5cfb      	ldrb	r3, [r7, r3]
 802594a:	bf54      	ite	pl
 802594c:	f003 030f 	andpl.w	r3, r3, #15
 8025950:	111b      	asrmi	r3, r3, #4
 8025952:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025956:	b2db      	uxtb	r3, r3
 8025958:	930b      	str	r3, [sp, #44]	; 0x2c
 802595a:	e73e      	b.n	80257da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802595c:	f8b8 e000 	ldrh.w	lr, [r8]
 8025960:	fa1f fb83 	uxth.w	fp, r3
 8025964:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025968:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802596c:	43db      	mvns	r3, r3
 802596e:	b2db      	uxtb	r3, r3
 8025970:	fb11 f10b 	smulbb	r1, r1, fp
 8025974:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025978:	fb00 1003 	mla	r0, r0, r3, r1
 802597c:	fa5f fc8c 	uxtb.w	ip, ip
 8025980:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025984:	b2d2      	uxtb	r2, r2
 8025986:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802598a:	b280      	uxth	r0, r0
 802598c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025990:	fb1c fc0b 	smulbb	ip, ip, fp
 8025994:	fa5f fe8e 	uxtb.w	lr, lr
 8025998:	fb12 fb0b 	smulbb	fp, r2, fp
 802599c:	fb01 cc03 	mla	ip, r1, r3, ip
 80259a0:	fb0e bb03 	mla	fp, lr, r3, fp
 80259a4:	1c43      	adds	r3, r0, #1
 80259a6:	fa1f fc8c 	uxth.w	ip, ip
 80259aa:	fa1f fb8b 	uxth.w	fp, fp
 80259ae:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80259b2:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80259b6:	f10c 0101 	add.w	r1, ip, #1
 80259ba:	f10b 0001 	add.w	r0, fp, #1
 80259be:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80259c2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80259c6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80259ca:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80259ce:	4318      	orrs	r0, r3
 80259d0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80259d4:	ea40 000c 	orr.w	r0, r0, ip
 80259d8:	f8a8 0000 	strh.w	r0, [r8]
 80259dc:	e734      	b.n	8025848 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80259de:	f113 0b01 	adds.w	fp, r3, #1
 80259e2:	f53f af31 	bmi.w	8025848 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80259e6:	45dc      	cmp	ip, fp
 80259e8:	f6ff af2e 	blt.w	8025848 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80259ec:	f110 0b01 	adds.w	fp, r0, #1
 80259f0:	f53f af2a 	bmi.w	8025848 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80259f4:	45de      	cmp	lr, fp
 80259f6:	f6ff af27 	blt.w	8025848 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80259fa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80259fc:	9302      	str	r3, [sp, #8]
 80259fe:	fa0f f38e 	sxth.w	r3, lr
 8025a02:	9301      	str	r3, [sp, #4]
 8025a04:	fa0f f38c 	sxth.w	r3, ip
 8025a08:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025a0c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025a10:	9300      	str	r3, [sp, #0]
 8025a12:	463a      	mov	r2, r7
 8025a14:	4653      	mov	r3, sl
 8025a16:	4641      	mov	r1, r8
 8025a18:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025a1a:	f7ff fd4d 	bl	80254b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025a1e:	e713      	b.n	8025848 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025a20:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025a22:	1422      	asrs	r2, r4, #16
 8025a24:	1433      	asrs	r3, r6, #16
 8025a26:	fb05 2303 	mla	r3, r5, r3, r2
 8025a2a:	085a      	lsrs	r2, r3, #1
 8025a2c:	07dd      	lsls	r5, r3, #31
 8025a2e:	5cba      	ldrb	r2, [r7, r2]
 8025a30:	bf54      	ite	pl
 8025a32:	f002 020f 	andpl.w	r2, r2, #15
 8025a36:	1112      	asrmi	r2, r2, #4
 8025a38:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025a3c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025a40:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025a44:	b2d2      	uxtb	r2, r2
 8025a46:	2900      	cmp	r1, #0
 8025a48:	d076      	beq.n	8025b38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025a4a:	f103 0e01 	add.w	lr, r3, #1
 8025a4e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025a52:	f01e 0f01 	tst.w	lr, #1
 8025a56:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025a5a:	bf0c      	ite	eq
 8025a5c:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025a60:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025a64:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025a68:	fa5f f58c 	uxtb.w	r5, ip
 8025a6c:	9512      	str	r5, [sp, #72]	; 0x48
 8025a6e:	b300      	cbz	r0, 8025ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025a70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a72:	442b      	add	r3, r5
 8025a74:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025a78:	07dd      	lsls	r5, r3, #31
 8025a7a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025a7e:	bf54      	ite	pl
 8025a80:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025a84:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025a88:	3301      	adds	r3, #1
 8025a8a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025a8e:	fa5f f58c 	uxtb.w	r5, ip
 8025a92:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025a96:	950c      	str	r5, [sp, #48]	; 0x30
 8025a98:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025a9c:	07dd      	lsls	r5, r3, #31
 8025a9e:	bf54      	ite	pl
 8025aa0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025aa4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025aa8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025aac:	fa5f f38c 	uxtb.w	r3, ip
 8025ab0:	9313      	str	r3, [sp, #76]	; 0x4c
 8025ab2:	b289      	uxth	r1, r1
 8025ab4:	b280      	uxth	r0, r0
 8025ab6:	fb01 f300 	mul.w	r3, r1, r0
 8025aba:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025abe:	0109      	lsls	r1, r1, #4
 8025ac0:	b280      	uxth	r0, r0
 8025ac2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025ac6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025ac8:	1ac9      	subs	r1, r1, r3
 8025aca:	ebac 0c00 	sub.w	ip, ip, r0
 8025ace:	b289      	uxth	r1, r1
 8025ad0:	4369      	muls	r1, r5
 8025ad2:	fa1f fc8c 	uxth.w	ip, ip
 8025ad6:	fb02 120c 	mla	r2, r2, ip, r1
 8025ada:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025adc:	fb00 2001 	mla	r0, r0, r1, r2
 8025ae0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025ae2:	fb03 0302 	mla	r3, r3, r2, r0
 8025ae6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025aea:	b1d3      	cbz	r3, 8025b22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025aec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025aee:	4353      	muls	r3, r2
 8025af0:	1c5a      	adds	r2, r3, #1
 8025af2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025af6:	4a0f      	ldr	r2, [pc, #60]	; (8025b34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025af8:	121b      	asrs	r3, r3, #8
 8025afa:	6812      	ldr	r2, [r2, #0]
 8025afc:	2bff      	cmp	r3, #255	; 0xff
 8025afe:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025b02:	d12d      	bne.n	8025b60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025b04:	0953      	lsrs	r3, r2, #5
 8025b06:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025b0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025b0e:	f02c 0c07 	bic.w	ip, ip, #7
 8025b12:	ea43 0c0c 	orr.w	ip, r3, ip
 8025b16:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025b1a:	ea4c 0202 	orr.w	r2, ip, r2
 8025b1e:	f8a8 2000 	strh.w	r2, [r8]
 8025b22:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025b24:	441c      	add	r4, r3
 8025b26:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025b28:	f108 0802 	add.w	r8, r8, #2
 8025b2c:	441e      	add	r6, r3
 8025b2e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025b32:	e6ba      	b.n	80258aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025b34:	20012db4 	.word	0x20012db4
 8025b38:	2800      	cmp	r0, #0
 8025b3a:	d0ba      	beq.n	8025ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025b3c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b3e:	442b      	add	r3, r5
 8025b40:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025b44:	07db      	lsls	r3, r3, #31
 8025b46:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025b4a:	bf54      	ite	pl
 8025b4c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025b50:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025b54:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025b58:	fa5f f38c 	uxtb.w	r3, ip
 8025b5c:	930c      	str	r3, [sp, #48]	; 0x30
 8025b5e:	e7a8      	b.n	8025ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025b60:	f8b8 e000 	ldrh.w	lr, [r8]
 8025b64:	fa1f fa83 	uxth.w	sl, r3
 8025b68:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025b6c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025b70:	43db      	mvns	r3, r3
 8025b72:	b2db      	uxtb	r3, r3
 8025b74:	fb11 f10a 	smulbb	r1, r1, sl
 8025b78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025b7c:	fb00 1003 	mla	r0, r0, r3, r1
 8025b80:	b2d2      	uxtb	r2, r2
 8025b82:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025b86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025b8a:	fa5f fe8e 	uxtb.w	lr, lr
 8025b8e:	fb12 f20a 	smulbb	r2, r2, sl
 8025b92:	fb0e 2203 	mla	r2, lr, r3, r2
 8025b96:	fa5f fc8c 	uxtb.w	ip, ip
 8025b9a:	b280      	uxth	r0, r0
 8025b9c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025ba0:	b292      	uxth	r2, r2
 8025ba2:	fb1c fc0a 	smulbb	ip, ip, sl
 8025ba6:	fb01 cc03 	mla	ip, r1, r3, ip
 8025baa:	1c43      	adds	r3, r0, #1
 8025bac:	1c51      	adds	r1, r2, #1
 8025bae:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025bb2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025bb6:	fa1f fc8c 	uxth.w	ip, ip
 8025bba:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025bbe:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025bc2:	4308      	orrs	r0, r1
 8025bc4:	f10c 0101 	add.w	r1, ip, #1
 8025bc8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025bcc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025bd0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025bd4:	ea40 000c 	orr.w	r0, r0, ip
 8025bd8:	f8a8 0000 	strh.w	r0, [r8]
 8025bdc:	e7a1      	b.n	8025b22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025bde:	b017      	add	sp, #92	; 0x5c
 8025be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025be4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025be4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025be8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025bec:	2d00      	cmp	r5, #0
 8025bee:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025bf2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025bf6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025bfa:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025bfe:	fb05 0e03 	mla	lr, r5, r3, r0
 8025c02:	f2c0 80b0 	blt.w	8025d66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025c06:	45a9      	cmp	r9, r5
 8025c08:	f340 80ad 	ble.w	8025d66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025c0c:	2800      	cmp	r0, #0
 8025c0e:	f2c0 80a8 	blt.w	8025d62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025c12:	4580      	cmp	r8, r0
 8025c14:	f340 80a5 	ble.w	8025d62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025c18:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025c1c:	f01e 0f01 	tst.w	lr, #1
 8025c20:	5d16      	ldrb	r6, [r2, r4]
 8025c22:	bf0c      	ite	eq
 8025c24:	f006 060f 	andeq.w	r6, r6, #15
 8025c28:	1136      	asrne	r6, r6, #4
 8025c2a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025c2e:	b2f6      	uxtb	r6, r6
 8025c30:	1c44      	adds	r4, r0, #1
 8025c32:	f100 809b 	bmi.w	8025d6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025c36:	45a0      	cmp	r8, r4
 8025c38:	f340 8098 	ble.w	8025d6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025c3c:	2f00      	cmp	r7, #0
 8025c3e:	f000 8097 	beq.w	8025d70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025c42:	f10e 0a01 	add.w	sl, lr, #1
 8025c46:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025c4a:	f01a 0f01 	tst.w	sl, #1
 8025c4e:	5d14      	ldrb	r4, [r2, r4]
 8025c50:	bf0c      	ite	eq
 8025c52:	f004 040f 	andeq.w	r4, r4, #15
 8025c56:	1124      	asrne	r4, r4, #4
 8025c58:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025c5c:	b2e4      	uxtb	r4, r4
 8025c5e:	3501      	adds	r5, #1
 8025c60:	f100 808a 	bmi.w	8025d78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025c64:	45a9      	cmp	r9, r5
 8025c66:	f340 8087 	ble.w	8025d78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025c6a:	f1bc 0f00 	cmp.w	ip, #0
 8025c6e:	f000 8086 	beq.w	8025d7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025c72:	2800      	cmp	r0, #0
 8025c74:	db7e      	blt.n	8025d74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025c76:	4580      	cmp	r8, r0
 8025c78:	dd7c      	ble.n	8025d74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025c7a:	eb03 090e 	add.w	r9, r3, lr
 8025c7e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025c82:	f019 0f01 	tst.w	r9, #1
 8025c86:	5d55      	ldrb	r5, [r2, r5]
 8025c88:	bf0c      	ite	eq
 8025c8a:	f005 050f 	andeq.w	r5, r5, #15
 8025c8e:	112d      	asrne	r5, r5, #4
 8025c90:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025c94:	b2ed      	uxtb	r5, r5
 8025c96:	3001      	adds	r0, #1
 8025c98:	d474      	bmi.n	8025d84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025c9a:	4580      	cmp	r8, r0
 8025c9c:	dd72      	ble.n	8025d84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025c9e:	2f00      	cmp	r7, #0
 8025ca0:	d072      	beq.n	8025d88 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025ca2:	3301      	adds	r3, #1
 8025ca4:	449e      	add	lr, r3
 8025ca6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025caa:	f01e 0f01 	tst.w	lr, #1
 8025cae:	5cd0      	ldrb	r0, [r2, r3]
 8025cb0:	bf0c      	ite	eq
 8025cb2:	f000 000f 	andeq.w	r0, r0, #15
 8025cb6:	1100      	asrne	r0, r0, #4
 8025cb8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025cbc:	b2c3      	uxtb	r3, r0
 8025cbe:	b2ba      	uxth	r2, r7
 8025cc0:	fa1f fc8c 	uxth.w	ip, ip
 8025cc4:	fb02 f00c 	mul.w	r0, r2, ip
 8025cc8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025ccc:	0112      	lsls	r2, r2, #4
 8025cce:	fa1f fc8c 	uxth.w	ip, ip
 8025cd2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025cd6:	1a12      	subs	r2, r2, r0
 8025cd8:	eba7 070c 	sub.w	r7, r7, ip
 8025cdc:	b292      	uxth	r2, r2
 8025cde:	b2bf      	uxth	r7, r7
 8025ce0:	4362      	muls	r2, r4
 8025ce2:	fb06 2207 	mla	r2, r6, r7, r2
 8025ce6:	fb0c 2505 	mla	r5, ip, r5, r2
 8025cea:	fb00 5303 	mla	r3, r0, r3, r5
 8025cee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025cf2:	b3a3      	cbz	r3, 8025d5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025cf4:	4a25      	ldr	r2, [pc, #148]	; (8025d8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025cf6:	880e      	ldrh	r6, [r1, #0]
 8025cf8:	6815      	ldr	r5, [r2, #0]
 8025cfa:	1234      	asrs	r4, r6, #8
 8025cfc:	b29a      	uxth	r2, r3
 8025cfe:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025d02:	43db      	mvns	r3, r3
 8025d04:	b2db      	uxtb	r3, r3
 8025d06:	fb10 f002 	smulbb	r0, r0, r2
 8025d0a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025d0e:	fb04 0403 	mla	r4, r4, r3, r0
 8025d12:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025d16:	10f0      	asrs	r0, r6, #3
 8025d18:	b2ed      	uxtb	r5, r5
 8025d1a:	00f6      	lsls	r6, r6, #3
 8025d1c:	fb17 f702 	smulbb	r7, r7, r2
 8025d20:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025d24:	fb15 f202 	smulbb	r2, r5, r2
 8025d28:	b2f6      	uxtb	r6, r6
 8025d2a:	b2a4      	uxth	r4, r4
 8025d2c:	fb00 7003 	mla	r0, r0, r3, r7
 8025d30:	fb06 2303 	mla	r3, r6, r3, r2
 8025d34:	b29a      	uxth	r2, r3
 8025d36:	1c63      	adds	r3, r4, #1
 8025d38:	b280      	uxth	r0, r0
 8025d3a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025d3e:	1c53      	adds	r3, r2, #1
 8025d40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025d44:	1c42      	adds	r2, r0, #1
 8025d46:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025d4a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025d4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025d52:	0940      	lsrs	r0, r0, #5
 8025d54:	4323      	orrs	r3, r4
 8025d56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d5a:	4303      	orrs	r3, r0
 8025d5c:	800b      	strh	r3, [r1, #0]
 8025d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025d62:	2600      	movs	r6, #0
 8025d64:	e764      	b.n	8025c30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8025d66:	2400      	movs	r4, #0
 8025d68:	4626      	mov	r6, r4
 8025d6a:	e778      	b.n	8025c5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025d6c:	2400      	movs	r4, #0
 8025d6e:	e776      	b.n	8025c5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025d70:	463c      	mov	r4, r7
 8025d72:	e774      	b.n	8025c5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025d74:	2500      	movs	r5, #0
 8025d76:	e78e      	b.n	8025c96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025d78:	2300      	movs	r3, #0
 8025d7a:	461d      	mov	r5, r3
 8025d7c:	e79f      	b.n	8025cbe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025d7e:	4663      	mov	r3, ip
 8025d80:	4665      	mov	r5, ip
 8025d82:	e79c      	b.n	8025cbe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025d84:	2300      	movs	r3, #0
 8025d86:	e79a      	b.n	8025cbe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025d88:	463b      	mov	r3, r7
 8025d8a:	e798      	b.n	8025cbe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025d8c:	20012db4 	.word	0x20012db4

08025d90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025d94:	b093      	sub	sp, #76	; 0x4c
 8025d96:	461d      	mov	r5, r3
 8025d98:	920c      	str	r2, [sp, #48]	; 0x30
 8025d9a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025d9c:	9107      	str	r1, [sp, #28]
 8025d9e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025da2:	9011      	str	r0, [sp, #68]	; 0x44
 8025da4:	6850      	ldr	r0, [r2, #4]
 8025da6:	6812      	ldr	r2, [r2, #0]
 8025da8:	fb00 1303 	mla	r3, r0, r3, r1
 8025dac:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025db0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025db2:	689b      	ldr	r3, [r3, #8]
 8025db4:	3301      	adds	r3, #1
 8025db6:	f023 0301 	bic.w	r3, r3, #1
 8025dba:	9306      	str	r3, [sp, #24]
 8025dbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025dbe:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025dc2:	681f      	ldr	r7, [r3, #0]
 8025dc4:	9b07      	ldr	r3, [sp, #28]
 8025dc6:	2b00      	cmp	r3, #0
 8025dc8:	dc03      	bgt.n	8025dd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025dca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025dcc:	2b00      	cmp	r3, #0
 8025dce:	f340 8267 	ble.w	80262a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025dd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025dd4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025dd8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025ddc:	1e48      	subs	r0, r1, #1
 8025dde:	f102 3cff 	add.w	ip, r2, #4294967295
 8025de2:	2d00      	cmp	r5, #0
 8025de4:	f340 80b8 	ble.w	8025f58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025de8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025dec:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025df0:	d406      	bmi.n	8025e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025df2:	4586      	cmp	lr, r0
 8025df4:	da04      	bge.n	8025e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025df6:	2b00      	cmp	r3, #0
 8025df8:	db02      	blt.n	8025e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025dfa:	4563      	cmp	r3, ip
 8025dfc:	f2c0 80ad 	blt.w	8025f5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025e00:	f11e 0e01 	adds.w	lr, lr, #1
 8025e04:	f100 80a0 	bmi.w	8025f48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025e08:	4571      	cmp	r1, lr
 8025e0a:	f2c0 809d 	blt.w	8025f48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025e0e:	3301      	adds	r3, #1
 8025e10:	f100 809a 	bmi.w	8025f48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025e14:	429a      	cmp	r2, r3
 8025e16:	f2c0 8097 	blt.w	8025f48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025e1a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8025e1e:	9509      	str	r5, [sp, #36]	; 0x24
 8025e20:	46c8      	mov	r8, r9
 8025e22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e24:	2b00      	cmp	r3, #0
 8025e26:	f340 80b6 	ble.w	8025f96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8025e2a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8025e2e:	9308      	str	r3, [sp, #32]
 8025e30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e32:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025e36:	1423      	asrs	r3, r4, #16
 8025e38:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025e3c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025e40:	f100 813e 	bmi.w	80260c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025e44:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025e48:	455b      	cmp	r3, fp
 8025e4a:	f280 8139 	bge.w	80260c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025e4e:	2800      	cmp	r0, #0
 8025e50:	f2c0 8136 	blt.w	80260c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025e54:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025e58:	4558      	cmp	r0, fp
 8025e5a:	f280 8131 	bge.w	80260c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025e5e:	9a06      	ldr	r2, [sp, #24]
 8025e60:	fb00 3302 	mla	r3, r0, r2, r3
 8025e64:	0858      	lsrs	r0, r3, #1
 8025e66:	07da      	lsls	r2, r3, #31
 8025e68:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025e6c:	9a08      	ldr	r2, [sp, #32]
 8025e6e:	bf54      	ite	pl
 8025e70:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025e74:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025e78:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025e7c:	fa5f fc8c 	uxtb.w	ip, ip
 8025e80:	2a00      	cmp	r2, #0
 8025e82:	f000 80cb 	beq.w	802601c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8025e86:	1c58      	adds	r0, r3, #1
 8025e88:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025e8c:	07c0      	lsls	r0, r0, #31
 8025e8e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025e92:	bf54      	ite	pl
 8025e94:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025e98:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025e9c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025ea0:	fa5f fe8e 	uxtb.w	lr, lr
 8025ea4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025ea8:	b1b9      	cbz	r1, 8025eda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025eaa:	4453      	add	r3, sl
 8025eac:	0858      	lsrs	r0, r3, #1
 8025eae:	07da      	lsls	r2, r3, #31
 8025eb0:	5c38      	ldrb	r0, [r7, r0]
 8025eb2:	bf54      	ite	pl
 8025eb4:	f000 000f 	andpl.w	r0, r0, #15
 8025eb8:	1100      	asrmi	r0, r0, #4
 8025eba:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025ebe:	b2c0      	uxtb	r0, r0
 8025ec0:	900a      	str	r0, [sp, #40]	; 0x28
 8025ec2:	1c58      	adds	r0, r3, #1
 8025ec4:	0843      	lsrs	r3, r0, #1
 8025ec6:	07c2      	lsls	r2, r0, #31
 8025ec8:	5cfb      	ldrb	r3, [r7, r3]
 8025eca:	bf54      	ite	pl
 8025ecc:	f003 030f 	andpl.w	r3, r3, #15
 8025ed0:	111b      	asrmi	r3, r3, #4
 8025ed2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025ed6:	b2db      	uxtb	r3, r3
 8025ed8:	930e      	str	r3, [sp, #56]	; 0x38
 8025eda:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025ede:	b289      	uxth	r1, r1
 8025ee0:	fb02 f301 	mul.w	r3, r2, r1
 8025ee4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025ee8:	0112      	lsls	r2, r2, #4
 8025eea:	b289      	uxth	r1, r1
 8025eec:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025ef0:	1a40      	subs	r0, r0, r1
 8025ef2:	fa1f fe80 	uxth.w	lr, r0
 8025ef6:	1ad2      	subs	r2, r2, r3
 8025ef8:	980d      	ldr	r0, [sp, #52]	; 0x34
 8025efa:	b292      	uxth	r2, r2
 8025efc:	4342      	muls	r2, r0
 8025efe:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8025f02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025f04:	fb01 c102 	mla	r1, r1, r2, ip
 8025f08:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8025f0a:	fb03 1302 	mla	r3, r3, r2, r1
 8025f0e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025f12:	2bff      	cmp	r3, #255	; 0xff
 8025f14:	f040 8093 	bne.w	802603e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025f18:	4bbe      	ldr	r3, [pc, #760]	; (8026214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025f1a:	681a      	ldr	r2, [r3, #0]
 8025f1c:	4bbe      	ldr	r3, [pc, #760]	; (8026218 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025f1e:	0951      	lsrs	r1, r2, #5
 8025f20:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025f24:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025f28:	430b      	orrs	r3, r1
 8025f2a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025f2e:	4313      	orrs	r3, r2
 8025f30:	f8a8 3000 	strh.w	r3, [r8]
 8025f34:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025f36:	441c      	add	r4, r3
 8025f38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025f3a:	441e      	add	r6, r3
 8025f3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025f3e:	3b01      	subs	r3, #1
 8025f40:	f108 0802 	add.w	r8, r8, #2
 8025f44:	9309      	str	r3, [sp, #36]	; 0x24
 8025f46:	e76c      	b.n	8025e22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025f48:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025f4a:	441c      	add	r4, r3
 8025f4c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025f4e:	3d01      	subs	r5, #1
 8025f50:	441e      	add	r6, r3
 8025f52:	f109 0902 	add.w	r9, r9, #2
 8025f56:	e744      	b.n	8025de2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025f58:	d021      	beq.n	8025f9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8025f5a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8025f5c:	1e6b      	subs	r3, r5, #1
 8025f5e:	fb00 4003 	mla	r0, r0, r3, r4
 8025f62:	1400      	asrs	r0, r0, #16
 8025f64:	f53f af59 	bmi.w	8025e1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025f68:	3901      	subs	r1, #1
 8025f6a:	4288      	cmp	r0, r1
 8025f6c:	f6bf af55 	bge.w	8025e1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025f70:	9920      	ldr	r1, [sp, #128]	; 0x80
 8025f72:	fb01 6303 	mla	r3, r1, r3, r6
 8025f76:	141b      	asrs	r3, r3, #16
 8025f78:	f53f af4f 	bmi.w	8025e1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025f7c:	3a01      	subs	r2, #1
 8025f7e:	4293      	cmp	r3, r2
 8025f80:	f6bf af4b 	bge.w	8025e1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025f84:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025f88:	9308      	str	r3, [sp, #32]
 8025f8a:	46a8      	mov	r8, r5
 8025f8c:	46ce      	mov	lr, r9
 8025f8e:	f1b8 0f00 	cmp.w	r8, #0
 8025f92:	f300 80b5 	bgt.w	8026100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8025f96:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025f9a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025f9e:	9b07      	ldr	r3, [sp, #28]
 8025fa0:	2b00      	cmp	r3, #0
 8025fa2:	f340 817d 	ble.w	80262a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025fa6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025faa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025fae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025fb2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025fb4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025fb8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025fbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025fc0:	eef0 6a62 	vmov.f32	s13, s5
 8025fc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025fc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025fcc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025fd0:	ee16 4a90 	vmov	r4, s13
 8025fd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025fd8:	eef0 6a43 	vmov.f32	s13, s6
 8025fdc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025fe0:	ee12 2a90 	vmov	r2, s5
 8025fe4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025fe8:	fb92 f3f3 	sdiv	r3, r2, r3
 8025fec:	ee13 2a10 	vmov	r2, s6
 8025ff0:	931f      	str	r3, [sp, #124]	; 0x7c
 8025ff2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025ff4:	fb92 f3f3 	sdiv	r3, r2, r3
 8025ff8:	9320      	str	r3, [sp, #128]	; 0x80
 8025ffa:	9b07      	ldr	r3, [sp, #28]
 8025ffc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025ffe:	3b01      	subs	r3, #1
 8026000:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026004:	9307      	str	r3, [sp, #28]
 8026006:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026008:	ee16 6a90 	vmov	r6, s13
 802600c:	bf14      	ite	ne
 802600e:	461d      	movne	r5, r3
 8026010:	4615      	moveq	r5, r2
 8026012:	eeb0 3a67 	vmov.f32	s6, s15
 8026016:	eef0 2a47 	vmov.f32	s5, s14
 802601a:	e6d3      	b.n	8025dc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802601c:	2900      	cmp	r1, #0
 802601e:	f43f af5c 	beq.w	8025eda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026022:	eb0a 0003 	add.w	r0, sl, r3
 8026026:	0843      	lsrs	r3, r0, #1
 8026028:	07c0      	lsls	r0, r0, #31
 802602a:	5cfb      	ldrb	r3, [r7, r3]
 802602c:	bf54      	ite	pl
 802602e:	f003 030f 	andpl.w	r3, r3, #15
 8026032:	111b      	asrmi	r3, r3, #4
 8026034:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026038:	b2db      	uxtb	r3, r3
 802603a:	930a      	str	r3, [sp, #40]	; 0x28
 802603c:	e74d      	b.n	8025eda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802603e:	2b00      	cmp	r3, #0
 8026040:	f43f af78 	beq.w	8025f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026044:	4a73      	ldr	r2, [pc, #460]	; (8026214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026046:	f8b8 c000 	ldrh.w	ip, [r8]
 802604a:	6810      	ldr	r0, [r2, #0]
 802604c:	fa1f fe83 	uxth.w	lr, r3
 8026050:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026054:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026058:	43db      	mvns	r3, r3
 802605a:	b2db      	uxtb	r3, r3
 802605c:	fb12 f20e 	smulbb	r2, r2, lr
 8026060:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026064:	fb01 2103 	mla	r1, r1, r3, r2
 8026068:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802606c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026070:	b2c0      	uxtb	r0, r0
 8026072:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026076:	fb1b fb0e 	smulbb	fp, fp, lr
 802607a:	b289      	uxth	r1, r1
 802607c:	fb10 fe0e 	smulbb	lr, r0, lr
 8026080:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026084:	fa5f fc8c 	uxtb.w	ip, ip
 8026088:	fb02 b203 	mla	r2, r2, r3, fp
 802608c:	1c48      	adds	r0, r1, #1
 802608e:	fb0c e303 	mla	r3, ip, r3, lr
 8026092:	b292      	uxth	r2, r2
 8026094:	b29b      	uxth	r3, r3
 8026096:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802609a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802609e:	f102 0b01 	add.w	fp, r2, #1
 80260a2:	1c59      	adds	r1, r3, #1
 80260a4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80260a8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80260ac:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80260b0:	0952      	lsrs	r2, r2, #5
 80260b2:	4301      	orrs	r1, r0
 80260b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80260b8:	4311      	orrs	r1, r2
 80260ba:	f8a8 1000 	strh.w	r1, [r8]
 80260be:	e739      	b.n	8025f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80260c0:	f113 0b01 	adds.w	fp, r3, #1
 80260c4:	f53f af36 	bmi.w	8025f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80260c8:	45dc      	cmp	ip, fp
 80260ca:	f6ff af33 	blt.w	8025f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80260ce:	f110 0b01 	adds.w	fp, r0, #1
 80260d2:	f53f af2f 	bmi.w	8025f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80260d6:	45de      	cmp	lr, fp
 80260d8:	f6ff af2c 	blt.w	8025f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80260dc:	9a08      	ldr	r2, [sp, #32]
 80260de:	9302      	str	r3, [sp, #8]
 80260e0:	fa0f f38e 	sxth.w	r3, lr
 80260e4:	9301      	str	r3, [sp, #4]
 80260e6:	fa0f f38c 	sxth.w	r3, ip
 80260ea:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80260ee:	9105      	str	r1, [sp, #20]
 80260f0:	9300      	str	r3, [sp, #0]
 80260f2:	463a      	mov	r2, r7
 80260f4:	4653      	mov	r3, sl
 80260f6:	4641      	mov	r1, r8
 80260f8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80260fa:	f7ff fd73 	bl	8025be4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80260fe:	e719      	b.n	8025f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026100:	9906      	ldr	r1, [sp, #24]
 8026102:	1422      	asrs	r2, r4, #16
 8026104:	1433      	asrs	r3, r6, #16
 8026106:	fb01 2303 	mla	r3, r1, r3, r2
 802610a:	085a      	lsrs	r2, r3, #1
 802610c:	07d9      	lsls	r1, r3, #31
 802610e:	5cba      	ldrb	r2, [r7, r2]
 8026110:	bf54      	ite	pl
 8026112:	f002 020f 	andpl.w	r2, r2, #15
 8026116:	1112      	asrmi	r2, r2, #4
 8026118:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802611c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026120:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026124:	b2d2      	uxtb	r2, r2
 8026126:	2800      	cmp	r0, #0
 8026128:	d062      	beq.n	80261f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802612a:	f103 0a01 	add.w	sl, r3, #1
 802612e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8026132:	f01a 0f01 	tst.w	sl, #1
 8026136:	5c79      	ldrb	r1, [r7, r1]
 8026138:	bf0c      	ite	eq
 802613a:	f001 010f 	andeq.w	r1, r1, #15
 802613e:	1109      	asrne	r1, r1, #4
 8026140:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026144:	b2c9      	uxtb	r1, r1
 8026146:	910f      	str	r1, [sp, #60]	; 0x3c
 8026148:	f1bc 0f00 	cmp.w	ip, #0
 802614c:	d019      	beq.n	8026182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802614e:	9908      	ldr	r1, [sp, #32]
 8026150:	440b      	add	r3, r1
 8026152:	0859      	lsrs	r1, r3, #1
 8026154:	f013 0f01 	tst.w	r3, #1
 8026158:	5c79      	ldrb	r1, [r7, r1]
 802615a:	bf0c      	ite	eq
 802615c:	f001 010f 	andeq.w	r1, r1, #15
 8026160:	1109      	asrne	r1, r1, #4
 8026162:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026166:	b2c9      	uxtb	r1, r1
 8026168:	3301      	adds	r3, #1
 802616a:	910b      	str	r1, [sp, #44]	; 0x2c
 802616c:	0859      	lsrs	r1, r3, #1
 802616e:	07db      	lsls	r3, r3, #31
 8026170:	5c79      	ldrb	r1, [r7, r1]
 8026172:	bf54      	ite	pl
 8026174:	f001 010f 	andpl.w	r1, r1, #15
 8026178:	1109      	asrmi	r1, r1, #4
 802617a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802617e:	b2c9      	uxtb	r1, r1
 8026180:	9110      	str	r1, [sp, #64]	; 0x40
 8026182:	b280      	uxth	r0, r0
 8026184:	fa1f fc8c 	uxth.w	ip, ip
 8026188:	fb00 f30c 	mul.w	r3, r0, ip
 802618c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026190:	0100      	lsls	r0, r0, #4
 8026192:	fa1f fc8c 	uxth.w	ip, ip
 8026196:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802619a:	eba1 010c 	sub.w	r1, r1, ip
 802619e:	fa1f fa81 	uxth.w	sl, r1
 80261a2:	1ac0      	subs	r0, r0, r3
 80261a4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80261a6:	b280      	uxth	r0, r0
 80261a8:	4348      	muls	r0, r1
 80261aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80261ac:	fb02 020a 	mla	r2, r2, sl, r0
 80261b0:	fb0c 2c01 	mla	ip, ip, r1, r2
 80261b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80261b6:	fb03 c302 	mla	r3, r3, r2, ip
 80261ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80261be:	2bff      	cmp	r3, #255	; 0xff
 80261c0:	d12c      	bne.n	802621c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80261c2:	4b14      	ldr	r3, [pc, #80]	; (8026214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80261c4:	681a      	ldr	r2, [r3, #0]
 80261c6:	4b14      	ldr	r3, [pc, #80]	; (8026218 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80261c8:	0951      	lsrs	r1, r2, #5
 80261ca:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80261ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80261d2:	430b      	orrs	r3, r1
 80261d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80261d8:	4313      	orrs	r3, r2
 80261da:	f8ae 3000 	strh.w	r3, [lr]
 80261de:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80261e0:	441c      	add	r4, r3
 80261e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80261e4:	f10e 0e02 	add.w	lr, lr, #2
 80261e8:	441e      	add	r6, r3
 80261ea:	f108 38ff 	add.w	r8, r8, #4294967295
 80261ee:	e6ce      	b.n	8025f8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80261f0:	f1bc 0f00 	cmp.w	ip, #0
 80261f4:	d0c5      	beq.n	8026182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80261f6:	9908      	ldr	r1, [sp, #32]
 80261f8:	440b      	add	r3, r1
 80261fa:	0859      	lsrs	r1, r3, #1
 80261fc:	07db      	lsls	r3, r3, #31
 80261fe:	5c79      	ldrb	r1, [r7, r1]
 8026200:	bf54      	ite	pl
 8026202:	f001 010f 	andpl.w	r1, r1, #15
 8026206:	1109      	asrmi	r1, r1, #4
 8026208:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802620c:	b2c9      	uxtb	r1, r1
 802620e:	910b      	str	r1, [sp, #44]	; 0x2c
 8026210:	e7b7      	b.n	8026182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026212:	bf00      	nop
 8026214:	20012db4 	.word	0x20012db4
 8026218:	fffff800 	.word	0xfffff800
 802621c:	2b00      	cmp	r3, #0
 802621e:	d0de      	beq.n	80261de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026220:	4a21      	ldr	r2, [pc, #132]	; (80262a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8026222:	f8be c000 	ldrh.w	ip, [lr]
 8026226:	6810      	ldr	r0, [r2, #0]
 8026228:	fa1f fa83 	uxth.w	sl, r3
 802622c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026230:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026234:	43db      	mvns	r3, r3
 8026236:	b2db      	uxtb	r3, r3
 8026238:	fb12 f20a 	smulbb	r2, r2, sl
 802623c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026240:	fb01 2103 	mla	r1, r1, r3, r2
 8026244:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026248:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802624c:	b2c0      	uxtb	r0, r0
 802624e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026252:	fa5f fc8c 	uxtb.w	ip, ip
 8026256:	fb10 f00a 	smulbb	r0, r0, sl
 802625a:	fb0c 0003 	mla	r0, ip, r3, r0
 802625e:	b289      	uxth	r1, r1
 8026260:	fb1b fb0a 	smulbb	fp, fp, sl
 8026264:	b280      	uxth	r0, r0
 8026266:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802626a:	fb02 b203 	mla	r2, r2, r3, fp
 802626e:	1c4b      	adds	r3, r1, #1
 8026270:	f100 0b01 	add.w	fp, r0, #1
 8026274:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026278:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802627c:	b292      	uxth	r2, r2
 802627e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026282:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026286:	ea4b 0101 	orr.w	r1, fp, r1
 802628a:	f102 0b01 	add.w	fp, r2, #1
 802628e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026292:	0952      	lsrs	r2, r2, #5
 8026294:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026298:	4311      	orrs	r1, r2
 802629a:	f8ae 1000 	strh.w	r1, [lr]
 802629e:	e79e      	b.n	80261de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80262a0:	b013      	add	sp, #76	; 0x4c
 80262a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80262a6:	bf00      	nop
 80262a8:	20012db4 	.word	0x20012db4

080262ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80262ac:	b570      	push	{r4, r5, r6, lr}
 80262ae:	1208      	asrs	r0, r1, #8
 80262b0:	b29e      	uxth	r6, r3
 80262b2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80262b6:	1213      	asrs	r3, r2, #8
 80262b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80262bc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80262c0:	fb13 f305 	smulbb	r3, r3, r5
 80262c4:	fb10 f006 	smulbb	r0, r0, r6
 80262c8:	4418      	add	r0, r3
 80262ca:	10cc      	asrs	r4, r1, #3
 80262cc:	10d3      	asrs	r3, r2, #3
 80262ce:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80262d2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80262d6:	fb13 f305 	smulbb	r3, r3, r5
 80262da:	fb14 f406 	smulbb	r4, r4, r6
 80262de:	00c9      	lsls	r1, r1, #3
 80262e0:	00d2      	lsls	r2, r2, #3
 80262e2:	441c      	add	r4, r3
 80262e4:	b2d2      	uxtb	r2, r2
 80262e6:	b2cb      	uxtb	r3, r1
 80262e8:	fb12 f205 	smulbb	r2, r2, r5
 80262ec:	b280      	uxth	r0, r0
 80262ee:	fb13 f306 	smulbb	r3, r3, r6
 80262f2:	4413      	add	r3, r2
 80262f4:	1c42      	adds	r2, r0, #1
 80262f6:	b29b      	uxth	r3, r3
 80262f8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80262fc:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8026300:	1c58      	adds	r0, r3, #1
 8026302:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026306:	b2a4      	uxth	r4, r4
 8026308:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802630c:	4310      	orrs	r0, r2
 802630e:	1c62      	adds	r2, r4, #1
 8026310:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026314:	0964      	lsrs	r4, r4, #5
 8026316:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802631a:	4320      	orrs	r0, r4
 802631c:	bd70      	pop	{r4, r5, r6, pc}
	...

08026320 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8026320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026324:	b08f      	sub	sp, #60	; 0x3c
 8026326:	461c      	mov	r4, r3
 8026328:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802632c:	9004      	str	r0, [sp, #16]
 802632e:	460d      	mov	r5, r1
 8026330:	4616      	mov	r6, r2
 8026332:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026334:	2f00      	cmp	r7, #0
 8026336:	f000 80f6 	beq.w	8026526 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802633a:	6820      	ldr	r0, [r4, #0]
 802633c:	6861      	ldr	r1, [r4, #4]
 802633e:	aa0a      	add	r2, sp, #40	; 0x28
 8026340:	c203      	stmia	r2!, {r0, r1}
 8026342:	6818      	ldr	r0, [r3, #0]
 8026344:	6859      	ldr	r1, [r3, #4]
 8026346:	aa0c      	add	r2, sp, #48	; 0x30
 8026348:	c203      	stmia	r2!, {r0, r1}
 802634a:	a80a      	add	r0, sp, #40	; 0x28
 802634c:	f7ef fa9c 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026350:	4621      	mov	r1, r4
 8026352:	a80c      	add	r0, sp, #48	; 0x30
 8026354:	f7ef fadc 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026358:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802635c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026360:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026364:	f002 0301 	and.w	r3, r2, #1
 8026368:	9306      	str	r3, [sp, #24]
 802636a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802636e:	f003 0101 	and.w	r1, r3, #1
 8026372:	9105      	str	r1, [sp, #20]
 8026374:	9805      	ldr	r0, [sp, #20]
 8026376:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802637a:	4403      	add	r3, r0
 802637c:	fb01 2303 	mla	r3, r1, r3, r2
 8026380:	f04f 0802 	mov.w	r8, #2
 8026384:	fb93 f3f8 	sdiv	r3, r3, r8
 8026388:	441d      	add	r5, r3
 802638a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802638e:	441a      	add	r2, r3
 8026390:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026394:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026398:	4419      	add	r1, r3
 802639a:	4b64      	ldr	r3, [pc, #400]	; (802652c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802639c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80263a0:	6818      	ldr	r0, [r3, #0]
 80263a2:	6803      	ldr	r3, [r0, #0]
 80263a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80263a6:	4798      	blx	r3
 80263a8:	4a61      	ldr	r2, [pc, #388]	; (8026530 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80263aa:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80263ae:	8813      	ldrh	r3, [r2, #0]
 80263b0:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80263b4:	2fff      	cmp	r7, #255	; 0xff
 80263b6:	fb03 a404 	mla	r4, r3, r4, sl
 80263ba:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80263be:	f106 0604 	add.w	r6, r6, #4
 80263c2:	4611      	mov	r1, r2
 80263c4:	fb03 fb0b 	mul.w	fp, r3, fp
 80263c8:	d06b      	beq.n	80264a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80263ca:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80263ce:	9303      	str	r3, [sp, #12]
 80263d0:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80263d4:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80263d8:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80263dc:	9b07      	ldr	r3, [sp, #28]
 80263de:	42a3      	cmp	r3, r4
 80263e0:	f240 809c 	bls.w	802651c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80263e4:	9b06      	ldr	r3, [sp, #24]
 80263e6:	2b00      	cmp	r3, #0
 80263e8:	d039      	beq.n	802645e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80263ea:	782b      	ldrb	r3, [r5, #0]
 80263ec:	8822      	ldrh	r2, [r4, #0]
 80263ee:	9804      	ldr	r0, [sp, #16]
 80263f0:	f003 030f 	and.w	r3, r3, #15
 80263f4:	f105 0801 	add.w	r8, r5, #1
 80263f8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80263fc:	9b03      	ldr	r3, [sp, #12]
 80263fe:	9300      	str	r3, [sp, #0]
 8026400:	463b      	mov	r3, r7
 8026402:	f7ff ff53 	bl	80262ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026406:	f824 0b02 	strh.w	r0, [r4], #2
 802640a:	f109 3bff 	add.w	fp, r9, #4294967295
 802640e:	f1bb 0f01 	cmp.w	fp, #1
 8026412:	46a2      	mov	sl, r4
 8026414:	f104 0404 	add.w	r4, r4, #4
 8026418:	dd24      	ble.n	8026464 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802641a:	f898 3000 	ldrb.w	r3, [r8]
 802641e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026422:	9804      	ldr	r0, [sp, #16]
 8026424:	091b      	lsrs	r3, r3, #4
 8026426:	f1ab 0b02 	sub.w	fp, fp, #2
 802642a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802642e:	9b03      	ldr	r3, [sp, #12]
 8026430:	9300      	str	r3, [sp, #0]
 8026432:	463b      	mov	r3, r7
 8026434:	f7ff ff3a 	bl	80262ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026438:	f824 0c04 	strh.w	r0, [r4, #-4]
 802643c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8026440:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026444:	9804      	ldr	r0, [sp, #16]
 8026446:	f003 030f 	and.w	r3, r3, #15
 802644a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802644e:	9b03      	ldr	r3, [sp, #12]
 8026450:	9300      	str	r3, [sp, #0]
 8026452:	463b      	mov	r3, r7
 8026454:	f7ff ff2a 	bl	80262ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026458:	f824 0c02 	strh.w	r0, [r4, #-2]
 802645c:	e7d7      	b.n	802640e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802645e:	46a8      	mov	r8, r5
 8026460:	46cb      	mov	fp, r9
 8026462:	e7d4      	b.n	802640e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026464:	d10e      	bne.n	8026484 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8026466:	f898 3000 	ldrb.w	r3, [r8]
 802646a:	f8ba 2000 	ldrh.w	r2, [sl]
 802646e:	9804      	ldr	r0, [sp, #16]
 8026470:	091b      	lsrs	r3, r3, #4
 8026472:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026476:	9b03      	ldr	r3, [sp, #12]
 8026478:	9300      	str	r3, [sp, #0]
 802647a:	463b      	mov	r3, r7
 802647c:	f7ff ff16 	bl	80262ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026480:	f82a 0b02 	strh.w	r0, [sl], #2
 8026484:	9b08      	ldr	r3, [sp, #32]
 8026486:	9a05      	ldr	r2, [sp, #20]
 8026488:	881c      	ldrh	r4, [r3, #0]
 802648a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802648e:	eba4 0409 	sub.w	r4, r4, r9
 8026492:	4413      	add	r3, r2
 8026494:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8026498:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802649a:	fb93 f3f2 	sdiv	r3, r3, r2
 802649e:	441d      	add	r5, r3
 80264a0:	e79c      	b.n	80263dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80264a2:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80264a6:	45a3      	cmp	fp, r4
 80264a8:	d938      	bls.n	802651c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80264aa:	9b06      	ldr	r3, [sp, #24]
 80264ac:	b1f3      	cbz	r3, 80264ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80264ae:	782b      	ldrb	r3, [r5, #0]
 80264b0:	f003 030f 	and.w	r3, r3, #15
 80264b4:	1c6a      	adds	r2, r5, #1
 80264b6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80264ba:	8023      	strh	r3, [r4, #0]
 80264bc:	f109 30ff 	add.w	r0, r9, #4294967295
 80264c0:	3402      	adds	r4, #2
 80264c2:	2801      	cmp	r0, #1
 80264c4:	4623      	mov	r3, r4
 80264c6:	f104 0404 	add.w	r4, r4, #4
 80264ca:	dd12      	ble.n	80264f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80264cc:	7813      	ldrb	r3, [r2, #0]
 80264ce:	091b      	lsrs	r3, r3, #4
 80264d0:	3802      	subs	r0, #2
 80264d2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80264d6:	f824 3c04 	strh.w	r3, [r4, #-4]
 80264da:	f812 3b01 	ldrb.w	r3, [r2], #1
 80264de:	f003 030f 	and.w	r3, r3, #15
 80264e2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80264e6:	f824 3c02 	strh.w	r3, [r4, #-2]
 80264ea:	e7ea      	b.n	80264c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80264ec:	462a      	mov	r2, r5
 80264ee:	4648      	mov	r0, r9
 80264f0:	e7e7      	b.n	80264c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80264f2:	d106      	bne.n	8026502 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80264f4:	7812      	ldrb	r2, [r2, #0]
 80264f6:	0912      	lsrs	r2, r2, #4
 80264f8:	3302      	adds	r3, #2
 80264fa:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80264fe:	f823 2c02 	strh.w	r2, [r3, #-2]
 8026502:	880c      	ldrh	r4, [r1, #0]
 8026504:	9a05      	ldr	r2, [sp, #20]
 8026506:	eba4 0409 	sub.w	r4, r4, r9
 802650a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802650e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026512:	4413      	add	r3, r2
 8026514:	fb93 f3f8 	sdiv	r3, r3, r8
 8026518:	441d      	add	r5, r3
 802651a:	e7c4      	b.n	80264a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 802651c:	4b03      	ldr	r3, [pc, #12]	; (802652c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802651e:	6818      	ldr	r0, [r3, #0]
 8026520:	6803      	ldr	r3, [r0, #0]
 8026522:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026524:	4798      	blx	r3
 8026526:	b00f      	add	sp, #60	; 0x3c
 8026528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802652c:	20012da4 	.word	0x20012da4
 8026530:	20012d9e 	.word	0x20012d9e

08026534 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8026534:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026536:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802653a:	2dff      	cmp	r5, #255	; 0xff
 802653c:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8026540:	d10c      	bne.n	802655c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026542:	2bff      	cmp	r3, #255	; 0xff
 8026544:	d10a      	bne.n	802655c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026546:	4b25      	ldr	r3, [pc, #148]	; (80265dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8026548:	0948      	lsrs	r0, r1, #5
 802654a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802654e:	403b      	ands	r3, r7
 8026550:	4318      	orrs	r0, r3
 8026552:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026556:	4308      	orrs	r0, r1
 8026558:	b280      	uxth	r0, r0
 802655a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802655c:	fb15 f503 	smulbb	r5, r5, r3
 8026560:	b2ab      	uxth	r3, r5
 8026562:	1c5d      	adds	r5, r3, #1
 8026564:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8026568:	1214      	asrs	r4, r2, #8
 802656a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802656e:	fa1f fc85 	uxth.w	ip, r5
 8026572:	10d6      	asrs	r6, r2, #3
 8026574:	00d0      	lsls	r0, r2, #3
 8026576:	43ed      	mvns	r5, r5
 8026578:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802657c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8026580:	b2eb      	uxtb	r3, r5
 8026582:	b2c0      	uxtb	r0, r0
 8026584:	fb12 f20c 	smulbb	r2, r2, ip
 8026588:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802658c:	fb04 2403 	mla	r4, r4, r3, r2
 8026590:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026594:	b2c8      	uxtb	r0, r1
 8026596:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802659a:	b2fd      	uxtb	r5, r7
 802659c:	fb10 f00c 	smulbb	r0, r0, ip
 80265a0:	b2a4      	uxth	r4, r4
 80265a2:	fb02 0003 	mla	r0, r2, r3, r0
 80265a6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80265aa:	fb15 f50c 	smulbb	r5, r5, ip
 80265ae:	fb06 5503 	mla	r5, r6, r3, r5
 80265b2:	b283      	uxth	r3, r0
 80265b4:	1c60      	adds	r0, r4, #1
 80265b6:	b2ad      	uxth	r5, r5
 80265b8:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80265bc:	1c58      	adds	r0, r3, #1
 80265be:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80265c2:	1c6b      	adds	r3, r5, #1
 80265c4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80265c8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80265cc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80265d0:	096d      	lsrs	r5, r5, #5
 80265d2:	4320      	orrs	r0, r4
 80265d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80265d8:	4328      	orrs	r0, r5
 80265da:	e7be      	b.n	802655a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80265dc:	00fff800 	.word	0x00fff800

080265e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80265e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80265e4:	461c      	mov	r4, r3
 80265e6:	b08d      	sub	sp, #52	; 0x34
 80265e8:	460d      	mov	r5, r1
 80265ea:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80265ec:	6861      	ldr	r1, [r4, #4]
 80265ee:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80265f2:	4680      	mov	r8, r0
 80265f4:	6820      	ldr	r0, [r4, #0]
 80265f6:	4616      	mov	r6, r2
 80265f8:	aa08      	add	r2, sp, #32
 80265fa:	c203      	stmia	r2!, {r0, r1}
 80265fc:	6818      	ldr	r0, [r3, #0]
 80265fe:	6859      	ldr	r1, [r3, #4]
 8026600:	aa0a      	add	r2, sp, #40	; 0x28
 8026602:	c203      	stmia	r2!, {r0, r1}
 8026604:	a808      	add	r0, sp, #32
 8026606:	f7ef f93f 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802660a:	4621      	mov	r1, r4
 802660c:	a80a      	add	r0, sp, #40	; 0x28
 802660e:	f7ef f97f 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026612:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8026616:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 802661a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802661e:	f002 0301 	and.w	r3, r2, #1
 8026622:	9303      	str	r3, [sp, #12]
 8026624:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026628:	f003 0101 	and.w	r1, r3, #1
 802662c:	9102      	str	r1, [sp, #8]
 802662e:	9802      	ldr	r0, [sp, #8]
 8026630:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8026634:	4403      	add	r3, r0
 8026636:	fb01 2303 	mla	r3, r1, r3, r2
 802663a:	f04f 0a02 	mov.w	sl, #2
 802663e:	fb93 f3fa 	sdiv	r3, r3, sl
 8026642:	441d      	add	r5, r3
 8026644:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8026648:	441a      	add	r2, r3
 802664a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802664e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8026652:	4a3f      	ldr	r2, [pc, #252]	; (8026750 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8026654:	9205      	str	r2, [sp, #20]
 8026656:	4419      	add	r1, r3
 8026658:	6810      	ldr	r0, [r2, #0]
 802665a:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802665e:	6803      	ldr	r3, [r0, #0]
 8026660:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026662:	4798      	blx	r3
 8026664:	4b3b      	ldr	r3, [pc, #236]	; (8026754 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8026666:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 802666a:	8819      	ldrh	r1, [r3, #0]
 802666c:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8026670:	fb01 c404 	mla	r4, r1, r4, ip
 8026674:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026678:	434f      	muls	r7, r1
 802667a:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802667e:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8026682:	3604      	adds	r6, #4
 8026684:	9204      	str	r2, [sp, #16]
 8026686:	9b04      	ldr	r3, [sp, #16]
 8026688:	429c      	cmp	r4, r3
 802668a:	d258      	bcs.n	802673e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802668c:	9b03      	ldr	r3, [sp, #12]
 802668e:	2b00      	cmp	r3, #0
 8026690:	d034      	beq.n	80266fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8026692:	782b      	ldrb	r3, [r5, #0]
 8026694:	f003 030f 	and.w	r3, r3, #15
 8026698:	1c6f      	adds	r7, r5, #1
 802669a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802669e:	0e0b      	lsrs	r3, r1, #24
 80266a0:	d006      	beq.n	80266b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80266a2:	8822      	ldrh	r2, [r4, #0]
 80266a4:	9300      	str	r3, [sp, #0]
 80266a6:	4640      	mov	r0, r8
 80266a8:	464b      	mov	r3, r9
 80266aa:	f7ff ff43 	bl	8026534 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80266ae:	8020      	strh	r0, [r4, #0]
 80266b0:	3402      	adds	r4, #2
 80266b2:	f10b 3aff 	add.w	sl, fp, #4294967295
 80266b6:	f1ba 0f01 	cmp.w	sl, #1
 80266ba:	dd22      	ble.n	8026702 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80266bc:	783b      	ldrb	r3, [r7, #0]
 80266be:	091b      	lsrs	r3, r3, #4
 80266c0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80266c4:	0e0b      	lsrs	r3, r1, #24
 80266c6:	d006      	beq.n	80266d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80266c8:	8822      	ldrh	r2, [r4, #0]
 80266ca:	9300      	str	r3, [sp, #0]
 80266cc:	4640      	mov	r0, r8
 80266ce:	464b      	mov	r3, r9
 80266d0:	f7ff ff30 	bl	8026534 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80266d4:	8020      	strh	r0, [r4, #0]
 80266d6:	f817 3b01 	ldrb.w	r3, [r7], #1
 80266da:	f003 030f 	and.w	r3, r3, #15
 80266de:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80266e2:	0e0b      	lsrs	r3, r1, #24
 80266e4:	d006      	beq.n	80266f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80266e6:	8862      	ldrh	r2, [r4, #2]
 80266e8:	9300      	str	r3, [sp, #0]
 80266ea:	4640      	mov	r0, r8
 80266ec:	464b      	mov	r3, r9
 80266ee:	f7ff ff21 	bl	8026534 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80266f2:	8060      	strh	r0, [r4, #2]
 80266f4:	3404      	adds	r4, #4
 80266f6:	f1aa 0a02 	sub.w	sl, sl, #2
 80266fa:	e7dc      	b.n	80266b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80266fc:	462f      	mov	r7, r5
 80266fe:	46da      	mov	sl, fp
 8026700:	e7d9      	b.n	80266b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026702:	d10d      	bne.n	8026720 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8026704:	783b      	ldrb	r3, [r7, #0]
 8026706:	091b      	lsrs	r3, r3, #4
 8026708:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802670c:	0e0b      	lsrs	r3, r1, #24
 802670e:	d006      	beq.n	802671e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8026710:	8822      	ldrh	r2, [r4, #0]
 8026712:	9300      	str	r3, [sp, #0]
 8026714:	4640      	mov	r0, r8
 8026716:	464b      	mov	r3, r9
 8026718:	f7ff ff0c 	bl	8026534 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802671c:	8020      	strh	r0, [r4, #0]
 802671e:	3402      	adds	r4, #2
 8026720:	9b06      	ldr	r3, [sp, #24]
 8026722:	9a02      	ldr	r2, [sp, #8]
 8026724:	881b      	ldrh	r3, [r3, #0]
 8026726:	eba3 030b 	sub.w	r3, r3, fp
 802672a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802672e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026732:	4413      	add	r3, r2
 8026734:	9a07      	ldr	r2, [sp, #28]
 8026736:	fb93 f3f2 	sdiv	r3, r3, r2
 802673a:	441d      	add	r5, r3
 802673c:	e7a3      	b.n	8026686 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802673e:	9b05      	ldr	r3, [sp, #20]
 8026740:	6818      	ldr	r0, [r3, #0]
 8026742:	6803      	ldr	r3, [r0, #0]
 8026744:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026746:	4798      	blx	r3
 8026748:	b00d      	add	sp, #52	; 0x34
 802674a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802674e:	bf00      	nop
 8026750:	20012da4 	.word	0x20012da4
 8026754:	20012d9e 	.word	0x20012d9e

08026758 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8026758:	b570      	push	{r4, r5, r6, lr}
 802675a:	1214      	asrs	r4, r2, #8
 802675c:	788d      	ldrb	r5, [r1, #2]
 802675e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8026762:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026766:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802676a:	fb15 f503 	smulbb	r5, r5, r3
 802676e:	fb04 5506 	mla	r5, r4, r6, r5
 8026772:	10d0      	asrs	r0, r2, #3
 8026774:	784c      	ldrb	r4, [r1, #1]
 8026776:	7809      	ldrb	r1, [r1, #0]
 8026778:	00d2      	lsls	r2, r2, #3
 802677a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802677e:	b2d2      	uxtb	r2, r2
 8026780:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8026784:	fb14 f403 	smulbb	r4, r4, r3
 8026788:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802678c:	fb11 f303 	smulbb	r3, r1, r3
 8026790:	fb00 4406 	mla	r4, r0, r6, r4
 8026794:	fb02 3306 	mla	r3, r2, r6, r3
 8026798:	b2ad      	uxth	r5, r5
 802679a:	b29b      	uxth	r3, r3
 802679c:	b2a4      	uxth	r4, r4
 802679e:	1c68      	adds	r0, r5, #1
 80267a0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80267a4:	1c62      	adds	r2, r4, #1
 80267a6:	1c58      	adds	r0, r3, #1
 80267a8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80267ac:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80267b0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80267b4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80267b8:	0964      	lsrs	r4, r4, #5
 80267ba:	4328      	orrs	r0, r5
 80267bc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80267c0:	4320      	orrs	r0, r4
 80267c2:	bd70      	pop	{r4, r5, r6, pc}

080267c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80267c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80267c8:	b08f      	sub	sp, #60	; 0x3c
 80267ca:	461c      	mov	r4, r3
 80267cc:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80267d0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80267d2:	4682      	mov	sl, r0
 80267d4:	460e      	mov	r6, r1
 80267d6:	4615      	mov	r5, r2
 80267d8:	2f00      	cmp	r7, #0
 80267da:	f000 8142 	beq.w	8026a62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80267de:	6820      	ldr	r0, [r4, #0]
 80267e0:	6861      	ldr	r1, [r4, #4]
 80267e2:	aa0a      	add	r2, sp, #40	; 0x28
 80267e4:	c203      	stmia	r2!, {r0, r1}
 80267e6:	6818      	ldr	r0, [r3, #0]
 80267e8:	6859      	ldr	r1, [r3, #4]
 80267ea:	aa0c      	add	r2, sp, #48	; 0x30
 80267ec:	c203      	stmia	r2!, {r0, r1}
 80267ee:	a80a      	add	r0, sp, #40	; 0x28
 80267f0:	f7ef f84a 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80267f4:	4621      	mov	r1, r4
 80267f6:	a80c      	add	r0, sp, #48	; 0x30
 80267f8:	f7ef f88a 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80267fc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026800:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026804:	f002 0301 	and.w	r3, r2, #1
 8026808:	9306      	str	r3, [sp, #24]
 802680a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802680e:	f003 0101 	and.w	r1, r3, #1
 8026812:	9105      	str	r1, [sp, #20]
 8026814:	9805      	ldr	r0, [sp, #20]
 8026816:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802681a:	4403      	add	r3, r0
 802681c:	fb01 2303 	mla	r3, r1, r3, r2
 8026820:	f04f 0802 	mov.w	r8, #2
 8026824:	fb93 f3f8 	sdiv	r3, r3, r8
 8026828:	441e      	add	r6, r3
 802682a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802682e:	441a      	add	r2, r3
 8026830:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026834:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026838:	4419      	add	r1, r3
 802683a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802683e:	9303      	str	r3, [sp, #12]
 8026840:	4b89      	ldr	r3, [pc, #548]	; (8026a68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026842:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026846:	6818      	ldr	r0, [r3, #0]
 8026848:	6803      	ldr	r3, [r0, #0]
 802684a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802684c:	4798      	blx	r3
 802684e:	4a87      	ldr	r2, [pc, #540]	; (8026a6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8026850:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026854:	8813      	ldrh	r3, [r2, #0]
 8026856:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 802685a:	2fff      	cmp	r7, #255	; 0xff
 802685c:	fb03 9404 	mla	r4, r3, r4, r9
 8026860:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026864:	f105 0504 	add.w	r5, r5, #4
 8026868:	4694      	mov	ip, r2
 802686a:	fb03 f30b 	mul.w	r3, r3, fp
 802686e:	d071      	beq.n	8026954 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026870:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026874:	43f9      	mvns	r1, r7
 8026876:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802687a:	b2c9      	uxtb	r1, r1
 802687c:	9104      	str	r1, [sp, #16]
 802687e:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026882:	9b07      	ldr	r3, [sp, #28]
 8026884:	42a3      	cmp	r3, r4
 8026886:	f240 80e7 	bls.w	8026a58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802688a:	9b06      	ldr	r3, [sp, #24]
 802688c:	2b00      	cmp	r3, #0
 802688e:	d03d      	beq.n	802690c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8026890:	7831      	ldrb	r1, [r6, #0]
 8026892:	9b04      	ldr	r3, [sp, #16]
 8026894:	8822      	ldrh	r2, [r4, #0]
 8026896:	9300      	str	r3, [sp, #0]
 8026898:	f001 010f 	and.w	r1, r1, #15
 802689c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80268a0:	463b      	mov	r3, r7
 80268a2:	4429      	add	r1, r5
 80268a4:	4650      	mov	r0, sl
 80268a6:	f7ff ff57 	bl	8026758 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80268aa:	9b03      	ldr	r3, [sp, #12]
 80268ac:	f824 0b02 	strh.w	r0, [r4], #2
 80268b0:	f106 0801 	add.w	r8, r6, #1
 80268b4:	f103 3bff 	add.w	fp, r3, #4294967295
 80268b8:	f1bb 0f01 	cmp.w	fp, #1
 80268bc:	46a1      	mov	r9, r4
 80268be:	f104 0404 	add.w	r4, r4, #4
 80268c2:	dd27      	ble.n	8026914 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80268c4:	f898 1000 	ldrb.w	r1, [r8]
 80268c8:	9b04      	ldr	r3, [sp, #16]
 80268ca:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80268ce:	9300      	str	r3, [sp, #0]
 80268d0:	0909      	lsrs	r1, r1, #4
 80268d2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80268d6:	463b      	mov	r3, r7
 80268d8:	4429      	add	r1, r5
 80268da:	4650      	mov	r0, sl
 80268dc:	f7ff ff3c 	bl	8026758 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80268e0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80268e4:	f818 1b01 	ldrb.w	r1, [r8], #1
 80268e8:	9b04      	ldr	r3, [sp, #16]
 80268ea:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80268ee:	9300      	str	r3, [sp, #0]
 80268f0:	f001 010f 	and.w	r1, r1, #15
 80268f4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80268f8:	463b      	mov	r3, r7
 80268fa:	4429      	add	r1, r5
 80268fc:	4650      	mov	r0, sl
 80268fe:	f7ff ff2b 	bl	8026758 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026902:	f1ab 0b02 	sub.w	fp, fp, #2
 8026906:	f824 0c02 	strh.w	r0, [r4, #-2]
 802690a:	e7d5      	b.n	80268b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802690c:	46b0      	mov	r8, r6
 802690e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8026912:	e7d1      	b.n	80268b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026914:	d10f      	bne.n	8026936 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8026916:	f898 1000 	ldrb.w	r1, [r8]
 802691a:	9b04      	ldr	r3, [sp, #16]
 802691c:	f8b9 2000 	ldrh.w	r2, [r9]
 8026920:	9300      	str	r3, [sp, #0]
 8026922:	0909      	lsrs	r1, r1, #4
 8026924:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026928:	463b      	mov	r3, r7
 802692a:	4429      	add	r1, r5
 802692c:	4650      	mov	r0, sl
 802692e:	f7ff ff13 	bl	8026758 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026932:	f829 0b02 	strh.w	r0, [r9], #2
 8026936:	9b08      	ldr	r3, [sp, #32]
 8026938:	9a05      	ldr	r2, [sp, #20]
 802693a:	881c      	ldrh	r4, [r3, #0]
 802693c:	9b03      	ldr	r3, [sp, #12]
 802693e:	1ae4      	subs	r4, r4, r3
 8026940:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026944:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026948:	4413      	add	r3, r2
 802694a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802694c:	fb93 f3f2 	sdiv	r3, r3, r2
 8026950:	441e      	add	r6, r3
 8026952:	e796      	b.n	8026882 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026954:	4f46      	ldr	r7, [pc, #280]	; (8026a70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026956:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802695a:	42a3      	cmp	r3, r4
 802695c:	d97c      	bls.n	8026a58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802695e:	9a06      	ldr	r2, [sp, #24]
 8026960:	2a00      	cmp	r2, #0
 8026962:	d054      	beq.n	8026a0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8026964:	7830      	ldrb	r0, [r6, #0]
 8026966:	f000 000f 	and.w	r0, r0, #15
 802696a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802696e:	eb05 0e00 	add.w	lr, r5, r0
 8026972:	5c28      	ldrb	r0, [r5, r0]
 8026974:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026978:	f89e e001 	ldrb.w	lr, [lr, #1]
 802697c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026980:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026984:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026988:	ea42 020e 	orr.w	r2, r2, lr
 802698c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026990:	f824 2b02 	strh.w	r2, [r4], #2
 8026994:	9a03      	ldr	r2, [sp, #12]
 8026996:	1c71      	adds	r1, r6, #1
 8026998:	f102 3eff 	add.w	lr, r2, #4294967295
 802699c:	f1be 0f01 	cmp.w	lr, #1
 80269a0:	4620      	mov	r0, r4
 80269a2:	f104 0404 	add.w	r4, r4, #4
 80269a6:	dd36      	ble.n	8026a16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80269a8:	7808      	ldrb	r0, [r1, #0]
 80269aa:	0900      	lsrs	r0, r0, #4
 80269ac:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80269b0:	eb05 0a00 	add.w	sl, r5, r0
 80269b4:	f1ae 0e02 	sub.w	lr, lr, #2
 80269b8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80269bc:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80269c0:	00d2      	lsls	r2, r2, #3
 80269c2:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80269c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80269ca:	ea49 0202 	orr.w	r2, r9, r2
 80269ce:	f815 9000 	ldrb.w	r9, [r5, r0]
 80269d2:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80269d6:	f824 2c04 	strh.w	r2, [r4, #-4]
 80269da:	f811 0b01 	ldrb.w	r0, [r1], #1
 80269de:	f000 000f 	and.w	r0, r0, #15
 80269e2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80269e6:	eb05 0a00 	add.w	sl, r5, r0
 80269ea:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80269ee:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80269f2:	00d2      	lsls	r2, r2, #3
 80269f4:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80269f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80269fc:	ea49 0202 	orr.w	r2, r9, r2
 8026a00:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026a04:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026a08:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026a0c:	e7c6      	b.n	802699c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026a0e:	4631      	mov	r1, r6
 8026a10:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026a14:	e7c2      	b.n	802699c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026a16:	d111      	bne.n	8026a3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026a18:	7809      	ldrb	r1, [r1, #0]
 8026a1a:	0909      	lsrs	r1, r1, #4
 8026a1c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026a20:	186c      	adds	r4, r5, r1
 8026a22:	5c69      	ldrb	r1, [r5, r1]
 8026a24:	78a2      	ldrb	r2, [r4, #2]
 8026a26:	7864      	ldrb	r4, [r4, #1]
 8026a28:	00e4      	lsls	r4, r4, #3
 8026a2a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026a2e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026a32:	4322      	orrs	r2, r4
 8026a34:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026a38:	f820 2b02 	strh.w	r2, [r0], #2
 8026a3c:	9a03      	ldr	r2, [sp, #12]
 8026a3e:	f8bc 4000 	ldrh.w	r4, [ip]
 8026a42:	9905      	ldr	r1, [sp, #20]
 8026a44:	1aa4      	subs	r4, r4, r2
 8026a46:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8026a4a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026a4e:	440a      	add	r2, r1
 8026a50:	fb92 f2f8 	sdiv	r2, r2, r8
 8026a54:	4416      	add	r6, r2
 8026a56:	e780      	b.n	802695a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026a58:	4b03      	ldr	r3, [pc, #12]	; (8026a68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026a5a:	6818      	ldr	r0, [r3, #0]
 8026a5c:	6803      	ldr	r3, [r0, #0]
 8026a5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026a60:	4798      	blx	r3
 8026a62:	b00f      	add	sp, #60	; 0x3c
 8026a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026a68:	20012da4 	.word	0x20012da4
 8026a6c:	20012d9e 	.word	0x20012d9e
 8026a70:	fffff800 	.word	0xfffff800

08026a74 <CRC_Lock>:
 8026a74:	b530      	push	{r4, r5, lr}
 8026a76:	4a20      	ldr	r2, [pc, #128]	; (8026af8 <CRC_Lock+0x84>)
 8026a78:	6813      	ldr	r3, [r2, #0]
 8026a7a:	f023 0301 	bic.w	r3, r3, #1
 8026a7e:	6013      	str	r3, [r2, #0]
 8026a80:	4b1e      	ldr	r3, [pc, #120]	; (8026afc <CRC_Lock+0x88>)
 8026a82:	681a      	ldr	r2, [r3, #0]
 8026a84:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026a88:	4022      	ands	r2, r4
 8026a8a:	f24c 2540 	movw	r5, #49728	; 0xc240
 8026a8e:	42aa      	cmp	r2, r5
 8026a90:	d005      	beq.n	8026a9e <CRC_Lock+0x2a>
 8026a92:	681b      	ldr	r3, [r3, #0]
 8026a94:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026a98:	4023      	ands	r3, r4
 8026a9a:	4293      	cmp	r3, r2
 8026a9c:	d124      	bne.n	8026ae8 <CRC_Lock+0x74>
 8026a9e:	4b18      	ldr	r3, [pc, #96]	; (8026b00 <CRC_Lock+0x8c>)
 8026aa0:	681b      	ldr	r3, [r3, #0]
 8026aa2:	bb0b      	cbnz	r3, 8026ae8 <CRC_Lock+0x74>
 8026aa4:	4b17      	ldr	r3, [pc, #92]	; (8026b04 <CRC_Lock+0x90>)
 8026aa6:	681a      	ldr	r2, [r3, #0]
 8026aa8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026aac:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026ab0:	d00d      	beq.n	8026ace <CRC_Lock+0x5a>
 8026ab2:	681a      	ldr	r2, [r3, #0]
 8026ab4:	f240 4483 	movw	r4, #1155	; 0x483
 8026ab8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026abc:	42a2      	cmp	r2, r4
 8026abe:	d006      	beq.n	8026ace <CRC_Lock+0x5a>
 8026ac0:	681b      	ldr	r3, [r3, #0]
 8026ac2:	f240 4285 	movw	r2, #1157	; 0x485
 8026ac6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026aca:	4293      	cmp	r3, r2
 8026acc:	d10c      	bne.n	8026ae8 <CRC_Lock+0x74>
 8026ace:	4b0e      	ldr	r3, [pc, #56]	; (8026b08 <CRC_Lock+0x94>)
 8026ad0:	2201      	movs	r2, #1
 8026ad2:	601a      	str	r2, [r3, #0]
 8026ad4:	681a      	ldr	r2, [r3, #0]
 8026ad6:	2a00      	cmp	r2, #0
 8026ad8:	d1fc      	bne.n	8026ad4 <CRC_Lock+0x60>
 8026ada:	4b0c      	ldr	r3, [pc, #48]	; (8026b0c <CRC_Lock+0x98>)
 8026adc:	6018      	str	r0, [r3, #0]
 8026ade:	6818      	ldr	r0, [r3, #0]
 8026ae0:	1a43      	subs	r3, r0, r1
 8026ae2:	4258      	negs	r0, r3
 8026ae4:	4158      	adcs	r0, r3
 8026ae6:	bd30      	pop	{r4, r5, pc}
 8026ae8:	4b09      	ldr	r3, [pc, #36]	; (8026b10 <CRC_Lock+0x9c>)
 8026aea:	2201      	movs	r2, #1
 8026aec:	601a      	str	r2, [r3, #0]
 8026aee:	681a      	ldr	r2, [r3, #0]
 8026af0:	2a00      	cmp	r2, #0
 8026af2:	d1fc      	bne.n	8026aee <CRC_Lock+0x7a>
 8026af4:	4b07      	ldr	r3, [pc, #28]	; (8026b14 <CRC_Lock+0xa0>)
 8026af6:	e7f1      	b.n	8026adc <CRC_Lock+0x68>
 8026af8:	e0002000 	.word	0xe0002000
 8026afc:	e000ed00 	.word	0xe000ed00
 8026b00:	e0042000 	.word	0xe0042000
 8026b04:	5c001000 	.word	0x5c001000
 8026b08:	58024c08 	.word	0x58024c08
 8026b0c:	58024c00 	.word	0x58024c00
 8026b10:	40023008 	.word	0x40023008
 8026b14:	40023000 	.word	0x40023000

08026b18 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026b18:	6101      	str	r1, [r0, #16]
 8026b1a:	4770      	bx	lr

08026b1c <_ZN8touchgfx8Gestures4tickEv>:
 8026b1c:	7b83      	ldrb	r3, [r0, #14]
 8026b1e:	b14b      	cbz	r3, 8026b34 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026b20:	8903      	ldrh	r3, [r0, #8]
 8026b22:	3301      	adds	r3, #1
 8026b24:	b29b      	uxth	r3, r3
 8026b26:	2b07      	cmp	r3, #7
 8026b28:	8103      	strh	r3, [r0, #8]
 8026b2a:	bf81      	itttt	hi
 8026b2c:	2300      	movhi	r3, #0
 8026b2e:	8143      	strhhi	r3, [r0, #10]
 8026b30:	8183      	strhhi	r3, [r0, #12]
 8026b32:	7383      	strbhi	r3, [r0, #14]
 8026b34:	4770      	bx	lr
	...

08026b38 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026b38:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026b3c:	4698      	mov	r8, r3
 8026b3e:	8883      	ldrh	r3, [r0, #4]
 8026b40:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026b44:	eba8 0303 	sub.w	r3, r8, r3
 8026b48:	b21b      	sxth	r3, r3
 8026b4a:	4604      	mov	r4, r0
 8026b4c:	2b00      	cmp	r3, #0
 8026b4e:	4617      	mov	r7, r2
 8026b50:	4a18      	ldr	r2, [pc, #96]	; (8026bb4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026b52:	9200      	str	r2, [sp, #0]
 8026b54:	bfb8      	it	lt
 8026b56:	425b      	neglt	r3, r3
 8026b58:	8aa2      	ldrh	r2, [r4, #20]
 8026b5a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026b5e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026b62:	b21b      	sxth	r3, r3
 8026b64:	460e      	mov	r6, r1
 8026b66:	4293      	cmp	r3, r2
 8026b68:	88c1      	ldrh	r1, [r0, #6]
 8026b6a:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026b6e:	f04f 0000 	mov.w	r0, #0
 8026b72:	f88d 0004 	strb.w	r0, [sp, #4]
 8026b76:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026b7a:	dc07      	bgt.n	8026b8c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026b7c:	1a69      	subs	r1, r5, r1
 8026b7e:	b209      	sxth	r1, r1
 8026b80:	2900      	cmp	r1, #0
 8026b82:	bfb8      	it	lt
 8026b84:	4249      	neglt	r1, r1
 8026b86:	b209      	sxth	r1, r1
 8026b88:	428a      	cmp	r2, r1
 8026b8a:	da10      	bge.n	8026bae <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026b8c:	6920      	ldr	r0, [r4, #16]
 8026b8e:	6803      	ldr	r3, [r0, #0]
 8026b90:	4669      	mov	r1, sp
 8026b92:	685b      	ldr	r3, [r3, #4]
 8026b94:	4798      	blx	r3
 8026b96:	eba8 0606 	sub.w	r6, r8, r6
 8026b9a:	2300      	movs	r3, #0
 8026b9c:	1bef      	subs	r7, r5, r7
 8026b9e:	2001      	movs	r0, #1
 8026ba0:	8123      	strh	r3, [r4, #8]
 8026ba2:	8166      	strh	r6, [r4, #10]
 8026ba4:	81a7      	strh	r7, [r4, #12]
 8026ba6:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026baa:	80e5      	strh	r5, [r4, #6]
 8026bac:	73a0      	strb	r0, [r4, #14]
 8026bae:	b004      	add	sp, #16
 8026bb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026bb4:	0802f3e8 	.word	0x0802f3e8

08026bb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026bb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026bba:	461e      	mov	r6, r3
 8026bbc:	1e4b      	subs	r3, r1, #1
 8026bbe:	2b01      	cmp	r3, #1
 8026bc0:	b085      	sub	sp, #20
 8026bc2:	4604      	mov	r4, r0
 8026bc4:	460d      	mov	r5, r1
 8026bc6:	4617      	mov	r7, r2
 8026bc8:	d84b      	bhi.n	8026c62 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026bca:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026bce:	1cd3      	adds	r3, r2, #3
 8026bd0:	b29b      	uxth	r3, r3
 8026bd2:	2b06      	cmp	r3, #6
 8026bd4:	d916      	bls.n	8026c04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026bd6:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026c78 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026bda:	f8cd c004 	str.w	ip, [sp, #4]
 8026bde:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026be2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026be6:	6900      	ldr	r0, [r0, #16]
 8026be8:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026bec:	f04f 0c00 	mov.w	ip, #0
 8026bf0:	f88d c008 	strb.w	ip, [sp, #8]
 8026bf4:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026bf8:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026bfc:	6803      	ldr	r3, [r0, #0]
 8026bfe:	a901      	add	r1, sp, #4
 8026c00:	689b      	ldr	r3, [r3, #8]
 8026c02:	4798      	blx	r3
 8026c04:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026c08:	1cd3      	adds	r3, r2, #3
 8026c0a:	b29b      	uxth	r3, r3
 8026c0c:	2b06      	cmp	r3, #6
 8026c0e:	d916      	bls.n	8026c3e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026c10:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026c78 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026c14:	f8cd c004 	str.w	ip, [sp, #4]
 8026c18:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026c1c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026c20:	6920      	ldr	r0, [r4, #16]
 8026c22:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026c26:	f04f 0c01 	mov.w	ip, #1
 8026c2a:	f88d c008 	strb.w	ip, [sp, #8]
 8026c2e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026c32:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026c36:	6803      	ldr	r3, [r0, #0]
 8026c38:	a901      	add	r1, sp, #4
 8026c3a:	689b      	ldr	r3, [r3, #8]
 8026c3c:	4798      	blx	r3
 8026c3e:	4b0d      	ldr	r3, [pc, #52]	; (8026c74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026c40:	9301      	str	r3, [sp, #4]
 8026c42:	6920      	ldr	r0, [r4, #16]
 8026c44:	f88d 5008 	strb.w	r5, [sp, #8]
 8026c48:	2300      	movs	r3, #0
 8026c4a:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026c4e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026c52:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026c56:	6803      	ldr	r3, [r0, #0]
 8026c58:	a901      	add	r1, sp, #4
 8026c5a:	681b      	ldr	r3, [r3, #0]
 8026c5c:	4798      	blx	r3
 8026c5e:	b005      	add	sp, #20
 8026c60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026c62:	2900      	cmp	r1, #0
 8026c64:	d1eb      	bne.n	8026c3e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026c66:	80a2      	strh	r2, [r4, #4]
 8026c68:	80c6      	strh	r6, [r0, #6]
 8026c6a:	60a1      	str	r1, [r4, #8]
 8026c6c:	81a1      	strh	r1, [r4, #12]
 8026c6e:	73a1      	strb	r1, [r4, #14]
 8026c70:	e7e5      	b.n	8026c3e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026c72:	bf00      	nop
 8026c74:	0802f3d4 	.word	0x0802f3d4
 8026c78:	0802f3fc 	.word	0x0802f3fc

08026c7c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8026c7c:	10c9      	asrs	r1, r1, #3
 8026c7e:	2900      	cmp	r1, #0
 8026c80:	bfb8      	it	lt
 8026c82:	4249      	neglt	r1, r1
 8026c84:	2801      	cmp	r0, #1
 8026c86:	d108      	bne.n	8026c9a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026c88:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026c8c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026c90:	4601      	mov	r1, r0
 8026c92:	dd02      	ble.n	8026c9a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026c94:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026c98:	4770      	bx	lr
 8026c9a:	29ff      	cmp	r1, #255	; 0xff
 8026c9c:	bfa8      	it	ge
 8026c9e:	21ff      	movge	r1, #255	; 0xff
 8026ca0:	4608      	mov	r0, r1
 8026ca2:	4770      	bx	lr

08026ca4 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026ca4:	b410      	push	{r4}
 8026ca6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026caa:	429c      	cmp	r4, r3
 8026cac:	d803      	bhi.n	8026cb6 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026cae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026cb2:	f7ed b8ef 	b.w	8013e94 <_ZN8touchgfx7Outline6lineToEii>
 8026cb6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026cba:	4770      	bx	lr

08026cbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026cc0:	b08b      	sub	sp, #44	; 0x2c
 8026cc2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026cc6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8026cca:	9308      	str	r3, [sp, #32]
 8026ccc:	4606      	mov	r6, r0
 8026cce:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026cd2:	9309      	str	r3, [sp, #36]	; 0x24
 8026cd4:	468a      	mov	sl, r1
 8026cd6:	f7ed fa4a 	bl	801416e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026cda:	68b5      	ldr	r5, [r6, #8]
 8026cdc:	4604      	mov	r4, r0
 8026cde:	2d00      	cmp	r5, #0
 8026ce0:	d044      	beq.n	8026d6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026ce2:	6873      	ldr	r3, [r6, #4]
 8026ce4:	42ab      	cmp	r3, r5
 8026ce6:	d33d      	bcc.n	8026d64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026ce8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8026cec:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026cf0:	eb02 0b03 	add.w	fp, r2, r3
 8026cf4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026cf8:	fb02 1203 	mla	r2, r2, r3, r1
 8026cfc:	9205      	str	r2, [sp, #20]
 8026cfe:	1e6a      	subs	r2, r5, #1
 8026d00:	9204      	str	r2, [sp, #16]
 8026d02:	f04f 0800 	mov.w	r8, #0
 8026d06:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8026d0a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026d0e:	454b      	cmp	r3, r9
 8026d10:	463a      	mov	r2, r7
 8026d12:	d008      	beq.n	8026d26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026d14:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026d18:	eb03 0b09 	add.w	fp, r3, r9
 8026d1c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026d20:	fb03 1309 	mla	r3, r3, r9, r1
 8026d24:	9305      	str	r3, [sp, #20]
 8026d26:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8026d2a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8026d2e:	4498      	add	r8, r3
 8026d30:	9b04      	ldr	r3, [sp, #16]
 8026d32:	3b01      	subs	r3, #1
 8026d34:	9304      	str	r3, [sp, #16]
 8026d36:	9b04      	ldr	r3, [sp, #16]
 8026d38:	3301      	adds	r3, #1
 8026d3a:	d015      	beq.n	8026d68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8026d3c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026d40:	42bb      	cmp	r3, r7
 8026d42:	d117      	bne.n	8026d74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026d44:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026d48:	9b04      	ldr	r3, [sp, #16]
 8026d4a:	4548      	cmp	r0, r9
 8026d4c:	f103 33ff 	add.w	r3, r3, #4294967295
 8026d50:	d17f      	bne.n	8026e52 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026d52:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026d56:	4401      	add	r1, r0
 8026d58:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026d5c:	4480      	add	r8, r0
 8026d5e:	e7e9      	b.n	8026d34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026d60:	461f      	mov	r7, r3
 8026d62:	e044      	b.n	8026dee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8026d64:	2000      	movs	r0, #0
 8026d66:	e002      	b.n	8026d6e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026d68:	2900      	cmp	r1, #0
 8026d6a:	d16f      	bne.n	8026e4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026d6c:	2001      	movs	r0, #1
 8026d6e:	b00b      	add	sp, #44	; 0x2c
 8026d70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026d74:	2900      	cmp	r1, #0
 8026d76:	d030      	beq.n	8026dda <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026d78:	2f00      	cmp	r7, #0
 8026d7a:	db29      	blt.n	8026dd0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026d7c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026d80:	42bb      	cmp	r3, r7
 8026d82:	dd25      	ble.n	8026dd0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026d84:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026d88:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026d8c:	f7ff ff76 	bl	8026c7c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026d90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026d92:	fb10 f003 	smulbb	r0, r0, r3
 8026d96:	b280      	uxth	r0, r0
 8026d98:	1c41      	adds	r1, r0, #1
 8026d9a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026d9e:	1209      	asrs	r1, r1, #8
 8026da0:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026da4:	d014      	beq.n	8026dd0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026da6:	9808      	ldr	r0, [sp, #32]
 8026da8:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026daa:	b2c9      	uxtb	r1, r1
 8026dac:	b2ba      	uxth	r2, r7
 8026dae:	9102      	str	r1, [sp, #8]
 8026db0:	2101      	movs	r1, #1
 8026db2:	4413      	add	r3, r2
 8026db4:	9101      	str	r1, [sp, #4]
 8026db6:	4402      	add	r2, r0
 8026db8:	fa0f f18b 	sxth.w	r1, fp
 8026dbc:	f8da 0000 	ldr.w	r0, [sl]
 8026dc0:	9100      	str	r1, [sp, #0]
 8026dc2:	6941      	ldr	r1, [r0, #20]
 8026dc4:	b21b      	sxth	r3, r3
 8026dc6:	460d      	mov	r5, r1
 8026dc8:	b212      	sxth	r2, r2
 8026dca:	9905      	ldr	r1, [sp, #20]
 8026dcc:	4650      	mov	r0, sl
 8026dce:	47a8      	blx	r5
 8026dd0:	9b04      	ldr	r3, [sp, #16]
 8026dd2:	3301      	adds	r3, #1
 8026dd4:	f107 0201 	add.w	r2, r7, #1
 8026dd8:	d0c8      	beq.n	8026d6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026dda:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026dde:	1abb      	subs	r3, r7, r2
 8026de0:	2b00      	cmp	r3, #0
 8026de2:	dd31      	ble.n	8026e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026de4:	2a00      	cmp	r2, #0
 8026de6:	dabb      	bge.n	8026d60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026de8:	2f00      	cmp	r7, #0
 8026dea:	dd2d      	ble.n	8026e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026dec:	2200      	movs	r2, #0
 8026dee:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026df2:	19d1      	adds	r1, r2, r7
 8026df4:	4299      	cmp	r1, r3
 8026df6:	db02      	blt.n	8026dfe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026df8:	1a9f      	subs	r7, r3, r2
 8026dfa:	2f00      	cmp	r7, #0
 8026dfc:	dd24      	ble.n	8026e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026dfe:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026e02:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026e06:	f7ff ff39 	bl	8026c7c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026e0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026e0c:	fb10 f003 	smulbb	r0, r0, r3
 8026e10:	b280      	uxth	r0, r0
 8026e12:	1c41      	adds	r1, r0, #1
 8026e14:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026e18:	1209      	asrs	r1, r1, #8
 8026e1a:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026e1e:	d013      	beq.n	8026e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026e20:	9808      	ldr	r0, [sp, #32]
 8026e22:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026e24:	b292      	uxth	r2, r2
 8026e26:	b2c9      	uxtb	r1, r1
 8026e28:	4413      	add	r3, r2
 8026e2a:	9102      	str	r1, [sp, #8]
 8026e2c:	4402      	add	r2, r0
 8026e2e:	b23f      	sxth	r7, r7
 8026e30:	f8da 0000 	ldr.w	r0, [sl]
 8026e34:	9701      	str	r7, [sp, #4]
 8026e36:	fa0f f18b 	sxth.w	r1, fp
 8026e3a:	9100      	str	r1, [sp, #0]
 8026e3c:	6947      	ldr	r7, [r0, #20]
 8026e3e:	9905      	ldr	r1, [sp, #20]
 8026e40:	b21b      	sxth	r3, r3
 8026e42:	b212      	sxth	r2, r2
 8026e44:	4650      	mov	r0, sl
 8026e46:	47b8      	blx	r7
 8026e48:	464b      	mov	r3, r9
 8026e4a:	e75c      	b.n	8026d06 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8026e4c:	2f00      	cmp	r7, #0
 8026e4e:	da95      	bge.n	8026d7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8026e50:	e78c      	b.n	8026d6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026e52:	2900      	cmp	r1, #0
 8026e54:	d0f8      	beq.n	8026e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026e56:	e78f      	b.n	8026d78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026e58 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026e58:	4b4b      	ldr	r3, [pc, #300]	; (8026f88 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8026e5a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8026e5e:	2500      	movs	r5, #0
 8026e60:	f100 0620 	add.w	r6, r0, #32
 8026e64:	4604      	mov	r4, r0
 8026e66:	e9c0 3100 	strd	r3, r1, [r0]
 8026e6a:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8026e6e:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8026e72:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8026e76:	f100 0718 	add.w	r7, r0, #24
 8026e7a:	4630      	mov	r0, r6
 8026e7c:	4690      	mov	r8, r2
 8026e7e:	f7ec fb41 	bl	8013504 <_ZN8touchgfx7OutlineC1Ev>
 8026e82:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8026e86:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8026e8a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8026e8e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8026e92:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8026e96:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8026e9a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8026e9e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8026ea2:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8026ea6:	f9b8 2000 	ldrsh.w	r2, [r8]
 8026eaa:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8026eae:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8026eb2:	9500      	str	r5, [sp, #0]
 8026eb4:	4410      	add	r0, r2
 8026eb6:	b280      	uxth	r0, r0
 8026eb8:	fa0f fa80 	sxth.w	sl, r0
 8026ebc:	45aa      	cmp	sl, r5
 8026ebe:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026ec2:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026ec6:	dd5c      	ble.n	8026f82 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026ec8:	4591      	cmp	r9, r2
 8026eca:	dd5a      	ble.n	8026f82 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026ecc:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026ed0:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8026ed4:	440b      	add	r3, r1
 8026ed6:	b29b      	uxth	r3, r3
 8026ed8:	b21d      	sxth	r5, r3
 8026eda:	2d00      	cmp	r5, #0
 8026edc:	dd51      	ble.n	8026f82 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026ede:	458e      	cmp	lr, r1
 8026ee0:	dd4f      	ble.n	8026f82 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026ee2:	45d1      	cmp	r9, sl
 8026ee4:	bfb8      	it	lt
 8026ee6:	fa1f f089 	uxthlt.w	r0, r9
 8026eea:	45ae      	cmp	lr, r5
 8026eec:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8026ef0:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8026ef4:	bfb8      	it	lt
 8026ef6:	fa1f f38e 	uxthlt.w	r3, lr
 8026efa:	1a80      	subs	r0, r0, r2
 8026efc:	1a5b      	subs	r3, r3, r1
 8026efe:	f8ad 0004 	strh.w	r0, [sp, #4]
 8026f02:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026f06:	f8ad 2000 	strh.w	r2, [sp]
 8026f0a:	f8ad 1002 	strh.w	r1, [sp, #2]
 8026f0e:	466d      	mov	r5, sp
 8026f10:	e895 0003 	ldmia.w	r5, {r0, r1}
 8026f14:	e887 0003 	stmia.w	r7, {r0, r1}
 8026f18:	f8dc 3000 	ldr.w	r3, [ip]
 8026f1c:	4660      	mov	r0, ip
 8026f1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026f20:	4639      	mov	r1, r7
 8026f22:	4798      	blx	r3
 8026f24:	6861      	ldr	r1, [r4, #4]
 8026f26:	4628      	mov	r0, r5
 8026f28:	3104      	adds	r1, #4
 8026f2a:	f7ee fcf1 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026f2e:	4638      	mov	r0, r7
 8026f30:	f7ee fcaa 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026f34:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026f38:	f8bd 2000 	ldrh.w	r2, [sp]
 8026f3c:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8026f40:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8026f44:	4630      	mov	r0, r6
 8026f46:	f7ec fac1 	bl	80134cc <_ZN8touchgfx7Outline5resetEv>
 8026f4a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8026f4e:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8026f52:	015b      	lsls	r3, r3, #5
 8026f54:	60a3      	str	r3, [r4, #8]
 8026f56:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026f5a:	015b      	lsls	r3, r3, #5
 8026f5c:	60e3      	str	r3, [r4, #12]
 8026f5e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8026f62:	015b      	lsls	r3, r3, #5
 8026f64:	6123      	str	r3, [r4, #16]
 8026f66:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8026f6a:	015b      	lsls	r3, r3, #5
 8026f6c:	6163      	str	r3, [r4, #20]
 8026f6e:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8026f72:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8026f76:	4620      	mov	r0, r4
 8026f78:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8026f7c:	b002      	add	sp, #8
 8026f7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026f82:	2300      	movs	r3, #0
 8026f84:	9301      	str	r3, [sp, #4]
 8026f86:	e7c2      	b.n	8026f0e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8026f88:	0802f720 	.word	0x0802f720

08026f8c <_ZN8touchgfx6Canvas5closeEv>:
 8026f8c:	b538      	push	{r3, r4, r5, lr}
 8026f8e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026f92:	4604      	mov	r4, r0
 8026f94:	b193      	cbz	r3, 8026fbc <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026f96:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8026f9a:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8026f9e:	4213      	tst	r3, r2
 8026fa0:	d10c      	bne.n	8026fbc <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026fa2:	f100 0520 	add.w	r5, r0, #32
 8026fa6:	b123      	cbz	r3, 8026fb2 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026fa8:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8026fac:	4628      	mov	r0, r5
 8026fae:	f7ff fe79 	bl	8026ca4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026fb2:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8026fb6:	4628      	mov	r0, r5
 8026fb8:	f7ff fe74 	bl	8026ca4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026fbc:	2300      	movs	r3, #0
 8026fbe:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026fc2:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8026fc6:	4298      	cmp	r0, r3
 8026fc8:	bf34      	ite	cc
 8026fca:	2000      	movcc	r0, #0
 8026fcc:	2001      	movcs	r0, #1
 8026fce:	bd38      	pop	{r3, r4, r5, pc}

08026fd0 <_ZN8touchgfx6Canvas6renderEh>:
 8026fd0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8026fd4:	4604      	mov	r4, r0
 8026fd6:	6840      	ldr	r0, [r0, #4]
 8026fd8:	6803      	ldr	r3, [r0, #0]
 8026fda:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8026fdc:	460d      	mov	r5, r1
 8026fde:	4798      	blx	r3
 8026fe0:	fb10 f105 	smulbb	r1, r0, r5
 8026fe4:	b289      	uxth	r1, r1
 8026fe6:	1c4d      	adds	r5, r1, #1
 8026fe8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026fec:	122d      	asrs	r5, r5, #8
 8026fee:	f000 809d 	beq.w	802712c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026ff2:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8026ff6:	2b00      	cmp	r3, #0
 8026ff8:	f000 8098 	beq.w	802712c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026ffc:	4620      	mov	r0, r4
 8026ffe:	f7ff ffc5 	bl	8026f8c <_ZN8touchgfx6Canvas5closeEv>
 8027002:	4607      	mov	r7, r0
 8027004:	2800      	cmp	r0, #0
 8027006:	d048      	beq.n	802709a <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027008:	6863      	ldr	r3, [r4, #4]
 802700a:	4e49      	ldr	r6, [pc, #292]	; (8027130 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 802700c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802700e:	6837      	ldr	r7, [r6, #0]
 8027010:	6803      	ldr	r3, [r0, #0]
 8027012:	689b      	ldr	r3, [r3, #8]
 8027014:	4798      	blx	r3
 8027016:	4601      	mov	r1, r0
 8027018:	4638      	mov	r0, r7
 802701a:	f7ea fbc5 	bl	80117a8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802701e:	4607      	mov	r7, r0
 8027020:	f7dd fba0 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 8027024:	6803      	ldr	r3, [r0, #0]
 8027026:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8027028:	4798      	blx	r3
 802702a:	4680      	mov	r8, r0
 802702c:	f7dd fb9a 	bl	8004764 <_ZN8touchgfx3HAL3lcdEv>
 8027030:	6803      	ldr	r3, [r0, #0]
 8027032:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027034:	4798      	blx	r3
 8027036:	280b      	cmp	r0, #11
 8027038:	d85d      	bhi.n	80270f6 <_ZN8touchgfx6Canvas6renderEh+0x126>
 802703a:	e8df f000 	tbb	[pc, r0]
 802703e:	5e53      	.short	0x5e53
 8027040:	325c066e 	.word	0x325c066e
 8027044:	67676742 	.word	0x67676742
 8027048:	6767      	.short	0x6767
 802704a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802704e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027052:	2208      	movs	r2, #8
 8027054:	fb91 f2f2 	sdiv	r2, r1, r2
 8027058:	fb08 2303 	mla	r3, r8, r3, r2
 802705c:	441f      	add	r7, r3
 802705e:	424b      	negs	r3, r1
 8027060:	f003 0307 	and.w	r3, r3, #7
 8027064:	f001 0107 	and.w	r1, r1, #7
 8027068:	bf58      	it	pl
 802706a:	4259      	negpl	r1, r3
 802706c:	b2c9      	uxtb	r1, r1
 802706e:	b2ed      	uxtb	r5, r5
 8027070:	e9cd 1500 	strd	r1, r5, [sp]
 8027074:	6860      	ldr	r0, [r4, #4]
 8027076:	463a      	mov	r2, r7
 8027078:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802707a:	fa0f f388 	sxth.w	r3, r8
 802707e:	f104 0020 	add.w	r0, r4, #32
 8027082:	f7ff fe1b 	bl	8026cbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027086:	6863      	ldr	r3, [r4, #4]
 8027088:	4607      	mov	r7, r0
 802708a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802708c:	6803      	ldr	r3, [r0, #0]
 802708e:	691b      	ldr	r3, [r3, #16]
 8027090:	4798      	blx	r3
 8027092:	6830      	ldr	r0, [r6, #0]
 8027094:	6803      	ldr	r3, [r0, #0]
 8027096:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027098:	4798      	blx	r3
 802709a:	4638      	mov	r0, r7
 802709c:	b002      	add	sp, #8
 802709e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80270a2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80270a6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80270aa:	2204      	movs	r2, #4
 80270ac:	fb91 f2f2 	sdiv	r2, r1, r2
 80270b0:	fb08 2303 	mla	r3, r8, r3, r2
 80270b4:	441f      	add	r7, r3
 80270b6:	424b      	negs	r3, r1
 80270b8:	f003 0303 	and.w	r3, r3, #3
 80270bc:	f001 0103 	and.w	r1, r1, #3
 80270c0:	e7d2      	b.n	8027068 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80270c2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80270c6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80270ca:	2900      	cmp	r1, #0
 80270cc:	f04f 0202 	mov.w	r2, #2
 80270d0:	fb91 f2f2 	sdiv	r2, r1, r2
 80270d4:	f001 0101 	and.w	r1, r1, #1
 80270d8:	fb08 2303 	mla	r3, r8, r3, r2
 80270dc:	441f      	add	r7, r3
 80270de:	bfb8      	it	lt
 80270e0:	4249      	neglt	r1, r1
 80270e2:	e7c3      	b.n	802706c <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80270e4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80270e8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80270ec:	fb08 f303 	mul.w	r3, r8, r3
 80270f0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80270f4:	441f      	add	r7, r3
 80270f6:	2100      	movs	r1, #0
 80270f8:	e7b9      	b.n	802706e <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80270fa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80270fe:	fb08 f203 	mul.w	r2, r8, r3
 8027102:	8b23      	ldrh	r3, [r4, #24]
 8027104:	2103      	movs	r1, #3
 8027106:	fb13 2301 	smlabb	r3, r3, r1, r2
 802710a:	e7f3      	b.n	80270f4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802710c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027110:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027114:	fb08 2303 	mla	r3, r8, r3, r2
 8027118:	e7ec      	b.n	80270f4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802711a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802711e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027122:	fb08 f303 	mul.w	r3, r8, r3
 8027126:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802712a:	e7e3      	b.n	80270f4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802712c:	2701      	movs	r7, #1
 802712e:	e7b4      	b.n	802709a <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027130:	20012da4 	.word	0x20012da4

08027134 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8027134:	b510      	push	{r4, lr}
 8027136:	4b07      	ldr	r3, [pc, #28]	; (8027154 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8027138:	781b      	ldrb	r3, [r3, #0]
 802713a:	2b01      	cmp	r3, #1
 802713c:	d108      	bne.n	8027150 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802713e:	6843      	ldr	r3, [r0, #4]
 8027140:	6814      	ldr	r4, [r2, #0]
 8027142:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8027146:	680b      	ldr	r3, [r1, #0]
 8027148:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802714c:	6013      	str	r3, [r2, #0]
 802714e:	600c      	str	r4, [r1, #0]
 8027150:	bd10      	pop	{r4, pc}
 8027152:	bf00      	nop
 8027154:	20012d9c 	.word	0x20012d9c

08027158 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027158:	b513      	push	{r0, r1, r4, lr}
 802715a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802715e:	4604      	mov	r4, r0
 8027160:	e9cd 2100 	strd	r2, r1, [sp]
 8027164:	b9a3      	cbnz	r3, 8027190 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027166:	466a      	mov	r2, sp
 8027168:	a901      	add	r1, sp, #4
 802716a:	4620      	mov	r0, r4
 802716c:	f7ff ffe2 	bl	8027134 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027170:	68a3      	ldr	r3, [r4, #8]
 8027172:	9901      	ldr	r1, [sp, #4]
 8027174:	9a00      	ldr	r2, [sp, #0]
 8027176:	1ac9      	subs	r1, r1, r3
 8027178:	68e3      	ldr	r3, [r4, #12]
 802717a:	9101      	str	r1, [sp, #4]
 802717c:	1ad2      	subs	r2, r2, r3
 802717e:	2a00      	cmp	r2, #0
 8027180:	9200      	str	r2, [sp, #0]
 8027182:	da0b      	bge.n	802719c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027184:	2301      	movs	r3, #1
 8027186:	2900      	cmp	r1, #0
 8027188:	da0e      	bge.n	80271a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802718a:	f043 0304 	orr.w	r3, r3, #4
 802718e:	e013      	b.n	80271b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027190:	f7ff fefc 	bl	8026f8c <_ZN8touchgfx6Canvas5closeEv>
 8027194:	2800      	cmp	r0, #0
 8027196:	d1e6      	bne.n	8027166 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027198:	b002      	add	sp, #8
 802719a:	bd10      	pop	{r4, pc}
 802719c:	6963      	ldr	r3, [r4, #20]
 802719e:	429a      	cmp	r2, r3
 80271a0:	bfac      	ite	ge
 80271a2:	2302      	movge	r3, #2
 80271a4:	2300      	movlt	r3, #0
 80271a6:	e7ee      	b.n	8027186 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80271a8:	6920      	ldr	r0, [r4, #16]
 80271aa:	4281      	cmp	r1, r0
 80271ac:	bfac      	ite	ge
 80271ae:	2008      	movge	r0, #8
 80271b0:	2000      	movlt	r0, #0
 80271b2:	4318      	orrs	r0, r3
 80271b4:	b2c3      	uxtb	r3, r0
 80271b6:	b158      	cbz	r0, 80271d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80271b8:	2200      	movs	r2, #0
 80271ba:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80271be:	9901      	ldr	r1, [sp, #4]
 80271c0:	9a00      	ldr	r2, [sp, #0]
 80271c2:	66a1      	str	r1, [r4, #104]	; 0x68
 80271c4:	66e2      	str	r2, [r4, #108]	; 0x6c
 80271c6:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80271ca:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80271ce:	e7e3      	b.n	8027198 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80271d0:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80271d4:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80271d8:	4298      	cmp	r0, r3
 80271da:	d803      	bhi.n	80271e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80271dc:	f104 0020 	add.w	r0, r4, #32
 80271e0:	f7ec fe72 	bl	8013ec8 <_ZN8touchgfx7Outline6moveToEii>
 80271e4:	2301      	movs	r3, #1
 80271e6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80271ea:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80271ee:	2300      	movs	r3, #0
 80271f0:	e7e5      	b.n	80271be <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80271f2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80271f4:	ab02      	add	r3, sp, #8
 80271f6:	4604      	mov	r4, r0
 80271f8:	f843 2d08 	str.w	r2, [r3, #-8]!
 80271fc:	9101      	str	r1, [sp, #4]
 80271fe:	461a      	mov	r2, r3
 8027200:	a901      	add	r1, sp, #4
 8027202:	f7ff ff97 	bl	8027134 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027206:	68a3      	ldr	r3, [r4, #8]
 8027208:	9901      	ldr	r1, [sp, #4]
 802720a:	9a00      	ldr	r2, [sp, #0]
 802720c:	1ac9      	subs	r1, r1, r3
 802720e:	68e3      	ldr	r3, [r4, #12]
 8027210:	9101      	str	r1, [sp, #4]
 8027212:	1ad2      	subs	r2, r2, r3
 8027214:	2a00      	cmp	r2, #0
 8027216:	9200      	str	r2, [sp, #0]
 8027218:	db1c      	blt.n	8027254 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802721a:	6963      	ldr	r3, [r4, #20]
 802721c:	429a      	cmp	r2, r3
 802721e:	bfac      	ite	ge
 8027220:	2002      	movge	r0, #2
 8027222:	2000      	movlt	r0, #0
 8027224:	2900      	cmp	r1, #0
 8027226:	db17      	blt.n	8027258 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8027228:	6923      	ldr	r3, [r4, #16]
 802722a:	4299      	cmp	r1, r3
 802722c:	bfac      	ite	ge
 802722e:	2308      	movge	r3, #8
 8027230:	2300      	movlt	r3, #0
 8027232:	4303      	orrs	r3, r0
 8027234:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8027238:	b2dd      	uxtb	r5, r3
 802723a:	b978      	cbnz	r0, 802725c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802723c:	f104 0020 	add.w	r0, r4, #32
 8027240:	f7ff fd30 	bl	8026ca4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027244:	9b01      	ldr	r3, [sp, #4]
 8027246:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027248:	9b00      	ldr	r3, [sp, #0]
 802724a:	6623      	str	r3, [r4, #96]	; 0x60
 802724c:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8027250:	b002      	add	sp, #8
 8027252:	bd70      	pop	{r4, r5, r6, pc}
 8027254:	2001      	movs	r0, #1
 8027256:	e7e5      	b.n	8027224 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027258:	2304      	movs	r3, #4
 802725a:	e7ea      	b.n	8027232 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802725c:	b113      	cbz	r3, 8027264 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802725e:	ea10 0305 	ands.w	r3, r0, r5
 8027262:	d11c      	bne.n	802729e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027264:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027268:	f104 0620 	add.w	r6, r4, #32
 802726c:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027270:	b98b      	cbnz	r3, 8027296 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027272:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027276:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802727a:	4298      	cmp	r0, r3
 802727c:	d802      	bhi.n	8027284 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802727e:	4630      	mov	r0, r6
 8027280:	f7ec fe22 	bl	8013ec8 <_ZN8touchgfx7Outline6moveToEii>
 8027284:	2301      	movs	r3, #1
 8027286:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802728a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802728e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027292:	4630      	mov	r0, r6
 8027294:	e7d4      	b.n	8027240 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027296:	4630      	mov	r0, r6
 8027298:	f7ff fd04 	bl	8026ca4 <_ZN8touchgfx10Rasterizer6lineToEii>
 802729c:	e7f7      	b.n	802728e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802729e:	461d      	mov	r5, r3
 80272a0:	e7d0      	b.n	8027244 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080272a4 <_ZN8touchgfx6CanvasD1Ev>:
 80272a4:	b510      	push	{r4, lr}
 80272a6:	4b04      	ldr	r3, [pc, #16]	; (80272b8 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80272a8:	4604      	mov	r4, r0
 80272aa:	f840 3b20 	str.w	r3, [r0], #32
 80272ae:	f7ec f905 	bl	80134bc <_ZN8touchgfx7OutlineD1Ev>
 80272b2:	4620      	mov	r0, r4
 80272b4:	bd10      	pop	{r4, pc}
 80272b6:	bf00      	nop
 80272b8:	0802f720 	.word	0x0802f720

080272bc <_ZN8touchgfx6CanvasD0Ev>:
 80272bc:	b510      	push	{r4, lr}
 80272be:	4604      	mov	r4, r0
 80272c0:	f7ff fff0 	bl	80272a4 <_ZN8touchgfx6CanvasD1Ev>
 80272c4:	4620      	mov	r0, r4
 80272c6:	2170      	movs	r1, #112	; 0x70
 80272c8:	f002 fd09 	bl	8029cde <_ZdlPvj>
 80272cc:	4620      	mov	r0, r4
 80272ce:	bd10      	pop	{r4, pc}

080272d0 <_ZN8touchgfx6CircleD1Ev>:
 80272d0:	4770      	bx	lr

080272d2 <_ZN8touchgfx6CircleD0Ev>:
 80272d2:	b510      	push	{r4, lr}
 80272d4:	2148      	movs	r1, #72	; 0x48
 80272d6:	4604      	mov	r4, r0
 80272d8:	f002 fd01 	bl	8029cde <_ZdlPvj>
 80272dc:	4620      	mov	r0, r4
 80272de:	bd10      	pop	{r4, pc}

080272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 80272e0:	b508      	push	{r3, lr}
 80272e2:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 80272e6:	f7ea fdb5 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80272ea:	bd08      	pop	{r3, pc}

080272ec <_ZN8touchgfx6CircleC1Ev>:
 80272ec:	b510      	push	{r4, lr}
 80272ee:	4604      	mov	r4, r0
 80272f0:	f7ea fc4c 	bl	8011b8c <_ZN8touchgfx12CanvasWidgetC1Ev>
 80272f4:	4b08      	ldr	r3, [pc, #32]	; (8027318 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80272f6:	6023      	str	r3, [r4, #0]
 80272f8:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80272fc:	2300      	movs	r3, #0
 80272fe:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8027302:	f24b 4205 	movw	r2, #46085	; 0xb405
 8027306:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802730a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802730e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8027312:	60a3      	str	r3, [r4, #8]
 8027314:	4620      	mov	r0, r4
 8027316:	bd10      	pop	{r4, pc}
 8027318:	0802f734 	.word	0x0802f734

0802731c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802731c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027320:	428a      	cmp	r2, r1
 8027322:	4680      	mov	r8, r0
 8027324:	4610      	mov	r0, r2
 8027326:	4699      	mov	r9, r3
 8027328:	bfa6      	itte	ge
 802732a:	460a      	movge	r2, r1
 802732c:	4603      	movge	r3, r0
 802732e:	460b      	movlt	r3, r1
 8027330:	1a99      	subs	r1, r3, r2
 8027332:	b085      	sub	sp, #20
 8027334:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8027338:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802733c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802733e:	bfa4      	itt	ge
 8027340:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8027344:	2200      	movge	r2, #0
 8027346:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802734a:	9300      	str	r3, [sp, #0]
 802734c:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8027350:	f102 0b01 	add.w	fp, r2, #1
 8027354:	2c00      	cmp	r4, #0
 8027356:	f040 80af 	bne.w	80274b8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802735a:	4610      	mov	r0, r2
 802735c:	9201      	str	r2, [sp, #4]
 802735e:	f7ea fd79 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027362:	a903      	add	r1, sp, #12
 8027364:	9003      	str	r0, [sp, #12]
 8027366:	4650      	mov	r0, sl
 8027368:	f7ea fc3c 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802736c:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027370:	9a01      	ldr	r2, [sp, #4]
 8027372:	4408      	add	r0, r1
 8027374:	f8d9 1000 	ldr.w	r1, [r9]
 8027378:	4281      	cmp	r1, r0
 802737a:	bfc8      	it	gt
 802737c:	f8c9 0000 	strgt.w	r0, [r9]
 8027380:	6839      	ldr	r1, [r7, #0]
 8027382:	4288      	cmp	r0, r1
 8027384:	bfc8      	it	gt
 8027386:	6038      	strgt	r0, [r7, #0]
 8027388:	4610      	mov	r0, r2
 802738a:	f7ff ffa9 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802738e:	a903      	add	r1, sp, #12
 8027390:	9003      	str	r0, [sp, #12]
 8027392:	4650      	mov	r0, sl
 8027394:	f7ea fc26 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027398:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802739c:	1a10      	subs	r0, r2, r0
 802739e:	6832      	ldr	r2, [r6, #0]
 80273a0:	4282      	cmp	r2, r0
 80273a2:	bfc8      	it	gt
 80273a4:	6030      	strgt	r0, [r6, #0]
 80273a6:	682a      	ldr	r2, [r5, #0]
 80273a8:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80273ac:	4290      	cmp	r0, r2
 80273ae:	fb9b f2f1 	sdiv	r2, fp, r1
 80273b2:	fb01 b212 	mls	r2, r1, r2, fp
 80273b6:	eba1 0202 	sub.w	r2, r1, r2
 80273ba:	bfc8      	it	gt
 80273bc:	6028      	strgt	r0, [r5, #0]
 80273be:	fb92 f0f1 	sdiv	r0, r2, r1
 80273c2:	fb01 2210 	mls	r2, r1, r0, r2
 80273c6:	4493      	add	fp, r2
 80273c8:	9b00      	ldr	r3, [sp, #0]
 80273ca:	455b      	cmp	r3, fp
 80273cc:	db2a      	blt.n	8027424 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 80273ce:	4658      	mov	r0, fp
 80273d0:	f7ea fd40 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80273d4:	a903      	add	r1, sp, #12
 80273d6:	9003      	str	r0, [sp, #12]
 80273d8:	4650      	mov	r0, sl
 80273da:	f7ea fc03 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80273de:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80273e2:	4410      	add	r0, r2
 80273e4:	f8d9 2000 	ldr.w	r2, [r9]
 80273e8:	4282      	cmp	r2, r0
 80273ea:	bfc8      	it	gt
 80273ec:	f8c9 0000 	strgt.w	r0, [r9]
 80273f0:	683a      	ldr	r2, [r7, #0]
 80273f2:	4290      	cmp	r0, r2
 80273f4:	bfc8      	it	gt
 80273f6:	6038      	strgt	r0, [r7, #0]
 80273f8:	4658      	mov	r0, fp
 80273fa:	f7ff ff71 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80273fe:	a903      	add	r1, sp, #12
 8027400:	9003      	str	r0, [sp, #12]
 8027402:	4650      	mov	r0, sl
 8027404:	f7ea fbee 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027408:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802740c:	1a10      	subs	r0, r2, r0
 802740e:	6832      	ldr	r2, [r6, #0]
 8027410:	4282      	cmp	r2, r0
 8027412:	bfc8      	it	gt
 8027414:	6030      	strgt	r0, [r6, #0]
 8027416:	682a      	ldr	r2, [r5, #0]
 8027418:	4290      	cmp	r0, r2
 802741a:	bfc8      	it	gt
 802741c:	6028      	strgt	r0, [r5, #0]
 802741e:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027422:	e7d1      	b.n	80273c8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8027424:	9b00      	ldr	r3, [sp, #0]
 8027426:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802742a:	455b      	cmp	r3, fp
 802742c:	dd27      	ble.n	802747e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802742e:	4618      	mov	r0, r3
 8027430:	f7ea fd10 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027434:	a903      	add	r1, sp, #12
 8027436:	9003      	str	r0, [sp, #12]
 8027438:	4650      	mov	r0, sl
 802743a:	f7ea fbd3 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802743e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027442:	4410      	add	r0, r2
 8027444:	f8d9 2000 	ldr.w	r2, [r9]
 8027448:	4282      	cmp	r2, r0
 802744a:	bfc8      	it	gt
 802744c:	f8c9 0000 	strgt.w	r0, [r9]
 8027450:	683a      	ldr	r2, [r7, #0]
 8027452:	4290      	cmp	r0, r2
 8027454:	bfc8      	it	gt
 8027456:	6038      	strgt	r0, [r7, #0]
 8027458:	9800      	ldr	r0, [sp, #0]
 802745a:	f7ff ff41 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802745e:	a903      	add	r1, sp, #12
 8027460:	9003      	str	r0, [sp, #12]
 8027462:	4650      	mov	r0, sl
 8027464:	f7ea fbbe 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027468:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802746c:	1a10      	subs	r0, r2, r0
 802746e:	6832      	ldr	r2, [r6, #0]
 8027470:	4282      	cmp	r2, r0
 8027472:	bfc8      	it	gt
 8027474:	6030      	strgt	r0, [r6, #0]
 8027476:	682a      	ldr	r2, [r5, #0]
 8027478:	4290      	cmp	r0, r2
 802747a:	bfc8      	it	gt
 802747c:	6028      	strgt	r0, [r5, #0]
 802747e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027482:	f8d9 1000 	ldr.w	r1, [r9]
 8027486:	4291      	cmp	r1, r2
 8027488:	bfc8      	it	gt
 802748a:	f8c9 2000 	strgt.w	r2, [r9]
 802748e:	683a      	ldr	r2, [r7, #0]
 8027490:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8027494:	429a      	cmp	r2, r3
 8027496:	bfb8      	it	lt
 8027498:	603b      	strlt	r3, [r7, #0]
 802749a:	6832      	ldr	r2, [r6, #0]
 802749c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80274a0:	429a      	cmp	r2, r3
 80274a2:	bfc8      	it	gt
 80274a4:	6033      	strgt	r3, [r6, #0]
 80274a6:	682a      	ldr	r2, [r5, #0]
 80274a8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80274ac:	429a      	cmp	r2, r3
 80274ae:	da00      	bge.n	80274b2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80274b0:	602b      	str	r3, [r5, #0]
 80274b2:	b005      	add	sp, #20
 80274b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80274b8:	2002      	movs	r0, #2
 80274ba:	3401      	adds	r4, #1
 80274bc:	fb94 f4f0 	sdiv	r4, r4, r0
 80274c0:	4610      	mov	r0, r2
 80274c2:	9201      	str	r2, [sp, #4]
 80274c4:	f7ea fcc6 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80274c8:	a903      	add	r1, sp, #12
 80274ca:	9003      	str	r0, [sp, #12]
 80274cc:	4650      	mov	r0, sl
 80274ce:	f7ea fb89 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274d2:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80274d6:	9a01      	ldr	r2, [sp, #4]
 80274d8:	4408      	add	r0, r1
 80274da:	f8d9 1000 	ldr.w	r1, [r9]
 80274de:	1b03      	subs	r3, r0, r4
 80274e0:	4299      	cmp	r1, r3
 80274e2:	bfc8      	it	gt
 80274e4:	f8c9 3000 	strgt.w	r3, [r9]
 80274e8:	6839      	ldr	r1, [r7, #0]
 80274ea:	428b      	cmp	r3, r1
 80274ec:	bfc8      	it	gt
 80274ee:	603b      	strgt	r3, [r7, #0]
 80274f0:	f8d9 1000 	ldr.w	r1, [r9]
 80274f4:	4420      	add	r0, r4
 80274f6:	4281      	cmp	r1, r0
 80274f8:	bfc8      	it	gt
 80274fa:	f8c9 0000 	strgt.w	r0, [r9]
 80274fe:	6839      	ldr	r1, [r7, #0]
 8027500:	4288      	cmp	r0, r1
 8027502:	bfc8      	it	gt
 8027504:	6038      	strgt	r0, [r7, #0]
 8027506:	4610      	mov	r0, r2
 8027508:	f7ff feea 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802750c:	a903      	add	r1, sp, #12
 802750e:	9003      	str	r0, [sp, #12]
 8027510:	4650      	mov	r0, sl
 8027512:	f7ea fb67 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027516:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802751a:	1a10      	subs	r0, r2, r0
 802751c:	6832      	ldr	r2, [r6, #0]
 802751e:	1b01      	subs	r1, r0, r4
 8027520:	428a      	cmp	r2, r1
 8027522:	bfc8      	it	gt
 8027524:	6031      	strgt	r1, [r6, #0]
 8027526:	682a      	ldr	r2, [r5, #0]
 8027528:	4291      	cmp	r1, r2
 802752a:	bfc8      	it	gt
 802752c:	6029      	strgt	r1, [r5, #0]
 802752e:	6832      	ldr	r2, [r6, #0]
 8027530:	4420      	add	r0, r4
 8027532:	4282      	cmp	r2, r0
 8027534:	bfc8      	it	gt
 8027536:	6030      	strgt	r0, [r6, #0]
 8027538:	682a      	ldr	r2, [r5, #0]
 802753a:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802753e:	4290      	cmp	r0, r2
 8027540:	fb9b f2f1 	sdiv	r2, fp, r1
 8027544:	fb01 b212 	mls	r2, r1, r2, fp
 8027548:	eba1 0202 	sub.w	r2, r1, r2
 802754c:	bfc8      	it	gt
 802754e:	6028      	strgt	r0, [r5, #0]
 8027550:	fb92 f0f1 	sdiv	r0, r2, r1
 8027554:	fb01 2210 	mls	r2, r1, r0, r2
 8027558:	4493      	add	fp, r2
 802755a:	9b00      	ldr	r3, [sp, #0]
 802755c:	455b      	cmp	r3, fp
 802755e:	db40      	blt.n	80275e2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8027560:	4658      	mov	r0, fp
 8027562:	f7ea fc77 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027566:	a903      	add	r1, sp, #12
 8027568:	9003      	str	r0, [sp, #12]
 802756a:	4650      	mov	r0, sl
 802756c:	f7ea fb3a 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027570:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027574:	4410      	add	r0, r2
 8027576:	f8d9 2000 	ldr.w	r2, [r9]
 802757a:	1b01      	subs	r1, r0, r4
 802757c:	428a      	cmp	r2, r1
 802757e:	bfc8      	it	gt
 8027580:	f8c9 1000 	strgt.w	r1, [r9]
 8027584:	683a      	ldr	r2, [r7, #0]
 8027586:	4291      	cmp	r1, r2
 8027588:	bfc8      	it	gt
 802758a:	6039      	strgt	r1, [r7, #0]
 802758c:	f8d9 2000 	ldr.w	r2, [r9]
 8027590:	4420      	add	r0, r4
 8027592:	4282      	cmp	r2, r0
 8027594:	bfc8      	it	gt
 8027596:	f8c9 0000 	strgt.w	r0, [r9]
 802759a:	683a      	ldr	r2, [r7, #0]
 802759c:	4290      	cmp	r0, r2
 802759e:	bfc8      	it	gt
 80275a0:	6038      	strgt	r0, [r7, #0]
 80275a2:	4658      	mov	r0, fp
 80275a4:	f7ff fe9c 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80275a8:	a903      	add	r1, sp, #12
 80275aa:	9003      	str	r0, [sp, #12]
 80275ac:	4650      	mov	r0, sl
 80275ae:	f7ea fb19 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80275b2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80275b6:	1a10      	subs	r0, r2, r0
 80275b8:	6832      	ldr	r2, [r6, #0]
 80275ba:	1b01      	subs	r1, r0, r4
 80275bc:	428a      	cmp	r2, r1
 80275be:	bfc8      	it	gt
 80275c0:	6031      	strgt	r1, [r6, #0]
 80275c2:	682a      	ldr	r2, [r5, #0]
 80275c4:	4291      	cmp	r1, r2
 80275c6:	bfc8      	it	gt
 80275c8:	6029      	strgt	r1, [r5, #0]
 80275ca:	6832      	ldr	r2, [r6, #0]
 80275cc:	4420      	add	r0, r4
 80275ce:	4282      	cmp	r2, r0
 80275d0:	bfc8      	it	gt
 80275d2:	6030      	strgt	r0, [r6, #0]
 80275d4:	682a      	ldr	r2, [r5, #0]
 80275d6:	4290      	cmp	r0, r2
 80275d8:	bfc8      	it	gt
 80275da:	6028      	strgt	r0, [r5, #0]
 80275dc:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80275e0:	e7bb      	b.n	802755a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 80275e2:	9b00      	ldr	r3, [sp, #0]
 80275e4:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80275e8:	455b      	cmp	r3, fp
 80275ea:	f77f af62 	ble.w	80274b2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80275ee:	4618      	mov	r0, r3
 80275f0:	f7ea fc30 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80275f4:	a903      	add	r1, sp, #12
 80275f6:	9003      	str	r0, [sp, #12]
 80275f8:	4650      	mov	r0, sl
 80275fa:	f7ea faf3 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80275fe:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027602:	4410      	add	r0, r2
 8027604:	f8d9 2000 	ldr.w	r2, [r9]
 8027608:	1b01      	subs	r1, r0, r4
 802760a:	428a      	cmp	r2, r1
 802760c:	bfc8      	it	gt
 802760e:	f8c9 1000 	strgt.w	r1, [r9]
 8027612:	683a      	ldr	r2, [r7, #0]
 8027614:	4291      	cmp	r1, r2
 8027616:	bfc8      	it	gt
 8027618:	6039      	strgt	r1, [r7, #0]
 802761a:	f8d9 2000 	ldr.w	r2, [r9]
 802761e:	4420      	add	r0, r4
 8027620:	4282      	cmp	r2, r0
 8027622:	bfc8      	it	gt
 8027624:	f8c9 0000 	strgt.w	r0, [r9]
 8027628:	683b      	ldr	r3, [r7, #0]
 802762a:	4298      	cmp	r0, r3
 802762c:	bfc8      	it	gt
 802762e:	6038      	strgt	r0, [r7, #0]
 8027630:	9800      	ldr	r0, [sp, #0]
 8027632:	f7ff fe55 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027636:	a903      	add	r1, sp, #12
 8027638:	9003      	str	r0, [sp, #12]
 802763a:	4650      	mov	r0, sl
 802763c:	f7ea fad2 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027640:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027644:	6832      	ldr	r2, [r6, #0]
 8027646:	1a18      	subs	r0, r3, r0
 8027648:	1b03      	subs	r3, r0, r4
 802764a:	429a      	cmp	r2, r3
 802764c:	bfc8      	it	gt
 802764e:	6033      	strgt	r3, [r6, #0]
 8027650:	682a      	ldr	r2, [r5, #0]
 8027652:	4293      	cmp	r3, r2
 8027654:	bfc8      	it	gt
 8027656:	602b      	strgt	r3, [r5, #0]
 8027658:	6833      	ldr	r3, [r6, #0]
 802765a:	4404      	add	r4, r0
 802765c:	42a3      	cmp	r3, r4
 802765e:	bfc8      	it	gt
 8027660:	6034      	strgt	r4, [r6, #0]
 8027662:	682b      	ldr	r3, [r5, #0]
 8027664:	429c      	cmp	r4, r3
 8027666:	bfc8      	it	gt
 8027668:	602c      	strgt	r4, [r5, #0]
 802766a:	e722      	b.n	80274b2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802766c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802766c:	b530      	push	{r4, r5, lr}
 802766e:	4604      	mov	r4, r0
 8027670:	4608      	mov	r0, r1
 8027672:	4611      	mov	r1, r2
 8027674:	461a      	mov	r2, r3
 8027676:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802767a:	b089      	sub	sp, #36	; 0x24
 802767c:	015b      	lsls	r3, r3, #5
 802767e:	9304      	str	r3, [sp, #16]
 8027680:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027684:	2500      	movs	r5, #0
 8027686:	015b      	lsls	r3, r3, #5
 8027688:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802768c:	ab07      	add	r3, sp, #28
 802768e:	9302      	str	r3, [sp, #8]
 8027690:	ab06      	add	r3, sp, #24
 8027692:	9301      	str	r3, [sp, #4]
 8027694:	ab05      	add	r3, sp, #20
 8027696:	9300      	str	r3, [sp, #0]
 8027698:	ab04      	add	r3, sp, #16
 802769a:	9505      	str	r5, [sp, #20]
 802769c:	f7ff fe3e 	bl	802731c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80276a0:	2520      	movs	r5, #32
 80276a2:	9a04      	ldr	r2, [sp, #16]
 80276a4:	9805      	ldr	r0, [sp, #20]
 80276a6:	fb92 f2f5 	sdiv	r2, r2, r5
 80276aa:	fb90 f0f5 	sdiv	r0, r0, r5
 80276ae:	b292      	uxth	r2, r2
 80276b0:	3002      	adds	r0, #2
 80276b2:	1a80      	subs	r0, r0, r2
 80276b4:	9b06      	ldr	r3, [sp, #24]
 80276b6:	9907      	ldr	r1, [sp, #28]
 80276b8:	fb93 f3f5 	sdiv	r3, r3, r5
 80276bc:	fb91 f1f5 	sdiv	r1, r1, r5
 80276c0:	b29b      	uxth	r3, r3
 80276c2:	3102      	adds	r1, #2
 80276c4:	1ac9      	subs	r1, r1, r3
 80276c6:	3a01      	subs	r2, #1
 80276c8:	3b01      	subs	r3, #1
 80276ca:	80a0      	strh	r0, [r4, #4]
 80276cc:	4620      	mov	r0, r4
 80276ce:	8022      	strh	r2, [r4, #0]
 80276d0:	8063      	strh	r3, [r4, #2]
 80276d2:	80e1      	strh	r1, [r4, #6]
 80276d4:	b009      	add	sp, #36	; 0x24
 80276d6:	bd30      	pop	{r4, r5, pc}

080276d8 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 80276d8:	b510      	push	{r4, lr}
 80276da:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 80276de:	4604      	mov	r4, r0
 80276e0:	f7ff ffc4 	bl	802766c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80276e4:	4620      	mov	r0, r4
 80276e6:	bd10      	pop	{r4, pc}

080276e8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 80276e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80276ea:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 80276ee:	4606      	mov	r6, r0
 80276f0:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80276f4:	6813      	ldr	r3, [r2, #0]
 80276f6:	42a5      	cmp	r5, r4
 80276f8:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80276fc:	da2b      	bge.n	8027756 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80276fe:	42a3      	cmp	r3, r4
 8027700:	dd14      	ble.n	802772c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8027702:	b168      	cbz	r0, 8027720 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027704:	4267      	negs	r7, r4
 8027706:	fb97 f2f0 	sdiv	r2, r7, r0
 802770a:	fb00 7212 	mls	r2, r0, r2, r7
 802770e:	1a82      	subs	r2, r0, r2
 8027710:	fb92 f7f0 	sdiv	r7, r2, r0
 8027714:	fb00 2017 	mls	r0, r0, r7, r2
 8027718:	1a24      	subs	r4, r4, r0
 802771a:	42ac      	cmp	r4, r5
 802771c:	bfb8      	it	lt
 802771e:	462c      	movlt	r4, r5
 8027720:	4630      	mov	r0, r6
 8027722:	4622      	mov	r2, r4
 8027724:	f7ff ffa2 	bl	802766c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027728:	4630      	mov	r0, r6
 802772a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802772c:	42ab      	cmp	r3, r5
 802772e:	dd0e      	ble.n	802774e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8027730:	b168      	cbz	r0, 802774e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8027732:	425f      	negs	r7, r3
 8027734:	fb97 f2f0 	sdiv	r2, r7, r0
 8027738:	fb00 7212 	mls	r2, r0, r2, r7
 802773c:	1a82      	subs	r2, r0, r2
 802773e:	fb92 f7f0 	sdiv	r7, r2, r0
 8027742:	fb00 2017 	mls	r0, r0, r7, r2
 8027746:	1a1b      	subs	r3, r3, r0
 8027748:	42ab      	cmp	r3, r5
 802774a:	bfb8      	it	lt
 802774c:	462b      	movlt	r3, r5
 802774e:	4622      	mov	r2, r4
 8027750:	461c      	mov	r4, r3
 8027752:	4613      	mov	r3, r2
 8027754:	e7e4      	b.n	8027720 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027756:	42a3      	cmp	r3, r4
 8027758:	da10      	bge.n	802777c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802775a:	b148      	cbz	r0, 8027770 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802775c:	fb94 f2f0 	sdiv	r2, r4, r0
 8027760:	fb00 4212 	mls	r2, r0, r2, r4
 8027764:	1a82      	subs	r2, r0, r2
 8027766:	fb92 f7f0 	sdiv	r7, r2, r0
 802776a:	fb00 2017 	mls	r0, r0, r7, r2
 802776e:	4404      	add	r4, r0
 8027770:	42a5      	cmp	r5, r4
 8027772:	bfa8      	it	ge
 8027774:	4625      	movge	r5, r4
 8027776:	461c      	mov	r4, r3
 8027778:	462b      	mov	r3, r5
 802777a:	e7d1      	b.n	8027720 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802777c:	42ab      	cmp	r3, r5
 802777e:	dacf      	bge.n	8027720 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027780:	2800      	cmp	r0, #0
 8027782:	d0cd      	beq.n	8027720 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027784:	fb93 f2f0 	sdiv	r2, r3, r0
 8027788:	fb00 3212 	mls	r2, r0, r2, r3
 802778c:	1a82      	subs	r2, r0, r2
 802778e:	fb92 f7f0 	sdiv	r7, r2, r0
 8027792:	fb00 2017 	mls	r0, r0, r7, r2
 8027796:	4403      	add	r3, r0
 8027798:	42ab      	cmp	r3, r5
 802779a:	bfa8      	it	ge
 802779c:	462b      	movge	r3, r5
 802779e:	e7bf      	b.n	8027720 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080277a0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80277a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80277a4:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80277a8:	42ae      	cmp	r6, r5
 80277aa:	bfa2      	ittt	ge
 80277ac:	4633      	movge	r3, r6
 80277ae:	462e      	movge	r6, r5
 80277b0:	461d      	movge	r5, r3
 80277b2:	1bab      	subs	r3, r5, r6
 80277b4:	468b      	mov	fp, r1
 80277b6:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80277b8:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80277bc:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80277c0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80277c4:	f04f 0220 	mov.w	r2, #32
 80277c8:	b0ab      	sub	sp, #172	; 0xac
 80277ca:	4604      	mov	r4, r0
 80277cc:	bfa4      	itt	ge
 80277ce:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 80277d2:	2600      	movge	r6, #0
 80277d4:	fb99 f9f2 	sdiv	r9, r9, r2
 80277d8:	fb9a faf2 	sdiv	sl, sl, r2
 80277dc:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80277de:	2900      	cmp	r1, #0
 80277e0:	f000 80f5 	beq.w	80279ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 80277e4:	f9bb 0000 	ldrsh.w	r0, [fp]
 80277e8:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 80277ec:	eba9 0700 	sub.w	r7, r9, r0
 80277f0:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80277f4:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80277f8:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80277fc:	ebaa 0802 	sub.w	r8, sl, r2
 8027800:	4407      	add	r7, r0
 8027802:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8027806:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802780a:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802780e:	b23f      	sxth	r7, r7
 8027810:	4490      	add	r8, r2
 8027812:	eba9 0707 	sub.w	r7, r9, r7
 8027816:	fa0f f888 	sxth.w	r8, r8
 802781a:	ebaa 0808 	sub.w	r8, sl, r8
 802781e:	2f00      	cmp	r7, #0
 8027820:	bfb8      	it	lt
 8027822:	427f      	neglt	r7, r7
 8027824:	f1b8 0f00 	cmp.w	r8, #0
 8027828:	bfb8      	it	lt
 802782a:	f1c8 0800 	rsblt	r8, r8, #0
 802782e:	45bc      	cmp	ip, r7
 8027830:	bfcc      	ite	gt
 8027832:	f10c 0701 	addgt.w	r7, ip, #1
 8027836:	3701      	addle	r7, #1
 8027838:	4540      	cmp	r0, r8
 802783a:	bfc8      	it	gt
 802783c:	f100 0801 	addgt.w	r8, r0, #1
 8027840:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8027844:	f100 0001 	add.w	r0, r0, #1
 8027848:	ea4f 0060 	mov.w	r0, r0, asr #1
 802784c:	f04f 0202 	mov.w	r2, #2
 8027850:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8027854:	fb91 f1f2 	sdiv	r1, r1, r2
 8027858:	eba3 0301 	sub.w	r3, r3, r1
 802785c:	bfd8      	it	le
 802785e:	f108 0801 	addle.w	r8, r8, #1
 8027862:	9201      	str	r2, [sp, #4]
 8027864:	930d      	str	r3, [sp, #52]	; 0x34
 8027866:	f7ea fad5 	bl	8011e14 <_ZN8touchgfx7CWRUtil4sineEi>
 802786a:	a92a      	add	r1, sp, #168	; 0xa8
 802786c:	fb08 f808 	mul.w	r8, r8, r8
 8027870:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027874:	a80d      	add	r0, sp, #52	; 0x34
 8027876:	f7ea f9b5 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802787a:	fb07 8707 	mla	r7, r7, r7, r8
 802787e:	f04f 0c20 	mov.w	ip, #32
 8027882:	fb90 f0fc 	sdiv	r0, r0, ip
 8027886:	4340      	muls	r0, r0
 8027888:	4287      	cmp	r7, r0
 802788a:	9a01      	ldr	r2, [sp, #4]
 802788c:	da04      	bge.n	8027898 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802788e:	2401      	movs	r4, #1
 8027890:	4620      	mov	r0, r4
 8027892:	b02b      	add	sp, #172	; 0xac
 8027894:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027898:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802789a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802789c:	fb91 f3f2 	sdiv	r3, r1, r2
 80278a0:	4403      	add	r3, r0
 80278a2:	fb93 f3fc 	sdiv	r3, r3, ip
 80278a6:	f9bb 1000 	ldrsh.w	r1, [fp]
 80278aa:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80278ae:	440a      	add	r2, r1
 80278b0:	b212      	sxth	r2, r2
 80278b2:	454a      	cmp	r2, r9
 80278b4:	bfa8      	it	ge
 80278b6:	464a      	movge	r2, r9
 80278b8:	428a      	cmp	r2, r1
 80278ba:	bfac      	ite	ge
 80278bc:	eba9 0902 	subge.w	r9, r9, r2
 80278c0:	eba9 0901 	sublt.w	r9, r9, r1
 80278c4:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80278c8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80278cc:	440a      	add	r2, r1
 80278ce:	b212      	sxth	r2, r2
 80278d0:	4552      	cmp	r2, sl
 80278d2:	bfa8      	it	ge
 80278d4:	4652      	movge	r2, sl
 80278d6:	428a      	cmp	r2, r1
 80278d8:	bfac      	ite	ge
 80278da:	ebaa 0a02 	subge.w	sl, sl, r2
 80278de:	ebaa 0a01 	sublt.w	sl, sl, r1
 80278e2:	3301      	adds	r3, #1
 80278e4:	fb0a fa0a 	mul.w	sl, sl, sl
 80278e8:	fb09 a909 	mla	r9, r9, r9, sl
 80278ec:	435b      	muls	r3, r3
 80278ee:	4599      	cmp	r9, r3
 80278f0:	dccd      	bgt.n	802788e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80278f2:	465a      	mov	r2, fp
 80278f4:	4621      	mov	r1, r4
 80278f6:	a80e      	add	r0, sp, #56	; 0x38
 80278f8:	f7ff faae 	bl	8026e58 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80278fc:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80278fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027900:	9209      	str	r2, [sp, #36]	; 0x24
 8027902:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027906:	930a      	str	r3, [sp, #40]	; 0x28
 8027908:	dd07      	ble.n	802791a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802790a:	2102      	movs	r1, #2
 802790c:	fb93 f3f1 	sdiv	r3, r3, r1
 8027910:	4413      	add	r3, r2
 8027912:	930a      	str	r3, [sp, #40]	; 0x28
 8027914:	fb93 f3f1 	sdiv	r3, r3, r1
 8027918:	9309      	str	r3, [sp, #36]	; 0x24
 802791a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802791e:	4630      	mov	r0, r6
 8027920:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027924:	930b      	str	r3, [sp, #44]	; 0x2c
 8027926:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802792a:	f7ea fa93 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802792e:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8027932:	f04f 0a02 	mov.w	sl, #2
 8027936:	f849 0d74 	str.w	r0, [r9, #-116]!
 802793a:	a80b      	add	r0, sp, #44	; 0x2c
 802793c:	4649      	mov	r1, r9
 802793e:	f7ea f951 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027942:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027944:	fb90 f0fa 	sdiv	r0, r0, sl
 8027948:	eb00 0b03 	add.w	fp, r0, r3
 802794c:	4630      	mov	r0, r6
 802794e:	f7ff fcc7 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027952:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8027956:	017f      	lsls	r7, r7, #5
 8027958:	f848 0d78 	str.w	r0, [r8, #-120]!
 802795c:	a80b      	add	r0, sp, #44	; 0x2c
 802795e:	4641      	mov	r1, r8
 8027960:	f7ea f940 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027964:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027966:	fb90 f0fa 	sdiv	r0, r0, sl
 802796a:	4659      	mov	r1, fp
 802796c:	1a12      	subs	r2, r2, r0
 802796e:	a80e      	add	r0, sp, #56	; 0x38
 8027970:	f7ff fbf2 	bl	8027158 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027974:	f106 0a20 	add.w	sl, r6, #32
 8027978:	bb67      	cbnz	r7, 80279d4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802797a:	46b3      	mov	fp, r6
 802797c:	45aa      	cmp	sl, r5
 802797e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027980:	dc33      	bgt.n	80279ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027982:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027984:	4650      	mov	r0, sl
 8027986:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802798a:	920b      	str	r2, [sp, #44]	; 0x2c
 802798c:	f7ea fa62 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027990:	4641      	mov	r1, r8
 8027992:	900c      	str	r0, [sp, #48]	; 0x30
 8027994:	a80b      	add	r0, sp, #44	; 0x2c
 8027996:	f7ea f925 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802799a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802799c:	2302      	movs	r3, #2
 802799e:	fb90 f0f3 	sdiv	r0, r0, r3
 80279a2:	eb00 0b02 	add.w	fp, r0, r2
 80279a6:	4650      	mov	r0, sl
 80279a8:	f7ff fc9a 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80279ac:	4649      	mov	r1, r9
 80279ae:	900d      	str	r0, [sp, #52]	; 0x34
 80279b0:	a80b      	add	r0, sp, #44	; 0x2c
 80279b2:	f7ea f917 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80279b6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80279b8:	2302      	movs	r3, #2
 80279ba:	4659      	mov	r1, fp
 80279bc:	fb90 f0f3 	sdiv	r0, r0, r3
 80279c0:	1a12      	subs	r2, r2, r0
 80279c2:	a80e      	add	r0, sp, #56	; 0x38
 80279c4:	46d3      	mov	fp, sl
 80279c6:	f7ff fc14 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80279ca:	44ba      	add	sl, r7
 80279cc:	e7d6      	b.n	802797c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 80279ce:	fb93 f3f2 	sdiv	r3, r3, r2
 80279d2:	e768      	b.n	80278a6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 80279d4:	fb9a f2f7 	sdiv	r2, sl, r7
 80279d8:	fb07 a212 	mls	r2, r7, r2, sl
 80279dc:	1aba      	subs	r2, r7, r2
 80279de:	fb92 f1f7 	sdiv	r1, r2, r7
 80279e2:	fb07 2211 	mls	r2, r7, r1, r2
 80279e6:	4492      	add	sl, r2
 80279e8:	e7c7      	b.n	802797a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 80279ea:	45ab      	cmp	fp, r5
 80279ec:	da23      	bge.n	8027a36 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 80279ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80279f0:	4628      	mov	r0, r5
 80279f2:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80279f6:	920b      	str	r2, [sp, #44]	; 0x2c
 80279f8:	f7ea fa2c 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80279fc:	4641      	mov	r1, r8
 80279fe:	900c      	str	r0, [sp, #48]	; 0x30
 8027a00:	a80b      	add	r0, sp, #44	; 0x2c
 8027a02:	f7ea f8ef 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a06:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027a08:	f04f 0a02 	mov.w	sl, #2
 8027a0c:	fb90 f0fa 	sdiv	r0, r0, sl
 8027a10:	4403      	add	r3, r0
 8027a12:	4628      	mov	r0, r5
 8027a14:	9301      	str	r3, [sp, #4]
 8027a16:	f7ff fc63 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027a1a:	4649      	mov	r1, r9
 8027a1c:	900d      	str	r0, [sp, #52]	; 0x34
 8027a1e:	a80b      	add	r0, sp, #44	; 0x2c
 8027a20:	f7ea f8e0 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a24:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027a26:	9b01      	ldr	r3, [sp, #4]
 8027a28:	fb90 f0fa 	sdiv	r0, r0, sl
 8027a2c:	4619      	mov	r1, r3
 8027a2e:	1a12      	subs	r2, r2, r0
 8027a30:	a80e      	add	r0, sp, #56	; 0x38
 8027a32:	f7ff fbde 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027a36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027a38:	b99b      	cbnz	r3, 8027a62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8027a3a:	1bad      	subs	r5, r5, r6
 8027a3c:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027a40:	da04      	bge.n	8027a4c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027a42:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027a46:	a80e      	add	r0, sp, #56	; 0x38
 8027a48:	f7ff fbd3 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027a4c:	21ff      	movs	r1, #255	; 0xff
 8027a4e:	a80e      	add	r0, sp, #56	; 0x38
 8027a50:	f7ff fabe 	bl	8026fd0 <_ZN8touchgfx6Canvas6renderEh>
 8027a54:	4604      	mov	r4, r0
 8027a56:	4b8a      	ldr	r3, [pc, #552]	; (8027c80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027a58:	930e      	str	r3, [sp, #56]	; 0x38
 8027a5a:	a816      	add	r0, sp, #88	; 0x58
 8027a5c:	f7eb fd2e 	bl	80134bc <_ZN8touchgfx7OutlineD1Ev>
 8027a60:	e716      	b.n	8027890 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8027a62:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8027a66:	429a      	cmp	r2, r3
 8027a68:	f0c0 8107 	bcc.w	8027c7a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8027a6c:	1bab      	subs	r3, r5, r6
 8027a6e:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027a72:	9301      	str	r3, [sp, #4]
 8027a74:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027a78:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8027a7c:	da43      	bge.n	8027b06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027a7e:	4628      	mov	r0, r5
 8027a80:	f7ea f9e8 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027a84:	4649      	mov	r1, r9
 8027a86:	900d      	str	r0, [sp, #52]	; 0x34
 8027a88:	a809      	add	r0, sp, #36	; 0x24
 8027a8a:	f7ea f8ab 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a8e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027a90:	18c3      	adds	r3, r0, r3
 8027a92:	4628      	mov	r0, r5
 8027a94:	9303      	str	r3, [sp, #12]
 8027a96:	f7ff fc23 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027a9a:	4649      	mov	r1, r9
 8027a9c:	900d      	str	r0, [sp, #52]	; 0x34
 8027a9e:	a809      	add	r0, sp, #36	; 0x24
 8027aa0:	f7ea f8a0 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027aa4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027aa6:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8027aaa:	1a1b      	subs	r3, r3, r0
 8027aac:	9302      	str	r3, [sp, #8]
 8027aae:	9204      	str	r2, [sp, #16]
 8027ab0:	eb0a 0305 	add.w	r3, sl, r5
 8027ab4:	9a04      	ldr	r2, [sp, #16]
 8027ab6:	4293      	cmp	r3, r2
 8027ab8:	da25      	bge.n	8027b06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027aba:	4618      	mov	r0, r3
 8027abc:	9306      	str	r3, [sp, #24]
 8027abe:	f7ea f9c9 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ac2:	4649      	mov	r1, r9
 8027ac4:	900d      	str	r0, [sp, #52]	; 0x34
 8027ac6:	a80a      	add	r0, sp, #40	; 0x28
 8027ac8:	f7ea f88c 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027acc:	9b03      	ldr	r3, [sp, #12]
 8027ace:	2202      	movs	r2, #2
 8027ad0:	fb90 f0f2 	sdiv	r0, r0, r2
 8027ad4:	18c3      	adds	r3, r0, r3
 8027ad6:	9305      	str	r3, [sp, #20]
 8027ad8:	9b06      	ldr	r3, [sp, #24]
 8027ada:	9207      	str	r2, [sp, #28]
 8027adc:	4618      	mov	r0, r3
 8027ade:	f7ff fbff 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ae2:	a92a      	add	r1, sp, #168	; 0xa8
 8027ae4:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027ae8:	a80a      	add	r0, sp, #40	; 0x28
 8027aea:	f7ea f87b 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027aee:	9b02      	ldr	r3, [sp, #8]
 8027af0:	9a07      	ldr	r2, [sp, #28]
 8027af2:	9905      	ldr	r1, [sp, #20]
 8027af4:	fb90 f2f2 	sdiv	r2, r0, r2
 8027af8:	a80e      	add	r0, sp, #56	; 0x38
 8027afa:	1a9a      	subs	r2, r3, r2
 8027afc:	f7ff fb79 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b00:	9b06      	ldr	r3, [sp, #24]
 8027b02:	4453      	add	r3, sl
 8027b04:	e7d6      	b.n	8027ab4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027b06:	45ab      	cmp	fp, r5
 8027b08:	da25      	bge.n	8027b56 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8027b0a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027b0e:	4628      	mov	r0, r5
 8027b10:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027b14:	930b      	str	r3, [sp, #44]	; 0x2c
 8027b16:	f7ea f99d 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b1a:	4641      	mov	r1, r8
 8027b1c:	900c      	str	r0, [sp, #48]	; 0x30
 8027b1e:	a80b      	add	r0, sp, #44	; 0x2c
 8027b20:	f7ea f860 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b24:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027b26:	2202      	movs	r2, #2
 8027b28:	fb90 f0f2 	sdiv	r0, r0, r2
 8027b2c:	eb00 0903 	add.w	r9, r0, r3
 8027b30:	4628      	mov	r0, r5
 8027b32:	9202      	str	r2, [sp, #8]
 8027b34:	f7ff fbd4 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b38:	a92a      	add	r1, sp, #168	; 0xa8
 8027b3a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027b3e:	a80b      	add	r0, sp, #44	; 0x2c
 8027b40:	f7ea f850 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b44:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027b46:	9a02      	ldr	r2, [sp, #8]
 8027b48:	fb90 f2f2 	sdiv	r2, r0, r2
 8027b4c:	4649      	mov	r1, r9
 8027b4e:	1a9a      	subs	r2, r3, r2
 8027b50:	a80e      	add	r0, sp, #56	; 0x38
 8027b52:	f7ff fb4e 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b56:	46d9      	mov	r9, fp
 8027b58:	2502      	movs	r5, #2
 8027b5a:	45b1      	cmp	r9, r6
 8027b5c:	db25      	blt.n	8027baa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8027b5e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027b62:	4648      	mov	r0, r9
 8027b64:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027b68:	930b      	str	r3, [sp, #44]	; 0x2c
 8027b6a:	f7ea f973 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b6e:	4641      	mov	r1, r8
 8027b70:	900c      	str	r0, [sp, #48]	; 0x30
 8027b72:	a80b      	add	r0, sp, #44	; 0x2c
 8027b74:	f7ea f836 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b78:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027b7a:	fb90 f0f5 	sdiv	r0, r0, r5
 8027b7e:	eb00 0b03 	add.w	fp, r0, r3
 8027b82:	4648      	mov	r0, r9
 8027b84:	f7ff fbac 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b88:	a90d      	add	r1, sp, #52	; 0x34
 8027b8a:	900d      	str	r0, [sp, #52]	; 0x34
 8027b8c:	a80b      	add	r0, sp, #44	; 0x2c
 8027b8e:	f7ea f829 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b92:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027b94:	fb90 f0f5 	sdiv	r0, r0, r5
 8027b98:	4659      	mov	r1, fp
 8027b9a:	1a12      	subs	r2, r2, r0
 8027b9c:	a80e      	add	r0, sp, #56	; 0x38
 8027b9e:	46cb      	mov	fp, r9
 8027ba0:	f7ff fb27 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027ba4:	eba9 0907 	sub.w	r9, r9, r7
 8027ba8:	e7d7      	b.n	8027b5a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8027baa:	455e      	cmp	r6, fp
 8027bac:	da22      	bge.n	8027bf4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8027bae:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027bb2:	4630      	mov	r0, r6
 8027bb4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027bb8:	930b      	str	r3, [sp, #44]	; 0x2c
 8027bba:	f7ea f94b 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027bbe:	4641      	mov	r1, r8
 8027bc0:	900c      	str	r0, [sp, #48]	; 0x30
 8027bc2:	a80b      	add	r0, sp, #44	; 0x2c
 8027bc4:	f7ea f80e 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bc8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8027bca:	2502      	movs	r5, #2
 8027bcc:	fb90 f0f5 	sdiv	r0, r0, r5
 8027bd0:	4407      	add	r7, r0
 8027bd2:	4630      	mov	r0, r6
 8027bd4:	f7ff fb84 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027bd8:	a92a      	add	r1, sp, #168	; 0xa8
 8027bda:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027bde:	a80b      	add	r0, sp, #44	; 0x2c
 8027be0:	f7ea f800 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027be4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027be6:	fb90 f0f5 	sdiv	r0, r0, r5
 8027bea:	4639      	mov	r1, r7
 8027bec:	1a12      	subs	r2, r2, r0
 8027bee:	a80e      	add	r0, sp, #56	; 0x38
 8027bf0:	f7ff faff 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027bf4:	9b01      	ldr	r3, [sp, #4]
 8027bf6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027bfa:	f6bf af27 	bge.w	8027a4c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027bfe:	4630      	mov	r0, r6
 8027c00:	f7ea f928 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c04:	ad2a      	add	r5, sp, #168	; 0xa8
 8027c06:	f04f 0b02 	mov.w	fp, #2
 8027c0a:	f845 0d74 	str.w	r0, [r5, #-116]!
 8027c0e:	a809      	add	r0, sp, #36	; 0x24
 8027c10:	4629      	mov	r1, r5
 8027c12:	f7e9 ffe7 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c16:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027c18:	eb00 0903 	add.w	r9, r0, r3
 8027c1c:	4630      	mov	r0, r6
 8027c1e:	f7ff fb5f 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c22:	4629      	mov	r1, r5
 8027c24:	900d      	str	r0, [sp, #52]	; 0x34
 8027c26:	a809      	add	r0, sp, #36	; 0x24
 8027c28:	f7e9 ffdc 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c2c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027c2e:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027c32:	eba3 0800 	sub.w	r8, r3, r0
 8027c36:	4454      	add	r4, sl
 8027c38:	42a6      	cmp	r6, r4
 8027c3a:	f77f af07 	ble.w	8027a4c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027c3e:	4620      	mov	r0, r4
 8027c40:	f7ea f908 	bl	8011e54 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c44:	4629      	mov	r1, r5
 8027c46:	900d      	str	r0, [sp, #52]	; 0x34
 8027c48:	a80a      	add	r0, sp, #40	; 0x28
 8027c4a:	f7e9 ffcb 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c4e:	fb90 f0fb 	sdiv	r0, r0, fp
 8027c52:	eb00 0709 	add.w	r7, r0, r9
 8027c56:	4620      	mov	r0, r4
 8027c58:	f7ff fb42 	bl	80272e0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c5c:	a90c      	add	r1, sp, #48	; 0x30
 8027c5e:	900c      	str	r0, [sp, #48]	; 0x30
 8027c60:	a80a      	add	r0, sp, #40	; 0x28
 8027c62:	f7e9 ffbf 	bl	8011be4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c66:	4639      	mov	r1, r7
 8027c68:	fb90 f2fb 	sdiv	r2, r0, fp
 8027c6c:	a80e      	add	r0, sp, #56	; 0x38
 8027c6e:	eba8 0202 	sub.w	r2, r8, r2
 8027c72:	f7ff fabe 	bl	80271f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027c76:	4454      	add	r4, sl
 8027c78:	e7de      	b.n	8027c38 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8027c7a:	2400      	movs	r4, #0
 8027c7c:	e6eb      	b.n	8027a56 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8027c7e:	bf00      	nop
 8027c80:	0802f720 	.word	0x0802f720

08027c84 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027c84:	b570      	push	{r4, r5, r6, lr}
 8027c86:	790b      	ldrb	r3, [r1, #4]
 8027c88:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8027c8c:	2b00      	cmp	r3, #0
 8027c8e:	bf0c      	ite	eq
 8027c90:	2301      	moveq	r3, #1
 8027c92:	2300      	movne	r3, #0
 8027c94:	4604      	mov	r4, r0
 8027c96:	460e      	mov	r6, r1
 8027c98:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8027c9c:	d109      	bne.n	8027cb2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8027c9e:	b14d      	cbz	r5, 8027cb4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027ca0:	7933      	ldrb	r3, [r6, #4]
 8027ca2:	2b01      	cmp	r3, #1
 8027ca4:	d10c      	bne.n	8027cc0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027ca6:	6823      	ldr	r3, [r4, #0]
 8027ca8:	4620      	mov	r0, r4
 8027caa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8027cac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027cb0:	4718      	bx	r3
 8027cb2:	b12d      	cbz	r5, 8027cc0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027cb4:	6823      	ldr	r3, [r4, #0]
 8027cb6:	4620      	mov	r0, r4
 8027cb8:	695b      	ldr	r3, [r3, #20]
 8027cba:	4798      	blx	r3
 8027cbc:	2d00      	cmp	r5, #0
 8027cbe:	d1ef      	bne.n	8027ca0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027cc0:	bd70      	pop	{r4, r5, r6, pc}

08027cc2 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027cc2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027cc6:	4770      	bx	lr

08027cc8 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027cc8:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8027ccc:	4770      	bx	lr

08027cce <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8027cce:	6802      	ldr	r2, [r0, #0]
 8027cd0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027cd4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027cd6:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027cda:	4710      	bx	r2

08027cdc <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8027cdc:	6802      	ldr	r2, [r0, #0]
 8027cde:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027ce2:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027ce4:	eef0 0a40 	vmov.f32	s1, s0
 8027ce8:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027cec:	4710      	bx	r2

08027cee <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8027cee:	6802      	ldr	r2, [r0, #0]
 8027cf0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027cf4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027cf6:	eeb0 1a40 	vmov.f32	s2, s0
 8027cfa:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027cfe:	4710      	bx	r2

08027d00 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027d00:	6802      	ldr	r2, [r0, #0]
 8027d02:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027d06:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027d08:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027d0c:	4710      	bx	r2

08027d0e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8027d0e:	6802      	ldr	r2, [r0, #0]
 8027d10:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027d14:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027d16:	eef0 0a40 	vmov.f32	s1, s0
 8027d1a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027d1e:	4710      	bx	r2

08027d20 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027d20:	6802      	ldr	r2, [r0, #0]
 8027d22:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027d26:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027d28:	eeb0 1a40 	vmov.f32	s2, s0
 8027d2c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027d30:	4710      	bx	r2

08027d32 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027d32:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027d36:	4770      	bx	lr

08027d38 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027d38:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8027d3c:	4770      	bx	lr

08027d3e <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8027d3e:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027d42:	4770      	bx	lr

08027d44 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027d44:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027d48:	4770      	bx	lr

08027d4a <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8027d4a:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8027d4e:	4770      	bx	lr

08027d50 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027d50:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027d54:	4770      	bx	lr

08027d56 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027d56:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8027d5a:	4770      	bx	lr

08027d5c <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8027d5c:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8027d60:	4770      	bx	lr

08027d62 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8027d62:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8027d66:	4770      	bx	lr

08027d68 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8027d68:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8027d6c:	4770      	bx	lr

08027d6e <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8027d6e:	ee07 2a90 	vmov	s15, r2
 8027d72:	6803      	ldr	r3, [r0, #0]
 8027d74:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027d78:	ee07 1a90 	vmov	s15, r1
 8027d7c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027d80:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027d84:	4718      	bx	r3

08027d86 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027d86:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8027d8a:	4770      	bx	lr

08027d8c <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8027d8c:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027d90:	4770      	bx	lr

08027d92 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027d92:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027d96:	4770      	bx	lr

08027d98 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027d98:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8027d9c:	4770      	bx	lr

08027d9e <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8027d9e:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027da2:	4770      	bx	lr

08027da4 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027da4:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027da8:	4770      	bx	lr

08027daa <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8027daa:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8027dae:	4770      	bx	lr

08027db0 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027db0:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027db4:	4770      	bx	lr

08027db6 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027db6:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8027dba:	4770      	bx	lr

08027dbc <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8027dbc:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027dc0:	4770      	bx	lr

08027dc2 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027dc2:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027dc6:	4770      	bx	lr

08027dc8 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027dc8:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8027dcc:	4770      	bx	lr

08027dce <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8027dce:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027dd2:	4770      	bx	lr

08027dd4 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027dd4:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027dd8:	4770      	bx	lr

08027dda <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8027dda:	b510      	push	{r4, lr}
 8027ddc:	ed2d 8b04 	vpush	{d8-d9}
 8027de0:	6803      	ldr	r3, [r0, #0]
 8027de2:	4604      	mov	r4, r0
 8027de4:	699b      	ldr	r3, [r3, #24]
 8027de6:	eeb0 8a40 	vmov.f32	s16, s0
 8027dea:	eef0 8a60 	vmov.f32	s17, s1
 8027dee:	eeb0 9a41 	vmov.f32	s18, s2
 8027df2:	4798      	blx	r3
 8027df4:	6823      	ldr	r3, [r4, #0]
 8027df6:	4620      	mov	r0, r4
 8027df8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8027dfa:	eeb0 1a49 	vmov.f32	s2, s18
 8027dfe:	eef0 0a68 	vmov.f32	s1, s17
 8027e02:	eeb0 0a48 	vmov.f32	s0, s16
 8027e06:	4798      	blx	r3
 8027e08:	ecbd 8b04 	vpop	{d8-d9}
 8027e0c:	6823      	ldr	r3, [r4, #0]
 8027e0e:	4620      	mov	r0, r4
 8027e10:	699b      	ldr	r3, [r3, #24]
 8027e12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027e16:	4718      	bx	r3

08027e18 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027e18:	b510      	push	{r4, lr}
 8027e1a:	ed2d 8b02 	vpush	{d8}
 8027e1e:	6803      	ldr	r3, [r0, #0]
 8027e20:	4604      	mov	r4, r0
 8027e22:	699b      	ldr	r3, [r3, #24]
 8027e24:	eeb0 8a40 	vmov.f32	s16, s0
 8027e28:	4798      	blx	r3
 8027e2a:	6823      	ldr	r3, [r4, #0]
 8027e2c:	4620      	mov	r0, r4
 8027e2e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027e32:	eeb0 0a48 	vmov.f32	s0, s16
 8027e36:	4798      	blx	r3
 8027e38:	ecbd 8b02 	vpop	{d8}
 8027e3c:	6823      	ldr	r3, [r4, #0]
 8027e3e:	4620      	mov	r0, r4
 8027e40:	699b      	ldr	r3, [r3, #24]
 8027e42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027e46:	4718      	bx	r3

08027e48 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8027e48:	2200      	movs	r2, #0
 8027e4a:	8002      	strh	r2, [r0, #0]
 8027e4c:	8042      	strh	r2, [r0, #2]
 8027e4e:	8082      	strh	r2, [r0, #4]
 8027e50:	80c2      	strh	r2, [r0, #6]
 8027e52:	4770      	bx	lr

08027e54 <_ZN8touchgfx13TextureMapperD1Ev>:
 8027e54:	4770      	bx	lr

08027e56 <_ZN8touchgfx13TextureMapperD0Ev>:
 8027e56:	b510      	push	{r4, lr}
 8027e58:	2190      	movs	r1, #144	; 0x90
 8027e5a:	4604      	mov	r4, r0
 8027e5c:	f001 ff3f 	bl	8029cde <_ZdlPvj>
 8027e60:	4620      	mov	r0, r4
 8027e62:	bd10      	pop	{r4, pc}

08027e64 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8027e64:	b538      	push	{r3, r4, r5, lr}
 8027e66:	2500      	movs	r5, #0
 8027e68:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8027e6c:	2301      	movs	r3, #1
 8027e6e:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8027e72:	4b1f      	ldr	r3, [pc, #124]	; (8027ef0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8027e74:	8085      	strh	r5, [r0, #4]
 8027e76:	80c5      	strh	r5, [r0, #6]
 8027e78:	8105      	strh	r5, [r0, #8]
 8027e7a:	8145      	strh	r5, [r0, #10]
 8027e7c:	8185      	strh	r5, [r0, #12]
 8027e7e:	81c5      	strh	r5, [r0, #14]
 8027e80:	8205      	strh	r5, [r0, #16]
 8027e82:	8245      	strh	r5, [r0, #18]
 8027e84:	61c5      	str	r5, [r0, #28]
 8027e86:	8405      	strh	r5, [r0, #32]
 8027e88:	8445      	strh	r5, [r0, #34]	; 0x22
 8027e8a:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8027e8e:	6003      	str	r3, [r0, #0]
 8027e90:	880b      	ldrh	r3, [r1, #0]
 8027e92:	84c3      	strh	r3, [r0, #38]	; 0x26
 8027e94:	23ff      	movs	r3, #255	; 0xff
 8027e96:	4604      	mov	r4, r0
 8027e98:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8027e9c:	f7eb f99f 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027ea0:	4b14      	ldr	r3, [pc, #80]	; (8027ef4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8027ea2:	6023      	str	r3, [r4, #0]
 8027ea4:	2300      	movs	r3, #0
 8027ea6:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8027eaa:	4913      	ldr	r1, [pc, #76]	; (8027ef8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8027eac:	62e3      	str	r3, [r4, #44]	; 0x2c
 8027eae:	6323      	str	r3, [r4, #48]	; 0x30
 8027eb0:	6363      	str	r3, [r4, #52]	; 0x34
 8027eb2:	63a3      	str	r3, [r4, #56]	; 0x38
 8027eb4:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027eb6:	6463      	str	r3, [r4, #68]	; 0x44
 8027eb8:	64a3      	str	r3, [r4, #72]	; 0x48
 8027eba:	6523      	str	r3, [r4, #80]	; 0x50
 8027ebc:	6563      	str	r3, [r4, #84]	; 0x54
 8027ebe:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027ec0:	6623      	str	r3, [r4, #96]	; 0x60
 8027ec2:	66a3      	str	r3, [r4, #104]	; 0x68
 8027ec4:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027ec6:	6763      	str	r3, [r4, #116]	; 0x74
 8027ec8:	67a3      	str	r3, [r4, #120]	; 0x78
 8027eca:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8027ece:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8027ed2:	230c      	movs	r3, #12
 8027ed4:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027ed8:	6422      	str	r2, [r4, #64]	; 0x40
 8027eda:	64e1      	str	r1, [r4, #76]	; 0x4c
 8027edc:	65a1      	str	r1, [r4, #88]	; 0x58
 8027ede:	6662      	str	r2, [r4, #100]	; 0x64
 8027ee0:	6722      	str	r2, [r4, #112]	; 0x70
 8027ee2:	67e2      	str	r2, [r4, #124]	; 0x7c
 8027ee4:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8027ee8:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8027eec:	4620      	mov	r0, r4
 8027eee:	bd38      	pop	{r3, r4, r5, pc}
 8027ef0:	0802f1c8 	.word	0x0802f1c8
 8027ef4:	0802f7ac 	.word	0x0802f7ac
 8027ef8:	447a0000 	.word	0x447a0000

08027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8027efc:	b570      	push	{r4, r5, r6, lr}
 8027efe:	ed2d 8b04 	vpush	{d8-d9}
 8027f02:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8027f06:	add0      	add	r5, sp, #832	; 0x340
 8027f08:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8027f0a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8027f0e:	4604      	mov	r4, r0
 8027f10:	4628      	mov	r0, r5
 8027f12:	f7f1 fa7f 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027f16:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8027f18:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8027f1c:	4606      	mov	r6, r0
 8027f1e:	4628      	mov	r0, r5
 8027f20:	f7f1 faac 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027f24:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8027f28:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8027f2c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8027f2e:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8027f32:	9312      	str	r3, [sp, #72]	; 0x48
 8027f34:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027f38:	1c72      	adds	r2, r6, #1
 8027f3a:	3001      	adds	r0, #1
 8027f3c:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8027f40:	ee07 2a90 	vmov	s15, r2
 8027f44:	ee06 0a90 	vmov	s13, r0
 8027f48:	ee36 6a47 	vsub.f32	s12, s12, s14
 8027f4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027f50:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8027f54:	ee77 7a86 	vadd.f32	s15, s15, s12
 8027f58:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8027f5c:	9316      	str	r3, [sp, #88]	; 0x58
 8027f5e:	931a      	str	r3, [sp, #104]	; 0x68
 8027f60:	931e      	str	r3, [sp, #120]	; 0x78
 8027f62:	2300      	movs	r3, #0
 8027f64:	9320      	str	r3, [sp, #128]	; 0x80
 8027f66:	9321      	str	r3, [sp, #132]	; 0x84
 8027f68:	9322      	str	r3, [sp, #136]	; 0x88
 8027f6a:	9324      	str	r3, [sp, #144]	; 0x90
 8027f6c:	9325      	str	r3, [sp, #148]	; 0x94
 8027f6e:	9326      	str	r3, [sp, #152]	; 0x98
 8027f70:	9328      	str	r3, [sp, #160]	; 0xa0
 8027f72:	9329      	str	r3, [sp, #164]	; 0xa4
 8027f74:	932a      	str	r3, [sp, #168]	; 0xa8
 8027f76:	932c      	str	r3, [sp, #176]	; 0xb0
 8027f78:	932d      	str	r3, [sp, #180]	; 0xb4
 8027f7a:	932e      	str	r3, [sp, #184]	; 0xb8
 8027f7c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8027f80:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8027f84:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027f88:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027f8c:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8027f90:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8027f94:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8027f98:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8027f9c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8027fa0:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8027fa4:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8027fa8:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8027fac:	a830      	add	r0, sp, #192	; 0xc0
 8027fae:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8027fb2:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8027fb6:	f000 fc43 	bl	8028840 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027fba:	eeb1 0a49 	vneg.f32	s0, s18
 8027fbe:	a830      	add	r0, sp, #192	; 0xc0
 8027fc0:	f000 fd12 	bl	80289e8 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027fc4:	eeb1 0a68 	vneg.f32	s0, s17
 8027fc8:	f000 fd1c 	bl	8028a04 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027fcc:	eeb1 0a48 	vneg.f32	s0, s16
 8027fd0:	f000 fd27 	bl	8028a22 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027fd4:	a840      	add	r0, sp, #256	; 0x100
 8027fd6:	f000 fc33 	bl	8028840 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027fda:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8027fde:	a840      	add	r0, sp, #256	; 0x100
 8027fe0:	f000 fc86 	bl	80288f0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8027fe4:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8027fe8:	f000 fcac 	bl	8028944 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8027fec:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8027ff0:	f000 fcd1 	bl	8028996 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8027ff4:	a850      	add	r0, sp, #320	; 0x140
 8027ff6:	f000 fc23 	bl	8028840 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027ffa:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027ffe:	a850      	add	r0, sp, #320	; 0x140
 8028000:	f000 fd1e 	bl	8028a40 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8028004:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028008:	f000 fd26 	bl	8028a58 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802800c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028010:	f000 fd2f 	bl	8028a72 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8028014:	a860      	add	r0, sp, #384	; 0x180
 8028016:	f000 fc13 	bl	8028840 <_ZN8touchgfx9Matrix4x4C1Ev>
 802801a:	eeb0 0a49 	vmov.f32	s0, s18
 802801e:	a860      	add	r0, sp, #384	; 0x180
 8028020:	f000 fce2 	bl	80289e8 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028024:	eeb0 0a68 	vmov.f32	s0, s17
 8028028:	f000 fcec 	bl	8028a04 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802802c:	eeb0 0a48 	vmov.f32	s0, s16
 8028030:	f000 fcf7 	bl	8028a22 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028034:	aa50      	add	r2, sp, #320	; 0x140
 8028036:	a960      	add	r1, sp, #384	; 0x180
 8028038:	a8b0      	add	r0, sp, #704	; 0x2c0
 802803a:	f000 fc1b 	bl	8028874 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802803e:	4628      	mov	r0, r5
 8028040:	aa40      	add	r2, sp, #256	; 0x100
 8028042:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028044:	f000 fc16 	bl	8028874 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028048:	4629      	mov	r1, r5
 802804a:	aa30      	add	r2, sp, #192	; 0xc0
 802804c:	a870      	add	r0, sp, #448	; 0x1c0
 802804e:	f000 fc11 	bl	8028874 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028052:	a880      	add	r0, sp, #512	; 0x200
 8028054:	f000 fbf4 	bl	8028840 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028058:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802805c:	a880      	add	r0, sp, #512	; 0x200
 802805e:	eeb1 0a40 	vneg.f32	s0, s0
 8028062:	f000 fcc1 	bl	80289e8 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028066:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802806a:	a880      	add	r0, sp, #512	; 0x200
 802806c:	eeb1 0a40 	vneg.f32	s0, s0
 8028070:	f000 fcc8 	bl	8028a04 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028074:	a890      	add	r0, sp, #576	; 0x240
 8028076:	f000 fbe3 	bl	8028840 <_ZN8touchgfx9Matrix4x4C1Ev>
 802807a:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802807e:	a890      	add	r0, sp, #576	; 0x240
 8028080:	f000 fc26 	bl	80288d0 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028084:	a8a0      	add	r0, sp, #640	; 0x280
 8028086:	f000 fbdb 	bl	8028840 <_ZN8touchgfx9Matrix4x4C1Ev>
 802808a:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802808e:	a8a0      	add	r0, sp, #640	; 0x280
 8028090:	f000 fcaa 	bl	80289e8 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028094:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028098:	f000 fcb4 	bl	8028a04 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802809c:	aa90      	add	r2, sp, #576	; 0x240
 802809e:	a9a0      	add	r1, sp, #640	; 0x280
 80280a0:	a8b0      	add	r0, sp, #704	; 0x2c0
 80280a2:	f000 fbe7 	bl	8028874 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80280a6:	4628      	mov	r0, r5
 80280a8:	aa80      	add	r2, sp, #512	; 0x200
 80280aa:	a9b0      	add	r1, sp, #704	; 0x2c0
 80280ac:	f000 fbe2 	bl	8028874 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80280b0:	4629      	mov	r1, r5
 80280b2:	aa70      	add	r2, sp, #448	; 0x1c0
 80280b4:	4668      	mov	r0, sp
 80280b6:	466d      	mov	r5, sp
 80280b8:	f000 fbdc 	bl	8028874 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80280bc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80280be:	ae70      	add	r6, sp, #448	; 0x1c0
 80280c0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80280c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80280c4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80280c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80280c8:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80280ca:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80280ce:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80280d2:	2500      	movs	r5, #0
 80280d4:	0129      	lsls	r1, r5, #4
 80280d6:	ab20      	add	r3, sp, #128	; 0x80
 80280d8:	185e      	adds	r6, r3, r1
 80280da:	ab10      	add	r3, sp, #64	; 0x40
 80280dc:	4419      	add	r1, r3
 80280de:	a870      	add	r0, sp, #448	; 0x1c0
 80280e0:	f000 fb7e 	bl	80287e0 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 80280e4:	3501      	adds	r5, #1
 80280e6:	2d04      	cmp	r5, #4
 80280e8:	ed86 0a00 	vstr	s0, [r6]
 80280ec:	edc6 0a01 	vstr	s1, [r6, #4]
 80280f0:	ed86 1a02 	vstr	s2, [r6, #8]
 80280f4:	edc6 1a03 	vstr	s3, [r6, #12]
 80280f8:	d1ec      	bne.n	80280d4 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80280fa:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80280fe:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8028102:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8028106:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802810a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802810e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028112:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8028116:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802811a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802811e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028122:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8028126:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802812a:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802812e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028132:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8028136:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802813a:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802813e:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8028142:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028146:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802814a:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802814e:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8028152:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028156:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802815a:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802815e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028162:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028166:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802816a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802816e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028172:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028176:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802817a:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802817e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028182:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8028186:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802818a:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802818e:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028192:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8028196:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802819a:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802819e:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80281a2:	ecbd 8b04 	vpop	{d8-d9}
 80281a6:	bd70      	pop	{r4, r5, r6, pc}

080281a8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80281a8:	b510      	push	{r4, lr}
 80281aa:	4604      	mov	r4, r0
 80281ac:	f7eb f817 	bl	80131de <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80281b0:	4620      	mov	r0, r4
 80281b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80281b6:	f7ff bea1 	b.w	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080281ba <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 80281ba:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 80281be:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 80281c2:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 80281c6:	f7ff be99 	b.w	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080281ca <_ZN8touchgfx13TextureMapper8setScaleEf>:
 80281ca:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 80281ce:	f7ff be95 	b.w	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080281d2 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 80281d2:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 80281d6:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 80281da:	f7ff be8f 	b.w	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080281de <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 80281de:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80281e2:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80281e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80281ea:	bfd8      	it	le
 80281ec:	eeb0 0a67 	vmovle.f32	s0, s15
 80281f0:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 80281f4:	f7ff be82 	b.w	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080281f8 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80281f8:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 80281fc:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028200:	f7ff be7c 	b.w	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028204 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028204:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028208:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802820c:	f7ff be76 	b.w	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028210 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8028210:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028214:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028218:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802821c:	f7ff be6e 	b.w	8027efc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028220 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8028220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028224:	ed2d 8b04 	vpush	{d8-d9}
 8028228:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802822c:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8028230:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8028234:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8028238:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802823c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028240:	bf54      	ite	pl
 8028242:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028246:	eeb0 0a48 	vmovmi.f32	s0, s16
 802824a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802824e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028252:	bfd8      	it	le
 8028254:	eeb0 0a49 	vmovle.f32	s0, s18
 8028258:	eef4 8ac0 	vcmpe.f32	s17, s0
 802825c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028260:	bfd8      	it	le
 8028262:	eeb0 0a68 	vmovle.f32	s0, s17
 8028266:	460c      	mov	r4, r1
 8028268:	4607      	mov	r7, r0
 802826a:	f001 ff2b 	bl	802a0c4 <floorf>
 802826e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028272:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028276:	bf58      	it	pl
 8028278:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802827c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028280:	bf56      	itet	pl
 8028282:	ee10 3a10 	vmovpl	r3, s0
 8028286:	2600      	movmi	r6, #0
 8028288:	b21e      	sxthpl	r6, r3
 802828a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802828e:	bfd8      	it	le
 8028290:	eeb0 8a69 	vmovle.f32	s16, s19
 8028294:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028298:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802829c:	bf58      	it	pl
 802829e:	eeb0 8a49 	vmovpl.f32	s16, s18
 80282a2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80282a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282aa:	bf54      	ite	pl
 80282ac:	eeb0 0a68 	vmovpl.f32	s0, s17
 80282b0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80282b4:	f001 fec4 	bl	802a040 <ceilf>
 80282b8:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80282bc:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 80282c0:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 80282c4:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 80282c8:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 80282cc:	ee07 8a90 	vmov	s15, r8
 80282d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80282d4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80282d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282dc:	bfd8      	it	le
 80282de:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80282e2:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80282e6:	bfdc      	itt	le
 80282e8:	ee10 3a10 	vmovle	r3, s0
 80282ec:	fa0f f883 	sxthle.w	r8, r3
 80282f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282f4:	bf54      	ite	pl
 80282f6:	eeb0 0a69 	vmovpl.f32	s0, s19
 80282fa:	eeb0 0a48 	vmovmi.f32	s0, s16
 80282fe:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028302:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028306:	bfd8      	it	le
 8028308:	eeb0 0a49 	vmovle.f32	s0, s18
 802830c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028310:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028314:	bfd8      	it	le
 8028316:	eeb0 0a68 	vmovle.f32	s0, s17
 802831a:	f001 fed3 	bl	802a0c4 <floorf>
 802831e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028326:	bf58      	it	pl
 8028328:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802832c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028330:	bf56      	itet	pl
 8028332:	ee10 3a10 	vmovpl	r3, s0
 8028336:	2500      	movmi	r5, #0
 8028338:	b21d      	sxthpl	r5, r3
 802833a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802833e:	bfd8      	it	le
 8028340:	eeb0 8a69 	vmovle.f32	s16, s19
 8028344:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028348:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802834c:	bf58      	it	pl
 802834e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028352:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028356:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802835a:	bf54      	ite	pl
 802835c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028360:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028364:	f001 fe6c 	bl	802a040 <ceilf>
 8028368:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802836c:	803e      	strh	r6, [r7, #0]
 802836e:	ee07 3a90 	vmov	s15, r3
 8028372:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028376:	807d      	strh	r5, [r7, #2]
 8028378:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802837c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028380:	bfd8      	it	le
 8028382:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028386:	eba8 0606 	sub.w	r6, r8, r6
 802838a:	bfdc      	itt	le
 802838c:	ee10 3a10 	vmovle	r3, s0
 8028390:	b21b      	sxthle	r3, r3
 8028392:	1b5d      	subs	r5, r3, r5
 8028394:	80be      	strh	r6, [r7, #4]
 8028396:	80fd      	strh	r5, [r7, #6]
 8028398:	ecbd 8b04 	vpop	{d8-d9}
 802839c:	4638      	mov	r0, r7
 802839e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080283a2 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80283a2:	b513      	push	{r0, r1, r4, lr}
 80283a4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80283a8:	4604      	mov	r4, r0
 80283aa:	b143      	cbz	r3, 80283be <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80283ac:	4601      	mov	r1, r0
 80283ae:	4668      	mov	r0, sp
 80283b0:	f7ff ff36 	bl	8028220 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80283b4:	6823      	ldr	r3, [r4, #0]
 80283b6:	4669      	mov	r1, sp
 80283b8:	691b      	ldr	r3, [r3, #16]
 80283ba:	4620      	mov	r0, r4
 80283bc:	4798      	blx	r3
 80283be:	b002      	add	sp, #8
 80283c0:	bd10      	pop	{r4, pc}

080283c2 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 80283c2:	4603      	mov	r3, r0
 80283c4:	3026      	adds	r0, #38	; 0x26
 80283c6:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80283ca:	b90b      	cbnz	r3, 80283d0 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 80283cc:	f7ee be38 	b.w	8017040 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 80283d0:	f7ee be46 	b.w	8017060 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

080283d4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 80283d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80283d8:	ed2d 8b04 	vpush	{d8-d9}
 80283dc:	4604      	mov	r4, r0
 80283de:	469b      	mov	fp, r3
 80283e0:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 80283e4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80283e8:	f9b1 6000 	ldrsh.w	r6, [r1]
 80283ec:	8888      	ldrh	r0, [r1, #4]
 80283ee:	b0b3      	sub	sp, #204	; 0xcc
 80283f0:	4430      	add	r0, r6
 80283f2:	b280      	uxth	r0, r0
 80283f4:	9206      	str	r2, [sp, #24]
 80283f6:	fa0f fe80 	sxth.w	lr, r0
 80283fa:	2200      	movs	r2, #0
 80283fc:	4596      	cmp	lr, r2
 80283fe:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8028402:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8028406:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802840a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802840c:	9211      	str	r2, [sp, #68]	; 0x44
 802840e:	f340 8129 	ble.w	8028664 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028412:	45b4      	cmp	ip, r6
 8028414:	f340 8126 	ble.w	8028664 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028418:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802841c:	88ca      	ldrh	r2, [r1, #6]
 802841e:	442a      	add	r2, r5
 8028420:	b292      	uxth	r2, r2
 8028422:	b211      	sxth	r1, r2
 8028424:	2900      	cmp	r1, #0
 8028426:	f340 811d 	ble.w	8028664 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802842a:	42ab      	cmp	r3, r5
 802842c:	f340 811a 	ble.w	8028664 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028430:	45f4      	cmp	ip, lr
 8028432:	bfb8      	it	lt
 8028434:	fa1f f08c 	uxthlt.w	r0, ip
 8028438:	428b      	cmp	r3, r1
 802843a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802843e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028442:	bfb8      	it	lt
 8028444:	b29a      	uxthlt	r2, r3
 8028446:	1b80      	subs	r0, r0, r6
 8028448:	1b52      	subs	r2, r2, r5
 802844a:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802844e:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8028452:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8028456:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802845a:	ab11      	add	r3, sp, #68	; 0x44
 802845c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028460:	6822      	ldr	r2, [r4, #0]
 8028462:	9307      	str	r3, [sp, #28]
 8028464:	ad13      	add	r5, sp, #76	; 0x4c
 8028466:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8028468:	e885 0003 	stmia.w	r5, {r0, r1}
 802846c:	4629      	mov	r1, r5
 802846e:	4620      	mov	r0, r4
 8028470:	4790      	blx	r2
 8028472:	4621      	mov	r1, r4
 8028474:	a815      	add	r0, sp, #84	; 0x54
 8028476:	f7ee fd3f 	bl	8016ef8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802847a:	a815      	add	r0, sp, #84	; 0x54
 802847c:	f7ed fa04 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028480:	9b07      	ldr	r3, [sp, #28]
 8028482:	1d26      	adds	r6, r4, #4
 8028484:	4618      	mov	r0, r3
 8028486:	4631      	mov	r1, r6
 8028488:	f7ed fa42 	bl	8015910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802848c:	4628      	mov	r0, r5
 802848e:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8028492:	f7ed f9f9 	bl	8015888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028496:	4628      	mov	r0, r5
 8028498:	f7f1 f8a8 	bl	80195ec <_ZNK8touchgfx6Bitmap7getDataEv>
 802849c:	9007      	str	r0, [sp, #28]
 802849e:	2800      	cmp	r0, #0
 80284a0:	f000 80db 	beq.w	802865a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80284a4:	f8db 2000 	ldr.w	r2, [fp]
 80284a8:	9209      	str	r2, [sp, #36]	; 0x24
 80284aa:	f8db 2004 	ldr.w	r2, [fp, #4]
 80284ae:	920a      	str	r2, [sp, #40]	; 0x28
 80284b0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80284b4:	920b      	str	r2, [sp, #44]	; 0x2c
 80284b6:	f8db 200c 	ldr.w	r2, [fp, #12]
 80284ba:	920c      	str	r2, [sp, #48]	; 0x30
 80284bc:	f8da 2000 	ldr.w	r2, [sl]
 80284c0:	920d      	str	r2, [sp, #52]	; 0x34
 80284c2:	f8da 2004 	ldr.w	r2, [sl, #4]
 80284c6:	920e      	str	r2, [sp, #56]	; 0x38
 80284c8:	f8da 2008 	ldr.w	r2, [sl, #8]
 80284cc:	920f      	str	r2, [sp, #60]	; 0x3c
 80284ce:	f8da 200c 	ldr.w	r2, [sl, #12]
 80284d2:	9210      	str	r2, [sp, #64]	; 0x40
 80284d4:	a90d      	add	r1, sp, #52	; 0x34
 80284d6:	4632      	mov	r2, r6
 80284d8:	a809      	add	r0, sp, #36	; 0x24
 80284da:	f7ed f9fd 	bl	80158d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80284de:	4632      	mov	r2, r6
 80284e0:	a90e      	add	r1, sp, #56	; 0x38
 80284e2:	a80a      	add	r0, sp, #40	; 0x28
 80284e4:	f7ed f9f8 	bl	80158d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80284e8:	4632      	mov	r2, r6
 80284ea:	a90f      	add	r1, sp, #60	; 0x3c
 80284ec:	a80b      	add	r0, sp, #44	; 0x2c
 80284ee:	f7ed f9f3 	bl	80158d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80284f2:	4632      	mov	r2, r6
 80284f4:	a910      	add	r1, sp, #64	; 0x40
 80284f6:	a80c      	add	r0, sp, #48	; 0x30
 80284f8:	f7ed f9ee 	bl	80158d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80284fc:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8028500:	edd7 4a00 	vldr	s9, [r7]
 8028504:	edd7 5a01 	vldr	s11, [r7, #4]
 8028508:	ed98 4a00 	vldr	s8, [r8]
 802850c:	ed98 5a01 	vldr	s10, [r8, #4]
 8028510:	ed99 9a00 	vldr	s18, [r9]
 8028514:	ed99 8a01 	vldr	s16, [r9, #4]
 8028518:	edd9 8a02 	vldr	s17, [r9, #8]
 802851c:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8028520:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8028524:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8028528:	eef0 6a67 	vmov.f32	s13, s15
 802852c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8028530:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8028534:	eeb0 7a67 	vmov.f32	s14, s15
 8028538:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802853c:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8028540:	eeb0 6a67 	vmov.f32	s12, s15
 8028544:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028548:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802854c:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8028550:	ee16 6a10 	vmov	r6, s12
 8028554:	eeb0 6a67 	vmov.f32	s12, s15
 8028558:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802855c:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8028560:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8028564:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8028568:	68ff      	ldr	r7, [r7, #12]
 802856a:	9624      	str	r6, [sp, #144]	; 0x90
 802856c:	ee16 0a10 	vmov	r0, s12
 8028570:	eeb0 6a67 	vmov.f32	s12, s15
 8028574:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028578:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802857c:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8028580:	ee16 1a10 	vmov	r1, s12
 8028584:	eeb0 6a67 	vmov.f32	s12, s15
 8028588:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802858c:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8028590:	ee16 2a10 	vmov	r2, s12
 8028594:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8028598:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802859c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80285a0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80285a4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80285a8:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80285ac:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80285b0:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80285b4:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80285b8:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80285bc:	922d      	str	r2, [sp, #180]	; 0xb4
 80285be:	4a2b      	ldr	r2, [pc, #172]	; (802866c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 80285c0:	9b06      	ldr	r3, [sp, #24]
 80285c2:	8812      	ldrh	r2, [r2, #0]
 80285c4:	9317      	str	r3, [sp, #92]	; 0x5c
 80285c6:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80285ca:	9b07      	ldr	r3, [sp, #28]
 80285cc:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80285d0:	4628      	mov	r0, r5
 80285d2:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80285d6:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80285da:	9218      	str	r2, [sp, #96]	; 0x60
 80285dc:	9319      	str	r3, [sp, #100]	; 0x64
 80285de:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 80285e2:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80285e6:	9731      	str	r7, [sp, #196]	; 0xc4
 80285e8:	f7f1 f830 	bl	801964c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80285ec:	901a      	str	r0, [sp, #104]	; 0x68
 80285ee:	4628      	mov	r0, r5
 80285f0:	f7f0 ff10 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80285f4:	901b      	str	r0, [sp, #108]	; 0x6c
 80285f6:	4628      	mov	r0, r5
 80285f8:	f7f0 ff40 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80285fc:	901c      	str	r0, [sp, #112]	; 0x70
 80285fe:	4628      	mov	r0, r5
 8028600:	f7f0 ff08 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028604:	eeb4 9a48 	vcmp.f32	s18, s16
 8028608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802860c:	901d      	str	r0, [sp, #116]	; 0x74
 802860e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8028612:	d107      	bne.n	8028624 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8028614:	eeb4 8a68 	vcmp.f32	s16, s17
 8028618:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802861c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8028620:	bf08      	it	eq
 8028622:	461e      	moveq	r6, r3
 8028624:	4b12      	ldr	r3, [pc, #72]	; (8028670 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8028626:	681b      	ldr	r3, [r3, #0]
 8028628:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802862c:	b10a      	cbz	r2, 8028632 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802862e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8028630:	b905      	cbnz	r5, 8028634 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8028632:	689d      	ldr	r5, [r3, #8]
 8028634:	682b      	ldr	r3, [r5, #0]
 8028636:	4620      	mov	r0, r4
 8028638:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802863a:	f7ff fec2 	bl	80283c2 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802863e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8028642:	9604      	str	r6, [sp, #16]
 8028644:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8028648:	ab13      	add	r3, sp, #76	; 0x4c
 802864a:	9301      	str	r3, [sp, #4]
 802864c:	ab15      	add	r3, sp, #84	; 0x54
 802864e:	9300      	str	r3, [sp, #0]
 8028650:	aa1e      	add	r2, sp, #120	; 0x78
 8028652:	ab19      	add	r3, sp, #100	; 0x64
 8028654:	a917      	add	r1, sp, #92	; 0x5c
 8028656:	4628      	mov	r0, r5
 8028658:	47b8      	blx	r7
 802865a:	b033      	add	sp, #204	; 0xcc
 802865c:	ecbd 8b04 	vpop	{d8-d9}
 8028660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028664:	2300      	movs	r3, #0
 8028666:	9312      	str	r3, [sp, #72]	; 0x48
 8028668:	e6f7      	b.n	802845a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802866a:	bf00      	nop
 802866c:	20012d9e 	.word	0x20012d9e
 8028670:	20012da4 	.word	0x20012da4

08028674 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8028674:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028678:	ed2d 8b02 	vpush	{d8}
 802867c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028680:	b098      	sub	sp, #96	; 0x60
 8028682:	4604      	mov	r4, r0
 8028684:	4688      	mov	r8, r1
 8028686:	2b00      	cmp	r3, #0
 8028688:	d077      	beq.n	802877a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802868a:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802868e:	4628      	mov	r0, r5
 8028690:	f7f0 fec0 	bl	8019414 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028694:	ee07 0a90 	vmov	s15, r0
 8028698:	4628      	mov	r0, r5
 802869a:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802869e:	f7f0 feed 	bl	801947c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80286a2:	4b4e      	ldr	r3, [pc, #312]	; (80287dc <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80286a4:	781b      	ldrb	r3, [r3, #0]
 80286a6:	ee07 0a90 	vmov	s15, r0
 80286aa:	2b01      	cmp	r3, #1
 80286ac:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80286b0:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80286b4:	d066      	beq.n	8028784 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80286b6:	eeb0 6a47 	vmov.f32	s12, s14
 80286ba:	ee17 3a10 	vmov	r3, s14
 80286be:	eeb0 4a48 	vmov.f32	s8, s16
 80286c2:	eeb0 7a48 	vmov.f32	s14, s16
 80286c6:	eef0 4a67 	vmov.f32	s9, s15
 80286ca:	eeb0 8a67 	vmov.f32	s16, s15
 80286ce:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 80286d2:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 80286d6:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 80286da:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 80286de:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 80286e2:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 80286e6:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80286e8:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80286ea:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80286ec:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80286f0:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80286f4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80286f8:	ee73 1a65 	vsub.f32	s3, s6, s11
 80286fc:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8028700:	ee32 1a45 	vsub.f32	s2, s4, s10
 8028704:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8028708:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802870c:	eee1 6a21 	vfma.f32	s13, s2, s3
 8028710:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8028714:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028718:	dd3d      	ble.n	8028796 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802871a:	ed8d 5a04 	vstr	s10, [sp, #16]
 802871e:	ed8d 2a05 	vstr	s4, [sp, #20]
 8028722:	edcd 2a06 	vstr	s5, [sp, #24]
 8028726:	f8cd c01c 	str.w	ip, [sp, #28]
 802872a:	edcd 5a08 	vstr	s11, [sp, #32]
 802872e:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8028732:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8028736:	970b      	str	r7, [sp, #44]	; 0x2c
 8028738:	960c      	str	r6, [sp, #48]	; 0x30
 802873a:	950d      	str	r5, [sp, #52]	; 0x34
 802873c:	920e      	str	r2, [sp, #56]	; 0x38
 802873e:	900f      	str	r0, [sp, #60]	; 0x3c
 8028740:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8028744:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8028748:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802874c:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8028750:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8028754:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8028758:	9316      	str	r3, [sp, #88]	; 0x58
 802875a:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802875e:	ab14      	add	r3, sp, #80	; 0x50
 8028760:	9303      	str	r3, [sp, #12]
 8028762:	ab10      	add	r3, sp, #64	; 0x40
 8028764:	9302      	str	r3, [sp, #8]
 8028766:	ab0c      	add	r3, sp, #48	; 0x30
 8028768:	9301      	str	r3, [sp, #4]
 802876a:	ab08      	add	r3, sp, #32
 802876c:	9300      	str	r3, [sp, #0]
 802876e:	2200      	movs	r2, #0
 8028770:	ab04      	add	r3, sp, #16
 8028772:	4641      	mov	r1, r8
 8028774:	4620      	mov	r0, r4
 8028776:	f7ff fe2d 	bl	80283d4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802877a:	b018      	add	sp, #96	; 0x60
 802877c:	ecbd 8b02 	vpop	{d8}
 8028780:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028784:	eeb0 6a48 	vmov.f32	s12, s16
 8028788:	eef0 4a47 	vmov.f32	s9, s14
 802878c:	ee17 3a90 	vmov	r3, s15
 8028790:	eeb0 4a67 	vmov.f32	s8, s15
 8028794:	e79b      	b.n	80286ce <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8028796:	ed8d 5a05 	vstr	s10, [sp, #20]
 802879a:	ed8d 2a04 	vstr	s4, [sp, #16]
 802879e:	f8cd c018 	str.w	ip, [sp, #24]
 80287a2:	edcd 2a07 	vstr	s5, [sp, #28]
 80287a6:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80287aa:	ed8d 3a08 	vstr	s6, [sp, #32]
 80287ae:	970a      	str	r7, [sp, #40]	; 0x28
 80287b0:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80287b4:	960d      	str	r6, [sp, #52]	; 0x34
 80287b6:	950c      	str	r5, [sp, #48]	; 0x30
 80287b8:	900e      	str	r0, [sp, #56]	; 0x38
 80287ba:	920f      	str	r2, [sp, #60]	; 0x3c
 80287bc:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80287c0:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80287c4:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80287c8:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80287cc:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 80287d0:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80287d4:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 80287d8:	9317      	str	r3, [sp, #92]	; 0x5c
 80287da:	e7c0      	b.n	802875e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 80287dc:	20012d9c 	.word	0x20012d9c

080287e0 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 80287e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80287e2:	b08d      	sub	sp, #52	; 0x34
 80287e4:	2300      	movs	r3, #0
 80287e6:	9304      	str	r3, [sp, #16]
 80287e8:	9305      	str	r3, [sp, #20]
 80287ea:	9306      	str	r3, [sp, #24]
 80287ec:	aa04      	add	r2, sp, #16
 80287ee:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80287f2:	9307      	str	r3, [sp, #28]
 80287f4:	f100 0640 	add.w	r6, r0, #64	; 0x40
 80287f8:	4613      	mov	r3, r2
 80287fa:	f101 0710 	add.w	r7, r1, #16
 80287fe:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802883c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8028802:	460c      	mov	r4, r1
 8028804:	4605      	mov	r5, r0
 8028806:	ecb4 7a01 	vldmia	r4!, {s14}
 802880a:	ecf5 6a01 	vldmia	r5!, {s13}
 802880e:	42bc      	cmp	r4, r7
 8028810:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028814:	d1f7      	bne.n	8028806 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8028816:	3010      	adds	r0, #16
 8028818:	42b0      	cmp	r0, r6
 802881a:	ece2 7a01 	vstmia	r2!, {s15}
 802881e:	d1ee      	bne.n	80287fe <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8028820:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8028822:	ac0c      	add	r4, sp, #48	; 0x30
 8028824:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8028828:	ed9d 0a08 	vldr	s0, [sp, #32]
 802882c:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8028830:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8028834:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8028838:	b00d      	add	sp, #52	; 0x34
 802883a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802883c:	00000000 	.word	0x00000000

08028840 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8028840:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8028870 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8028844:	2300      	movs	r3, #0
 8028846:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802884a:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802884e:	2200      	movs	r2, #0
 8028850:	4293      	cmp	r3, r2
 8028852:	f102 0201 	add.w	r2, r2, #1
 8028856:	bf14      	ite	ne
 8028858:	eef0 6a47 	vmovne.f32	s13, s14
 802885c:	eef0 6a67 	vmoveq.f32	s13, s15
 8028860:	2a04      	cmp	r2, #4
 8028862:	ece1 6a01 	vstmia	r1!, {s13}
 8028866:	d1f3      	bne.n	8028850 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8028868:	3301      	adds	r3, #1
 802886a:	2b04      	cmp	r3, #4
 802886c:	d1ed      	bne.n	802884a <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802886e:	4770      	bx	lr
 8028870:	00000000 	.word	0x00000000

08028874 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028874:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028878:	460c      	mov	r4, r1
 802887a:	4605      	mov	r5, r0
 802887c:	4690      	mov	r8, r2
 802887e:	f7ff ffdf 	bl	8028840 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028882:	4628      	mov	r0, r5
 8028884:	4621      	mov	r1, r4
 8028886:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802888a:	2300      	movs	r3, #0
 802888c:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80288cc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8028890:	eb08 0603 	add.w	r6, r8, r3
 8028894:	460f      	mov	r7, r1
 8028896:	2400      	movs	r4, #0
 8028898:	4632      	mov	r2, r6
 802889a:	ecf7 6a01 	vldmia	r7!, {s13}
 802889e:	ed92 7a00 	vldr	s14, [r2]
 80288a2:	3401      	adds	r4, #1
 80288a4:	2c04      	cmp	r4, #4
 80288a6:	f106 0610 	add.w	r6, r6, #16
 80288aa:	eee6 7a87 	vfma.f32	s15, s13, s14
 80288ae:	d1f3      	bne.n	8028898 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80288b0:	18c2      	adds	r2, r0, r3
 80288b2:	3304      	adds	r3, #4
 80288b4:	2b10      	cmp	r3, #16
 80288b6:	edc2 7a00 	vstr	s15, [r2]
 80288ba:	d1e7      	bne.n	802888c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80288bc:	3110      	adds	r1, #16
 80288be:	4561      	cmp	r1, ip
 80288c0:	f100 0010 	add.w	r0, r0, #16
 80288c4:	d1e1      	bne.n	802888a <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 80288c6:	4628      	mov	r0, r5
 80288c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80288cc:	00000000 	.word	0x00000000

080288d0 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 80288d0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80288d4:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80288d8:	f100 0320 	add.w	r3, r0, #32
 80288dc:	3030      	adds	r0, #48	; 0x30
 80288de:	ecf3 7a01 	vldmia	r3!, {s15}
 80288e2:	ee60 7a27 	vmul.f32	s15, s0, s15
 80288e6:	4283      	cmp	r3, r0
 80288e8:	edc3 7a03 	vstr	s15, [r3, #12]
 80288ec:	d1f7      	bne.n	80288de <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 80288ee:	4770      	bx	lr

080288f0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 80288f0:	b510      	push	{r4, lr}
 80288f2:	ed2d 8b02 	vpush	{d8}
 80288f6:	4604      	mov	r4, r0
 80288f8:	eef0 8a40 	vmov.f32	s17, s0
 80288fc:	f001 fb56 	bl	8029fac <sinf>
 8028900:	eeb0 8a40 	vmov.f32	s16, s0
 8028904:	eeb0 0a68 	vmov.f32	s0, s17
 8028908:	f001 fb04 	bl	8029f14 <cosf>
 802890c:	f104 0310 	add.w	r3, r4, #16
 8028910:	f104 0220 	add.w	r2, r4, #32
 8028914:	eeb1 6a48 	vneg.f32	s12, s16
 8028918:	edd3 7a04 	vldr	s15, [r3, #16]
 802891c:	edd3 6a00 	vldr	s13, [r3]
 8028920:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028924:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028928:	eea6 7a80 	vfma.f32	s14, s13, s0
 802892c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028930:	eca3 7a01 	vstmia	r3!, {s14}
 8028934:	429a      	cmp	r2, r3
 8028936:	edc3 7a03 	vstr	s15, [r3, #12]
 802893a:	d1ed      	bne.n	8028918 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802893c:	ecbd 8b02 	vpop	{d8}
 8028940:	4620      	mov	r0, r4
 8028942:	bd10      	pop	{r4, pc}

08028944 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8028944:	b510      	push	{r4, lr}
 8028946:	ed2d 8b02 	vpush	{d8}
 802894a:	4604      	mov	r4, r0
 802894c:	eef0 8a40 	vmov.f32	s17, s0
 8028950:	f001 fb2c 	bl	8029fac <sinf>
 8028954:	eeb0 8a40 	vmov.f32	s16, s0
 8028958:	eeb0 0a68 	vmov.f32	s0, s17
 802895c:	f001 fada 	bl	8029f14 <cosf>
 8028960:	4623      	mov	r3, r4
 8028962:	f104 0210 	add.w	r2, r4, #16
 8028966:	eeb1 6a48 	vneg.f32	s12, s16
 802896a:	edd3 7a08 	vldr	s15, [r3, #32]
 802896e:	edd3 6a00 	vldr	s13, [r3]
 8028972:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028976:	ee67 7a80 	vmul.f32	s15, s15, s0
 802897a:	eea6 7a80 	vfma.f32	s14, s13, s0
 802897e:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028982:	eca3 7a01 	vstmia	r3!, {s14}
 8028986:	429a      	cmp	r2, r3
 8028988:	edc3 7a07 	vstr	s15, [r3, #28]
 802898c:	d1ed      	bne.n	802896a <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802898e:	ecbd 8b02 	vpop	{d8}
 8028992:	4620      	mov	r0, r4
 8028994:	bd10      	pop	{r4, pc}

08028996 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028996:	b510      	push	{r4, lr}
 8028998:	ed2d 8b02 	vpush	{d8}
 802899c:	4604      	mov	r4, r0
 802899e:	eef0 8a40 	vmov.f32	s17, s0
 80289a2:	f001 fb03 	bl	8029fac <sinf>
 80289a6:	eeb0 8a40 	vmov.f32	s16, s0
 80289aa:	eeb0 0a68 	vmov.f32	s0, s17
 80289ae:	f001 fab1 	bl	8029f14 <cosf>
 80289b2:	4623      	mov	r3, r4
 80289b4:	f104 0210 	add.w	r2, r4, #16
 80289b8:	eeb1 6a48 	vneg.f32	s12, s16
 80289bc:	edd3 7a04 	vldr	s15, [r3, #16]
 80289c0:	edd3 6a00 	vldr	s13, [r3]
 80289c4:	ee26 7a27 	vmul.f32	s14, s12, s15
 80289c8:	ee67 7a80 	vmul.f32	s15, s15, s0
 80289cc:	eea6 7a80 	vfma.f32	s14, s13, s0
 80289d0:	eee6 7a88 	vfma.f32	s15, s13, s16
 80289d4:	eca3 7a01 	vstmia	r3!, {s14}
 80289d8:	429a      	cmp	r2, r3
 80289da:	edc3 7a03 	vstr	s15, [r3, #12]
 80289de:	d1ed      	bne.n	80289bc <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 80289e0:	ecbd 8b02 	vpop	{d8}
 80289e4:	4620      	mov	r0, r4
 80289e6:	bd10      	pop	{r4, pc}

080289e8 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 80289e8:	4603      	mov	r3, r0
 80289ea:	f100 0210 	add.w	r2, r0, #16
 80289ee:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 80289f2:	edd3 7a00 	vldr	s15, [r3]
 80289f6:	eee7 7a00 	vfma.f32	s15, s14, s0
 80289fa:	ece3 7a01 	vstmia	r3!, {s15}
 80289fe:	4293      	cmp	r3, r2
 8028a00:	d1f5      	bne.n	80289ee <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028a02:	4770      	bx	lr

08028a04 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028a04:	f100 0310 	add.w	r3, r0, #16
 8028a08:	f100 0220 	add.w	r2, r0, #32
 8028a0c:	ed93 7a08 	vldr	s14, [r3, #32]
 8028a10:	edd3 7a00 	vldr	s15, [r3]
 8028a14:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028a18:	ece3 7a01 	vstmia	r3!, {s15}
 8028a1c:	4293      	cmp	r3, r2
 8028a1e:	d1f5      	bne.n	8028a0c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8028a20:	4770      	bx	lr

08028a22 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8028a22:	f100 0320 	add.w	r3, r0, #32
 8028a26:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028a2a:	ed93 7a04 	vldr	s14, [r3, #16]
 8028a2e:	edd3 7a00 	vldr	s15, [r3]
 8028a32:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028a36:	ece3 7a01 	vstmia	r3!, {s15}
 8028a3a:	4293      	cmp	r3, r2
 8028a3c:	d1f5      	bne.n	8028a2a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8028a3e:	4770      	bx	lr

08028a40 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028a40:	4603      	mov	r3, r0
 8028a42:	f100 0210 	add.w	r2, r0, #16
 8028a46:	edd3 7a00 	vldr	s15, [r3]
 8028a4a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028a4e:	ece3 7a01 	vstmia	r3!, {s15}
 8028a52:	4293      	cmp	r3, r2
 8028a54:	d1f7      	bne.n	8028a46 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028a56:	4770      	bx	lr

08028a58 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028a58:	f100 0310 	add.w	r3, r0, #16
 8028a5c:	f100 0220 	add.w	r2, r0, #32
 8028a60:	edd3 7a00 	vldr	s15, [r3]
 8028a64:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028a68:	ece3 7a01 	vstmia	r3!, {s15}
 8028a6c:	4293      	cmp	r3, r2
 8028a6e:	d1f7      	bne.n	8028a60 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028a70:	4770      	bx	lr

08028a72 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028a72:	f100 0320 	add.w	r3, r0, #32
 8028a76:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028a7a:	edd3 7a00 	vldr	s15, [r3]
 8028a7e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028a82:	ece3 7a01 	vstmia	r3!, {s15}
 8028a86:	4293      	cmp	r3, r2
 8028a88:	d1f7      	bne.n	8028a7a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8028a8a:	4770      	bx	lr

08028a8c <arm_max_f32>:
 8028a8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028a90:	1e4f      	subs	r7, r1, #1
 8028a92:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028a96:	f100 0e04 	add.w	lr, r0, #4
 8028a9a:	edd0 7a00 	vldr	s15, [r0]
 8028a9e:	d058      	beq.n	8028b52 <arm_max_f32+0xc6>
 8028aa0:	3014      	adds	r0, #20
 8028aa2:	46c4      	mov	ip, r8
 8028aa4:	2604      	movs	r6, #4
 8028aa6:	2400      	movs	r4, #0
 8028aa8:	ed10 6a04 	vldr	s12, [r0, #-16]
 8028aac:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028ab0:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028ab4:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028ab8:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8028abc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ac0:	bfc8      	it	gt
 8028ac2:	eef0 7a46 	vmovgt.f32	s15, s12
 8028ac6:	f1a6 0503 	sub.w	r5, r6, #3
 8028aca:	eef4 7ae6 	vcmpe.f32	s15, s13
 8028ace:	bfc8      	it	gt
 8028ad0:	462c      	movgt	r4, r5
 8028ad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ad6:	bf48      	it	mi
 8028ad8:	eef0 7a66 	vmovmi.f32	s15, s13
 8028adc:	f1a6 0502 	sub.w	r5, r6, #2
 8028ae0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028ae4:	bf48      	it	mi
 8028ae6:	462c      	movmi	r4, r5
 8028ae8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028aec:	bf48      	it	mi
 8028aee:	eef0 7a47 	vmovmi.f32	s15, s14
 8028af2:	f106 35ff 	add.w	r5, r6, #4294967295
 8028af6:	eef4 7ae5 	vcmpe.f32	s15, s11
 8028afa:	bf48      	it	mi
 8028afc:	462c      	movmi	r4, r5
 8028afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b02:	bf48      	it	mi
 8028b04:	4634      	movmi	r4, r6
 8028b06:	bf48      	it	mi
 8028b08:	eef0 7a65 	vmovmi.f32	s15, s11
 8028b0c:	f1bc 0c01 	subs.w	ip, ip, #1
 8028b10:	f106 0604 	add.w	r6, r6, #4
 8028b14:	f100 0010 	add.w	r0, r0, #16
 8028b18:	d1c6      	bne.n	8028aa8 <arm_max_f32+0x1c>
 8028b1a:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8028b1e:	f017 0003 	ands.w	r0, r7, #3
 8028b22:	d018      	beq.n	8028b56 <arm_max_f32+0xca>
 8028b24:	1a08      	subs	r0, r1, r0
 8028b26:	ecbe 7a01 	vldmia	lr!, {s14}
 8028b2a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028b2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b32:	bfc8      	it	gt
 8028b34:	4604      	movgt	r4, r0
 8028b36:	f100 0001 	add.w	r0, r0, #1
 8028b3a:	bfd8      	it	le
 8028b3c:	eeb0 7a67 	vmovle.f32	s14, s15
 8028b40:	4288      	cmp	r0, r1
 8028b42:	eef0 7a47 	vmov.f32	s15, s14
 8028b46:	d1ee      	bne.n	8028b26 <arm_max_f32+0x9a>
 8028b48:	ed82 7a00 	vstr	s14, [r2]
 8028b4c:	601c      	str	r4, [r3, #0]
 8028b4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028b52:	4644      	mov	r4, r8
 8028b54:	e7e3      	b.n	8028b1e <arm_max_f32+0x92>
 8028b56:	eeb0 7a67 	vmov.f32	s14, s15
 8028b5a:	e7f5      	b.n	8028b48 <arm_max_f32+0xbc>

08028b5c <arm_rfft_fast_init_f32>:
 8028b5c:	084b      	lsrs	r3, r1, #1
 8028b5e:	2b80      	cmp	r3, #128	; 0x80
 8028b60:	b410      	push	{r4}
 8028b62:	8201      	strh	r1, [r0, #16]
 8028b64:	8003      	strh	r3, [r0, #0]
 8028b66:	d047      	beq.n	8028bf8 <arm_rfft_fast_init_f32+0x9c>
 8028b68:	d917      	bls.n	8028b9a <arm_rfft_fast_init_f32+0x3e>
 8028b6a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028b6e:	d03d      	beq.n	8028bec <arm_rfft_fast_init_f32+0x90>
 8028b70:	d929      	bls.n	8028bc6 <arm_rfft_fast_init_f32+0x6a>
 8028b72:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028b76:	d020      	beq.n	8028bba <arm_rfft_fast_init_f32+0x5e>
 8028b78:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8028b7c:	d113      	bne.n	8028ba6 <arm_rfft_fast_init_f32+0x4a>
 8028b7e:	4921      	ldr	r1, [pc, #132]	; (8028c04 <arm_rfft_fast_init_f32+0xa8>)
 8028b80:	4a21      	ldr	r2, [pc, #132]	; (8028c08 <arm_rfft_fast_init_f32+0xac>)
 8028b82:	4b22      	ldr	r3, [pc, #136]	; (8028c0c <arm_rfft_fast_init_f32+0xb0>)
 8028b84:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028b88:	8184      	strh	r4, [r0, #12]
 8028b8a:	6081      	str	r1, [r0, #8]
 8028b8c:	6042      	str	r2, [r0, #4]
 8028b8e:	6143      	str	r3, [r0, #20]
 8028b90:	2000      	movs	r0, #0
 8028b92:	b240      	sxtb	r0, r0
 8028b94:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028b98:	4770      	bx	lr
 8028b9a:	2b20      	cmp	r3, #32
 8028b9c:	d01c      	beq.n	8028bd8 <arm_rfft_fast_init_f32+0x7c>
 8028b9e:	2b40      	cmp	r3, #64	; 0x40
 8028ba0:	d006      	beq.n	8028bb0 <arm_rfft_fast_init_f32+0x54>
 8028ba2:	2b10      	cmp	r3, #16
 8028ba4:	d01d      	beq.n	8028be2 <arm_rfft_fast_init_f32+0x86>
 8028ba6:	20ff      	movs	r0, #255	; 0xff
 8028ba8:	b240      	sxtb	r0, r0
 8028baa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028bae:	4770      	bx	lr
 8028bb0:	2438      	movs	r4, #56	; 0x38
 8028bb2:	4917      	ldr	r1, [pc, #92]	; (8028c10 <arm_rfft_fast_init_f32+0xb4>)
 8028bb4:	4a17      	ldr	r2, [pc, #92]	; (8028c14 <arm_rfft_fast_init_f32+0xb8>)
 8028bb6:	4b18      	ldr	r3, [pc, #96]	; (8028c18 <arm_rfft_fast_init_f32+0xbc>)
 8028bb8:	e7e6      	b.n	8028b88 <arm_rfft_fast_init_f32+0x2c>
 8028bba:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8028bbe:	4917      	ldr	r1, [pc, #92]	; (8028c1c <arm_rfft_fast_init_f32+0xc0>)
 8028bc0:	4a17      	ldr	r2, [pc, #92]	; (8028c20 <arm_rfft_fast_init_f32+0xc4>)
 8028bc2:	4b18      	ldr	r3, [pc, #96]	; (8028c24 <arm_rfft_fast_init_f32+0xc8>)
 8028bc4:	e7e0      	b.n	8028b88 <arm_rfft_fast_init_f32+0x2c>
 8028bc6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8028bca:	d1ec      	bne.n	8028ba6 <arm_rfft_fast_init_f32+0x4a>
 8028bcc:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028bd0:	4915      	ldr	r1, [pc, #84]	; (8028c28 <arm_rfft_fast_init_f32+0xcc>)
 8028bd2:	4a16      	ldr	r2, [pc, #88]	; (8028c2c <arm_rfft_fast_init_f32+0xd0>)
 8028bd4:	4b16      	ldr	r3, [pc, #88]	; (8028c30 <arm_rfft_fast_init_f32+0xd4>)
 8028bd6:	e7d7      	b.n	8028b88 <arm_rfft_fast_init_f32+0x2c>
 8028bd8:	2430      	movs	r4, #48	; 0x30
 8028bda:	4916      	ldr	r1, [pc, #88]	; (8028c34 <arm_rfft_fast_init_f32+0xd8>)
 8028bdc:	4a16      	ldr	r2, [pc, #88]	; (8028c38 <arm_rfft_fast_init_f32+0xdc>)
 8028bde:	4b17      	ldr	r3, [pc, #92]	; (8028c3c <arm_rfft_fast_init_f32+0xe0>)
 8028be0:	e7d2      	b.n	8028b88 <arm_rfft_fast_init_f32+0x2c>
 8028be2:	2414      	movs	r4, #20
 8028be4:	4916      	ldr	r1, [pc, #88]	; (8028c40 <arm_rfft_fast_init_f32+0xe4>)
 8028be6:	4a17      	ldr	r2, [pc, #92]	; (8028c44 <arm_rfft_fast_init_f32+0xe8>)
 8028be8:	4b17      	ldr	r3, [pc, #92]	; (8028c48 <arm_rfft_fast_init_f32+0xec>)
 8028bea:	e7cd      	b.n	8028b88 <arm_rfft_fast_init_f32+0x2c>
 8028bec:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028bf0:	4916      	ldr	r1, [pc, #88]	; (8028c4c <arm_rfft_fast_init_f32+0xf0>)
 8028bf2:	4a17      	ldr	r2, [pc, #92]	; (8028c50 <arm_rfft_fast_init_f32+0xf4>)
 8028bf4:	4b17      	ldr	r3, [pc, #92]	; (8028c54 <arm_rfft_fast_init_f32+0xf8>)
 8028bf6:	e7c7      	b.n	8028b88 <arm_rfft_fast_init_f32+0x2c>
 8028bf8:	24d0      	movs	r4, #208	; 0xd0
 8028bfa:	4917      	ldr	r1, [pc, #92]	; (8028c58 <arm_rfft_fast_init_f32+0xfc>)
 8028bfc:	4a17      	ldr	r2, [pc, #92]	; (8028c5c <arm_rfft_fast_init_f32+0x100>)
 8028bfe:	4b18      	ldr	r3, [pc, #96]	; (8028c60 <arm_rfft_fast_init_f32+0x104>)
 8028c00:	e7c2      	b.n	8028b88 <arm_rfft_fast_init_f32+0x2c>
 8028c02:	bf00      	nop
 8028c04:	0803e6c0 	.word	0x0803e6c0
 8028c08:	0802f8b8 	.word	0x0802f8b8
 8028c0c:	08035a28 	.word	0x08035a28
 8028c10:	080339b8 	.word	0x080339b8
 8028c14:	08040480 	.word	0x08040480
 8028c18:	08042970 	.word	0x08042970
 8028c1c:	0803c3a8 	.word	0x0803c3a8
 8028c20:	0803a2a8 	.word	0x0803a2a8
 8028c24:	08033a28 	.word	0x08033a28
 8028c28:	08042600 	.word	0x08042600
 8028c2c:	08039a28 	.word	0x08039a28
 8028c30:	08040680 	.word	0x08040680
 8028c34:	0803d260 	.word	0x0803d260
 8028c38:	0803c2a8 	.word	0x0803c2a8
 8028c3c:	080338b8 	.word	0x080338b8
 8028c40:	0803d1b8 	.word	0x0803d1b8
 8028c44:	0803a228 	.word	0x0803a228
 8028c48:	0803d1e0 	.word	0x0803d1e0
 8028c4c:	08040e80 	.word	0x08040e80
 8028c50:	0803d6c0 	.word	0x0803d6c0
 8028c54:	08041200 	.word	0x08041200
 8028c58:	08042b70 	.word	0x08042b70
 8028c5c:	0803d2c0 	.word	0x0803d2c0
 8028c60:	08042200 	.word	0x08042200

08028c64 <arm_rfft_fast_f32>:
 8028c64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028c68:	8a06      	ldrh	r6, [r0, #16]
 8028c6a:	0876      	lsrs	r6, r6, #1
 8028c6c:	4607      	mov	r7, r0
 8028c6e:	4615      	mov	r5, r2
 8028c70:	8006      	strh	r6, [r0, #0]
 8028c72:	460c      	mov	r4, r1
 8028c74:	2b00      	cmp	r3, #0
 8028c76:	d15c      	bne.n	8028d32 <arm_rfft_fast_f32+0xce>
 8028c78:	461a      	mov	r2, r3
 8028c7a:	2301      	movs	r3, #1
 8028c7c:	f000 fbe6 	bl	802944c <arm_cfft_f32>
 8028c80:	edd4 7a00 	vldr	s15, [r4]
 8028c84:	ed94 7a01 	vldr	s14, [r4, #4]
 8028c88:	883e      	ldrh	r6, [r7, #0]
 8028c8a:	6978      	ldr	r0, [r7, #20]
 8028c8c:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028c90:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028c94:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028c98:	ee77 6a87 	vadd.f32	s13, s15, s14
 8028c9c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028ca0:	3e01      	subs	r6, #1
 8028ca2:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028ca6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028caa:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8028cae:	ed85 7a00 	vstr	s14, [r5]
 8028cb2:	edc5 7a01 	vstr	s15, [r5, #4]
 8028cb6:	3010      	adds	r0, #16
 8028cb8:	f105 0210 	add.w	r2, r5, #16
 8028cbc:	3b08      	subs	r3, #8
 8028cbe:	f104 0110 	add.w	r1, r4, #16
 8028cc2:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028cc6:	ed93 5a02 	vldr	s10, [r3, #8]
 8028cca:	ed11 7a01 	vldr	s14, [r1, #-4]
 8028cce:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028cd2:	edd3 5a03 	vldr	s11, [r3, #12]
 8028cd6:	ed50 6a01 	vldr	s13, [r0, #-4]
 8028cda:	ee75 7a64 	vsub.f32	s15, s10, s9
 8028cde:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028ce2:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028ce6:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028cea:	ee66 4a27 	vmul.f32	s9, s12, s15
 8028cee:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028cf2:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028cf6:	ee26 6a04 	vmul.f32	s12, s12, s8
 8028cfa:	ee66 6a84 	vmul.f32	s13, s13, s8
 8028cfe:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028d02:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028d06:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028d0a:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028d0e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028d12:	3e01      	subs	r6, #1
 8028d14:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028d18:	ed42 7a01 	vstr	s15, [r2, #-4]
 8028d1c:	f1a3 0308 	sub.w	r3, r3, #8
 8028d20:	f101 0108 	add.w	r1, r1, #8
 8028d24:	f100 0008 	add.w	r0, r0, #8
 8028d28:	f102 0208 	add.w	r2, r2, #8
 8028d2c:	d1c9      	bne.n	8028cc2 <arm_rfft_fast_f32+0x5e>
 8028d2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028d32:	edd1 7a00 	vldr	s15, [r1]
 8028d36:	edd1 6a01 	vldr	s13, [r1, #4]
 8028d3a:	6941      	ldr	r1, [r0, #20]
 8028d3c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028d40:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028d44:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028d48:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028d4c:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028d50:	3e01      	subs	r6, #1
 8028d52:	ed82 7a00 	vstr	s14, [r2]
 8028d56:	edc2 7a01 	vstr	s15, [r2, #4]
 8028d5a:	00f0      	lsls	r0, r6, #3
 8028d5c:	b3ee      	cbz	r6, 8028dda <arm_rfft_fast_f32+0x176>
 8028d5e:	3808      	subs	r0, #8
 8028d60:	f101 0e10 	add.w	lr, r1, #16
 8028d64:	4420      	add	r0, r4
 8028d66:	f104 0110 	add.w	r1, r4, #16
 8028d6a:	f102 0c10 	add.w	ip, r2, #16
 8028d6e:	ed90 7a02 	vldr	s14, [r0, #8]
 8028d72:	ed51 6a02 	vldr	s13, [r1, #-8]
 8028d76:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8028d7a:	ed90 4a03 	vldr	s8, [r0, #12]
 8028d7e:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028d82:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028d86:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8028d8a:	ee74 4a05 	vadd.f32	s9, s8, s10
 8028d8e:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028d92:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028d96:	ee35 5a44 	vsub.f32	s10, s10, s8
 8028d9a:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8028d9e:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028da2:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028da6:	ee26 6a24 	vmul.f32	s12, s12, s9
 8028daa:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8028dae:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028db2:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028db6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028dba:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028dbe:	3e01      	subs	r6, #1
 8028dc0:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028dc4:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028dc8:	f1a0 0008 	sub.w	r0, r0, #8
 8028dcc:	f101 0108 	add.w	r1, r1, #8
 8028dd0:	f10e 0e08 	add.w	lr, lr, #8
 8028dd4:	f10c 0c08 	add.w	ip, ip, #8
 8028dd8:	d1c9      	bne.n	8028d6e <arm_rfft_fast_f32+0x10a>
 8028dda:	4638      	mov	r0, r7
 8028ddc:	4629      	mov	r1, r5
 8028dde:	461a      	mov	r2, r3
 8028de0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028de4:	2301      	movs	r3, #1
 8028de6:	f000 bb31 	b.w	802944c <arm_cfft_f32>
 8028dea:	bf00      	nop

08028dec <arm_cfft_radix8by2_f32>:
 8028dec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028df0:	ed2d 8b08 	vpush	{d8-d11}
 8028df4:	f8b0 e000 	ldrh.w	lr, [r0]
 8028df8:	6842      	ldr	r2, [r0, #4]
 8028dfa:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028dfe:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028e02:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028e06:	4607      	mov	r7, r0
 8028e08:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8028e0c:	f000 80af 	beq.w	8028f6e <arm_cfft_radix8by2_f32+0x182>
 8028e10:	3310      	adds	r3, #16
 8028e12:	18ce      	adds	r6, r1, r3
 8028e14:	3210      	adds	r2, #16
 8028e16:	4443      	add	r3, r8
 8028e18:	f101 0510 	add.w	r5, r1, #16
 8028e1c:	f108 0410 	add.w	r4, r8, #16
 8028e20:	ed54 1a04 	vldr	s3, [r4, #-16]
 8028e24:	ed13 4a04 	vldr	s8, [r3, #-16]
 8028e28:	ed53 3a03 	vldr	s7, [r3, #-12]
 8028e2c:	ed53 5a02 	vldr	s11, [r3, #-8]
 8028e30:	ed13 5a01 	vldr	s10, [r3, #-4]
 8028e34:	ed54 6a03 	vldr	s13, [r4, #-12]
 8028e38:	ed14 0a02 	vldr	s0, [r4, #-8]
 8028e3c:	ed16 2a04 	vldr	s4, [r6, #-16]
 8028e40:	ed56 2a03 	vldr	s5, [r6, #-12]
 8028e44:	ed15 6a03 	vldr	s12, [r5, #-12]
 8028e48:	ed15 7a01 	vldr	s14, [r5, #-4]
 8028e4c:	ed15 3a04 	vldr	s6, [r5, #-16]
 8028e50:	ed54 7a01 	vldr	s15, [r4, #-4]
 8028e54:	ed56 0a02 	vldr	s1, [r6, #-8]
 8028e58:	ed16 1a01 	vldr	s2, [r6, #-4]
 8028e5c:	ed55 4a02 	vldr	s9, [r5, #-8]
 8028e60:	ee73 ba21 	vadd.f32	s23, s6, s3
 8028e64:	ee36 ba26 	vadd.f32	s22, s12, s13
 8028e68:	ee37 aa27 	vadd.f32	s20, s14, s15
 8028e6c:	ee72 9a04 	vadd.f32	s19, s4, s8
 8028e70:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8028e74:	ee31 8a05 	vadd.f32	s16, s2, s10
 8028e78:	ee74 aa80 	vadd.f32	s21, s9, s0
 8028e7c:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8028e80:	ed45 ba04 	vstr	s23, [r5, #-16]
 8028e84:	ed05 ba03 	vstr	s22, [r5, #-12]
 8028e88:	ed45 aa02 	vstr	s21, [r5, #-8]
 8028e8c:	ed05 aa01 	vstr	s20, [r5, #-4]
 8028e90:	ed06 8a01 	vstr	s16, [r6, #-4]
 8028e94:	ed46 9a04 	vstr	s19, [r6, #-16]
 8028e98:	ed06 9a03 	vstr	s18, [r6, #-12]
 8028e9c:	ed46 8a02 	vstr	s17, [r6, #-8]
 8028ea0:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028ea4:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8028ea8:	ed12 6a03 	vldr	s12, [r2, #-12]
 8028eac:	ed52 2a04 	vldr	s5, [r2, #-16]
 8028eb0:	ee33 3a61 	vsub.f32	s6, s6, s3
 8028eb4:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028eb8:	ee26 8a86 	vmul.f32	s16, s13, s12
 8028ebc:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028ec0:	ee63 1a22 	vmul.f32	s3, s6, s5
 8028ec4:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028ec8:	ee23 3a06 	vmul.f32	s6, s6, s12
 8028ecc:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8028ed0:	ee23 6a86 	vmul.f32	s12, s7, s12
 8028ed4:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028ed8:	ee36 6a04 	vadd.f32	s12, s12, s8
 8028edc:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028ee0:	ee72 3a63 	vsub.f32	s7, s4, s7
 8028ee4:	ee71 2a88 	vadd.f32	s5, s3, s16
 8028ee8:	ed44 6a03 	vstr	s13, [r4, #-12]
 8028eec:	ed44 2a04 	vstr	s5, [r4, #-16]
 8028ef0:	ed43 3a04 	vstr	s7, [r3, #-16]
 8028ef4:	ed03 6a03 	vstr	s12, [r3, #-12]
 8028ef8:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028efc:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8028f00:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028f04:	ed52 5a02 	vldr	s11, [r2, #-8]
 8028f08:	ee35 6a41 	vsub.f32	s12, s10, s2
 8028f0c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8028f10:	ee67 3a87 	vmul.f32	s7, s15, s14
 8028f14:	ee26 5a87 	vmul.f32	s10, s13, s14
 8028f18:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8028f1c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8028f20:	ee64 4a87 	vmul.f32	s9, s9, s14
 8028f24:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8028f28:	ee26 7a07 	vmul.f32	s14, s12, s14
 8028f2c:	ee26 6a25 	vmul.f32	s12, s12, s11
 8028f30:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8028f34:	ee74 5a23 	vadd.f32	s11, s8, s7
 8028f38:	ee35 6a46 	vsub.f32	s12, s10, s12
 8028f3c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8028f40:	f1be 0e01 	subs.w	lr, lr, #1
 8028f44:	ed44 5a02 	vstr	s11, [r4, #-8]
 8028f48:	f105 0510 	add.w	r5, r5, #16
 8028f4c:	ed44 7a01 	vstr	s15, [r4, #-4]
 8028f50:	f106 0610 	add.w	r6, r6, #16
 8028f54:	ed03 6a02 	vstr	s12, [r3, #-8]
 8028f58:	ed03 7a01 	vstr	s14, [r3, #-4]
 8028f5c:	f102 0210 	add.w	r2, r2, #16
 8028f60:	f104 0410 	add.w	r4, r4, #16
 8028f64:	f103 0310 	add.w	r3, r3, #16
 8028f68:	f47f af5a 	bne.w	8028e20 <arm_cfft_radix8by2_f32+0x34>
 8028f6c:	687a      	ldr	r2, [r7, #4]
 8028f6e:	fa1f f48c 	uxth.w	r4, ip
 8028f72:	4608      	mov	r0, r1
 8028f74:	2302      	movs	r3, #2
 8028f76:	4621      	mov	r1, r4
 8028f78:	f000 fbca 	bl	8029710 <arm_radix8_butterfly_f32>
 8028f7c:	ecbd 8b08 	vpop	{d8-d11}
 8028f80:	4640      	mov	r0, r8
 8028f82:	4621      	mov	r1, r4
 8028f84:	687a      	ldr	r2, [r7, #4]
 8028f86:	2302      	movs	r3, #2
 8028f88:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028f8c:	f000 bbc0 	b.w	8029710 <arm_radix8_butterfly_f32>

08028f90 <arm_cfft_radix8by4_f32>:
 8028f90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028f94:	ed2d 8b0a 	vpush	{d8-d12}
 8028f98:	8802      	ldrh	r2, [r0, #0]
 8028f9a:	ed91 6a00 	vldr	s12, [r1]
 8028f9e:	b08f      	sub	sp, #60	; 0x3c
 8028fa0:	460f      	mov	r7, r1
 8028fa2:	0852      	lsrs	r2, r2, #1
 8028fa4:	0093      	lsls	r3, r2, #2
 8028fa6:	900c      	str	r0, [sp, #48]	; 0x30
 8028fa8:	9103      	str	r1, [sp, #12]
 8028faa:	6841      	ldr	r1, [r0, #4]
 8028fac:	ed97 7a01 	vldr	s14, [r7, #4]
 8028fb0:	4638      	mov	r0, r7
 8028fb2:	4418      	add	r0, r3
 8028fb4:	4606      	mov	r6, r0
 8028fb6:	9009      	str	r0, [sp, #36]	; 0x24
 8028fb8:	4418      	add	r0, r3
 8028fba:	edd0 6a00 	vldr	s13, [r0]
 8028fbe:	edd6 3a00 	vldr	s7, [r6]
 8028fc2:	edd6 2a01 	vldr	s5, [r6, #4]
 8028fc6:	edd0 7a01 	vldr	s15, [r0, #4]
 8028fca:	900a      	str	r0, [sp, #40]	; 0x28
 8028fcc:	ee76 5a26 	vadd.f32	s11, s12, s13
 8028fd0:	4604      	mov	r4, r0
 8028fd2:	4625      	mov	r5, r4
 8028fd4:	441c      	add	r4, r3
 8028fd6:	ed94 4a00 	vldr	s8, [r4]
 8028fda:	ed94 5a01 	vldr	s10, [r4, #4]
 8028fde:	9401      	str	r4, [sp, #4]
 8028fe0:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8028fe4:	4630      	mov	r0, r6
 8028fe6:	ee74 4a24 	vadd.f32	s9, s8, s9
 8028fea:	463e      	mov	r6, r7
 8028fec:	ee14 ea90 	vmov	lr, s9
 8028ff0:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028ff4:	f846 eb08 	str.w	lr, [r6], #8
 8028ff8:	ee37 6a27 	vadd.f32	s12, s14, s15
 8028ffc:	edd0 4a01 	vldr	s9, [r0, #4]
 8029000:	9604      	str	r6, [sp, #16]
 8029002:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029006:	9e01      	ldr	r6, [sp, #4]
 8029008:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802900c:	ed96 2a01 	vldr	s4, [r6, #4]
 8029010:	ee36 7a24 	vadd.f32	s14, s12, s9
 8029014:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8029018:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802901c:	ee36 6a62 	vsub.f32	s12, s12, s5
 8029020:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8029024:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8029028:	ee73 3a45 	vsub.f32	s7, s6, s10
 802902c:	4604      	mov	r4, r0
 802902e:	ee36 6a45 	vsub.f32	s12, s12, s10
 8029032:	ee75 6a26 	vadd.f32	s13, s10, s13
 8029036:	46a3      	mov	fp, r4
 8029038:	ee37 7a02 	vadd.f32	s14, s14, s4
 802903c:	ee34 5a84 	vadd.f32	s10, s9, s8
 8029040:	ee13 8a90 	vmov	r8, s7
 8029044:	46a4      	mov	ip, r4
 8029046:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802904a:	ed87 7a01 	vstr	s14, [r7, #4]
 802904e:	f84b 8b08 	str.w	r8, [fp], #8
 8029052:	f1ac 0704 	sub.w	r7, ip, #4
 8029056:	ed8c 5a01 	vstr	s10, [ip, #4]
 802905a:	f101 0c08 	add.w	ip, r1, #8
 802905e:	462c      	mov	r4, r5
 8029060:	f8cd c014 	str.w	ip, [sp, #20]
 8029064:	ee15 ca90 	vmov	ip, s11
 8029068:	f844 cb08 	str.w	ip, [r4], #8
 802906c:	9407      	str	r4, [sp, #28]
 802906e:	f101 0410 	add.w	r4, r1, #16
 8029072:	ed85 6a01 	vstr	s12, [r5, #4]
 8029076:	0852      	lsrs	r2, r2, #1
 8029078:	9402      	str	r4, [sp, #8]
 802907a:	462c      	mov	r4, r5
 802907c:	f101 0518 	add.w	r5, r1, #24
 8029080:	920b      	str	r2, [sp, #44]	; 0x2c
 8029082:	46b2      	mov	sl, r6
 8029084:	9506      	str	r5, [sp, #24]
 8029086:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802908a:	3a02      	subs	r2, #2
 802908c:	ee16 5a90 	vmov	r5, s13
 8029090:	46b6      	mov	lr, r6
 8029092:	4630      	mov	r0, r6
 8029094:	0852      	lsrs	r2, r2, #1
 8029096:	f84a 5b08 	str.w	r5, [sl], #8
 802909a:	f1a0 0604 	sub.w	r6, r0, #4
 802909e:	edce 7a01 	vstr	s15, [lr, #4]
 80290a2:	9208      	str	r2, [sp, #32]
 80290a4:	f000 8130 	beq.w	8029308 <arm_cfft_radix8by4_f32+0x378>
 80290a8:	4691      	mov	r9, r2
 80290aa:	9a03      	ldr	r2, [sp, #12]
 80290ac:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80290b0:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 80290b4:	3b08      	subs	r3, #8
 80290b6:	f102 0510 	add.w	r5, r2, #16
 80290ba:	f101 0c20 	add.w	ip, r1, #32
 80290be:	f1a4 020c 	sub.w	r2, r4, #12
 80290c2:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 80290c6:	4433      	add	r3, r6
 80290c8:	3410      	adds	r4, #16
 80290ca:	4650      	mov	r0, sl
 80290cc:	4659      	mov	r1, fp
 80290ce:	ed55 3a02 	vldr	s7, [r5, #-8]
 80290d2:	ed14 5a02 	vldr	s10, [r4, #-8]
 80290d6:	ed91 7a00 	vldr	s14, [r1]
 80290da:	edd0 7a00 	vldr	s15, [r0]
 80290de:	ed15 4a01 	vldr	s8, [r5, #-4]
 80290e2:	ed54 5a01 	vldr	s11, [r4, #-4]
 80290e6:	edd0 6a01 	vldr	s13, [r0, #4]
 80290ea:	ed91 6a01 	vldr	s12, [r1, #4]
 80290ee:	ee33 8a85 	vadd.f32	s16, s7, s10
 80290f2:	ee34 0a25 	vadd.f32	s0, s8, s11
 80290f6:	ee78 4a07 	vadd.f32	s9, s16, s14
 80290fa:	ee74 5a65 	vsub.f32	s11, s8, s11
 80290fe:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8029102:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8029106:	ed45 4a02 	vstr	s9, [r5, #-8]
 802910a:	edd1 4a01 	vldr	s9, [r1, #4]
 802910e:	ed90 4a01 	vldr	s8, [r0, #4]
 8029112:	ee70 4a24 	vadd.f32	s9, s0, s9
 8029116:	ee76 aa05 	vadd.f32	s21, s12, s10
 802911a:	ee74 4a84 	vadd.f32	s9, s9, s8
 802911e:	ee35 aac7 	vsub.f32	s20, s11, s14
 8029122:	ed45 4a01 	vstr	s9, [r5, #-4]
 8029126:	edd6 1a00 	vldr	s3, [r6]
 802912a:	edd7 0a00 	vldr	s1, [r7]
 802912e:	ed92 4a02 	vldr	s8, [r2, #8]
 8029132:	edd3 3a02 	vldr	s7, [r3, #8]
 8029136:	ed93 2a01 	vldr	s4, [r3, #4]
 802913a:	ed16 1a01 	vldr	s2, [r6, #-4]
 802913e:	edd2 2a01 	vldr	s5, [r2, #4]
 8029142:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029146:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802914a:	ee39 3a81 	vadd.f32	s6, s19, s2
 802914e:	ee74 8a84 	vadd.f32	s17, s9, s8
 8029152:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029156:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802915a:	ee7a aae6 	vsub.f32	s21, s21, s13
 802915e:	ee18 aa90 	vmov	sl, s17
 8029162:	f847 a908 	str.w	sl, [r7], #-8
 8029166:	edd2 8a01 	vldr	s17, [r2, #4]
 802916a:	ed93 9a01 	vldr	s18, [r3, #4]
 802916e:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029172:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029176:	ee78 8a89 	vadd.f32	s17, s17, s18
 802917a:	ee74 0a63 	vsub.f32	s1, s8, s7
 802917e:	edc7 8a01 	vstr	s17, [r7, #4]
 8029182:	ed18 ba02 	vldr	s22, [r8, #-8]
 8029186:	ed58 8a01 	vldr	s17, [r8, #-4]
 802918a:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802918e:	ee6a ba28 	vmul.f32	s23, s20, s17
 8029192:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8029196:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802919a:	ee30 9a81 	vadd.f32	s18, s1, s2
 802919e:	ee79 9a82 	vadd.f32	s19, s19, s4
 80291a2:	ee3c ca2b 	vadd.f32	s24, s24, s23
 80291a6:	ee6a aaa8 	vmul.f32	s21, s21, s17
 80291aa:	ee69 baa8 	vmul.f32	s23, s19, s17
 80291ae:	ee2a aa0b 	vmul.f32	s20, s20, s22
 80291b2:	ee69 9a8b 	vmul.f32	s19, s19, s22
 80291b6:	ee69 8a28 	vmul.f32	s17, s18, s17
 80291ba:	ee29 ba0b 	vmul.f32	s22, s18, s22
 80291be:	ee1c aa10 	vmov	sl, s24
 80291c2:	ee78 8aa9 	vadd.f32	s17, s17, s19
 80291c6:	f841 ab08 	str.w	sl, [r1], #8
 80291ca:	ee3a aa6a 	vsub.f32	s20, s20, s21
 80291ce:	ee3b bacb 	vsub.f32	s22, s23, s22
 80291d2:	ee34 4ac4 	vsub.f32	s8, s9, s8
 80291d6:	ee33 3a62 	vsub.f32	s6, s6, s5
 80291da:	ed01 aa01 	vstr	s20, [r1, #-4]
 80291de:	edc2 8a01 	vstr	s17, [r2, #4]
 80291e2:	ed82 ba02 	vstr	s22, [r2, #8]
 80291e6:	ed5c 4a04 	vldr	s9, [ip, #-16]
 80291ea:	ee74 3a63 	vsub.f32	s7, s8, s7
 80291ee:	ee38 8a47 	vsub.f32	s16, s16, s14
 80291f2:	ed1c 4a03 	vldr	s8, [ip, #-12]
 80291f6:	ee30 0a46 	vsub.f32	s0, s0, s12
 80291fa:	ee33 3a42 	vsub.f32	s6, s6, s4
 80291fe:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029202:	ee30 0a66 	vsub.f32	s0, s0, s13
 8029206:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802920a:	ee63 8a04 	vmul.f32	s17, s6, s8
 802920e:	ee28 aa24 	vmul.f32	s20, s16, s9
 8029212:	ee60 9a04 	vmul.f32	s19, s0, s8
 8029216:	ee28 8a04 	vmul.f32	s16, s16, s8
 802921a:	ee20 0a24 	vmul.f32	s0, s0, s9
 802921e:	ee63 3a84 	vmul.f32	s7, s7, s8
 8029222:	ee39 4a68 	vsub.f32	s8, s18, s17
 8029226:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802922a:	ee14 aa10 	vmov	sl, s8
 802922e:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029232:	ee63 4a24 	vmul.f32	s9, s6, s9
 8029236:	ed44 9a02 	vstr	s19, [r4, #-8]
 802923a:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802923e:	ed04 0a01 	vstr	s0, [r4, #-4]
 8029242:	f846 a908 	str.w	sl, [r6], #-8
 8029246:	ee35 6a46 	vsub.f32	s12, s10, s12
 802924a:	ee35 7a87 	vadd.f32	s14, s11, s14
 802924e:	edc6 3a01 	vstr	s7, [r6, #4]
 8029252:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029256:	ee77 7a67 	vsub.f32	s15, s14, s15
 802925a:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802925e:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029262:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029266:	ee26 5a87 	vmul.f32	s10, s13, s14
 802926a:	ee72 2a62 	vsub.f32	s5, s4, s5
 802926e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029272:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029276:	ee75 5a25 	vadd.f32	s11, s10, s11
 802927a:	ee62 0a86 	vmul.f32	s1, s5, s12
 802927e:	ee66 6a86 	vmul.f32	s13, s13, s12
 8029282:	ee67 7a87 	vmul.f32	s15, s15, s14
 8029286:	ee21 6a06 	vmul.f32	s12, s2, s12
 802928a:	ee62 2a87 	vmul.f32	s5, s5, s14
 802928e:	ee21 1a07 	vmul.f32	s2, s2, s14
 8029292:	ee15 aa90 	vmov	sl, s11
 8029296:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802929a:	f840 ab08 	str.w	sl, [r0], #8
 802929e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80292a2:	ee76 2a22 	vadd.f32	s5, s12, s5
 80292a6:	f1b9 0901 	subs.w	r9, r9, #1
 80292aa:	ed40 7a01 	vstr	s15, [r0, #-4]
 80292ae:	f105 0508 	add.w	r5, r5, #8
 80292b2:	ed83 1a02 	vstr	s2, [r3, #8]
 80292b6:	edc3 2a01 	vstr	s5, [r3, #4]
 80292ba:	f108 0808 	add.w	r8, r8, #8
 80292be:	f1a2 0208 	sub.w	r2, r2, #8
 80292c2:	f10c 0c10 	add.w	ip, ip, #16
 80292c6:	f104 0408 	add.w	r4, r4, #8
 80292ca:	f10e 0e18 	add.w	lr, lr, #24
 80292ce:	f1a3 0308 	sub.w	r3, r3, #8
 80292d2:	f47f aefc 	bne.w	80290ce <arm_cfft_radix8by4_f32+0x13e>
 80292d6:	9908      	ldr	r1, [sp, #32]
 80292d8:	9802      	ldr	r0, [sp, #8]
 80292da:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 80292de:	00cb      	lsls	r3, r1, #3
 80292e0:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 80292e4:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80292e8:	9102      	str	r1, [sp, #8]
 80292ea:	9904      	ldr	r1, [sp, #16]
 80292ec:	4419      	add	r1, r3
 80292ee:	9104      	str	r1, [sp, #16]
 80292f0:	9905      	ldr	r1, [sp, #20]
 80292f2:	4419      	add	r1, r3
 80292f4:	9105      	str	r1, [sp, #20]
 80292f6:	9907      	ldr	r1, [sp, #28]
 80292f8:	449b      	add	fp, r3
 80292fa:	4419      	add	r1, r3
 80292fc:	449a      	add	sl, r3
 80292fe:	9b06      	ldr	r3, [sp, #24]
 8029300:	9107      	str	r1, [sp, #28]
 8029302:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8029306:	9306      	str	r3, [sp, #24]
 8029308:	9a04      	ldr	r2, [sp, #16]
 802930a:	9807      	ldr	r0, [sp, #28]
 802930c:	edd2 3a00 	vldr	s7, [r2]
 8029310:	ed90 4a00 	vldr	s8, [r0]
 8029314:	eddb 7a00 	vldr	s15, [fp]
 8029318:	ed9a 3a00 	vldr	s6, [sl]
 802931c:	edd2 4a01 	vldr	s9, [r2, #4]
 8029320:	ed90 7a01 	vldr	s14, [r0, #4]
 8029324:	ed9b 2a01 	vldr	s4, [fp, #4]
 8029328:	edda 5a01 	vldr	s11, [sl, #4]
 802932c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8029330:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8029332:	ee73 6a84 	vadd.f32	s13, s7, s8
 8029336:	ee34 6a87 	vadd.f32	s12, s9, s14
 802933a:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802933e:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8029342:	ee33 5a05 	vadd.f32	s10, s6, s10
 8029346:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802934a:	ed82 5a00 	vstr	s10, [r2]
 802934e:	ed9b 5a01 	vldr	s10, [fp, #4]
 8029352:	edda 4a01 	vldr	s9, [sl, #4]
 8029356:	ee36 5a05 	vadd.f32	s10, s12, s10
 802935a:	ee72 3a04 	vadd.f32	s7, s4, s8
 802935e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029362:	ee77 4a67 	vsub.f32	s9, s14, s15
 8029366:	ed82 5a01 	vstr	s10, [r2, #4]
 802936a:	9a05      	ldr	r2, [sp, #20]
 802936c:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029370:	edd2 1a00 	vldr	s3, [r2]
 8029374:	edd2 2a01 	vldr	s5, [r2, #4]
 8029378:	9a02      	ldr	r2, [sp, #8]
 802937a:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802937e:	ee36 6a42 	vsub.f32	s12, s12, s4
 8029382:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8029386:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802938a:	ee65 2a22 	vmul.f32	s5, s10, s5
 802938e:	ee25 5a21 	vmul.f32	s10, s10, s3
 8029392:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8029396:	ee35 5a63 	vsub.f32	s10, s10, s7
 802939a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802939e:	edcb 2a00 	vstr	s5, [fp]
 80293a2:	ed8b 5a01 	vstr	s10, [fp, #4]
 80293a6:	edd2 3a01 	vldr	s7, [r2, #4]
 80293aa:	ed92 5a00 	vldr	s10, [r2]
 80293ae:	9a06      	ldr	r2, [sp, #24]
 80293b0:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80293b4:	ee36 6a65 	vsub.f32	s12, s12, s11
 80293b8:	ee66 4a85 	vmul.f32	s9, s13, s10
 80293bc:	ee26 5a05 	vmul.f32	s10, s12, s10
 80293c0:	ee66 6aa3 	vmul.f32	s13, s13, s7
 80293c4:	ee26 6a23 	vmul.f32	s12, s12, s7
 80293c8:	ee75 6a66 	vsub.f32	s13, s10, s13
 80293cc:	ee34 6a86 	vadd.f32	s12, s9, s12
 80293d0:	ee34 4a42 	vsub.f32	s8, s8, s4
 80293d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80293d8:	edc0 6a01 	vstr	s13, [r0, #4]
 80293dc:	ed80 6a00 	vstr	s12, [r0]
 80293e0:	ed92 6a01 	vldr	s12, [r2, #4]
 80293e4:	9803      	ldr	r0, [sp, #12]
 80293e6:	ee77 7a43 	vsub.f32	s15, s14, s6
 80293ea:	ee75 5a84 	vadd.f32	s11, s11, s8
 80293ee:	ed92 7a00 	vldr	s14, [r2]
 80293f2:	ee65 6a87 	vmul.f32	s13, s11, s14
 80293f6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80293fa:	ee65 5a86 	vmul.f32	s11, s11, s12
 80293fe:	ee67 7a86 	vmul.f32	s15, s15, s12
 8029402:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029406:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802940a:	edca 5a01 	vstr	s11, [sl, #4]
 802940e:	edca 7a00 	vstr	s15, [sl]
 8029412:	6872      	ldr	r2, [r6, #4]
 8029414:	4621      	mov	r1, r4
 8029416:	2304      	movs	r3, #4
 8029418:	f000 f97a 	bl	8029710 <arm_radix8_butterfly_f32>
 802941c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802941e:	6872      	ldr	r2, [r6, #4]
 8029420:	4621      	mov	r1, r4
 8029422:	2304      	movs	r3, #4
 8029424:	f000 f974 	bl	8029710 <arm_radix8_butterfly_f32>
 8029428:	980a      	ldr	r0, [sp, #40]	; 0x28
 802942a:	6872      	ldr	r2, [r6, #4]
 802942c:	4621      	mov	r1, r4
 802942e:	2304      	movs	r3, #4
 8029430:	f000 f96e 	bl	8029710 <arm_radix8_butterfly_f32>
 8029434:	9801      	ldr	r0, [sp, #4]
 8029436:	6872      	ldr	r2, [r6, #4]
 8029438:	4621      	mov	r1, r4
 802943a:	2304      	movs	r3, #4
 802943c:	b00f      	add	sp, #60	; 0x3c
 802943e:	ecbd 8b0a 	vpop	{d8-d12}
 8029442:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029446:	f000 b963 	b.w	8029710 <arm_radix8_butterfly_f32>
 802944a:	bf00      	nop

0802944c <arm_cfft_f32>:
 802944c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029450:	2a01      	cmp	r2, #1
 8029452:	4606      	mov	r6, r0
 8029454:	4617      	mov	r7, r2
 8029456:	460c      	mov	r4, r1
 8029458:	4698      	mov	r8, r3
 802945a:	8805      	ldrh	r5, [r0, #0]
 802945c:	d054      	beq.n	8029508 <arm_cfft_f32+0xbc>
 802945e:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029462:	d04c      	beq.n	80294fe <arm_cfft_f32+0xb2>
 8029464:	d916      	bls.n	8029494 <arm_cfft_f32+0x48>
 8029466:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802946a:	d01a      	beq.n	80294a2 <arm_cfft_f32+0x56>
 802946c:	d95c      	bls.n	8029528 <arm_cfft_f32+0xdc>
 802946e:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8029472:	d044      	beq.n	80294fe <arm_cfft_f32+0xb2>
 8029474:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8029478:	d105      	bne.n	8029486 <arm_cfft_f32+0x3a>
 802947a:	4620      	mov	r0, r4
 802947c:	4629      	mov	r1, r5
 802947e:	6872      	ldr	r2, [r6, #4]
 8029480:	2301      	movs	r3, #1
 8029482:	f000 f945 	bl	8029710 <arm_radix8_butterfly_f32>
 8029486:	f1b8 0f00 	cmp.w	r8, #0
 802948a:	d111      	bne.n	80294b0 <arm_cfft_f32+0x64>
 802948c:	2f01      	cmp	r7, #1
 802948e:	d016      	beq.n	80294be <arm_cfft_f32+0x72>
 8029490:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029494:	2d20      	cmp	r5, #32
 8029496:	d032      	beq.n	80294fe <arm_cfft_f32+0xb2>
 8029498:	d94a      	bls.n	8029530 <arm_cfft_f32+0xe4>
 802949a:	2d40      	cmp	r5, #64	; 0x40
 802949c:	d0ed      	beq.n	802947a <arm_cfft_f32+0x2e>
 802949e:	2d80      	cmp	r5, #128	; 0x80
 80294a0:	d1f1      	bne.n	8029486 <arm_cfft_f32+0x3a>
 80294a2:	4630      	mov	r0, r6
 80294a4:	4621      	mov	r1, r4
 80294a6:	f7ff fca1 	bl	8028dec <arm_cfft_radix8by2_f32>
 80294aa:	f1b8 0f00 	cmp.w	r8, #0
 80294ae:	d0ed      	beq.n	802948c <arm_cfft_f32+0x40>
 80294b0:	4620      	mov	r0, r4
 80294b2:	89b1      	ldrh	r1, [r6, #12]
 80294b4:	68b2      	ldr	r2, [r6, #8]
 80294b6:	f7d6 fe9b 	bl	80001f0 <arm_bitreversal_32>
 80294ba:	2f01      	cmp	r7, #1
 80294bc:	d1e8      	bne.n	8029490 <arm_cfft_f32+0x44>
 80294be:	ee07 5a90 	vmov	s15, r5
 80294c2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80294c6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80294ca:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 80294ce:	2d00      	cmp	r5, #0
 80294d0:	d0de      	beq.n	8029490 <arm_cfft_f32+0x44>
 80294d2:	f104 0108 	add.w	r1, r4, #8
 80294d6:	2300      	movs	r3, #0
 80294d8:	3301      	adds	r3, #1
 80294da:	429d      	cmp	r5, r3
 80294dc:	f101 0108 	add.w	r1, r1, #8
 80294e0:	ed11 7a04 	vldr	s14, [r1, #-16]
 80294e4:	ed51 7a03 	vldr	s15, [r1, #-12]
 80294e8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80294ec:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80294f0:	ed01 7a04 	vstr	s14, [r1, #-16]
 80294f4:	ed41 7a03 	vstr	s15, [r1, #-12]
 80294f8:	d1ee      	bne.n	80294d8 <arm_cfft_f32+0x8c>
 80294fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80294fe:	4630      	mov	r0, r6
 8029500:	4621      	mov	r1, r4
 8029502:	f7ff fd45 	bl	8028f90 <arm_cfft_radix8by4_f32>
 8029506:	e7be      	b.n	8029486 <arm_cfft_f32+0x3a>
 8029508:	b1ad      	cbz	r5, 8029536 <arm_cfft_f32+0xea>
 802950a:	f101 030c 	add.w	r3, r1, #12
 802950e:	2200      	movs	r2, #0
 8029510:	ed53 7a02 	vldr	s15, [r3, #-8]
 8029514:	3201      	adds	r2, #1
 8029516:	eef1 7a67 	vneg.f32	s15, s15
 802951a:	4295      	cmp	r5, r2
 802951c:	ed43 7a02 	vstr	s15, [r3, #-8]
 8029520:	f103 0308 	add.w	r3, r3, #8
 8029524:	d1f4      	bne.n	8029510 <arm_cfft_f32+0xc4>
 8029526:	e79a      	b.n	802945e <arm_cfft_f32+0x12>
 8029528:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802952c:	d0a5      	beq.n	802947a <arm_cfft_f32+0x2e>
 802952e:	e7aa      	b.n	8029486 <arm_cfft_f32+0x3a>
 8029530:	2d10      	cmp	r5, #16
 8029532:	d0b6      	beq.n	80294a2 <arm_cfft_f32+0x56>
 8029534:	e7a7      	b.n	8029486 <arm_cfft_f32+0x3a>
 8029536:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802953a:	d894      	bhi.n	8029466 <arm_cfft_f32+0x1a>
 802953c:	e7aa      	b.n	8029494 <arm_cfft_f32+0x48>
 802953e:	bf00      	nop

08029540 <arm_cmplx_mag_f32>:
 8029540:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029544:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8029548:	b084      	sub	sp, #16
 802954a:	d07f      	beq.n	802964c <arm_cmplx_mag_f32+0x10c>
 802954c:	2700      	movs	r7, #0
 802954e:	f100 0420 	add.w	r4, r0, #32
 8029552:	f101 0510 	add.w	r5, r1, #16
 8029556:	4646      	mov	r6, r8
 8029558:	e05a      	b.n	8029610 <arm_cmplx_mag_f32+0xd0>
 802955a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802955e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029562:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029566:	f040 80a4 	bne.w	80296b2 <arm_cmplx_mag_f32+0x172>
 802956a:	ed05 0a04 	vstr	s0, [r5, #-16]
 802956e:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8029572:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8029576:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802957a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802957e:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029582:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029586:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802958a:	f2c0 808f 	blt.w	80296ac <arm_cmplx_mag_f32+0x16c>
 802958e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029592:	eeb4 0a40 	vcmp.f32	s0, s0
 8029596:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802959a:	f040 80af 	bne.w	80296fc <arm_cmplx_mag_f32+0x1bc>
 802959e:	ed05 0a03 	vstr	s0, [r5, #-12]
 80295a2:	ed54 7a04 	vldr	s15, [r4, #-16]
 80295a6:	ed14 0a03 	vldr	s0, [r4, #-12]
 80295aa:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80295ae:	ee20 0a00 	vmul.f32	s0, s0, s0
 80295b2:	ee77 7a80 	vadd.f32	s15, s15, s0
 80295b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80295ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295be:	db72      	blt.n	80296a6 <arm_cmplx_mag_f32+0x166>
 80295c0:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80295c4:	eeb4 0a40 	vcmp.f32	s0, s0
 80295c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295cc:	f040 808c 	bne.w	80296e8 <arm_cmplx_mag_f32+0x1a8>
 80295d0:	ed05 0a02 	vstr	s0, [r5, #-8]
 80295d4:	ed54 7a02 	vldr	s15, [r4, #-8]
 80295d8:	ed14 0a01 	vldr	s0, [r4, #-4]
 80295dc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80295e0:	ee20 0a00 	vmul.f32	s0, s0, s0
 80295e4:	ee77 7a80 	vadd.f32	s15, s15, s0
 80295e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80295ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295f0:	db20      	blt.n	8029634 <arm_cmplx_mag_f32+0xf4>
 80295f2:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80295f6:	eeb4 0a40 	vcmp.f32	s0, s0
 80295fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295fe:	d169      	bne.n	80296d4 <arm_cmplx_mag_f32+0x194>
 8029600:	3e01      	subs	r6, #1
 8029602:	ed05 0a01 	vstr	s0, [r5, #-4]
 8029606:	f104 0420 	add.w	r4, r4, #32
 802960a:	f105 0510 	add.w	r5, r5, #16
 802960e:	d019      	beq.n	8029644 <arm_cmplx_mag_f32+0x104>
 8029610:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8029614:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8029618:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802961c:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029620:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029624:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029628:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802962c:	da95      	bge.n	802955a <arm_cmplx_mag_f32+0x1a>
 802962e:	f845 7c10 	str.w	r7, [r5, #-16]
 8029632:	e79c      	b.n	802956e <arm_cmplx_mag_f32+0x2e>
 8029634:	3e01      	subs	r6, #1
 8029636:	f845 7c04 	str.w	r7, [r5, #-4]
 802963a:	f104 0420 	add.w	r4, r4, #32
 802963e:	f105 0510 	add.w	r5, r5, #16
 8029642:	d1e5      	bne.n	8029610 <arm_cmplx_mag_f32+0xd0>
 8029644:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8029648:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802964c:	f012 0503 	ands.w	r5, r2, #3
 8029650:	d026      	beq.n	80296a0 <arm_cmplx_mag_f32+0x160>
 8029652:	2600      	movs	r6, #0
 8029654:	f100 0408 	add.w	r4, r0, #8
 8029658:	e00c      	b.n	8029674 <arm_cmplx_mag_f32+0x134>
 802965a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802965e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029666:	d12e      	bne.n	80296c6 <arm_cmplx_mag_f32+0x186>
 8029668:	3d01      	subs	r5, #1
 802966a:	ed01 0a01 	vstr	s0, [r1, #-4]
 802966e:	f104 0408 	add.w	r4, r4, #8
 8029672:	d015      	beq.n	80296a0 <arm_cmplx_mag_f32+0x160>
 8029674:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029678:	ed14 0a01 	vldr	s0, [r4, #-4]
 802967c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029680:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029684:	3104      	adds	r1, #4
 8029686:	ee77 7a80 	vadd.f32	s15, s15, s0
 802968a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802968e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029692:	dae2      	bge.n	802965a <arm_cmplx_mag_f32+0x11a>
 8029694:	3d01      	subs	r5, #1
 8029696:	f841 6c04 	str.w	r6, [r1, #-4]
 802969a:	f104 0408 	add.w	r4, r4, #8
 802969e:	d1e9      	bne.n	8029674 <arm_cmplx_mag_f32+0x134>
 80296a0:	b004      	add	sp, #16
 80296a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80296a6:	f845 7c08 	str.w	r7, [r5, #-8]
 80296aa:	e793      	b.n	80295d4 <arm_cmplx_mag_f32+0x94>
 80296ac:	f845 7c0c 	str.w	r7, [r5, #-12]
 80296b0:	e777      	b.n	80295a2 <arm_cmplx_mag_f32+0x62>
 80296b2:	eeb0 0a67 	vmov.f32	s0, s15
 80296b6:	9203      	str	r2, [sp, #12]
 80296b8:	9102      	str	r1, [sp, #8]
 80296ba:	9001      	str	r0, [sp, #4]
 80296bc:	f000 fb38 	bl	8029d30 <sqrtf>
 80296c0:	a801      	add	r0, sp, #4
 80296c2:	c807      	ldmia	r0, {r0, r1, r2}
 80296c4:	e751      	b.n	802956a <arm_cmplx_mag_f32+0x2a>
 80296c6:	eeb0 0a67 	vmov.f32	s0, s15
 80296ca:	9101      	str	r1, [sp, #4]
 80296cc:	f000 fb30 	bl	8029d30 <sqrtf>
 80296d0:	9901      	ldr	r1, [sp, #4]
 80296d2:	e7c9      	b.n	8029668 <arm_cmplx_mag_f32+0x128>
 80296d4:	eeb0 0a67 	vmov.f32	s0, s15
 80296d8:	9203      	str	r2, [sp, #12]
 80296da:	9102      	str	r1, [sp, #8]
 80296dc:	9001      	str	r0, [sp, #4]
 80296de:	f000 fb27 	bl	8029d30 <sqrtf>
 80296e2:	a801      	add	r0, sp, #4
 80296e4:	c807      	ldmia	r0, {r0, r1, r2}
 80296e6:	e78b      	b.n	8029600 <arm_cmplx_mag_f32+0xc0>
 80296e8:	eeb0 0a67 	vmov.f32	s0, s15
 80296ec:	9203      	str	r2, [sp, #12]
 80296ee:	9102      	str	r1, [sp, #8]
 80296f0:	9001      	str	r0, [sp, #4]
 80296f2:	f000 fb1d 	bl	8029d30 <sqrtf>
 80296f6:	a801      	add	r0, sp, #4
 80296f8:	c807      	ldmia	r0, {r0, r1, r2}
 80296fa:	e769      	b.n	80295d0 <arm_cmplx_mag_f32+0x90>
 80296fc:	eeb0 0a67 	vmov.f32	s0, s15
 8029700:	9203      	str	r2, [sp, #12]
 8029702:	9102      	str	r1, [sp, #8]
 8029704:	9001      	str	r0, [sp, #4]
 8029706:	f000 fb13 	bl	8029d30 <sqrtf>
 802970a:	a801      	add	r0, sp, #4
 802970c:	c807      	ldmia	r0, {r0, r1, r2}
 802970e:	e746      	b.n	802959e <arm_cmplx_mag_f32+0x5e>

08029710 <arm_radix8_butterfly_f32>:
 8029710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029714:	ed2d 8b10 	vpush	{d8-d15}
 8029718:	b09d      	sub	sp, #116	; 0x74
 802971a:	461c      	mov	r4, r3
 802971c:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029a40 <arm_radix8_butterfly_f32+0x330>
 8029720:	921a      	str	r2, [sp, #104]	; 0x68
 8029722:	1d03      	adds	r3, r0, #4
 8029724:	4682      	mov	sl, r0
 8029726:	4689      	mov	r9, r1
 8029728:	468b      	mov	fp, r1
 802972a:	931b      	str	r3, [sp, #108]	; 0x6c
 802972c:	9400      	str	r4, [sp, #0]
 802972e:	469e      	mov	lr, r3
 8029730:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8029734:	005a      	lsls	r2, r3, #1
 8029736:	18d6      	adds	r6, r2, r3
 8029738:	18f5      	adds	r5, r6, r3
 802973a:	9203      	str	r2, [sp, #12]
 802973c:	195a      	adds	r2, r3, r5
 802973e:	18d0      	adds	r0, r2, r3
 8029740:	00df      	lsls	r7, r3, #3
 8029742:	1819      	adds	r1, r3, r0
 8029744:	463c      	mov	r4, r7
 8029746:	9701      	str	r7, [sp, #4]
 8029748:	4457      	add	r7, sl
 802974a:	930c      	str	r3, [sp, #48]	; 0x30
 802974c:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8029750:	011b      	lsls	r3, r3, #4
 8029752:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8029756:	eb07 0c04 	add.w	ip, r7, r4
 802975a:	9c00      	ldr	r4, [sp, #0]
 802975c:	9302      	str	r3, [sp, #8]
 802975e:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8029762:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8029766:	3204      	adds	r2, #4
 8029768:	3104      	adds	r1, #4
 802976a:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802976e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8029772:	f04f 0800 	mov.w	r8, #0
 8029776:	eddc 7a00 	vldr	s15, [ip]
 802977a:	edd7 6a00 	vldr	s13, [r7]
 802977e:	edd6 3a00 	vldr	s7, [r6]
 8029782:	ed5e aa01 	vldr	s21, [lr, #-4]
 8029786:	edd5 4a00 	vldr	s9, [r5]
 802978a:	ed90 2a00 	vldr	s4, [r0]
 802978e:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029792:	ed51 0a01 	vldr	s1, [r1, #-4]
 8029796:	ee77 8a82 	vadd.f32	s17, s15, s4
 802979a:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802979e:	ee76 1a87 	vadd.f32	s3, s13, s14
 80297a2:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 80297a6:	ee31 6a84 	vadd.f32	s12, s3, s8
 80297aa:	ee33 5a28 	vadd.f32	s10, s6, s17
 80297ae:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80297b2:	ee75 6a06 	vadd.f32	s13, s10, s12
 80297b6:	ee35 5a46 	vsub.f32	s10, s10, s12
 80297ba:	ed4e 6a01 	vstr	s13, [lr, #-4]
 80297be:	ed85 5a00 	vstr	s10, [r5]
 80297c2:	ed96 1a01 	vldr	s2, [r6, #4]
 80297c6:	edd7 5a01 	vldr	s11, [r7, #4]
 80297ca:	ed92 aa00 	vldr	s20, [r2]
 80297ce:	ed91 6a00 	vldr	s12, [r1]
 80297d2:	ed9e 9a00 	vldr	s18, [lr]
 80297d6:	ed95 5a01 	vldr	s10, [r5, #4]
 80297da:	eddc 6a01 	vldr	s13, [ip, #4]
 80297de:	edd0 9a01 	vldr	s19, [r0, #4]
 80297e2:	ee73 0ae0 	vsub.f32	s1, s7, s1
 80297e6:	ee71 2a46 	vsub.f32	s5, s2, s12
 80297ea:	ee75 3aca 	vsub.f32	s7, s11, s20
 80297ee:	ee37 0a60 	vsub.f32	s0, s14, s1
 80297f2:	ee33 8aa2 	vadd.f32	s16, s7, s5
 80297f6:	ee37 7a20 	vadd.f32	s14, s14, s1
 80297fa:	ee73 2ae2 	vsub.f32	s5, s7, s5
 80297fe:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8029802:	ee79 3a05 	vadd.f32	s7, s18, s10
 8029806:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802980a:	ee39 5a45 	vsub.f32	s10, s18, s10
 802980e:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8029812:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8029816:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802981a:	ee31 6a06 	vadd.f32	s12, s2, s12
 802981e:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8029822:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8029826:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802982a:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802982e:	ee33 3a68 	vsub.f32	s6, s6, s17
 8029832:	ee36 0a88 	vadd.f32	s0, s13, s16
 8029836:	ee75 8a86 	vadd.f32	s17, s11, s12
 802983a:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802983e:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8029842:	ee75 6a62 	vsub.f32	s13, s10, s5
 8029846:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802984a:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802984e:	ee33 1a89 	vadd.f32	s2, s7, s18
 8029852:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8029856:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802985a:	ee75 4a22 	vadd.f32	s9, s10, s5
 802985e:	ee32 5a27 	vadd.f32	s10, s4, s15
 8029862:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029866:	ee33 8a06 	vadd.f32	s16, s6, s12
 802986a:	ee75 2a87 	vadd.f32	s5, s11, s14
 802986e:	ee31 9a28 	vadd.f32	s18, s2, s17
 8029872:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029876:	ee74 0a61 	vsub.f32	s1, s8, s3
 802987a:	ee33 2a80 	vadd.f32	s4, s7, s0
 802987e:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8029882:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8029886:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802988a:	ee31 1a68 	vsub.f32	s2, s2, s17
 802988e:	ee34 4a21 	vadd.f32	s8, s8, s3
 8029892:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8029896:	ee74 4a85 	vadd.f32	s9, s9, s10
 802989a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802989e:	44d8      	add	r8, fp
 80298a0:	45c1      	cmp	r9, r8
 80298a2:	ed8e 9a00 	vstr	s18, [lr]
 80298a6:	ed85 1a01 	vstr	s2, [r5, #4]
 80298aa:	449e      	add	lr, r3
 80298ac:	ed8c 8a00 	vstr	s16, [ip]
 80298b0:	441d      	add	r5, r3
 80298b2:	ed80 6a00 	vstr	s12, [r0]
 80298b6:	edcc 0a01 	vstr	s1, [ip, #4]
 80298ba:	ed80 4a01 	vstr	s8, [r0, #4]
 80298be:	449c      	add	ip, r3
 80298c0:	ed87 2a00 	vstr	s4, [r7]
 80298c4:	4418      	add	r0, r3
 80298c6:	ed41 3a01 	vstr	s7, [r1, #-4]
 80298ca:	ed42 2a01 	vstr	s5, [r2, #-4]
 80298ce:	ed86 7a00 	vstr	s14, [r6]
 80298d2:	ed87 3a01 	vstr	s6, [r7, #4]
 80298d6:	edc1 4a00 	vstr	s9, [r1]
 80298da:	441f      	add	r7, r3
 80298dc:	edc2 5a00 	vstr	s11, [r2]
 80298e0:	4419      	add	r1, r3
 80298e2:	edc6 6a01 	vstr	s13, [r6, #4]
 80298e6:	441a      	add	r2, r3
 80298e8:	441e      	add	r6, r3
 80298ea:	f63f af44 	bhi.w	8029776 <arm_radix8_butterfly_f32+0x66>
 80298ee:	990c      	ldr	r1, [sp, #48]	; 0x30
 80298f0:	2907      	cmp	r1, #7
 80298f2:	4620      	mov	r0, r4
 80298f4:	f240 81e9 	bls.w	8029cca <arm_radix8_butterfly_f32+0x5ba>
 80298f8:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 80298fc:	193e      	adds	r6, r7, r4
 80298fe:	1935      	adds	r5, r6, r4
 8029900:	9c03      	ldr	r4, [sp, #12]
 8029902:	9000      	str	r0, [sp, #0]
 8029904:	4622      	mov	r2, r4
 8029906:	3201      	adds	r2, #1
 8029908:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802990c:	9900      	ldr	r1, [sp, #0]
 802990e:	1828      	adds	r0, r5, r0
 8029910:	eb00 0e01 	add.w	lr, r0, r1
 8029914:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029916:	440a      	add	r2, r1
 8029918:	eb04 0c01 	add.w	ip, r4, r1
 802991c:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8029920:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8029924:	9a00      	ldr	r2, [sp, #0]
 8029926:	940f      	str	r4, [sp, #60]	; 0x3c
 8029928:	00ed      	lsls	r5, r5, #3
 802992a:	9511      	str	r5, [sp, #68]	; 0x44
 802992c:	00d5      	lsls	r5, r2, #3
 802992e:	950d      	str	r5, [sp, #52]	; 0x34
 8029930:	9d01      	ldr	r5, [sp, #4]
 8029932:	3508      	adds	r5, #8
 8029934:	9516      	str	r5, [sp, #88]	; 0x58
 8029936:	9d02      	ldr	r5, [sp, #8]
 8029938:	3508      	adds	r5, #8
 802993a:	0114      	lsls	r4, r2, #4
 802993c:	9517      	str	r5, [sp, #92]	; 0x5c
 802993e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029940:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029942:	940e      	str	r4, [sp, #56]	; 0x38
 8029944:	00c0      	lsls	r0, r0, #3
 8029946:	9010      	str	r0, [sp, #64]	; 0x40
 8029948:	18aa      	adds	r2, r5, r2
 802994a:	9207      	str	r2, [sp, #28]
 802994c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802994e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029950:	18aa      	adds	r2, r5, r2
 8029952:	9208      	str	r2, [sp, #32]
 8029954:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029956:	18aa      	adds	r2, r5, r2
 8029958:	9209      	str	r2, [sp, #36]	; 0x24
 802995a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802995e:	f10e 0204 	add.w	r2, lr, #4
 8029962:	920a      	str	r2, [sp, #40]	; 0x28
 8029964:	00c9      	lsls	r1, r1, #3
 8029966:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8029968:	310c      	adds	r1, #12
 802996a:	00f6      	lsls	r6, r6, #3
 802996c:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029970:	9114      	str	r1, [sp, #80]	; 0x50
 8029972:	18a9      	adds	r1, r5, r2
 8029974:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029976:	9612      	str	r6, [sp, #72]	; 0x48
 8029978:	00ff      	lsls	r7, r7, #3
 802997a:	19ae      	adds	r6, r5, r6
 802997c:	3008      	adds	r0, #8
 802997e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029982:	9606      	str	r6, [sp, #24]
 8029984:	9019      	str	r0, [sp, #100]	; 0x64
 8029986:	18aa      	adds	r2, r5, r2
 8029988:	0164      	lsls	r4, r4, #5
 802998a:	19ee      	adds	r6, r5, r7
 802998c:	f10c 000c 	add.w	r0, ip, #12
 8029990:	9713      	str	r7, [sp, #76]	; 0x4c
 8029992:	9604      	str	r6, [sp, #16]
 8029994:	9015      	str	r0, [sp, #84]	; 0x54
 8029996:	9103      	str	r1, [sp, #12]
 8029998:	9205      	str	r2, [sp, #20]
 802999a:	f104 0208 	add.w	r2, r4, #8
 802999e:	9218      	str	r2, [sp, #96]	; 0x60
 80299a0:	f04f 0801 	mov.w	r8, #1
 80299a4:	2200      	movs	r2, #0
 80299a6:	f102 0108 	add.w	r1, r2, #8
 80299aa:	460f      	mov	r7, r1
 80299ac:	910b      	str	r1, [sp, #44]	; 0x2c
 80299ae:	9918      	ldr	r1, [sp, #96]	; 0x60
 80299b0:	188e      	adds	r6, r1, r2
 80299b2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80299b4:	188d      	adds	r5, r1, r2
 80299b6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80299b8:	188c      	adds	r4, r1, r2
 80299ba:	9919      	ldr	r1, [sp, #100]	; 0x64
 80299bc:	1888      	adds	r0, r1, r2
 80299be:	9914      	ldr	r1, [sp, #80]	; 0x50
 80299c0:	eb01 0c02 	add.w	ip, r1, r2
 80299c4:	9915      	ldr	r1, [sp, #84]	; 0x54
 80299c6:	440a      	add	r2, r1
 80299c8:	9903      	ldr	r1, [sp, #12]
 80299ca:	edd1 fa00 	vldr	s31, [r1]
 80299ce:	9905      	ldr	r1, [sp, #20]
 80299d0:	ed91 fa00 	vldr	s30, [r1]
 80299d4:	9904      	ldr	r1, [sp, #16]
 80299d6:	edd1 ea00 	vldr	s29, [r1]
 80299da:	9906      	ldr	r1, [sp, #24]
 80299dc:	ed91 ea00 	vldr	s28, [r1]
 80299e0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80299e2:	edd1 da00 	vldr	s27, [r1]
 80299e6:	9908      	ldr	r1, [sp, #32]
 80299e8:	ed91 da00 	vldr	s26, [r1]
 80299ec:	9907      	ldr	r1, [sp, #28]
 80299ee:	edd1 ca00 	vldr	s25, [r1]
 80299f2:	9903      	ldr	r1, [sp, #12]
 80299f4:	ed91 ca01 	vldr	s24, [r1, #4]
 80299f8:	9905      	ldr	r1, [sp, #20]
 80299fa:	edd1 ba01 	vldr	s23, [r1, #4]
 80299fe:	9904      	ldr	r1, [sp, #16]
 8029a00:	edd1 aa01 	vldr	s21, [r1, #4]
 8029a04:	9906      	ldr	r1, [sp, #24]
 8029a06:	ed91 aa01 	vldr	s20, [r1, #4]
 8029a0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029a0c:	edd1 7a01 	vldr	s15, [r1, #4]
 8029a10:	9908      	ldr	r1, [sp, #32]
 8029a12:	edcd 7a00 	vstr	s15, [sp]
 8029a16:	edd1 7a01 	vldr	s15, [r1, #4]
 8029a1a:	9907      	ldr	r1, [sp, #28]
 8029a1c:	edcd 7a01 	vstr	s15, [sp, #4]
 8029a20:	edd1 7a01 	vldr	s15, [r1, #4]
 8029a24:	eb0a 0e07 	add.w	lr, sl, r7
 8029a28:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8029a2a:	edcd 7a02 	vstr	s15, [sp, #8]
 8029a2e:	eb0c 010a 	add.w	r1, ip, sl
 8029a32:	4456      	add	r6, sl
 8029a34:	4455      	add	r5, sl
 8029a36:	4454      	add	r4, sl
 8029a38:	4450      	add	r0, sl
 8029a3a:	4452      	add	r2, sl
 8029a3c:	46c4      	mov	ip, r8
 8029a3e:	e001      	b.n	8029a44 <arm_radix8_butterfly_f32+0x334>
 8029a40:	3f3504f3 	.word	0x3f3504f3
 8029a44:	ed96 5a00 	vldr	s10, [r6]
 8029a48:	ed52 9a01 	vldr	s19, [r2, #-4]
 8029a4c:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029a50:	edd0 7a00 	vldr	s15, [r0]
 8029a54:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029a58:	edde 3a00 	vldr	s7, [lr]
 8029a5c:	ed94 3a00 	vldr	s6, [r4]
 8029a60:	ed95 2a00 	vldr	s4, [r5]
 8029a64:	ed9e 0a01 	vldr	s0, [lr, #4]
 8029a68:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029a6c:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029a70:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029a74:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029a78:	ee78 1a04 	vadd.f32	s3, s16, s8
 8029a7c:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029a80:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029a84:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029a88:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029a8c:	ed8e 6a00 	vstr	s12, [lr]
 8029a90:	edd0 8a01 	vldr	s17, [r0, #4]
 8029a94:	ed95 9a01 	vldr	s18, [r5, #4]
 8029a98:	edd1 2a00 	vldr	s5, [r1]
 8029a9c:	ed97 7a00 	vldr	s14, [r7]
 8029aa0:	edd4 0a01 	vldr	s1, [r4, #4]
 8029aa4:	ed96 6a01 	vldr	s12, [r6, #4]
 8029aa8:	edd2 5a00 	vldr	s11, [r2]
 8029aac:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029ab0:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029ab4:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029ab8:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8029abc:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029ac0:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029ac4:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029ac8:	ee79 2a22 	vadd.f32	s5, s18, s5
 8029acc:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029ad0:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029ad4:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029ad8:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029adc:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029ae0:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029ae4:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029ae8:	ee32 9a08 	vadd.f32	s18, s4, s16
 8029aec:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029af0:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029af4:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029af8:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8029afc:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029b00:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029b04:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029b08:	ee30 6a46 	vsub.f32	s12, s0, s12
 8029b0c:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029b10:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029b14:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029b18:	ee32 7a64 	vsub.f32	s14, s4, s9
 8029b1c:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029b20:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029b24:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029b28:	ee75 8a85 	vadd.f32	s17, s11, s10
 8029b2c:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029b30:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029b34:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029b38:	ee79 1a41 	vsub.f32	s3, s18, s2
 8029b3c:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029b40:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029b44:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029b48:	ee72 4a24 	vadd.f32	s9, s4, s9
 8029b4c:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029b50:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029b54:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029b58:	ee77 9a85 	vadd.f32	s19, s15, s10
 8029b5c:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029b60:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029b64:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029b68:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8029b6c:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029b70:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029b74:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029b78:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8029b7c:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029b80:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029b84:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029b88:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8029b8c:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029b90:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029b94:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029b98:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8029b9c:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029ba0:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029ba4:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029ba8:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8029bac:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029bb0:	ed86 3a00 	vstr	s6, [r6]
 8029bb4:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029bb8:	ee32 2a05 	vadd.f32	s4, s4, s10
 8029bbc:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029bc0:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029bc4:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029bc8:	ee64 1a00 	vmul.f32	s3, s8, s0
 8029bcc:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029bd0:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029bd4:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029bd8:	ee64 8a28 	vmul.f32	s17, s8, s17
 8029bdc:	ed9d 4a00 	vldr	s8, [sp]
 8029be0:	edc6 6a01 	vstr	s13, [r6, #4]
 8029be4:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029be8:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8029bec:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029bf0:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029bf4:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029bf8:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029bfc:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029c00:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029c04:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029c08:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8029c0c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029c10:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029c14:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029c18:	ee30 0a68 	vsub.f32	s0, s0, s17
 8029c1c:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8029c20:	ee70 0a84 	vadd.f32	s1, s1, s8
 8029c24:	ee36 6a67 	vsub.f32	s12, s12, s15
 8029c28:	44dc      	add	ip, fp
 8029c2a:	45e1      	cmp	r9, ip
 8029c2c:	ed84 9a00 	vstr	s18, [r4]
 8029c30:	edc4 3a01 	vstr	s7, [r4, #4]
 8029c34:	449e      	add	lr, r3
 8029c36:	ed02 7a01 	vstr	s14, [r2, #-4]
 8029c3a:	edc2 2a00 	vstr	s5, [r2]
 8029c3e:	441e      	add	r6, r3
 8029c40:	ed85 2a00 	vstr	s4, [r5]
 8029c44:	ed85 8a01 	vstr	s16, [r5, #4]
 8029c48:	441c      	add	r4, r3
 8029c4a:	ed47 1a01 	vstr	s3, [r7, #-4]
 8029c4e:	ed87 0a00 	vstr	s0, [r7]
 8029c52:	441a      	add	r2, r3
 8029c54:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029c58:	edc1 9a00 	vstr	s19, [r1]
 8029c5c:	441d      	add	r5, r3
 8029c5e:	edc0 0a00 	vstr	s1, [r0]
 8029c62:	441f      	add	r7, r3
 8029c64:	ed80 6a01 	vstr	s12, [r0, #4]
 8029c68:	4419      	add	r1, r3
 8029c6a:	4418      	add	r0, r3
 8029c6c:	f63f aeea 	bhi.w	8029a44 <arm_radix8_butterfly_f32+0x334>
 8029c70:	9a03      	ldr	r2, [sp, #12]
 8029c72:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029c74:	440a      	add	r2, r1
 8029c76:	9203      	str	r2, [sp, #12]
 8029c78:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029c7a:	9a05      	ldr	r2, [sp, #20]
 8029c7c:	440a      	add	r2, r1
 8029c7e:	9205      	str	r2, [sp, #20]
 8029c80:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029c82:	9a04      	ldr	r2, [sp, #16]
 8029c84:	440a      	add	r2, r1
 8029c86:	9204      	str	r2, [sp, #16]
 8029c88:	9912      	ldr	r1, [sp, #72]	; 0x48
 8029c8a:	9a06      	ldr	r2, [sp, #24]
 8029c8c:	440a      	add	r2, r1
 8029c8e:	9206      	str	r2, [sp, #24]
 8029c90:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029c92:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029c94:	440a      	add	r2, r1
 8029c96:	9209      	str	r2, [sp, #36]	; 0x24
 8029c98:	9910      	ldr	r1, [sp, #64]	; 0x40
 8029c9a:	9a08      	ldr	r2, [sp, #32]
 8029c9c:	440a      	add	r2, r1
 8029c9e:	9208      	str	r2, [sp, #32]
 8029ca0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029ca2:	9a07      	ldr	r2, [sp, #28]
 8029ca4:	440a      	add	r2, r1
 8029ca6:	9207      	str	r2, [sp, #28]
 8029ca8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029caa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029cac:	f108 0801 	add.w	r8, r8, #1
 8029cb0:	3208      	adds	r2, #8
 8029cb2:	4588      	cmp	r8, r1
 8029cb4:	920a      	str	r2, [sp, #40]	; 0x28
 8029cb6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029cb8:	f47f ae75 	bne.w	80299a6 <arm_radix8_butterfly_f32+0x296>
 8029cbc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029cc0:	9300      	str	r3, [sp, #0]
 8029cc2:	46c3      	mov	fp, r8
 8029cc4:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029cc8:	e532      	b.n	8029730 <arm_radix8_butterfly_f32+0x20>
 8029cca:	b01d      	add	sp, #116	; 0x74
 8029ccc:	ecbd 8b10 	vpop	{d8-d15}
 8029cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029cd4 <__aeabi_atexit>:
 8029cd4:	460b      	mov	r3, r1
 8029cd6:	4601      	mov	r1, r0
 8029cd8:	4618      	mov	r0, r3
 8029cda:	f000 bfc7 	b.w	802ac6c <__cxa_atexit>

08029cde <_ZdlPvj>:
 8029cde:	f000 b812 	b.w	8029d06 <_ZdlPv>

08029ce2 <__cxa_guard_acquire>:
 8029ce2:	6803      	ldr	r3, [r0, #0]
 8029ce4:	07db      	lsls	r3, r3, #31
 8029ce6:	d406      	bmi.n	8029cf6 <__cxa_guard_acquire+0x14>
 8029ce8:	7843      	ldrb	r3, [r0, #1]
 8029cea:	b103      	cbz	r3, 8029cee <__cxa_guard_acquire+0xc>
 8029cec:	deff      	udf	#255	; 0xff
 8029cee:	2301      	movs	r3, #1
 8029cf0:	7043      	strb	r3, [r0, #1]
 8029cf2:	4618      	mov	r0, r3
 8029cf4:	4770      	bx	lr
 8029cf6:	2000      	movs	r0, #0
 8029cf8:	4770      	bx	lr

08029cfa <__cxa_guard_release>:
 8029cfa:	2301      	movs	r3, #1
 8029cfc:	6003      	str	r3, [r0, #0]
 8029cfe:	4770      	bx	lr

08029d00 <__cxa_pure_virtual>:
 8029d00:	b508      	push	{r3, lr}
 8029d02:	f000 f80f 	bl	8029d24 <_ZSt9terminatev>

08029d06 <_ZdlPv>:
 8029d06:	f000 befd 	b.w	802ab04 <free>

08029d0a <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029d0a:	b508      	push	{r3, lr}
 8029d0c:	4780      	blx	r0
 8029d0e:	f000 fec5 	bl	802aa9c <abort>
	...

08029d14 <_ZSt13get_terminatev>:
 8029d14:	4b02      	ldr	r3, [pc, #8]	; (8029d20 <_ZSt13get_terminatev+0xc>)
 8029d16:	6818      	ldr	r0, [r3, #0]
 8029d18:	f3bf 8f5b 	dmb	ish
 8029d1c:	4770      	bx	lr
 8029d1e:	bf00      	nop
 8029d20:	20000104 	.word	0x20000104

08029d24 <_ZSt9terminatev>:
 8029d24:	b508      	push	{r3, lr}
 8029d26:	f7ff fff5 	bl	8029d14 <_ZSt13get_terminatev>
 8029d2a:	f7ff ffee 	bl	8029d0a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029d30 <sqrtf>:
 8029d30:	b508      	push	{r3, lr}
 8029d32:	ed2d 8b02 	vpush	{d8}
 8029d36:	eeb0 8a40 	vmov.f32	s16, s0
 8029d3a:	f000 f97d 	bl	802a038 <__ieee754_sqrtf>
 8029d3e:	eeb4 8a48 	vcmp.f32	s16, s16
 8029d42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029d46:	d60c      	bvs.n	8029d62 <sqrtf+0x32>
 8029d48:	eddf 8a07 	vldr	s17, [pc, #28]	; 8029d68 <sqrtf+0x38>
 8029d4c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029d50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029d54:	d505      	bpl.n	8029d62 <sqrtf+0x32>
 8029d56:	f001 f9a7 	bl	802b0a8 <__errno>
 8029d5a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029d5e:	2321      	movs	r3, #33	; 0x21
 8029d60:	6003      	str	r3, [r0, #0]
 8029d62:	ecbd 8b02 	vpop	{d8}
 8029d66:	bd08      	pop	{r3, pc}
 8029d68:	00000000 	.word	0x00000000

08029d6c <atanf>:
 8029d6c:	b538      	push	{r3, r4, r5, lr}
 8029d6e:	ee10 5a10 	vmov	r5, s0
 8029d72:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 8029d76:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 8029d7a:	eef0 7a40 	vmov.f32	s15, s0
 8029d7e:	db10      	blt.n	8029da2 <atanf+0x36>
 8029d80:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 8029d84:	dd04      	ble.n	8029d90 <atanf+0x24>
 8029d86:	ee70 7a00 	vadd.f32	s15, s0, s0
 8029d8a:	eeb0 0a67 	vmov.f32	s0, s15
 8029d8e:	bd38      	pop	{r3, r4, r5, pc}
 8029d90:	eddf 7a4d 	vldr	s15, [pc, #308]	; 8029ec8 <atanf+0x15c>
 8029d94:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 8029ecc <atanf+0x160>
 8029d98:	2d00      	cmp	r5, #0
 8029d9a:	bfd8      	it	le
 8029d9c:	eef0 7a47 	vmovle.f32	s15, s14
 8029da0:	e7f3      	b.n	8029d8a <atanf+0x1e>
 8029da2:	4b4b      	ldr	r3, [pc, #300]	; (8029ed0 <atanf+0x164>)
 8029da4:	429c      	cmp	r4, r3
 8029da6:	dc10      	bgt.n	8029dca <atanf+0x5e>
 8029da8:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 8029dac:	da0a      	bge.n	8029dc4 <atanf+0x58>
 8029dae:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8029ed4 <atanf+0x168>
 8029db2:	ee30 7a07 	vadd.f32	s14, s0, s14
 8029db6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029dba:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8029dbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029dc2:	dce2      	bgt.n	8029d8a <atanf+0x1e>
 8029dc4:	f04f 33ff 	mov.w	r3, #4294967295
 8029dc8:	e013      	b.n	8029df2 <atanf+0x86>
 8029dca:	f000 f8e7 	bl	8029f9c <fabsf>
 8029dce:	4b42      	ldr	r3, [pc, #264]	; (8029ed8 <atanf+0x16c>)
 8029dd0:	429c      	cmp	r4, r3
 8029dd2:	dc4f      	bgt.n	8029e74 <atanf+0x108>
 8029dd4:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 8029dd8:	429c      	cmp	r4, r3
 8029dda:	dc41      	bgt.n	8029e60 <atanf+0xf4>
 8029ddc:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 8029de0:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8029de4:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029de8:	2300      	movs	r3, #0
 8029dea:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029dee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029df2:	1c5a      	adds	r2, r3, #1
 8029df4:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8029df8:	ed9f 7a38 	vldr	s14, [pc, #224]	; 8029edc <atanf+0x170>
 8029dfc:	eddf 5a38 	vldr	s11, [pc, #224]	; 8029ee0 <atanf+0x174>
 8029e00:	ed9f 5a38 	vldr	s10, [pc, #224]	; 8029ee4 <atanf+0x178>
 8029e04:	ee66 6a06 	vmul.f32	s13, s12, s12
 8029e08:	eee6 5a87 	vfma.f32	s11, s13, s14
 8029e0c:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8029ee8 <atanf+0x17c>
 8029e10:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029e14:	eddf 5a35 	vldr	s11, [pc, #212]	; 8029eec <atanf+0x180>
 8029e18:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029e1c:	ed9f 7a34 	vldr	s14, [pc, #208]	; 8029ef0 <atanf+0x184>
 8029e20:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029e24:	eddf 5a33 	vldr	s11, [pc, #204]	; 8029ef4 <atanf+0x188>
 8029e28:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029e2c:	ed9f 7a32 	vldr	s14, [pc, #200]	; 8029ef8 <atanf+0x18c>
 8029e30:	eea6 5a87 	vfma.f32	s10, s13, s14
 8029e34:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8029efc <atanf+0x190>
 8029e38:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029e3c:	ed9f 5a30 	vldr	s10, [pc, #192]	; 8029f00 <atanf+0x194>
 8029e40:	eea7 5a26 	vfma.f32	s10, s14, s13
 8029e44:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 8029f04 <atanf+0x198>
 8029e48:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029e4c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8029e50:	eea5 7a86 	vfma.f32	s14, s11, s12
 8029e54:	ee27 7a87 	vmul.f32	s14, s15, s14
 8029e58:	d121      	bne.n	8029e9e <atanf+0x132>
 8029e5a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029e5e:	e794      	b.n	8029d8a <atanf+0x1e>
 8029e60:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029e64:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029e68:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029e6c:	2301      	movs	r3, #1
 8029e6e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029e72:	e7be      	b.n	8029df2 <atanf+0x86>
 8029e74:	4b24      	ldr	r3, [pc, #144]	; (8029f08 <atanf+0x19c>)
 8029e76:	429c      	cmp	r4, r3
 8029e78:	dc0b      	bgt.n	8029e92 <atanf+0x126>
 8029e7a:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8029e7e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029e82:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029e86:	2302      	movs	r3, #2
 8029e88:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029e8c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8029e90:	e7af      	b.n	8029df2 <atanf+0x86>
 8029e92:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8029e96:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029e9a:	2303      	movs	r3, #3
 8029e9c:	e7a9      	b.n	8029df2 <atanf+0x86>
 8029e9e:	4a1b      	ldr	r2, [pc, #108]	; (8029f0c <atanf+0x1a0>)
 8029ea0:	491b      	ldr	r1, [pc, #108]	; (8029f10 <atanf+0x1a4>)
 8029ea2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029ea6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8029eaa:	edd3 6a00 	vldr	s13, [r3]
 8029eae:	ee37 7a66 	vsub.f32	s14, s14, s13
 8029eb2:	2d00      	cmp	r5, #0
 8029eb4:	ee37 7a67 	vsub.f32	s14, s14, s15
 8029eb8:	edd2 7a00 	vldr	s15, [r2]
 8029ebc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029ec0:	bfb8      	it	lt
 8029ec2:	eef1 7a67 	vneglt.f32	s15, s15
 8029ec6:	e760      	b.n	8029d8a <atanf+0x1e>
 8029ec8:	3fc90fdb 	.word	0x3fc90fdb
 8029ecc:	bfc90fdb 	.word	0xbfc90fdb
 8029ed0:	3edfffff 	.word	0x3edfffff
 8029ed4:	7149f2ca 	.word	0x7149f2ca
 8029ed8:	3f97ffff 	.word	0x3f97ffff
 8029edc:	3c8569d7 	.word	0x3c8569d7
 8029ee0:	3d4bda59 	.word	0x3d4bda59
 8029ee4:	bd6ef16b 	.word	0xbd6ef16b
 8029ee8:	3d886b35 	.word	0x3d886b35
 8029eec:	3dba2e6e 	.word	0x3dba2e6e
 8029ef0:	3e124925 	.word	0x3e124925
 8029ef4:	3eaaaaab 	.word	0x3eaaaaab
 8029ef8:	bd15a221 	.word	0xbd15a221
 8029efc:	bd9d8795 	.word	0xbd9d8795
 8029f00:	bde38e38 	.word	0xbde38e38
 8029f04:	be4ccccd 	.word	0xbe4ccccd
 8029f08:	401bffff 	.word	0x401bffff
 8029f0c:	08042d10 	.word	0x08042d10
 8029f10:	08042d20 	.word	0x08042d20

08029f14 <cosf>:
 8029f14:	ee10 3a10 	vmov	r3, s0
 8029f18:	b507      	push	{r0, r1, r2, lr}
 8029f1a:	4a1e      	ldr	r2, [pc, #120]	; (8029f94 <cosf+0x80>)
 8029f1c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029f20:	4293      	cmp	r3, r2
 8029f22:	dc06      	bgt.n	8029f32 <cosf+0x1e>
 8029f24:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8029f98 <cosf+0x84>
 8029f28:	b003      	add	sp, #12
 8029f2a:	f85d eb04 	ldr.w	lr, [sp], #4
 8029f2e:	f000 b90b 	b.w	802a148 <__kernel_cosf>
 8029f32:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029f36:	db04      	blt.n	8029f42 <cosf+0x2e>
 8029f38:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029f3c:	b003      	add	sp, #12
 8029f3e:	f85d fb04 	ldr.w	pc, [sp], #4
 8029f42:	4668      	mov	r0, sp
 8029f44:	f000 f9a6 	bl	802a294 <__ieee754_rem_pio2f>
 8029f48:	f000 0003 	and.w	r0, r0, #3
 8029f4c:	2801      	cmp	r0, #1
 8029f4e:	d009      	beq.n	8029f64 <cosf+0x50>
 8029f50:	2802      	cmp	r0, #2
 8029f52:	d010      	beq.n	8029f76 <cosf+0x62>
 8029f54:	b9b0      	cbnz	r0, 8029f84 <cosf+0x70>
 8029f56:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f5a:	ed9d 0a00 	vldr	s0, [sp]
 8029f5e:	f000 f8f3 	bl	802a148 <__kernel_cosf>
 8029f62:	e7eb      	b.n	8029f3c <cosf+0x28>
 8029f64:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f68:	ed9d 0a00 	vldr	s0, [sp]
 8029f6c:	f000 f94a 	bl	802a204 <__kernel_sinf>
 8029f70:	eeb1 0a40 	vneg.f32	s0, s0
 8029f74:	e7e2      	b.n	8029f3c <cosf+0x28>
 8029f76:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f7a:	ed9d 0a00 	vldr	s0, [sp]
 8029f7e:	f000 f8e3 	bl	802a148 <__kernel_cosf>
 8029f82:	e7f5      	b.n	8029f70 <cosf+0x5c>
 8029f84:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f88:	ed9d 0a00 	vldr	s0, [sp]
 8029f8c:	2001      	movs	r0, #1
 8029f8e:	f000 f939 	bl	802a204 <__kernel_sinf>
 8029f92:	e7d3      	b.n	8029f3c <cosf+0x28>
 8029f94:	3f490fd8 	.word	0x3f490fd8
 8029f98:	00000000 	.word	0x00000000

08029f9c <fabsf>:
 8029f9c:	ee10 3a10 	vmov	r3, s0
 8029fa0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029fa4:	ee00 3a10 	vmov	s0, r3
 8029fa8:	4770      	bx	lr
	...

08029fac <sinf>:
 8029fac:	ee10 3a10 	vmov	r3, s0
 8029fb0:	b507      	push	{r0, r1, r2, lr}
 8029fb2:	4a1f      	ldr	r2, [pc, #124]	; (802a030 <sinf+0x84>)
 8029fb4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029fb8:	4293      	cmp	r3, r2
 8029fba:	dc07      	bgt.n	8029fcc <sinf+0x20>
 8029fbc:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a034 <sinf+0x88>
 8029fc0:	2000      	movs	r0, #0
 8029fc2:	b003      	add	sp, #12
 8029fc4:	f85d eb04 	ldr.w	lr, [sp], #4
 8029fc8:	f000 b91c 	b.w	802a204 <__kernel_sinf>
 8029fcc:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029fd0:	db04      	blt.n	8029fdc <sinf+0x30>
 8029fd2:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029fd6:	b003      	add	sp, #12
 8029fd8:	f85d fb04 	ldr.w	pc, [sp], #4
 8029fdc:	4668      	mov	r0, sp
 8029fde:	f000 f959 	bl	802a294 <__ieee754_rem_pio2f>
 8029fe2:	f000 0003 	and.w	r0, r0, #3
 8029fe6:	2801      	cmp	r0, #1
 8029fe8:	d00a      	beq.n	802a000 <sinf+0x54>
 8029fea:	2802      	cmp	r0, #2
 8029fec:	d00f      	beq.n	802a00e <sinf+0x62>
 8029fee:	b9c0      	cbnz	r0, 802a022 <sinf+0x76>
 8029ff0:	eddd 0a01 	vldr	s1, [sp, #4]
 8029ff4:	ed9d 0a00 	vldr	s0, [sp]
 8029ff8:	2001      	movs	r0, #1
 8029ffa:	f000 f903 	bl	802a204 <__kernel_sinf>
 8029ffe:	e7ea      	b.n	8029fd6 <sinf+0x2a>
 802a000:	eddd 0a01 	vldr	s1, [sp, #4]
 802a004:	ed9d 0a00 	vldr	s0, [sp]
 802a008:	f000 f89e 	bl	802a148 <__kernel_cosf>
 802a00c:	e7e3      	b.n	8029fd6 <sinf+0x2a>
 802a00e:	eddd 0a01 	vldr	s1, [sp, #4]
 802a012:	ed9d 0a00 	vldr	s0, [sp]
 802a016:	2001      	movs	r0, #1
 802a018:	f000 f8f4 	bl	802a204 <__kernel_sinf>
 802a01c:	eeb1 0a40 	vneg.f32	s0, s0
 802a020:	e7d9      	b.n	8029fd6 <sinf+0x2a>
 802a022:	eddd 0a01 	vldr	s1, [sp, #4]
 802a026:	ed9d 0a00 	vldr	s0, [sp]
 802a02a:	f000 f88d 	bl	802a148 <__kernel_cosf>
 802a02e:	e7f5      	b.n	802a01c <sinf+0x70>
 802a030:	3f490fd8 	.word	0x3f490fd8
 802a034:	00000000 	.word	0x00000000

0802a038 <__ieee754_sqrtf>:
 802a038:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802a03c:	4770      	bx	lr
	...

0802a040 <ceilf>:
 802a040:	ee10 3a10 	vmov	r3, s0
 802a044:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a048:	3a7f      	subs	r2, #127	; 0x7f
 802a04a:	2a16      	cmp	r2, #22
 802a04c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a050:	dc2a      	bgt.n	802a0a8 <ceilf+0x68>
 802a052:	2a00      	cmp	r2, #0
 802a054:	da11      	bge.n	802a07a <ceilf+0x3a>
 802a056:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a0bc <ceilf+0x7c>
 802a05a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a05e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a062:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a066:	dd05      	ble.n	802a074 <ceilf+0x34>
 802a068:	2b00      	cmp	r3, #0
 802a06a:	db23      	blt.n	802a0b4 <ceilf+0x74>
 802a06c:	2900      	cmp	r1, #0
 802a06e:	bf18      	it	ne
 802a070:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a074:	ee00 3a10 	vmov	s0, r3
 802a078:	4770      	bx	lr
 802a07a:	4911      	ldr	r1, [pc, #68]	; (802a0c0 <ceilf+0x80>)
 802a07c:	4111      	asrs	r1, r2
 802a07e:	420b      	tst	r3, r1
 802a080:	d0fa      	beq.n	802a078 <ceilf+0x38>
 802a082:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a0bc <ceilf+0x7c>
 802a086:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a08a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a08e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a092:	ddef      	ble.n	802a074 <ceilf+0x34>
 802a094:	2b00      	cmp	r3, #0
 802a096:	bfc2      	ittt	gt
 802a098:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a09c:	fa40 f202 	asrgt.w	r2, r0, r2
 802a0a0:	189b      	addgt	r3, r3, r2
 802a0a2:	ea23 0301 	bic.w	r3, r3, r1
 802a0a6:	e7e5      	b.n	802a074 <ceilf+0x34>
 802a0a8:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a0ac:	d3e4      	bcc.n	802a078 <ceilf+0x38>
 802a0ae:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a0b2:	4770      	bx	lr
 802a0b4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a0b8:	e7dc      	b.n	802a074 <ceilf+0x34>
 802a0ba:	bf00      	nop
 802a0bc:	7149f2ca 	.word	0x7149f2ca
 802a0c0:	007fffff 	.word	0x007fffff

0802a0c4 <floorf>:
 802a0c4:	ee10 3a10 	vmov	r3, s0
 802a0c8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a0cc:	3a7f      	subs	r2, #127	; 0x7f
 802a0ce:	2a16      	cmp	r2, #22
 802a0d0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a0d4:	dc2a      	bgt.n	802a12c <floorf+0x68>
 802a0d6:	2a00      	cmp	r2, #0
 802a0d8:	da11      	bge.n	802a0fe <floorf+0x3a>
 802a0da:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a13c <floorf+0x78>
 802a0de:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a0e2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a0e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a0ea:	dd05      	ble.n	802a0f8 <floorf+0x34>
 802a0ec:	2b00      	cmp	r3, #0
 802a0ee:	da23      	bge.n	802a138 <floorf+0x74>
 802a0f0:	4a13      	ldr	r2, [pc, #76]	; (802a140 <floorf+0x7c>)
 802a0f2:	2900      	cmp	r1, #0
 802a0f4:	bf18      	it	ne
 802a0f6:	4613      	movne	r3, r2
 802a0f8:	ee00 3a10 	vmov	s0, r3
 802a0fc:	4770      	bx	lr
 802a0fe:	4911      	ldr	r1, [pc, #68]	; (802a144 <floorf+0x80>)
 802a100:	4111      	asrs	r1, r2
 802a102:	420b      	tst	r3, r1
 802a104:	d0fa      	beq.n	802a0fc <floorf+0x38>
 802a106:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a13c <floorf+0x78>
 802a10a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a10e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a112:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a116:	ddef      	ble.n	802a0f8 <floorf+0x34>
 802a118:	2b00      	cmp	r3, #0
 802a11a:	bfbe      	ittt	lt
 802a11c:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a120:	fa40 f202 	asrlt.w	r2, r0, r2
 802a124:	189b      	addlt	r3, r3, r2
 802a126:	ea23 0301 	bic.w	r3, r3, r1
 802a12a:	e7e5      	b.n	802a0f8 <floorf+0x34>
 802a12c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a130:	d3e4      	bcc.n	802a0fc <floorf+0x38>
 802a132:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a136:	4770      	bx	lr
 802a138:	2300      	movs	r3, #0
 802a13a:	e7dd      	b.n	802a0f8 <floorf+0x34>
 802a13c:	7149f2ca 	.word	0x7149f2ca
 802a140:	bf800000 	.word	0xbf800000
 802a144:	007fffff 	.word	0x007fffff

0802a148 <__kernel_cosf>:
 802a148:	ee10 3a10 	vmov	r3, s0
 802a14c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a150:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a154:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a158:	da05      	bge.n	802a166 <__kernel_cosf+0x1e>
 802a15a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a15e:	ee17 2a90 	vmov	r2, s15
 802a162:	2a00      	cmp	r2, #0
 802a164:	d03b      	beq.n	802a1de <__kernel_cosf+0x96>
 802a166:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a16a:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a1e4 <__kernel_cosf+0x9c>
 802a16e:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a1e8 <__kernel_cosf+0xa0>
 802a172:	4a1e      	ldr	r2, [pc, #120]	; (802a1ec <__kernel_cosf+0xa4>)
 802a174:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a178:	4293      	cmp	r3, r2
 802a17a:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a1f0 <__kernel_cosf+0xa8>
 802a17e:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a182:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a1f4 <__kernel_cosf+0xac>
 802a186:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a18a:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a1f8 <__kernel_cosf+0xb0>
 802a18e:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a192:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a1fc <__kernel_cosf+0xb4>
 802a196:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a19a:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a19e:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a1a2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a1a6:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a1aa:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a1ae:	dc04      	bgt.n	802a1ba <__kernel_cosf+0x72>
 802a1b0:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a1b4:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a1b8:	4770      	bx	lr
 802a1ba:	4a11      	ldr	r2, [pc, #68]	; (802a200 <__kernel_cosf+0xb8>)
 802a1bc:	4293      	cmp	r3, r2
 802a1be:	bfda      	itte	le
 802a1c0:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a1c4:	ee07 3a10 	vmovle	s14, r3
 802a1c8:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a1cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a1d0:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a1d4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a1d8:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a1dc:	4770      	bx	lr
 802a1de:	eeb0 0a66 	vmov.f32	s0, s13
 802a1e2:	4770      	bx	lr
 802a1e4:	ad47d74e 	.word	0xad47d74e
 802a1e8:	310f74f6 	.word	0x310f74f6
 802a1ec:	3e999999 	.word	0x3e999999
 802a1f0:	b493f27c 	.word	0xb493f27c
 802a1f4:	37d00d01 	.word	0x37d00d01
 802a1f8:	bab60b61 	.word	0xbab60b61
 802a1fc:	3d2aaaab 	.word	0x3d2aaaab
 802a200:	3f480000 	.word	0x3f480000

0802a204 <__kernel_sinf>:
 802a204:	ee10 3a10 	vmov	r3, s0
 802a208:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a20c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a210:	da04      	bge.n	802a21c <__kernel_sinf+0x18>
 802a212:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a216:	ee17 3a90 	vmov	r3, s15
 802a21a:	b35b      	cbz	r3, 802a274 <__kernel_sinf+0x70>
 802a21c:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a220:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a278 <__kernel_sinf+0x74>
 802a224:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a27c <__kernel_sinf+0x78>
 802a228:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a22c:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a280 <__kernel_sinf+0x7c>
 802a230:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a234:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a284 <__kernel_sinf+0x80>
 802a238:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a23c:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a288 <__kernel_sinf+0x84>
 802a240:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a244:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a248:	b930      	cbnz	r0, 802a258 <__kernel_sinf+0x54>
 802a24a:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a28c <__kernel_sinf+0x88>
 802a24e:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a252:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a256:	4770      	bx	lr
 802a258:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a25c:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a260:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a264:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a268:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a290 <__kernel_sinf+0x8c>
 802a26c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a270:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a274:	4770      	bx	lr
 802a276:	bf00      	nop
 802a278:	2f2ec9d3 	.word	0x2f2ec9d3
 802a27c:	b2d72f34 	.word	0xb2d72f34
 802a280:	3638ef1b 	.word	0x3638ef1b
 802a284:	b9500d01 	.word	0xb9500d01
 802a288:	3c088889 	.word	0x3c088889
 802a28c:	be2aaaab 	.word	0xbe2aaaab
 802a290:	3e2aaaab 	.word	0x3e2aaaab

0802a294 <__ieee754_rem_pio2f>:
 802a294:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a296:	ee10 6a10 	vmov	r6, s0
 802a29a:	4b86      	ldr	r3, [pc, #536]	; (802a4b4 <__ieee754_rem_pio2f+0x220>)
 802a29c:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a2a0:	429d      	cmp	r5, r3
 802a2a2:	b087      	sub	sp, #28
 802a2a4:	4604      	mov	r4, r0
 802a2a6:	dc05      	bgt.n	802a2b4 <__ieee754_rem_pio2f+0x20>
 802a2a8:	2300      	movs	r3, #0
 802a2aa:	ed80 0a00 	vstr	s0, [r0]
 802a2ae:	6043      	str	r3, [r0, #4]
 802a2b0:	2000      	movs	r0, #0
 802a2b2:	e020      	b.n	802a2f6 <__ieee754_rem_pio2f+0x62>
 802a2b4:	4b80      	ldr	r3, [pc, #512]	; (802a4b8 <__ieee754_rem_pio2f+0x224>)
 802a2b6:	429d      	cmp	r5, r3
 802a2b8:	dc38      	bgt.n	802a32c <__ieee754_rem_pio2f+0x98>
 802a2ba:	2e00      	cmp	r6, #0
 802a2bc:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802a4bc <__ieee754_rem_pio2f+0x228>
 802a2c0:	4b7f      	ldr	r3, [pc, #508]	; (802a4c0 <__ieee754_rem_pio2f+0x22c>)
 802a2c2:	f025 050f 	bic.w	r5, r5, #15
 802a2c6:	dd18      	ble.n	802a2fa <__ieee754_rem_pio2f+0x66>
 802a2c8:	429d      	cmp	r5, r3
 802a2ca:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a2ce:	bf09      	itett	eq
 802a2d0:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802a4c4 <__ieee754_rem_pio2f+0x230>
 802a2d4:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802a4c8 <__ieee754_rem_pio2f+0x234>
 802a2d8:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a2dc:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802a4cc <__ieee754_rem_pio2f+0x238>
 802a2e0:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802a2e4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a2e8:	edc0 6a00 	vstr	s13, [r0]
 802a2ec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a2f0:	edc0 7a01 	vstr	s15, [r0, #4]
 802a2f4:	2001      	movs	r0, #1
 802a2f6:	b007      	add	sp, #28
 802a2f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a2fa:	429d      	cmp	r5, r3
 802a2fc:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a300:	bf09      	itett	eq
 802a302:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802a4c4 <__ieee754_rem_pio2f+0x230>
 802a306:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802a4c8 <__ieee754_rem_pio2f+0x234>
 802a30a:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a30e:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802a4cc <__ieee754_rem_pio2f+0x238>
 802a312:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a316:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a31a:	edc0 6a00 	vstr	s13, [r0]
 802a31e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a322:	edc0 7a01 	vstr	s15, [r0, #4]
 802a326:	f04f 30ff 	mov.w	r0, #4294967295
 802a32a:	e7e4      	b.n	802a2f6 <__ieee754_rem_pio2f+0x62>
 802a32c:	4b68      	ldr	r3, [pc, #416]	; (802a4d0 <__ieee754_rem_pio2f+0x23c>)
 802a32e:	429d      	cmp	r5, r3
 802a330:	dc71      	bgt.n	802a416 <__ieee754_rem_pio2f+0x182>
 802a332:	f7ff fe33 	bl	8029f9c <fabsf>
 802a336:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802a4d4 <__ieee754_rem_pio2f+0x240>
 802a33a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a33e:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a342:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a346:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a34a:	ee17 0a90 	vmov	r0, s15
 802a34e:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a4bc <__ieee754_rem_pio2f+0x228>
 802a352:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a356:	281f      	cmp	r0, #31
 802a358:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a4c8 <__ieee754_rem_pio2f+0x234>
 802a35c:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a360:	eeb1 6a47 	vneg.f32	s12, s14
 802a364:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a368:	ee16 2a90 	vmov	r2, s13
 802a36c:	dc1c      	bgt.n	802a3a8 <__ieee754_rem_pio2f+0x114>
 802a36e:	495a      	ldr	r1, [pc, #360]	; (802a4d8 <__ieee754_rem_pio2f+0x244>)
 802a370:	1e47      	subs	r7, r0, #1
 802a372:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802a376:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802a37a:	428b      	cmp	r3, r1
 802a37c:	d014      	beq.n	802a3a8 <__ieee754_rem_pio2f+0x114>
 802a37e:	6022      	str	r2, [r4, #0]
 802a380:	ed94 7a00 	vldr	s14, [r4]
 802a384:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a388:	2e00      	cmp	r6, #0
 802a38a:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a38e:	ed84 0a01 	vstr	s0, [r4, #4]
 802a392:	dab0      	bge.n	802a2f6 <__ieee754_rem_pio2f+0x62>
 802a394:	eeb1 7a47 	vneg.f32	s14, s14
 802a398:	eeb1 0a40 	vneg.f32	s0, s0
 802a39c:	ed84 7a00 	vstr	s14, [r4]
 802a3a0:	ed84 0a01 	vstr	s0, [r4, #4]
 802a3a4:	4240      	negs	r0, r0
 802a3a6:	e7a6      	b.n	802a2f6 <__ieee754_rem_pio2f+0x62>
 802a3a8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a3ac:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802a3b0:	2908      	cmp	r1, #8
 802a3b2:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a3b6:	dde2      	ble.n	802a37e <__ieee754_rem_pio2f+0xea>
 802a3b8:	eddf 5a42 	vldr	s11, [pc, #264]	; 802a4c4 <__ieee754_rem_pio2f+0x230>
 802a3bc:	eef0 6a40 	vmov.f32	s13, s0
 802a3c0:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a3c4:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a3c8:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a3cc:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802a4cc <__ieee754_rem_pio2f+0x238>
 802a3d0:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a3d4:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a3d8:	ee15 2a90 	vmov	r2, s11
 802a3dc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a3e0:	1a5b      	subs	r3, r3, r1
 802a3e2:	2b19      	cmp	r3, #25
 802a3e4:	dc04      	bgt.n	802a3f0 <__ieee754_rem_pio2f+0x15c>
 802a3e6:	edc4 5a00 	vstr	s11, [r4]
 802a3ea:	eeb0 0a66 	vmov.f32	s0, s13
 802a3ee:	e7c7      	b.n	802a380 <__ieee754_rem_pio2f+0xec>
 802a3f0:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802a4dc <__ieee754_rem_pio2f+0x248>
 802a3f4:	eeb0 0a66 	vmov.f32	s0, s13
 802a3f8:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a3fc:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a400:	eddf 6a37 	vldr	s13, [pc, #220]	; 802a4e0 <__ieee754_rem_pio2f+0x24c>
 802a404:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a408:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a40c:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a410:	ed84 7a00 	vstr	s14, [r4]
 802a414:	e7b4      	b.n	802a380 <__ieee754_rem_pio2f+0xec>
 802a416:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802a41a:	db06      	blt.n	802a42a <__ieee754_rem_pio2f+0x196>
 802a41c:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a420:	edc0 7a01 	vstr	s15, [r0, #4]
 802a424:	edc0 7a00 	vstr	s15, [r0]
 802a428:	e742      	b.n	802a2b0 <__ieee754_rem_pio2f+0x1c>
 802a42a:	15ea      	asrs	r2, r5, #23
 802a42c:	3a86      	subs	r2, #134	; 0x86
 802a42e:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a432:	ee07 3a90 	vmov	s15, r3
 802a436:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a43a:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802a4e4 <__ieee754_rem_pio2f+0x250>
 802a43e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a442:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a446:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a44a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a44e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a452:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a456:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a45a:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a45e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a462:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a466:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a46a:	edcd 7a05 	vstr	s15, [sp, #20]
 802a46e:	d11e      	bne.n	802a4ae <__ieee754_rem_pio2f+0x21a>
 802a470:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a474:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a478:	bf14      	ite	ne
 802a47a:	2302      	movne	r3, #2
 802a47c:	2301      	moveq	r3, #1
 802a47e:	491a      	ldr	r1, [pc, #104]	; (802a4e8 <__ieee754_rem_pio2f+0x254>)
 802a480:	9101      	str	r1, [sp, #4]
 802a482:	2102      	movs	r1, #2
 802a484:	9100      	str	r1, [sp, #0]
 802a486:	a803      	add	r0, sp, #12
 802a488:	4621      	mov	r1, r4
 802a48a:	f000 f895 	bl	802a5b8 <__kernel_rem_pio2f>
 802a48e:	2e00      	cmp	r6, #0
 802a490:	f6bf af31 	bge.w	802a2f6 <__ieee754_rem_pio2f+0x62>
 802a494:	edd4 7a00 	vldr	s15, [r4]
 802a498:	eef1 7a67 	vneg.f32	s15, s15
 802a49c:	edc4 7a00 	vstr	s15, [r4]
 802a4a0:	edd4 7a01 	vldr	s15, [r4, #4]
 802a4a4:	eef1 7a67 	vneg.f32	s15, s15
 802a4a8:	edc4 7a01 	vstr	s15, [r4, #4]
 802a4ac:	e77a      	b.n	802a3a4 <__ieee754_rem_pio2f+0x110>
 802a4ae:	2303      	movs	r3, #3
 802a4b0:	e7e5      	b.n	802a47e <__ieee754_rem_pio2f+0x1ea>
 802a4b2:	bf00      	nop
 802a4b4:	3f490fd8 	.word	0x3f490fd8
 802a4b8:	4016cbe3 	.word	0x4016cbe3
 802a4bc:	3fc90f80 	.word	0x3fc90f80
 802a4c0:	3fc90fd0 	.word	0x3fc90fd0
 802a4c4:	37354400 	.word	0x37354400
 802a4c8:	37354443 	.word	0x37354443
 802a4cc:	2e85a308 	.word	0x2e85a308
 802a4d0:	43490f80 	.word	0x43490f80
 802a4d4:	3f22f984 	.word	0x3f22f984
 802a4d8:	08042d30 	.word	0x08042d30
 802a4dc:	2e85a300 	.word	0x2e85a300
 802a4e0:	248d3132 	.word	0x248d3132
 802a4e4:	43800000 	.word	0x43800000
 802a4e8:	08042db0 	.word	0x08042db0

0802a4ec <scalbnf>:
 802a4ec:	ee10 3a10 	vmov	r3, s0
 802a4f0:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802a4f4:	d02b      	beq.n	802a54e <scalbnf+0x62>
 802a4f6:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802a4fa:	d302      	bcc.n	802a502 <scalbnf+0x16>
 802a4fc:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a500:	4770      	bx	lr
 802a502:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802a506:	d123      	bne.n	802a550 <scalbnf+0x64>
 802a508:	4b24      	ldr	r3, [pc, #144]	; (802a59c <scalbnf+0xb0>)
 802a50a:	eddf 7a25 	vldr	s15, [pc, #148]	; 802a5a0 <scalbnf+0xb4>
 802a50e:	4298      	cmp	r0, r3
 802a510:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a514:	db17      	blt.n	802a546 <scalbnf+0x5a>
 802a516:	ee10 3a10 	vmov	r3, s0
 802a51a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a51e:	3a19      	subs	r2, #25
 802a520:	f24c 3150 	movw	r1, #50000	; 0xc350
 802a524:	4288      	cmp	r0, r1
 802a526:	dd15      	ble.n	802a554 <scalbnf+0x68>
 802a528:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a5a4 <scalbnf+0xb8>
 802a52c:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802a5a8 <scalbnf+0xbc>
 802a530:	ee10 3a10 	vmov	r3, s0
 802a534:	eeb0 7a67 	vmov.f32	s14, s15
 802a538:	2b00      	cmp	r3, #0
 802a53a:	bfb8      	it	lt
 802a53c:	eef0 7a66 	vmovlt.f32	s15, s13
 802a540:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a544:	4770      	bx	lr
 802a546:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a5ac <scalbnf+0xc0>
 802a54a:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a54e:	4770      	bx	lr
 802a550:	0dd2      	lsrs	r2, r2, #23
 802a552:	e7e5      	b.n	802a520 <scalbnf+0x34>
 802a554:	4410      	add	r0, r2
 802a556:	28fe      	cmp	r0, #254	; 0xfe
 802a558:	dce6      	bgt.n	802a528 <scalbnf+0x3c>
 802a55a:	2800      	cmp	r0, #0
 802a55c:	dd06      	ble.n	802a56c <scalbnf+0x80>
 802a55e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a562:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a566:	ee00 3a10 	vmov	s0, r3
 802a56a:	4770      	bx	lr
 802a56c:	f110 0f16 	cmn.w	r0, #22
 802a570:	da09      	bge.n	802a586 <scalbnf+0x9a>
 802a572:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a5ac <scalbnf+0xc0>
 802a576:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802a5b0 <scalbnf+0xc4>
 802a57a:	ee10 3a10 	vmov	r3, s0
 802a57e:	eeb0 7a67 	vmov.f32	s14, s15
 802a582:	2b00      	cmp	r3, #0
 802a584:	e7d9      	b.n	802a53a <scalbnf+0x4e>
 802a586:	3019      	adds	r0, #25
 802a588:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a58c:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a590:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802a5b4 <scalbnf+0xc8>
 802a594:	ee07 3a90 	vmov	s15, r3
 802a598:	e7d7      	b.n	802a54a <scalbnf+0x5e>
 802a59a:	bf00      	nop
 802a59c:	ffff3cb0 	.word	0xffff3cb0
 802a5a0:	4c000000 	.word	0x4c000000
 802a5a4:	7149f2ca 	.word	0x7149f2ca
 802a5a8:	f149f2ca 	.word	0xf149f2ca
 802a5ac:	0da24260 	.word	0x0da24260
 802a5b0:	8da24260 	.word	0x8da24260
 802a5b4:	33000000 	.word	0x33000000

0802a5b8 <__kernel_rem_pio2f>:
 802a5b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a5bc:	ed2d 8b04 	vpush	{d8-d9}
 802a5c0:	b0d9      	sub	sp, #356	; 0x164
 802a5c2:	4688      	mov	r8, r1
 802a5c4:	9002      	str	r0, [sp, #8]
 802a5c6:	49b8      	ldr	r1, [pc, #736]	; (802a8a8 <__kernel_rem_pio2f+0x2f0>)
 802a5c8:	9866      	ldr	r0, [sp, #408]	; 0x198
 802a5ca:	9301      	str	r3, [sp, #4]
 802a5cc:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802a5d0:	9901      	ldr	r1, [sp, #4]
 802a5d2:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802a5d4:	f101 3bff 	add.w	fp, r1, #4294967295
 802a5d8:	1d11      	adds	r1, r2, #4
 802a5da:	db25      	blt.n	802a628 <__kernel_rem_pio2f+0x70>
 802a5dc:	1ed0      	subs	r0, r2, #3
 802a5de:	bf48      	it	mi
 802a5e0:	1d10      	addmi	r0, r2, #4
 802a5e2:	10c0      	asrs	r0, r0, #3
 802a5e4:	1c45      	adds	r5, r0, #1
 802a5e6:	00e9      	lsls	r1, r5, #3
 802a5e8:	eba0 070b 	sub.w	r7, r0, fp
 802a5ec:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802a8b8 <__kernel_rem_pio2f+0x300>
 802a5f0:	9103      	str	r1, [sp, #12]
 802a5f2:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802a5f6:	eb0a 0c0b 	add.w	ip, sl, fp
 802a5fa:	ae1c      	add	r6, sp, #112	; 0x70
 802a5fc:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802a600:	2400      	movs	r4, #0
 802a602:	4564      	cmp	r4, ip
 802a604:	dd12      	ble.n	802a62c <__kernel_rem_pio2f+0x74>
 802a606:	9901      	ldr	r1, [sp, #4]
 802a608:	ac1c      	add	r4, sp, #112	; 0x70
 802a60a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802a60e:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802a612:	f04f 0c00 	mov.w	ip, #0
 802a616:	45d4      	cmp	ip, sl
 802a618:	dc27      	bgt.n	802a66a <__kernel_rem_pio2f+0xb2>
 802a61a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a61e:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802a8b8 <__kernel_rem_pio2f+0x300>
 802a622:	4627      	mov	r7, r4
 802a624:	2600      	movs	r6, #0
 802a626:	e016      	b.n	802a656 <__kernel_rem_pio2f+0x9e>
 802a628:	2000      	movs	r0, #0
 802a62a:	e7db      	b.n	802a5e4 <__kernel_rem_pio2f+0x2c>
 802a62c:	42e7      	cmn	r7, r4
 802a62e:	bf5d      	ittte	pl
 802a630:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802a634:	ee07 1a90 	vmovpl	s15, r1
 802a638:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a63c:	eef0 7a47 	vmovmi.f32	s15, s14
 802a640:	ece6 7a01 	vstmia	r6!, {s15}
 802a644:	3401      	adds	r4, #1
 802a646:	e7dc      	b.n	802a602 <__kernel_rem_pio2f+0x4a>
 802a648:	ecfe 6a01 	vldmia	lr!, {s13}
 802a64c:	ed97 7a00 	vldr	s14, [r7]
 802a650:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a654:	3601      	adds	r6, #1
 802a656:	455e      	cmp	r6, fp
 802a658:	f1a7 0704 	sub.w	r7, r7, #4
 802a65c:	ddf4      	ble.n	802a648 <__kernel_rem_pio2f+0x90>
 802a65e:	ece9 7a01 	vstmia	r9!, {s15}
 802a662:	f10c 0c01 	add.w	ip, ip, #1
 802a666:	3404      	adds	r4, #4
 802a668:	e7d5      	b.n	802a616 <__kernel_rem_pio2f+0x5e>
 802a66a:	a908      	add	r1, sp, #32
 802a66c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a670:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802a674:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802a8b4 <__kernel_rem_pio2f+0x2fc>
 802a678:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802a8b0 <__kernel_rem_pio2f+0x2f8>
 802a67c:	9105      	str	r1, [sp, #20]
 802a67e:	9304      	str	r3, [sp, #16]
 802a680:	4656      	mov	r6, sl
 802a682:	00b3      	lsls	r3, r6, #2
 802a684:	9306      	str	r3, [sp, #24]
 802a686:	ab58      	add	r3, sp, #352	; 0x160
 802a688:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a68c:	ac08      	add	r4, sp, #32
 802a68e:	ab44      	add	r3, sp, #272	; 0x110
 802a690:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802a694:	46a4      	mov	ip, r4
 802a696:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a69a:	4637      	mov	r7, r6
 802a69c:	2f00      	cmp	r7, #0
 802a69e:	f1a0 0004 	sub.w	r0, r0, #4
 802a6a2:	dc4a      	bgt.n	802a73a <__kernel_rem_pio2f+0x182>
 802a6a4:	4628      	mov	r0, r5
 802a6a6:	9207      	str	r2, [sp, #28]
 802a6a8:	f7ff ff20 	bl	802a4ec <scalbnf>
 802a6ac:	eeb0 8a40 	vmov.f32	s16, s0
 802a6b0:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802a6b4:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a6b8:	f7ff fd04 	bl	802a0c4 <floorf>
 802a6bc:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802a6c0:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a6c4:	2d00      	cmp	r5, #0
 802a6c6:	9a07      	ldr	r2, [sp, #28]
 802a6c8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a6cc:	ee17 9a90 	vmov	r9, s15
 802a6d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a6d4:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a6d8:	dd41      	ble.n	802a75e <__kernel_rem_pio2f+0x1a6>
 802a6da:	f106 3cff 	add.w	ip, r6, #4294967295
 802a6de:	ab08      	add	r3, sp, #32
 802a6e0:	f1c5 0e08 	rsb	lr, r5, #8
 802a6e4:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802a6e8:	fa47 f00e 	asr.w	r0, r7, lr
 802a6ec:	4481      	add	r9, r0
 802a6ee:	fa00 f00e 	lsl.w	r0, r0, lr
 802a6f2:	1a3f      	subs	r7, r7, r0
 802a6f4:	f1c5 0007 	rsb	r0, r5, #7
 802a6f8:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802a6fc:	4107      	asrs	r7, r0
 802a6fe:	2f00      	cmp	r7, #0
 802a700:	dd3c      	ble.n	802a77c <__kernel_rem_pio2f+0x1c4>
 802a702:	f04f 0e00 	mov.w	lr, #0
 802a706:	f109 0901 	add.w	r9, r9, #1
 802a70a:	4671      	mov	r1, lr
 802a70c:	4576      	cmp	r6, lr
 802a70e:	dc67      	bgt.n	802a7e0 <__kernel_rem_pio2f+0x228>
 802a710:	2d00      	cmp	r5, #0
 802a712:	dd03      	ble.n	802a71c <__kernel_rem_pio2f+0x164>
 802a714:	2d01      	cmp	r5, #1
 802a716:	d074      	beq.n	802a802 <__kernel_rem_pio2f+0x24a>
 802a718:	2d02      	cmp	r5, #2
 802a71a:	d07b      	beq.n	802a814 <__kernel_rem_pio2f+0x25c>
 802a71c:	2f02      	cmp	r7, #2
 802a71e:	d12d      	bne.n	802a77c <__kernel_rem_pio2f+0x1c4>
 802a720:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a724:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a728:	b341      	cbz	r1, 802a77c <__kernel_rem_pio2f+0x1c4>
 802a72a:	4628      	mov	r0, r5
 802a72c:	9207      	str	r2, [sp, #28]
 802a72e:	f7ff fedd 	bl	802a4ec <scalbnf>
 802a732:	9a07      	ldr	r2, [sp, #28]
 802a734:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a738:	e020      	b.n	802a77c <__kernel_rem_pio2f+0x1c4>
 802a73a:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a73e:	3f01      	subs	r7, #1
 802a740:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a744:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a748:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a74c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a750:	ecac 0a01 	vstmia	ip!, {s0}
 802a754:	ed90 0a00 	vldr	s0, [r0]
 802a758:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a75c:	e79e      	b.n	802a69c <__kernel_rem_pio2f+0xe4>
 802a75e:	d105      	bne.n	802a76c <__kernel_rem_pio2f+0x1b4>
 802a760:	1e70      	subs	r0, r6, #1
 802a762:	ab08      	add	r3, sp, #32
 802a764:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802a768:	11ff      	asrs	r7, r7, #7
 802a76a:	e7c8      	b.n	802a6fe <__kernel_rem_pio2f+0x146>
 802a76c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a770:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a778:	da30      	bge.n	802a7dc <__kernel_rem_pio2f+0x224>
 802a77a:	2700      	movs	r7, #0
 802a77c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a780:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a784:	f040 809a 	bne.w	802a8bc <__kernel_rem_pio2f+0x304>
 802a788:	1e74      	subs	r4, r6, #1
 802a78a:	46a4      	mov	ip, r4
 802a78c:	2100      	movs	r1, #0
 802a78e:	45d4      	cmp	ip, sl
 802a790:	da47      	bge.n	802a822 <__kernel_rem_pio2f+0x26a>
 802a792:	2900      	cmp	r1, #0
 802a794:	d063      	beq.n	802a85e <__kernel_rem_pio2f+0x2a6>
 802a796:	ab08      	add	r3, sp, #32
 802a798:	3d08      	subs	r5, #8
 802a79a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a79e:	2b00      	cmp	r3, #0
 802a7a0:	d07f      	beq.n	802a8a2 <__kernel_rem_pio2f+0x2ea>
 802a7a2:	4628      	mov	r0, r5
 802a7a4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a7a8:	f7ff fea0 	bl	802a4ec <scalbnf>
 802a7ac:	1c63      	adds	r3, r4, #1
 802a7ae:	aa44      	add	r2, sp, #272	; 0x110
 802a7b0:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802a8b4 <__kernel_rem_pio2f+0x2fc>
 802a7b4:	0099      	lsls	r1, r3, #2
 802a7b6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a7ba:	4623      	mov	r3, r4
 802a7bc:	2b00      	cmp	r3, #0
 802a7be:	f280 80ad 	bge.w	802a91c <__kernel_rem_pio2f+0x364>
 802a7c2:	4623      	mov	r3, r4
 802a7c4:	2b00      	cmp	r3, #0
 802a7c6:	f2c0 80cb 	blt.w	802a960 <__kernel_rem_pio2f+0x3a8>
 802a7ca:	aa44      	add	r2, sp, #272	; 0x110
 802a7cc:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802a7d0:	4e36      	ldr	r6, [pc, #216]	; (802a8ac <__kernel_rem_pio2f+0x2f4>)
 802a7d2:	eddf 7a39 	vldr	s15, [pc, #228]	; 802a8b8 <__kernel_rem_pio2f+0x300>
 802a7d6:	2000      	movs	r0, #0
 802a7d8:	1ae2      	subs	r2, r4, r3
 802a7da:	e0b6      	b.n	802a94a <__kernel_rem_pio2f+0x392>
 802a7dc:	2702      	movs	r7, #2
 802a7de:	e790      	b.n	802a702 <__kernel_rem_pio2f+0x14a>
 802a7e0:	6820      	ldr	r0, [r4, #0]
 802a7e2:	b949      	cbnz	r1, 802a7f8 <__kernel_rem_pio2f+0x240>
 802a7e4:	b118      	cbz	r0, 802a7ee <__kernel_rem_pio2f+0x236>
 802a7e6:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802a7ea:	6020      	str	r0, [r4, #0]
 802a7ec:	2001      	movs	r0, #1
 802a7ee:	f10e 0e01 	add.w	lr, lr, #1
 802a7f2:	3404      	adds	r4, #4
 802a7f4:	4601      	mov	r1, r0
 802a7f6:	e789      	b.n	802a70c <__kernel_rem_pio2f+0x154>
 802a7f8:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802a7fc:	6020      	str	r0, [r4, #0]
 802a7fe:	4608      	mov	r0, r1
 802a800:	e7f5      	b.n	802a7ee <__kernel_rem_pio2f+0x236>
 802a802:	1e74      	subs	r4, r6, #1
 802a804:	ab08      	add	r3, sp, #32
 802a806:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a80a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802a80e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802a812:	e783      	b.n	802a71c <__kernel_rem_pio2f+0x164>
 802a814:	1e74      	subs	r4, r6, #1
 802a816:	ab08      	add	r3, sp, #32
 802a818:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a81c:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802a820:	e7f5      	b.n	802a80e <__kernel_rem_pio2f+0x256>
 802a822:	ab08      	add	r3, sp, #32
 802a824:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802a828:	f10c 3cff 	add.w	ip, ip, #4294967295
 802a82c:	4301      	orrs	r1, r0
 802a82e:	e7ae      	b.n	802a78e <__kernel_rem_pio2f+0x1d6>
 802a830:	3001      	adds	r0, #1
 802a832:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802a836:	2f00      	cmp	r7, #0
 802a838:	d0fa      	beq.n	802a830 <__kernel_rem_pio2f+0x278>
 802a83a:	9b06      	ldr	r3, [sp, #24]
 802a83c:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802a840:	eb0d 0403 	add.w	r4, sp, r3
 802a844:	9b01      	ldr	r3, [sp, #4]
 802a846:	18f7      	adds	r7, r6, r3
 802a848:	ab1c      	add	r3, sp, #112	; 0x70
 802a84a:	f106 0c01 	add.w	ip, r6, #1
 802a84e:	3c4c      	subs	r4, #76	; 0x4c
 802a850:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802a854:	4430      	add	r0, r6
 802a856:	4560      	cmp	r0, ip
 802a858:	da04      	bge.n	802a864 <__kernel_rem_pio2f+0x2ac>
 802a85a:	4606      	mov	r6, r0
 802a85c:	e711      	b.n	802a682 <__kernel_rem_pio2f+0xca>
 802a85e:	9c05      	ldr	r4, [sp, #20]
 802a860:	2001      	movs	r0, #1
 802a862:	e7e6      	b.n	802a832 <__kernel_rem_pio2f+0x27a>
 802a864:	9b04      	ldr	r3, [sp, #16]
 802a866:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a86a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802a86e:	9306      	str	r3, [sp, #24]
 802a870:	ee07 3a90 	vmov	s15, r3
 802a874:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a878:	2600      	movs	r6, #0
 802a87a:	ece7 7a01 	vstmia	r7!, {s15}
 802a87e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a8b8 <__kernel_rem_pio2f+0x300>
 802a882:	46b9      	mov	r9, r7
 802a884:	455e      	cmp	r6, fp
 802a886:	dd04      	ble.n	802a892 <__kernel_rem_pio2f+0x2da>
 802a888:	ece4 7a01 	vstmia	r4!, {s15}
 802a88c:	f10c 0c01 	add.w	ip, ip, #1
 802a890:	e7e1      	b.n	802a856 <__kernel_rem_pio2f+0x29e>
 802a892:	ecfe 6a01 	vldmia	lr!, {s13}
 802a896:	ed39 7a01 	vldmdb	r9!, {s14}
 802a89a:	3601      	adds	r6, #1
 802a89c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a8a0:	e7f0      	b.n	802a884 <__kernel_rem_pio2f+0x2cc>
 802a8a2:	3c01      	subs	r4, #1
 802a8a4:	e777      	b.n	802a796 <__kernel_rem_pio2f+0x1de>
 802a8a6:	bf00      	nop
 802a8a8:	080430f4 	.word	0x080430f4
 802a8ac:	080430c8 	.word	0x080430c8
 802a8b0:	43800000 	.word	0x43800000
 802a8b4:	3b800000 	.word	0x3b800000
 802a8b8:	00000000 	.word	0x00000000
 802a8bc:	9b03      	ldr	r3, [sp, #12]
 802a8be:	eeb0 0a48 	vmov.f32	s0, s16
 802a8c2:	1a98      	subs	r0, r3, r2
 802a8c4:	f7ff fe12 	bl	802a4ec <scalbnf>
 802a8c8:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802a8b0 <__kernel_rem_pio2f+0x2f8>
 802a8cc:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802a8d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a8d4:	db19      	blt.n	802a90a <__kernel_rem_pio2f+0x352>
 802a8d6:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802a8b4 <__kernel_rem_pio2f+0x2fc>
 802a8da:	ee60 7a27 	vmul.f32	s15, s0, s15
 802a8de:	aa08      	add	r2, sp, #32
 802a8e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a8e4:	1c74      	adds	r4, r6, #1
 802a8e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a8ea:	3508      	adds	r5, #8
 802a8ec:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802a8f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a8f4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a8f8:	ee10 3a10 	vmov	r3, s0
 802a8fc:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a900:	ee17 3a90 	vmov	r3, s15
 802a904:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802a908:	e74b      	b.n	802a7a2 <__kernel_rem_pio2f+0x1ea>
 802a90a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a90e:	aa08      	add	r2, sp, #32
 802a910:	ee10 3a10 	vmov	r3, s0
 802a914:	4634      	mov	r4, r6
 802a916:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a91a:	e742      	b.n	802a7a2 <__kernel_rem_pio2f+0x1ea>
 802a91c:	a808      	add	r0, sp, #32
 802a91e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802a922:	9001      	str	r0, [sp, #4]
 802a924:	ee07 0a90 	vmov	s15, r0
 802a928:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a92c:	3b01      	subs	r3, #1
 802a92e:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a932:	ee20 0a07 	vmul.f32	s0, s0, s14
 802a936:	ed62 7a01 	vstmdb	r2!, {s15}
 802a93a:	e73f      	b.n	802a7bc <__kernel_rem_pio2f+0x204>
 802a93c:	ecf6 6a01 	vldmia	r6!, {s13}
 802a940:	ecb5 7a01 	vldmia	r5!, {s14}
 802a944:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a948:	3001      	adds	r0, #1
 802a94a:	4550      	cmp	r0, sl
 802a94c:	dc01      	bgt.n	802a952 <__kernel_rem_pio2f+0x39a>
 802a94e:	4290      	cmp	r0, r2
 802a950:	ddf4      	ble.n	802a93c <__kernel_rem_pio2f+0x384>
 802a952:	a858      	add	r0, sp, #352	; 0x160
 802a954:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802a958:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802a95c:	3b01      	subs	r3, #1
 802a95e:	e731      	b.n	802a7c4 <__kernel_rem_pio2f+0x20c>
 802a960:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a962:	2b02      	cmp	r3, #2
 802a964:	dc09      	bgt.n	802a97a <__kernel_rem_pio2f+0x3c2>
 802a966:	2b00      	cmp	r3, #0
 802a968:	dc2b      	bgt.n	802a9c2 <__kernel_rem_pio2f+0x40a>
 802a96a:	d044      	beq.n	802a9f6 <__kernel_rem_pio2f+0x43e>
 802a96c:	f009 0007 	and.w	r0, r9, #7
 802a970:	b059      	add	sp, #356	; 0x164
 802a972:	ecbd 8b04 	vpop	{d8-d9}
 802a976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a97a:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a97c:	2b03      	cmp	r3, #3
 802a97e:	d1f5      	bne.n	802a96c <__kernel_rem_pio2f+0x3b4>
 802a980:	aa30      	add	r2, sp, #192	; 0xc0
 802a982:	1f0b      	subs	r3, r1, #4
 802a984:	4413      	add	r3, r2
 802a986:	461a      	mov	r2, r3
 802a988:	4620      	mov	r0, r4
 802a98a:	2800      	cmp	r0, #0
 802a98c:	f1a2 0204 	sub.w	r2, r2, #4
 802a990:	dc52      	bgt.n	802aa38 <__kernel_rem_pio2f+0x480>
 802a992:	4622      	mov	r2, r4
 802a994:	2a01      	cmp	r2, #1
 802a996:	f1a3 0304 	sub.w	r3, r3, #4
 802a99a:	dc5d      	bgt.n	802aa58 <__kernel_rem_pio2f+0x4a0>
 802a99c:	ab30      	add	r3, sp, #192	; 0xc0
 802a99e:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802a8b8 <__kernel_rem_pio2f+0x300>
 802a9a2:	440b      	add	r3, r1
 802a9a4:	2c01      	cmp	r4, #1
 802a9a6:	dc67      	bgt.n	802aa78 <__kernel_rem_pio2f+0x4c0>
 802a9a8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802a9ac:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802a9b0:	2f00      	cmp	r7, #0
 802a9b2:	d167      	bne.n	802aa84 <__kernel_rem_pio2f+0x4cc>
 802a9b4:	edc8 6a00 	vstr	s13, [r8]
 802a9b8:	ed88 7a01 	vstr	s14, [r8, #4]
 802a9bc:	edc8 7a02 	vstr	s15, [r8, #8]
 802a9c0:	e7d4      	b.n	802a96c <__kernel_rem_pio2f+0x3b4>
 802a9c2:	ab30      	add	r3, sp, #192	; 0xc0
 802a9c4:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802a8b8 <__kernel_rem_pio2f+0x300>
 802a9c8:	440b      	add	r3, r1
 802a9ca:	4622      	mov	r2, r4
 802a9cc:	2a00      	cmp	r2, #0
 802a9ce:	da24      	bge.n	802aa1a <__kernel_rem_pio2f+0x462>
 802a9d0:	b34f      	cbz	r7, 802aa26 <__kernel_rem_pio2f+0x46e>
 802a9d2:	eef1 7a47 	vneg.f32	s15, s14
 802a9d6:	edc8 7a00 	vstr	s15, [r8]
 802a9da:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802a9de:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a9e2:	aa31      	add	r2, sp, #196	; 0xc4
 802a9e4:	2301      	movs	r3, #1
 802a9e6:	429c      	cmp	r4, r3
 802a9e8:	da20      	bge.n	802aa2c <__kernel_rem_pio2f+0x474>
 802a9ea:	b10f      	cbz	r7, 802a9f0 <__kernel_rem_pio2f+0x438>
 802a9ec:	eef1 7a67 	vneg.f32	s15, s15
 802a9f0:	edc8 7a01 	vstr	s15, [r8, #4]
 802a9f4:	e7ba      	b.n	802a96c <__kernel_rem_pio2f+0x3b4>
 802a9f6:	ab30      	add	r3, sp, #192	; 0xc0
 802a9f8:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802a8b8 <__kernel_rem_pio2f+0x300>
 802a9fc:	440b      	add	r3, r1
 802a9fe:	2c00      	cmp	r4, #0
 802aa00:	da05      	bge.n	802aa0e <__kernel_rem_pio2f+0x456>
 802aa02:	b10f      	cbz	r7, 802aa08 <__kernel_rem_pio2f+0x450>
 802aa04:	eef1 7a67 	vneg.f32	s15, s15
 802aa08:	edc8 7a00 	vstr	s15, [r8]
 802aa0c:	e7ae      	b.n	802a96c <__kernel_rem_pio2f+0x3b4>
 802aa0e:	ed33 7a01 	vldmdb	r3!, {s14}
 802aa12:	3c01      	subs	r4, #1
 802aa14:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aa18:	e7f1      	b.n	802a9fe <__kernel_rem_pio2f+0x446>
 802aa1a:	ed73 7a01 	vldmdb	r3!, {s15}
 802aa1e:	3a01      	subs	r2, #1
 802aa20:	ee37 7a27 	vadd.f32	s14, s14, s15
 802aa24:	e7d2      	b.n	802a9cc <__kernel_rem_pio2f+0x414>
 802aa26:	eef0 7a47 	vmov.f32	s15, s14
 802aa2a:	e7d4      	b.n	802a9d6 <__kernel_rem_pio2f+0x41e>
 802aa2c:	ecb2 7a01 	vldmia	r2!, {s14}
 802aa30:	3301      	adds	r3, #1
 802aa32:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aa36:	e7d6      	b.n	802a9e6 <__kernel_rem_pio2f+0x42e>
 802aa38:	edd2 7a00 	vldr	s15, [r2]
 802aa3c:	edd2 6a01 	vldr	s13, [r2, #4]
 802aa40:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802aa44:	3801      	subs	r0, #1
 802aa46:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aa4a:	ed82 7a00 	vstr	s14, [r2]
 802aa4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802aa52:	edc2 7a01 	vstr	s15, [r2, #4]
 802aa56:	e798      	b.n	802a98a <__kernel_rem_pio2f+0x3d2>
 802aa58:	edd3 7a00 	vldr	s15, [r3]
 802aa5c:	edd3 6a01 	vldr	s13, [r3, #4]
 802aa60:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802aa64:	3a01      	subs	r2, #1
 802aa66:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aa6a:	ed83 7a00 	vstr	s14, [r3]
 802aa6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802aa72:	edc3 7a01 	vstr	s15, [r3, #4]
 802aa76:	e78d      	b.n	802a994 <__kernel_rem_pio2f+0x3dc>
 802aa78:	ed33 7a01 	vldmdb	r3!, {s14}
 802aa7c:	3c01      	subs	r4, #1
 802aa7e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aa82:	e78f      	b.n	802a9a4 <__kernel_rem_pio2f+0x3ec>
 802aa84:	eef1 6a66 	vneg.f32	s13, s13
 802aa88:	eeb1 7a47 	vneg.f32	s14, s14
 802aa8c:	edc8 6a00 	vstr	s13, [r8]
 802aa90:	ed88 7a01 	vstr	s14, [r8, #4]
 802aa94:	eef1 7a67 	vneg.f32	s15, s15
 802aa98:	e790      	b.n	802a9bc <__kernel_rem_pio2f+0x404>
 802aa9a:	bf00      	nop

0802aa9c <abort>:
 802aa9c:	b508      	push	{r3, lr}
 802aa9e:	2006      	movs	r0, #6
 802aaa0:	f000 fa3a 	bl	802af18 <raise>
 802aaa4:	2001      	movs	r0, #1
 802aaa6:	f7d7 fbd5 	bl	8002254 <_exit>
	...

0802aaac <__assert_func>:
 802aaac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802aaae:	4614      	mov	r4, r2
 802aab0:	461a      	mov	r2, r3
 802aab2:	4b09      	ldr	r3, [pc, #36]	; (802aad8 <__assert_func+0x2c>)
 802aab4:	681b      	ldr	r3, [r3, #0]
 802aab6:	4605      	mov	r5, r0
 802aab8:	68d8      	ldr	r0, [r3, #12]
 802aaba:	b14c      	cbz	r4, 802aad0 <__assert_func+0x24>
 802aabc:	4b07      	ldr	r3, [pc, #28]	; (802aadc <__assert_func+0x30>)
 802aabe:	9100      	str	r1, [sp, #0]
 802aac0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802aac4:	4906      	ldr	r1, [pc, #24]	; (802aae0 <__assert_func+0x34>)
 802aac6:	462b      	mov	r3, r5
 802aac8:	f000 f982 	bl	802add0 <fiprintf>
 802aacc:	f7ff ffe6 	bl	802aa9c <abort>
 802aad0:	4b04      	ldr	r3, [pc, #16]	; (802aae4 <__assert_func+0x38>)
 802aad2:	461c      	mov	r4, r3
 802aad4:	e7f3      	b.n	802aabe <__assert_func+0x12>
 802aad6:	bf00      	nop
 802aad8:	20000160 	.word	0x20000160
 802aadc:	08043100 	.word	0x08043100
 802aae0:	0804310d 	.word	0x0804310d
 802aae4:	0804313b 	.word	0x0804313b

0802aae8 <atexit>:
 802aae8:	2300      	movs	r3, #0
 802aaea:	4601      	mov	r1, r0
 802aaec:	461a      	mov	r2, r3
 802aaee:	4618      	mov	r0, r3
 802aaf0:	f000 bb16 	b.w	802b120 <__register_exitproc>

0802aaf4 <malloc>:
 802aaf4:	4b02      	ldr	r3, [pc, #8]	; (802ab00 <malloc+0xc>)
 802aaf6:	4601      	mov	r1, r0
 802aaf8:	6818      	ldr	r0, [r3, #0]
 802aafa:	f000 b82b 	b.w	802ab54 <_malloc_r>
 802aafe:	bf00      	nop
 802ab00:	20000160 	.word	0x20000160

0802ab04 <free>:
 802ab04:	4b02      	ldr	r3, [pc, #8]	; (802ab10 <free+0xc>)
 802ab06:	4601      	mov	r1, r0
 802ab08:	6818      	ldr	r0, [r3, #0]
 802ab0a:	f000 bb67 	b.w	802b1dc <_free_r>
 802ab0e:	bf00      	nop
 802ab10:	20000160 	.word	0x20000160

0802ab14 <sbrk_aligned>:
 802ab14:	b570      	push	{r4, r5, r6, lr}
 802ab16:	4e0e      	ldr	r6, [pc, #56]	; (802ab50 <sbrk_aligned+0x3c>)
 802ab18:	460c      	mov	r4, r1
 802ab1a:	6831      	ldr	r1, [r6, #0]
 802ab1c:	4605      	mov	r5, r0
 802ab1e:	b911      	cbnz	r1, 802ab26 <sbrk_aligned+0x12>
 802ab20:	f000 faa0 	bl	802b064 <_sbrk_r>
 802ab24:	6030      	str	r0, [r6, #0]
 802ab26:	4621      	mov	r1, r4
 802ab28:	4628      	mov	r0, r5
 802ab2a:	f000 fa9b 	bl	802b064 <_sbrk_r>
 802ab2e:	1c43      	adds	r3, r0, #1
 802ab30:	d00a      	beq.n	802ab48 <sbrk_aligned+0x34>
 802ab32:	1cc4      	adds	r4, r0, #3
 802ab34:	f024 0403 	bic.w	r4, r4, #3
 802ab38:	42a0      	cmp	r0, r4
 802ab3a:	d007      	beq.n	802ab4c <sbrk_aligned+0x38>
 802ab3c:	1a21      	subs	r1, r4, r0
 802ab3e:	4628      	mov	r0, r5
 802ab40:	f000 fa90 	bl	802b064 <_sbrk_r>
 802ab44:	3001      	adds	r0, #1
 802ab46:	d101      	bne.n	802ab4c <sbrk_aligned+0x38>
 802ab48:	f04f 34ff 	mov.w	r4, #4294967295
 802ab4c:	4620      	mov	r0, r4
 802ab4e:	bd70      	pop	{r4, r5, r6, pc}
 802ab50:	200136fc 	.word	0x200136fc

0802ab54 <_malloc_r>:
 802ab54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ab58:	1ccd      	adds	r5, r1, #3
 802ab5a:	f025 0503 	bic.w	r5, r5, #3
 802ab5e:	3508      	adds	r5, #8
 802ab60:	2d0c      	cmp	r5, #12
 802ab62:	bf38      	it	cc
 802ab64:	250c      	movcc	r5, #12
 802ab66:	2d00      	cmp	r5, #0
 802ab68:	4607      	mov	r7, r0
 802ab6a:	db01      	blt.n	802ab70 <_malloc_r+0x1c>
 802ab6c:	42a9      	cmp	r1, r5
 802ab6e:	d905      	bls.n	802ab7c <_malloc_r+0x28>
 802ab70:	230c      	movs	r3, #12
 802ab72:	603b      	str	r3, [r7, #0]
 802ab74:	2600      	movs	r6, #0
 802ab76:	4630      	mov	r0, r6
 802ab78:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ab7c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802ac50 <_malloc_r+0xfc>
 802ab80:	f000 f868 	bl	802ac54 <__malloc_lock>
 802ab84:	f8d8 3000 	ldr.w	r3, [r8]
 802ab88:	461c      	mov	r4, r3
 802ab8a:	bb5c      	cbnz	r4, 802abe4 <_malloc_r+0x90>
 802ab8c:	4629      	mov	r1, r5
 802ab8e:	4638      	mov	r0, r7
 802ab90:	f7ff ffc0 	bl	802ab14 <sbrk_aligned>
 802ab94:	1c43      	adds	r3, r0, #1
 802ab96:	4604      	mov	r4, r0
 802ab98:	d155      	bne.n	802ac46 <_malloc_r+0xf2>
 802ab9a:	f8d8 4000 	ldr.w	r4, [r8]
 802ab9e:	4626      	mov	r6, r4
 802aba0:	2e00      	cmp	r6, #0
 802aba2:	d145      	bne.n	802ac30 <_malloc_r+0xdc>
 802aba4:	2c00      	cmp	r4, #0
 802aba6:	d048      	beq.n	802ac3a <_malloc_r+0xe6>
 802aba8:	6823      	ldr	r3, [r4, #0]
 802abaa:	4631      	mov	r1, r6
 802abac:	4638      	mov	r0, r7
 802abae:	eb04 0903 	add.w	r9, r4, r3
 802abb2:	f000 fa57 	bl	802b064 <_sbrk_r>
 802abb6:	4581      	cmp	r9, r0
 802abb8:	d13f      	bne.n	802ac3a <_malloc_r+0xe6>
 802abba:	6821      	ldr	r1, [r4, #0]
 802abbc:	1a6d      	subs	r5, r5, r1
 802abbe:	4629      	mov	r1, r5
 802abc0:	4638      	mov	r0, r7
 802abc2:	f7ff ffa7 	bl	802ab14 <sbrk_aligned>
 802abc6:	3001      	adds	r0, #1
 802abc8:	d037      	beq.n	802ac3a <_malloc_r+0xe6>
 802abca:	6823      	ldr	r3, [r4, #0]
 802abcc:	442b      	add	r3, r5
 802abce:	6023      	str	r3, [r4, #0]
 802abd0:	f8d8 3000 	ldr.w	r3, [r8]
 802abd4:	2b00      	cmp	r3, #0
 802abd6:	d038      	beq.n	802ac4a <_malloc_r+0xf6>
 802abd8:	685a      	ldr	r2, [r3, #4]
 802abda:	42a2      	cmp	r2, r4
 802abdc:	d12b      	bne.n	802ac36 <_malloc_r+0xe2>
 802abde:	2200      	movs	r2, #0
 802abe0:	605a      	str	r2, [r3, #4]
 802abe2:	e00f      	b.n	802ac04 <_malloc_r+0xb0>
 802abe4:	6822      	ldr	r2, [r4, #0]
 802abe6:	1b52      	subs	r2, r2, r5
 802abe8:	d41f      	bmi.n	802ac2a <_malloc_r+0xd6>
 802abea:	2a0b      	cmp	r2, #11
 802abec:	d917      	bls.n	802ac1e <_malloc_r+0xca>
 802abee:	1961      	adds	r1, r4, r5
 802abf0:	42a3      	cmp	r3, r4
 802abf2:	6025      	str	r5, [r4, #0]
 802abf4:	bf18      	it	ne
 802abf6:	6059      	strne	r1, [r3, #4]
 802abf8:	6863      	ldr	r3, [r4, #4]
 802abfa:	bf08      	it	eq
 802abfc:	f8c8 1000 	streq.w	r1, [r8]
 802ac00:	5162      	str	r2, [r4, r5]
 802ac02:	604b      	str	r3, [r1, #4]
 802ac04:	4638      	mov	r0, r7
 802ac06:	f104 060b 	add.w	r6, r4, #11
 802ac0a:	f000 f829 	bl	802ac60 <__malloc_unlock>
 802ac0e:	f026 0607 	bic.w	r6, r6, #7
 802ac12:	1d23      	adds	r3, r4, #4
 802ac14:	1af2      	subs	r2, r6, r3
 802ac16:	d0ae      	beq.n	802ab76 <_malloc_r+0x22>
 802ac18:	1b9b      	subs	r3, r3, r6
 802ac1a:	50a3      	str	r3, [r4, r2]
 802ac1c:	e7ab      	b.n	802ab76 <_malloc_r+0x22>
 802ac1e:	42a3      	cmp	r3, r4
 802ac20:	6862      	ldr	r2, [r4, #4]
 802ac22:	d1dd      	bne.n	802abe0 <_malloc_r+0x8c>
 802ac24:	f8c8 2000 	str.w	r2, [r8]
 802ac28:	e7ec      	b.n	802ac04 <_malloc_r+0xb0>
 802ac2a:	4623      	mov	r3, r4
 802ac2c:	6864      	ldr	r4, [r4, #4]
 802ac2e:	e7ac      	b.n	802ab8a <_malloc_r+0x36>
 802ac30:	4634      	mov	r4, r6
 802ac32:	6876      	ldr	r6, [r6, #4]
 802ac34:	e7b4      	b.n	802aba0 <_malloc_r+0x4c>
 802ac36:	4613      	mov	r3, r2
 802ac38:	e7cc      	b.n	802abd4 <_malloc_r+0x80>
 802ac3a:	230c      	movs	r3, #12
 802ac3c:	603b      	str	r3, [r7, #0]
 802ac3e:	4638      	mov	r0, r7
 802ac40:	f000 f80e 	bl	802ac60 <__malloc_unlock>
 802ac44:	e797      	b.n	802ab76 <_malloc_r+0x22>
 802ac46:	6025      	str	r5, [r4, #0]
 802ac48:	e7dc      	b.n	802ac04 <_malloc_r+0xb0>
 802ac4a:	605b      	str	r3, [r3, #4]
 802ac4c:	deff      	udf	#255	; 0xff
 802ac4e:	bf00      	nop
 802ac50:	200136f8 	.word	0x200136f8

0802ac54 <__malloc_lock>:
 802ac54:	4801      	ldr	r0, [pc, #4]	; (802ac5c <__malloc_lock+0x8>)
 802ac56:	f000 ba52 	b.w	802b0fe <__retarget_lock_acquire_recursive>
 802ac5a:	bf00      	nop
 802ac5c:	20013841 	.word	0x20013841

0802ac60 <__malloc_unlock>:
 802ac60:	4801      	ldr	r0, [pc, #4]	; (802ac68 <__malloc_unlock+0x8>)
 802ac62:	f000 ba4d 	b.w	802b100 <__retarget_lock_release_recursive>
 802ac66:	bf00      	nop
 802ac68:	20013841 	.word	0x20013841

0802ac6c <__cxa_atexit>:
 802ac6c:	b510      	push	{r4, lr}
 802ac6e:	4c05      	ldr	r4, [pc, #20]	; (802ac84 <__cxa_atexit+0x18>)
 802ac70:	4613      	mov	r3, r2
 802ac72:	b12c      	cbz	r4, 802ac80 <__cxa_atexit+0x14>
 802ac74:	460a      	mov	r2, r1
 802ac76:	4601      	mov	r1, r0
 802ac78:	2002      	movs	r0, #2
 802ac7a:	f000 fa51 	bl	802b120 <__register_exitproc>
 802ac7e:	bd10      	pop	{r4, pc}
 802ac80:	4620      	mov	r0, r4
 802ac82:	e7fc      	b.n	802ac7e <__cxa_atexit+0x12>
 802ac84:	0802b121 	.word	0x0802b121

0802ac88 <std>:
 802ac88:	2300      	movs	r3, #0
 802ac8a:	b510      	push	{r4, lr}
 802ac8c:	4604      	mov	r4, r0
 802ac8e:	e9c0 3300 	strd	r3, r3, [r0]
 802ac92:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802ac96:	6083      	str	r3, [r0, #8]
 802ac98:	8181      	strh	r1, [r0, #12]
 802ac9a:	6643      	str	r3, [r0, #100]	; 0x64
 802ac9c:	81c2      	strh	r2, [r0, #14]
 802ac9e:	6183      	str	r3, [r0, #24]
 802aca0:	4619      	mov	r1, r3
 802aca2:	2208      	movs	r2, #8
 802aca4:	305c      	adds	r0, #92	; 0x5c
 802aca6:	f000 f906 	bl	802aeb6 <memset>
 802acaa:	4b0d      	ldr	r3, [pc, #52]	; (802ace0 <std+0x58>)
 802acac:	6263      	str	r3, [r4, #36]	; 0x24
 802acae:	4b0d      	ldr	r3, [pc, #52]	; (802ace4 <std+0x5c>)
 802acb0:	62a3      	str	r3, [r4, #40]	; 0x28
 802acb2:	4b0d      	ldr	r3, [pc, #52]	; (802ace8 <std+0x60>)
 802acb4:	62e3      	str	r3, [r4, #44]	; 0x2c
 802acb6:	4b0d      	ldr	r3, [pc, #52]	; (802acec <std+0x64>)
 802acb8:	6323      	str	r3, [r4, #48]	; 0x30
 802acba:	4b0d      	ldr	r3, [pc, #52]	; (802acf0 <std+0x68>)
 802acbc:	6224      	str	r4, [r4, #32]
 802acbe:	429c      	cmp	r4, r3
 802acc0:	d006      	beq.n	802acd0 <std+0x48>
 802acc2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802acc6:	4294      	cmp	r4, r2
 802acc8:	d002      	beq.n	802acd0 <std+0x48>
 802acca:	33d0      	adds	r3, #208	; 0xd0
 802accc:	429c      	cmp	r4, r3
 802acce:	d105      	bne.n	802acdc <std+0x54>
 802acd0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802acd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802acd8:	f000 ba10 	b.w	802b0fc <__retarget_lock_init_recursive>
 802acdc:	bd10      	pop	{r4, pc}
 802acde:	bf00      	nop
 802ace0:	0802ae31 	.word	0x0802ae31
 802ace4:	0802ae53 	.word	0x0802ae53
 802ace8:	0802ae8b 	.word	0x0802ae8b
 802acec:	0802aeaf 	.word	0x0802aeaf
 802acf0:	20013700 	.word	0x20013700

0802acf4 <stdio_exit_handler>:
 802acf4:	4a02      	ldr	r2, [pc, #8]	; (802ad00 <stdio_exit_handler+0xc>)
 802acf6:	4903      	ldr	r1, [pc, #12]	; (802ad04 <stdio_exit_handler+0x10>)
 802acf8:	4803      	ldr	r0, [pc, #12]	; (802ad08 <stdio_exit_handler+0x14>)
 802acfa:	f000 b87b 	b.w	802adf4 <_fwalk_sglue>
 802acfe:	bf00      	nop
 802ad00:	20000108 	.word	0x20000108
 802ad04:	0802b929 	.word	0x0802b929
 802ad08:	20000114 	.word	0x20000114

0802ad0c <cleanup_stdio>:
 802ad0c:	6841      	ldr	r1, [r0, #4]
 802ad0e:	4b0c      	ldr	r3, [pc, #48]	; (802ad40 <cleanup_stdio+0x34>)
 802ad10:	4299      	cmp	r1, r3
 802ad12:	b510      	push	{r4, lr}
 802ad14:	4604      	mov	r4, r0
 802ad16:	d001      	beq.n	802ad1c <cleanup_stdio+0x10>
 802ad18:	f000 fe06 	bl	802b928 <_fflush_r>
 802ad1c:	68a1      	ldr	r1, [r4, #8]
 802ad1e:	4b09      	ldr	r3, [pc, #36]	; (802ad44 <cleanup_stdio+0x38>)
 802ad20:	4299      	cmp	r1, r3
 802ad22:	d002      	beq.n	802ad2a <cleanup_stdio+0x1e>
 802ad24:	4620      	mov	r0, r4
 802ad26:	f000 fdff 	bl	802b928 <_fflush_r>
 802ad2a:	68e1      	ldr	r1, [r4, #12]
 802ad2c:	4b06      	ldr	r3, [pc, #24]	; (802ad48 <cleanup_stdio+0x3c>)
 802ad2e:	4299      	cmp	r1, r3
 802ad30:	d004      	beq.n	802ad3c <cleanup_stdio+0x30>
 802ad32:	4620      	mov	r0, r4
 802ad34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad38:	f000 bdf6 	b.w	802b928 <_fflush_r>
 802ad3c:	bd10      	pop	{r4, pc}
 802ad3e:	bf00      	nop
 802ad40:	20013700 	.word	0x20013700
 802ad44:	20013768 	.word	0x20013768
 802ad48:	200137d0 	.word	0x200137d0

0802ad4c <global_stdio_init.part.0>:
 802ad4c:	b510      	push	{r4, lr}
 802ad4e:	4b0b      	ldr	r3, [pc, #44]	; (802ad7c <global_stdio_init.part.0+0x30>)
 802ad50:	4c0b      	ldr	r4, [pc, #44]	; (802ad80 <global_stdio_init.part.0+0x34>)
 802ad52:	4a0c      	ldr	r2, [pc, #48]	; (802ad84 <global_stdio_init.part.0+0x38>)
 802ad54:	601a      	str	r2, [r3, #0]
 802ad56:	4620      	mov	r0, r4
 802ad58:	2200      	movs	r2, #0
 802ad5a:	2104      	movs	r1, #4
 802ad5c:	f7ff ff94 	bl	802ac88 <std>
 802ad60:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802ad64:	2201      	movs	r2, #1
 802ad66:	2109      	movs	r1, #9
 802ad68:	f7ff ff8e 	bl	802ac88 <std>
 802ad6c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802ad70:	2202      	movs	r2, #2
 802ad72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad76:	2112      	movs	r1, #18
 802ad78:	f7ff bf86 	b.w	802ac88 <std>
 802ad7c:	20013838 	.word	0x20013838
 802ad80:	20013700 	.word	0x20013700
 802ad84:	0802acf5 	.word	0x0802acf5

0802ad88 <__sfp_lock_acquire>:
 802ad88:	4801      	ldr	r0, [pc, #4]	; (802ad90 <__sfp_lock_acquire+0x8>)
 802ad8a:	f000 b9b8 	b.w	802b0fe <__retarget_lock_acquire_recursive>
 802ad8e:	bf00      	nop
 802ad90:	20013842 	.word	0x20013842

0802ad94 <__sfp_lock_release>:
 802ad94:	4801      	ldr	r0, [pc, #4]	; (802ad9c <__sfp_lock_release+0x8>)
 802ad96:	f000 b9b3 	b.w	802b100 <__retarget_lock_release_recursive>
 802ad9a:	bf00      	nop
 802ad9c:	20013842 	.word	0x20013842

0802ada0 <__sinit>:
 802ada0:	b510      	push	{r4, lr}
 802ada2:	4604      	mov	r4, r0
 802ada4:	f7ff fff0 	bl	802ad88 <__sfp_lock_acquire>
 802ada8:	6a23      	ldr	r3, [r4, #32]
 802adaa:	b11b      	cbz	r3, 802adb4 <__sinit+0x14>
 802adac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802adb0:	f7ff bff0 	b.w	802ad94 <__sfp_lock_release>
 802adb4:	4b04      	ldr	r3, [pc, #16]	; (802adc8 <__sinit+0x28>)
 802adb6:	6223      	str	r3, [r4, #32]
 802adb8:	4b04      	ldr	r3, [pc, #16]	; (802adcc <__sinit+0x2c>)
 802adba:	681b      	ldr	r3, [r3, #0]
 802adbc:	2b00      	cmp	r3, #0
 802adbe:	d1f5      	bne.n	802adac <__sinit+0xc>
 802adc0:	f7ff ffc4 	bl	802ad4c <global_stdio_init.part.0>
 802adc4:	e7f2      	b.n	802adac <__sinit+0xc>
 802adc6:	bf00      	nop
 802adc8:	0802ad0d 	.word	0x0802ad0d
 802adcc:	20013838 	.word	0x20013838

0802add0 <fiprintf>:
 802add0:	b40e      	push	{r1, r2, r3}
 802add2:	b503      	push	{r0, r1, lr}
 802add4:	4601      	mov	r1, r0
 802add6:	ab03      	add	r3, sp, #12
 802add8:	4805      	ldr	r0, [pc, #20]	; (802adf0 <fiprintf+0x20>)
 802adda:	f853 2b04 	ldr.w	r2, [r3], #4
 802adde:	6800      	ldr	r0, [r0, #0]
 802ade0:	9301      	str	r3, [sp, #4]
 802ade2:	f000 fa71 	bl	802b2c8 <_vfiprintf_r>
 802ade6:	b002      	add	sp, #8
 802ade8:	f85d eb04 	ldr.w	lr, [sp], #4
 802adec:	b003      	add	sp, #12
 802adee:	4770      	bx	lr
 802adf0:	20000160 	.word	0x20000160

0802adf4 <_fwalk_sglue>:
 802adf4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802adf8:	4607      	mov	r7, r0
 802adfa:	4688      	mov	r8, r1
 802adfc:	4614      	mov	r4, r2
 802adfe:	2600      	movs	r6, #0
 802ae00:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802ae04:	f1b9 0901 	subs.w	r9, r9, #1
 802ae08:	d505      	bpl.n	802ae16 <_fwalk_sglue+0x22>
 802ae0a:	6824      	ldr	r4, [r4, #0]
 802ae0c:	2c00      	cmp	r4, #0
 802ae0e:	d1f7      	bne.n	802ae00 <_fwalk_sglue+0xc>
 802ae10:	4630      	mov	r0, r6
 802ae12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ae16:	89ab      	ldrh	r3, [r5, #12]
 802ae18:	2b01      	cmp	r3, #1
 802ae1a:	d907      	bls.n	802ae2c <_fwalk_sglue+0x38>
 802ae1c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802ae20:	3301      	adds	r3, #1
 802ae22:	d003      	beq.n	802ae2c <_fwalk_sglue+0x38>
 802ae24:	4629      	mov	r1, r5
 802ae26:	4638      	mov	r0, r7
 802ae28:	47c0      	blx	r8
 802ae2a:	4306      	orrs	r6, r0
 802ae2c:	3568      	adds	r5, #104	; 0x68
 802ae2e:	e7e9      	b.n	802ae04 <_fwalk_sglue+0x10>

0802ae30 <__sread>:
 802ae30:	b510      	push	{r4, lr}
 802ae32:	460c      	mov	r4, r1
 802ae34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ae38:	f000 f8ee 	bl	802b018 <_read_r>
 802ae3c:	2800      	cmp	r0, #0
 802ae3e:	bfab      	itete	ge
 802ae40:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802ae42:	89a3      	ldrhlt	r3, [r4, #12]
 802ae44:	181b      	addge	r3, r3, r0
 802ae46:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802ae4a:	bfac      	ite	ge
 802ae4c:	6563      	strge	r3, [r4, #84]	; 0x54
 802ae4e:	81a3      	strhlt	r3, [r4, #12]
 802ae50:	bd10      	pop	{r4, pc}

0802ae52 <__swrite>:
 802ae52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ae56:	461f      	mov	r7, r3
 802ae58:	898b      	ldrh	r3, [r1, #12]
 802ae5a:	05db      	lsls	r3, r3, #23
 802ae5c:	4605      	mov	r5, r0
 802ae5e:	460c      	mov	r4, r1
 802ae60:	4616      	mov	r6, r2
 802ae62:	d505      	bpl.n	802ae70 <__swrite+0x1e>
 802ae64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ae68:	2302      	movs	r3, #2
 802ae6a:	2200      	movs	r2, #0
 802ae6c:	f000 f8c2 	bl	802aff4 <_lseek_r>
 802ae70:	89a3      	ldrh	r3, [r4, #12]
 802ae72:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ae76:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802ae7a:	81a3      	strh	r3, [r4, #12]
 802ae7c:	4632      	mov	r2, r6
 802ae7e:	463b      	mov	r3, r7
 802ae80:	4628      	mov	r0, r5
 802ae82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802ae86:	f000 b8fd 	b.w	802b084 <_write_r>

0802ae8a <__sseek>:
 802ae8a:	b510      	push	{r4, lr}
 802ae8c:	460c      	mov	r4, r1
 802ae8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ae92:	f000 f8af 	bl	802aff4 <_lseek_r>
 802ae96:	1c43      	adds	r3, r0, #1
 802ae98:	89a3      	ldrh	r3, [r4, #12]
 802ae9a:	bf15      	itete	ne
 802ae9c:	6560      	strne	r0, [r4, #84]	; 0x54
 802ae9e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802aea2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802aea6:	81a3      	strheq	r3, [r4, #12]
 802aea8:	bf18      	it	ne
 802aeaa:	81a3      	strhne	r3, [r4, #12]
 802aeac:	bd10      	pop	{r4, pc}

0802aeae <__sclose>:
 802aeae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802aeb2:	f000 b839 	b.w	802af28 <_close_r>

0802aeb6 <memset>:
 802aeb6:	4402      	add	r2, r0
 802aeb8:	4603      	mov	r3, r0
 802aeba:	4293      	cmp	r3, r2
 802aebc:	d100      	bne.n	802aec0 <memset+0xa>
 802aebe:	4770      	bx	lr
 802aec0:	f803 1b01 	strb.w	r1, [r3], #1
 802aec4:	e7f9      	b.n	802aeba <memset+0x4>

0802aec6 <_raise_r>:
 802aec6:	291f      	cmp	r1, #31
 802aec8:	b538      	push	{r3, r4, r5, lr}
 802aeca:	4604      	mov	r4, r0
 802aecc:	460d      	mov	r5, r1
 802aece:	d904      	bls.n	802aeda <_raise_r+0x14>
 802aed0:	2316      	movs	r3, #22
 802aed2:	6003      	str	r3, [r0, #0]
 802aed4:	f04f 30ff 	mov.w	r0, #4294967295
 802aed8:	bd38      	pop	{r3, r4, r5, pc}
 802aeda:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802aedc:	b112      	cbz	r2, 802aee4 <_raise_r+0x1e>
 802aede:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802aee2:	b94b      	cbnz	r3, 802aef8 <_raise_r+0x32>
 802aee4:	4620      	mov	r0, r4
 802aee6:	f000 f8bb 	bl	802b060 <_getpid_r>
 802aeea:	462a      	mov	r2, r5
 802aeec:	4601      	mov	r1, r0
 802aeee:	4620      	mov	r0, r4
 802aef0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802aef4:	f000 b8a2 	b.w	802b03c <_kill_r>
 802aef8:	2b01      	cmp	r3, #1
 802aefa:	d00a      	beq.n	802af12 <_raise_r+0x4c>
 802aefc:	1c59      	adds	r1, r3, #1
 802aefe:	d103      	bne.n	802af08 <_raise_r+0x42>
 802af00:	2316      	movs	r3, #22
 802af02:	6003      	str	r3, [r0, #0]
 802af04:	2001      	movs	r0, #1
 802af06:	e7e7      	b.n	802aed8 <_raise_r+0x12>
 802af08:	2400      	movs	r4, #0
 802af0a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802af0e:	4628      	mov	r0, r5
 802af10:	4798      	blx	r3
 802af12:	2000      	movs	r0, #0
 802af14:	e7e0      	b.n	802aed8 <_raise_r+0x12>
	...

0802af18 <raise>:
 802af18:	4b02      	ldr	r3, [pc, #8]	; (802af24 <raise+0xc>)
 802af1a:	4601      	mov	r1, r0
 802af1c:	6818      	ldr	r0, [r3, #0]
 802af1e:	f7ff bfd2 	b.w	802aec6 <_raise_r>
 802af22:	bf00      	nop
 802af24:	20000160 	.word	0x20000160

0802af28 <_close_r>:
 802af28:	b538      	push	{r3, r4, r5, lr}
 802af2a:	4d06      	ldr	r5, [pc, #24]	; (802af44 <_close_r+0x1c>)
 802af2c:	2300      	movs	r3, #0
 802af2e:	4604      	mov	r4, r0
 802af30:	4608      	mov	r0, r1
 802af32:	602b      	str	r3, [r5, #0]
 802af34:	f7d7 f9b0 	bl	8002298 <_close>
 802af38:	1c43      	adds	r3, r0, #1
 802af3a:	d102      	bne.n	802af42 <_close_r+0x1a>
 802af3c:	682b      	ldr	r3, [r5, #0]
 802af3e:	b103      	cbz	r3, 802af42 <_close_r+0x1a>
 802af40:	6023      	str	r3, [r4, #0]
 802af42:	bd38      	pop	{r3, r4, r5, pc}
 802af44:	2001383c 	.word	0x2001383c

0802af48 <_reclaim_reent>:
 802af48:	4b29      	ldr	r3, [pc, #164]	; (802aff0 <_reclaim_reent+0xa8>)
 802af4a:	681b      	ldr	r3, [r3, #0]
 802af4c:	4283      	cmp	r3, r0
 802af4e:	b570      	push	{r4, r5, r6, lr}
 802af50:	4604      	mov	r4, r0
 802af52:	d04b      	beq.n	802afec <_reclaim_reent+0xa4>
 802af54:	69c3      	ldr	r3, [r0, #28]
 802af56:	b143      	cbz	r3, 802af6a <_reclaim_reent+0x22>
 802af58:	68db      	ldr	r3, [r3, #12]
 802af5a:	2b00      	cmp	r3, #0
 802af5c:	d144      	bne.n	802afe8 <_reclaim_reent+0xa0>
 802af5e:	69e3      	ldr	r3, [r4, #28]
 802af60:	6819      	ldr	r1, [r3, #0]
 802af62:	b111      	cbz	r1, 802af6a <_reclaim_reent+0x22>
 802af64:	4620      	mov	r0, r4
 802af66:	f000 f939 	bl	802b1dc <_free_r>
 802af6a:	6961      	ldr	r1, [r4, #20]
 802af6c:	b111      	cbz	r1, 802af74 <_reclaim_reent+0x2c>
 802af6e:	4620      	mov	r0, r4
 802af70:	f000 f934 	bl	802b1dc <_free_r>
 802af74:	69e1      	ldr	r1, [r4, #28]
 802af76:	b111      	cbz	r1, 802af7e <_reclaim_reent+0x36>
 802af78:	4620      	mov	r0, r4
 802af7a:	f000 f92f 	bl	802b1dc <_free_r>
 802af7e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802af80:	b111      	cbz	r1, 802af88 <_reclaim_reent+0x40>
 802af82:	4620      	mov	r0, r4
 802af84:	f000 f92a 	bl	802b1dc <_free_r>
 802af88:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802af8a:	b111      	cbz	r1, 802af92 <_reclaim_reent+0x4a>
 802af8c:	4620      	mov	r0, r4
 802af8e:	f000 f925 	bl	802b1dc <_free_r>
 802af92:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802af94:	b111      	cbz	r1, 802af9c <_reclaim_reent+0x54>
 802af96:	4620      	mov	r0, r4
 802af98:	f000 f920 	bl	802b1dc <_free_r>
 802af9c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802af9e:	b111      	cbz	r1, 802afa6 <_reclaim_reent+0x5e>
 802afa0:	4620      	mov	r0, r4
 802afa2:	f000 f91b 	bl	802b1dc <_free_r>
 802afa6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802afa8:	b111      	cbz	r1, 802afb0 <_reclaim_reent+0x68>
 802afaa:	4620      	mov	r0, r4
 802afac:	f000 f916 	bl	802b1dc <_free_r>
 802afb0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802afb2:	b111      	cbz	r1, 802afba <_reclaim_reent+0x72>
 802afb4:	4620      	mov	r0, r4
 802afb6:	f000 f911 	bl	802b1dc <_free_r>
 802afba:	6a23      	ldr	r3, [r4, #32]
 802afbc:	b1b3      	cbz	r3, 802afec <_reclaim_reent+0xa4>
 802afbe:	4620      	mov	r0, r4
 802afc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802afc4:	4718      	bx	r3
 802afc6:	5949      	ldr	r1, [r1, r5]
 802afc8:	b941      	cbnz	r1, 802afdc <_reclaim_reent+0x94>
 802afca:	3504      	adds	r5, #4
 802afcc:	69e3      	ldr	r3, [r4, #28]
 802afce:	2d80      	cmp	r5, #128	; 0x80
 802afd0:	68d9      	ldr	r1, [r3, #12]
 802afd2:	d1f8      	bne.n	802afc6 <_reclaim_reent+0x7e>
 802afd4:	4620      	mov	r0, r4
 802afd6:	f000 f901 	bl	802b1dc <_free_r>
 802afda:	e7c0      	b.n	802af5e <_reclaim_reent+0x16>
 802afdc:	680e      	ldr	r6, [r1, #0]
 802afde:	4620      	mov	r0, r4
 802afe0:	f000 f8fc 	bl	802b1dc <_free_r>
 802afe4:	4631      	mov	r1, r6
 802afe6:	e7ef      	b.n	802afc8 <_reclaim_reent+0x80>
 802afe8:	2500      	movs	r5, #0
 802afea:	e7ef      	b.n	802afcc <_reclaim_reent+0x84>
 802afec:	bd70      	pop	{r4, r5, r6, pc}
 802afee:	bf00      	nop
 802aff0:	20000160 	.word	0x20000160

0802aff4 <_lseek_r>:
 802aff4:	b538      	push	{r3, r4, r5, lr}
 802aff6:	4d07      	ldr	r5, [pc, #28]	; (802b014 <_lseek_r+0x20>)
 802aff8:	4604      	mov	r4, r0
 802affa:	4608      	mov	r0, r1
 802affc:	4611      	mov	r1, r2
 802affe:	2200      	movs	r2, #0
 802b000:	602a      	str	r2, [r5, #0]
 802b002:	461a      	mov	r2, r3
 802b004:	f7d7 f954 	bl	80022b0 <_lseek>
 802b008:	1c43      	adds	r3, r0, #1
 802b00a:	d102      	bne.n	802b012 <_lseek_r+0x1e>
 802b00c:	682b      	ldr	r3, [r5, #0]
 802b00e:	b103      	cbz	r3, 802b012 <_lseek_r+0x1e>
 802b010:	6023      	str	r3, [r4, #0]
 802b012:	bd38      	pop	{r3, r4, r5, pc}
 802b014:	2001383c 	.word	0x2001383c

0802b018 <_read_r>:
 802b018:	b538      	push	{r3, r4, r5, lr}
 802b01a:	4d07      	ldr	r5, [pc, #28]	; (802b038 <_read_r+0x20>)
 802b01c:	4604      	mov	r4, r0
 802b01e:	4608      	mov	r0, r1
 802b020:	4611      	mov	r1, r2
 802b022:	2200      	movs	r2, #0
 802b024:	602a      	str	r2, [r5, #0]
 802b026:	461a      	mov	r2, r3
 802b028:	f7d7 f91a 	bl	8002260 <_read>
 802b02c:	1c43      	adds	r3, r0, #1
 802b02e:	d102      	bne.n	802b036 <_read_r+0x1e>
 802b030:	682b      	ldr	r3, [r5, #0]
 802b032:	b103      	cbz	r3, 802b036 <_read_r+0x1e>
 802b034:	6023      	str	r3, [r4, #0]
 802b036:	bd38      	pop	{r3, r4, r5, pc}
 802b038:	2001383c 	.word	0x2001383c

0802b03c <_kill_r>:
 802b03c:	b538      	push	{r3, r4, r5, lr}
 802b03e:	4d07      	ldr	r5, [pc, #28]	; (802b05c <_kill_r+0x20>)
 802b040:	2300      	movs	r3, #0
 802b042:	4604      	mov	r4, r0
 802b044:	4608      	mov	r0, r1
 802b046:	4611      	mov	r1, r2
 802b048:	602b      	str	r3, [r5, #0]
 802b04a:	f7d7 f8fb 	bl	8002244 <_kill>
 802b04e:	1c43      	adds	r3, r0, #1
 802b050:	d102      	bne.n	802b058 <_kill_r+0x1c>
 802b052:	682b      	ldr	r3, [r5, #0]
 802b054:	b103      	cbz	r3, 802b058 <_kill_r+0x1c>
 802b056:	6023      	str	r3, [r4, #0]
 802b058:	bd38      	pop	{r3, r4, r5, pc}
 802b05a:	bf00      	nop
 802b05c:	2001383c 	.word	0x2001383c

0802b060 <_getpid_r>:
 802b060:	f7d7 b8ee 	b.w	8002240 <_getpid>

0802b064 <_sbrk_r>:
 802b064:	b538      	push	{r3, r4, r5, lr}
 802b066:	4d06      	ldr	r5, [pc, #24]	; (802b080 <_sbrk_r+0x1c>)
 802b068:	2300      	movs	r3, #0
 802b06a:	4604      	mov	r4, r0
 802b06c:	4608      	mov	r0, r1
 802b06e:	602b      	str	r3, [r5, #0]
 802b070:	f7d7 f920 	bl	80022b4 <_sbrk>
 802b074:	1c43      	adds	r3, r0, #1
 802b076:	d102      	bne.n	802b07e <_sbrk_r+0x1a>
 802b078:	682b      	ldr	r3, [r5, #0]
 802b07a:	b103      	cbz	r3, 802b07e <_sbrk_r+0x1a>
 802b07c:	6023      	str	r3, [r4, #0]
 802b07e:	bd38      	pop	{r3, r4, r5, pc}
 802b080:	2001383c 	.word	0x2001383c

0802b084 <_write_r>:
 802b084:	b538      	push	{r3, r4, r5, lr}
 802b086:	4d07      	ldr	r5, [pc, #28]	; (802b0a4 <_write_r+0x20>)
 802b088:	4604      	mov	r4, r0
 802b08a:	4608      	mov	r0, r1
 802b08c:	4611      	mov	r1, r2
 802b08e:	2200      	movs	r2, #0
 802b090:	602a      	str	r2, [r5, #0]
 802b092:	461a      	mov	r2, r3
 802b094:	f7d7 f8f2 	bl	800227c <_write>
 802b098:	1c43      	adds	r3, r0, #1
 802b09a:	d102      	bne.n	802b0a2 <_write_r+0x1e>
 802b09c:	682b      	ldr	r3, [r5, #0]
 802b09e:	b103      	cbz	r3, 802b0a2 <_write_r+0x1e>
 802b0a0:	6023      	str	r3, [r4, #0]
 802b0a2:	bd38      	pop	{r3, r4, r5, pc}
 802b0a4:	2001383c 	.word	0x2001383c

0802b0a8 <__errno>:
 802b0a8:	4b01      	ldr	r3, [pc, #4]	; (802b0b0 <__errno+0x8>)
 802b0aa:	6818      	ldr	r0, [r3, #0]
 802b0ac:	4770      	bx	lr
 802b0ae:	bf00      	nop
 802b0b0:	20000160 	.word	0x20000160

0802b0b4 <__libc_init_array>:
 802b0b4:	b570      	push	{r4, r5, r6, lr}
 802b0b6:	4d0d      	ldr	r5, [pc, #52]	; (802b0ec <__libc_init_array+0x38>)
 802b0b8:	4c0d      	ldr	r4, [pc, #52]	; (802b0f0 <__libc_init_array+0x3c>)
 802b0ba:	1b64      	subs	r4, r4, r5
 802b0bc:	10a4      	asrs	r4, r4, #2
 802b0be:	2600      	movs	r6, #0
 802b0c0:	42a6      	cmp	r6, r4
 802b0c2:	d109      	bne.n	802b0d8 <__libc_init_array+0x24>
 802b0c4:	4d0b      	ldr	r5, [pc, #44]	; (802b0f4 <__libc_init_array+0x40>)
 802b0c6:	4c0c      	ldr	r4, [pc, #48]	; (802b0f8 <__libc_init_array+0x44>)
 802b0c8:	f000 fd70 	bl	802bbac <_init>
 802b0cc:	1b64      	subs	r4, r4, r5
 802b0ce:	10a4      	asrs	r4, r4, #2
 802b0d0:	2600      	movs	r6, #0
 802b0d2:	42a6      	cmp	r6, r4
 802b0d4:	d105      	bne.n	802b0e2 <__libc_init_array+0x2e>
 802b0d6:	bd70      	pop	{r4, r5, r6, pc}
 802b0d8:	f855 3b04 	ldr.w	r3, [r5], #4
 802b0dc:	4798      	blx	r3
 802b0de:	3601      	adds	r6, #1
 802b0e0:	e7ee      	b.n	802b0c0 <__libc_init_array+0xc>
 802b0e2:	f855 3b04 	ldr.w	r3, [r5], #4
 802b0e6:	4798      	blx	r3
 802b0e8:	3601      	adds	r6, #1
 802b0ea:	e7f2      	b.n	802b0d2 <__libc_init_array+0x1e>
 802b0ec:	081608b4 	.word	0x081608b4
 802b0f0:	081608b4 	.word	0x081608b4
 802b0f4:	081608b4 	.word	0x081608b4
 802b0f8:	081608c8 	.word	0x081608c8

0802b0fc <__retarget_lock_init_recursive>:
 802b0fc:	4770      	bx	lr

0802b0fe <__retarget_lock_acquire_recursive>:
 802b0fe:	4770      	bx	lr

0802b100 <__retarget_lock_release_recursive>:
 802b100:	4770      	bx	lr

0802b102 <memcpy>:
 802b102:	440a      	add	r2, r1
 802b104:	4291      	cmp	r1, r2
 802b106:	f100 33ff 	add.w	r3, r0, #4294967295
 802b10a:	d100      	bne.n	802b10e <memcpy+0xc>
 802b10c:	4770      	bx	lr
 802b10e:	b510      	push	{r4, lr}
 802b110:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b114:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b118:	4291      	cmp	r1, r2
 802b11a:	d1f9      	bne.n	802b110 <memcpy+0xe>
 802b11c:	bd10      	pop	{r4, pc}
	...

0802b120 <__register_exitproc>:
 802b120:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b124:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b1d8 <__register_exitproc+0xb8>
 802b128:	4606      	mov	r6, r0
 802b12a:	f8d8 0000 	ldr.w	r0, [r8]
 802b12e:	461f      	mov	r7, r3
 802b130:	460d      	mov	r5, r1
 802b132:	4691      	mov	r9, r2
 802b134:	f7ff ffe3 	bl	802b0fe <__retarget_lock_acquire_recursive>
 802b138:	4b23      	ldr	r3, [pc, #140]	; (802b1c8 <__register_exitproc+0xa8>)
 802b13a:	681c      	ldr	r4, [r3, #0]
 802b13c:	b934      	cbnz	r4, 802b14c <__register_exitproc+0x2c>
 802b13e:	4c23      	ldr	r4, [pc, #140]	; (802b1cc <__register_exitproc+0xac>)
 802b140:	601c      	str	r4, [r3, #0]
 802b142:	4b23      	ldr	r3, [pc, #140]	; (802b1d0 <__register_exitproc+0xb0>)
 802b144:	b113      	cbz	r3, 802b14c <__register_exitproc+0x2c>
 802b146:	681b      	ldr	r3, [r3, #0]
 802b148:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b14c:	6863      	ldr	r3, [r4, #4]
 802b14e:	2b1f      	cmp	r3, #31
 802b150:	dd07      	ble.n	802b162 <__register_exitproc+0x42>
 802b152:	f8d8 0000 	ldr.w	r0, [r8]
 802b156:	f7ff ffd3 	bl	802b100 <__retarget_lock_release_recursive>
 802b15a:	f04f 30ff 	mov.w	r0, #4294967295
 802b15e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b162:	b32e      	cbz	r6, 802b1b0 <__register_exitproc+0x90>
 802b164:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b168:	b968      	cbnz	r0, 802b186 <__register_exitproc+0x66>
 802b16a:	4b1a      	ldr	r3, [pc, #104]	; (802b1d4 <__register_exitproc+0xb4>)
 802b16c:	2b00      	cmp	r3, #0
 802b16e:	d0f0      	beq.n	802b152 <__register_exitproc+0x32>
 802b170:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b174:	f7ff fcbe 	bl	802aaf4 <malloc>
 802b178:	2800      	cmp	r0, #0
 802b17a:	d0ea      	beq.n	802b152 <__register_exitproc+0x32>
 802b17c:	2300      	movs	r3, #0
 802b17e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b182:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b186:	6863      	ldr	r3, [r4, #4]
 802b188:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b18c:	2201      	movs	r2, #1
 802b18e:	409a      	lsls	r2, r3
 802b190:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b194:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b198:	4313      	orrs	r3, r2
 802b19a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b19e:	2e02      	cmp	r6, #2
 802b1a0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b1a4:	bf02      	ittt	eq
 802b1a6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b1aa:	4313      	orreq	r3, r2
 802b1ac:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b1b0:	6863      	ldr	r3, [r4, #4]
 802b1b2:	f8d8 0000 	ldr.w	r0, [r8]
 802b1b6:	1c5a      	adds	r2, r3, #1
 802b1b8:	3302      	adds	r3, #2
 802b1ba:	6062      	str	r2, [r4, #4]
 802b1bc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b1c0:	f7ff ff9e 	bl	802b100 <__retarget_lock_release_recursive>
 802b1c4:	2000      	movs	r0, #0
 802b1c6:	e7ca      	b.n	802b15e <__register_exitproc+0x3e>
 802b1c8:	200138d0 	.word	0x200138d0
 802b1cc:	20013844 	.word	0x20013844
 802b1d0:	0804313c 	.word	0x0804313c
 802b1d4:	0802aaf5 	.word	0x0802aaf5
 802b1d8:	20000164 	.word	0x20000164

0802b1dc <_free_r>:
 802b1dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b1de:	2900      	cmp	r1, #0
 802b1e0:	d044      	beq.n	802b26c <_free_r+0x90>
 802b1e2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b1e6:	9001      	str	r0, [sp, #4]
 802b1e8:	2b00      	cmp	r3, #0
 802b1ea:	f1a1 0404 	sub.w	r4, r1, #4
 802b1ee:	bfb8      	it	lt
 802b1f0:	18e4      	addlt	r4, r4, r3
 802b1f2:	f7ff fd2f 	bl	802ac54 <__malloc_lock>
 802b1f6:	4a1e      	ldr	r2, [pc, #120]	; (802b270 <_free_r+0x94>)
 802b1f8:	9801      	ldr	r0, [sp, #4]
 802b1fa:	6813      	ldr	r3, [r2, #0]
 802b1fc:	b933      	cbnz	r3, 802b20c <_free_r+0x30>
 802b1fe:	6063      	str	r3, [r4, #4]
 802b200:	6014      	str	r4, [r2, #0]
 802b202:	b003      	add	sp, #12
 802b204:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b208:	f7ff bd2a 	b.w	802ac60 <__malloc_unlock>
 802b20c:	42a3      	cmp	r3, r4
 802b20e:	d908      	bls.n	802b222 <_free_r+0x46>
 802b210:	6825      	ldr	r5, [r4, #0]
 802b212:	1961      	adds	r1, r4, r5
 802b214:	428b      	cmp	r3, r1
 802b216:	bf01      	itttt	eq
 802b218:	6819      	ldreq	r1, [r3, #0]
 802b21a:	685b      	ldreq	r3, [r3, #4]
 802b21c:	1949      	addeq	r1, r1, r5
 802b21e:	6021      	streq	r1, [r4, #0]
 802b220:	e7ed      	b.n	802b1fe <_free_r+0x22>
 802b222:	461a      	mov	r2, r3
 802b224:	685b      	ldr	r3, [r3, #4]
 802b226:	b10b      	cbz	r3, 802b22c <_free_r+0x50>
 802b228:	42a3      	cmp	r3, r4
 802b22a:	d9fa      	bls.n	802b222 <_free_r+0x46>
 802b22c:	6811      	ldr	r1, [r2, #0]
 802b22e:	1855      	adds	r5, r2, r1
 802b230:	42a5      	cmp	r5, r4
 802b232:	d10b      	bne.n	802b24c <_free_r+0x70>
 802b234:	6824      	ldr	r4, [r4, #0]
 802b236:	4421      	add	r1, r4
 802b238:	1854      	adds	r4, r2, r1
 802b23a:	42a3      	cmp	r3, r4
 802b23c:	6011      	str	r1, [r2, #0]
 802b23e:	d1e0      	bne.n	802b202 <_free_r+0x26>
 802b240:	681c      	ldr	r4, [r3, #0]
 802b242:	685b      	ldr	r3, [r3, #4]
 802b244:	6053      	str	r3, [r2, #4]
 802b246:	440c      	add	r4, r1
 802b248:	6014      	str	r4, [r2, #0]
 802b24a:	e7da      	b.n	802b202 <_free_r+0x26>
 802b24c:	d902      	bls.n	802b254 <_free_r+0x78>
 802b24e:	230c      	movs	r3, #12
 802b250:	6003      	str	r3, [r0, #0]
 802b252:	e7d6      	b.n	802b202 <_free_r+0x26>
 802b254:	6825      	ldr	r5, [r4, #0]
 802b256:	1961      	adds	r1, r4, r5
 802b258:	428b      	cmp	r3, r1
 802b25a:	bf04      	itt	eq
 802b25c:	6819      	ldreq	r1, [r3, #0]
 802b25e:	685b      	ldreq	r3, [r3, #4]
 802b260:	6063      	str	r3, [r4, #4]
 802b262:	bf04      	itt	eq
 802b264:	1949      	addeq	r1, r1, r5
 802b266:	6021      	streq	r1, [r4, #0]
 802b268:	6054      	str	r4, [r2, #4]
 802b26a:	e7ca      	b.n	802b202 <_free_r+0x26>
 802b26c:	b003      	add	sp, #12
 802b26e:	bd30      	pop	{r4, r5, pc}
 802b270:	200136f8 	.word	0x200136f8

0802b274 <__sfputc_r>:
 802b274:	6893      	ldr	r3, [r2, #8]
 802b276:	3b01      	subs	r3, #1
 802b278:	2b00      	cmp	r3, #0
 802b27a:	b410      	push	{r4}
 802b27c:	6093      	str	r3, [r2, #8]
 802b27e:	da08      	bge.n	802b292 <__sfputc_r+0x1e>
 802b280:	6994      	ldr	r4, [r2, #24]
 802b282:	42a3      	cmp	r3, r4
 802b284:	db01      	blt.n	802b28a <__sfputc_r+0x16>
 802b286:	290a      	cmp	r1, #10
 802b288:	d103      	bne.n	802b292 <__sfputc_r+0x1e>
 802b28a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b28e:	f000 bb73 	b.w	802b978 <__swbuf_r>
 802b292:	6813      	ldr	r3, [r2, #0]
 802b294:	1c58      	adds	r0, r3, #1
 802b296:	6010      	str	r0, [r2, #0]
 802b298:	7019      	strb	r1, [r3, #0]
 802b29a:	4608      	mov	r0, r1
 802b29c:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b2a0:	4770      	bx	lr

0802b2a2 <__sfputs_r>:
 802b2a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b2a4:	4606      	mov	r6, r0
 802b2a6:	460f      	mov	r7, r1
 802b2a8:	4614      	mov	r4, r2
 802b2aa:	18d5      	adds	r5, r2, r3
 802b2ac:	42ac      	cmp	r4, r5
 802b2ae:	d101      	bne.n	802b2b4 <__sfputs_r+0x12>
 802b2b0:	2000      	movs	r0, #0
 802b2b2:	e007      	b.n	802b2c4 <__sfputs_r+0x22>
 802b2b4:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b2b8:	463a      	mov	r2, r7
 802b2ba:	4630      	mov	r0, r6
 802b2bc:	f7ff ffda 	bl	802b274 <__sfputc_r>
 802b2c0:	1c43      	adds	r3, r0, #1
 802b2c2:	d1f3      	bne.n	802b2ac <__sfputs_r+0xa>
 802b2c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b2c8 <_vfiprintf_r>:
 802b2c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b2cc:	460d      	mov	r5, r1
 802b2ce:	b09d      	sub	sp, #116	; 0x74
 802b2d0:	4614      	mov	r4, r2
 802b2d2:	4698      	mov	r8, r3
 802b2d4:	4606      	mov	r6, r0
 802b2d6:	b118      	cbz	r0, 802b2e0 <_vfiprintf_r+0x18>
 802b2d8:	6a03      	ldr	r3, [r0, #32]
 802b2da:	b90b      	cbnz	r3, 802b2e0 <_vfiprintf_r+0x18>
 802b2dc:	f7ff fd60 	bl	802ada0 <__sinit>
 802b2e0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b2e2:	07d9      	lsls	r1, r3, #31
 802b2e4:	d405      	bmi.n	802b2f2 <_vfiprintf_r+0x2a>
 802b2e6:	89ab      	ldrh	r3, [r5, #12]
 802b2e8:	059a      	lsls	r2, r3, #22
 802b2ea:	d402      	bmi.n	802b2f2 <_vfiprintf_r+0x2a>
 802b2ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b2ee:	f7ff ff06 	bl	802b0fe <__retarget_lock_acquire_recursive>
 802b2f2:	89ab      	ldrh	r3, [r5, #12]
 802b2f4:	071b      	lsls	r3, r3, #28
 802b2f6:	d501      	bpl.n	802b2fc <_vfiprintf_r+0x34>
 802b2f8:	692b      	ldr	r3, [r5, #16]
 802b2fa:	b99b      	cbnz	r3, 802b324 <_vfiprintf_r+0x5c>
 802b2fc:	4629      	mov	r1, r5
 802b2fe:	4630      	mov	r0, r6
 802b300:	f000 fb78 	bl	802b9f4 <__swsetup_r>
 802b304:	b170      	cbz	r0, 802b324 <_vfiprintf_r+0x5c>
 802b306:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b308:	07dc      	lsls	r4, r3, #31
 802b30a:	d504      	bpl.n	802b316 <_vfiprintf_r+0x4e>
 802b30c:	f04f 30ff 	mov.w	r0, #4294967295
 802b310:	b01d      	add	sp, #116	; 0x74
 802b312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b316:	89ab      	ldrh	r3, [r5, #12]
 802b318:	0598      	lsls	r0, r3, #22
 802b31a:	d4f7      	bmi.n	802b30c <_vfiprintf_r+0x44>
 802b31c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b31e:	f7ff feef 	bl	802b100 <__retarget_lock_release_recursive>
 802b322:	e7f3      	b.n	802b30c <_vfiprintf_r+0x44>
 802b324:	2300      	movs	r3, #0
 802b326:	9309      	str	r3, [sp, #36]	; 0x24
 802b328:	2320      	movs	r3, #32
 802b32a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b32e:	f8cd 800c 	str.w	r8, [sp, #12]
 802b332:	2330      	movs	r3, #48	; 0x30
 802b334:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b4e8 <_vfiprintf_r+0x220>
 802b338:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b33c:	f04f 0901 	mov.w	r9, #1
 802b340:	4623      	mov	r3, r4
 802b342:	469a      	mov	sl, r3
 802b344:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b348:	b10a      	cbz	r2, 802b34e <_vfiprintf_r+0x86>
 802b34a:	2a25      	cmp	r2, #37	; 0x25
 802b34c:	d1f9      	bne.n	802b342 <_vfiprintf_r+0x7a>
 802b34e:	ebba 0b04 	subs.w	fp, sl, r4
 802b352:	d00b      	beq.n	802b36c <_vfiprintf_r+0xa4>
 802b354:	465b      	mov	r3, fp
 802b356:	4622      	mov	r2, r4
 802b358:	4629      	mov	r1, r5
 802b35a:	4630      	mov	r0, r6
 802b35c:	f7ff ffa1 	bl	802b2a2 <__sfputs_r>
 802b360:	3001      	adds	r0, #1
 802b362:	f000 80a9 	beq.w	802b4b8 <_vfiprintf_r+0x1f0>
 802b366:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b368:	445a      	add	r2, fp
 802b36a:	9209      	str	r2, [sp, #36]	; 0x24
 802b36c:	f89a 3000 	ldrb.w	r3, [sl]
 802b370:	2b00      	cmp	r3, #0
 802b372:	f000 80a1 	beq.w	802b4b8 <_vfiprintf_r+0x1f0>
 802b376:	2300      	movs	r3, #0
 802b378:	f04f 32ff 	mov.w	r2, #4294967295
 802b37c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b380:	f10a 0a01 	add.w	sl, sl, #1
 802b384:	9304      	str	r3, [sp, #16]
 802b386:	9307      	str	r3, [sp, #28]
 802b388:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b38c:	931a      	str	r3, [sp, #104]	; 0x68
 802b38e:	4654      	mov	r4, sl
 802b390:	2205      	movs	r2, #5
 802b392:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b396:	4854      	ldr	r0, [pc, #336]	; (802b4e8 <_vfiprintf_r+0x220>)
 802b398:	f7d4 ff8a 	bl	80002b0 <memchr>
 802b39c:	9a04      	ldr	r2, [sp, #16]
 802b39e:	b9d8      	cbnz	r0, 802b3d8 <_vfiprintf_r+0x110>
 802b3a0:	06d1      	lsls	r1, r2, #27
 802b3a2:	bf44      	itt	mi
 802b3a4:	2320      	movmi	r3, #32
 802b3a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b3aa:	0713      	lsls	r3, r2, #28
 802b3ac:	bf44      	itt	mi
 802b3ae:	232b      	movmi	r3, #43	; 0x2b
 802b3b0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b3b4:	f89a 3000 	ldrb.w	r3, [sl]
 802b3b8:	2b2a      	cmp	r3, #42	; 0x2a
 802b3ba:	d015      	beq.n	802b3e8 <_vfiprintf_r+0x120>
 802b3bc:	9a07      	ldr	r2, [sp, #28]
 802b3be:	4654      	mov	r4, sl
 802b3c0:	2000      	movs	r0, #0
 802b3c2:	f04f 0c0a 	mov.w	ip, #10
 802b3c6:	4621      	mov	r1, r4
 802b3c8:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b3cc:	3b30      	subs	r3, #48	; 0x30
 802b3ce:	2b09      	cmp	r3, #9
 802b3d0:	d94d      	bls.n	802b46e <_vfiprintf_r+0x1a6>
 802b3d2:	b1b0      	cbz	r0, 802b402 <_vfiprintf_r+0x13a>
 802b3d4:	9207      	str	r2, [sp, #28]
 802b3d6:	e014      	b.n	802b402 <_vfiprintf_r+0x13a>
 802b3d8:	eba0 0308 	sub.w	r3, r0, r8
 802b3dc:	fa09 f303 	lsl.w	r3, r9, r3
 802b3e0:	4313      	orrs	r3, r2
 802b3e2:	9304      	str	r3, [sp, #16]
 802b3e4:	46a2      	mov	sl, r4
 802b3e6:	e7d2      	b.n	802b38e <_vfiprintf_r+0xc6>
 802b3e8:	9b03      	ldr	r3, [sp, #12]
 802b3ea:	1d19      	adds	r1, r3, #4
 802b3ec:	681b      	ldr	r3, [r3, #0]
 802b3ee:	9103      	str	r1, [sp, #12]
 802b3f0:	2b00      	cmp	r3, #0
 802b3f2:	bfbb      	ittet	lt
 802b3f4:	425b      	neglt	r3, r3
 802b3f6:	f042 0202 	orrlt.w	r2, r2, #2
 802b3fa:	9307      	strge	r3, [sp, #28]
 802b3fc:	9307      	strlt	r3, [sp, #28]
 802b3fe:	bfb8      	it	lt
 802b400:	9204      	strlt	r2, [sp, #16]
 802b402:	7823      	ldrb	r3, [r4, #0]
 802b404:	2b2e      	cmp	r3, #46	; 0x2e
 802b406:	d10c      	bne.n	802b422 <_vfiprintf_r+0x15a>
 802b408:	7863      	ldrb	r3, [r4, #1]
 802b40a:	2b2a      	cmp	r3, #42	; 0x2a
 802b40c:	d134      	bne.n	802b478 <_vfiprintf_r+0x1b0>
 802b40e:	9b03      	ldr	r3, [sp, #12]
 802b410:	1d1a      	adds	r2, r3, #4
 802b412:	681b      	ldr	r3, [r3, #0]
 802b414:	9203      	str	r2, [sp, #12]
 802b416:	2b00      	cmp	r3, #0
 802b418:	bfb8      	it	lt
 802b41a:	f04f 33ff 	movlt.w	r3, #4294967295
 802b41e:	3402      	adds	r4, #2
 802b420:	9305      	str	r3, [sp, #20]
 802b422:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802b4f8 <_vfiprintf_r+0x230>
 802b426:	7821      	ldrb	r1, [r4, #0]
 802b428:	2203      	movs	r2, #3
 802b42a:	4650      	mov	r0, sl
 802b42c:	f7d4 ff40 	bl	80002b0 <memchr>
 802b430:	b138      	cbz	r0, 802b442 <_vfiprintf_r+0x17a>
 802b432:	9b04      	ldr	r3, [sp, #16]
 802b434:	eba0 000a 	sub.w	r0, r0, sl
 802b438:	2240      	movs	r2, #64	; 0x40
 802b43a:	4082      	lsls	r2, r0
 802b43c:	4313      	orrs	r3, r2
 802b43e:	3401      	adds	r4, #1
 802b440:	9304      	str	r3, [sp, #16]
 802b442:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b446:	4829      	ldr	r0, [pc, #164]	; (802b4ec <_vfiprintf_r+0x224>)
 802b448:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b44c:	2206      	movs	r2, #6
 802b44e:	f7d4 ff2f 	bl	80002b0 <memchr>
 802b452:	2800      	cmp	r0, #0
 802b454:	d03f      	beq.n	802b4d6 <_vfiprintf_r+0x20e>
 802b456:	4b26      	ldr	r3, [pc, #152]	; (802b4f0 <_vfiprintf_r+0x228>)
 802b458:	bb1b      	cbnz	r3, 802b4a2 <_vfiprintf_r+0x1da>
 802b45a:	9b03      	ldr	r3, [sp, #12]
 802b45c:	3307      	adds	r3, #7
 802b45e:	f023 0307 	bic.w	r3, r3, #7
 802b462:	3308      	adds	r3, #8
 802b464:	9303      	str	r3, [sp, #12]
 802b466:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b468:	443b      	add	r3, r7
 802b46a:	9309      	str	r3, [sp, #36]	; 0x24
 802b46c:	e768      	b.n	802b340 <_vfiprintf_r+0x78>
 802b46e:	fb0c 3202 	mla	r2, ip, r2, r3
 802b472:	460c      	mov	r4, r1
 802b474:	2001      	movs	r0, #1
 802b476:	e7a6      	b.n	802b3c6 <_vfiprintf_r+0xfe>
 802b478:	2300      	movs	r3, #0
 802b47a:	3401      	adds	r4, #1
 802b47c:	9305      	str	r3, [sp, #20]
 802b47e:	4619      	mov	r1, r3
 802b480:	f04f 0c0a 	mov.w	ip, #10
 802b484:	4620      	mov	r0, r4
 802b486:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b48a:	3a30      	subs	r2, #48	; 0x30
 802b48c:	2a09      	cmp	r2, #9
 802b48e:	d903      	bls.n	802b498 <_vfiprintf_r+0x1d0>
 802b490:	2b00      	cmp	r3, #0
 802b492:	d0c6      	beq.n	802b422 <_vfiprintf_r+0x15a>
 802b494:	9105      	str	r1, [sp, #20]
 802b496:	e7c4      	b.n	802b422 <_vfiprintf_r+0x15a>
 802b498:	fb0c 2101 	mla	r1, ip, r1, r2
 802b49c:	4604      	mov	r4, r0
 802b49e:	2301      	movs	r3, #1
 802b4a0:	e7f0      	b.n	802b484 <_vfiprintf_r+0x1bc>
 802b4a2:	ab03      	add	r3, sp, #12
 802b4a4:	9300      	str	r3, [sp, #0]
 802b4a6:	462a      	mov	r2, r5
 802b4a8:	4b12      	ldr	r3, [pc, #72]	; (802b4f4 <_vfiprintf_r+0x22c>)
 802b4aa:	a904      	add	r1, sp, #16
 802b4ac:	4630      	mov	r0, r6
 802b4ae:	f3af 8000 	nop.w
 802b4b2:	4607      	mov	r7, r0
 802b4b4:	1c78      	adds	r0, r7, #1
 802b4b6:	d1d6      	bne.n	802b466 <_vfiprintf_r+0x19e>
 802b4b8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b4ba:	07d9      	lsls	r1, r3, #31
 802b4bc:	d405      	bmi.n	802b4ca <_vfiprintf_r+0x202>
 802b4be:	89ab      	ldrh	r3, [r5, #12]
 802b4c0:	059a      	lsls	r2, r3, #22
 802b4c2:	d402      	bmi.n	802b4ca <_vfiprintf_r+0x202>
 802b4c4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b4c6:	f7ff fe1b 	bl	802b100 <__retarget_lock_release_recursive>
 802b4ca:	89ab      	ldrh	r3, [r5, #12]
 802b4cc:	065b      	lsls	r3, r3, #25
 802b4ce:	f53f af1d 	bmi.w	802b30c <_vfiprintf_r+0x44>
 802b4d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b4d4:	e71c      	b.n	802b310 <_vfiprintf_r+0x48>
 802b4d6:	ab03      	add	r3, sp, #12
 802b4d8:	9300      	str	r3, [sp, #0]
 802b4da:	462a      	mov	r2, r5
 802b4dc:	4b05      	ldr	r3, [pc, #20]	; (802b4f4 <_vfiprintf_r+0x22c>)
 802b4de:	a904      	add	r1, sp, #16
 802b4e0:	4630      	mov	r0, r6
 802b4e2:	f000 f879 	bl	802b5d8 <_printf_i>
 802b4e6:	e7e4      	b.n	802b4b2 <_vfiprintf_r+0x1ea>
 802b4e8:	08043140 	.word	0x08043140
 802b4ec:	0804314a 	.word	0x0804314a
 802b4f0:	00000000 	.word	0x00000000
 802b4f4:	0802b2a3 	.word	0x0802b2a3
 802b4f8:	08043146 	.word	0x08043146

0802b4fc <_printf_common>:
 802b4fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b500:	4616      	mov	r6, r2
 802b502:	4699      	mov	r9, r3
 802b504:	688a      	ldr	r2, [r1, #8]
 802b506:	690b      	ldr	r3, [r1, #16]
 802b508:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b50c:	4293      	cmp	r3, r2
 802b50e:	bfb8      	it	lt
 802b510:	4613      	movlt	r3, r2
 802b512:	6033      	str	r3, [r6, #0]
 802b514:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b518:	4607      	mov	r7, r0
 802b51a:	460c      	mov	r4, r1
 802b51c:	b10a      	cbz	r2, 802b522 <_printf_common+0x26>
 802b51e:	3301      	adds	r3, #1
 802b520:	6033      	str	r3, [r6, #0]
 802b522:	6823      	ldr	r3, [r4, #0]
 802b524:	0699      	lsls	r1, r3, #26
 802b526:	bf42      	ittt	mi
 802b528:	6833      	ldrmi	r3, [r6, #0]
 802b52a:	3302      	addmi	r3, #2
 802b52c:	6033      	strmi	r3, [r6, #0]
 802b52e:	6825      	ldr	r5, [r4, #0]
 802b530:	f015 0506 	ands.w	r5, r5, #6
 802b534:	d106      	bne.n	802b544 <_printf_common+0x48>
 802b536:	f104 0a19 	add.w	sl, r4, #25
 802b53a:	68e3      	ldr	r3, [r4, #12]
 802b53c:	6832      	ldr	r2, [r6, #0]
 802b53e:	1a9b      	subs	r3, r3, r2
 802b540:	42ab      	cmp	r3, r5
 802b542:	dc26      	bgt.n	802b592 <_printf_common+0x96>
 802b544:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b548:	1e13      	subs	r3, r2, #0
 802b54a:	6822      	ldr	r2, [r4, #0]
 802b54c:	bf18      	it	ne
 802b54e:	2301      	movne	r3, #1
 802b550:	0692      	lsls	r2, r2, #26
 802b552:	d42b      	bmi.n	802b5ac <_printf_common+0xb0>
 802b554:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b558:	4649      	mov	r1, r9
 802b55a:	4638      	mov	r0, r7
 802b55c:	47c0      	blx	r8
 802b55e:	3001      	adds	r0, #1
 802b560:	d01e      	beq.n	802b5a0 <_printf_common+0xa4>
 802b562:	6823      	ldr	r3, [r4, #0]
 802b564:	6922      	ldr	r2, [r4, #16]
 802b566:	f003 0306 	and.w	r3, r3, #6
 802b56a:	2b04      	cmp	r3, #4
 802b56c:	bf02      	ittt	eq
 802b56e:	68e5      	ldreq	r5, [r4, #12]
 802b570:	6833      	ldreq	r3, [r6, #0]
 802b572:	1aed      	subeq	r5, r5, r3
 802b574:	68a3      	ldr	r3, [r4, #8]
 802b576:	bf0c      	ite	eq
 802b578:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b57c:	2500      	movne	r5, #0
 802b57e:	4293      	cmp	r3, r2
 802b580:	bfc4      	itt	gt
 802b582:	1a9b      	subgt	r3, r3, r2
 802b584:	18ed      	addgt	r5, r5, r3
 802b586:	2600      	movs	r6, #0
 802b588:	341a      	adds	r4, #26
 802b58a:	42b5      	cmp	r5, r6
 802b58c:	d11a      	bne.n	802b5c4 <_printf_common+0xc8>
 802b58e:	2000      	movs	r0, #0
 802b590:	e008      	b.n	802b5a4 <_printf_common+0xa8>
 802b592:	2301      	movs	r3, #1
 802b594:	4652      	mov	r2, sl
 802b596:	4649      	mov	r1, r9
 802b598:	4638      	mov	r0, r7
 802b59a:	47c0      	blx	r8
 802b59c:	3001      	adds	r0, #1
 802b59e:	d103      	bne.n	802b5a8 <_printf_common+0xac>
 802b5a0:	f04f 30ff 	mov.w	r0, #4294967295
 802b5a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b5a8:	3501      	adds	r5, #1
 802b5aa:	e7c6      	b.n	802b53a <_printf_common+0x3e>
 802b5ac:	18e1      	adds	r1, r4, r3
 802b5ae:	1c5a      	adds	r2, r3, #1
 802b5b0:	2030      	movs	r0, #48	; 0x30
 802b5b2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b5b6:	4422      	add	r2, r4
 802b5b8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b5bc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b5c0:	3302      	adds	r3, #2
 802b5c2:	e7c7      	b.n	802b554 <_printf_common+0x58>
 802b5c4:	2301      	movs	r3, #1
 802b5c6:	4622      	mov	r2, r4
 802b5c8:	4649      	mov	r1, r9
 802b5ca:	4638      	mov	r0, r7
 802b5cc:	47c0      	blx	r8
 802b5ce:	3001      	adds	r0, #1
 802b5d0:	d0e6      	beq.n	802b5a0 <_printf_common+0xa4>
 802b5d2:	3601      	adds	r6, #1
 802b5d4:	e7d9      	b.n	802b58a <_printf_common+0x8e>
	...

0802b5d8 <_printf_i>:
 802b5d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b5dc:	7e0f      	ldrb	r7, [r1, #24]
 802b5de:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b5e0:	2f78      	cmp	r7, #120	; 0x78
 802b5e2:	4691      	mov	r9, r2
 802b5e4:	4680      	mov	r8, r0
 802b5e6:	460c      	mov	r4, r1
 802b5e8:	469a      	mov	sl, r3
 802b5ea:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b5ee:	d807      	bhi.n	802b600 <_printf_i+0x28>
 802b5f0:	2f62      	cmp	r7, #98	; 0x62
 802b5f2:	d80a      	bhi.n	802b60a <_printf_i+0x32>
 802b5f4:	2f00      	cmp	r7, #0
 802b5f6:	f000 80d4 	beq.w	802b7a2 <_printf_i+0x1ca>
 802b5fa:	2f58      	cmp	r7, #88	; 0x58
 802b5fc:	f000 80c0 	beq.w	802b780 <_printf_i+0x1a8>
 802b600:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b604:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b608:	e03a      	b.n	802b680 <_printf_i+0xa8>
 802b60a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b60e:	2b15      	cmp	r3, #21
 802b610:	d8f6      	bhi.n	802b600 <_printf_i+0x28>
 802b612:	a101      	add	r1, pc, #4	; (adr r1, 802b618 <_printf_i+0x40>)
 802b614:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b618:	0802b671 	.word	0x0802b671
 802b61c:	0802b685 	.word	0x0802b685
 802b620:	0802b601 	.word	0x0802b601
 802b624:	0802b601 	.word	0x0802b601
 802b628:	0802b601 	.word	0x0802b601
 802b62c:	0802b601 	.word	0x0802b601
 802b630:	0802b685 	.word	0x0802b685
 802b634:	0802b601 	.word	0x0802b601
 802b638:	0802b601 	.word	0x0802b601
 802b63c:	0802b601 	.word	0x0802b601
 802b640:	0802b601 	.word	0x0802b601
 802b644:	0802b789 	.word	0x0802b789
 802b648:	0802b6b1 	.word	0x0802b6b1
 802b64c:	0802b743 	.word	0x0802b743
 802b650:	0802b601 	.word	0x0802b601
 802b654:	0802b601 	.word	0x0802b601
 802b658:	0802b7ab 	.word	0x0802b7ab
 802b65c:	0802b601 	.word	0x0802b601
 802b660:	0802b6b1 	.word	0x0802b6b1
 802b664:	0802b601 	.word	0x0802b601
 802b668:	0802b601 	.word	0x0802b601
 802b66c:	0802b74b 	.word	0x0802b74b
 802b670:	682b      	ldr	r3, [r5, #0]
 802b672:	1d1a      	adds	r2, r3, #4
 802b674:	681b      	ldr	r3, [r3, #0]
 802b676:	602a      	str	r2, [r5, #0]
 802b678:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b67c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b680:	2301      	movs	r3, #1
 802b682:	e09f      	b.n	802b7c4 <_printf_i+0x1ec>
 802b684:	6820      	ldr	r0, [r4, #0]
 802b686:	682b      	ldr	r3, [r5, #0]
 802b688:	0607      	lsls	r7, r0, #24
 802b68a:	f103 0104 	add.w	r1, r3, #4
 802b68e:	6029      	str	r1, [r5, #0]
 802b690:	d501      	bpl.n	802b696 <_printf_i+0xbe>
 802b692:	681e      	ldr	r6, [r3, #0]
 802b694:	e003      	b.n	802b69e <_printf_i+0xc6>
 802b696:	0646      	lsls	r6, r0, #25
 802b698:	d5fb      	bpl.n	802b692 <_printf_i+0xba>
 802b69a:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b69e:	2e00      	cmp	r6, #0
 802b6a0:	da03      	bge.n	802b6aa <_printf_i+0xd2>
 802b6a2:	232d      	movs	r3, #45	; 0x2d
 802b6a4:	4276      	negs	r6, r6
 802b6a6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b6aa:	485a      	ldr	r0, [pc, #360]	; (802b814 <_printf_i+0x23c>)
 802b6ac:	230a      	movs	r3, #10
 802b6ae:	e012      	b.n	802b6d6 <_printf_i+0xfe>
 802b6b0:	682b      	ldr	r3, [r5, #0]
 802b6b2:	6820      	ldr	r0, [r4, #0]
 802b6b4:	1d19      	adds	r1, r3, #4
 802b6b6:	6029      	str	r1, [r5, #0]
 802b6b8:	0605      	lsls	r5, r0, #24
 802b6ba:	d501      	bpl.n	802b6c0 <_printf_i+0xe8>
 802b6bc:	681e      	ldr	r6, [r3, #0]
 802b6be:	e002      	b.n	802b6c6 <_printf_i+0xee>
 802b6c0:	0641      	lsls	r1, r0, #25
 802b6c2:	d5fb      	bpl.n	802b6bc <_printf_i+0xe4>
 802b6c4:	881e      	ldrh	r6, [r3, #0]
 802b6c6:	4853      	ldr	r0, [pc, #332]	; (802b814 <_printf_i+0x23c>)
 802b6c8:	2f6f      	cmp	r7, #111	; 0x6f
 802b6ca:	bf0c      	ite	eq
 802b6cc:	2308      	moveq	r3, #8
 802b6ce:	230a      	movne	r3, #10
 802b6d0:	2100      	movs	r1, #0
 802b6d2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b6d6:	6865      	ldr	r5, [r4, #4]
 802b6d8:	60a5      	str	r5, [r4, #8]
 802b6da:	2d00      	cmp	r5, #0
 802b6dc:	bfa2      	ittt	ge
 802b6de:	6821      	ldrge	r1, [r4, #0]
 802b6e0:	f021 0104 	bicge.w	r1, r1, #4
 802b6e4:	6021      	strge	r1, [r4, #0]
 802b6e6:	b90e      	cbnz	r6, 802b6ec <_printf_i+0x114>
 802b6e8:	2d00      	cmp	r5, #0
 802b6ea:	d04b      	beq.n	802b784 <_printf_i+0x1ac>
 802b6ec:	4615      	mov	r5, r2
 802b6ee:	fbb6 f1f3 	udiv	r1, r6, r3
 802b6f2:	fb03 6711 	mls	r7, r3, r1, r6
 802b6f6:	5dc7      	ldrb	r7, [r0, r7]
 802b6f8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802b6fc:	4637      	mov	r7, r6
 802b6fe:	42bb      	cmp	r3, r7
 802b700:	460e      	mov	r6, r1
 802b702:	d9f4      	bls.n	802b6ee <_printf_i+0x116>
 802b704:	2b08      	cmp	r3, #8
 802b706:	d10b      	bne.n	802b720 <_printf_i+0x148>
 802b708:	6823      	ldr	r3, [r4, #0]
 802b70a:	07de      	lsls	r6, r3, #31
 802b70c:	d508      	bpl.n	802b720 <_printf_i+0x148>
 802b70e:	6923      	ldr	r3, [r4, #16]
 802b710:	6861      	ldr	r1, [r4, #4]
 802b712:	4299      	cmp	r1, r3
 802b714:	bfde      	ittt	le
 802b716:	2330      	movle	r3, #48	; 0x30
 802b718:	f805 3c01 	strble.w	r3, [r5, #-1]
 802b71c:	f105 35ff 	addle.w	r5, r5, #4294967295
 802b720:	1b52      	subs	r2, r2, r5
 802b722:	6122      	str	r2, [r4, #16]
 802b724:	f8cd a000 	str.w	sl, [sp]
 802b728:	464b      	mov	r3, r9
 802b72a:	aa03      	add	r2, sp, #12
 802b72c:	4621      	mov	r1, r4
 802b72e:	4640      	mov	r0, r8
 802b730:	f7ff fee4 	bl	802b4fc <_printf_common>
 802b734:	3001      	adds	r0, #1
 802b736:	d14a      	bne.n	802b7ce <_printf_i+0x1f6>
 802b738:	f04f 30ff 	mov.w	r0, #4294967295
 802b73c:	b004      	add	sp, #16
 802b73e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b742:	6823      	ldr	r3, [r4, #0]
 802b744:	f043 0320 	orr.w	r3, r3, #32
 802b748:	6023      	str	r3, [r4, #0]
 802b74a:	4833      	ldr	r0, [pc, #204]	; (802b818 <_printf_i+0x240>)
 802b74c:	2778      	movs	r7, #120	; 0x78
 802b74e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802b752:	6823      	ldr	r3, [r4, #0]
 802b754:	6829      	ldr	r1, [r5, #0]
 802b756:	061f      	lsls	r7, r3, #24
 802b758:	f851 6b04 	ldr.w	r6, [r1], #4
 802b75c:	d402      	bmi.n	802b764 <_printf_i+0x18c>
 802b75e:	065f      	lsls	r7, r3, #25
 802b760:	bf48      	it	mi
 802b762:	b2b6      	uxthmi	r6, r6
 802b764:	07df      	lsls	r7, r3, #31
 802b766:	bf48      	it	mi
 802b768:	f043 0320 	orrmi.w	r3, r3, #32
 802b76c:	6029      	str	r1, [r5, #0]
 802b76e:	bf48      	it	mi
 802b770:	6023      	strmi	r3, [r4, #0]
 802b772:	b91e      	cbnz	r6, 802b77c <_printf_i+0x1a4>
 802b774:	6823      	ldr	r3, [r4, #0]
 802b776:	f023 0320 	bic.w	r3, r3, #32
 802b77a:	6023      	str	r3, [r4, #0]
 802b77c:	2310      	movs	r3, #16
 802b77e:	e7a7      	b.n	802b6d0 <_printf_i+0xf8>
 802b780:	4824      	ldr	r0, [pc, #144]	; (802b814 <_printf_i+0x23c>)
 802b782:	e7e4      	b.n	802b74e <_printf_i+0x176>
 802b784:	4615      	mov	r5, r2
 802b786:	e7bd      	b.n	802b704 <_printf_i+0x12c>
 802b788:	682b      	ldr	r3, [r5, #0]
 802b78a:	6826      	ldr	r6, [r4, #0]
 802b78c:	6961      	ldr	r1, [r4, #20]
 802b78e:	1d18      	adds	r0, r3, #4
 802b790:	6028      	str	r0, [r5, #0]
 802b792:	0635      	lsls	r5, r6, #24
 802b794:	681b      	ldr	r3, [r3, #0]
 802b796:	d501      	bpl.n	802b79c <_printf_i+0x1c4>
 802b798:	6019      	str	r1, [r3, #0]
 802b79a:	e002      	b.n	802b7a2 <_printf_i+0x1ca>
 802b79c:	0670      	lsls	r0, r6, #25
 802b79e:	d5fb      	bpl.n	802b798 <_printf_i+0x1c0>
 802b7a0:	8019      	strh	r1, [r3, #0]
 802b7a2:	2300      	movs	r3, #0
 802b7a4:	6123      	str	r3, [r4, #16]
 802b7a6:	4615      	mov	r5, r2
 802b7a8:	e7bc      	b.n	802b724 <_printf_i+0x14c>
 802b7aa:	682b      	ldr	r3, [r5, #0]
 802b7ac:	1d1a      	adds	r2, r3, #4
 802b7ae:	602a      	str	r2, [r5, #0]
 802b7b0:	681d      	ldr	r5, [r3, #0]
 802b7b2:	6862      	ldr	r2, [r4, #4]
 802b7b4:	2100      	movs	r1, #0
 802b7b6:	4628      	mov	r0, r5
 802b7b8:	f7d4 fd7a 	bl	80002b0 <memchr>
 802b7bc:	b108      	cbz	r0, 802b7c2 <_printf_i+0x1ea>
 802b7be:	1b40      	subs	r0, r0, r5
 802b7c0:	6060      	str	r0, [r4, #4]
 802b7c2:	6863      	ldr	r3, [r4, #4]
 802b7c4:	6123      	str	r3, [r4, #16]
 802b7c6:	2300      	movs	r3, #0
 802b7c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b7cc:	e7aa      	b.n	802b724 <_printf_i+0x14c>
 802b7ce:	6923      	ldr	r3, [r4, #16]
 802b7d0:	462a      	mov	r2, r5
 802b7d2:	4649      	mov	r1, r9
 802b7d4:	4640      	mov	r0, r8
 802b7d6:	47d0      	blx	sl
 802b7d8:	3001      	adds	r0, #1
 802b7da:	d0ad      	beq.n	802b738 <_printf_i+0x160>
 802b7dc:	6823      	ldr	r3, [r4, #0]
 802b7de:	079b      	lsls	r3, r3, #30
 802b7e0:	d413      	bmi.n	802b80a <_printf_i+0x232>
 802b7e2:	68e0      	ldr	r0, [r4, #12]
 802b7e4:	9b03      	ldr	r3, [sp, #12]
 802b7e6:	4298      	cmp	r0, r3
 802b7e8:	bfb8      	it	lt
 802b7ea:	4618      	movlt	r0, r3
 802b7ec:	e7a6      	b.n	802b73c <_printf_i+0x164>
 802b7ee:	2301      	movs	r3, #1
 802b7f0:	4632      	mov	r2, r6
 802b7f2:	4649      	mov	r1, r9
 802b7f4:	4640      	mov	r0, r8
 802b7f6:	47d0      	blx	sl
 802b7f8:	3001      	adds	r0, #1
 802b7fa:	d09d      	beq.n	802b738 <_printf_i+0x160>
 802b7fc:	3501      	adds	r5, #1
 802b7fe:	68e3      	ldr	r3, [r4, #12]
 802b800:	9903      	ldr	r1, [sp, #12]
 802b802:	1a5b      	subs	r3, r3, r1
 802b804:	42ab      	cmp	r3, r5
 802b806:	dcf2      	bgt.n	802b7ee <_printf_i+0x216>
 802b808:	e7eb      	b.n	802b7e2 <_printf_i+0x20a>
 802b80a:	2500      	movs	r5, #0
 802b80c:	f104 0619 	add.w	r6, r4, #25
 802b810:	e7f5      	b.n	802b7fe <_printf_i+0x226>
 802b812:	bf00      	nop
 802b814:	08043151 	.word	0x08043151
 802b818:	08043162 	.word	0x08043162

0802b81c <__sflush_r>:
 802b81c:	898a      	ldrh	r2, [r1, #12]
 802b81e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b822:	4605      	mov	r5, r0
 802b824:	0710      	lsls	r0, r2, #28
 802b826:	460c      	mov	r4, r1
 802b828:	d458      	bmi.n	802b8dc <__sflush_r+0xc0>
 802b82a:	684b      	ldr	r3, [r1, #4]
 802b82c:	2b00      	cmp	r3, #0
 802b82e:	dc05      	bgt.n	802b83c <__sflush_r+0x20>
 802b830:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802b832:	2b00      	cmp	r3, #0
 802b834:	dc02      	bgt.n	802b83c <__sflush_r+0x20>
 802b836:	2000      	movs	r0, #0
 802b838:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b83c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b83e:	2e00      	cmp	r6, #0
 802b840:	d0f9      	beq.n	802b836 <__sflush_r+0x1a>
 802b842:	2300      	movs	r3, #0
 802b844:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802b848:	682f      	ldr	r7, [r5, #0]
 802b84a:	6a21      	ldr	r1, [r4, #32]
 802b84c:	602b      	str	r3, [r5, #0]
 802b84e:	d032      	beq.n	802b8b6 <__sflush_r+0x9a>
 802b850:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802b852:	89a3      	ldrh	r3, [r4, #12]
 802b854:	075a      	lsls	r2, r3, #29
 802b856:	d505      	bpl.n	802b864 <__sflush_r+0x48>
 802b858:	6863      	ldr	r3, [r4, #4]
 802b85a:	1ac0      	subs	r0, r0, r3
 802b85c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802b85e:	b10b      	cbz	r3, 802b864 <__sflush_r+0x48>
 802b860:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802b862:	1ac0      	subs	r0, r0, r3
 802b864:	2300      	movs	r3, #0
 802b866:	4602      	mov	r2, r0
 802b868:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b86a:	6a21      	ldr	r1, [r4, #32]
 802b86c:	4628      	mov	r0, r5
 802b86e:	47b0      	blx	r6
 802b870:	1c43      	adds	r3, r0, #1
 802b872:	89a3      	ldrh	r3, [r4, #12]
 802b874:	d106      	bne.n	802b884 <__sflush_r+0x68>
 802b876:	6829      	ldr	r1, [r5, #0]
 802b878:	291d      	cmp	r1, #29
 802b87a:	d82b      	bhi.n	802b8d4 <__sflush_r+0xb8>
 802b87c:	4a29      	ldr	r2, [pc, #164]	; (802b924 <__sflush_r+0x108>)
 802b87e:	410a      	asrs	r2, r1
 802b880:	07d6      	lsls	r6, r2, #31
 802b882:	d427      	bmi.n	802b8d4 <__sflush_r+0xb8>
 802b884:	2200      	movs	r2, #0
 802b886:	6062      	str	r2, [r4, #4]
 802b888:	04d9      	lsls	r1, r3, #19
 802b88a:	6922      	ldr	r2, [r4, #16]
 802b88c:	6022      	str	r2, [r4, #0]
 802b88e:	d504      	bpl.n	802b89a <__sflush_r+0x7e>
 802b890:	1c42      	adds	r2, r0, #1
 802b892:	d101      	bne.n	802b898 <__sflush_r+0x7c>
 802b894:	682b      	ldr	r3, [r5, #0]
 802b896:	b903      	cbnz	r3, 802b89a <__sflush_r+0x7e>
 802b898:	6560      	str	r0, [r4, #84]	; 0x54
 802b89a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b89c:	602f      	str	r7, [r5, #0]
 802b89e:	2900      	cmp	r1, #0
 802b8a0:	d0c9      	beq.n	802b836 <__sflush_r+0x1a>
 802b8a2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b8a6:	4299      	cmp	r1, r3
 802b8a8:	d002      	beq.n	802b8b0 <__sflush_r+0x94>
 802b8aa:	4628      	mov	r0, r5
 802b8ac:	f7ff fc96 	bl	802b1dc <_free_r>
 802b8b0:	2000      	movs	r0, #0
 802b8b2:	6360      	str	r0, [r4, #52]	; 0x34
 802b8b4:	e7c0      	b.n	802b838 <__sflush_r+0x1c>
 802b8b6:	2301      	movs	r3, #1
 802b8b8:	4628      	mov	r0, r5
 802b8ba:	47b0      	blx	r6
 802b8bc:	1c41      	adds	r1, r0, #1
 802b8be:	d1c8      	bne.n	802b852 <__sflush_r+0x36>
 802b8c0:	682b      	ldr	r3, [r5, #0]
 802b8c2:	2b00      	cmp	r3, #0
 802b8c4:	d0c5      	beq.n	802b852 <__sflush_r+0x36>
 802b8c6:	2b1d      	cmp	r3, #29
 802b8c8:	d001      	beq.n	802b8ce <__sflush_r+0xb2>
 802b8ca:	2b16      	cmp	r3, #22
 802b8cc:	d101      	bne.n	802b8d2 <__sflush_r+0xb6>
 802b8ce:	602f      	str	r7, [r5, #0]
 802b8d0:	e7b1      	b.n	802b836 <__sflush_r+0x1a>
 802b8d2:	89a3      	ldrh	r3, [r4, #12]
 802b8d4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b8d8:	81a3      	strh	r3, [r4, #12]
 802b8da:	e7ad      	b.n	802b838 <__sflush_r+0x1c>
 802b8dc:	690f      	ldr	r7, [r1, #16]
 802b8de:	2f00      	cmp	r7, #0
 802b8e0:	d0a9      	beq.n	802b836 <__sflush_r+0x1a>
 802b8e2:	0793      	lsls	r3, r2, #30
 802b8e4:	680e      	ldr	r6, [r1, #0]
 802b8e6:	bf08      	it	eq
 802b8e8:	694b      	ldreq	r3, [r1, #20]
 802b8ea:	600f      	str	r7, [r1, #0]
 802b8ec:	bf18      	it	ne
 802b8ee:	2300      	movne	r3, #0
 802b8f0:	eba6 0807 	sub.w	r8, r6, r7
 802b8f4:	608b      	str	r3, [r1, #8]
 802b8f6:	f1b8 0f00 	cmp.w	r8, #0
 802b8fa:	dd9c      	ble.n	802b836 <__sflush_r+0x1a>
 802b8fc:	6a21      	ldr	r1, [r4, #32]
 802b8fe:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802b900:	4643      	mov	r3, r8
 802b902:	463a      	mov	r2, r7
 802b904:	4628      	mov	r0, r5
 802b906:	47b0      	blx	r6
 802b908:	2800      	cmp	r0, #0
 802b90a:	dc06      	bgt.n	802b91a <__sflush_r+0xfe>
 802b90c:	89a3      	ldrh	r3, [r4, #12]
 802b90e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b912:	81a3      	strh	r3, [r4, #12]
 802b914:	f04f 30ff 	mov.w	r0, #4294967295
 802b918:	e78e      	b.n	802b838 <__sflush_r+0x1c>
 802b91a:	4407      	add	r7, r0
 802b91c:	eba8 0800 	sub.w	r8, r8, r0
 802b920:	e7e9      	b.n	802b8f6 <__sflush_r+0xda>
 802b922:	bf00      	nop
 802b924:	dfbffffe 	.word	0xdfbffffe

0802b928 <_fflush_r>:
 802b928:	b538      	push	{r3, r4, r5, lr}
 802b92a:	690b      	ldr	r3, [r1, #16]
 802b92c:	4605      	mov	r5, r0
 802b92e:	460c      	mov	r4, r1
 802b930:	b913      	cbnz	r3, 802b938 <_fflush_r+0x10>
 802b932:	2500      	movs	r5, #0
 802b934:	4628      	mov	r0, r5
 802b936:	bd38      	pop	{r3, r4, r5, pc}
 802b938:	b118      	cbz	r0, 802b942 <_fflush_r+0x1a>
 802b93a:	6a03      	ldr	r3, [r0, #32]
 802b93c:	b90b      	cbnz	r3, 802b942 <_fflush_r+0x1a>
 802b93e:	f7ff fa2f 	bl	802ada0 <__sinit>
 802b942:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b946:	2b00      	cmp	r3, #0
 802b948:	d0f3      	beq.n	802b932 <_fflush_r+0xa>
 802b94a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802b94c:	07d0      	lsls	r0, r2, #31
 802b94e:	d404      	bmi.n	802b95a <_fflush_r+0x32>
 802b950:	0599      	lsls	r1, r3, #22
 802b952:	d402      	bmi.n	802b95a <_fflush_r+0x32>
 802b954:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b956:	f7ff fbd2 	bl	802b0fe <__retarget_lock_acquire_recursive>
 802b95a:	4628      	mov	r0, r5
 802b95c:	4621      	mov	r1, r4
 802b95e:	f7ff ff5d 	bl	802b81c <__sflush_r>
 802b962:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802b964:	07da      	lsls	r2, r3, #31
 802b966:	4605      	mov	r5, r0
 802b968:	d4e4      	bmi.n	802b934 <_fflush_r+0xc>
 802b96a:	89a3      	ldrh	r3, [r4, #12]
 802b96c:	059b      	lsls	r3, r3, #22
 802b96e:	d4e1      	bmi.n	802b934 <_fflush_r+0xc>
 802b970:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b972:	f7ff fbc5 	bl	802b100 <__retarget_lock_release_recursive>
 802b976:	e7dd      	b.n	802b934 <_fflush_r+0xc>

0802b978 <__swbuf_r>:
 802b978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b97a:	460e      	mov	r6, r1
 802b97c:	4614      	mov	r4, r2
 802b97e:	4605      	mov	r5, r0
 802b980:	b118      	cbz	r0, 802b98a <__swbuf_r+0x12>
 802b982:	6a03      	ldr	r3, [r0, #32]
 802b984:	b90b      	cbnz	r3, 802b98a <__swbuf_r+0x12>
 802b986:	f7ff fa0b 	bl	802ada0 <__sinit>
 802b98a:	69a3      	ldr	r3, [r4, #24]
 802b98c:	60a3      	str	r3, [r4, #8]
 802b98e:	89a3      	ldrh	r3, [r4, #12]
 802b990:	071a      	lsls	r2, r3, #28
 802b992:	d525      	bpl.n	802b9e0 <__swbuf_r+0x68>
 802b994:	6923      	ldr	r3, [r4, #16]
 802b996:	b31b      	cbz	r3, 802b9e0 <__swbuf_r+0x68>
 802b998:	6823      	ldr	r3, [r4, #0]
 802b99a:	6922      	ldr	r2, [r4, #16]
 802b99c:	1a98      	subs	r0, r3, r2
 802b99e:	6963      	ldr	r3, [r4, #20]
 802b9a0:	b2f6      	uxtb	r6, r6
 802b9a2:	4283      	cmp	r3, r0
 802b9a4:	4637      	mov	r7, r6
 802b9a6:	dc04      	bgt.n	802b9b2 <__swbuf_r+0x3a>
 802b9a8:	4621      	mov	r1, r4
 802b9aa:	4628      	mov	r0, r5
 802b9ac:	f7ff ffbc 	bl	802b928 <_fflush_r>
 802b9b0:	b9e0      	cbnz	r0, 802b9ec <__swbuf_r+0x74>
 802b9b2:	68a3      	ldr	r3, [r4, #8]
 802b9b4:	3b01      	subs	r3, #1
 802b9b6:	60a3      	str	r3, [r4, #8]
 802b9b8:	6823      	ldr	r3, [r4, #0]
 802b9ba:	1c5a      	adds	r2, r3, #1
 802b9bc:	6022      	str	r2, [r4, #0]
 802b9be:	701e      	strb	r6, [r3, #0]
 802b9c0:	6962      	ldr	r2, [r4, #20]
 802b9c2:	1c43      	adds	r3, r0, #1
 802b9c4:	429a      	cmp	r2, r3
 802b9c6:	d004      	beq.n	802b9d2 <__swbuf_r+0x5a>
 802b9c8:	89a3      	ldrh	r3, [r4, #12]
 802b9ca:	07db      	lsls	r3, r3, #31
 802b9cc:	d506      	bpl.n	802b9dc <__swbuf_r+0x64>
 802b9ce:	2e0a      	cmp	r6, #10
 802b9d0:	d104      	bne.n	802b9dc <__swbuf_r+0x64>
 802b9d2:	4621      	mov	r1, r4
 802b9d4:	4628      	mov	r0, r5
 802b9d6:	f7ff ffa7 	bl	802b928 <_fflush_r>
 802b9da:	b938      	cbnz	r0, 802b9ec <__swbuf_r+0x74>
 802b9dc:	4638      	mov	r0, r7
 802b9de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b9e0:	4621      	mov	r1, r4
 802b9e2:	4628      	mov	r0, r5
 802b9e4:	f000 f806 	bl	802b9f4 <__swsetup_r>
 802b9e8:	2800      	cmp	r0, #0
 802b9ea:	d0d5      	beq.n	802b998 <__swbuf_r+0x20>
 802b9ec:	f04f 37ff 	mov.w	r7, #4294967295
 802b9f0:	e7f4      	b.n	802b9dc <__swbuf_r+0x64>
	...

0802b9f4 <__swsetup_r>:
 802b9f4:	b538      	push	{r3, r4, r5, lr}
 802b9f6:	4b2a      	ldr	r3, [pc, #168]	; (802baa0 <__swsetup_r+0xac>)
 802b9f8:	4605      	mov	r5, r0
 802b9fa:	6818      	ldr	r0, [r3, #0]
 802b9fc:	460c      	mov	r4, r1
 802b9fe:	b118      	cbz	r0, 802ba08 <__swsetup_r+0x14>
 802ba00:	6a03      	ldr	r3, [r0, #32]
 802ba02:	b90b      	cbnz	r3, 802ba08 <__swsetup_r+0x14>
 802ba04:	f7ff f9cc 	bl	802ada0 <__sinit>
 802ba08:	89a3      	ldrh	r3, [r4, #12]
 802ba0a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ba0e:	0718      	lsls	r0, r3, #28
 802ba10:	d422      	bmi.n	802ba58 <__swsetup_r+0x64>
 802ba12:	06d9      	lsls	r1, r3, #27
 802ba14:	d407      	bmi.n	802ba26 <__swsetup_r+0x32>
 802ba16:	2309      	movs	r3, #9
 802ba18:	602b      	str	r3, [r5, #0]
 802ba1a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802ba1e:	81a3      	strh	r3, [r4, #12]
 802ba20:	f04f 30ff 	mov.w	r0, #4294967295
 802ba24:	e034      	b.n	802ba90 <__swsetup_r+0x9c>
 802ba26:	0758      	lsls	r0, r3, #29
 802ba28:	d512      	bpl.n	802ba50 <__swsetup_r+0x5c>
 802ba2a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ba2c:	b141      	cbz	r1, 802ba40 <__swsetup_r+0x4c>
 802ba2e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802ba32:	4299      	cmp	r1, r3
 802ba34:	d002      	beq.n	802ba3c <__swsetup_r+0x48>
 802ba36:	4628      	mov	r0, r5
 802ba38:	f7ff fbd0 	bl	802b1dc <_free_r>
 802ba3c:	2300      	movs	r3, #0
 802ba3e:	6363      	str	r3, [r4, #52]	; 0x34
 802ba40:	89a3      	ldrh	r3, [r4, #12]
 802ba42:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802ba46:	81a3      	strh	r3, [r4, #12]
 802ba48:	2300      	movs	r3, #0
 802ba4a:	6063      	str	r3, [r4, #4]
 802ba4c:	6923      	ldr	r3, [r4, #16]
 802ba4e:	6023      	str	r3, [r4, #0]
 802ba50:	89a3      	ldrh	r3, [r4, #12]
 802ba52:	f043 0308 	orr.w	r3, r3, #8
 802ba56:	81a3      	strh	r3, [r4, #12]
 802ba58:	6923      	ldr	r3, [r4, #16]
 802ba5a:	b94b      	cbnz	r3, 802ba70 <__swsetup_r+0x7c>
 802ba5c:	89a3      	ldrh	r3, [r4, #12]
 802ba5e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802ba62:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802ba66:	d003      	beq.n	802ba70 <__swsetup_r+0x7c>
 802ba68:	4621      	mov	r1, r4
 802ba6a:	4628      	mov	r0, r5
 802ba6c:	f000 f840 	bl	802baf0 <__smakebuf_r>
 802ba70:	89a0      	ldrh	r0, [r4, #12]
 802ba72:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ba76:	f010 0301 	ands.w	r3, r0, #1
 802ba7a:	d00a      	beq.n	802ba92 <__swsetup_r+0x9e>
 802ba7c:	2300      	movs	r3, #0
 802ba7e:	60a3      	str	r3, [r4, #8]
 802ba80:	6963      	ldr	r3, [r4, #20]
 802ba82:	425b      	negs	r3, r3
 802ba84:	61a3      	str	r3, [r4, #24]
 802ba86:	6923      	ldr	r3, [r4, #16]
 802ba88:	b943      	cbnz	r3, 802ba9c <__swsetup_r+0xa8>
 802ba8a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ba8e:	d1c4      	bne.n	802ba1a <__swsetup_r+0x26>
 802ba90:	bd38      	pop	{r3, r4, r5, pc}
 802ba92:	0781      	lsls	r1, r0, #30
 802ba94:	bf58      	it	pl
 802ba96:	6963      	ldrpl	r3, [r4, #20]
 802ba98:	60a3      	str	r3, [r4, #8]
 802ba9a:	e7f4      	b.n	802ba86 <__swsetup_r+0x92>
 802ba9c:	2000      	movs	r0, #0
 802ba9e:	e7f7      	b.n	802ba90 <__swsetup_r+0x9c>
 802baa0:	20000160 	.word	0x20000160

0802baa4 <__swhatbuf_r>:
 802baa4:	b570      	push	{r4, r5, r6, lr}
 802baa6:	460c      	mov	r4, r1
 802baa8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802baac:	2900      	cmp	r1, #0
 802baae:	b096      	sub	sp, #88	; 0x58
 802bab0:	4615      	mov	r5, r2
 802bab2:	461e      	mov	r6, r3
 802bab4:	da0d      	bge.n	802bad2 <__swhatbuf_r+0x2e>
 802bab6:	89a3      	ldrh	r3, [r4, #12]
 802bab8:	f013 0f80 	tst.w	r3, #128	; 0x80
 802babc:	f04f 0100 	mov.w	r1, #0
 802bac0:	bf0c      	ite	eq
 802bac2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802bac6:	2340      	movne	r3, #64	; 0x40
 802bac8:	2000      	movs	r0, #0
 802baca:	6031      	str	r1, [r6, #0]
 802bacc:	602b      	str	r3, [r5, #0]
 802bace:	b016      	add	sp, #88	; 0x58
 802bad0:	bd70      	pop	{r4, r5, r6, pc}
 802bad2:	466a      	mov	r2, sp
 802bad4:	f000 f848 	bl	802bb68 <_fstat_r>
 802bad8:	2800      	cmp	r0, #0
 802bada:	dbec      	blt.n	802bab6 <__swhatbuf_r+0x12>
 802badc:	9901      	ldr	r1, [sp, #4]
 802bade:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802bae2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802bae6:	4259      	negs	r1, r3
 802bae8:	4159      	adcs	r1, r3
 802baea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802baee:	e7eb      	b.n	802bac8 <__swhatbuf_r+0x24>

0802baf0 <__smakebuf_r>:
 802baf0:	898b      	ldrh	r3, [r1, #12]
 802baf2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802baf4:	079d      	lsls	r5, r3, #30
 802baf6:	4606      	mov	r6, r0
 802baf8:	460c      	mov	r4, r1
 802bafa:	d507      	bpl.n	802bb0c <__smakebuf_r+0x1c>
 802bafc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802bb00:	6023      	str	r3, [r4, #0]
 802bb02:	6123      	str	r3, [r4, #16]
 802bb04:	2301      	movs	r3, #1
 802bb06:	6163      	str	r3, [r4, #20]
 802bb08:	b002      	add	sp, #8
 802bb0a:	bd70      	pop	{r4, r5, r6, pc}
 802bb0c:	ab01      	add	r3, sp, #4
 802bb0e:	466a      	mov	r2, sp
 802bb10:	f7ff ffc8 	bl	802baa4 <__swhatbuf_r>
 802bb14:	9900      	ldr	r1, [sp, #0]
 802bb16:	4605      	mov	r5, r0
 802bb18:	4630      	mov	r0, r6
 802bb1a:	f7ff f81b 	bl	802ab54 <_malloc_r>
 802bb1e:	b948      	cbnz	r0, 802bb34 <__smakebuf_r+0x44>
 802bb20:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bb24:	059a      	lsls	r2, r3, #22
 802bb26:	d4ef      	bmi.n	802bb08 <__smakebuf_r+0x18>
 802bb28:	f023 0303 	bic.w	r3, r3, #3
 802bb2c:	f043 0302 	orr.w	r3, r3, #2
 802bb30:	81a3      	strh	r3, [r4, #12]
 802bb32:	e7e3      	b.n	802bafc <__smakebuf_r+0xc>
 802bb34:	89a3      	ldrh	r3, [r4, #12]
 802bb36:	6020      	str	r0, [r4, #0]
 802bb38:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802bb3c:	81a3      	strh	r3, [r4, #12]
 802bb3e:	9b00      	ldr	r3, [sp, #0]
 802bb40:	6163      	str	r3, [r4, #20]
 802bb42:	9b01      	ldr	r3, [sp, #4]
 802bb44:	6120      	str	r0, [r4, #16]
 802bb46:	b15b      	cbz	r3, 802bb60 <__smakebuf_r+0x70>
 802bb48:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bb4c:	4630      	mov	r0, r6
 802bb4e:	f000 f81d 	bl	802bb8c <_isatty_r>
 802bb52:	b128      	cbz	r0, 802bb60 <__smakebuf_r+0x70>
 802bb54:	89a3      	ldrh	r3, [r4, #12]
 802bb56:	f023 0303 	bic.w	r3, r3, #3
 802bb5a:	f043 0301 	orr.w	r3, r3, #1
 802bb5e:	81a3      	strh	r3, [r4, #12]
 802bb60:	89a3      	ldrh	r3, [r4, #12]
 802bb62:	431d      	orrs	r5, r3
 802bb64:	81a5      	strh	r5, [r4, #12]
 802bb66:	e7cf      	b.n	802bb08 <__smakebuf_r+0x18>

0802bb68 <_fstat_r>:
 802bb68:	b538      	push	{r3, r4, r5, lr}
 802bb6a:	4d07      	ldr	r5, [pc, #28]	; (802bb88 <_fstat_r+0x20>)
 802bb6c:	2300      	movs	r3, #0
 802bb6e:	4604      	mov	r4, r0
 802bb70:	4608      	mov	r0, r1
 802bb72:	4611      	mov	r1, r2
 802bb74:	602b      	str	r3, [r5, #0]
 802bb76:	f7d6 fb93 	bl	80022a0 <_fstat>
 802bb7a:	1c43      	adds	r3, r0, #1
 802bb7c:	d102      	bne.n	802bb84 <_fstat_r+0x1c>
 802bb7e:	682b      	ldr	r3, [r5, #0]
 802bb80:	b103      	cbz	r3, 802bb84 <_fstat_r+0x1c>
 802bb82:	6023      	str	r3, [r4, #0]
 802bb84:	bd38      	pop	{r3, r4, r5, pc}
 802bb86:	bf00      	nop
 802bb88:	2001383c 	.word	0x2001383c

0802bb8c <_isatty_r>:
 802bb8c:	b538      	push	{r3, r4, r5, lr}
 802bb8e:	4d06      	ldr	r5, [pc, #24]	; (802bba8 <_isatty_r+0x1c>)
 802bb90:	2300      	movs	r3, #0
 802bb92:	4604      	mov	r4, r0
 802bb94:	4608      	mov	r0, r1
 802bb96:	602b      	str	r3, [r5, #0]
 802bb98:	f7d6 fb88 	bl	80022ac <_isatty>
 802bb9c:	1c43      	adds	r3, r0, #1
 802bb9e:	d102      	bne.n	802bba6 <_isatty_r+0x1a>
 802bba0:	682b      	ldr	r3, [r5, #0]
 802bba2:	b103      	cbz	r3, 802bba6 <_isatty_r+0x1a>
 802bba4:	6023      	str	r3, [r4, #0]
 802bba6:	bd38      	pop	{r3, r4, r5, pc}
 802bba8:	2001383c 	.word	0x2001383c

0802bbac <_init>:
 802bbac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bbae:	bf00      	nop
 802bbb0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bbb2:	bc08      	pop	{r3}
 802bbb4:	469e      	mov	lr, r3
 802bbb6:	4770      	bx	lr

0802bbb8 <_fini>:
 802bbb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bbba:	bf00      	nop
 802bbbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bbbe:	bc08      	pop	{r3}
 802bbc0:	469e      	mov	lr, r3
 802bbc2:	4770      	bx	lr
